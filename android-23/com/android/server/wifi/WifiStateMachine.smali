.class public Lcom/android/server/wifi/WifiStateMachine;
.super Lcom/android/internal/util/StateMachine;
.source "WifiStateMachine.java"

# interfaces
.implements Lcom/android/server/wifi/WifiNative$WifiPnoEventHandler;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wifi/WifiStateMachine$WifiScanListener;,
        Lcom/android/server/wifi/WifiStateMachine$TetherStateChange;,
        Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;,
        Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;,
        Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;,
        Lcom/android/server/wifi/WifiStateMachine$DefaultState;,
        Lcom/android/server/wifi/WifiStateMachine$InitialState;,
        Lcom/android/server/wifi/WifiStateMachine$SupplicantStartingState;,
        Lcom/android/server/wifi/WifiStateMachine$SupplicantStartedState;,
        Lcom/android/server/wifi/WifiStateMachine$SupplicantStoppingState;,
        Lcom/android/server/wifi/WifiStateMachine$DriverStartingState;,
        Lcom/android/server/wifi/WifiStateMachine$DriverStartedState;,
        Lcom/android/server/wifi/WifiStateMachine$WaitForP2pDisableState;,
        Lcom/android/server/wifi/WifiStateMachine$DriverStoppingState;,
        Lcom/android/server/wifi/WifiStateMachine$DriverStoppedState;,
        Lcom/android/server/wifi/WifiStateMachine$ScanModeState;,
        Lcom/android/server/wifi/WifiStateMachine$ConnectModeState;,
        Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;,
        Lcom/android/server/wifi/WifiStateMachine$L2ConnectedState;,
        Lcom/android/server/wifi/WifiStateMachine$ObtainingIpState;,
        Lcom/android/server/wifi/WifiStateMachine$VerifyingLinkState;,
        Lcom/android/server/wifi/WifiStateMachine$RoamingState;,
        Lcom/android/server/wifi/WifiStateMachine$ConnectedState;,
        Lcom/android/server/wifi/WifiStateMachine$DisconnectingState;,
        Lcom/android/server/wifi/WifiStateMachine$DisconnectedState;,
        Lcom/android/server/wifi/WifiStateMachine$WpsRunningState;,
        Lcom/android/server/wifi/WifiStateMachine$SoftApStartingState;,
        Lcom/android/server/wifi/WifiStateMachine$SoftApStartedState;,
        Lcom/android/server/wifi/WifiStateMachine$TetheringState;,
        Lcom/android/server/wifi/WifiStateMachine$TetheredState;,
        Lcom/android/server/wifi/WifiStateMachine$UntetheringState;
    }
.end annotation


# static fields
.field private static final ACTION_DELAYED_DRIVER_STOP:Ljava/lang/String; = "com.android.server.WifiManager.action.DELAYED_DRIVER_STOP"

.field private static final ACTION_START_PNO:Ljava/lang/String; = "com.android.server.WifiManager.action.START_PNO"

.field private static final ACTION_START_SCAN:Ljava/lang/String; = "com.android.server.WifiManager.action.START_SCAN"

.field private static final ADD_OR_UPDATE_SOURCE:I = -0x3

.field static final BASE:I = 0x20000

.field private static final BSSID_STR:Ljava/lang/String; = "bssid="

.field static final CMD_ACCEPT_UNVALIDATED:I = 0x20099

.field static final CMD_ADD_OR_UPDATE_NETWORK:I = 0x20034

.field static final CMD_ASSOCIATED_BSSID:I = 0x20093

.field static final CMD_AUTO_CONNECT:I = 0x2008f

.field static final CMD_AUTO_ROAM:I = 0x20091

.field static final CMD_AUTO_SAVE_NETWORK:I = 0x20092

.field static final CMD_BLACKLIST_NETWORK:I = 0x20038

.field static final CMD_BLUETOOTH_ADAPTER_STATE_CHANGE:I = 0x2001f

.field public static final CMD_BOOT_COMPLETED:I = 0x20086

.field static final CMD_CLEAR_BLACKLIST:I = 0x20039

.field static final CMD_DELAYED_NETWORK_DISCONNECT:I = 0x20057

.field static final CMD_DELAYED_STOP_DRIVER:I = 0x20012

.field static final CMD_DISABLE_EPHEMERAL_NETWORK:I = 0x20062

.field public static final CMD_DISABLE_P2P_REQ:I = 0x20084

.field public static final CMD_DISABLE_P2P_RSP:I = 0x20085

.field static final CMD_DISCONNECT:I = 0x20049

.field static final CMD_DISCONNECTING_WATCHDOG_TIMER:I = 0x20060

.field static final CMD_DRIVER_START_TIMED_OUT:I = 0x20013

.field static final CMD_ENABLE_ALL_NETWORKS:I = 0x20037

.field static final CMD_ENABLE_NETWORK:I = 0x20036

.field public static final CMD_ENABLE_P2P:I = 0x20083

.field static final CMD_ENABLE_RSSI_POLL:I = 0x20052

.field static final CMD_ENABLE_TDLS:I = 0x2005c

.field static final CMD_FIRMWARE_ALERT:I = 0x20064

.field static final CMD_GET_CAPABILITY_FREQ:I = 0x2003c

.field static final CMD_GET_CONFIGURED_NETWORKS:I = 0x2003b

.field static final CMD_GET_CONNECTION_STATISTICS:I = 0x2004c

.field static final CMD_GET_LINK_LAYER_STATS:I = 0x2003f

.field static final CMD_GET_MATCHING_CONFIG:I = 0x20063

.field static final CMD_GET_PRIVILEGED_CONFIGURED_NETWORKS:I = 0x2003e

.field static final CMD_GET_SUPPORTED_FEATURES:I = 0x2003d

.field static final CMD_IP_CONFIGURATION_LOST:I = 0x2008b

.field static final CMD_IP_CONFIGURATION_SUCCESSFUL:I = 0x2008a

.field static final CMD_IP_REACHABILITY_LOST:I = 0x20095

.field static final CMD_NETWORK_STATUS:I = 0x20094

.field static final CMD_NO_NETWORKS_PERIODIC_SCAN:I = 0x20058

.field static final CMD_OBTAINING_IP_ADDRESS_WATCHDOG_TIMER:I = 0x2005d

.field static final CMD_PING_SUPPLICANT:I = 0x20033

.field static final CMD_PNO_NETWORK_FOUND:I = 0x2009c

.field static final CMD_REASSOCIATE:I = 0x2004b

.field static final CMD_RECONNECT:I = 0x2004a

.field static final CMD_RELOAD_TLS_AND_RECONNECT:I = 0x2008e

.field static final CMD_REMOVE_APP_CONFIGURATIONS:I = 0x20061

.field static final CMD_REMOVE_NETWORK:I = 0x20035

.field static final CMD_REMOVE_USER_CONFIGURATIONS:I = 0x20098

.field static final CMD_REQUEST_AP_CONFIG:I = 0x2001b

.field static final CMD_RESET_SUPPLICANT_STATE:I = 0x2006f

.field static final CMD_RESPONSE_AP_CONFIG:I = 0x2001c

.field static final CMD_RESTART_AUTOJOIN_OFFLOAD:I = 0x2009a

.field static final CMD_ROAM_WATCHDOG_TIMER:I = 0x2005e

.field static final CMD_RSSI_POLL:I = 0x20053

.field static final CMD_SAVE_CONFIG:I = 0x2003a

.field static final CMD_SCREEN_STATE_CHANGED:I = 0x2005f

.field static final CMD_SET_AP_CONFIG:I = 0x20019

.field static final CMD_SET_AP_CONFIG_COMPLETED:I = 0x2001a

.field static final CMD_SET_COUNTRY_CODE:I = 0x20050

.field static final CMD_SET_FREQUENCY_BAND:I = 0x2005a

.field static final CMD_SET_HIGH_PERF_MODE:I = 0x2004d

.field static final CMD_SET_OPERATIONAL_MODE:I = 0x20048

.field static final CMD_SET_SUSPEND_OPT_ENABLED:I = 0x20056

.field static final CMD_STARTED_GSCAN_DBG:I = 0x2009f

.field static final CMD_STARTED_PNO_DBG:I = 0x2009b

.field static final CMD_START_AP:I = 0x20015

.field static final CMD_START_AP_FAILURE:I = 0x20017

.field static final CMD_START_AP_SUCCESS:I = 0x20016

.field static final CMD_START_DRIVER:I = 0x2000d

.field static final CMD_START_PACKET_FILTERING:I = 0x20054

.field static final CMD_START_SCAN:I = 0x20047

.field static final CMD_START_SUPPLICANT:I = 0x2000b

.field static final CMD_STATIC_IP_FAILURE:I = 0x20010

.field static final CMD_STATIC_IP_SUCCESS:I = 0x2000f

.field static final CMD_STOP_AP:I = 0x20018

.field static final CMD_STOP_DRIVER:I = 0x2000e

.field static final CMD_STOP_PACKET_FILTERING:I = 0x20055

.field static final CMD_STOP_SUPPLICANT:I = 0x2000c

.field static final CMD_STOP_SUPPLICANT_FAILED:I = 0x20011

.field static final CMD_TARGET_BSSID:I = 0x2008d

.field static final CMD_TEST_NETWORK_DISCONNECT:I = 0x20059

.field static final CMD_TETHER_NOTIFICATION_TIMED_OUT:I = 0x2001e

.field static final CMD_TETHER_STATE_CHANGE:I = 0x2001d

.field static final CMD_UNWANTED_NETWORK:I = 0x20090

.field static final CMD_UPDATE_ASSOCIATED_SCAN_PERMISSION:I = 0x2009e

.field static final CMD_UPDATE_LINKPROPERTIES:I = 0x2008c

.field static final CONNECTED_SHORT_SCANS_DURATION_MILLI:I = 0x1d4c0

.field public static final CONNECT_MODE:I = 0x1

.field private static final CONNECT_TIMEOUT_MSEC:I = 0xbb8

.field private static final CUSTOMIZED_SCAN_SETTING:Ljava/lang/String; = "customized_scan_settings"

.field private static final CUSTOMIZED_SCAN_WORKSOURCE:Ljava/lang/String; = "customized_scan_worksource"

.field private static DBG:Z = false

.field private static final DEBUG_PARSE:Z = false

.field private static final DELAYED_STOP_COUNTER:Ljava/lang/String; = "DelayedStopCounter"

.field private static final DELIMITER_STR:Ljava/lang/String; = "===="

.field public static final DFS_RESTRICTED_SCAN_REQUEST:I = -0x6

.field static final DISCONNECTED_SHORT_SCANS_DURATION_MILLI:I = 0x1d4c0

.field static final DISCONNECTING_GUARD_TIMER_MSEC:I = 0x1388

.field private static final DRIVER_START_TIME_OUT_MSECS:I = 0x2710

.field private static final DRIVER_STOP_REQUEST:I = 0x0

.field private static final ENABLE_WIFI:I = -0x5

.field private static final END_STR:Ljava/lang/String; = "####"

.field private static final FAILURE:I = -0x1

.field private static final FLAGS_STR:Ljava/lang/String; = "flags="

.field private static final FREQ_STR:Ljava/lang/String; = "freq="

.field private static final GOOGLE_OUI:Ljava/lang/String; = "DA-A1-19"

.field private static final ID_STR:Ljava/lang/String; = "id="

.field private static final IE_STR:Ljava/lang/String; = "ie="

.field private static final LEVEL_STR:Ljava/lang/String; = "level="

.field private static final LINK_FLAPPING_DEBOUNCE_MSEC:I = 0x1b58

.field private static MESSAGE_HANDLING_STATUS_DEFERRED:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_DISCARD:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_FAIL:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_HANDLING_ERROR:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_LOOPED:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_OBSOLETE:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_OK:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_PROCESSED:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_REFUSED:I = 0x0

.field private static MESSAGE_HANDLING_STATUS_UNKNOWN:I = 0x0

.field private static final MIN_INTERVAL_ENABLE_ALL_NETWORKS_MS:I = 0x927c0

.field static final MULTICAST_V4:I = 0x0

.field static final MULTICAST_V6:I = 0x1

.field private static final NETWORKTYPE:Ljava/lang/String; = "WIFI"

.field private static final NETWORKTYPE_UNTRUSTED:Ljava/lang/String; = "WIFI_UT"

.field private static final NETWORK_STATUS_UNWANTED_DISABLE_AUTOJOIN:I = 0x2

.field private static final NETWORK_STATUS_UNWANTED_DISCONNECT:I = 0x0

.field private static final NETWORK_STATUS_UNWANTED_VALIDATION_FAILED:I = 0x1

.field static final OBTAINING_IP_ADDRESS_GUARD_TIMER_MSEC:I = 0x9c40

.field private static final ONE_HOUR_MILLI:I = 0x36ee80

.field private static PDBG:Z = false

.field public static final PNO_NETWORK_FOUND_SOURCE:I = -0x7

.field private static final PNO_START_REQUEST:I = 0x0

.field private static final POLL_RSSI_INTERVAL_MSECS:I = 0xbb8

.field static final ROAM_GUARD_TIMER_MSEC:I = 0x3a98

.field private static final SCAN_ALARM_SOURCE:I = -0x2

.field public static final SCAN_ONLY_MODE:I = 0x2

.field public static final SCAN_ONLY_WITH_WIFI_OFF_MODE:I = 0x3

.field static final SCAN_PERMISSION_UPDATE_THROTTLE_MILLI:J = 0x4e20L

.field private static final SCAN_REQUEST:I = 0x0

.field private static final SCAN_REQUEST_BUFFER_MAX_SIZE:I = 0xa

.field private static final SCAN_REQUEST_TIME:Ljava/lang/String; = "scan_request_time"

.field private static final SCAN_RESULT_CACHE_SIZE:I = 0xa0

.field private static final SCAN_WAKE_LOCK_TIME_OUT_MSECS:I = 0x1388

.field private static final SET_ALLOW_UNTRUSTED_SOURCE:I = -0x4

.field private static final SSID_STR:Ljava/lang/String; = "ssid="

.field private static final SUCCESS:I = 0x1

.field private static final SUPPLICANT_RESTART_INTERVAL_MSECS:I = 0x1388

.field private static final SUPPLICANT_RESTART_TRIES:I = 0x5

.field private static final SUSPEND_DUE_TO_DHCP:I = 0x1

.field private static final SUSPEND_DUE_TO_HIGH_PERF:I = 0x2

.field private static final SUSPEND_DUE_TO_SCREEN:I = 0x4

.field private static final TAG:Ljava/lang/String; = "WifiStateMachine"

.field private static final TETHER_NOTIFICATION_TIME_OUT_MSECS:I = 0x1388

.field private static final TSF_STR:Ljava/lang/String; = "tsf="

.field private static final UNKNOWN_SCAN_SOURCE:I = -0x1

.field private static USE_PAUSE_SCANS:Z = false

.field private static VDBG:Z = false

.field private static VVDBG:Z = false

.field static final frameworkMinScanIntervalSaneValue:I = 0x2710

.field private static mLogMessages:Z = false

.field private static mNotZero:Ljava/util/regex/Pattern; = null

.field private static mPnoResultFound:I = 0x0

.field private static mRandom:Ljava/util/Random; = null

.field static mRestartAutoJoinOffloadCounter:I = 0x0

.field private static final maxFullBandConnectedTimeIntervalMilli:J = 0x493e0L

.field private static sScanAlarmIntentCount:I

.field private static final scanResultPattern:Ljava/util/regex/Pattern;


# instance fields
.field private didBlackListBSSID:Z

.field disconnectingWatchdogCount:I

.field emptyScanResultCount:I

.field private fullBandConnectedTimeIntervalMilli:J

.field private lastConnectAttemptTimestamp:J

.field private lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

.field private lastFullBandConnectedTimeMilli:J

.field private lastLinkLayerStatsUpdate:J

.field private lastOntimeReportTimeStamp:J

.field private lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

.field private lastScanDuration:J

.field private lastScanFreqs:Ljava/lang/String;

.field private lastScreenStateChangeTimeStamp:J

.field private lastStartScanTimeStamp:J

.field private linkDebouncing:Z

.field private mAggressiveHandover:I

.field private mAlarmEnabled:Z

.field private mAlarmManager:Landroid/app/AlarmManager;

.field private mAutoRoaming:I

.field private final mBackgroundScanSupported:Z

.field mBadLinkspeedcount:I

.field private final mBatteryStats:Lcom/android/internal/app/IBatteryStats;

.field private mBluetoothConnectionActive:Z

.field private final mBufferedScanMsg:Ljava/util/Queue;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Queue",
            "<",
            "Landroid/os/Message;",
            ">;"
        }
    .end annotation
.end field

.field private mCm:Landroid/net/ConnectivityManager;

.field private mConnectModeState:Lcom/android/internal/util/State;

.field mConnectedModeGScanOffloadStarted:Z

.field private mConnectedState:Lcom/android/internal/util/State;

.field private mConnectionRequests:I

.field private mContext:Landroid/content/Context;

.field private final mCountryCodeSequence:Ljava/util/concurrent/atomic/AtomicInteger;

.field private final mDefaultFrameworkScanIntervalMs:I

.field private mDefaultState:Lcom/android/internal/util/State;

.field private mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

.field private mDelayedStopCounter:I

.field private mDhcpActive:Z

.field private mDhcpResults:Landroid/net/DhcpResults;

.field private final mDhcpResultsLock:Ljava/lang/Object;

.field private mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

.field private mDisconnectedPnoAlarmCount:I

.field private mDisconnectedState:Lcom/android/internal/util/State;

.field private mDisconnectedTimeStamp:J

.field private mDisconnectingState:Lcom/android/internal/util/State;

.field private mDriverSetCountryCode:Ljava/lang/String;

.field private mDriverStartToken:I

.field private mDriverStartedState:Lcom/android/internal/util/State;

.field private mDriverStartingState:Lcom/android/internal/util/State;

.field private final mDriverStopDelayMs:I

.field private mDriverStopIntent:Landroid/app/PendingIntent;

.field private mDriverStoppedState:Lcom/android/internal/util/State;

.field private mDriverStoppingState:Lcom/android/internal/util/State;

.field private mEnableAssociatedNetworkSwitchingInDevSettings:Z

.field private mEnableRssiPolling:Z

.field private mFilteringMulticastV4Packets:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private mFrequencyBand:Ljava/util/concurrent/atomic/AtomicInteger;

.field mGScanPeriodMilli:J

.field mGScanStartTimeMilli:J

.field private mHalBasedPnoDriverSupported:Z

.field private mHalBasedPnoEnableInDevSettings:Z

.field private mHalFeatureSet:I

.field private mInDelayedStop:Z

.field private mInitialState:Lcom/android/internal/util/State;

.field private final mInterfaceName:Ljava/lang/String;

.field private mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

.field private mIsFullScanOngoing:Z

.field private mIsRunning:Z

.field private mIsScanOngoing:Z

.field private mL2ConnectedState:Lcom/android/internal/util/State;

.field private mLastBssid:Ljava/lang/String;

.field private mLastDriverRoamAttempt:J

.field private mLastEnableAllNetworksTime:J

.field private mLastNetworkId:I

.field private final mLastRunningWifiUids:Landroid/os/WorkSource;

.field mLastScanPermissionUpdate:J

.field private mLastSignalLevel:I

.field mLazyRoamEnabled:Z

.field private mLegacyPnoEnabled:Z

.field private mLinkProperties:Landroid/net/LinkProperties;

.field private mNetlinkTracker:Lcom/android/server/net/NetlinkTracker;

.field private mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

.field private mNetworkCapabilities:Landroid/net/NetworkCapabilities;

.field private final mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

.field private mNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;

.field private mNetworkInfo:Landroid/net/NetworkInfo;

.field private final mNoNetworksPeriodicScan:I

.field private mNumScanResultsKnown:I

.field private mNumScanResultsReturned:I

.field private mNwService:Landroid/os/INetworkManagementService;

.field private mObtainingIpState:Lcom/android/internal/util/State;

.field private mOnTime:I

.field private mOnTimeAtLastReport:I

.field private mOnTimeLastReport:I

.field private mOnTimeScan:I

.field private mOnTimeScreenStateChange:I

.field private mOnTimeStartScan:I

.field private mOnTimeThisScan:I

.field private mOperationalMode:I

.field private final mP2pConnected:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private final mP2pSupported:Z

.field private mPeriodicScanToken:I

.field mPnoEnabled:Z

.field private mPnoIntent:Landroid/app/PendingIntent;

.field private final mPrimaryDeviceType:Ljava/lang/String;

.field private mReplyChannel:Lcom/android/internal/util/AsyncChannel;

.field private mReportedRunning:Z

.field private mRoamFailCount:I

.field private mRoamingState:Lcom/android/internal/util/State;

.field private mRssiPollToken:I

.field mRunningBeaconCount:I

.field private final mRunningWifiUids:Landroid/os/WorkSource;

.field private mRxTime:I

.field private mRxTimeLastReport:I

.field private mRxTimeScan:I

.field private mRxTimeStartScan:I

.field private mRxTimeThisScan:I

.field private mScanIntent:Landroid/app/PendingIntent;

.field private mScanModeState:Lcom/android/internal/util/State;

.field private final mScanResultCache:Landroid/util/LruCache;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/LruCache",
            "<",
            "Lcom/android/server/wifi/hotspot2/NetworkDetail;",
            "Lcom/android/server/wifi/ScanDetail;",
            ">;"
        }
    .end annotation
.end field

.field private mScanResults:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Lcom/android/server/wifi/ScanDetail;",
            ">;"
        }
    .end annotation
.end field

.field private mScanWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mScanWorkSource:Landroid/os/WorkSource;

.field private mScreenBroadcastReceived:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private mScreenOn:Z

.field private mSendScanResultsBroadcast:Z

.field private volatile mSetCountryCode:Ljava/lang/String;

.field private mSoftApStartedState:Lcom/android/internal/util/State;

.field private mSoftApStartingState:Lcom/android/internal/util/State;

.field private mSupplicantRestartCount:I

.field private mSupplicantScanIntervalMs:J

.field private mSupplicantStartedState:Lcom/android/internal/util/State;

.field private mSupplicantStartingState:Lcom/android/internal/util/State;

.field private mSupplicantStateTracker:Lcom/android/server/wifi/SupplicantStateTracker;

.field private mSupplicantStopFailureToken:I

.field private mSupplicantStoppingState:Lcom/android/internal/util/State;

.field private mSuspendOptNeedsDisabled:I

.field private mSuspendWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mTargetRoamBSSID:Ljava/lang/String;

.field private mTcpBufferSizes:Ljava/lang/String;

.field private mTemporarilyDisconnectWifi:Z

.field private mTetherInterfaceName:Ljava/lang/String;

.field private mTetherToken:I

.field private mTetheredState:Lcom/android/internal/util/State;

.field private mTetheringState:Lcom/android/internal/util/State;

.field private mTxTime:I

.field private mTxTimeLastReport:I

.field private mTxTimeScan:I

.field private mTxTimeStartScan:I

.field private mTxTimeThisScan:I

.field private mUntetheringState:Lcom/android/internal/util/State;

.field private mUntrustedNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;

.field private mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private mVerboseLoggingLevel:I

.field private mVerifyingLinkState:Lcom/android/internal/util/State;

.field private mWaitForP2pDisableState:Lcom/android/internal/util/State;

.field private mWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mWhiteListedSsids:[Ljava/lang/String;

.field private mWifiApConfigChannel:Lcom/android/internal/util/AsyncChannel;

.field private mWifiApConfigStore:Lcom/android/server/wifi/WifiApConfigStore;

.field private final mWifiApState:Ljava/util/concurrent/atomic/AtomicInteger;

.field private mWifiAutoJoinController:Lcom/android/server/wifi/WifiAutoJoinController;

.field private mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

.field private mWifiConnectionStatistics:Landroid/net/wifi/WifiConnectionStatistics;

.field private mWifiInfo:Landroid/net/wifi/WifiInfo;

.field private mWifiLinkLayerStatsSupported:I

.field private mWifiLogger:Lcom/android/server/wifi/WifiLogger;

.field private mWifiMonitor:Lcom/android/server/wifi/WifiMonitor;

.field private mWifiNative:Lcom/android/server/wifi/WifiNative;

.field private mWifiP2pChannel:Lcom/android/internal/util/AsyncChannel;

.field private mWifiP2pServiceImpl:Lcom/android/server/wifi/p2p/WifiP2pServiceImpl;

.field mWifiScanListener:Lcom/android/server/wifi/WifiStateMachine$WifiScanListener;

.field private mWifiScanner:Landroid/net/wifi/WifiScanner;

.field private final mWifiState:Ljava/util/concurrent/atomic/AtomicInteger;

.field private mWpsRunningState:Lcom/android/internal/util/State;

.field private messageHandlingStatus:I

.field obtainingIpWatchdogCount:I

.field roamWatchdogCount:I

.field private targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

.field private testNetworkDisconnect:Z

.field private testNetworkDisconnectCounter:I

.field wifiScoringReport:Ljava/lang/String;


# direct methods
.method static synthetic -get0()Z
    .locals 1

    #@0
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@2
    return v0
.end method

.method static synthetic -get1()I
    .locals 1

    #@0
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_DEFERRED:I

    #@2
    return v0
.end method

.method static synthetic -get10(Lcom/android/server/wifi/WifiStateMachine;)J
    .locals 2

    #@0
    iget-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->fullBandConnectedTimeIntervalMilli:J

    #@2
    return-wide v0
.end method

.method static synthetic -get100(Lcom/android/server/wifi/WifiStateMachine;)Landroid/net/wifi/WifiConnectionStatistics;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConnectionStatistics:Landroid/net/wifi/WifiConnectionStatistics;

    #@2
    return-object v0
.end method

.method static synthetic -get101(Lcom/android/server/wifi/WifiStateMachine;)Landroid/net/wifi/WifiInfo;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@2
    return-object v0
.end method

.method static synthetic -get102(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLinkLayerStatsSupported:I

    #@2
    return v0
.end method

.method static synthetic -get103(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/WifiLogger;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLogger:Lcom/android/server/wifi/WifiLogger;

    #@2
    return-object v0
.end method

.method static synthetic -get104(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/WifiMonitor;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiMonitor:Lcom/android/server/wifi/WifiMonitor;

    #@2
    return-object v0
.end method

.method static synthetic -get105(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/WifiNative;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@2
    return-object v0
.end method

.method static synthetic -get106(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/AsyncChannel;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiP2pChannel:Lcom/android/internal/util/AsyncChannel;

    #@2
    return-object v0
.end method

.method static synthetic -get107(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/p2p/WifiP2pServiceImpl;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiP2pServiceImpl:Lcom/android/server/wifi/p2p/WifiP2pServiceImpl;

    #@2
    return-object v0
.end method

.method static synthetic -get108(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWpsRunningState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get109()I
    .locals 1

    #@0
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->sScanAlarmIntentCount:I

    #@2
    return v0
.end method

.method static synthetic -get11(Lcom/android/server/wifi/WifiStateMachine;)J
    .locals 2

    #@0
    iget-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->lastFullBandConnectedTimeMilli:J

    #@2
    return-wide v0
.end method

.method static synthetic -get110(Lcom/android/server/wifi/WifiStateMachine;)Landroid/net/wifi/WifiConfiguration;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

    #@2
    return-object v0
.end method

.method static synthetic -get111(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->testNetworkDisconnect:Z

    #@2
    return v0
.end method

.method static synthetic -get112(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->testNetworkDisconnectCounter:I

    #@2
    return v0
.end method

.method static synthetic -get12(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@2
    return v0
.end method

.method static synthetic -get13(Lcom/android/server/wifi/WifiStateMachine;)Landroid/app/AlarmManager;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mAlarmManager:Landroid/app/AlarmManager;

    #@2
    return-object v0
.end method

.method static synthetic -get14(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@2
    return v0
.end method

.method static synthetic -get15(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mBackgroundScanSupported:Z

    #@2
    return v0
.end method

.method static synthetic -get16(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mBluetoothConnectionActive:Z

    #@2
    return v0
.end method

.method static synthetic -get17(Lcom/android/server/wifi/WifiStateMachine;)Ljava/util/Queue;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@2
    return-object v0
.end method

.method static synthetic -get18(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get19(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectionRequests:I

    #@2
    return v0
.end method

.method static synthetic -get2()I
    .locals 1

    #@0
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_DISCARD:I

    #@2
    return v0
.end method

.method static synthetic -get20(Lcom/android/server/wifi/WifiStateMachine;)Landroid/content/Context;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@2
    return-object v0
.end method

.method static synthetic -get21(Lcom/android/server/wifi/WifiStateMachine;)Ljava/util/concurrent/atomic/AtomicInteger;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mCountryCodeSequence:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    return-object v0
.end method

.method static synthetic -get22(Lcom/android/server/wifi/WifiStateMachine;)Ljava/util/concurrent/atomic/AtomicInteger;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    return-object v0
.end method

.method static synthetic -get23(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedStopCounter:I

    #@2
    return v0
.end method

.method static synthetic -get24(Lcom/android/server/wifi/WifiStateMachine;)Landroid/net/BaseDhcpStateMachine;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@2
    return-object v0
.end method

.method static synthetic -get25(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedPnoAlarmCount:I

    #@2
    return v0
.end method

.method static synthetic -get26(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get27(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectingState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get28(Lcom/android/server/wifi/WifiStateMachine;)Ljava/lang/String;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverSetCountryCode:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method static synthetic -get29(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartToken:I

    #@2
    return v0
.end method

.method static synthetic -get3()I
    .locals 1

    #@0
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_FAIL:I

    #@2
    return v0
.end method

.method static synthetic -get30(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartedState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get31(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartingState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get32(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStopDelayMs:I

    #@2
    return v0
.end method

.method static synthetic -get33(Lcom/android/server/wifi/WifiStateMachine;)Landroid/app/PendingIntent;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStopIntent:Landroid/app/PendingIntent;

    #@2
    return-object v0
.end method

.method static synthetic -get34(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStoppedState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get35(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStoppingState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get36(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mEnableRssiPolling:Z

    #@2
    return v0
.end method

.method static synthetic -get37(Lcom/android/server/wifi/WifiStateMachine;)Ljava/util/concurrent/atomic/AtomicBoolean;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mFilteringMulticastV4Packets:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@2
    return-object v0
.end method

.method static synthetic -get38(Lcom/android/server/wifi/WifiStateMachine;)Ljava/util/concurrent/atomic/AtomicInteger;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mFrequencyBand:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    return-object v0
.end method

.method static synthetic -get39(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoDriverSupported:Z

    #@2
    return v0
.end method

.method static synthetic -get4()I
    .locals 1

    #@0
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_HANDLING_ERROR:I

    #@2
    return v0
.end method

.method static synthetic -get40(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoEnableInDevSettings:Z

    #@2
    return v0
.end method

.method static synthetic -get41(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalFeatureSet:I

    #@2
    return v0
.end method

.method static synthetic -get42(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mInDelayedStop:Z

    #@2
    return v0
.end method

.method static synthetic -get43(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mInitialState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get44(Lcom/android/server/wifi/WifiStateMachine;)Ljava/lang/String;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method static synthetic -get45(Lcom/android/server/wifi/WifiStateMachine;)Landroid/net/IpReachabilityMonitor;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

    #@2
    return-object v0
.end method

.method static synthetic -get46(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsFullScanOngoing:Z

    #@2
    return v0
.end method

.method static synthetic -get47(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsScanOngoing:Z

    #@2
    return v0
.end method

.method static synthetic -get48(Lcom/android/server/wifi/WifiStateMachine;)Ljava/lang/String;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method static synthetic -get49(Lcom/android/server/wifi/WifiStateMachine;)J
    .locals 2

    #@0
    iget-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastDriverRoamAttempt:J

    #@2
    return-wide v0
.end method

.method static synthetic -get5()I
    .locals 1

    #@0
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_OBSOLETE:I

    #@2
    return v0
.end method

.method static synthetic -get50(Lcom/android/server/wifi/WifiStateMachine;)J
    .locals 2

    #@0
    iget-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastEnableAllNetworksTime:J

    #@2
    return-wide v0
.end method

.method static synthetic -get51(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@2
    return v0
.end method

.method static synthetic -get52(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLegacyPnoEnabled:Z

    #@2
    return v0
.end method

.method static synthetic -get53(Lcom/android/server/wifi/WifiStateMachine;)Landroid/net/LinkProperties;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@2
    return-object v0
.end method

.method static synthetic -get54(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@2
    return-object v0
.end method

.method static synthetic -get55(Lcom/android/server/wifi/WifiStateMachine;)Landroid/net/NetworkCapabilities;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@2
    return-object v0
.end method

.method static synthetic -get56(Lcom/android/server/wifi/WifiStateMachine;)Landroid/net/NetworkInfo;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@2
    return-object v0
.end method

.method static synthetic -get57(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNoNetworksPeriodicScan:I

    #@2
    return v0
.end method

.method static synthetic -get58(Lcom/android/server/wifi/WifiStateMachine;)Landroid/os/INetworkManagementService;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@2
    return-object v0
.end method

.method static synthetic -get59(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mObtainingIpState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get6()I
    .locals 1

    #@0
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_REFUSED:I

    #@2
    return v0
.end method

.method static synthetic -get60(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mOperationalMode:I

    #@2
    return v0
.end method

.method static synthetic -get61(Lcom/android/server/wifi/WifiStateMachine;)Ljava/util/concurrent/atomic/AtomicBoolean;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mP2pConnected:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@2
    return-object v0
.end method

.method static synthetic -get62(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mP2pSupported:Z

    #@2
    return v0
.end method

.method static synthetic -get63(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mPeriodicScanToken:I

    #@2
    return v0
.end method

.method static synthetic -get64(Lcom/android/server/wifi/WifiStateMachine;)Landroid/app/PendingIntent;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mPnoIntent:Landroid/app/PendingIntent;

    #@2
    return-object v0
.end method

.method static synthetic -get65(Lcom/android/server/wifi/WifiStateMachine;)Ljava/lang/String;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mPrimaryDeviceType:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method static synthetic -get66(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mRoamFailCount:I

    #@2
    return v0
.end method

.method static synthetic -get67(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mRoamingState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get68(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mRssiPollToken:I

    #@2
    return v0
.end method

.method static synthetic -get69(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanModeState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get7()Z
    .locals 1

    #@0
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@2
    return v0
.end method

.method static synthetic -get70(Lcom/android/server/wifi/WifiStateMachine;)Landroid/util/LruCache;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanResultCache:Landroid/util/LruCache;

    #@2
    return-object v0
.end method

.method static synthetic -get71(Lcom/android/server/wifi/WifiStateMachine;)Ljava/util/concurrent/atomic/AtomicBoolean;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenBroadcastReceived:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@2
    return-object v0
.end method

.method static synthetic -get72(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@2
    return v0
.end method

.method static synthetic -get73(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSendScanResultsBroadcast:Z

    #@2
    return v0
.end method

.method static synthetic -get74(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartedState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get75(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartingState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get76(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantRestartCount:I

    #@2
    return v0
.end method

.method static synthetic -get77(Lcom/android/server/wifi/WifiStateMachine;)J
    .locals 2

    #@0
    iget-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantScanIntervalMs:J

    #@2
    return-wide v0
.end method

.method static synthetic -get78(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartingState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get79(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/SupplicantStateTracker;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStateTracker:Lcom/android/server/wifi/SupplicantStateTracker;

    #@2
    return-object v0
.end method

.method static synthetic -get8()Z
    .locals 1

    #@0
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->VDBG:Z

    #@2
    return v0
.end method

.method static synthetic -get80(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStopFailureToken:I

    #@2
    return v0
.end method

.method static synthetic -get81(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStoppingState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get82(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@2
    return v0
.end method

.method static synthetic -get83(Lcom/android/server/wifi/WifiStateMachine;)Landroid/os/PowerManager$WakeLock;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendWakeLock:Landroid/os/PowerManager$WakeLock;

    #@2
    return-object v0
.end method

.method static synthetic -get84(Lcom/android/server/wifi/WifiStateMachine;)Ljava/lang/String;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method static synthetic -get85(Lcom/android/server/wifi/WifiStateMachine;)Ljava/lang/String;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mTcpBufferSizes:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method static synthetic -get86(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mTemporarilyDisconnectWifi:Z

    #@2
    return v0
.end method

.method static synthetic -get87(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetherToken:I

    #@2
    return v0
.end method

.method static synthetic -get88(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetheredState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get89(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetheringState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get9()Z
    .locals 1

    #@0
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->VVDBG:Z

    #@2
    return v0
.end method

.method static synthetic -get90(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mUntetheringState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get91(Lcom/android/server/wifi/WifiStateMachine;)Ljava/util/concurrent/atomic/AtomicBoolean;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@2
    return-object v0
.end method

.method static synthetic -get92(Lcom/android/server/wifi/WifiStateMachine;)I
    .locals 1

    #@0
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mVerboseLoggingLevel:I

    #@2
    return v0
.end method

.method static synthetic -get93(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mVerifyingLinkState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get94(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/State;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWaitForP2pDisableState:Lcom/android/internal/util/State;

    #@2
    return-object v0
.end method

.method static synthetic -get95(Lcom/android/server/wifi/WifiStateMachine;)Landroid/os/PowerManager$WakeLock;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWakeLock:Landroid/os/PowerManager$WakeLock;

    #@2
    return-object v0
.end method

.method static synthetic -get96(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/AsyncChannel;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigChannel:Lcom/android/internal/util/AsyncChannel;

    #@2
    return-object v0
.end method

.method static synthetic -get97(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/WifiApConfigStore;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigStore:Lcom/android/server/wifi/WifiApConfigStore;

    #@2
    return-object v0
.end method

.method static synthetic -get98(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/WifiAutoJoinController;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiAutoJoinController:Lcom/android/server/wifi/WifiAutoJoinController;

    #@2
    return-object v0
.end method

.method static synthetic -get99(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/server/wifi/WifiConfigStore;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2
    return-object v0
.end method

.method static synthetic -set0(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->didBlackListBSSID:Z

    #@2
    return p1
.end method

.method static synthetic -set1(Lcom/android/server/wifi/WifiStateMachine;J)J
    .locals 1

    #@0
    iput-wide p1, p0, Lcom/android/server/wifi/WifiStateMachine;->fullBandConnectedTimeIntervalMilli:J

    #@2
    return-wide p1
.end method

.method static synthetic -set10(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedStopCounter:I

    #@2
    return p1
.end method

.method static synthetic -set11(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpActive:Z

    #@2
    return p1
.end method

.method static synthetic -set12(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/BaseDhcpStateMachine;)Landroid/net/BaseDhcpStateMachine;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@2
    return-object p1
.end method

.method static synthetic -set13(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedPnoAlarmCount:I

    #@2
    return p1
.end method

.method static synthetic -set14(Lcom/android/server/wifi/WifiStateMachine;J)J
    .locals 1

    #@0
    iput-wide p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedTimeStamp:J

    #@2
    return-wide p1
.end method

.method static synthetic -set15(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)Ljava/lang/String;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverSetCountryCode:Ljava/lang/String;

    #@2
    return-object p1
.end method

.method static synthetic -set16(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartToken:I

    #@2
    return p1
.end method

.method static synthetic -set17(Lcom/android/server/wifi/WifiStateMachine;Landroid/app/PendingIntent;)Landroid/app/PendingIntent;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStopIntent:Landroid/app/PendingIntent;

    #@2
    return-object p1
.end method

.method static synthetic -set18(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mEnableRssiPolling:Z

    #@2
    return p1
.end method

.method static synthetic -set19(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoDriverSupported:Z

    #@2
    return p1
.end method

.method static synthetic -set2(Lcom/android/server/wifi/WifiStateMachine;J)J
    .locals 1

    #@0
    iput-wide p1, p0, Lcom/android/server/wifi/WifiStateMachine;->lastConnectAttemptTimestamp:J

    #@2
    return-wide p1
.end method

.method static synthetic -set20(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoEnableInDevSettings:Z

    #@2
    return p1
.end method

.method static synthetic -set21(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalFeatureSet:I

    #@2
    return p1
.end method

.method static synthetic -set22(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mInDelayedStop:Z

    #@2
    return p1
.end method

.method static synthetic -set23(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/IpReachabilityMonitor;)Landroid/net/IpReachabilityMonitor;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

    #@2
    return-object p1
.end method

.method static synthetic -set24(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsFullScanOngoing:Z

    #@2
    return p1
.end method

.method static synthetic -set25(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsRunning:Z

    #@2
    return p1
.end method

.method static synthetic -set26(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsScanOngoing:Z

    #@2
    return p1
.end method

.method static synthetic -set27(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)Ljava/lang/String;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@2
    return-object p1
.end method

.method static synthetic -set28(Lcom/android/server/wifi/WifiStateMachine;J)J
    .locals 1

    #@0
    iput-wide p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastDriverRoamAttempt:J

    #@2
    return-wide p1
.end method

.method static synthetic -set29(Lcom/android/server/wifi/WifiStateMachine;J)J
    .locals 1

    #@0
    iput-wide p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastEnableAllNetworksTime:J

    #@2
    return-wide p1
.end method

.method static synthetic -set3(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/wifi/WifiConfiguration;)Landroid/net/wifi/WifiConfiguration;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@2
    return-object p1
.end method

.method static synthetic -set30(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@2
    return p1
.end method

.method static synthetic -set31(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastSignalLevel:I

    #@2
    return p1
.end method

.method static synthetic -set32(Lcom/android/server/wifi/WifiStateMachine;Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;)Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@2
    return-object p1
.end method

.method static synthetic -set33(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mOperationalMode:I

    #@2
    return p1
.end method

.method static synthetic -set34(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mPeriodicScanToken:I

    #@2
    return p1
.end method

.method static synthetic -set35(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mRoamFailCount:I

    #@2
    return p1
.end method

.method static synthetic -set36(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mRssiPollToken:I

    #@2
    return p1
.end method

.method static synthetic -set37(Lcom/android/server/wifi/WifiStateMachine;Ljava/util/List;)Ljava/util/List;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@2
    return-object p1
.end method

.method static synthetic -set38(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSendScanResultsBroadcast:Z

    #@2
    return p1
.end method

.method static synthetic -set39(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantRestartCount:I

    #@2
    return p1
.end method

.method static synthetic -set4(Lcom/android/server/wifi/WifiStateMachine;J)J
    .locals 1

    #@0
    iput-wide p1, p0, Lcom/android/server/wifi/WifiStateMachine;->lastFullBandConnectedTimeMilli:J

    #@2
    return-wide p1
.end method

.method static synthetic -set40(Lcom/android/server/wifi/WifiStateMachine;J)J
    .locals 1

    #@0
    iput-wide p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantScanIntervalMs:J

    #@2
    return-wide p1
.end method

.method static synthetic -set41(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStopFailureToken:I

    #@2
    return p1
.end method

.method static synthetic -set42(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)Ljava/lang/String;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@2
    return-object p1
.end method

.method static synthetic -set43(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTemporarilyDisconnectWifi:Z

    #@2
    return p1
.end method

.method static synthetic -set44(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetherToken:I

    #@2
    return p1
.end method

.method static synthetic -set45(Lcom/android/server/wifi/WifiStateMachine;[Ljava/lang/String;)[Ljava/lang/String;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@2
    return-object p1
.end method

.method static synthetic -set46(Lcom/android/server/wifi/WifiStateMachine;Lcom/android/internal/util/AsyncChannel;)Lcom/android/internal/util/AsyncChannel;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigChannel:Lcom/android/internal/util/AsyncChannel;

    #@2
    return-object p1
.end method

.method static synthetic -set47(Lcom/android/server/wifi/WifiStateMachine;Lcom/android/server/wifi/WifiApConfigStore;)Lcom/android/server/wifi/WifiApConfigStore;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigStore:Lcom/android/server/wifi/WifiApConfigStore;

    #@2
    return-object p1
.end method

.method static synthetic -set48(Lcom/android/server/wifi/WifiStateMachine;Lcom/android/internal/util/AsyncChannel;)Lcom/android/internal/util/AsyncChannel;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiP2pChannel:Lcom/android/internal/util/AsyncChannel;

    #@2
    return-object p1
.end method

.method static synthetic -set49(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@2
    return p1
.end method

.method static synthetic -set5(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/wifi/WifiConfiguration;)Landroid/net/wifi/WifiConfiguration;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@2
    return-object p1
.end method

.method static synthetic -set50(I)I
    .locals 0

    #@0
    sput p0, Lcom/android/server/wifi/WifiStateMachine;->sScanAlarmIntentCount:I

    #@2
    return p0
.end method

.method static synthetic -set51(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/wifi/WifiConfiguration;)Landroid/net/wifi/WifiConfiguration;
    .locals 0

    #@0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

    #@2
    return-object p1
.end method

.method static synthetic -set52(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->testNetworkDisconnectCounter:I

    #@2
    return p1
.end method

.method static synthetic -set6(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@2
    return p1
.end method

.method static synthetic -set7(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@2
    return p1
.end method

.method static synthetic -set8(Lcom/android/server/wifi/WifiStateMachine;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mBluetoothConnectionActive:Z

    #@2
    return p1
.end method

.method static synthetic -set9(Lcom/android/server/wifi/WifiStateMachine;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectionRequests:I

    #@2
    return p1
.end method

.method static synthetic -wrap0(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Message;)Landroid/net/wifi/SupplicantState;
    .locals 1
    .param p1, "message"    # Landroid/os/Message;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->handleSupplicantStateChange(Landroid/os/Message;)Landroid/net/wifi/SupplicantState;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method static synthetic -wrap1(Lcom/android/server/wifi/WifiStateMachine;)Landroid/os/Message;
    .locals 1

    #@0
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentMessage()Landroid/os/Message;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method static synthetic -wrap10(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)Z
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->startDisconnectedGScan(Ljava/lang/String;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap11(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)Z
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->startGScanConnectedModeOffload(Ljava/lang/String;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap12(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)Z
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->startGScanDisconnectedModeOffload(Ljava/lang/String;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap13(Lcom/android/server/wifi/WifiStateMachine;Ljava/util/ArrayList;)Z
    .locals 1
    .param p1, "available"    # Ljava/util/ArrayList;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->startTethering(Ljava/util/ArrayList;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap14(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->stopLazyRoam()Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap15(Lcom/android/server/wifi/WifiStateMachine;)Lcom/android/internal/util/IState;
    .locals 1

    #@0
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method static synthetic -wrap16(Lcom/android/server/wifi/WifiStateMachine;ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    .locals 1
    .param p1, "eapMethod"    # I
    .param p2, "imsi"    # Ljava/lang/String;
    .param p3, "mccMnc"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wifi/WifiStateMachine;->buildIdentity(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method static synthetic -wrap17(Lcom/android/server/wifi/WifiStateMachine;I)Ljava/lang/String;
    .locals 1
    .param p1, "timeout"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->updateDefaultRouteMacAddress(I)Ljava/lang/String;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method static synthetic -wrap18(Lcom/android/server/wifi/WifiStateMachine;ILandroid/net/wifi/WifiConfiguration;)V
    .locals 0
    .param p1, "wifiCredentialEventType"    # I
    .param p2, "config"    # Landroid/net/wifi/WifiConfiguration;

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->broadcastWifiCredentialChanged(ILandroid/net/wifi/WifiConfiguration;)V

    #@3
    return-void
.end method

.method static synthetic -wrap19(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/wifi/WifiLinkLayerStats;)V
    .locals 0
    .param p1, "stats"    # Landroid/net/wifi/WifiLinkLayerStats;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->calculateWifiScore(Landroid/net/wifi/WifiLinkLayerStats;)V

    #@3
    return-void
.end method

.method static synthetic -wrap2(Lcom/android/server/wifi/WifiStateMachine;IZILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)Z
    .locals 1
    .param p1, "counter"    # I
    .param p2, "restart"    # Z
    .param p3, "milli"    # I
    .param p4, "settings"    # Landroid/net/wifi/ScanSettings;
    .param p5, "workSource"    # Landroid/os/WorkSource;

    #@0
    .prologue
    invoke-direct/range {p0 .. p5}, Lcom/android/server/wifi/WifiStateMachine;->checkAndRestartDelayedScan(IZILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap20(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->cleanWifiScore()V

    #@3
    return-void
.end method

.method static synthetic -wrap21(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Message;)V
    .locals 0
    .param p1, "msg"    # Landroid/os/Message;

    #@0
    .prologue
    invoke-virtual {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->deferMessage(Landroid/os/Message;)V

    #@3
    return-void
.end method

.method static synthetic -wrap22(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/wifi/RssiPacketCountInfo;)V
    .locals 0
    .param p1, "info"    # Landroid/net/wifi/RssiPacketCountInfo;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->fetchPktcntNative(Landroid/net/wifi/RssiPacketCountInfo;)V

    #@3
    return-void
.end method

.method static synthetic -wrap23(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->fetchRssiLinkSpeedAndFrequencyNative()V

    #@3
    return-void
.end method

.method static synthetic -wrap24(Lcom/android/server/wifi/WifiStateMachine;I)V
    .locals 0
    .param p1, "reason"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->handleIPv4Failure(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap25(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/DhcpResults;I)V
    .locals 0
    .param p1, "dhcpResults"    # Landroid/net/DhcpResults;
    .param p2, "reason"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->handleIPv4Success(Landroid/net/DhcpResults;I)V

    #@3
    return-void
.end method

.method static synthetic -wrap26(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->handleIpConfigurationLost()V

    #@3
    return-void
.end method

.method static synthetic -wrap27(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->handleIpReachabilityLost()V

    #@3
    return-void
.end method

.method static synthetic -wrap28(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->handleNetworkDisconnect()V

    #@3
    return-void
.end method

.method static synthetic -wrap29(Lcom/android/server/wifi/WifiStateMachine;ILandroid/os/Message;)V
    .locals 0
    .param p1, "type"    # I
    .param p2, "message"    # Landroid/os/Message;

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->handleScanRequest(ILandroid/os/Message;)V

    #@3
    return-void
.end method

.method static synthetic -wrap3(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Message;)Z
    .locals 1
    .param p1, "msg"    # Landroid/os/Message;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->checkOrDeferScanAllowed(Landroid/os/Message;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap30(Lcom/android/server/wifi/WifiStateMachine;Z)V
    .locals 0
    .param p1, "screenOn"    # Z

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->handleScreenStateChanged(Z)V

    #@3
    return-void
.end method

.method static synthetic -wrap31(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->handleSuccessfulIpConfiguration()V

    #@3
    return-void
.end method

.method static synthetic -wrap32(Lcom/android/server/wifi/WifiStateMachine;Z)V
    .locals 0
    .param p1, "killSupplicant"    # Z

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->handleSupplicantConnectionLoss(Z)V

    #@3
    return-void
.end method

.method static synthetic -wrap33(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Message;Ljava/lang/String;)V
    .locals 0
    .param p1, "message"    # Landroid/os/Message;
    .param p2, "state"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->logStateAndMessage(Landroid/os/Message;Ljava/lang/String;)V

    #@3
    return-void
.end method

.method static synthetic -wrap34(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)V
    .locals 0
    .param p1, "s"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-virtual {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->logw(Ljava/lang/String;)V

    #@3
    return-void
.end method

.method static synthetic -wrap35(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->noteScanEnd()V

    #@3
    return-void
.end method

.method static synthetic -wrap36(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Message;I)V
    .locals 0
    .param p1, "msg"    # Landroid/os/Message;
    .param p2, "what"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->replyToMessage(Landroid/os/Message;I)V

    #@3
    return-void
.end method

.method static synthetic -wrap37(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Message;II)V
    .locals 0
    .param p1, "msg"    # Landroid/os/Message;
    .param p2, "what"    # I
    .param p3, "arg1"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wifi/WifiStateMachine;->replyToMessage(Landroid/os/Message;II)V

    #@3
    return-void
.end method

.method static synthetic -wrap38(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Message;ILjava/lang/Object;)V
    .locals 0
    .param p1, "msg"    # Landroid/os/Message;
    .param p2, "what"    # I
    .param p3, "obj"    # Ljava/lang/Object;

    #@0
    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wifi/WifiStateMachine;->replyToMessage(Landroid/os/Message;ILjava/lang/Object;)V

    #@3
    return-void
.end method

.method static synthetic -wrap39(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->sendConnectedState()V

    #@3
    return-void
.end method

.method static synthetic -wrap4(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)Z
    .locals 1
    .param p1, "iface"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->clearIPv4Address(Ljava/lang/String;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap40(Lcom/android/server/wifi/WifiStateMachine;I)V
    .locals 0
    .param p1, "what"    # I

    #@0
    .prologue
    invoke-virtual {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessageAtFrontOfQueue(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap41(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)V
    .locals 0
    .param p1, "bssid"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendNetworkStateChangeBroadcast(Ljava/lang/String;)V

    #@3
    return-void
.end method

.method static synthetic -wrap42(Lcom/android/server/wifi/WifiStateMachine;I)V
    .locals 0
    .param p1, "newRssi"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendRssiChangeBroadcast(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap43(Lcom/android/server/wifi/WifiStateMachine;Z)V
    .locals 0
    .param p1, "connected"    # Z

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendSupplicantConnectionChangedBroadcast(Z)V

    #@3
    return-void
.end method

.method static synthetic -wrap44(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->setCountryCode()V

    #@3
    return-void
.end method

.method static synthetic -wrap45(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->setFrequencyBand()V

    #@3
    return-void
.end method

.method static synthetic -wrap46(Lcom/android/server/wifi/WifiStateMachine;Z)V
    .locals 0
    .param p1, "enabled"    # Z

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->setScanAlarm(Z)V

    #@3
    return-void
.end method

.method static synthetic -wrap47(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->setScanResults()V

    #@3
    return-void
.end method

.method static synthetic -wrap48(Lcom/android/server/wifi/WifiStateMachine;IZ)V
    .locals 0
    .param p1, "reason"    # I
    .param p2, "enabled"    # Z

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->setSuspendOptimizationsNative(IZ)V

    #@3
    return-void
.end method

.method static synthetic -wrap49(Lcom/android/server/wifi/WifiStateMachine;IZ)V
    .locals 0
    .param p1, "reason"    # I
    .param p2, "enabled"    # Z

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->setSuspendOptimizations(IZ)V

    #@3
    return-void
.end method

.method static synthetic -wrap5(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->enableSoftAp()Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap50(Lcom/android/server/wifi/WifiStateMachine;II)V
    .locals 0
    .param p1, "wifiApState"    # I
    .param p2, "reason"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->setWifiApState(II)V

    #@3
    return-void
.end method

.method static synthetic -wrap51(Lcom/android/server/wifi/WifiStateMachine;I)V
    .locals 0
    .param p1, "wifiState"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->setWifiState(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap52(Lcom/android/server/wifi/WifiStateMachine;ILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V
    .locals 0
    .param p1, "milli"    # I
    .param p2, "settings"    # Landroid/net/wifi/ScanSettings;
    .param p3, "workSource"    # Landroid/os/WorkSource;

    #@0
    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wifi/WifiStateMachine;->startDelayedScan(ILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V

    #@3
    return-void
.end method

.method static synthetic -wrap53(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/wifi/WifiConfiguration;)V
    .locals 0
    .param p1, "configuration"    # Landroid/net/wifi/WifiConfiguration;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->startSoftApWithConfig(Landroid/net/wifi/WifiConfiguration;)V

    #@3
    return-void
.end method

.method static synthetic -wrap54(Lcom/android/server/wifi/WifiStateMachine;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->stopTethering()V

    #@3
    return-void
.end method

.method static synthetic -wrap55(Lcom/android/server/wifi/WifiStateMachine;Lcom/android/internal/util/IState;)V
    .locals 0
    .param p1, "destState"    # Lcom/android/internal/util/IState;

    #@0
    .prologue
    invoke-virtual {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->transitionTo(Lcom/android/internal/util/IState;)V

    #@3
    return-void
.end method

.method static synthetic -wrap56(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/wifi/WifiConfiguration;)V
    .locals 0
    .param p1, "config"    # Landroid/net/wifi/WifiConfiguration;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->updateCapabilities(Landroid/net/wifi/WifiConfiguration;)V

    #@3
    return-void
.end method

.method static synthetic -wrap57(Lcom/android/server/wifi/WifiStateMachine;I)V
    .locals 0
    .param p1, "reason"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->updateLinkProperties(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap6(Lcom/android/server/wifi/WifiStateMachine;Ljava/util/ArrayList;)Z
    .locals 1
    .param p1, "active"    # Ljava/util/ArrayList;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->isWifiTethered(Ljava/util/ArrayList;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap7(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/NetworkInfo$DetailedState;)Z
    .locals 1
    .param p1, "state"    # Landroid/net/NetworkInfo$DetailedState;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->setNetworkDetailedState(Landroid/net/NetworkInfo$DetailedState;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap8(Lcom/android/server/wifi/WifiStateMachine;)Z
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->setRandomMacOui()Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap9(Lcom/android/server/wifi/WifiStateMachine;Ljava/lang/String;)Z
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->startConnectedGScan(Ljava/lang/String;)Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static constructor <clinit>()V
    .locals 5

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 154
    sput-boolean v4, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@3
    .line 155
    sput-boolean v4, Lcom/android/server/wifi/WifiStateMachine;->VDBG:Z

    #@5
    .line 156
    sput-boolean v4, Lcom/android/server/wifi/WifiStateMachine;->VVDBG:Z

    #@7
    .line 157
    sput-boolean v4, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@9
    .line 158
    sput-boolean v4, Lcom/android/server/wifi/WifiStateMachine;->mLogMessages:Z

    #@b
    .line 166
    sput-boolean v4, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@d
    .line 203
    const-string/jumbo v0, "\t+"

    #@10
    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    #@13
    move-result-object v0

    #@14
    sput-object v0, Lcom/android/server/wifi/WifiStateMachine;->scanResultPattern:Ljava/util/regex/Pattern;

    #@16
    .line 233
    sput v4, Lcom/android/server/wifi/WifiStateMachine;->mPnoResultFound:I

    #@18
    .line 428
    new-instance v0, Ljava/util/Random;

    #@1a
    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    #@1d
    move-result-object v1

    #@1e
    invoke-virtual {v1}, Ljava/util/Calendar;->getTimeInMillis()J

    #@21
    move-result-wide v2

    #@22
    invoke-direct {v0, v2, v3}, Ljava/util/Random;-><init>(J)V

    #@25
    sput-object v0, Lcom/android/server/wifi/WifiStateMachine;->mRandom:Ljava/util/Random;

    #@27
    .line 784
    sput v4, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@29
    .line 1050
    sput v4, Lcom/android/server/wifi/WifiStateMachine;->sScanAlarmIntentCount:I

    #@2b
    .line 1677
    const/4 v0, 0x2

    #@2c
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_PROCESSED:I

    #@2e
    .line 1678
    const/4 v0, 0x1

    #@2f
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_OK:I

    #@31
    .line 1679
    sput v4, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_UNKNOWN:I

    #@33
    .line 1680
    const/4 v0, -0x1

    #@34
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_REFUSED:I

    #@36
    .line 1681
    const/4 v0, -0x2

    #@37
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_FAIL:I

    #@39
    .line 1682
    const/4 v0, -0x3

    #@3a
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_OBSOLETE:I

    #@3c
    .line 1683
    const/4 v0, -0x4

    #@3d
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_DEFERRED:I

    #@3f
    .line 1684
    const/4 v0, -0x5

    #@40
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_DISCARD:I

    #@42
    .line 1685
    const/4 v0, -0x6

    #@43
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_LOOPED:I

    #@45
    .line 1686
    const/4 v0, -0x7

    #@46
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_HANDLING_ERROR:I

    #@48
    .line 3758
    const-string/jumbo v0, "[1-9a-fA-F]"

    #@4b
    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    #@4e
    move-result-object v0

    #@4f
    sput-object v0, Lcom/android/server/wifi/WifiStateMachine;->mNotZero:Ljava/util/regex/Pattern;

    #@51
    .line 150
    return-void
.end method

.method public constructor <init>(Landroid/content/Context;Ljava/lang/String;Lcom/android/server/wifi/WifiTrafficPoller;)V
    .locals 16
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "wlanInterface"    # Ljava/lang/String;
    .param p3, "trafficPoller"    # Lcom/android/server/wifi/WifiTrafficPoller;

    #@0
    .prologue
    .line 1061
    const-string/jumbo v2, "WifiStateMachine"

    #@3
    move-object/from16 v0, p0

    #@5
    invoke-direct {v0, v2}, Lcom/android/internal/util/StateMachine;-><init>(Ljava/lang/String;)V

    #@8
    .line 171
    const/4 v2, 0x0

    #@9
    move-object/from16 v0, p0

    #@b
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->didBlackListBSSID:Z

    #@d
    .line 197
    new-instance v2, Ljava/util/concurrent/atomic/AtomicBoolean;

    #@f
    const/4 v3, 0x0

    #@10
    invoke-direct {v2, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    #@13
    move-object/from16 v0, p0

    #@15
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mP2pConnected:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@17
    .line 198
    const/4 v2, 0x0

    #@18
    move-object/from16 v0, p0

    #@1a
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTemporarilyDisconnectWifi:Z

    #@1c
    .line 202
    new-instance v2, Ljava/util/ArrayList;

    #@1e
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@21
    move-object/from16 v0, p0

    #@23
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@25
    .line 211
    const/4 v2, 0x0

    #@26
    move-object/from16 v0, p0

    #@28
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@2a
    .line 220
    const/4 v2, -0x1

    #@2b
    move-object/from16 v0, p0

    #@2d
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastSignalLevel:I

    #@2f
    .line 223
    const/4 v2, 0x0

    #@30
    move-object/from16 v0, p0

    #@32
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@34
    .line 225
    const/4 v2, 0x0

    #@35
    move-object/from16 v0, p0

    #@37
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoDriverSupported:Z

    #@39
    .line 228
    const/4 v2, 0x1

    #@3a
    move-object/from16 v0, p0

    #@3c
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mEnableAssociatedNetworkSwitchingInDevSettings:Z

    #@3e
    .line 229
    const/4 v2, 0x0

    #@3f
    move-object/from16 v0, p0

    #@41
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoEnableInDevSettings:Z

    #@43
    .line 232
    const/4 v2, 0x0

    #@44
    move-object/from16 v0, p0

    #@46
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mHalFeatureSet:I

    #@48
    .line 281
    const/4 v2, 0x0

    #@49
    move-object/from16 v0, p0

    #@4b
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->testNetworkDisconnect:Z

    #@4d
    .line 283
    const/4 v2, 0x0

    #@4e
    move-object/from16 v0, p0

    #@50
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mEnableRssiPolling:Z

    #@52
    .line 284
    const/4 v2, 0x0

    #@53
    move-object/from16 v0, p0

    #@55
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLegacyPnoEnabled:Z

    #@57
    .line 285
    const/4 v2, 0x0

    #@58
    move-object/from16 v0, p0

    #@5a
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRssiPollToken:I

    #@5c
    .line 291
    const/4 v2, 0x1

    #@5d
    move-object/from16 v0, p0

    #@5f
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mOperationalMode:I

    #@61
    .line 292
    const/4 v2, 0x0

    #@62
    move-object/from16 v0, p0

    #@64
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mIsScanOngoing:Z

    #@66
    .line 293
    const/4 v2, 0x0

    #@67
    move-object/from16 v0, p0

    #@69
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mIsFullScanOngoing:Z

    #@6b
    .line 294
    const/4 v2, 0x0

    #@6c
    move-object/from16 v0, p0

    #@6e
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSendScanResultsBroadcast:Z

    #@70
    .line 296
    new-instance v2, Ljava/util/LinkedList;

    #@72
    invoke-direct {v2}, Ljava/util/LinkedList;-><init>()V

    #@75
    move-object/from16 v0, p0

    #@77
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@79
    .line 297
    const/4 v2, 0x0

    #@7a
    move-object/from16 v0, p0

    #@7c
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@7e
    .line 314
    new-instance v2, Ljava/util/concurrent/atomic/AtomicBoolean;

    #@80
    const/4 v3, 0x0

    #@81
    invoke-direct {v2, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    #@84
    move-object/from16 v0, p0

    #@86
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScreenBroadcastReceived:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@88
    .line 316
    const/4 v2, 0x0

    #@89
    move-object/from16 v0, p0

    #@8b
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mBluetoothConnectionActive:Z

    #@8d
    .line 342
    const/4 v2, 0x0

    #@8e
    move-object/from16 v0, p0

    #@90
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantRestartCount:I

    #@92
    .line 344
    const/4 v2, 0x0

    #@93
    move-object/from16 v0, p0

    #@95
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStopFailureToken:I

    #@97
    .line 357
    const/4 v2, 0x0

    #@98
    move-object/from16 v0, p0

    #@9a
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTetherToken:I

    #@9c
    .line 365
    const/4 v2, 0x0

    #@9d
    move-object/from16 v0, p0

    #@9f
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartToken:I

    #@a1
    .line 380
    const/4 v2, 0x0

    #@a2
    move-object/from16 v0, p0

    #@a4
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mPeriodicScanToken:I

    #@a6
    .line 390
    new-instance v2, Ljava/lang/Object;

    #@a8
    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    #@ab
    move-object/from16 v0, p0

    #@ad
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResultsLock:Ljava/lang/Object;

    #@af
    .line 399
    const/4 v2, 0x0

    #@b0
    move-object/from16 v0, p0

    #@b2
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpActive:Z

    #@b4
    .line 401
    const/4 v2, 0x4

    #@b5
    move-object/from16 v0, p0

    #@b7
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLinkLayerStatsSupported:I

    #@b9
    .line 403
    new-instance v2, Ljava/util/concurrent/atomic/AtomicInteger;

    #@bb
    invoke-direct {v2}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>()V

    #@be
    move-object/from16 v0, p0

    #@c0
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mCountryCodeSequence:Ljava/util/concurrent/atomic/AtomicInteger;

    #@c2
    .line 406
    const/4 v2, 0x0

    #@c3
    move-object/from16 v0, p0

    #@c5
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@c7
    .line 409
    const/4 v2, 0x0

    #@c8
    move-object/from16 v0, p0

    #@ca
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRoamFailCount:I

    #@cc
    .line 415
    const-string/jumbo v2, "any"

    #@cf
    move-object/from16 v0, p0

    #@d1
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@d3
    .line 417
    const-wide/16 v2, 0x0

    #@d5
    move-object/from16 v0, p0

    #@d7
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastDriverRoamAttempt:J

    #@d9
    .line 419
    const/4 v2, 0x0

    #@da
    move-object/from16 v0, p0

    #@dc
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

    #@de
    .line 422
    const/4 v2, 0x0

    #@df
    move-object/from16 v0, p0

    #@e1
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@e3
    .line 425
    const/4 v2, 0x0

    #@e4
    move-object/from16 v0, p0

    #@e6
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@e8
    .line 528
    const/4 v2, 0x0

    #@e9
    move-object/from16 v0, p0

    #@eb
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedPnoAlarmCount:I

    #@ed
    .line 530
    new-instance v2, Ljava/util/concurrent/atomic/AtomicInteger;

    #@ef
    const/4 v3, 0x0

    #@f0
    invoke-direct {v2, v3}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    #@f3
    move-object/from16 v0, p0

    #@f5
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mFrequencyBand:Ljava/util/concurrent/atomic/AtomicInteger;

    #@f7
    .line 533
    new-instance v2, Ljava/util/concurrent/atomic/AtomicBoolean;

    #@f9
    const/4 v3, 0x1

    #@fa
    invoke-direct {v2, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    #@fd
    move-object/from16 v0, p0

    #@ff
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mFilteringMulticastV4Packets:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@101
    .line 536
    new-instance v2, Lcom/android/internal/util/AsyncChannel;

    #@103
    invoke-direct {v2}, Lcom/android/internal/util/AsyncChannel;-><init>()V

    #@106
    move-object/from16 v0, p0

    #@108
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mReplyChannel:Lcom/android/internal/util/AsyncChannel;

    #@10a
    .line 546
    const/4 v2, 0x0

    #@10b
    move-object/from16 v0, p0

    #@10d
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectionRequests:I

    #@10f
    .line 551
    const/4 v2, 0x0

    #@110
    move-object/from16 v0, p0

    #@112
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@114
    .line 556
    new-instance v2, Landroid/net/wifi/WifiConnectionStatistics;

    #@116
    invoke-direct {v2}, Landroid/net/wifi/WifiConnectionStatistics;-><init>()V

    #@119
    move-object/from16 v0, p0

    #@11b
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConnectionStatistics:Landroid/net/wifi/WifiConnectionStatistics;

    #@11d
    .line 559
    new-instance v2, Landroid/net/NetworkCapabilities;

    #@11f
    invoke-direct {v2}, Landroid/net/NetworkCapabilities;-><init>()V

    #@122
    move-object/from16 v0, p0

    #@124
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@126
    .line 678
    const/4 v2, 0x0

    #@127
    move-object/from16 v0, p0

    #@129
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->testNetworkDisconnectCounter:I

    #@12b
    .line 697
    const/4 v2, 0x0

    #@12c
    move-object/from16 v0, p0

    #@12e
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->roamWatchdogCount:I

    #@130
    .line 725
    const/4 v2, 0x0

    #@131
    move-object/from16 v0, p0

    #@133
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->obtainingIpWatchdogCount:I

    #@135
    .line 731
    const/4 v2, 0x0

    #@136
    move-object/from16 v0, p0

    #@138
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->disconnectingWatchdogCount:I

    #@13a
    .line 814
    const/4 v2, 0x0

    #@13b
    move-object/from16 v0, p0

    #@13d
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@13f
    .line 821
    new-instance v2, Ljava/util/concurrent/atomic/AtomicBoolean;

    #@141
    const/4 v3, 0x1

    #@142
    invoke-direct {v2, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    #@145
    move-object/from16 v0, p0

    #@147
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@149
    .line 871
    const/4 v2, 0x0

    #@14a
    move-object/from16 v0, p0

    #@14c
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRunningBeaconCount:I

    #@14e
    .line 879
    const/4 v2, 0x0

    #@14f
    move-object/from16 v0, p0

    #@151
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mInDelayedStop:Z

    #@153
    .line 883
    const/4 v2, 0x0

    #@154
    move-object/from16 v0, p0

    #@156
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSetCountryCode:Ljava/lang/String;

    #@158
    .line 888
    const/4 v2, 0x0

    #@159
    move-object/from16 v0, p0

    #@15b
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverSetCountryCode:Ljava/lang/String;

    #@15d
    .line 891
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$DefaultState;

    #@15f
    move-object/from16 v0, p0

    #@161
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$DefaultState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@164
    move-object/from16 v0, p0

    #@166
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultState:Lcom/android/internal/util/State;

    #@168
    .line 893
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$InitialState;

    #@16a
    move-object/from16 v0, p0

    #@16c
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$InitialState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@16f
    move-object/from16 v0, p0

    #@171
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mInitialState:Lcom/android/internal/util/State;

    #@173
    .line 895
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$SupplicantStartingState;

    #@175
    move-object/from16 v0, p0

    #@177
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$SupplicantStartingState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@17a
    move-object/from16 v0, p0

    #@17c
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartingState:Lcom/android/internal/util/State;

    #@17e
    .line 897
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$SupplicantStartedState;

    #@180
    move-object/from16 v0, p0

    #@182
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$SupplicantStartedState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@185
    move-object/from16 v0, p0

    #@187
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartedState:Lcom/android/internal/util/State;

    #@189
    .line 899
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$SupplicantStoppingState;

    #@18b
    move-object/from16 v0, p0

    #@18d
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$SupplicantStoppingState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@190
    move-object/from16 v0, p0

    #@192
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStoppingState:Lcom/android/internal/util/State;

    #@194
    .line 901
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$DriverStartingState;

    #@196
    move-object/from16 v0, p0

    #@198
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$DriverStartingState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@19b
    move-object/from16 v0, p0

    #@19d
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartingState:Lcom/android/internal/util/State;

    #@19f
    .line 903
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$DriverStartedState;

    #@1a1
    move-object/from16 v0, p0

    #@1a3
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$DriverStartedState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1a6
    move-object/from16 v0, p0

    #@1a8
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartedState:Lcom/android/internal/util/State;

    #@1aa
    .line 908
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$WaitForP2pDisableState;

    #@1ac
    move-object/from16 v0, p0

    #@1ae
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$WaitForP2pDisableState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1b1
    move-object/from16 v0, p0

    #@1b3
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWaitForP2pDisableState:Lcom/android/internal/util/State;

    #@1b5
    .line 910
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$DriverStoppingState;

    #@1b7
    move-object/from16 v0, p0

    #@1b9
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$DriverStoppingState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1bc
    move-object/from16 v0, p0

    #@1be
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStoppingState:Lcom/android/internal/util/State;

    #@1c0
    .line 912
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$DriverStoppedState;

    #@1c2
    move-object/from16 v0, p0

    #@1c4
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$DriverStoppedState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1c7
    move-object/from16 v0, p0

    #@1c9
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStoppedState:Lcom/android/internal/util/State;

    #@1cb
    .line 914
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$ScanModeState;

    #@1cd
    move-object/from16 v0, p0

    #@1cf
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$ScanModeState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1d2
    move-object/from16 v0, p0

    #@1d4
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanModeState:Lcom/android/internal/util/State;

    #@1d6
    .line 916
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$ConnectModeState;

    #@1d8
    move-object/from16 v0, p0

    #@1da
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$ConnectModeState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1dd
    move-object/from16 v0, p0

    #@1df
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectModeState:Lcom/android/internal/util/State;

    #@1e1
    .line 918
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$L2ConnectedState;

    #@1e3
    move-object/from16 v0, p0

    #@1e5
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$L2ConnectedState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1e8
    move-object/from16 v0, p0

    #@1ea
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mL2ConnectedState:Lcom/android/internal/util/State;

    #@1ec
    .line 920
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$ObtainingIpState;

    #@1ee
    move-object/from16 v0, p0

    #@1f0
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$ObtainingIpState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1f3
    move-object/from16 v0, p0

    #@1f5
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mObtainingIpState:Lcom/android/internal/util/State;

    #@1f7
    .line 922
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$VerifyingLinkState;

    #@1f9
    move-object/from16 v0, p0

    #@1fb
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$VerifyingLinkState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@1fe
    move-object/from16 v0, p0

    #@200
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mVerifyingLinkState:Lcom/android/internal/util/State;

    #@202
    .line 924
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$ConnectedState;

    #@204
    move-object/from16 v0, p0

    #@206
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$ConnectedState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@209
    move-object/from16 v0, p0

    #@20b
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@20d
    .line 926
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$RoamingState;

    #@20f
    move-object/from16 v0, p0

    #@211
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$RoamingState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@214
    move-object/from16 v0, p0

    #@216
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRoamingState:Lcom/android/internal/util/State;

    #@218
    .line 928
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$DisconnectingState;

    #@21a
    move-object/from16 v0, p0

    #@21c
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$DisconnectingState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@21f
    move-object/from16 v0, p0

    #@221
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectingState:Lcom/android/internal/util/State;

    #@223
    .line 930
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$DisconnectedState;

    #@225
    move-object/from16 v0, p0

    #@227
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$DisconnectedState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@22a
    move-object/from16 v0, p0

    #@22c
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedState:Lcom/android/internal/util/State;

    #@22e
    .line 932
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$WpsRunningState;

    #@230
    move-object/from16 v0, p0

    #@232
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$WpsRunningState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@235
    move-object/from16 v0, p0

    #@237
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWpsRunningState:Lcom/android/internal/util/State;

    #@239
    .line 935
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$SoftApStartingState;

    #@23b
    move-object/from16 v0, p0

    #@23d
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$SoftApStartingState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@240
    move-object/from16 v0, p0

    #@242
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartingState:Lcom/android/internal/util/State;

    #@244
    .line 937
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$SoftApStartedState;

    #@246
    move-object/from16 v0, p0

    #@248
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$SoftApStartedState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@24b
    move-object/from16 v0, p0

    #@24d
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartedState:Lcom/android/internal/util/State;

    #@24f
    .line 939
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$TetheringState;

    #@251
    move-object/from16 v0, p0

    #@253
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$TetheringState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@256
    move-object/from16 v0, p0

    #@258
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTetheringState:Lcom/android/internal/util/State;

    #@25a
    .line 941
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$TetheredState;

    #@25c
    move-object/from16 v0, p0

    #@25e
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$TetheredState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@261
    move-object/from16 v0, p0

    #@263
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTetheredState:Lcom/android/internal/util/State;

    #@265
    .line 943
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$UntetheringState;

    #@267
    move-object/from16 v0, p0

    #@269
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$UntetheringState;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@26c
    move-object/from16 v0, p0

    #@26e
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mUntetheringState:Lcom/android/internal/util/State;

    #@270
    .line 972
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$WifiScanListener;

    #@272
    move-object/from16 v0, p0

    #@274
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiStateMachine$WifiScanListener;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@277
    move-object/from16 v0, p0

    #@279
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanListener:Lcom/android/server/wifi/WifiStateMachine$WifiScanListener;

    #@27b
    .line 1001
    new-instance v2, Ljava/util/concurrent/atomic/AtomicInteger;

    #@27d
    const/4 v3, 0x1

    #@27e
    invoke-direct {v2, v3}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    #@281
    move-object/from16 v0, p0

    #@283
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@285
    .line 1010
    new-instance v2, Ljava/util/concurrent/atomic/AtomicInteger;

    #@287
    const/16 v3, 0xb

    #@289
    invoke-direct {v2, v3}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    #@28c
    move-object/from16 v0, p0

    #@28e
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@290
    .line 1028
    const/4 v2, 0x0

    #@291
    move-object/from16 v0, p0

    #@293
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mIsRunning:Z

    #@295
    .line 1033
    const/4 v2, 0x0

    #@296
    move-object/from16 v0, p0

    #@298
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mReportedRunning:Z

    #@29a
    .line 1038
    new-instance v2, Landroid/os/WorkSource;

    #@29c
    invoke-direct {v2}, Landroid/os/WorkSource;-><init>()V

    #@29f
    move-object/from16 v0, p0

    #@2a1
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRunningWifiUids:Landroid/os/WorkSource;

    #@2a3
    .line 1043
    new-instance v2, Landroid/os/WorkSource;

    #@2a5
    invoke-direct {v2}, Landroid/os/WorkSource;-><init>()V

    #@2a8
    move-object/from16 v0, p0

    #@2aa
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastRunningWifiUids:Landroid/os/WorkSource;

    #@2ac
    .line 1047
    const/4 v2, 0x0

    #@2ad
    move-object/from16 v0, p0

    #@2af
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTcpBufferSizes:Ljava/lang/String;

    #@2b1
    .line 1291
    const/4 v2, 0x0

    #@2b2
    move-object/from16 v0, p0

    #@2b4
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mVerboseLoggingLevel:I

    #@2b6
    .line 1379
    const-wide/16 v2, 0x0

    #@2b8
    move-object/from16 v0, p0

    #@2ba
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastScanPermissionUpdate:J

    #@2bc
    .line 1380
    const/4 v2, 0x0

    #@2bd
    move-object/from16 v0, p0

    #@2bf
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedModeGScanOffloadStarted:Z

    #@2c1
    .line 1413
    const/4 v2, 0x0

    #@2c2
    move-object/from16 v0, p0

    #@2c4
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mAggressiveHandover:I

    #@2c6
    .line 1453
    const/4 v2, 0x0

    #@2c7
    move-object/from16 v0, p0

    #@2c9
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mAlarmEnabled:Z

    #@2cb
    .line 1455
    new-instance v2, Ljava/util/concurrent/atomic/AtomicInteger;

    #@2cd
    invoke-direct {v2}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>()V

    #@2d0
    move-object/from16 v0, p0

    #@2d2
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2d4
    .line 1656
    const-wide/16 v2, 0x0

    #@2d6
    move-object/from16 v0, p0

    #@2d8
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedTimeStamp:J

    #@2da
    .line 1668
    const-wide/16 v2, 0x0

    #@2dc
    move-object/from16 v0, p0

    #@2de
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastStartScanTimeStamp:J

    #@2e0
    .line 1669
    const-wide/16 v2, 0x0

    #@2e2
    move-object/from16 v0, p0

    #@2e4
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScanDuration:J

    #@2e6
    .line 1672
    const-wide/16 v2, 0x0

    #@2e8
    move-object/from16 v0, p0

    #@2ea
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastConnectAttemptTimestamp:J

    #@2ec
    .line 1673
    const/4 v2, 0x0

    #@2ed
    move-object/from16 v0, p0

    #@2ef
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScanFreqs:Ljava/lang/String;

    #@2f1
    .line 1688
    const/4 v2, 0x0

    #@2f2
    move-object/from16 v0, p0

    #@2f4
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@2f6
    .line 1702
    const/4 v2, 0x0

    #@2f7
    move-object/from16 v0, p0

    #@2f9
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@2fb
    .line 1703
    const/4 v2, 0x0

    #@2fc
    move-object/from16 v0, p0

    #@2fe
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTime:I

    #@300
    .line 1704
    const/4 v2, 0x0

    #@301
    move-object/from16 v0, p0

    #@303
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTime:I

    #@305
    .line 1705
    const/4 v2, 0x0

    #@306
    move-object/from16 v0, p0

    #@308
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeStartScan:I

    #@30a
    .line 1706
    const/4 v2, 0x0

    #@30b
    move-object/from16 v0, p0

    #@30d
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeStartScan:I

    #@30f
    .line 1707
    const/4 v2, 0x0

    #@310
    move-object/from16 v0, p0

    #@312
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeStartScan:I

    #@314
    .line 1708
    const/4 v2, 0x0

    #@315
    move-object/from16 v0, p0

    #@317
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeScan:I

    #@319
    .line 1709
    const/4 v2, 0x0

    #@31a
    move-object/from16 v0, p0

    #@31c
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeScan:I

    #@31e
    .line 1710
    const/4 v2, 0x0

    #@31f
    move-object/from16 v0, p0

    #@321
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeScan:I

    #@323
    .line 1711
    const/4 v2, 0x0

    #@324
    move-object/from16 v0, p0

    #@326
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeThisScan:I

    #@328
    .line 1712
    const/4 v2, 0x0

    #@329
    move-object/from16 v0, p0

    #@32b
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeThisScan:I

    #@32d
    .line 1713
    const/4 v2, 0x0

    #@32e
    move-object/from16 v0, p0

    #@330
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeThisScan:I

    #@332
    .line 1715
    const/4 v2, 0x0

    #@333
    move-object/from16 v0, p0

    #@335
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeScreenStateChange:I

    #@337
    .line 1716
    const/4 v2, 0x0

    #@338
    move-object/from16 v0, p0

    #@33a
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeAtLastReport:I

    #@33c
    .line 1717
    const-wide/16 v2, 0x0

    #@33e
    move-object/from16 v0, p0

    #@340
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastOntimeReportTimeStamp:J

    #@342
    .line 1718
    const-wide/16 v2, 0x0

    #@344
    move-object/from16 v0, p0

    #@346
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScreenStateChangeTimeStamp:J

    #@348
    .line 1719
    const/4 v2, 0x0

    #@349
    move-object/from16 v0, p0

    #@34b
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeLastReport:I

    #@34d
    .line 1720
    const/4 v2, 0x0

    #@34e
    move-object/from16 v0, p0

    #@350
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeLastReport:I

    #@352
    .line 1721
    const/4 v2, 0x0

    #@353
    move-object/from16 v0, p0

    #@355
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeLastReport:I

    #@357
    .line 1723
    const-wide/16 v2, 0x0

    #@359
    move-object/from16 v0, p0

    #@35b
    iput-wide v2, v0, Lcom/android/server/wifi/WifiStateMachine;->lastLinkLayerStatsUpdate:J

    #@35d
    .line 3755
    const/4 v2, 0x0

    #@35e
    move-object/from16 v0, p0

    #@360
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->emptyScanResultCount:I

    #@362
    .line 4114
    const/4 v2, 0x0

    #@363
    move-object/from16 v0, p0

    #@365
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@367
    .line 4117
    const/4 v2, 0x0

    #@368
    move-object/from16 v0, p0

    #@36a
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->wifiScoringReport:Ljava/lang/String;

    #@36c
    .line 1062
    move-object/from16 v0, p1

    #@36e
    move-object/from16 v1, p0

    #@370
    iput-object v0, v1, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@372
    .line 1064
    move-object/from16 v0, p0

    #@374
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@376
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@379
    move-result-object v2

    #@37a
    const-string/jumbo v3, "wifi_country_code"

    #@37d
    .line 1063
    invoke-static {v2, v3}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    #@380
    move-result-object v2

    #@381
    move-object/from16 v0, p0

    #@383
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSetCountryCode:Ljava/lang/String;

    #@385
    .line 1065
    move-object/from16 v0, p2

    #@387
    move-object/from16 v1, p0

    #@389
    iput-object v0, v1, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@38b
    .line 1066
    new-instance v2, Landroid/net/NetworkInfo;

    #@38d
    const-string/jumbo v3, "WIFI"

    #@390
    const-string/jumbo v4, ""

    #@393
    const/4 v5, 0x1

    #@394
    const/4 v6, 0x0

    #@395
    invoke-direct {v2, v5, v6, v3, v4}, Landroid/net/NetworkInfo;-><init>(IILjava/lang/String;Ljava/lang/String;)V

    #@398
    move-object/from16 v0, p0

    #@39a
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@39c
    .line 1068
    const-string/jumbo v2, "batterystats"

    #@39f
    .line 1067
    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    #@3a2
    move-result-object v2

    #@3a3
    invoke-static {v2}, Lcom/android/internal/app/IBatteryStats$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/app/IBatteryStats;

    #@3a6
    move-result-object v2

    #@3a7
    move-object/from16 v0, p0

    #@3a9
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@3ab
    .line 1070
    const-string/jumbo v2, "network_management"

    #@3ae
    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    #@3b1
    move-result-object v8

    #@3b2
    .line 1071
    .local v8, "b":Landroid/os/IBinder;
    invoke-static {v8}, Landroid/os/INetworkManagementService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/INetworkManagementService;

    #@3b5
    move-result-object v2

    #@3b6
    move-object/from16 v0, p0

    #@3b8
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@3ba
    .line 1073
    move-object/from16 v0, p0

    #@3bc
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@3be
    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    #@3c1
    move-result-object v2

    #@3c2
    .line 1074
    const-string/jumbo v3, "android.hardware.wifi.direct"

    #@3c5
    .line 1073
    invoke-virtual {v2, v3}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    #@3c8
    move-result v2

    #@3c9
    move-object/from16 v0, p0

    #@3cb
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mP2pSupported:Z

    #@3cd
    .line 1076
    new-instance v2, Lcom/android/server/wifi/WifiNative;

    #@3cf
    move-object/from16 v0, p0

    #@3d1
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@3d3
    invoke-direct {v2, v3}, Lcom/android/server/wifi/WifiNative;-><init>(Ljava/lang/String;)V

    #@3d6
    move-object/from16 v0, p0

    #@3d8
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@3da
    .line 1077
    new-instance v2, Lcom/android/server/wifi/WifiConfigStore;

    #@3dc
    move-object/from16 v0, p0

    #@3de
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@3e0
    move-object/from16 v0, p1

    #@3e2
    move-object/from16 v1, p0

    #@3e4
    invoke-direct {v2, v0, v1, v3}, Lcom/android/server/wifi/WifiConfigStore;-><init>(Landroid/content/Context;Lcom/android/server/wifi/WifiStateMachine;Lcom/android/server/wifi/WifiNative;)V

    #@3e7
    move-object/from16 v0, p0

    #@3e9
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@3eb
    .line 1078
    new-instance v2, Lcom/android/server/wifi/WifiAutoJoinController;

    #@3ed
    .line 1079
    move-object/from16 v0, p0

    #@3ef
    iget-object v5, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@3f1
    move-object/from16 v0, p0

    #@3f3
    iget-object v6, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConnectionStatistics:Landroid/net/wifi/WifiConnectionStatistics;

    #@3f5
    move-object/from16 v0, p0

    #@3f7
    iget-object v7, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@3f9
    move-object/from16 v3, p1

    #@3fb
    move-object/from16 v4, p0

    #@3fd
    .line 1078
    invoke-direct/range {v2 .. v7}, Lcom/android/server/wifi/WifiAutoJoinController;-><init>(Landroid/content/Context;Lcom/android/server/wifi/WifiStateMachine;Lcom/android/server/wifi/WifiConfigStore;Landroid/net/wifi/WifiConnectionStatistics;Lcom/android/server/wifi/WifiNative;)V

    #@400
    move-object/from16 v0, p0

    #@402
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiAutoJoinController:Lcom/android/server/wifi/WifiAutoJoinController;

    #@404
    .line 1080
    new-instance v2, Lcom/android/server/wifi/WifiMonitor;

    #@406
    move-object/from16 v0, p0

    #@408
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@40a
    move-object/from16 v0, p0

    #@40c
    invoke-direct {v2, v0, v3}, Lcom/android/server/wifi/WifiMonitor;-><init>(Lcom/android/internal/util/StateMachine;Lcom/android/server/wifi/WifiNative;)V

    #@40f
    move-object/from16 v0, p0

    #@411
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiMonitor:Lcom/android/server/wifi/WifiMonitor;

    #@413
    .line 1081
    new-instance v2, Lcom/android/server/wifi/WifiLogger;

    #@415
    move-object/from16 v0, p0

    #@417
    invoke-direct {v2, v0}, Lcom/android/server/wifi/WifiLogger;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@41a
    move-object/from16 v0, p0

    #@41c
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLogger:Lcom/android/server/wifi/WifiLogger;

    #@41e
    .line 1083
    new-instance v2, Landroid/net/wifi/WifiInfo;

    #@420
    invoke-direct {v2}, Landroid/net/wifi/WifiInfo;-><init>()V

    #@423
    move-object/from16 v0, p0

    #@425
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@427
    .line 1084
    new-instance v2, Lcom/android/server/wifi/SupplicantStateTracker;

    #@429
    move-object/from16 v0, p0

    #@42b
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@42d
    .line 1085
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getHandler()Landroid/os/Handler;

    #@430
    move-result-object v4

    #@431
    .line 1084
    move-object/from16 v0, p1

    #@433
    move-object/from16 v1, p0

    #@435
    invoke-direct {v2, v0, v1, v3, v4}, Lcom/android/server/wifi/SupplicantStateTracker;-><init>(Landroid/content/Context;Lcom/android/server/wifi/WifiStateMachine;Lcom/android/server/wifi/WifiConfigStore;Landroid/os/Handler;)V

    #@438
    move-object/from16 v0, p0

    #@43a
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStateTracker:Lcom/android/server/wifi/SupplicantStateTracker;

    #@43c
    .line 1086
    new-instance v2, Landroid/net/LinkProperties;

    #@43e
    invoke-direct {v2}, Landroid/net/LinkProperties;-><init>()V

    #@441
    move-object/from16 v0, p0

    #@443
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@445
    .line 1088
    const-string/jumbo v2, "wifip2p"

    #@448
    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    #@44b
    move-result-object v14

    #@44c
    .line 1089
    .local v14, "s1":Landroid/os/IBinder;
    invoke-static {v14}, Landroid/net/wifi/p2p/IWifiP2pManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/wifi/p2p/IWifiP2pManager;

    #@44f
    move-result-object v2

    #@450
    check-cast v2, Lcom/android/server/wifi/p2p/WifiP2pServiceImpl;

    #@452
    move-object/from16 v0, p0

    #@454
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiP2pServiceImpl:Lcom/android/server/wifi/p2p/WifiP2pServiceImpl;

    #@456
    .line 1091
    const-string/jumbo v2, "wifipasspoint"

    #@459
    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    #@45c
    move-result-object v15

    #@45d
    .line 1093
    .local v15, "s2":Landroid/os/IBinder;
    move-object/from16 v0, p0

    #@45f
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@461
    const/4 v3, 0x0

    #@462
    invoke-virtual {v2, v3}, Landroid/net/NetworkInfo;->setIsAvailable(Z)V

    #@465
    .line 1094
    const/4 v2, 0x0

    #@466
    move-object/from16 v0, p0

    #@468
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@46a
    .line 1095
    const/4 v2, -0x1

    #@46b
    move-object/from16 v0, p0

    #@46d
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@46f
    .line 1096
    const/4 v2, -0x1

    #@470
    move-object/from16 v0, p0

    #@472
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastSignalLevel:I

    #@474
    .line 1098
    new-instance v2, Lcom/android/server/net/NetlinkTracker;

    #@476
    move-object/from16 v0, p0

    #@478
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@47a
    new-instance v4, Lcom/android/server/wifi/WifiStateMachine$1;

    #@47c
    move-object/from16 v0, p0

    #@47e
    invoke-direct {v4, v0}, Lcom/android/server/wifi/WifiStateMachine$1;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@481
    invoke-direct {v2, v3, v4}, Lcom/android/server/net/NetlinkTracker;-><init>(Ljava/lang/String;Lcom/android/server/net/NetlinkTracker$Callback;)V

    #@484
    move-object/from16 v0, p0

    #@486
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetlinkTracker:Lcom/android/server/net/NetlinkTracker;

    #@488
    .line 1104
    :try_start_0
    move-object/from16 v0, p0

    #@48a
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@48c
    move-object/from16 v0, p0

    #@48e
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetlinkTracker:Lcom/android/server/net/NetlinkTracker;

    #@490
    invoke-interface {v2, v3}, Landroid/os/INetworkManagementService;->registerObserver(Landroid/net/INetworkManagementEventObserver;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@493
    .line 1109
    :goto_0
    move-object/from16 v0, p0

    #@495
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@497
    const-string/jumbo v3, "alarm"

    #@49a
    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@49d
    move-result-object v2

    #@49e
    check-cast v2, Landroid/app/AlarmManager;

    #@4a0
    move-object/from16 v0, p0

    #@4a2
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mAlarmManager:Landroid/app/AlarmManager;

    #@4a4
    .line 1110
    const-string/jumbo v2, "com.android.server.WifiManager.action.START_SCAN"

    #@4a7
    const/4 v3, 0x0

    #@4a8
    move-object/from16 v0, p0

    #@4aa
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->getPrivateBroadcast(Ljava/lang/String;I)Landroid/app/PendingIntent;

    #@4ad
    move-result-object v2

    #@4ae
    move-object/from16 v0, p0

    #@4b0
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanIntent:Landroid/app/PendingIntent;

    #@4b2
    .line 1111
    const-string/jumbo v2, "com.android.server.WifiManager.action.START_PNO"

    #@4b5
    const/4 v3, 0x0

    #@4b6
    move-object/from16 v0, p0

    #@4b8
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->getPrivateBroadcast(Ljava/lang/String;I)Landroid/app/PendingIntent;

    #@4bb
    move-result-object v2

    #@4bc
    move-object/from16 v0, p0

    #@4be
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mPnoIntent:Landroid/app/PendingIntent;

    #@4c0
    .line 1114
    move-object/from16 v0, p0

    #@4c2
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@4c4
    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@4c7
    move-result-object v2

    #@4c8
    .line 1115
    const v3, 0x10e0029

    #@4cb
    .line 1114
    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    #@4ce
    move-result v12

    #@4cf
    .line 1116
    .local v12, "period":I
    const/16 v2, 0x2710

    #@4d1
    if-ge v12, v2, :cond_0

    #@4d3
    .line 1117
    const/16 v12, 0x2710

    #@4d5
    .line 1119
    :cond_0
    move-object/from16 v0, p0

    #@4d7
    iput v12, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultFrameworkScanIntervalMs:I

    #@4d9
    .line 1121
    move-object/from16 v0, p0

    #@4db
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@4dd
    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@4e0
    move-result-object v2

    #@4e1
    .line 1122
    const v3, 0x10e002a

    #@4e4
    .line 1121
    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    #@4e7
    move-result v2

    #@4e8
    move-object/from16 v0, p0

    #@4ea
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNoNetworksPeriodicScan:I

    #@4ec
    .line 1124
    move-object/from16 v0, p0

    #@4ee
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@4f0
    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@4f3
    move-result-object v2

    #@4f4
    .line 1125
    const v3, 0x10e0039

    #@4f7
    .line 1124
    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    #@4fa
    move-result v2

    #@4fb
    move-object/from16 v0, p0

    #@4fd
    iput v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStopDelayMs:I

    #@4ff
    .line 1127
    move-object/from16 v0, p0

    #@501
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@503
    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@506
    move-result-object v2

    #@507
    .line 1128
    const v3, 0x1120018

    #@50a
    .line 1127
    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@50d
    move-result v2

    #@50e
    move-object/from16 v0, p0

    #@510
    iput-boolean v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mBackgroundScanSupported:Z

    #@512
    .line 1130
    move-object/from16 v0, p0

    #@514
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@516
    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@519
    move-result-object v2

    #@51a
    .line 1131
    const v3, 0x104001d

    #@51d
    .line 1130
    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    #@520
    move-result-object v2

    #@521
    move-object/from16 v0, p0

    #@523
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mPrimaryDeviceType:Ljava/lang/String;

    #@525
    .line 1133
    move-object/from16 v0, p0

    #@527
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@529
    move-object/from16 v0, p0

    #@52b
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@52d
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@530
    move-result-object v2

    #@531
    .line 1134
    const-string/jumbo v4, "wifi_suspend_optimizations_enabled"

    #@534
    const/4 v5, 0x1

    #@535
    .line 1133
    invoke-static {v2, v4, v5}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@538
    move-result v2

    #@539
    .line 1134
    const/4 v4, 0x1

    #@53a
    .line 1133
    if-ne v2, v4, :cond_2

    #@53c
    const/4 v2, 0x1

    #@53d
    :goto_1
    invoke-virtual {v3, v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    #@540
    .line 1136
    move-object/from16 v0, p0

    #@542
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@544
    const/4 v3, 0x1

    #@545
    invoke-virtual {v2, v3}, Landroid/net/NetworkCapabilities;->addTransportType(I)Landroid/net/NetworkCapabilities;

    #@548
    .line 1137
    move-object/from16 v0, p0

    #@54a
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@54c
    const/16 v3, 0xc

    #@54e
    invoke-virtual {v2, v3}, Landroid/net/NetworkCapabilities;->addCapability(I)Landroid/net/NetworkCapabilities;

    #@551
    .line 1138
    move-object/from16 v0, p0

    #@553
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@555
    const/16 v3, 0xd

    #@557
    invoke-virtual {v2, v3}, Landroid/net/NetworkCapabilities;->addCapability(I)Landroid/net/NetworkCapabilities;

    #@55a
    .line 1139
    move-object/from16 v0, p0

    #@55c
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@55e
    const/high16 v3, 0x100000

    #@560
    invoke-virtual {v2, v3}, Landroid/net/NetworkCapabilities;->setLinkUpstreamBandwidthKbps(I)V

    #@563
    .line 1140
    move-object/from16 v0, p0

    #@565
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@567
    const/high16 v3, 0x100000

    #@569
    invoke-virtual {v2, v3}, Landroid/net/NetworkCapabilities;->setLinkDownstreamBandwidthKbps(I)V

    #@56c
    .line 1142
    new-instance v2, Landroid/net/NetworkCapabilities;

    #@56e
    move-object/from16 v0, p0

    #@570
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@572
    invoke-direct {v2, v3}, Landroid/net/NetworkCapabilities;-><init>(Landroid/net/NetworkCapabilities;)V

    #@575
    move-object/from16 v0, p0

    #@577
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilities:Landroid/net/NetworkCapabilities;

    #@579
    .line 1144
    move-object/from16 v0, p0

    #@57b
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@57d
    .line 1145
    new-instance v3, Lcom/android/server/wifi/WifiStateMachine$2;

    #@57f
    move-object/from16 v0, p0

    #@581
    invoke-direct {v3, v0}, Lcom/android/server/wifi/WifiStateMachine$2;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@584
    .line 1154
    new-instance v4, Landroid/content/IntentFilter;

    #@586
    const-string/jumbo v5, "android.net.conn.TETHER_STATE_CHANGED"

    #@589
    invoke-direct {v4, v5}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    #@58c
    .line 1144
    invoke-virtual {v2, v3, v4}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@58f
    .line 1156
    move-object/from16 v0, p0

    #@591
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@593
    .line 1157
    new-instance v3, Lcom/android/server/wifi/WifiStateMachine$3;

    #@595
    move-object/from16 v0, p0

    #@597
    invoke-direct {v3, v0}, Lcom/android/server/wifi/WifiStateMachine$3;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@59a
    .line 1166
    new-instance v4, Landroid/content/IntentFilter;

    #@59c
    const-string/jumbo v5, "com.android.server.WifiManager.action.START_SCAN"

    #@59f
    invoke-direct {v4, v5}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    #@5a2
    .line 1156
    invoke-virtual {v2, v3, v4}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@5a5
    .line 1168
    move-object/from16 v0, p0

    #@5a7
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@5a9
    .line 1169
    new-instance v3, Lcom/android/server/wifi/WifiStateMachine$4;

    #@5ab
    move-object/from16 v0, p0

    #@5ad
    invoke-direct {v3, v0}, Lcom/android/server/wifi/WifiStateMachine$4;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@5b0
    .line 1178
    new-instance v4, Landroid/content/IntentFilter;

    #@5b2
    const-string/jumbo v5, "com.android.server.WifiManager.action.START_PNO"

    #@5b5
    invoke-direct {v4, v5}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    #@5b8
    .line 1168
    invoke-virtual {v2, v3, v4}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@5bb
    .line 1181
    new-instance v10, Landroid/content/IntentFilter;

    #@5bd
    invoke-direct {v10}, Landroid/content/IntentFilter;-><init>()V

    #@5c0
    .line 1182
    .local v10, "filter":Landroid/content/IntentFilter;
    const-string/jumbo v2, "android.intent.action.SCREEN_ON"

    #@5c3
    invoke-virtual {v10, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    #@5c6
    .line 1183
    const-string/jumbo v2, "android.intent.action.SCREEN_OFF"

    #@5c9
    invoke-virtual {v10, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    #@5cc
    .line 1184
    move-object/from16 v0, p0

    #@5ce
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@5d0
    .line 1185
    new-instance v3, Lcom/android/server/wifi/WifiStateMachine$5;

    #@5d2
    move-object/from16 v0, p0

    #@5d4
    invoke-direct {v3, v0}, Lcom/android/server/wifi/WifiStateMachine$5;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@5d7
    .line 1184
    invoke-virtual {v2, v3, v10}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@5da
    .line 1198
    move-object/from16 v0, p0

    #@5dc
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@5de
    .line 1199
    new-instance v3, Lcom/android/server/wifi/WifiStateMachine$6;

    #@5e0
    move-object/from16 v0, p0

    #@5e2
    invoke-direct {v3, v0}, Lcom/android/server/wifi/WifiStateMachine$6;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@5e5
    .line 1206
    new-instance v4, Landroid/content/IntentFilter;

    #@5e7
    const-string/jumbo v5, "com.android.server.WifiManager.action.DELAYED_DRIVER_STOP"

    #@5ea
    invoke-direct {v4, v5}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    #@5ed
    .line 1198
    invoke-virtual {v2, v3, v4}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@5f0
    .line 1208
    move-object/from16 v0, p0

    #@5f2
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@5f4
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@5f7
    move-result-object v2

    #@5f8
    .line 1209
    const-string/jumbo v3, "wifi_suspend_optimizations_enabled"

    #@5fb
    .line 1208
    invoke-static {v3}, Landroid/provider/Settings$Global;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    #@5fe
    move-result-object v3

    #@5ff
    .line 1210
    new-instance v4, Lcom/android/server/wifi/WifiStateMachine$7;

    #@601
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getHandler()Landroid/os/Handler;

    #@604
    move-result-object v5

    #@605
    move-object/from16 v0, p0

    #@607
    invoke-direct {v4, v0, v5}, Lcom/android/server/wifi/WifiStateMachine$7;-><init>(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Handler;)V

    #@60a
    .line 1209
    const/4 v5, 0x0

    #@60b
    .line 1208
    invoke-virtual {v2, v3, v5, v4}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V

    #@60e
    .line 1218
    move-object/from16 v0, p0

    #@610
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@612
    .line 1219
    new-instance v3, Lcom/android/server/wifi/WifiStateMachine$8;

    #@614
    move-object/from16 v0, p0

    #@616
    invoke-direct {v3, v0}, Lcom/android/server/wifi/WifiStateMachine$8;-><init>(Lcom/android/server/wifi/WifiStateMachine;)V

    #@619
    .line 1225
    new-instance v4, Landroid/content/IntentFilter;

    #@61b
    const-string/jumbo v5, "android.intent.action.BOOT_COMPLETED"

    #@61e
    invoke-direct {v4, v5}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    #@621
    .line 1218
    invoke-virtual {v2, v3, v4}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@624
    .line 1227
    new-instance v2, Landroid/util/LruCache;

    #@626
    const/16 v3, 0xa0

    #@628
    invoke-direct {v2, v3}, Landroid/util/LruCache;-><init>(I)V

    #@62b
    move-object/from16 v0, p0

    #@62d
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResultCache:Landroid/util/LruCache;

    #@62f
    .line 1229
    move-object/from16 v0, p0

    #@631
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@633
    const-string/jumbo v3, "power"

    #@636
    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@639
    move-result-object v13

    #@63a
    check-cast v13, Landroid/os/PowerManager;

    #@63c
    .line 1230
    .local v13, "powerManager":Landroid/os/PowerManager;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getName()Ljava/lang/String;

    #@63f
    move-result-object v2

    #@640
    const/4 v3, 0x1

    #@641
    invoke-virtual {v13, v3, v2}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@644
    move-result-object v2

    #@645
    move-object/from16 v0, p0

    #@647
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWakeLock:Landroid/os/PowerManager$WakeLock;

    #@649
    .line 1232
    const-string/jumbo v2, "WifiScan"

    #@64c
    const/4 v3, 0x1

    #@64d
    invoke-virtual {v13, v3, v2}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@650
    move-result-object v2

    #@651
    move-object/from16 v0, p0

    #@653
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@655
    .line 1233
    move-object/from16 v0, p0

    #@657
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@659
    const/4 v3, 0x0

    #@65a
    invoke-virtual {v2, v3}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    #@65d
    .line 1235
    const-string/jumbo v2, "WifiSuspend"

    #@660
    const/4 v3, 0x1

    #@661
    invoke-virtual {v13, v3, v2}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@664
    move-result-object v2

    #@665
    move-object/from16 v0, p0

    #@667
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendWakeLock:Landroid/os/PowerManager$WakeLock;

    #@669
    .line 1236
    move-object/from16 v0, p0

    #@66b
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendWakeLock:Landroid/os/PowerManager$WakeLock;

    #@66d
    const/4 v3, 0x0

    #@66e
    invoke-virtual {v2, v3}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    #@671
    .line 1238
    move-object/from16 v0, p0

    #@673
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@675
    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@678
    move-result-object v2

    #@679
    .line 1239
    const v3, 0x1040041

    #@67c
    .line 1238
    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    #@67f
    move-result-object v2

    #@680
    move-object/from16 v0, p0

    #@682
    iput-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTcpBufferSizes:Ljava/lang/String;

    #@684
    .line 1241
    move-object/from16 v0, p0

    #@686
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultState:Lcom/android/internal/util/State;

    #@688
    move-object/from16 v0, p0

    #@68a
    invoke-virtual {v0, v2}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;)V

    #@68d
    .line 1242
    move-object/from16 v0, p0

    #@68f
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mInitialState:Lcom/android/internal/util/State;

    #@691
    move-object/from16 v0, p0

    #@693
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultState:Lcom/android/internal/util/State;

    #@695
    move-object/from16 v0, p0

    #@697
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@69a
    .line 1243
    move-object/from16 v0, p0

    #@69c
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartingState:Lcom/android/internal/util/State;

    #@69e
    move-object/from16 v0, p0

    #@6a0
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultState:Lcom/android/internal/util/State;

    #@6a2
    move-object/from16 v0, p0

    #@6a4
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@6a7
    .line 1244
    move-object/from16 v0, p0

    #@6a9
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartedState:Lcom/android/internal/util/State;

    #@6ab
    move-object/from16 v0, p0

    #@6ad
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultState:Lcom/android/internal/util/State;

    #@6af
    move-object/from16 v0, p0

    #@6b1
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@6b4
    .line 1245
    move-object/from16 v0, p0

    #@6b6
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartingState:Lcom/android/internal/util/State;

    #@6b8
    move-object/from16 v0, p0

    #@6ba
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartedState:Lcom/android/internal/util/State;

    #@6bc
    move-object/from16 v0, p0

    #@6be
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@6c1
    .line 1246
    move-object/from16 v0, p0

    #@6c3
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartedState:Lcom/android/internal/util/State;

    #@6c5
    move-object/from16 v0, p0

    #@6c7
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartedState:Lcom/android/internal/util/State;

    #@6c9
    move-object/from16 v0, p0

    #@6cb
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@6ce
    .line 1247
    move-object/from16 v0, p0

    #@6d0
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanModeState:Lcom/android/internal/util/State;

    #@6d2
    move-object/from16 v0, p0

    #@6d4
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartedState:Lcom/android/internal/util/State;

    #@6d6
    move-object/from16 v0, p0

    #@6d8
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@6db
    .line 1248
    move-object/from16 v0, p0

    #@6dd
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectModeState:Lcom/android/internal/util/State;

    #@6df
    move-object/from16 v0, p0

    #@6e1
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStartedState:Lcom/android/internal/util/State;

    #@6e3
    move-object/from16 v0, p0

    #@6e5
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@6e8
    .line 1249
    move-object/from16 v0, p0

    #@6ea
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mL2ConnectedState:Lcom/android/internal/util/State;

    #@6ec
    move-object/from16 v0, p0

    #@6ee
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectModeState:Lcom/android/internal/util/State;

    #@6f0
    move-object/from16 v0, p0

    #@6f2
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@6f5
    .line 1250
    move-object/from16 v0, p0

    #@6f7
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mObtainingIpState:Lcom/android/internal/util/State;

    #@6f9
    move-object/from16 v0, p0

    #@6fb
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mL2ConnectedState:Lcom/android/internal/util/State;

    #@6fd
    move-object/from16 v0, p0

    #@6ff
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@702
    .line 1251
    move-object/from16 v0, p0

    #@704
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mVerifyingLinkState:Lcom/android/internal/util/State;

    #@706
    move-object/from16 v0, p0

    #@708
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mL2ConnectedState:Lcom/android/internal/util/State;

    #@70a
    move-object/from16 v0, p0

    #@70c
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@70f
    .line 1252
    move-object/from16 v0, p0

    #@711
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@713
    move-object/from16 v0, p0

    #@715
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mL2ConnectedState:Lcom/android/internal/util/State;

    #@717
    move-object/from16 v0, p0

    #@719
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@71c
    .line 1253
    move-object/from16 v0, p0

    #@71e
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mRoamingState:Lcom/android/internal/util/State;

    #@720
    move-object/from16 v0, p0

    #@722
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mL2ConnectedState:Lcom/android/internal/util/State;

    #@724
    move-object/from16 v0, p0

    #@726
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@729
    .line 1254
    move-object/from16 v0, p0

    #@72b
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectingState:Lcom/android/internal/util/State;

    #@72d
    move-object/from16 v0, p0

    #@72f
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectModeState:Lcom/android/internal/util/State;

    #@731
    move-object/from16 v0, p0

    #@733
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@736
    .line 1255
    move-object/from16 v0, p0

    #@738
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedState:Lcom/android/internal/util/State;

    #@73a
    move-object/from16 v0, p0

    #@73c
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectModeState:Lcom/android/internal/util/State;

    #@73e
    move-object/from16 v0, p0

    #@740
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@743
    .line 1256
    move-object/from16 v0, p0

    #@745
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWpsRunningState:Lcom/android/internal/util/State;

    #@747
    move-object/from16 v0, p0

    #@749
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectModeState:Lcom/android/internal/util/State;

    #@74b
    move-object/from16 v0, p0

    #@74d
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@750
    .line 1257
    move-object/from16 v0, p0

    #@752
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mWaitForP2pDisableState:Lcom/android/internal/util/State;

    #@754
    move-object/from16 v0, p0

    #@756
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartedState:Lcom/android/internal/util/State;

    #@758
    move-object/from16 v0, p0

    #@75a
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@75d
    .line 1258
    move-object/from16 v0, p0

    #@75f
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStoppingState:Lcom/android/internal/util/State;

    #@761
    move-object/from16 v0, p0

    #@763
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartedState:Lcom/android/internal/util/State;

    #@765
    move-object/from16 v0, p0

    #@767
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@76a
    .line 1259
    move-object/from16 v0, p0

    #@76c
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mDriverStoppedState:Lcom/android/internal/util/State;

    #@76e
    move-object/from16 v0, p0

    #@770
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStartedState:Lcom/android/internal/util/State;

    #@772
    move-object/from16 v0, p0

    #@774
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@777
    .line 1260
    move-object/from16 v0, p0

    #@779
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStoppingState:Lcom/android/internal/util/State;

    #@77b
    move-object/from16 v0, p0

    #@77d
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultState:Lcom/android/internal/util/State;

    #@77f
    move-object/from16 v0, p0

    #@781
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@784
    .line 1261
    move-object/from16 v0, p0

    #@786
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartingState:Lcom/android/internal/util/State;

    #@788
    move-object/from16 v0, p0

    #@78a
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultState:Lcom/android/internal/util/State;

    #@78c
    move-object/from16 v0, p0

    #@78e
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@791
    .line 1262
    move-object/from16 v0, p0

    #@793
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartedState:Lcom/android/internal/util/State;

    #@795
    move-object/from16 v0, p0

    #@797
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultState:Lcom/android/internal/util/State;

    #@799
    move-object/from16 v0, p0

    #@79b
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@79e
    .line 1263
    move-object/from16 v0, p0

    #@7a0
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTetheringState:Lcom/android/internal/util/State;

    #@7a2
    move-object/from16 v0, p0

    #@7a4
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartedState:Lcom/android/internal/util/State;

    #@7a6
    move-object/from16 v0, p0

    #@7a8
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@7ab
    .line 1264
    move-object/from16 v0, p0

    #@7ad
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mTetheredState:Lcom/android/internal/util/State;

    #@7af
    move-object/from16 v0, p0

    #@7b1
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartedState:Lcom/android/internal/util/State;

    #@7b3
    move-object/from16 v0, p0

    #@7b5
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@7b8
    .line 1265
    move-object/from16 v0, p0

    #@7ba
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mUntetheringState:Lcom/android/internal/util/State;

    #@7bc
    move-object/from16 v0, p0

    #@7be
    iget-object v3, v0, Lcom/android/server/wifi/WifiStateMachine;->mSoftApStartedState:Lcom/android/internal/util/State;

    #@7c0
    move-object/from16 v0, p0

    #@7c2
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->addState(Lcom/android/internal/util/State;Lcom/android/internal/util/State;)V

    #@7c5
    .line 1267
    move-object/from16 v0, p0

    #@7c7
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mInitialState:Lcom/android/internal/util/State;

    #@7c9
    move-object/from16 v0, p0

    #@7cb
    invoke-virtual {v0, v2}, Lcom/android/server/wifi/WifiStateMachine;->setInitialState(Lcom/android/internal/util/State;)V

    #@7ce
    .line 1269
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    #@7d1
    move-result v2

    #@7d2
    if-eqz v2, :cond_3

    #@7d4
    const/16 v2, 0x64

    #@7d6
    :goto_2
    move-object/from16 v0, p0

    #@7d8
    invoke-virtual {v0, v2}, Lcom/android/server/wifi/WifiStateMachine;->setLogRecSize(I)V

    #@7db
    .line 1270
    const/4 v2, 0x0

    #@7dc
    move-object/from16 v0, p0

    #@7de
    invoke-virtual {v0, v2}, Lcom/android/server/wifi/WifiStateMachine;->setLogOnlyTransitions(Z)V

    #@7e1
    .line 1271
    sget-boolean v2, Lcom/android/server/wifi/WifiStateMachine;->VDBG:Z

    #@7e3
    if-eqz v2, :cond_1

    #@7e5
    const/4 v2, 0x1

    #@7e6
    move-object/from16 v0, p0

    #@7e8
    invoke-virtual {v0, v2}, Lcom/android/server/wifi/WifiStateMachine;->setDbg(Z)V

    #@7eb
    .line 1274
    :cond_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->start()V

    #@7ee
    .line 1276
    new-instance v11, Landroid/content/Intent;

    #@7f0
    const-string/jumbo v2, "wifi_scan_available"

    #@7f3
    invoke-direct {v11, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@7f6
    .line 1277
    .local v11, "intent":Landroid/content/Intent;
    const/high16 v2, 0x4000000

    #@7f8
    invoke-virtual {v11, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@7fb
    .line 1278
    const-string/jumbo v2, "scan_enabled"

    #@7fe
    const/4 v3, 0x1

    #@7ff
    invoke-virtual {v11, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    #@802
    .line 1279
    move-object/from16 v0, p0

    #@804
    iget-object v2, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@806
    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@808
    invoke-virtual {v2, v11, v3}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    #@80b
    .line 1060
    return-void

    #@80c
    .line 1105
    .end local v10    # "filter":Landroid/content/IntentFilter;
    .end local v11    # "intent":Landroid/content/Intent;
    .end local v12    # "period":I
    .end local v13    # "powerManager":Landroid/os/PowerManager;
    :catch_0
    move-exception v9

    #@80d
    .line 1106
    .local v9, "e":Landroid/os/RemoteException;
    new-instance v2, Ljava/lang/StringBuilder;

    #@80f
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@812
    const-string/jumbo v3, "Couldn\'t register netlink tracker: "

    #@815
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@818
    move-result-object v2

    #@819
    invoke-virtual {v9}, Landroid/os/RemoteException;->toString()Ljava/lang/String;

    #@81c
    move-result-object v3

    #@81d
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@820
    move-result-object v2

    #@821
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@824
    move-result-object v2

    #@825
    move-object/from16 v0, p0

    #@827
    invoke-virtual {v0, v2}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@82a
    goto/16 :goto_0

    #@82c
    .line 1133
    .end local v9    # "e":Landroid/os/RemoteException;
    .restart local v12    # "period":I
    :cond_2
    const/4 v2, 0x0

    #@82d
    goto/16 :goto_1

    #@82f
    .line 1269
    .restart local v10    # "filter":Landroid/content/IntentFilter;
    .restart local v13    # "powerManager":Landroid/os/PowerManager;
    :cond_3
    const/16 v2, 0xbb8

    #@831
    goto :goto_2
.end method

.method private broadcastWifiCredentialChanged(ILandroid/net/wifi/WifiConfiguration;)V
    .locals 4
    .param p1, "wifiCredentialEventType"    # I
    .param p2, "config"    # Landroid/net/wifi/WifiConfiguration;

    #@0
    .prologue
    .line 9679
    if-eqz p2, :cond_0

    #@2
    iget-object v1, p2, Landroid/net/wifi/WifiConfiguration;->preSharedKey:Ljava/lang/String;

    #@4
    if-eqz v1, :cond_0

    #@6
    .line 9680
    new-instance v0, Landroid/content/Intent;

    #@8
    const-string/jumbo v1, "android.net.wifi.WIFI_CREDENTIAL_CHANGED"

    #@b
    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@e
    .line 9681
    .local v0, "intent":Landroid/content/Intent;
    const-string/jumbo v1, "ssid"

    #@11
    iget-object v2, p2, Landroid/net/wifi/WifiConfiguration;->SSID:Ljava/lang/String;

    #@13
    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    #@16
    .line 9682
    const-string/jumbo v1, "et"

    #@19
    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    #@1c
    .line 9684
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@1e
    sget-object v2, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    #@20
    .line 9685
    const-string/jumbo v3, "android.permission.RECEIVE_WIFI_CREDENTIAL_CHANGE"

    #@23
    .line 9684
    invoke-virtual {v1, v0, v2, v3}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V

    #@26
    .line 9678
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_0
    return-void
.end method

.method private buildIdentity(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    .locals 7
    .param p1, "eapMethod"    # I
    .param p2, "imsi"    # Ljava/lang/String;
    .param p3, "mccMnc"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v6, 0x6

    #@1
    const/4 v5, 0x0

    #@2
    const/4 v4, 0x3

    #@3
    .line 7844
    if-eqz p2, :cond_0

    #@5
    invoke-virtual {p2}, Ljava/lang/String;->isEmpty()Z

    #@8
    move-result v3

    #@9
    if-eqz v3, :cond_1

    #@b
    .line 7845
    :cond_0
    const-string/jumbo v3, ""

    #@e
    return-object v3

    #@f
    .line 7847
    :cond_1
    const/4 v3, 0x4

    #@10
    if-ne p1, v3, :cond_4

    #@12
    .line 7848
    const-string/jumbo v2, "1"

    #@15
    .line 7857
    .local v2, "prefix":Ljava/lang/String;
    :goto_0
    if-eqz p3, :cond_2

    #@17
    invoke-virtual {p3}, Ljava/lang/String;->isEmpty()Z

    #@1a
    move-result v3

    #@1b
    if-eqz v3, :cond_7

    #@1d
    .line 7864
    :cond_2
    invoke-virtual {p2, v5, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@20
    move-result-object v0

    #@21
    .line 7865
    .local v0, "mcc":Ljava/lang/String;
    invoke-virtual {p2, v4, v6}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@24
    move-result-object v1

    #@25
    .line 7868
    .local v1, "mnc":Ljava/lang/String;
    :cond_3
    :goto_1
    new-instance v3, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v3

    #@2e
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@31
    move-result-object v3

    #@32
    const-string/jumbo v4, "@wlan.mnc"

    #@35
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@38
    move-result-object v3

    #@39
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3c
    move-result-object v3

    #@3d
    const-string/jumbo v4, ".mcc"

    #@40
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@43
    move-result-object v3

    #@44
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@47
    move-result-object v3

    #@48
    const-string/jumbo v4, ".3gppnetwork.org"

    #@4b
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v3

    #@4f
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52
    move-result-object v3

    #@53
    return-object v3

    #@54
    .line 7849
    .end local v0    # "mcc":Ljava/lang/String;
    .end local v1    # "mnc":Ljava/lang/String;
    .end local v2    # "prefix":Ljava/lang/String;
    :cond_4
    const/4 v3, 0x5

    #@55
    if-ne p1, v3, :cond_5

    #@57
    .line 7850
    const-string/jumbo v2, "0"

    #@5a
    .restart local v2    # "prefix":Ljava/lang/String;
    goto :goto_0

    #@5b
    .line 7851
    .end local v2    # "prefix":Ljava/lang/String;
    :cond_5
    if-ne p1, v6, :cond_6

    #@5d
    .line 7852
    const-string/jumbo v2, "6"

    #@60
    .restart local v2    # "prefix":Ljava/lang/String;
    goto :goto_0

    #@61
    .line 7854
    .end local v2    # "prefix":Ljava/lang/String;
    :cond_6
    const-string/jumbo v3, ""

    #@64
    return-object v3

    #@65
    .line 7858
    .restart local v2    # "prefix":Ljava/lang/String;
    :cond_7
    invoke-virtual {p3, v5, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@68
    move-result-object v0

    #@69
    .line 7859
    .restart local v0    # "mcc":Ljava/lang/String;
    invoke-virtual {p3, v4}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@6c
    move-result-object v1

    #@6d
    .line 7860
    .restart local v1    # "mnc":Ljava/lang/String;
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@70
    move-result v3

    #@71
    const/4 v4, 0x2

    #@72
    if-ne v3, v4, :cond_3

    #@74
    .line 7861
    new-instance v3, Ljava/lang/StringBuilder;

    #@76
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@79
    const-string/jumbo v4, "0"

    #@7c
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v3

    #@80
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@83
    move-result-object v3

    #@84
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@87
    move-result-object v1

    #@88
    goto :goto_1
.end method

.method private calculateWifiScore(Landroid/net/wifi/WifiLinkLayerStats;)V
    .locals 22
    .param p1, "stats"    # Landroid/net/wifi/WifiLinkLayerStats;

    #@0
    .prologue
    .line 4120
    new-instance v13, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    .line 4122
    .local v13, "sb":Ljava/lang/StringBuilder;
    const/16 v15, 0x38

    #@7
    .line 4123
    .local v15, "score":I
    move-object/from16 v0, p0

    #@9
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@b
    move-object/from16 v17, v0

    #@d
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->is24GHz()Z

    #@10
    move-result v17

    #@11
    if-eqz v17, :cond_21

    #@13
    .line 4124
    move-object/from16 v0, p0

    #@15
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@17
    move-object/from16 v17, v0

    #@19
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->getLinkSpeed()I

    #@1c
    move-result v17

    #@1d
    move-object/from16 v0, p0

    #@1f
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@21
    move-object/from16 v18, v0

    #@23
    move-object/from16 v0, v18

    #@25
    iget v0, v0, Lcom/android/server/wifi/WifiConfigStore;->badLinkSpeed24:I

    #@27
    move/from16 v18, v0

    #@29
    move/from16 v0, v17

    #@2b
    move/from16 v1, v18

    #@2d
    if-ge v0, v1, :cond_21

    #@2f
    .line 4123
    const/4 v5, 0x1

    #@30
    .line 4127
    .local v5, "isBadLinkspeed":Z
    :goto_0
    move-object/from16 v0, p0

    #@32
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@34
    move-object/from16 v17, v0

    #@36
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->is24GHz()Z

    #@39
    move-result v17

    #@3a
    if-eqz v17, :cond_23

    #@3c
    .line 4128
    move-object/from16 v0, p0

    #@3e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@40
    move-object/from16 v17, v0

    #@42
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->getLinkSpeed()I

    #@45
    move-result v17

    #@46
    move-object/from16 v0, p0

    #@48
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@4a
    move-object/from16 v18, v0

    #@4c
    move-object/from16 v0, v18

    #@4e
    iget v0, v0, Lcom/android/server/wifi/WifiConfigStore;->goodLinkSpeed24:I

    #@50
    move/from16 v18, v0

    #@52
    move/from16 v0, v17

    #@54
    move/from16 v1, v18

    #@56
    if-lt v0, v1, :cond_23

    #@58
    .line 4127
    const/4 v7, 0x1

    #@59
    .line 4132
    .local v7, "isGoodLinkspeed":Z
    :goto_1
    if-eqz v5, :cond_25

    #@5b
    .line 4133
    move-object/from16 v0, p0

    #@5d
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@5f
    move/from16 v17, v0

    #@61
    const/16 v18, 0x6

    #@63
    move/from16 v0, v17

    #@65
    move/from16 v1, v18

    #@67
    if-ge v0, v1, :cond_0

    #@69
    .line 4134
    move-object/from16 v0, p0

    #@6b
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@6d
    move/from16 v17, v0

    #@6f
    add-int/lit8 v17, v17, 0x1

    #@71
    move/from16 v0, v17

    #@73
    move-object/from16 v1, p0

    #@75
    iput v0, v1, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@77
    .line 4140
    :cond_0
    :goto_2
    if-eqz v5, :cond_1

    #@79
    const-string/jumbo v17, " bl("

    #@7c
    move-object/from16 v0, v17

    #@7e
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@81
    move-result-object v17

    #@82
    move-object/from16 v0, p0

    #@84
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@86
    move/from16 v18, v0

    #@88
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@8b
    move-result-object v17

    #@8c
    const-string/jumbo v18, ")"

    #@8f
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@92
    .line 4141
    :cond_1
    if-eqz v7, :cond_2

    #@94
    const-string/jumbo v17, " gl"

    #@97
    move-object/from16 v0, v17

    #@99
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9c
    .line 4151
    :cond_2
    const/16 v16, 0x0

    #@9e
    .line 4152
    .local v16, "use24Thresholds":Z
    const/4 v3, 0x0

    #@9f
    .line 4153
    .local v3, "homeNetworkBoost":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@a2
    move-result-object v2

    #@a3
    .line 4155
    .local v2, "currentConfiguration":Landroid/net/wifi/WifiConfiguration;
    move-object/from16 v0, p0

    #@a5
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@a7
    move-object/from16 v17, v0

    #@a9
    move-object/from16 v0, v17

    #@ab
    invoke-virtual {v0, v2}, Lcom/android/server/wifi/WifiConfigStore;->getScanDetailCache(Landroid/net/wifi/WifiConfiguration;)Lcom/android/server/wifi/ScanDetailCache;

    #@ae
    move-result-object v14

    #@af
    .line 4156
    .local v14, "scanDetailCache":Lcom/android/server/wifi/ScanDetailCache;
    if-eqz v2, :cond_4

    #@b1
    if-eqz v14, :cond_4

    #@b3
    .line 4157
    const-wide/16 v18, 0x2ee0

    #@b5
    move-wide/from16 v0, v18

    #@b7
    invoke-virtual {v14, v0, v1}, Lcom/android/server/wifi/ScanDetailCache;->getVisibility(J)Landroid/net/wifi/WifiConfiguration$Visibility;

    #@ba
    move-result-object v17

    #@bb
    move-object/from16 v0, v17

    #@bd
    invoke-virtual {v2, v0}, Landroid/net/wifi/WifiConfiguration;->setVisibility(Landroid/net/wifi/WifiConfiguration$Visibility;)V

    #@c0
    .line 4158
    iget-object v0, v2, Landroid/net/wifi/WifiConfiguration;->visibility:Landroid/net/wifi/WifiConfiguration$Visibility;

    #@c2
    move-object/from16 v17, v0

    #@c4
    if-eqz v17, :cond_3

    #@c6
    .line 4159
    iget-object v0, v2, Landroid/net/wifi/WifiConfiguration;->visibility:Landroid/net/wifi/WifiConfiguration$Visibility;

    #@c8
    move-object/from16 v17, v0

    #@ca
    move-object/from16 v0, v17

    #@cc
    iget v0, v0, Landroid/net/wifi/WifiConfiguration$Visibility;->rssi24:I

    #@ce
    move/from16 v17, v0

    #@d0
    sget v18, Landroid/net/wifi/WifiConfiguration;->INVALID_RSSI:I

    #@d2
    move/from16 v0, v17

    #@d4
    move/from16 v1, v18

    #@d6
    if-eq v0, v1, :cond_3

    #@d8
    .line 4160
    iget-object v0, v2, Landroid/net/wifi/WifiConfiguration;->visibility:Landroid/net/wifi/WifiConfiguration$Visibility;

    #@da
    move-object/from16 v17, v0

    #@dc
    move-object/from16 v0, v17

    #@de
    iget v0, v0, Landroid/net/wifi/WifiConfiguration$Visibility;->rssi24:I

    #@e0
    move/from16 v17, v0

    #@e2
    .line 4161
    iget-object v0, v2, Landroid/net/wifi/WifiConfiguration;->visibility:Landroid/net/wifi/WifiConfiguration$Visibility;

    #@e4
    move-object/from16 v18, v0

    #@e6
    move-object/from16 v0, v18

    #@e8
    iget v0, v0, Landroid/net/wifi/WifiConfiguration$Visibility;->rssi5:I

    #@ea
    move/from16 v18, v0

    #@ec
    add-int/lit8 v18, v18, -0x2

    #@ee
    .line 4160
    move/from16 v0, v17

    #@f0
    move/from16 v1, v18

    #@f2
    if-lt v0, v1, :cond_3

    #@f4
    .line 4162
    const/16 v16, 0x1

    #@f6
    .line 4165
    :cond_3
    invoke-virtual {v14}, Lcom/android/server/wifi/ScanDetailCache;->size()I

    #@f9
    move-result v17

    #@fa
    const/16 v18, 0x6

    #@fc
    move/from16 v0, v17

    #@fe
    move/from16 v1, v18

    #@100
    if-gt v0, v1, :cond_4

    #@102
    .line 4166
    iget-object v0, v2, Landroid/net/wifi/WifiConfiguration;->allowedKeyManagement:Ljava/util/BitSet;

    #@104
    move-object/from16 v17, v0

    #@106
    invoke-virtual/range {v17 .. v17}, Ljava/util/BitSet;->cardinality()I

    #@109
    move-result v17

    #@10a
    const/16 v18, 0x1

    #@10c
    move/from16 v0, v17

    #@10e
    move/from16 v1, v18

    #@110
    if-ne v0, v1, :cond_4

    #@112
    .line 4167
    iget-object v0, v2, Landroid/net/wifi/WifiConfiguration;->allowedKeyManagement:Ljava/util/BitSet;

    #@114
    move-object/from16 v17, v0

    #@116
    .line 4168
    const/16 v18, 0x1

    #@118
    .line 4167
    invoke-virtual/range {v17 .. v18}, Ljava/util/BitSet;->get(I)Z

    #@11b
    move-result v17

    #@11c
    if-eqz v17, :cond_4

    #@11e
    .line 4171
    const/4 v3, 0x1

    #@11f
    .line 4174
    :cond_4
    if-eqz v3, :cond_5

    #@121
    const-string/jumbo v17, " hn"

    #@124
    move-object/from16 v0, v17

    #@126
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@129
    .line 4175
    :cond_5
    if-eqz v16, :cond_6

    #@12b
    const-string/jumbo v17, " u24"

    #@12e
    move-object/from16 v0, v17

    #@130
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@133
    .line 4177
    :cond_6
    move-object/from16 v0, p0

    #@135
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@137
    move-object/from16 v17, v0

    #@139
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@13c
    move-result v17

    #@13d
    move-object/from16 v0, p0

    #@13f
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mAggressiveHandover:I

    #@141
    move/from16 v18, v0

    #@143
    mul-int/lit8 v18, v18, 0x6

    #@145
    sub-int v18, v17, v18

    #@147
    .line 4178
    if-eqz v3, :cond_26

    #@149
    sget v17, Landroid/net/wifi/WifiConfiguration;->HOME_NETWORK_RSSI_BOOST:I

    #@14b
    .line 4177
    :goto_3
    add-int v11, v18, v17

    #@14d
    .line 4179
    .local v11, "rssi":I
    const-string/jumbo v17, " rssi=%d ag=%d"

    #@150
    const/16 v18, 0x2

    #@152
    move/from16 v0, v18

    #@154
    new-array v0, v0, [Ljava/lang/Object;

    #@156
    move-object/from16 v18, v0

    #@158
    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@15b
    move-result-object v19

    #@15c
    const/16 v20, 0x0

    #@15e
    aput-object v19, v18, v20

    #@160
    move-object/from16 v0, p0

    #@162
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mAggressiveHandover:I

    #@164
    move/from16 v19, v0

    #@166
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@169
    move-result-object v19

    #@16a
    const/16 v20, 0x1

    #@16c
    aput-object v19, v18, v20

    #@16e
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@171
    move-result-object v17

    #@172
    move-object/from16 v0, v17

    #@174
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@177
    .line 4181
    if-nez v16, :cond_27

    #@179
    move-object/from16 v0, p0

    #@17b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@17d
    move-object/from16 v17, v0

    #@17f
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->is24GHz()Z

    #@182
    move-result v4

    #@183
    .line 4183
    :goto_4
    if-eqz v4, :cond_28

    #@185
    move-object/from16 v0, p0

    #@187
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@189
    move-object/from16 v17, v0

    #@18b
    move-object/from16 v0, v17

    #@18d
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->thresholdBadRssi24:Ljava/util/concurrent/atomic/AtomicInteger;

    #@18f
    move-object/from16 v17, v0

    #@191
    invoke-virtual/range {v17 .. v17}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@194
    move-result v17

    #@195
    move/from16 v0, v17

    #@197
    if-ge v11, v0, :cond_28

    #@199
    const/4 v6, 0x1

    #@19a
    .line 4185
    .local v6, "isBadRSSI":Z
    :goto_5
    if-eqz v4, :cond_2a

    #@19c
    move-object/from16 v0, p0

    #@19e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1a0
    move-object/from16 v17, v0

    #@1a2
    move-object/from16 v0, v17

    #@1a4
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->thresholdLowRssi24:Ljava/util/concurrent/atomic/AtomicInteger;

    #@1a6
    move-object/from16 v17, v0

    #@1a8
    invoke-virtual/range {v17 .. v17}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@1ab
    move-result v17

    #@1ac
    move/from16 v0, v17

    #@1ae
    if-ge v11, v0, :cond_2a

    #@1b0
    const/4 v9, 0x1

    #@1b1
    .line 4187
    .local v9, "isLowRSSI":Z
    :goto_6
    if-eqz v4, :cond_2c

    #@1b3
    move-object/from16 v0, p0

    #@1b5
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1b7
    move-object/from16 v17, v0

    #@1b9
    move-object/from16 v0, v17

    #@1bb
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->thresholdGoodRssi24:Ljava/util/concurrent/atomic/AtomicInteger;

    #@1bd
    move-object/from16 v17, v0

    #@1bf
    invoke-virtual/range {v17 .. v17}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@1c2
    move-result v17

    #@1c3
    move/from16 v0, v17

    #@1c5
    if-lt v11, v0, :cond_2c

    #@1c7
    const/4 v8, 0x1

    #@1c8
    .line 4190
    .local v8, "isHighRSSI":Z
    :goto_7
    if-eqz v6, :cond_7

    #@1ca
    const-string/jumbo v17, " br"

    #@1cd
    move-object/from16 v0, v17

    #@1cf
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1d2
    .line 4191
    :cond_7
    if-eqz v9, :cond_8

    #@1d4
    const-string/jumbo v17, " lr"

    #@1d7
    move-object/from16 v0, v17

    #@1d9
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1dc
    .line 4192
    :cond_8
    if-eqz v8, :cond_9

    #@1de
    const-string/jumbo v17, " hr"

    #@1e1
    move-object/from16 v0, v17

    #@1e3
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1e6
    .line 4194
    :cond_9
    const/4 v10, 0x0

    #@1e7
    .line 4195
    .local v10, "penalizedDueToUserTriggeredDisconnect":I
    if-eqz v2, :cond_11

    #@1e9
    .line 4196
    move-object/from16 v0, p0

    #@1eb
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@1ed
    move-object/from16 v17, v0

    #@1ef
    move-object/from16 v0, v17

    #@1f1
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@1f3
    move-wide/from16 v18, v0

    #@1f5
    const-wide/high16 v20, 0x4014000000000000L    # 5.0

    #@1f7
    cmpl-double v17, v18, v20

    #@1f9
    if-gtz v17, :cond_a

    #@1fb
    move-object/from16 v0, p0

    #@1fd
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@1ff
    move-object/from16 v17, v0

    #@201
    move-object/from16 v0, v17

    #@203
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@205
    move-wide/from16 v18, v0

    #@207
    const-wide/high16 v20, 0x4014000000000000L    # 5.0

    #@209
    cmpl-double v17, v18, v20

    #@20b
    if-lez v17, :cond_11

    #@20d
    .line 4197
    :cond_a
    if-eqz v6, :cond_2f

    #@20f
    .line 4198
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtBadRSSI:I

    #@211
    move/from16 v17, v0

    #@213
    add-int/lit8 v17, v17, 0x1

    #@215
    move/from16 v0, v17

    #@217
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtBadRSSI:I

    #@219
    .line 4199
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtBadRSSI:I

    #@21b
    move/from16 v17, v0

    #@21d
    const/16 v18, 0x3e8

    #@21f
    move/from16 v0, v17

    #@221
    move/from16 v1, v18

    #@223
    if-le v0, v1, :cond_e

    #@225
    .line 4202
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableBadRSSI:I

    #@227
    move/from16 v17, v0

    #@229
    if-lez v17, :cond_b

    #@22b
    .line 4203
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableBadRSSI:I

    #@22d
    move/from16 v17, v0

    #@22f
    add-int/lit8 v17, v17, -0x1

    #@231
    move/from16 v0, v17

    #@233
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableBadRSSI:I

    #@235
    .line 4205
    :cond_b
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@237
    move/from16 v17, v0

    #@239
    if-lez v17, :cond_c

    #@23b
    .line 4206
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@23d
    move/from16 v17, v0

    #@23f
    add-int/lit8 v17, v17, -0x1

    #@241
    move/from16 v0, v17

    #@243
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@245
    .line 4208
    :cond_c
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@247
    move/from16 v17, v0

    #@249
    if-lez v17, :cond_d

    #@24b
    .line 4209
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@24d
    move/from16 v17, v0

    #@24f
    add-int/lit8 v17, v17, -0x1

    #@251
    move/from16 v0, v17

    #@253
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@255
    .line 4211
    :cond_d
    const/16 v17, 0x0

    #@257
    move/from16 v0, v17

    #@259
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtBadRSSI:I

    #@25b
    .line 4213
    :cond_e
    move-object/from16 v0, p0

    #@25d
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@25f
    move-object/from16 v17, v0

    #@261
    move-object/from16 v0, v17

    #@263
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiConfigStore;->enableWifiCellularHandoverUserTriggeredAdjustment:Z

    #@265
    move/from16 v17, v0

    #@267
    if-eqz v17, :cond_10

    #@269
    .line 4214
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableBadRSSI:I

    #@26b
    move/from16 v17, v0

    #@26d
    if-gtz v17, :cond_f

    #@26f
    .line 4215
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@271
    move/from16 v17, v0

    #@273
    if-lez v17, :cond_2e

    #@275
    .line 4217
    :cond_f
    :goto_8
    const/16 v15, 0x33

    #@277
    .line 4218
    const/4 v10, 0x1

    #@278
    .line 4219
    const-string/jumbo v17, " p1"

    #@27b
    move-object/from16 v0, v17

    #@27d
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@280
    .line 4258
    :cond_10
    :goto_9
    const-string/jumbo v17, " ticks %d,%d,%d"

    #@283
    const/16 v18, 0x3

    #@285
    move/from16 v0, v18

    #@287
    new-array v0, v0, [Ljava/lang/Object;

    #@289
    move-object/from16 v18, v0

    #@28b
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtBadRSSI:I

    #@28d
    move/from16 v19, v0

    #@28f
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@292
    move-result-object v19

    #@293
    const/16 v20, 0x0

    #@295
    aput-object v19, v18, v20

    #@297
    .line 4259
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtLowRSSI:I

    #@299
    move/from16 v19, v0

    #@29b
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@29e
    move-result-object v19

    #@29f
    const/16 v20, 0x1

    #@2a1
    aput-object v19, v18, v20

    #@2a3
    .line 4260
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtNotHighRSSI:I

    #@2a5
    move/from16 v19, v0

    #@2a7
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@2aa
    move-result-object v19

    #@2ab
    const/16 v20, 0x2

    #@2ad
    aput-object v19, v18, v20

    #@2af
    .line 4258
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@2b2
    move-result-object v17

    #@2b3
    move-object/from16 v0, v17

    #@2b5
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2b8
    .line 4263
    :cond_11
    sget-boolean v17, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@2ba
    if-eqz v17, :cond_14

    #@2bc
    .line 4264
    const-string/jumbo v12, ""

    #@2bf
    .line 4265
    .local v12, "rssiStatus":Ljava/lang/String;
    if-eqz v6, :cond_37

    #@2c1
    new-instance v17, Ljava/lang/StringBuilder;

    #@2c3
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@2c6
    move-object/from16 v0, v17

    #@2c8
    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2cb
    move-result-object v17

    #@2cc
    const-string/jumbo v18, " badRSSI "

    #@2cf
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d2
    move-result-object v17

    #@2d3
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2d6
    move-result-object v12

    #@2d7
    .line 4268
    :cond_12
    :goto_a
    if-eqz v5, :cond_13

    #@2d9
    new-instance v17, Ljava/lang/StringBuilder;

    #@2db
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@2de
    move-object/from16 v0, v17

    #@2e0
    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e3
    move-result-object v17

    #@2e4
    const-string/jumbo v18, " lowSpeed "

    #@2e7
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2ea
    move-result-object v17

    #@2eb
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2ee
    move-result-object v12

    #@2ef
    .line 4269
    :cond_13
    new-instance v17, Ljava/lang/StringBuilder;

    #@2f1
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@2f4
    const-string/jumbo v18, "calculateWifiScore freq="

    #@2f7
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2fa
    move-result-object v17

    #@2fb
    move-object/from16 v0, p0

    #@2fd
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@2ff
    move-object/from16 v18, v0

    #@301
    invoke-virtual/range {v18 .. v18}, Landroid/net/wifi/WifiInfo;->getFrequency()I

    #@304
    move-result v18

    #@305
    invoke-static/range {v18 .. v18}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@308
    move-result-object v18

    #@309
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30c
    move-result-object v17

    #@30d
    .line 4270
    const-string/jumbo v18, " speed="

    #@310
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@313
    move-result-object v17

    #@314
    .line 4270
    move-object/from16 v0, p0

    #@316
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@318
    move-object/from16 v18, v0

    #@31a
    invoke-virtual/range {v18 .. v18}, Landroid/net/wifi/WifiInfo;->getLinkSpeed()I

    #@31d
    move-result v18

    #@31e
    invoke-static/range {v18 .. v18}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@321
    move-result-object v18

    #@322
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@325
    move-result-object v17

    #@326
    .line 4271
    const-string/jumbo v18, " score="

    #@329
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32c
    move-result-object v17

    #@32d
    .line 4271
    move-object/from16 v0, p0

    #@32f
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@331
    move-object/from16 v18, v0

    #@333
    move-object/from16 v0, v18

    #@335
    iget v0, v0, Landroid/net/wifi/WifiInfo;->score:I

    #@337
    move/from16 v18, v0

    #@339
    invoke-static/range {v18 .. v18}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@33c
    move-result-object v18

    #@33d
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@340
    move-result-object v17

    #@341
    move-object/from16 v0, v17

    #@343
    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@346
    move-result-object v17

    #@347
    .line 4273
    const-string/jumbo v18, " -> txbadrate="

    #@34a
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@34d
    move-result-object v17

    #@34e
    .line 4273
    const-string/jumbo v18, "%.2f"

    #@351
    const/16 v19, 0x1

    #@353
    move/from16 v0, v19

    #@355
    new-array v0, v0, [Ljava/lang/Object;

    #@357
    move-object/from16 v19, v0

    #@359
    move-object/from16 v0, p0

    #@35b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@35d
    move-object/from16 v20, v0

    #@35f
    move-object/from16 v0, v20

    #@361
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txBadRate:D

    #@363
    move-wide/from16 v20, v0

    #@365
    invoke-static/range {v20 .. v21}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@368
    move-result-object v20

    #@369
    const/16 v21, 0x0

    #@36b
    aput-object v20, v19, v21

    #@36d
    invoke-static/range {v18 .. v19}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@370
    move-result-object v18

    #@371
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@374
    move-result-object v17

    #@375
    .line 4274
    const-string/jumbo v18, " txgoodrate="

    #@378
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@37b
    move-result-object v17

    #@37c
    .line 4274
    const-string/jumbo v18, "%.2f"

    #@37f
    const/16 v19, 0x1

    #@381
    move/from16 v0, v19

    #@383
    new-array v0, v0, [Ljava/lang/Object;

    #@385
    move-object/from16 v19, v0

    #@387
    move-object/from16 v0, p0

    #@389
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@38b
    move-object/from16 v20, v0

    #@38d
    move-object/from16 v0, v20

    #@38f
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@391
    move-wide/from16 v20, v0

    #@393
    invoke-static/range {v20 .. v21}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@396
    move-result-object v20

    #@397
    const/16 v21, 0x0

    #@399
    aput-object v20, v19, v21

    #@39b
    invoke-static/range {v18 .. v19}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@39e
    move-result-object v18

    #@39f
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3a2
    move-result-object v17

    #@3a3
    .line 4275
    const-string/jumbo v18, " txretriesrate="

    #@3a6
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3a9
    move-result-object v17

    #@3aa
    .line 4275
    const-string/jumbo v18, "%.2f"

    #@3ad
    const/16 v19, 0x1

    #@3af
    move/from16 v0, v19

    #@3b1
    new-array v0, v0, [Ljava/lang/Object;

    #@3b3
    move-object/from16 v19, v0

    #@3b5
    move-object/from16 v0, p0

    #@3b7
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@3b9
    move-object/from16 v20, v0

    #@3bb
    move-object/from16 v0, v20

    #@3bd
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txRetriesRate:D

    #@3bf
    move-wide/from16 v20, v0

    #@3c1
    invoke-static/range {v20 .. v21}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@3c4
    move-result-object v20

    #@3c5
    const/16 v21, 0x0

    #@3c7
    aput-object v20, v19, v21

    #@3c9
    invoke-static/range {v18 .. v19}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@3cc
    move-result-object v18

    #@3cd
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d0
    move-result-object v17

    #@3d1
    .line 4276
    const-string/jumbo v18, " rxrate="

    #@3d4
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d7
    move-result-object v17

    #@3d8
    .line 4276
    const-string/jumbo v18, "%.2f"

    #@3db
    const/16 v19, 0x1

    #@3dd
    move/from16 v0, v19

    #@3df
    new-array v0, v0, [Ljava/lang/Object;

    #@3e1
    move-object/from16 v19, v0

    #@3e3
    move-object/from16 v0, p0

    #@3e5
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@3e7
    move-object/from16 v20, v0

    #@3e9
    move-object/from16 v0, v20

    #@3eb
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@3ed
    move-wide/from16 v20, v0

    #@3ef
    invoke-static/range {v20 .. v21}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@3f2
    move-result-object v20

    #@3f3
    const/16 v21, 0x0

    #@3f5
    aput-object v20, v19, v21

    #@3f7
    invoke-static/range {v18 .. v19}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@3fa
    move-result-object v18

    #@3fb
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3fe
    move-result-object v17

    #@3ff
    .line 4277
    const-string/jumbo v18, " userTriggerdPenalty"

    #@402
    .line 4269
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@405
    move-result-object v17

    #@406
    move-object/from16 v0, v17

    #@408
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@40b
    move-result-object v17

    #@40c
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@40f
    move-result-object v17

    #@410
    move-object/from16 v0, p0

    #@412
    move-object/from16 v1, v17

    #@414
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@417
    .line 4280
    .end local v12    # "rssiStatus":Ljava/lang/String;
    :cond_14
    move-object/from16 v0, p0

    #@419
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@41b
    move-object/from16 v17, v0

    #@41d
    move-object/from16 v0, v17

    #@41f
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txBadRate:D

    #@421
    move-wide/from16 v18, v0

    #@423
    const-wide/high16 v20, 0x3ff0000000000000L    # 1.0

    #@425
    cmpl-double v17, v18, v20

    #@427
    if-ltz v17, :cond_39

    #@429
    move-object/from16 v0, p0

    #@42b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@42d
    move-object/from16 v17, v0

    #@42f
    move-object/from16 v0, v17

    #@431
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@433
    move-wide/from16 v18, v0

    #@435
    const-wide/high16 v20, 0x4008000000000000L    # 3.0

    #@437
    cmpg-double v17, v18, v20

    #@439
    if-gez v17, :cond_39

    #@43b
    .line 4281
    if-nez v6, :cond_15

    #@43d
    .line 4280
    if-eqz v9, :cond_39

    #@43f
    .line 4283
    :cond_15
    move-object/from16 v0, p0

    #@441
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@443
    move-object/from16 v17, v0

    #@445
    move-object/from16 v0, v17

    #@447
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@449
    move/from16 v17, v0

    #@44b
    const/16 v18, 0x5

    #@44d
    move/from16 v0, v17

    #@44f
    move/from16 v1, v18

    #@451
    if-ge v0, v1, :cond_16

    #@453
    .line 4284
    move-object/from16 v0, p0

    #@455
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@457
    move-object/from16 v17, v0

    #@459
    move-object/from16 v0, v17

    #@45b
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@45d
    move/from16 v18, v0

    #@45f
    add-int/lit8 v18, v18, 0x1

    #@461
    move/from16 v0, v18

    #@463
    move-object/from16 v1, v17

    #@465
    iput v0, v1, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@467
    .line 4285
    :cond_16
    const-string/jumbo v17, " ls+=%d"

    #@46a
    const/16 v18, 0x1

    #@46c
    move/from16 v0, v18

    #@46e
    new-array v0, v0, [Ljava/lang/Object;

    #@470
    move-object/from16 v18, v0

    #@472
    move-object/from16 v0, p0

    #@474
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@476
    move-object/from16 v19, v0

    #@478
    move-object/from16 v0, v19

    #@47a
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@47c
    move/from16 v19, v0

    #@47e
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@481
    move-result-object v19

    #@482
    const/16 v20, 0x0

    #@484
    aput-object v19, v18, v20

    #@486
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@489
    move-result-object v17

    #@48a
    move-object/from16 v0, v17

    #@48c
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@48f
    .line 4286
    sget-boolean v17, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@491
    if-eqz v17, :cond_17

    #@493
    new-instance v17, Ljava/lang/StringBuilder;

    #@495
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@498
    const-string/jumbo v18, " bad link -> stuck count ="

    #@49b
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@49e
    move-result-object v17

    #@49f
    .line 4287
    move-object/from16 v0, p0

    #@4a1
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4a3
    move-object/from16 v18, v0

    #@4a5
    move-object/from16 v0, v18

    #@4a7
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@4a9
    move/from16 v18, v0

    #@4ab
    invoke-static/range {v18 .. v18}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@4ae
    move-result-object v18

    #@4af
    .line 4286
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4b2
    move-result-object v17

    #@4b3
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4b6
    move-result-object v17

    #@4b7
    move-object/from16 v0, p0

    #@4b9
    move-object/from16 v1, v17

    #@4bb
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@4be
    .line 4296
    :cond_17
    :goto_b
    const-string/jumbo v17, " [%d"

    #@4c1
    const/16 v18, 0x1

    #@4c3
    move/from16 v0, v18

    #@4c5
    new-array v0, v0, [Ljava/lang/Object;

    #@4c7
    move-object/from16 v18, v0

    #@4c9
    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@4cc
    move-result-object v19

    #@4cd
    const/16 v20, 0x0

    #@4cf
    aput-object v19, v18, v20

    #@4d1
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@4d4
    move-result-object v17

    #@4d5
    move-object/from16 v0, v17

    #@4d7
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4da
    .line 4298
    move-object/from16 v0, p0

    #@4dc
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4de
    move-object/from16 v17, v0

    #@4e0
    move-object/from16 v0, v17

    #@4e2
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@4e4
    move/from16 v17, v0

    #@4e6
    const/16 v18, 0x1

    #@4e8
    move/from16 v0, v17

    #@4ea
    move/from16 v1, v18

    #@4ec
    if-le v0, v1, :cond_18

    #@4ee
    .line 4300
    move-object/from16 v0, p0

    #@4f0
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4f2
    move-object/from16 v17, v0

    #@4f4
    move-object/from16 v0, v17

    #@4f6
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@4f8
    move/from16 v17, v0

    #@4fa
    add-int/lit8 v17, v17, -0x1

    #@4fc
    mul-int/lit8 v17, v17, 0x2

    #@4fe
    sub-int v15, v15, v17

    #@500
    .line 4302
    :cond_18
    const-string/jumbo v17, ",%d"

    #@503
    const/16 v18, 0x1

    #@505
    move/from16 v0, v18

    #@507
    new-array v0, v0, [Ljava/lang/Object;

    #@509
    move-object/from16 v18, v0

    #@50b
    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@50e
    move-result-object v19

    #@50f
    const/16 v20, 0x0

    #@511
    aput-object v19, v18, v20

    #@513
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@516
    move-result-object v17

    #@517
    move-object/from16 v0, v17

    #@519
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@51c
    .line 4304
    if-eqz v5, :cond_3b

    #@51e
    .line 4305
    add-int/lit8 v15, v15, -0x4

    #@520
    .line 4306
    sget-boolean v17, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@522
    if-eqz v17, :cond_19

    #@524
    .line 4307
    new-instance v17, Ljava/lang/StringBuilder;

    #@526
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@529
    const-string/jumbo v18, " isBadLinkspeed   ---> count="

    #@52c
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@52f
    move-result-object v17

    #@530
    move-object/from16 v0, p0

    #@532
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@534
    move/from16 v18, v0

    #@536
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@539
    move-result-object v17

    #@53a
    .line 4308
    const-string/jumbo v18, " score="

    #@53d
    .line 4307
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@540
    move-result-object v17

    #@541
    .line 4308
    invoke-static {v15}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@544
    move-result-object v18

    #@545
    .line 4307
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@548
    move-result-object v17

    #@549
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@54c
    move-result-object v17

    #@54d
    move-object/from16 v0, p0

    #@54f
    move-object/from16 v1, v17

    #@551
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@554
    .line 4313
    :cond_19
    :goto_c
    const-string/jumbo v17, ",%d"

    #@557
    const/16 v18, 0x1

    #@559
    move/from16 v0, v18

    #@55b
    new-array v0, v0, [Ljava/lang/Object;

    #@55d
    move-object/from16 v18, v0

    #@55f
    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@562
    move-result-object v19

    #@563
    const/16 v20, 0x0

    #@565
    aput-object v19, v18, v20

    #@567
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@56a
    move-result-object v17

    #@56b
    move-object/from16 v0, v17

    #@56d
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@570
    .line 4315
    if-eqz v6, :cond_3c

    #@572
    .line 4316
    move-object/from16 v0, p0

    #@574
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@576
    move-object/from16 v17, v0

    #@578
    move-object/from16 v0, v17

    #@57a
    iget v0, v0, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@57c
    move/from16 v17, v0

    #@57e
    const/16 v18, 0x7

    #@580
    move/from16 v0, v17

    #@582
    move/from16 v1, v18

    #@584
    if-ge v0, v1, :cond_1a

    #@586
    .line 4317
    move-object/from16 v0, p0

    #@588
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@58a
    move-object/from16 v17, v0

    #@58c
    move-object/from16 v0, v17

    #@58e
    iget v0, v0, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@590
    move/from16 v18, v0

    #@592
    add-int/lit8 v18, v18, 0x1

    #@594
    move/from16 v0, v18

    #@596
    move-object/from16 v1, v17

    #@598
    iput v0, v1, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@59a
    .line 4329
    :cond_1a
    :goto_d
    move-object/from16 v0, p0

    #@59c
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@59e
    move-object/from16 v17, v0

    #@5a0
    move-object/from16 v0, v17

    #@5a2
    iget v0, v0, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@5a4
    move/from16 v17, v0

    #@5a6
    mul-int/lit8 v17, v17, 0x2

    #@5a8
    move-object/from16 v0, p0

    #@5aa
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@5ac
    move-object/from16 v18, v0

    #@5ae
    move-object/from16 v0, v18

    #@5b0
    iget v0, v0, Landroid/net/wifi/WifiInfo;->lowRssiCount:I

    #@5b2
    move/from16 v18, v0

    #@5b4
    add-int v17, v17, v18

    #@5b6
    sub-int v15, v15, v17

    #@5b8
    .line 4330
    const-string/jumbo v17, ",%d"

    #@5bb
    const/16 v18, 0x1

    #@5bd
    move/from16 v0, v18

    #@5bf
    new-array v0, v0, [Ljava/lang/Object;

    #@5c1
    move-object/from16 v18, v0

    #@5c3
    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@5c6
    move-result-object v19

    #@5c7
    const/16 v20, 0x0

    #@5c9
    aput-object v19, v18, v20

    #@5cb
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@5ce
    move-result-object v17

    #@5cf
    move-object/from16 v0, v17

    #@5d1
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d4
    .line 4332
    sget-boolean v17, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@5d6
    if-eqz v17, :cond_1b

    #@5d8
    new-instance v17, Ljava/lang/StringBuilder;

    #@5da
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@5dd
    const-string/jumbo v18, " badRSSI count"

    #@5e0
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5e3
    move-result-object v17

    #@5e4
    move-object/from16 v0, p0

    #@5e6
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@5e8
    move-object/from16 v18, v0

    #@5ea
    move-object/from16 v0, v18

    #@5ec
    iget v0, v0, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@5ee
    move/from16 v18, v0

    #@5f0
    invoke-static/range {v18 .. v18}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@5f3
    move-result-object v18

    #@5f4
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5f7
    move-result-object v17

    #@5f8
    .line 4333
    const-string/jumbo v18, " lowRSSI count"

    #@5fb
    .line 4332
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5fe
    move-result-object v17

    #@5ff
    .line 4333
    move-object/from16 v0, p0

    #@601
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@603
    move-object/from16 v18, v0

    #@605
    move-object/from16 v0, v18

    #@607
    iget v0, v0, Landroid/net/wifi/WifiInfo;->lowRssiCount:I

    #@609
    move/from16 v18, v0

    #@60b
    invoke-static/range {v18 .. v18}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@60e
    move-result-object v18

    #@60f
    .line 4332
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@612
    move-result-object v17

    #@613
    .line 4334
    const-string/jumbo v18, " --> score "

    #@616
    .line 4332
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@619
    move-result-object v17

    #@61a
    .line 4334
    invoke-static {v15}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@61d
    move-result-object v18

    #@61e
    .line 4332
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@621
    move-result-object v17

    #@622
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@625
    move-result-object v17

    #@626
    move-object/from16 v0, p0

    #@628
    move-object/from16 v1, v17

    #@62a
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@62d
    .line 4337
    :cond_1b
    if-eqz v8, :cond_1c

    #@62f
    .line 4338
    add-int/lit8 v15, v15, 0x5

    #@631
    .line 4339
    sget-boolean v17, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@633
    if-eqz v17, :cond_1c

    #@635
    new-instance v17, Ljava/lang/StringBuilder;

    #@637
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@63a
    const-string/jumbo v18, " isHighRSSI       ---> score="

    #@63d
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@640
    move-result-object v17

    #@641
    invoke-static {v15}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@644
    move-result-object v18

    #@645
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@648
    move-result-object v17

    #@649
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@64c
    move-result-object v17

    #@64d
    move-object/from16 v0, p0

    #@64f
    move-object/from16 v1, v17

    #@651
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@654
    .line 4341
    :cond_1c
    const-string/jumbo v17, ",%d]"

    #@657
    const/16 v18, 0x1

    #@659
    move/from16 v0, v18

    #@65b
    new-array v0, v0, [Ljava/lang/Object;

    #@65d
    move-object/from16 v18, v0

    #@65f
    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@662
    move-result-object v19

    #@663
    const/16 v20, 0x0

    #@665
    aput-object v19, v18, v20

    #@667
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@66a
    move-result-object v17

    #@66b
    move-object/from16 v0, v17

    #@66d
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@670
    .line 4343
    const-string/jumbo v17, " brc=%d lrc=%d"

    #@673
    const/16 v18, 0x2

    #@675
    move/from16 v0, v18

    #@677
    new-array v0, v0, [Ljava/lang/Object;

    #@679
    move-object/from16 v18, v0

    #@67b
    move-object/from16 v0, p0

    #@67d
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@67f
    move-object/from16 v19, v0

    #@681
    move-object/from16 v0, v19

    #@683
    iget v0, v0, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@685
    move/from16 v19, v0

    #@687
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@68a
    move-result-object v19

    #@68b
    const/16 v20, 0x0

    #@68d
    aput-object v19, v18, v20

    #@68f
    move-object/from16 v0, p0

    #@691
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@693
    move-object/from16 v19, v0

    #@695
    move-object/from16 v0, v19

    #@697
    iget v0, v0, Landroid/net/wifi/WifiInfo;->lowRssiCount:I

    #@699
    move/from16 v19, v0

    #@69b
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@69e
    move-result-object v19

    #@69f
    const/16 v20, 0x1

    #@6a1
    aput-object v19, v18, v20

    #@6a3
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@6a6
    move-result-object v17

    #@6a7
    move-object/from16 v0, v17

    #@6a9
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6ac
    .line 4346
    const/16 v17, 0x3c

    #@6ae
    move/from16 v0, v17

    #@6b0
    if-le v15, v0, :cond_1d

    #@6b2
    .line 4347
    const/16 v15, 0x3c

    #@6b4
    .line 4348
    :cond_1d
    if-gez v15, :cond_1e

    #@6b6
    .line 4349
    const/4 v15, 0x0

    #@6b7
    .line 4352
    :cond_1e
    move-object/from16 v0, p0

    #@6b9
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@6bb
    move-object/from16 v17, v0

    #@6bd
    move-object/from16 v0, v17

    #@6bf
    iget v0, v0, Landroid/net/wifi/WifiInfo;->score:I

    #@6c1
    move/from16 v17, v0

    #@6c3
    move/from16 v0, v17

    #@6c5
    if-eq v15, v0, :cond_20

    #@6c7
    .line 4353
    sget-boolean v17, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@6c9
    if-eqz v17, :cond_1f

    #@6cb
    .line 4354
    new-instance v17, Ljava/lang/StringBuilder;

    #@6cd
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@6d0
    const-string/jumbo v18, "calculateWifiScore() report new score "

    #@6d3
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6d6
    move-result-object v17

    #@6d7
    invoke-static {v15}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@6da
    move-result-object v18

    #@6db
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6de
    move-result-object v17

    #@6df
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6e2
    move-result-object v17

    #@6e3
    move-object/from16 v0, p0

    #@6e5
    move-object/from16 v1, v17

    #@6e7
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@6ea
    .line 4356
    :cond_1f
    move-object/from16 v0, p0

    #@6ec
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@6ee
    move-object/from16 v17, v0

    #@6f0
    move-object/from16 v0, v17

    #@6f2
    iput v15, v0, Landroid/net/wifi/WifiInfo;->score:I

    #@6f4
    .line 4357
    move-object/from16 v0, p0

    #@6f6
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@6f8
    move-object/from16 v17, v0

    #@6fa
    if-eqz v17, :cond_20

    #@6fc
    .line 4358
    move-object/from16 v0, p0

    #@6fe
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@700
    move-object/from16 v17, v0

    #@702
    move-object/from16 v0, v17

    #@704
    invoke-virtual {v0, v15}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;->sendNetworkScore(I)V

    #@707
    .line 4361
    :cond_20
    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@70a
    move-result-object v17

    #@70b
    move-object/from16 v0, v17

    #@70d
    move-object/from16 v1, p0

    #@70f
    iput-object v0, v1, Lcom/android/server/wifi/WifiStateMachine;->wifiScoringReport:Ljava/lang/String;

    #@711
    .line 4119
    return-void

    #@712
    .line 4125
    .end local v2    # "currentConfiguration":Landroid/net/wifi/WifiConfiguration;
    .end local v3    # "homeNetworkBoost":Z
    .end local v5    # "isBadLinkspeed":Z
    .end local v6    # "isBadRSSI":Z
    .end local v7    # "isGoodLinkspeed":Z
    .end local v8    # "isHighRSSI":Z
    .end local v9    # "isLowRSSI":Z
    .end local v10    # "penalizedDueToUserTriggeredDisconnect":I
    .end local v11    # "rssi":I
    .end local v14    # "scanDetailCache":Lcom/android/server/wifi/ScanDetailCache;
    .end local v16    # "use24Thresholds":Z
    :cond_21
    move-object/from16 v0, p0

    #@714
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@716
    move-object/from16 v17, v0

    #@718
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->is5GHz()Z

    #@71b
    move-result v17

    #@71c
    if-eqz v17, :cond_22

    #@71e
    move-object/from16 v0, p0

    #@720
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@722
    move-object/from16 v17, v0

    #@724
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->getLinkSpeed()I

    #@727
    move-result v17

    #@728
    .line 4126
    move-object/from16 v0, p0

    #@72a
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@72c
    move-object/from16 v18, v0

    #@72e
    move-object/from16 v0, v18

    #@730
    iget v0, v0, Lcom/android/server/wifi/WifiConfigStore;->badLinkSpeed5:I

    #@732
    move/from16 v18, v0

    #@734
    .line 4125
    move/from16 v0, v17

    #@736
    move/from16 v1, v18

    #@738
    if-ge v0, v1, :cond_22

    #@73a
    const/4 v5, 0x1

    #@73b
    .restart local v5    # "isBadLinkspeed":Z
    goto/16 :goto_0

    #@73d
    .end local v5    # "isBadLinkspeed":Z
    :cond_22
    const/4 v5, 0x0

    #@73e
    .restart local v5    # "isBadLinkspeed":Z
    goto/16 :goto_0

    #@740
    .line 4129
    :cond_23
    move-object/from16 v0, p0

    #@742
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@744
    move-object/from16 v17, v0

    #@746
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->is5GHz()Z

    #@749
    move-result v17

    #@74a
    if-eqz v17, :cond_24

    #@74c
    move-object/from16 v0, p0

    #@74e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@750
    move-object/from16 v17, v0

    #@752
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->getLinkSpeed()I

    #@755
    move-result v17

    #@756
    .line 4130
    move-object/from16 v0, p0

    #@758
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@75a
    move-object/from16 v18, v0

    #@75c
    move-object/from16 v0, v18

    #@75e
    iget v0, v0, Lcom/android/server/wifi/WifiConfigStore;->goodLinkSpeed5:I

    #@760
    move/from16 v18, v0

    #@762
    .line 4129
    move/from16 v0, v17

    #@764
    move/from16 v1, v18

    #@766
    if-lt v0, v1, :cond_24

    #@768
    const/4 v7, 0x1

    #@769
    .restart local v7    # "isGoodLinkspeed":Z
    goto/16 :goto_1

    #@76b
    .end local v7    # "isGoodLinkspeed":Z
    :cond_24
    const/4 v7, 0x0

    #@76c
    .restart local v7    # "isGoodLinkspeed":Z
    goto/16 :goto_1

    #@76e
    .line 4136
    :cond_25
    move-object/from16 v0, p0

    #@770
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@772
    move/from16 v17, v0

    #@774
    if-lez v17, :cond_0

    #@776
    .line 4137
    move-object/from16 v0, p0

    #@778
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@77a
    move/from16 v17, v0

    #@77c
    add-int/lit8 v17, v17, -0x1

    #@77e
    move/from16 v0, v17

    #@780
    move-object/from16 v1, p0

    #@782
    iput v0, v1, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@784
    goto/16 :goto_2

    #@786
    .line 4178
    .restart local v2    # "currentConfiguration":Landroid/net/wifi/WifiConfiguration;
    .restart local v3    # "homeNetworkBoost":Z
    .restart local v14    # "scanDetailCache":Lcom/android/server/wifi/ScanDetailCache;
    .restart local v16    # "use24Thresholds":Z
    :cond_26
    const/16 v17, 0x0

    #@788
    goto/16 :goto_3

    #@78a
    .line 4181
    .restart local v11    # "rssi":I
    :cond_27
    const/4 v4, 0x1

    #@78b
    .local v4, "is24GHz":Z
    goto/16 :goto_4

    #@78d
    .line 4184
    .end local v4    # "is24GHz":Z
    :cond_28
    if-nez v4, :cond_29

    #@78f
    move-object/from16 v0, p0

    #@791
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@793
    move-object/from16 v17, v0

    #@795
    move-object/from16 v0, v17

    #@797
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->thresholdBadRssi5:Ljava/util/concurrent/atomic/AtomicInteger;

    #@799
    move-object/from16 v17, v0

    #@79b
    invoke-virtual/range {v17 .. v17}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@79e
    move-result v17

    #@79f
    move/from16 v0, v17

    #@7a1
    if-ge v11, v0, :cond_29

    #@7a3
    const/4 v6, 0x1

    #@7a4
    .restart local v6    # "isBadRSSI":Z
    goto/16 :goto_5

    #@7a6
    .end local v6    # "isBadRSSI":Z
    :cond_29
    const/4 v6, 0x0

    #@7a7
    .restart local v6    # "isBadRSSI":Z
    goto/16 :goto_5

    #@7a9
    .line 4186
    :cond_2a
    if-nez v4, :cond_2b

    #@7ab
    move-object/from16 v0, p0

    #@7ad
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@7af
    move-object/from16 v17, v0

    #@7b1
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@7b4
    move-result v17

    #@7b5
    move-object/from16 v0, p0

    #@7b7
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@7b9
    move-object/from16 v18, v0

    #@7bb
    move-object/from16 v0, v18

    #@7bd
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->thresholdLowRssi5:Ljava/util/concurrent/atomic/AtomicInteger;

    #@7bf
    move-object/from16 v18, v0

    #@7c1
    invoke-virtual/range {v18 .. v18}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@7c4
    move-result v18

    #@7c5
    move/from16 v0, v17

    #@7c7
    move/from16 v1, v18

    #@7c9
    if-ge v0, v1, :cond_2b

    #@7cb
    const/4 v9, 0x1

    #@7cc
    .restart local v9    # "isLowRSSI":Z
    goto/16 :goto_6

    #@7ce
    .end local v9    # "isLowRSSI":Z
    :cond_2b
    const/4 v9, 0x0

    #@7cf
    .restart local v9    # "isLowRSSI":Z
    goto/16 :goto_6

    #@7d1
    .line 4188
    :cond_2c
    if-nez v4, :cond_2d

    #@7d3
    move-object/from16 v0, p0

    #@7d5
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@7d7
    move-object/from16 v17, v0

    #@7d9
    invoke-virtual/range {v17 .. v17}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@7dc
    move-result v17

    #@7dd
    move-object/from16 v0, p0

    #@7df
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@7e1
    move-object/from16 v18, v0

    #@7e3
    move-object/from16 v0, v18

    #@7e5
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->thresholdGoodRssi5:Ljava/util/concurrent/atomic/AtomicInteger;

    #@7e7
    move-object/from16 v18, v0

    #@7e9
    invoke-virtual/range {v18 .. v18}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@7ec
    move-result v18

    #@7ed
    move/from16 v0, v17

    #@7ef
    move/from16 v1, v18

    #@7f1
    if-lt v0, v1, :cond_2d

    #@7f3
    const/4 v8, 0x1

    #@7f4
    .restart local v8    # "isHighRSSI":Z
    goto/16 :goto_7

    #@7f6
    .end local v8    # "isHighRSSI":Z
    :cond_2d
    const/4 v8, 0x0

    #@7f7
    .restart local v8    # "isHighRSSI":Z
    goto/16 :goto_7

    #@7f9
    .line 4216
    .restart local v10    # "penalizedDueToUserTriggeredDisconnect":I
    :cond_2e
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@7fb
    move/from16 v17, v0

    #@7fd
    if-lez v17, :cond_10

    #@7ff
    goto/16 :goto_8

    #@801
    .line 4221
    :cond_2f
    if-eqz v9, :cond_34

    #@803
    .line 4222
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtLowRSSI:I

    #@805
    move/from16 v17, v0

    #@807
    add-int/lit8 v17, v17, 0x1

    #@809
    move/from16 v0, v17

    #@80b
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtLowRSSI:I

    #@80d
    .line 4223
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtLowRSSI:I

    #@80f
    move/from16 v17, v0

    #@811
    const/16 v18, 0x3e8

    #@813
    move/from16 v0, v17

    #@815
    move/from16 v1, v18

    #@817
    if-le v0, v1, :cond_32

    #@819
    .line 4226
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@81b
    move/from16 v17, v0

    #@81d
    if-lez v17, :cond_30

    #@81f
    .line 4227
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@821
    move/from16 v17, v0

    #@823
    add-int/lit8 v17, v17, -0x1

    #@825
    move/from16 v0, v17

    #@827
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@829
    .line 4229
    :cond_30
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@82b
    move/from16 v17, v0

    #@82d
    if-lez v17, :cond_31

    #@82f
    .line 4230
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@831
    move/from16 v17, v0

    #@833
    add-int/lit8 v17, v17, -0x1

    #@835
    move/from16 v0, v17

    #@837
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@839
    .line 4232
    :cond_31
    const/16 v17, 0x0

    #@83b
    move/from16 v0, v17

    #@83d
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtLowRSSI:I

    #@83f
    .line 4234
    :cond_32
    move-object/from16 v0, p0

    #@841
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@843
    move-object/from16 v17, v0

    #@845
    move-object/from16 v0, v17

    #@847
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiConfigStore;->enableWifiCellularHandoverUserTriggeredAdjustment:Z

    #@849
    move/from16 v17, v0

    #@84b
    if-eqz v17, :cond_10

    #@84d
    .line 4235
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@84f
    move/from16 v17, v0

    #@851
    if-gtz v17, :cond_33

    #@853
    .line 4236
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@855
    move/from16 v17, v0

    #@857
    if-lez v17, :cond_10

    #@859
    .line 4237
    :cond_33
    const/16 v15, 0x33

    #@85b
    .line 4238
    const/4 v10, 0x2

    #@85c
    .line 4239
    const-string/jumbo v17, " p2"

    #@85f
    move-object/from16 v0, v17

    #@861
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@864
    goto/16 :goto_9

    #@866
    .line 4241
    :cond_34
    if-nez v8, :cond_10

    #@868
    .line 4242
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtNotHighRSSI:I

    #@86a
    move/from16 v17, v0

    #@86c
    add-int/lit8 v17, v17, 0x1

    #@86e
    move/from16 v0, v17

    #@870
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtNotHighRSSI:I

    #@872
    .line 4243
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtNotHighRSSI:I

    #@874
    move/from16 v17, v0

    #@876
    const/16 v18, 0x3e8

    #@878
    move/from16 v0, v17

    #@87a
    move/from16 v1, v18

    #@87c
    if-le v0, v1, :cond_36

    #@87e
    .line 4246
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@880
    move/from16 v17, v0

    #@882
    if-lez v17, :cond_35

    #@884
    .line 4247
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@886
    move/from16 v17, v0

    #@888
    add-int/lit8 v17, v17, -0x1

    #@88a
    move/from16 v0, v17

    #@88c
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@88e
    .line 4249
    :cond_35
    const/16 v17, 0x0

    #@890
    move/from16 v0, v17

    #@892
    iput v0, v2, Landroid/net/wifi/WifiConfiguration;->numTicksAtNotHighRSSI:I

    #@894
    .line 4251
    :cond_36
    move-object/from16 v0, p0

    #@896
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@898
    move-object/from16 v17, v0

    #@89a
    move-object/from16 v0, v17

    #@89c
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiConfigStore;->enableWifiCellularHandoverUserTriggeredAdjustment:Z

    #@89e
    move/from16 v17, v0

    #@8a0
    if-eqz v17, :cond_10

    #@8a2
    .line 4252
    iget v0, v2, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@8a4
    move/from16 v17, v0

    #@8a6
    if-lez v17, :cond_10

    #@8a8
    .line 4253
    const/16 v15, 0x33

    #@8aa
    .line 4254
    const/4 v10, 0x3

    #@8ab
    .line 4255
    const-string/jumbo v17, " p3"

    #@8ae
    move-object/from16 v0, v17

    #@8b0
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8b3
    goto/16 :goto_9

    #@8b5
    .line 4266
    .restart local v12    # "rssiStatus":Ljava/lang/String;
    :cond_37
    if-eqz v8, :cond_38

    #@8b7
    new-instance v17, Ljava/lang/StringBuilder;

    #@8b9
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@8bc
    move-object/from16 v0, v17

    #@8be
    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8c1
    move-result-object v17

    #@8c2
    const-string/jumbo v18, " highRSSI "

    #@8c5
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8c8
    move-result-object v17

    #@8c9
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8cc
    move-result-object v12

    #@8cd
    goto/16 :goto_a

    #@8cf
    .line 4267
    :cond_38
    if-eqz v9, :cond_12

    #@8d1
    new-instance v17, Ljava/lang/StringBuilder;

    #@8d3
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@8d6
    move-object/from16 v0, v17

    #@8d8
    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8db
    move-result-object v17

    #@8dc
    const-string/jumbo v18, " lowRSSI "

    #@8df
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8e2
    move-result-object v17

    #@8e3
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8e6
    move-result-object v12

    #@8e7
    goto/16 :goto_a

    #@8e9
    .line 4288
    .end local v12    # "rssiStatus":Ljava/lang/String;
    :cond_39
    move-object/from16 v0, p0

    #@8eb
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@8ed
    move-object/from16 v17, v0

    #@8ef
    move-object/from16 v0, v17

    #@8f1
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txBadRate:D

    #@8f3
    move-wide/from16 v18, v0

    #@8f5
    const-wide v20, 0x3fd3333333333333L    # 0.3

    #@8fa
    cmpg-double v17, v18, v20

    #@8fc
    if-gez v17, :cond_17

    #@8fe
    .line 4289
    move-object/from16 v0, p0

    #@900
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@902
    move-object/from16 v17, v0

    #@904
    move-object/from16 v0, v17

    #@906
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@908
    move/from16 v17, v0

    #@90a
    if-lez v17, :cond_3a

    #@90c
    .line 4290
    move-object/from16 v0, p0

    #@90e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@910
    move-object/from16 v17, v0

    #@912
    move-object/from16 v0, v17

    #@914
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@916
    move/from16 v18, v0

    #@918
    add-int/lit8 v18, v18, -0x1

    #@91a
    move/from16 v0, v18

    #@91c
    move-object/from16 v1, v17

    #@91e
    iput v0, v1, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@920
    .line 4291
    :cond_3a
    const-string/jumbo v17, " ls-=%d"

    #@923
    const/16 v18, 0x1

    #@925
    move/from16 v0, v18

    #@927
    new-array v0, v0, [Ljava/lang/Object;

    #@929
    move-object/from16 v18, v0

    #@92b
    move-object/from16 v0, p0

    #@92d
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@92f
    move-object/from16 v19, v0

    #@931
    move-object/from16 v0, v19

    #@933
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@935
    move/from16 v19, v0

    #@937
    invoke-static/range {v19 .. v19}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@93a
    move-result-object v19

    #@93b
    const/16 v20, 0x0

    #@93d
    aput-object v19, v18, v20

    #@93f
    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@942
    move-result-object v17

    #@943
    move-object/from16 v0, v17

    #@945
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@948
    .line 4292
    sget-boolean v17, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@94a
    if-eqz v17, :cond_17

    #@94c
    new-instance v17, Ljava/lang/StringBuilder;

    #@94e
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@951
    const-string/jumbo v18, " good link -> stuck count ="

    #@954
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@957
    move-result-object v17

    #@958
    .line 4293
    move-object/from16 v0, p0

    #@95a
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@95c
    move-object/from16 v18, v0

    #@95e
    move-object/from16 v0, v18

    #@960
    iget v0, v0, Landroid/net/wifi/WifiInfo;->linkStuckCount:I

    #@962
    move/from16 v18, v0

    #@964
    invoke-static/range {v18 .. v18}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@967
    move-result-object v18

    #@968
    .line 4292
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@96b
    move-result-object v17

    #@96c
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@96f
    move-result-object v17

    #@970
    move-object/from16 v0, p0

    #@972
    move-object/from16 v1, v17

    #@974
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@977
    goto/16 :goto_b

    #@979
    .line 4310
    :cond_3b
    if-eqz v7, :cond_19

    #@97b
    move-object/from16 v0, p0

    #@97d
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@97f
    move-object/from16 v17, v0

    #@981
    move-object/from16 v0, v17

    #@983
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@985
    move-wide/from16 v18, v0

    #@987
    const-wide/high16 v20, 0x4014000000000000L    # 5.0

    #@989
    cmpl-double v17, v18, v20

    #@98b
    if-lez v17, :cond_19

    #@98d
    .line 4311
    add-int/lit8 v15, v15, 0x4

    #@98f
    goto/16 :goto_c

    #@991
    .line 4318
    :cond_3c
    if-eqz v9, :cond_3d

    #@993
    .line 4319
    move-object/from16 v0, p0

    #@995
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@997
    move-object/from16 v17, v0

    #@999
    const/16 v18, 0x1

    #@99b
    move/from16 v0, v18

    #@99d
    move-object/from16 v1, v17

    #@99f
    iput v0, v1, Landroid/net/wifi/WifiInfo;->lowRssiCount:I

    #@9a1
    .line 4320
    move-object/from16 v0, p0

    #@9a3
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@9a5
    move-object/from16 v17, v0

    #@9a7
    move-object/from16 v0, v17

    #@9a9
    iget v0, v0, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@9ab
    move/from16 v17, v0

    #@9ad
    if-lez v17, :cond_1a

    #@9af
    .line 4322
    move-object/from16 v0, p0

    #@9b1
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@9b3
    move-object/from16 v17, v0

    #@9b5
    move-object/from16 v0, v17

    #@9b7
    iget v0, v0, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@9b9
    move/from16 v18, v0

    #@9bb
    add-int/lit8 v18, v18, -0x1

    #@9bd
    move/from16 v0, v18

    #@9bf
    move-object/from16 v1, v17

    #@9c1
    iput v0, v1, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@9c3
    goto/16 :goto_d

    #@9c5
    .line 4325
    :cond_3d
    move-object/from16 v0, p0

    #@9c7
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@9c9
    move-object/from16 v17, v0

    #@9cb
    const/16 v18, 0x0

    #@9cd
    move/from16 v0, v18

    #@9cf
    move-object/from16 v1, v17

    #@9d1
    iput v0, v1, Landroid/net/wifi/WifiInfo;->badRssiCount:I

    #@9d3
    .line 4326
    move-object/from16 v0, p0

    #@9d5
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@9d7
    move-object/from16 v17, v0

    #@9d9
    const/16 v18, 0x0

    #@9db
    move/from16 v0, v18

    #@9dd
    move-object/from16 v1, v17

    #@9df
    iput v0, v1, Landroid/net/wifi/WifiInfo;->lowRssiCount:I

    #@9e1
    goto/16 :goto_d
.end method

.method private cancelDelayedScan()V
    .locals 1

    #@0
    .prologue
    .line 1487
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    #@5
    .line 1486
    return-void
.end method

.method private checkAndRestartDelayedScan(IZILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)Z
    .locals 1
    .param p1, "counter"    # I
    .param p2, "restart"    # Z
    .param p3, "milli"    # I
    .param p4, "settings"    # Landroid/net/wifi/ScanSettings;
    .param p5, "workSource"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 1493
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@5
    move-result v0

    #@6
    if-eq p1, v0, :cond_0

    #@8
    .line 1494
    const/4 v0, 0x0

    #@9
    return v0

    #@a
    .line 1496
    :cond_0
    if-eqz p2, :cond_1

    #@c
    .line 1497
    invoke-direct {p0, p3, p4, p5}, Lcom/android/server/wifi/WifiStateMachine;->startDelayedScan(ILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V

    #@f
    .line 1498
    :cond_1
    const/4 v0, 0x1

    #@10
    return v0
.end method

.method private checkAndSetConnectivityInstance()V
    .locals 2

    #@0
    .prologue
    .line 3518
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mCm:Landroid/net/ConnectivityManager;

    #@2
    if-nez v0, :cond_0

    #@4
    .line 3519
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@6
    const-string/jumbo v1, "connectivity"

    #@9
    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@c
    move-result-object v0

    #@d
    check-cast v0, Landroid/net/ConnectivityManager;

    #@f
    iput-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mCm:Landroid/net/ConnectivityManager;

    #@11
    .line 3517
    :cond_0
    return-void
.end method

.method private checkOrDeferScanAllowed(Landroid/os/Message;)Z
    .locals 8
    .param p1, "msg"    # Landroid/os/Message;

    #@0
    .prologue
    .line 1693
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@3
    move-result-wide v2

    #@4
    .line 1694
    .local v2, "now":J
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->lastConnectAttemptTimestamp:J

    #@6
    const-wide/16 v6, 0x0

    #@8
    cmp-long v1, v4, v6

    #@a
    if-eqz v1, :cond_0

    #@c
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->lastConnectAttemptTimestamp:J

    #@e
    sub-long v4, v2, v4

    #@10
    const-wide/16 v6, 0x2710

    #@12
    cmp-long v1, v4, v6

    #@14
    if-gez v1, :cond_0

    #@16
    .line 1695
    invoke-static {p1}, Landroid/os/Message;->obtain(Landroid/os/Message;)Landroid/os/Message;

    #@19
    move-result-object v0

    #@1a
    .line 1696
    .local v0, "dmsg":Landroid/os/Message;
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->lastConnectAttemptTimestamp:J

    #@1c
    sub-long v4, v2, v4

    #@1e
    const-wide/16 v6, 0x2af8

    #@20
    sub-long v4, v6, v4

    #@22
    invoke-virtual {p0, v0, v4, v5}, Lcom/android/server/wifi/WifiStateMachine;->sendMessageDelayed(Landroid/os/Message;J)V

    #@25
    .line 1697
    const/4 v1, 0x0

    #@26
    return v1

    #@27
    .line 1699
    .end local v0    # "dmsg":Landroid/os/Message;
    :cond_0
    const/4 v1, 0x1

    #@28
    return v1
.end method

.method private chooseApChannel(I)I
    .locals 6
    .param p1, "apBand"    # I

    #@0
    .prologue
    .line 5137
    if-nez p1, :cond_4

    #@2
    .line 5138
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigStore:Lcom/android/server/wifi/WifiApConfigStore;

    #@4
    iget-object v3, v3, Lcom/android/server/wifi/WifiApConfigStore;->allowed2GChannel:Ljava/util/ArrayList;

    #@6
    if-eqz v3, :cond_0

    #@8
    .line 5139
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigStore:Lcom/android/server/wifi/WifiApConfigStore;

    #@a
    iget-object v3, v3, Lcom/android/server/wifi/WifiApConfigStore;->allowed2GChannel:Ljava/util/ArrayList;

    #@c
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@f
    move-result v3

    #@10
    if-nez v3, :cond_3

    #@12
    .line 5141
    :cond_0
    sget-boolean v3, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@14
    if-eqz v3, :cond_1

    #@16
    .line 5142
    const-string/jumbo v3, "WifiStateMachine"

    #@19
    const-string/jumbo v4, "No specified 2G allowed channel list"

    #@1c
    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@1f
    .line 5144
    :cond_1
    const/4 v0, 0x6

    #@20
    .line 5161
    .local v0, "apChannel":I
    :goto_0
    sget-boolean v3, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@22
    if-eqz v3, :cond_2

    #@24
    .line 5162
    const-string/jumbo v3, "WifiStateMachine"

    #@27
    new-instance v4, Ljava/lang/StringBuilder;

    #@29
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@2c
    const-string/jumbo v5, "SoftAp set on channel "

    #@2f
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v4

    #@33
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@36
    move-result-object v4

    #@37
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3a
    move-result-object v4

    #@3b
    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@3e
    .line 5165
    :cond_2
    return v0

    #@3f
    .line 5146
    .end local v0    # "apChannel":I
    :cond_3
    sget-object v3, Lcom/android/server/wifi/WifiStateMachine;->mRandom:Ljava/util/Random;

    #@41
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigStore:Lcom/android/server/wifi/WifiApConfigStore;

    #@43
    iget-object v4, v4, Lcom/android/server/wifi/WifiApConfigStore;->allowed2GChannel:Ljava/util/ArrayList;

    #@45
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@48
    move-result v4

    #@49
    invoke-virtual {v3, v4}, Ljava/util/Random;->nextInt(I)I

    #@4c
    move-result v2

    #@4d
    .line 5147
    .local v2, "index":I
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigStore:Lcom/android/server/wifi/WifiApConfigStore;

    #@4f
    iget-object v3, v3, Lcom/android/server/wifi/WifiApConfigStore;->allowed2GChannel:Ljava/util/ArrayList;

    #@51
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@54
    move-result-object v3

    #@55
    check-cast v3, Ljava/lang/Integer;

    #@57
    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    #@5a
    move-result v0

    #@5b
    .restart local v0    # "apChannel":I
    goto :goto_0

    #@5c
    .line 5151
    .end local v0    # "apChannel":I
    .end local v2    # "index":I
    :cond_4
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@5e
    const/4 v3, 0x2

    #@5f
    invoke-static {v3}, Lcom/android/server/wifi/WifiNative;->getChannelsForBand(I)[I

    #@62
    move-result-object v1

    #@63
    .line 5152
    .local v1, "channel":[I
    if-eqz v1, :cond_5

    #@65
    array-length v3, v1

    #@66
    if-lez v3, :cond_5

    #@68
    .line 5153
    sget-object v3, Lcom/android/server/wifi/WifiStateMachine;->mRandom:Ljava/util/Random;

    #@6a
    array-length v4, v1

    #@6b
    invoke-virtual {v3, v4}, Ljava/util/Random;->nextInt(I)I

    #@6e
    move-result v3

    #@6f
    aget v0, v1, v3

    #@71
    .line 5154
    .restart local v0    # "apChannel":I
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->convertFrequencyToChannelNumber(I)I

    #@74
    move-result v0

    #@75
    goto :goto_0

    #@76
    .line 5156
    .end local v0    # "apChannel":I
    :cond_5
    const-string/jumbo v3, "WifiStateMachine"

    #@79
    const-string/jumbo v4, "SoftAp do not get available channel list"

    #@7c
    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@7f
    .line 5157
    const/4 v0, 0x0

    #@80
    .restart local v0    # "apChannel":I
    goto :goto_0
.end method

.method private cleanWifiScore()V
    .locals 4

    #@0
    .prologue
    const-wide/16 v2, 0x0

    #@2
    .line 4108
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4
    iput-wide v2, v0, Landroid/net/wifi/WifiInfo;->txBadRate:D

    #@6
    .line 4109
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@8
    iput-wide v2, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@a
    .line 4110
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@c
    iput-wide v2, v0, Landroid/net/wifi/WifiInfo;->txRetriesRate:D

    #@e
    .line 4111
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@10
    iput-wide v2, v0, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@12
    .line 4107
    return-void
.end method

.method private clearIPv4Address(Ljava/lang/String;)Z
    .locals 4
    .param p1, "iface"    # Ljava/lang/String;

    #@0
    .prologue
    .line 4404
    :try_start_0
    new-instance v1, Landroid/net/InterfaceConfiguration;

    #@2
    invoke-direct {v1}, Landroid/net/InterfaceConfiguration;-><init>()V

    #@5
    .line 4405
    .local v1, "ifcg":Landroid/net/InterfaceConfiguration;
    new-instance v2, Landroid/net/LinkAddress;

    #@7
    const-string/jumbo v3, "0.0.0.0/0"

    #@a
    invoke-direct {v2, v3}, Landroid/net/LinkAddress;-><init>(Ljava/lang/String;)V

    #@d
    invoke-virtual {v1, v2}, Landroid/net/InterfaceConfiguration;->setLinkAddress(Landroid/net/LinkAddress;)V

    #@10
    .line 4406
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@12
    invoke-interface {v2, p1, v1}, Landroid/os/INetworkManagementService;->setInterfaceConfig(Ljava/lang/String;Landroid/net/InterfaceConfiguration;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@15
    .line 4407
    const/4 v2, 0x1

    #@16
    return v2

    #@17
    .line 4408
    .end local v1    # "ifcg":Landroid/net/InterfaceConfiguration;
    :catch_0
    move-exception v0

    #@18
    .line 4409
    .local v0, "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    #@19
    return v2
.end method

.method private clearLinkProperties()V
    .locals 2

    #@0
    .prologue
    .line 4611
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResultsLock:Ljava/lang/Object;

    #@2
    monitor-enter v1

    #@3
    .line 4612
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 4613
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@9
    invoke-virtual {v0}, Landroid/net/DhcpResults;->clear()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    :cond_0
    monitor-exit v1

    #@d
    .line 4616
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetlinkTracker:Lcom/android/server/net/NetlinkTracker;

    #@f
    invoke-virtual {v0}, Lcom/android/server/net/NetlinkTracker;->clearLinkProperties()V

    #@12
    .line 4617
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

    #@14
    if-eqz v0, :cond_1

    #@16
    .line 4618
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

    #@18
    invoke-virtual {v0}, Landroid/net/IpReachabilityMonitor;->clearLinkProperties()V

    #@1b
    .line 4622
    :cond_1
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@1d
    invoke-virtual {v0}, Landroid/net/LinkProperties;->clear()V

    #@20
    .line 4623
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@22
    if-eqz v0, :cond_2

    #@24
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@26
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@28
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;->sendLinkProperties(Landroid/net/LinkProperties;)V

    #@2b
    .line 4609
    :cond_2
    return-void

    #@2c
    .line 4611
    :catchall_0
    move-exception v0

    #@2d
    monitor-exit v1

    #@2e
    throw v0
.end method

.method private static concat([B[B[B)[B
    .locals 7
    .param p0, "array1"    # [B
    .param p1, "array2"    # [B
    .param p2, "array3"    # [B

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 9740
    array-length v5, p0

    #@2
    array-length v6, p1

    #@3
    add-int/2addr v5, v6

    #@4
    array-length v6, p2

    #@5
    add-int v2, v5, v6

    #@7
    .line 9742
    .local v2, "len":I
    array-length v5, p0

    #@8
    if-eqz v5, :cond_0

    #@a
    .line 9743
    add-int/lit8 v2, v2, 0x1

    #@c
    .line 9746
    :cond_0
    array-length v5, p1

    #@d
    if-eqz v5, :cond_1

    #@f
    .line 9747
    add-int/lit8 v2, v2, 0x1

    #@11
    .line 9750
    :cond_1
    array-length v5, p2

    #@12
    if-eqz v5, :cond_2

    #@14
    .line 9751
    add-int/lit8 v2, v2, 0x1

    #@16
    .line 9754
    :cond_2
    new-array v3, v2, [B

    #@18
    .line 9756
    .local v3, "result":[B
    const/4 v1, 0x0

    #@19
    .line 9757
    .local v1, "index":I
    array-length v5, p0

    #@1a
    if-eqz v5, :cond_3

    #@1c
    .line 9758
    array-length v5, p0

    #@1d
    and-int/lit16 v5, v5, 0xff

    #@1f
    int-to-byte v5, v5

    #@20
    aput-byte v5, v3, v1

    #@22
    .line 9759
    const/4 v1, 0x1

    #@23
    .line 9760
    array-length v6, p0

    #@24
    move v5, v4

    #@25
    :goto_0
    if-ge v5, v6, :cond_3

    #@27
    aget-byte v0, p0, v5

    #@29
    .line 9761
    .local v0, "b":B
    aput-byte v0, v3, v1

    #@2b
    .line 9762
    add-int/lit8 v1, v1, 0x1

    #@2d
    .line 9760
    add-int/lit8 v5, v5, 0x1

    #@2f
    goto :goto_0

    #@30
    .line 9766
    .end local v0    # "b":B
    :cond_3
    array-length v5, p1

    #@31
    if-eqz v5, :cond_4

    #@33
    .line 9767
    array-length v5, p1

    #@34
    and-int/lit16 v5, v5, 0xff

    #@36
    int-to-byte v5, v5

    #@37
    aput-byte v5, v3, v1

    #@39
    .line 9768
    add-int/lit8 v1, v1, 0x1

    #@3b
    .line 9769
    array-length v6, p1

    #@3c
    move v5, v4

    #@3d
    :goto_1
    if-ge v5, v6, :cond_4

    #@3f
    aget-byte v0, p1, v5

    #@41
    .line 9770
    .restart local v0    # "b":B
    aput-byte v0, v3, v1

    #@43
    .line 9771
    add-int/lit8 v1, v1, 0x1

    #@45
    .line 9769
    add-int/lit8 v5, v5, 0x1

    #@47
    goto :goto_1

    #@48
    .line 9775
    .end local v0    # "b":B
    :cond_4
    array-length v5, p2

    #@49
    if-eqz v5, :cond_5

    #@4b
    .line 9776
    array-length v5, p2

    #@4c
    and-int/lit16 v5, v5, 0xff

    #@4e
    int-to-byte v5, v5

    #@4f
    aput-byte v5, v3, v1

    #@51
    .line 9777
    add-int/lit8 v1, v1, 0x1

    #@53
    .line 9778
    array-length v5, p2

    #@54
    :goto_2
    if-ge v4, v5, :cond_5

    #@56
    aget-byte v0, p2, v4

    #@58
    .line 9779
    .restart local v0    # "b":B
    aput-byte v0, v3, v1

    #@5a
    .line 9780
    add-int/lit8 v1, v1, 0x1

    #@5c
    .line 9778
    add-int/lit8 v4, v4, 0x1

    #@5e
    goto :goto_2

    #@5f
    .line 9783
    .end local v0    # "b":B
    :cond_5
    return-object v3
.end method

.method private static concatHex([B[B)[B
    .locals 7
    .param p0, "array1"    # [B
    .param p1, "array2"    # [B

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 9788
    array-length v5, p0

    #@2
    array-length v6, p1

    #@3
    add-int v2, v5, v6

    #@5
    .line 9790
    .local v2, "len":I
    new-array v3, v2, [B

    #@7
    .line 9792
    .local v3, "result":[B
    const/4 v1, 0x0

    #@8
    .line 9793
    .local v1, "index":I
    array-length v5, p0

    #@9
    if-eqz v5, :cond_0

    #@b
    .line 9794
    array-length v6, p0

    #@c
    move v5, v4

    #@d
    :goto_0
    if-ge v5, v6, :cond_0

    #@f
    aget-byte v0, p0, v5

    #@11
    .line 9795
    .local v0, "b":B
    aput-byte v0, v3, v1

    #@13
    .line 9796
    add-int/lit8 v1, v1, 0x1

    #@15
    .line 9794
    add-int/lit8 v5, v5, 0x1

    #@17
    goto :goto_0

    #@18
    .line 9800
    .end local v0    # "b":B
    :cond_0
    array-length v5, p1

    #@19
    if-eqz v5, :cond_1

    #@1b
    .line 9801
    array-length v5, p1

    #@1c
    :goto_1
    if-ge v4, v5, :cond_1

    #@1e
    aget-byte v0, p1, v4

    #@20
    .line 9802
    .restart local v0    # "b":B
    aput-byte v0, v3, v1

    #@22
    .line 9803
    add-int/lit8 v1, v1, 0x1

    #@24
    .line 9801
    add-int/lit8 v4, v4, 0x1

    #@26
    goto :goto_1

    #@27
    .line 9807
    .end local v0    # "b":B
    :cond_1
    return-object v3
.end method

.method private configureLazyRoam()Z
    .locals 6

    #@0
    .prologue
    const/4 v5, 0x1

    #@1
    const/4 v4, 0x0

    #@2
    .line 3182
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@5
    move-result v1

    #@6
    if-nez v1, :cond_0

    #@8
    return v4

    #@9
    .line 3184
    :cond_0
    new-instance v0, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;

    #@b
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@d
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    #@10
    invoke-direct {v0, v1}, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;-><init>(Lcom/android/server/wifi/WifiNative;)V

    #@13
    .line 3185
    .local v0, "params":Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@15
    iget-object v1, v1, Lcom/android/server/wifi/WifiConfigStore;->bandPreferenceBoostThreshold5:Ljava/util/concurrent/atomic/AtomicInteger;

    #@17
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@1a
    move-result v1

    #@1b
    iput v1, v0, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;->A_band_boost_threshold:I

    #@1d
    .line 3186
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1f
    iget-object v1, v1, Lcom/android/server/wifi/WifiConfigStore;->bandPreferencePenaltyThreshold5:Ljava/util/concurrent/atomic/AtomicInteger;

    #@21
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@24
    move-result v1

    #@25
    iput v1, v0, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;->A_band_penalty_threshold:I

    #@27
    .line 3187
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@29
    iget v1, v1, Lcom/android/server/wifi/WifiConfigStore;->bandPreferenceBoostFactor5:I

    #@2b
    iput v1, v0, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;->A_band_boost_factor:I

    #@2d
    .line 3188
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2f
    iget v1, v1, Lcom/android/server/wifi/WifiConfigStore;->bandPreferencePenaltyFactor5:I

    #@31
    iput v1, v0, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;->A_band_penalty_factor:I

    #@33
    .line 3189
    const/16 v1, 0x41

    #@35
    iput v1, v0, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;->A_band_max_boost:I

    #@37
    .line 3190
    const/16 v1, 0x19

    #@39
    iput v1, v0, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;->lazy_roam_hysteresis:I

    #@3b
    .line 3191
    const/16 v1, -0x4b

    #@3d
    iput v1, v0, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;->alert_roam_rssi_trigger:I

    #@3f
    .line 3193
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@41
    if-eqz v1, :cond_1

    #@43
    .line 3194
    const-string/jumbo v1, "WifiStateMachine"

    #@46
    new-instance v2, Ljava/lang/StringBuilder;

    #@48
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@4b
    const-string/jumbo v3, "configureLazyRoam "

    #@4e
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@51
    move-result-object v2

    #@52
    invoke-virtual {v0}, Lcom/android/server/wifi/WifiNative$WifiLazyRoamParams;->toString()Ljava/lang/String;

    #@55
    move-result-object v3

    #@56
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@59
    move-result-object v2

    #@5a
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@5d
    move-result-object v2

    #@5e
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@61
    .line 3197
    :cond_1
    invoke-static {v5, v0}, Lcom/android/server/wifi/WifiNative;->setLazyRoam(ZLcom/android/server/wifi/WifiNative$WifiLazyRoamParams;)Z

    #@64
    move-result v1

    #@65
    if-nez v1, :cond_2

    #@67
    .line 3199
    const-string/jumbo v1, "WifiStateMachine"

    #@6a
    const-string/jumbo v2, "configureLazyRoam couldnt program params"

    #@6d
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@70
    .line 3201
    return v4

    #@71
    .line 3203
    :cond_2
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@73
    if-eqz v1, :cond_3

    #@75
    .line 3204
    const-string/jumbo v1, "WifiStateMachine"

    #@78
    const-string/jumbo v2, "configureLazyRoam success"

    #@7b
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@7e
    .line 3206
    :cond_3
    return v5
.end method

.method private configurePno()Z
    .locals 9

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v4, 0x0

    #@2
    .line 3293
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@5
    move-result v5

    #@6
    if-nez v5, :cond_0

    #@8
    return v4

    #@9
    .line 3295
    :cond_0
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanner:Landroid/net/wifi/WifiScanner;

    #@b
    if-nez v5, :cond_1

    #@d
    .line 3296
    const-string/jumbo v4, "configurePno: mWifiScanner is null "

    #@10
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@13
    .line 3297
    return v8

    #@14
    .line 3301
    :cond_1
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiAutoJoinController:Lcom/android/server/wifi/WifiAutoJoinController;

    #@16
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@19
    move-result-object v6

    #@1a
    invoke-virtual {v5, v6}, Lcom/android/server/wifi/WifiAutoJoinController;->getPnoList(Landroid/net/wifi/WifiConfiguration;)Ljava/util/ArrayList;

    #@1d
    move-result-object v1

    #@1e
    .line 3302
    .local v1, "llist":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;>;"
    if-eqz v1, :cond_2

    #@20
    invoke-interface {v1}, Ljava/util/List;->size()I

    #@23
    move-result v5

    #@24
    if-nez v5, :cond_3

    #@26
    .line 3303
    :cond_2
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->stopPnoOffload()V

    #@29
    .line 3304
    const-string/jumbo v4, "configurePno: empty PNO list "

    #@2c
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@2f
    .line 3305
    return v8

    #@30
    .line 3307
    :cond_3
    sget-boolean v5, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@32
    if-eqz v5, :cond_4

    #@34
    .line 3308
    new-instance v5, Ljava/lang/StringBuilder;

    #@36
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@39
    const-string/jumbo v6, "configurePno: got llist size "

    #@3c
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3f
    move-result-object v5

    #@40
    invoke-interface {v1}, Ljava/util/List;->size()I

    #@43
    move-result v6

    #@44
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@47
    move-result-object v5

    #@48
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4b
    move-result-object v5

    #@4c
    invoke-virtual {p0, v5}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@4f
    .line 3313
    :cond_4
    new-array v5, v4, [Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;

    #@51
    invoke-interface {v1, v5}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    #@54
    move-result-object v0

    #@55
    check-cast v0, [Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;

    #@57
    .line 3315
    .local v0, "list":[Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;
    invoke-static {v0, p0}, Lcom/android/server/wifi/WifiNative;->setPnoList([Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;Lcom/android/server/wifi/WifiNative$WifiPnoEventHandler;)Z

    #@5a
    move-result v5

    #@5b
    if-nez v5, :cond_5

    #@5d
    .line 3316
    const-string/jumbo v5, "WifiStateMachine"

    #@60
    new-instance v6, Ljava/lang/StringBuilder;

    #@62
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@65
    const-string/jumbo v7, "Failed to set pno, length = "

    #@68
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6b
    move-result-object v6

    #@6c
    array-length v7, v0

    #@6d
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@70
    move-result-object v6

    #@71
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@74
    move-result-object v6

    #@75
    invoke-static {v5, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@78
    .line 3317
    return v4

    #@79
    .line 3321
    :cond_5
    new-instance v3, Ljava/lang/StringBuilder;

    #@7b
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@7e
    .line 3322
    .local v3, "sb":Ljava/lang/StringBuilder;
    array-length v5, v0

    #@7f
    :goto_0
    if-ge v4, v5, :cond_6

    #@81
    aget-object v2, v0, v4

    #@83
    .line 3323
    .local v2, "network":Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;
    const-string/jumbo v6, "["

    #@86
    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@89
    move-result-object v6

    #@8a
    iget-object v7, v2, Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;->SSID:Ljava/lang/String;

    #@8c
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8f
    move-result-object v6

    #@90
    const-string/jumbo v7, " auth="

    #@93
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@96
    move-result-object v6

    #@97
    iget v7, v2, Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;->auth:I

    #@99
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@9c
    .line 3324
    const-string/jumbo v6, " flags="

    #@9f
    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a2
    .line 3325
    iget v6, v2, Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;->flags:I

    #@a4
    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@a7
    move-result-object v6

    #@a8
    const-string/jumbo v7, " rssi"

    #@ab
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ae
    move-result-object v6

    #@af
    iget v7, v2, Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;->rssi_threshold:I

    #@b1
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@b4
    .line 3326
    const-string/jumbo v6, "] "

    #@b7
    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ba
    .line 3322
    add-int/lit8 v4, v4, 0x1

    #@bc
    goto :goto_0

    #@bd
    .line 3329
    .end local v2    # "network":Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;
    :cond_6
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanPeriodMilli:J

    #@bf
    long-to-int v4, v4

    #@c0
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c3
    move-result-object v5

    #@c4
    const v6, 0x2009b

    #@c7
    invoke-virtual {p0, v6, v8, v4, v5}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@ca
    .line 3331
    return v8
.end method

.method private configureSsidWhiteList()Z
    .locals 4

    #@0
    .prologue
    const/4 v3, 0x1

    #@1
    const/4 v2, 0x0

    #@2
    .line 3164
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@4
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@7
    move-result-object v1

    #@8
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiConfigStore;->getWhiteListedSsids(Landroid/net/wifi/WifiConfiguration;)[Ljava/lang/String;

    #@b
    move-result-object v0

    #@c
    iput-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@e
    .line 3165
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@10
    if-eqz v0, :cond_0

    #@12
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@14
    array-length v0, v0

    #@15
    if-nez v0, :cond_1

    #@17
    .line 3166
    :cond_0
    return v3

    #@18
    .line 3169
    :cond_1
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@1a
    invoke-static {v0}, Lcom/android/server/wifi/WifiNative;->setSsidWhitelist([Ljava/lang/String;)Z

    #@1d
    move-result v0

    #@1e
    if-nez v0, :cond_2

    #@20
    .line 3170
    new-instance v0, Ljava/lang/StringBuilder;

    #@22
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@25
    const-string/jumbo v1, "configureSsidWhiteList couldnt program SSID list, size "

    #@28
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2b
    move-result-object v0

    #@2c
    .line 3171
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@2e
    array-length v1, v1

    #@2f
    .line 3170
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@32
    move-result-object v0

    #@33
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@36
    move-result-object v0

    #@37
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@3a
    .line 3172
    return v2

    #@3b
    .line 3175
    :cond_2
    const-string/jumbo v0, "configureSsidWhiteList success"

    #@3e
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@41
    .line 3176
    return v3
.end method

.method private convertFrequencyToChannelNumber(I)I
    .locals 1
    .param p1, "frequency"    # I

    #@0
    .prologue
    .line 5123
    const/16 v0, 0x96c

    #@2
    if-lt p1, v0, :cond_0

    #@4
    const/16 v0, 0x9b4

    #@6
    if-gt p1, v0, :cond_0

    #@8
    .line 5124
    add-int/lit16 v0, p1, -0x96c

    #@a
    div-int/lit8 v0, v0, 0x5

    #@c
    add-int/lit8 v0, v0, 0x1

    #@e
    return v0

    #@f
    .line 5125
    :cond_0
    const/16 v0, 0x1432

    #@11
    if-lt p1, v0, :cond_1

    #@13
    const/16 v0, 0x16c1

    #@15
    if-gt p1, v0, :cond_1

    #@17
    .line 5127
    add-int/lit16 v0, p1, -0x1432

    #@19
    div-int/lit8 v0, v0, 0x5

    #@1b
    add-int/lit8 v0, v0, 0x22

    #@1d
    return v0

    #@1e
    .line 5129
    :cond_1
    const/4 v0, 0x0

    #@1f
    return v0
.end method

.method private enableSoftAp()Z
    .locals 4

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 5170
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->getInterfaces()I

    #@4
    move-result v1

    #@5
    if-eqz v1, :cond_1

    #@7
    .line 5171
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@9
    invoke-static {v3}, Lcom/android/server/wifi/WifiNative;->toggleInterface(I)Z

    #@c
    move-result v1

    #@d
    if-nez v1, :cond_2

    #@f
    .line 5172
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@11
    if-eqz v1, :cond_0

    #@13
    const-string/jumbo v1, "WifiStateMachine"

    #@16
    const-string/jumbo v2, "toggleInterface failed"

    #@19
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@1c
    .line 5173
    :cond_0
    return v3

    #@1d
    .line 5176
    :cond_1
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@1f
    if-eqz v1, :cond_2

    #@21
    const-string/jumbo v1, "WifiStateMachine"

    #@24
    const-string/jumbo v2, "No interfaces to toggle"

    #@27
    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@2a
    .line 5180
    :cond_2
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@2c
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@2e
    const-string/jumbo v3, "AP"

    #@31
    invoke-interface {v1, v2, v3}, Landroid/os/INetworkManagementService;->wifiFirmwareReload(Ljava/lang/String;Ljava/lang/String;)V

    #@34
    .line 5181
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@36
    if-eqz v1, :cond_3

    #@38
    const-string/jumbo v1, "WifiStateMachine"

    #@3b
    const-string/jumbo v2, "Firmware reloaded in AP mode"

    #@3e
    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    #@41
    .line 5186
    :cond_3
    :goto_0
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->startHal()Z

    #@44
    move-result v1

    #@45
    if-nez v1, :cond_4

    #@47
    .line 5188
    const-string/jumbo v1, "WifiStateMachine"

    #@4a
    const-string/jumbo v2, "Failed to start HAL"

    #@4d
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@50
    .line 5190
    :cond_4
    const/4 v1, 0x1

    #@51
    return v1

    #@52
    .line 5182
    :catch_0
    move-exception v0

    #@53
    .line 5183
    .local v0, "e":Ljava/lang/Exception;
    const-string/jumbo v1, "WifiStateMachine"

    #@56
    new-instance v2, Ljava/lang/StringBuilder;

    #@58
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@5b
    const-string/jumbo v3, "Failed to reload AP firmware "

    #@5e
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@61
    move-result-object v2

    #@62
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@65
    move-result-object v2

    #@66
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@69
    move-result-object v2

    #@6a
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@6d
    goto :goto_0
.end method

.method private fetchPktcntNative(Landroid/net/wifi/RssiPacketCountInfo;)V
    .locals 9
    .param p1, "info"    # Landroid/net/wifi/RssiPacketCountInfo;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 4382
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@3
    invoke-virtual {v6}, Lcom/android/server/wifi/WifiNative;->pktcntPoll()Ljava/lang/String;

    #@6
    move-result-object v3

    #@7
    .line 4384
    .local v3, "pktcntPoll":Ljava/lang/String;
    if-eqz v3, :cond_3

    #@9
    .line 4385
    const-string/jumbo v6, "\n"

    #@c
    invoke-virtual {v3, v6}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@f
    move-result-object v2

    #@10
    .line 4386
    .local v2, "lines":[Ljava/lang/String;
    array-length v6, v2

    #@11
    :goto_0
    if-ge v5, v6, :cond_3

    #@13
    aget-object v1, v2, v5

    #@15
    .line 4387
    .local v1, "line":Ljava/lang/String;
    const-string/jumbo v7, "="

    #@18
    invoke-virtual {v1, v7}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@1b
    move-result-object v4

    #@1c
    .line 4388
    .local v4, "prop":[Ljava/lang/String;
    array-length v7, v4

    #@1d
    const/4 v8, 0x2

    #@1e
    if-ge v7, v8, :cond_1

    #@20
    .line 4386
    :cond_0
    :goto_1
    add-int/lit8 v5, v5, 0x1

    #@22
    goto :goto_0

    #@23
    .line 4390
    :cond_1
    const/4 v7, 0x0

    #@24
    :try_start_0
    aget-object v7, v4, v7

    #@26
    const-string/jumbo v8, "TXGOOD"

    #@29
    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@2c
    move-result v7

    #@2d
    if-eqz v7, :cond_2

    #@2f
    .line 4391
    const/4 v7, 0x1

    #@30
    aget-object v7, v4, v7

    #@32
    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@35
    move-result v7

    #@36
    iput v7, p1, Landroid/net/wifi/RssiPacketCountInfo;->txgood:I

    #@38
    goto :goto_1

    #@39
    .line 4395
    :catch_0
    move-exception v0

    #@3a
    .local v0, "e":Ljava/lang/NumberFormatException;
    goto :goto_1

    #@3b
    .line 4392
    .end local v0    # "e":Ljava/lang/NumberFormatException;
    :cond_2
    const/4 v7, 0x0

    #@3c
    aget-object v7, v4, v7

    #@3e
    const-string/jumbo v8, "TXBAD"

    #@41
    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@44
    move-result v7

    #@45
    if-eqz v7, :cond_0

    #@47
    .line 4393
    const/4 v7, 0x1

    #@48
    aget-object v7, v4, v7

    #@4a
    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@4d
    move-result v7

    #@4e
    iput v7, p1, Landroid/net/wifi/RssiPacketCountInfo;->txbad:I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@50
    goto :goto_1

    #@51
    .line 4381
    .end local v1    # "line":Ljava/lang/String;
    .end local v2    # "lines":[Ljava/lang/String;
    .end local v4    # "prop":[Ljava/lang/String;
    :cond_3
    return-void
.end method

.method private fetchRssiLinkSpeedAndFrequencyNative()V
    .locals 14

    #@0
    .prologue
    const/16 v13, -0x7f

    #@2
    const/4 v9, 0x0

    #@3
    .line 3992
    const/4 v5, -0x1

    #@4
    .line 3993
    .local v5, "newRssi":I
    const/4 v4, -0x1

    #@5
    .line 3994
    .local v4, "newLinkSpeed":I
    const/4 v3, -0x1

    #@6
    .line 3996
    .local v3, "newFrequency":I
    iget-object v10, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@8
    invoke-virtual {v10}, Lcom/android/server/wifi/WifiNative;->signalPoll()Ljava/lang/String;

    #@b
    move-result-object v8

    #@c
    .line 3998
    .local v8, "signalPoll":Ljava/lang/String;
    if-eqz v8, :cond_4

    #@e
    .line 3999
    const-string/jumbo v10, "\n"

    #@11
    invoke-virtual {v8, v10}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@14
    move-result-object v2

    #@15
    .line 4000
    .local v2, "lines":[Ljava/lang/String;
    array-length v10, v2

    #@16
    :goto_0
    if-ge v9, v10, :cond_4

    #@18
    aget-object v1, v2, v9

    #@1a
    .line 4001
    .local v1, "line":Ljava/lang/String;
    const-string/jumbo v11, "="

    #@1d
    invoke-virtual {v1, v11}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@20
    move-result-object v7

    #@21
    .line 4002
    .local v7, "prop":[Ljava/lang/String;
    array-length v11, v7

    #@22
    const/4 v12, 0x2

    #@23
    if-ge v11, v12, :cond_1

    #@25
    .line 4000
    :cond_0
    :goto_1
    add-int/lit8 v9, v9, 0x1

    #@27
    goto :goto_0

    #@28
    .line 4004
    :cond_1
    const/4 v11, 0x0

    #@29
    :try_start_0
    aget-object v11, v7, v11

    #@2b
    const-string/jumbo v12, "RSSI"

    #@2e
    invoke-virtual {v11, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@31
    move-result v11

    #@32
    if-eqz v11, :cond_2

    #@34
    .line 4005
    const/4 v11, 0x1

    #@35
    aget-object v11, v7, v11

    #@37
    invoke-static {v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@3a
    move-result v5

    #@3b
    goto :goto_1

    #@3c
    .line 4006
    :cond_2
    const/4 v11, 0x0

    #@3d
    aget-object v11, v7, v11

    #@3f
    const-string/jumbo v12, "LINKSPEED"

    #@42
    invoke-virtual {v11, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@45
    move-result v11

    #@46
    if-eqz v11, :cond_3

    #@48
    .line 4007
    const/4 v11, 0x1

    #@49
    aget-object v11, v7, v11

    #@4b
    invoke-static {v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@4e
    move-result v4

    #@4f
    goto :goto_1

    #@50
    .line 4008
    :cond_3
    const/4 v11, 0x0

    #@51
    aget-object v11, v7, v11

    #@53
    const-string/jumbo v12, "FREQUENCY"

    #@56
    invoke-virtual {v11, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@59
    move-result v11

    #@5a
    if-eqz v11, :cond_0

    #@5c
    .line 4009
    const/4 v11, 0x1

    #@5d
    aget-object v11, v7, v11

    #@5f
    invoke-static {v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@62
    move-result v3

    #@63
    goto :goto_1

    #@64
    .line 4017
    .end local v1    # "line":Ljava/lang/String;
    .end local v2    # "lines":[Ljava/lang/String;
    .end local v7    # "prop":[Ljava/lang/String;
    :cond_4
    sget-boolean v9, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@66
    if-eqz v9, :cond_5

    #@68
    .line 4018
    new-instance v9, Ljava/lang/StringBuilder;

    #@6a
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@6d
    const-string/jumbo v10, "fetchRssiLinkSpeedAndFrequencyNative rssi="

    #@70
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@73
    move-result-object v9

    #@74
    .line 4019
    invoke-static {v5}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@77
    move-result-object v10

    #@78
    .line 4018
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7b
    move-result-object v9

    #@7c
    .line 4019
    const-string/jumbo v10, " linkspeed="

    #@7f
    .line 4018
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@82
    move-result-object v9

    #@83
    .line 4020
    invoke-static {v4}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@86
    move-result-object v10

    #@87
    .line 4018
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8a
    move-result-object v9

    #@8b
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8e
    move-result-object v9

    #@8f
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@92
    .line 4023
    :cond_5
    if-le v5, v13, :cond_c

    #@94
    const/16 v9, 0xc8

    #@96
    if-ge v5, v9, :cond_c

    #@98
    .line 4028
    if-lez v5, :cond_6

    #@9a
    add-int/lit16 v5, v5, -0x100

    #@9c
    .line 4029
    :cond_6
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@9e
    invoke-virtual {v9, v5}, Landroid/net/wifi/WifiInfo;->setRssi(I)V

    #@a1
    .line 4040
    const/4 v9, 0x5

    #@a2
    invoke-static {v5, v9}, Landroid/net/wifi/WifiManager;->calculateSignalLevel(II)I

    #@a5
    move-result v6

    #@a6
    .line 4041
    .local v6, "newSignalLevel":I
    iget v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastSignalLevel:I

    #@a8
    if-eq v6, v9, :cond_7

    #@aa
    .line 4042
    invoke-direct {p0, v5}, Lcom/android/server/wifi/WifiStateMachine;->sendRssiChangeBroadcast(I)V

    #@ad
    .line 4044
    :cond_7
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastSignalLevel:I

    #@af
    .line 4049
    .end local v6    # "newSignalLevel":I
    :goto_2
    const/4 v9, -0x1

    #@b0
    if-eq v4, v9, :cond_8

    #@b2
    .line 4050
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@b4
    invoke-virtual {v9, v4}, Landroid/net/wifi/WifiInfo;->setLinkSpeed(I)V

    #@b7
    .line 4052
    :cond_8
    if-lez v3, :cond_b

    #@b9
    .line 4053
    invoke-static {v3}, Landroid/net/wifi/ScanResult;->is5GHz(I)Z

    #@bc
    move-result v9

    #@bd
    if-eqz v9, :cond_9

    #@bf
    .line 4054
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConnectionStatistics:Landroid/net/wifi/WifiConnectionStatistics;

    #@c1
    iget v10, v9, Landroid/net/wifi/WifiConnectionStatistics;->num5GhzConnected:I

    #@c3
    add-int/lit8 v10, v10, 0x1

    #@c5
    iput v10, v9, Landroid/net/wifi/WifiConnectionStatistics;->num5GhzConnected:I

    #@c7
    .line 4056
    :cond_9
    invoke-static {v3}, Landroid/net/wifi/ScanResult;->is24GHz(I)Z

    #@ca
    move-result v9

    #@cb
    if-eqz v9, :cond_a

    #@cd
    .line 4057
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConnectionStatistics:Landroid/net/wifi/WifiConnectionStatistics;

    #@cf
    iget v10, v9, Landroid/net/wifi/WifiConnectionStatistics;->num24GhzConnected:I

    #@d1
    add-int/lit8 v10, v10, 0x1

    #@d3
    iput v10, v9, Landroid/net/wifi/WifiConnectionStatistics;->num24GhzConnected:I

    #@d5
    .line 4059
    :cond_a
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@d7
    invoke-virtual {v9, v3}, Landroid/net/wifi/WifiInfo;->setFrequency(I)V

    #@da
    .line 4061
    :cond_b
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@dc
    iget-object v10, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@de
    invoke-virtual {v9, v10}, Lcom/android/server/wifi/WifiConfigStore;->updateConfiguration(Landroid/net/wifi/WifiInfo;)V

    #@e1
    .line 3991
    return-void

    #@e2
    .line 4046
    :cond_c
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@e4
    invoke-virtual {v9, v13}, Landroid/net/wifi/WifiInfo;->setRssi(I)V

    #@e7
    goto :goto_2

    #@e8
    .line 4011
    .restart local v1    # "line":Ljava/lang/String;
    .restart local v2    # "lines":[Ljava/lang/String;
    .restart local v7    # "prop":[Ljava/lang/String;
    :catch_0
    move-exception v0

    #@e9
    .local v0, "e":Ljava/lang/NumberFormatException;
    goto/16 :goto_1
.end method

.method private getNetworkDetailedState()Landroid/net/NetworkInfo$DetailedState;
    .locals 1

    #@0
    .prologue
    .line 4797
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@2
    invoke-virtual {v0}, Landroid/net/NetworkInfo;->getDetailedState()Landroid/net/NetworkInfo$DetailedState;

    #@5
    move-result-object v0

    #@6
    return-object v0
.end method

.method private getWiFiInfoForUid(I)Landroid/net/wifi/WifiInfo;
    .locals 6
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4707
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@3
    move-result v4

    #@4
    invoke-static {}, Landroid/os/Process;->myUid()I

    #@7
    move-result v5

    #@8
    if-ne v4, v5, :cond_0

    #@a
    .line 4708
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@c
    return-object v4

    #@d
    .line 4711
    :cond_0
    new-instance v3, Landroid/net/wifi/WifiInfo;

    #@f
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@11
    invoke-direct {v3, v4}, Landroid/net/wifi/WifiInfo;-><init>(Landroid/net/wifi/WifiInfo;)V

    #@14
    .line 4712
    .local v3, "result":Landroid/net/wifi/WifiInfo;
    const-string/jumbo v4, "02:00:00:00:00:00"

    #@17
    invoke-virtual {v3, v4}, Landroid/net/wifi/WifiInfo;->setMacAddress(Ljava/lang/String;)V

    #@1a
    .line 4714
    const-string/jumbo v4, "package"

    #@1d
    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    #@20
    move-result-object v0

    #@21
    .line 4715
    .local v0, "binder":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/content/pm/IPackageManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IPackageManager;

    #@24
    move-result-object v2

    #@25
    .line 4718
    .local v2, "packageManager":Landroid/content/pm/IPackageManager;
    :try_start_0
    const-string/jumbo v4, "android.permission.LOCAL_MAC_ADDRESS"

    #@28
    invoke-interface {v2, v4, p1}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    #@2b
    move-result v4

    #@2c
    if-nez v4, :cond_1

    #@2e
    .line 4720
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@30
    invoke-virtual {v4}, Landroid/net/wifi/WifiInfo;->getMacAddress()Ljava/lang/String;

    #@33
    move-result-object v4

    #@34
    invoke-virtual {v3, v4}, Landroid/net/wifi/WifiInfo;->setMacAddress(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@37
    .line 4726
    :cond_1
    :goto_0
    return-object v3

    #@38
    .line 4722
    :catch_0
    move-exception v1

    #@39
    .line 4723
    .local v1, "e":Landroid/os/RemoteException;
    const-string/jumbo v4, "WifiStateMachine"

    #@3c
    const-string/jumbo v5, "Error checking receiver permission"

    #@3f
    invoke-static {v4, v5, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@42
    goto :goto_0
.end method

.method private handleIPv4Failure(I)V
    .locals 2
    .param p1, "reason"    # I

    #@0
    .prologue
    .line 5081
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResultsLock:Ljava/lang/Object;

    #@2
    monitor-enter v1

    #@3
    .line 5082
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 5083
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@9
    invoke-virtual {v0}, Landroid/net/DhcpResults;->clear()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    :cond_0
    monitor-exit v1

    #@d
    .line 5086
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@f
    if-eqz v0, :cond_1

    #@11
    .line 5087
    const-string/jumbo v0, "handleIPv4Failure"

    #@14
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@17
    .line 5089
    :cond_1
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->updateLinkProperties(I)V

    #@1a
    .line 5080
    return-void

    #@1b
    .line 5081
    :catchall_0
    move-exception v0

    #@1c
    monitor-exit v1

    #@1d
    throw v0
.end method

.method private handleIPv4Success(Landroid/net/DhcpResults;I)V
    .locals 5
    .param p1, "dhcpResults"    # Landroid/net/DhcpResults;
    .param p2, "reason"    # I

    #@0
    .prologue
    .line 5028
    sget-boolean v3, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@2
    if-eqz v3, :cond_0

    #@4
    .line 5029
    new-instance v3, Ljava/lang/StringBuilder;

    #@6
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@9
    const-string/jumbo v4, "handleIPv4Success <"

    #@c
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v3

    #@10
    invoke-virtual {p1}, Landroid/net/DhcpResults;->toString()Ljava/lang/String;

    #@13
    move-result-object v4

    #@14
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17
    move-result-object v3

    #@18
    const-string/jumbo v4, ">"

    #@1b
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@22
    move-result-object v3

    #@23
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@26
    .line 5030
    new-instance v3, Ljava/lang/StringBuilder;

    #@28
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2b
    const-string/jumbo v4, "link address "

    #@2e
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@31
    move-result-object v3

    #@32
    iget-object v4, p1, Landroid/net/DhcpResults;->ipAddress:Landroid/net/LinkAddress;

    #@34
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@37
    move-result-object v3

    #@38
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3b
    move-result-object v3

    #@3c
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@3f
    .line 5034
    :cond_0
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResultsLock:Ljava/lang/Object;

    #@41
    monitor-enter v4

    #@42
    .line 5035
    :try_start_0
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@44
    .line 5036
    iget-object v3, p1, Landroid/net/DhcpResults;->ipAddress:Landroid/net/LinkAddress;

    #@46
    invoke-virtual {v3}, Landroid/net/LinkAddress;->getAddress()Ljava/net/InetAddress;

    #@49
    move-result-object v0

    #@4a
    check-cast v0, Ljava/net/Inet4Address;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@4c
    .local v0, "addr":Ljava/net/Inet4Address;
    monitor-exit v4

    #@4d
    .line 5039
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->isRoaming()Z

    #@50
    move-result v3

    #@51
    if-eqz v3, :cond_1

    #@53
    .line 5040
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@55
    invoke-virtual {v3}, Landroid/net/wifi/WifiInfo;->getIpAddress()I

    #@58
    move-result v2

    #@59
    .line 5041
    .local v2, "previousAddress":I
    invoke-static {v0}, Landroid/net/NetworkUtils;->inetAddressToInt(Ljava/net/Inet4Address;)I

    #@5c
    move-result v1

    #@5d
    .line 5042
    .local v1, "newAddress":I
    if-eq v2, v1, :cond_1

    #@5f
    .line 5043
    new-instance v3, Ljava/lang/StringBuilder;

    #@61
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@64
    const-string/jumbo v4, "handleIPv4Success, roaming and address changed"

    #@67
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6a
    move-result-object v3

    #@6b
    .line 5044
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@6d
    .line 5043
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@70
    move-result-object v3

    #@71
    .line 5044
    const-string/jumbo v4, " got: "

    #@74
    .line 5043
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@77
    move-result-object v3

    #@78
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@7b
    move-result-object v3

    #@7c
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@7f
    move-result-object v3

    #@80
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@83
    .line 5047
    .end local v1    # "newAddress":I
    .end local v2    # "previousAddress":I
    :cond_1
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@85
    invoke-virtual {v3, v0}, Landroid/net/wifi/WifiInfo;->setInetAddress(Ljava/net/InetAddress;)V

    #@88
    .line 5048
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@8a
    invoke-virtual {p1}, Landroid/net/DhcpResults;->hasMeteredHint()Z

    #@8d
    move-result v4

    #@8e
    invoke-virtual {v3, v4}, Landroid/net/wifi/WifiInfo;->setMeteredHint(Z)V

    #@91
    .line 5049
    invoke-direct {p0, p2}, Lcom/android/server/wifi/WifiStateMachine;->updateLinkProperties(I)V

    #@94
    .line 5026
    return-void

    #@95
    .line 5034
    .end local v0    # "addr":Ljava/net/Inet4Address;
    :catchall_0
    move-exception v3

    #@96
    monitor-exit v4

    #@97
    throw v3
.end method

.method private handleIpConfigurationLost()V
    .locals 5

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 5093
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@3
    const/4 v1, 0x0

    #@4
    invoke-virtual {v0, v1}, Landroid/net/wifi/WifiInfo;->setInetAddress(Ljava/net/InetAddress;)V

    #@7
    .line 5094
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@9
    invoke-virtual {v0, v4}, Landroid/net/wifi/WifiInfo;->setMeteredHint(Z)V

    #@c
    .line 5096
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@e
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@10
    .line 5097
    const-string/jumbo v2, "DHCP FAILURE"

    #@13
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@15
    invoke-virtual {v3}, Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;

    #@18
    move-result-object v3

    #@19
    .line 5096
    invoke-virtual {v0, v1, v4, v2, v3}, Lcom/android/server/wifi/WifiConfigStore;->handleSSIDStateChange(IZLjava/lang/String;Ljava/lang/String;)V

    #@1c
    .line 5102
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@1e
    invoke-virtual {v0}, Lcom/android/server/wifi/WifiNative;->disconnect()Z

    #@21
    .line 5092
    return-void
.end method

.method private handleIpReachabilityLost()V
    .locals 2

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 5109
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

    #@3
    if-eqz v0, :cond_0

    #@5
    .line 5110
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

    #@7
    invoke-virtual {v0}, Landroid/net/IpReachabilityMonitor;->clearLinkProperties()V

    #@a
    .line 5113
    :cond_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@c
    invoke-virtual {v0, v1}, Landroid/net/wifi/WifiInfo;->setInetAddress(Ljava/net/InetAddress;)V

    #@f
    .line 5114
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@11
    const/4 v1, 0x0

    #@12
    invoke-virtual {v0, v1}, Landroid/net/wifi/WifiInfo;->setMeteredHint(Z)V

    #@15
    .line 5119
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@17
    invoke-virtual {v0}, Lcom/android/server/wifi/WifiNative;->disconnect()Z

    #@1a
    .line 5106
    return-void
.end method

.method private handleNetworkDisconnect()V
    .locals 6

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v4, 0x0

    #@2
    .line 4857
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@4
    if-eqz v1, :cond_0

    #@6
    new-instance v1, Ljava/lang/StringBuilder;

    #@8
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@b
    const-string/jumbo v2, "handleNetworkDisconnect: Stopping DHCP and clearing IP stack:"

    #@e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11
    move-result-object v1

    #@12
    .line 4858
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@15
    move-result-object v2

    #@16
    invoke-virtual {v2}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@19
    move-result-object v2

    #@1a
    const/4 v3, 0x2

    #@1b
    aget-object v2, v2, v3

    #@1d
    invoke-virtual {v2}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@20
    move-result-object v2

    #@21
    .line 4857
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@24
    move-result-object v1

    #@25
    .line 4859
    const-string/jumbo v2, " - "

    #@28
    .line 4857
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2b
    move-result-object v1

    #@2c
    .line 4859
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@2f
    move-result-object v2

    #@30
    invoke-virtual {v2}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@33
    move-result-object v2

    #@34
    const/4 v3, 0x3

    #@35
    aget-object v2, v2, v3

    #@37
    invoke-virtual {v2}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@3a
    move-result-object v2

    #@3b
    .line 4857
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3e
    move-result-object v1

    #@3f
    .line 4860
    const-string/jumbo v2, " - "

    #@42
    .line 4857
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@45
    move-result-object v1

    #@46
    .line 4860
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@49
    move-result-object v2

    #@4a
    invoke-virtual {v2}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@4d
    move-result-object v2

    #@4e
    const/4 v3, 0x4

    #@4f
    aget-object v2, v2, v3

    #@51
    invoke-virtual {v2}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@54
    move-result-object v2

    #@55
    .line 4857
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@58
    move-result-object v1

    #@59
    .line 4861
    const-string/jumbo v2, " - "

    #@5c
    .line 4857
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5f
    move-result-object v1

    #@60
    .line 4861
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@63
    move-result-object v2

    #@64
    invoke-virtual {v2}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@67
    move-result-object v2

    #@68
    const/4 v3, 0x5

    #@69
    aget-object v2, v2, v3

    #@6b
    invoke-virtual {v2}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@6e
    move-result-object v2

    #@6f
    .line 4857
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@72
    move-result-object v1

    #@73
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@76
    move-result-object v1

    #@77
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@7a
    .line 4864
    :cond_0
    const-string/jumbo v1, "handleNetworkDisconnect"

    #@7d
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->clearCurrentConfigBSSID(Ljava/lang/String;)V

    #@80
    .line 4866
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->stopDhcp()V

    #@83
    .line 4869
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@85
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@87
    invoke-interface {v1, v2}, Landroid/os/INetworkManagementService;->clearInterfaceAddresses(Ljava/lang/String;)V

    #@8a
    .line 4870
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@8c
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@8e
    invoke-interface {v1, v2}, Landroid/os/INetworkManagementService;->disableIpv6(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    #@91
    .line 4876
    :goto_0
    iput v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@93
    .line 4877
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@95
    invoke-virtual {v1}, Landroid/net/wifi/WifiInfo;->reset()V

    #@98
    .line 4878
    iput-boolean v4, p0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@9a
    .line 4880
    iput v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@9c
    .line 4888
    const-wide/16 v2, 0x4e20

    #@9e
    iput-wide v2, p0, Lcom/android/server/wifi/WifiStateMachine;->fullBandConnectedTimeIntervalMilli:J

    #@a0
    .line 4890
    sget-object v1, Landroid/net/NetworkInfo$DetailedState;->DISCONNECTED:Landroid/net/NetworkInfo$DetailedState;

    #@a2
    invoke-direct {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->setNetworkDetailedState(Landroid/net/NetworkInfo$DetailedState;)Z

    #@a5
    .line 4891
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@a7
    if-eqz v1, :cond_1

    #@a9
    .line 4892
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@ab
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@ad
    invoke-virtual {v1, v2}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;->sendNetworkInfo(Landroid/net/NetworkInfo;)V

    #@b0
    .line 4893
    iput-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@b2
    .line 4895
    :cond_1
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@b4
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@b6
    sget-object v3, Landroid/net/NetworkInfo$DetailedState;->DISCONNECTED:Landroid/net/NetworkInfo$DetailedState;

    #@b8
    invoke-virtual {v1, v2, v3}, Lcom/android/server/wifi/WifiConfigStore;->updateStatus(ILandroid/net/NetworkInfo$DetailedState;)V

    #@bb
    .line 4898
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->clearLinkProperties()V

    #@be
    .line 4901
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@c0
    invoke-direct {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendNetworkStateChangeBroadcast(Ljava/lang/String;)V

    #@c3
    .line 4904
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@c5
    const-string/jumbo v2, "any"

    #@c8
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wifi/WifiStateMachine;->autoRoamSetBSSID(ILjava/lang/String;)V

    #@cb
    .line 4906
    iput-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@cd
    .line 4907
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->registerDisconnected()V

    #@d0
    .line 4908
    const/4 v1, -0x1

    #@d1
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@d3
    .line 4856
    return-void

    #@d4
    .line 4871
    :catch_0
    move-exception v0

    #@d5
    .line 4872
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Ljava/lang/StringBuilder;

    #@d7
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@da
    const-string/jumbo v2, "Failed to clear addresses or disable ipv6"

    #@dd
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e0
    move-result-object v1

    #@e1
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@e4
    move-result-object v1

    #@e5
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@e8
    move-result-object v1

    #@e9
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@ec
    goto :goto_0
.end method

.method private handleScanRequest(ILandroid/os/Message;)V
    .locals 13
    .param p1, "type"    # I
    .param p2, "message"    # Landroid/os/Message;

    #@0
    .prologue
    const v12, 0x20047

    #@3
    const/4 v11, 0x0

    #@4
    .line 1863
    const/4 v7, 0x0

    #@5
    .line 1864
    .local v7, "settings":Landroid/net/wifi/ScanSettings;
    const/4 v8, 0x0

    #@6
    .line 1867
    .local v8, "workSource":Landroid/os/WorkSource;
    iget-object v0, p2, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@8
    check-cast v0, Landroid/os/Bundle;

    #@a
    .line 1869
    .local v0, "bundle":Landroid/os/Bundle;
    if-eqz v0, :cond_0

    #@c
    .line 1870
    const-string/jumbo v9, "customized_scan_settings"

    #@f
    invoke-virtual {v0, v9}, Landroid/os/Bundle;->getParcelable(Ljava/lang/String;)Landroid/os/Parcelable;

    #@12
    move-result-object v7

    #@13
    .end local v7    # "settings":Landroid/net/wifi/ScanSettings;
    check-cast v7, Landroid/net/wifi/ScanSettings;

    #@15
    .line 1871
    .local v7, "settings":Landroid/net/wifi/ScanSettings;
    const-string/jumbo v9, "customized_scan_worksource"

    #@18
    invoke-virtual {v0, v9}, Landroid/os/Bundle;->getParcelable(Ljava/lang/String;)Landroid/os/Parcelable;

    #@1b
    move-result-object v8

    #@1c
    .end local v8    # "workSource":Landroid/os/WorkSource;
    check-cast v8, Landroid/os/WorkSource;

    #@1e
    .line 1875
    .end local v7    # "settings":Landroid/net/wifi/ScanSettings;
    :cond_0
    const/4 v4, 0x0

    #@1f
    .line 1876
    .local v4, "freqs":Ljava/lang/String;
    if-eqz v7, :cond_3

    #@21
    iget-object v9, v7, Landroid/net/wifi/ScanSettings;->channelSet:Ljava/util/Collection;

    #@23
    if-eqz v9, :cond_3

    #@25
    .line 1877
    new-instance v6, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    .line 1878
    .local v6, "sb":Ljava/lang/StringBuilder;
    const/4 v3, 0x1

    #@2b
    .line 1879
    .local v3, "first":Z
    iget-object v9, v7, Landroid/net/wifi/ScanSettings;->channelSet:Ljava/util/Collection;

    #@2d
    invoke-interface {v9}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@30
    move-result-object v2

    #@31
    .local v2, "channel$iterator":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    #@34
    move-result v9

    #@35
    if-eqz v9, :cond_2

    #@37
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@3a
    move-result-object v1

    #@3b
    check-cast v1, Landroid/net/wifi/WifiChannel;

    #@3d
    .line 1880
    .local v1, "channel":Landroid/net/wifi/WifiChannel;
    if-nez v3, :cond_1

    #@3f
    const/16 v9, 0x2c

    #@41
    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    #@44
    .line 1882
    :goto_1
    iget v9, v1, Landroid/net/wifi/WifiChannel;->freqMHz:I

    #@46
    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@49
    goto :goto_0

    #@4a
    .line 1881
    :cond_1
    const/4 v3, 0x0

    #@4b
    goto :goto_1

    #@4c
    .line 1884
    .end local v1    # "channel":Landroid/net/wifi/WifiChannel;
    :cond_2
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4f
    move-result-object v4

    #@50
    .line 1888
    .end local v2    # "channel$iterator":Ljava/util/Iterator;
    .end local v3    # "first":Z
    .end local v4    # "freqs":Ljava/lang/String;
    .end local v6    # "sb":Ljava/lang/StringBuilder;
    :cond_3
    invoke-direct {p0, p1, v4}, Lcom/android/server/wifi/WifiStateMachine;->startScanNative(ILjava/lang/String;)Z

    #@53
    move-result v9

    #@54
    if-eqz v9, :cond_6

    #@56
    .line 1890
    iget v9, p2, Landroid/os/Message;->arg1:I

    #@58
    invoke-direct {p0, v9, v8}, Lcom/android/server/wifi/WifiStateMachine;->noteScanStart(ILandroid/os/WorkSource;)V

    #@5b
    .line 1892
    if-nez v4, :cond_4

    #@5d
    .line 1893
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@5f
    invoke-interface {v9}, Ljava/util/Queue;->clear()V

    #@62
    .line 1894
    :cond_4
    sget v9, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_OK:I

    #@64
    iput v9, p0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@66
    .line 1895
    if-eqz v8, :cond_5

    #@68
    .line 1898
    const/4 v9, 0x1

    #@69
    iput-boolean v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mSendScanResultsBroadcast:Z

    #@6b
    .line 1900
    :cond_5
    return-void

    #@6c
    .line 1905
    :cond_6
    iget-boolean v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsScanOngoing:Z

    #@6e
    if-nez v9, :cond_8

    #@70
    .line 1909
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@72
    invoke-interface {v9}, Ljava/util/Queue;->size()I

    #@75
    move-result v9

    #@76
    if-lez v9, :cond_7

    #@78
    .line 1910
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@7a
    invoke-interface {v9}, Ljava/util/Queue;->remove()Ljava/lang/Object;

    #@7d
    move-result-object v9

    #@7e
    check-cast v9, Landroid/os/Message;

    #@80
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(Landroid/os/Message;)V

    #@83
    .line 1912
    :cond_7
    sget v9, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_DISCARD:I

    #@85
    iput v9, p0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@87
    .line 1862
    :goto_2
    return-void

    #@88
    .line 1913
    :cond_8
    iget-boolean v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsFullScanOngoing:Z

    #@8a
    if-nez v9, :cond_b

    #@8c
    .line 1916
    if-nez v4, :cond_9

    #@8e
    .line 1917
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@90
    invoke-interface {v9}, Ljava/util/Queue;->clear()V

    #@93
    .line 1918
    :cond_9
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@95
    invoke-interface {v9}, Ljava/util/Queue;->size()I

    #@98
    move-result v9

    #@99
    const/16 v10, 0xa

    #@9b
    if-ge v9, v10, :cond_a

    #@9d
    .line 1920
    iget v9, p2, Landroid/os/Message;->arg1:I

    #@9f
    iget v10, p2, Landroid/os/Message;->arg2:I

    #@a1
    .line 1919
    invoke-virtual {p0, v12, v9, v10, v0}, Lcom/android/server/wifi/WifiStateMachine;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    #@a4
    move-result-object v5

    #@a5
    .line 1921
    .local v5, "msg":Landroid/os/Message;
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@a7
    invoke-interface {v9, v5}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    #@aa
    .line 1931
    :goto_3
    sget v9, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_LOOPED:I

    #@ac
    iput v9, p0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@ae
    goto :goto_2

    #@af
    .line 1924
    .end local v5    # "msg":Landroid/os/Message;
    :cond_a
    new-instance v0, Landroid/os/Bundle;

    #@b1
    .end local v0    # "bundle":Landroid/os/Bundle;
    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    #@b4
    .line 1925
    .restart local v0    # "bundle":Landroid/os/Bundle;
    const-string/jumbo v9, "customized_scan_settings"

    #@b7
    invoke-virtual {v0, v9, v11}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    #@ba
    .line 1926
    const-string/jumbo v9, "customized_scan_worksource"

    #@bd
    invoke-virtual {v0, v9, v8}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    #@c0
    .line 1927
    iget v9, p2, Landroid/os/Message;->arg1:I

    #@c2
    iget v10, p2, Landroid/os/Message;->arg2:I

    #@c4
    invoke-virtual {p0, v12, v9, v10, v0}, Lcom/android/server/wifi/WifiStateMachine;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    #@c7
    move-result-object v5

    #@c8
    .line 1928
    .restart local v5    # "msg":Landroid/os/Message;
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@ca
    invoke-interface {v9}, Ljava/util/Queue;->clear()V

    #@cd
    .line 1929
    iget-object v9, p0, Lcom/android/server/wifi/WifiStateMachine;->mBufferedScanMsg:Ljava/util/Queue;

    #@cf
    invoke-interface {v9, v5}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    #@d2
    goto :goto_3

    #@d3
    .line 1934
    .end local v5    # "msg":Landroid/os/Message;
    :cond_b
    sget v9, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_FAIL:I

    #@d5
    iput v9, p0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@d7
    goto :goto_2
.end method

.method private handleScreenStateChanged(Z)V
    .locals 9
    .param p1, "screenOn"    # Z

    #@0
    .prologue
    const v8, 0x20056

    #@3
    const/16 v7, 0x1f4

    #@5
    const/4 v6, 0x0

    #@6
    const/4 v5, 0x1

    #@7
    const/4 v4, 0x0

    #@8
    .line 3436
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@a
    .line 3437
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@c
    if-eqz v0, :cond_0

    #@e
    .line 3438
    new-instance v0, Ljava/lang/StringBuilder;

    #@10
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@13
    const-string/jumbo v1, " handleScreenStateChanged Enter: screenOn="

    #@16
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v0

    #@1a
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v0

    #@1e
    .line 3439
    const-string/jumbo v1, " mUserWantsSuspendOpt="

    #@21
    .line 3438
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@24
    move-result-object v0

    #@25
    .line 3439
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@27
    .line 3438
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2a
    move-result-object v0

    #@2b
    .line 3440
    const-string/jumbo v1, " state "

    #@2e
    .line 3438
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@31
    move-result-object v0

    #@32
    .line 3440
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@35
    move-result-object v1

    #@36
    invoke-interface {v1}, Lcom/android/internal/util/IState;->getName()Ljava/lang/String;

    #@39
    move-result-object v1

    #@3a
    .line 3438
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d
    move-result-object v0

    #@3e
    .line 3441
    const-string/jumbo v1, " suppState:"

    #@41
    .line 3438
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@44
    move-result-object v0

    #@45
    .line 3441
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStateTracker:Lcom/android/server/wifi/SupplicantStateTracker;

    #@47
    invoke-virtual {v1}, Lcom/android/server/wifi/SupplicantStateTracker;->getSupplicantStateName()Ljava/lang/String;

    #@4a
    move-result-object v1

    #@4b
    .line 3438
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v0

    #@4f
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52
    move-result-object v0

    #@53
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@56
    .line 3443
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->enableRssiPolling(Z)V

    #@59
    .line 3444
    if-eqz p1, :cond_1

    #@5b
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->enableAllNetworks()V

    #@5e
    .line 3445
    :cond_1
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@60
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    #@63
    move-result v0

    #@64
    if-eqz v0, :cond_2

    #@66
    .line 3446
    if-eqz p1, :cond_6

    #@68
    .line 3447
    invoke-virtual {p0, v8, v4, v4}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@6b
    .line 3454
    :cond_2
    :goto_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenBroadcastReceived:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@6d
    invoke-virtual {v0, v5}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    #@70
    .line 3456
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->getWifiLinkLayerStats(Z)Landroid/net/wifi/WifiLinkLayerStats;

    #@73
    .line 3457
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@75
    iput v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeScreenStateChange:I

    #@77
    .line 3458
    iget-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->lastLinkLayerStatsUpdate:J

    #@79
    iput-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->lastScreenStateChangeTimeStamp:J

    #@7b
    .line 3460
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->cancelDelayedScan()V

    #@7e
    .line 3462
    if-eqz p1, :cond_a

    #@80
    .line 3463
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->enableBackgroundScan(Z)V

    #@83
    .line 3464
    invoke-direct {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->setScanAlarm(Z)V

    #@86
    .line 3465
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->clearBlacklist()V

    #@89
    .line 3468
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@8b
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->wifiAssociatedShortScanIntervalMilli:Ljava/util/concurrent/atomic/AtomicInteger;

    #@8d
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@90
    move-result v0

    #@91
    int-to-long v0, v0

    #@92
    .line 3467
    iput-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->fullBandConnectedTimeIntervalMilli:J

    #@94
    .line 3471
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@97
    move-result-object v0

    #@98
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@9a
    if-ne v0, v1, :cond_8

    #@9c
    .line 3472
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->allowFullBandScanAndAssociated()Z

    #@9f
    move-result v0

    #@a0
    .line 3471
    if-eqz v0, :cond_8

    #@a2
    .line 3473
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@a5
    move-result v0

    #@a6
    if-eqz v0, :cond_7

    #@a8
    .line 3474
    const-string/jumbo v0, "screenOnConnected"

    #@ab
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->startGScanConnectedModeOffload(Ljava/lang/String;)Z

    #@ae
    .line 3512
    :cond_3
    :goto_1
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@b0
    if-eqz v0, :cond_4

    #@b2
    new-instance v0, Ljava/lang/StringBuilder;

    #@b4
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@b7
    const-string/jumbo v1, "backgroundScan enabled="

    #@ba
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bd
    move-result-object v0

    #@be
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLegacyPnoEnabled:Z

    #@c0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@c3
    move-result-object v0

    #@c4
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c7
    move-result-object v0

    #@c8
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@cb
    .line 3514
    :cond_4
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@cd
    if-eqz v0, :cond_5

    #@cf
    new-instance v0, Ljava/lang/StringBuilder;

    #@d1
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@d4
    const-string/jumbo v1, "handleScreenStateChanged Exit: "

    #@d7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@da
    move-result-object v0

    #@db
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@de
    move-result-object v0

    #@df
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@e2
    move-result-object v0

    #@e3
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@e6
    .line 3435
    :cond_5
    return-void

    #@e7
    .line 3450
    :cond_6
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendWakeLock:Landroid/os/PowerManager$WakeLock;

    #@e9
    const-wide/16 v2, 0x7d0

    #@eb
    invoke-virtual {v0, v2, v3}, Landroid/os/PowerManager$WakeLock;->acquire(J)V

    #@ee
    .line 3451
    invoke-virtual {p0, v8, v5, v4}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@f1
    goto/16 :goto_0

    #@f3
    .line 3477
    :cond_7
    invoke-direct {p0, v7, v6, v6}, Lcom/android/server/wifi/WifiStateMachine;->startDelayedScan(ILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V

    #@f6
    goto :goto_1

    #@f7
    .line 3479
    :cond_8
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@fa
    move-result-object v0

    #@fb
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedState:Lcom/android/internal/util/State;

    #@fd
    if-ne v0, v1, :cond_3

    #@ff
    .line 3480
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@102
    move-result v0

    #@103
    if-eqz v0, :cond_9

    #@105
    .line 3481
    const-string/jumbo v0, "screenOnDisconnected"

    #@108
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->startGScanDisconnectedModeOffload(Ljava/lang/String;)Z

    #@10b
    goto :goto_1

    #@10c
    .line 3484
    :cond_9
    invoke-direct {p0, v7, v6, v6}, Lcom/android/server/wifi/WifiStateMachine;->startDelayedScan(ILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V

    #@10f
    goto :goto_1

    #@110
    .line 3488
    :cond_a
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@113
    move-result-object v0

    #@114
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedState:Lcom/android/internal/util/State;

    #@116
    if-ne v0, v1, :cond_d

    #@118
    .line 3493
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@11b
    move-result v0

    #@11c
    if-eqz v0, :cond_b

    #@11e
    .line 3494
    const-string/jumbo v0, "screenOffDisconnected"

    #@121
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->startGScanDisconnectedModeOffload(Ljava/lang/String;)Z

    #@124
    goto :goto_1

    #@125
    .line 3496
    :cond_b
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mBackgroundScanSupported:Z

    #@127
    if-nez v0, :cond_c

    #@129
    .line 3497
    invoke-direct {p0, v5}, Lcom/android/server/wifi/WifiStateMachine;->setScanAlarm(Z)V

    #@12c
    goto :goto_1

    #@12d
    .line 3499
    :cond_c
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsScanOngoing:Z

    #@12f
    if-nez v0, :cond_3

    #@131
    .line 3500
    invoke-virtual {p0, v5}, Lcom/android/server/wifi/WifiStateMachine;->enableBackgroundScan(Z)V

    #@134
    goto/16 :goto_1

    #@136
    .line 3505
    :cond_d
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->enableBackgroundScan(Z)V

    #@139
    .line 3506
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@13c
    move-result v0

    #@13d
    if-eqz v0, :cond_3

    #@13f
    .line 3508
    new-instance v0, Ljava/lang/StringBuilder;

    #@141
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@144
    const-string/jumbo v1, "ScreenOffStop(enableBackground="

    #@147
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14a
    move-result-object v0

    #@14b
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLegacyPnoEnabled:Z

    #@14d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@150
    move-result-object v0

    #@151
    const-string/jumbo v1, ") "

    #@154
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@157
    move-result-object v0

    #@158
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@15b
    move-result-object v0

    #@15c
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->stopGScan(Ljava/lang/String;)Z

    #@15f
    goto/16 :goto_1
.end method

.method private handleSuccessfulIpConfiguration()V
    .locals 4

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 5053
    const/4 v2, -0x1

    #@2
    iput v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastSignalLevel:I

    #@4
    .line 5054
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@7
    move-result-object v0

    #@8
    .line 5055
    .local v0, "c":Landroid/net/wifi/WifiConfiguration;
    if-eqz v0, :cond_0

    #@a
    .line 5057
    iput v3, v0, Landroid/net/wifi/WifiConfiguration;->numConnectionFailures:I

    #@c
    .line 5060
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->updateCapabilities(Landroid/net/wifi/WifiConfiguration;)V

    #@f
    .line 5062
    :cond_0
    if-eqz v0, :cond_1

    #@11
    .line 5063
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentScanResult()Landroid/net/wifi/ScanResult;

    #@14
    move-result-object v1

    #@15
    .line 5064
    .local v1, "result":Landroid/net/wifi/ScanResult;
    if-nez v1, :cond_2

    #@17
    .line 5065
    new-instance v2, Ljava/lang/StringBuilder;

    #@19
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@1c
    const-string/jumbo v3, "WifiStateMachine: handleSuccessfulIpConfiguration and no scan results"

    #@1f
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@22
    move-result-object v2

    #@23
    .line 5066
    invoke-virtual {v0}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@26
    move-result-object v3

    #@27
    .line 5065
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2a
    move-result-object v2

    #@2b
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2e
    move-result-object v2

    #@2f
    invoke-virtual {p0, v2}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@32
    .line 5052
    .end local v1    # "result":Landroid/net/wifi/ScanResult;
    :cond_1
    :goto_0
    return-void

    #@33
    .line 5069
    .restart local v1    # "result":Landroid/net/wifi/ScanResult;
    :cond_2
    iput v3, v1, Landroid/net/wifi/ScanResult;->numIpConfigFailures:I

    #@35
    .line 5075
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@37
    invoke-virtual {v2}, Lcom/android/server/wifi/WifiConfigStore;->clearBssidBlacklist()V

    #@3a
    goto :goto_0
.end method

.method private handleSupplicantConnectionLoss(Z)V
    .locals 2
    .param p1, "killSupplicant"    # Z

    #@0
    .prologue
    .line 4915
    if-eqz p1, :cond_0

    #@2
    .line 4916
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiMonitor:Lcom/android/server/wifi/WifiMonitor;

    #@4
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mP2pSupported:Z

    #@6
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiMonitor;->killSupplicant(Z)V

    #@9
    .line 4918
    :cond_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@b
    invoke-virtual {v0}, Lcom/android/server/wifi/WifiNative;->closeSupplicantConnection()V

    #@e
    .line 4919
    const/4 v0, 0x0

    #@f
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendSupplicantConnectionChangedBroadcast(Z)V

    #@12
    .line 4920
    const/4 v0, 0x1

    #@13
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->setWifiState(I)V

    #@16
    .line 4911
    return-void
.end method

.method private handleSupplicantStateChange(Landroid/os/Message;)Landroid/net/wifi/SupplicantState;
    .locals 10
    .param p1, "message"    # Landroid/os/Message;

    #@0
    .prologue
    const/4 v9, 0x2

    #@1
    const/4 v8, 0x1

    #@2
    const/4 v7, 0x0

    #@3
    const/16 v6, 0x22

    #@5
    .line 4801
    iget-object v3, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@7
    check-cast v3, Lcom/android/server/wifi/StateChangeResult;

    #@9
    .line 4802
    .local v3, "stateChangeResult":Lcom/android/server/wifi/StateChangeResult;
    iget-object v2, v3, Lcom/android/server/wifi/StateChangeResult;->state:Landroid/net/wifi/SupplicantState;

    #@b
    .line 4807
    .local v2, "state":Landroid/net/wifi/SupplicantState;
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@d
    invoke-virtual {v4, v2}, Landroid/net/wifi/WifiInfo;->setSupplicantState(Landroid/net/wifi/SupplicantState;)V

    #@10
    .line 4809
    invoke-static {v2}, Landroid/net/wifi/SupplicantState;->isConnecting(Landroid/net/wifi/SupplicantState;)Z

    #@13
    move-result v4

    #@14
    if-eqz v4, :cond_1

    #@16
    .line 4810
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@18
    iget v5, v3, Lcom/android/server/wifi/StateChangeResult;->networkId:I

    #@1a
    invoke-virtual {v4, v5}, Landroid/net/wifi/WifiInfo;->setNetworkId(I)V

    #@1d
    .line 4815
    :goto_0
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@1f
    iget-object v5, v3, Lcom/android/server/wifi/StateChangeResult;->BSSID:Ljava/lang/String;

    #@21
    invoke-virtual {v4, v5}, Landroid/net/wifi/WifiInfo;->setBSSID(Ljava/lang/String;)V

    #@24
    .line 4817
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@26
    if-eqz v4, :cond_0

    #@28
    .line 4818
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@2a
    array-length v4, v4

    #@2b
    if-lez v4, :cond_0

    #@2d
    .line 4819
    iget-object v4, v3, Lcom/android/server/wifi/StateChangeResult;->wifiSsid:Landroid/net/wifi/WifiSsid;

    #@2f
    if-eqz v4, :cond_0

    #@31
    .line 4820
    iget-object v4, v3, Lcom/android/server/wifi/StateChangeResult;->wifiSsid:Landroid/net/wifi/WifiSsid;

    #@33
    invoke-virtual {v4}, Landroid/net/wifi/WifiSsid;->toString()Ljava/lang/String;

    #@36
    move-result-object v0

    #@37
    .line 4821
    .local v0, "SSID":Ljava/lang/String;
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@39
    invoke-virtual {v4}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@3c
    move-result-object v1

    #@3d
    .line 4822
    .local v1, "currentSSID":Ljava/lang/String;
    if-eqz v0, :cond_0

    #@3f
    .line 4823
    if-eqz v1, :cond_0

    #@41
    .line 4824
    const-string/jumbo v4, "<unknown ssid>"

    #@44
    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@47
    move-result v4

    #@48
    if-eqz v4, :cond_2

    #@4a
    .line 4844
    .end local v0    # "SSID":Ljava/lang/String;
    .end local v1    # "currentSSID":Ljava/lang/String;
    :cond_0
    :goto_1
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4c
    iget-object v5, v3, Lcom/android/server/wifi/StateChangeResult;->wifiSsid:Landroid/net/wifi/WifiSsid;

    #@4e
    invoke-virtual {v4, v5}, Landroid/net/wifi/WifiInfo;->setSSID(Landroid/net/wifi/WifiSsid;)V

    #@51
    .line 4845
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@53
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@55
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@57
    invoke-virtual {v6}, Landroid/net/wifi/WifiInfo;->getNetworkId()I

    #@5a
    move-result v6

    #@5b
    invoke-virtual {v5, v6}, Lcom/android/server/wifi/WifiConfigStore;->isEphemeral(I)Z

    #@5e
    move-result v5

    #@5f
    invoke-virtual {v4, v5}, Landroid/net/wifi/WifiInfo;->setEphemeral(Z)V

    #@62
    .line 4847
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStateTracker:Lcom/android/server/wifi/SupplicantStateTracker;

    #@64
    invoke-static {p1}, Landroid/os/Message;->obtain(Landroid/os/Message;)Landroid/os/Message;

    #@67
    move-result-object v5

    #@68
    invoke-virtual {v4, v5}, Lcom/android/server/wifi/SupplicantStateTracker;->sendMessage(Landroid/os/Message;)V

    #@6b
    .line 4849
    return-object v2

    #@6c
    .line 4812
    :cond_1
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@6e
    const/4 v5, -0x1

    #@6f
    invoke-virtual {v4, v5}, Landroid/net/wifi/WifiInfo;->setNetworkId(I)V

    #@72
    goto :goto_0

    #@73
    .line 4826
    .restart local v0    # "SSID":Ljava/lang/String;
    .restart local v1    # "currentSSID":Ljava/lang/String;
    :cond_2
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    #@76
    move-result v4

    #@77
    if-lt v4, v9, :cond_3

    #@79
    invoke-virtual {v0, v7}, Ljava/lang/String;->charAt(I)C

    #@7c
    move-result v4

    #@7d
    if-ne v4, v6, :cond_3

    #@7f
    .line 4827
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    #@82
    move-result v4

    #@83
    add-int/lit8 v4, v4, -0x1

    #@85
    invoke-virtual {v0, v4}, Ljava/lang/String;->charAt(I)C

    #@88
    move-result v4

    #@89
    if-ne v4, v6, :cond_3

    #@8b
    .line 4829
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    #@8e
    move-result v4

    #@8f
    add-int/lit8 v4, v4, -0x1

    #@91
    invoke-virtual {v0, v8, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@94
    move-result-object v0

    #@95
    .line 4831
    :cond_3
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@98
    move-result v4

    #@99
    if-lt v4, v9, :cond_4

    #@9b
    invoke-virtual {v1, v7}, Ljava/lang/String;->charAt(I)C

    #@9e
    move-result v4

    #@9f
    if-ne v4, v6, :cond_4

    #@a1
    .line 4832
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@a4
    move-result v4

    #@a5
    add-int/lit8 v4, v4, -0x1

    #@a7
    invoke-virtual {v1, v4}, Ljava/lang/String;->charAt(I)C

    #@aa
    move-result v4

    #@ab
    if-ne v4, v6, :cond_4

    #@ad
    .line 4833
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@b0
    move-result v4

    #@b1
    add-int/lit8 v4, v4, -0x1

    #@b3
    invoke-virtual {v1, v8, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@b6
    move-result-object v1

    #@b7
    .line 4835
    :cond_4
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@ba
    move-result v4

    #@bb
    if-nez v4, :cond_0

    #@bd
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@c0
    move-result-object v4

    #@c1
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@c3
    if-ne v4, v5, :cond_0

    #@c5
    .line 4836
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@c8
    move-result-wide v4

    #@c9
    iput-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->lastConnectAttemptTimestamp:J

    #@cb
    .line 4838
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@cd
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@cf
    invoke-virtual {v5}, Landroid/net/wifi/WifiInfo;->getNetworkId()I

    #@d2
    move-result v5

    #@d3
    invoke-virtual {v4, v5}, Lcom/android/server/wifi/WifiConfigStore;->getWifiConfiguration(I)Landroid/net/wifi/WifiConfiguration;

    #@d6
    move-result-object v4

    #@d7
    .line 4837
    iput-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

    #@d9
    .line 4839
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mRoamingState:Lcom/android/internal/util/State;

    #@db
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->transitionTo(Lcom/android/internal/util/IState;)V

    #@de
    goto/16 :goto_1
.end method

.method private isProvisioned(Landroid/net/LinkProperties;)Z
    .locals 2
    .param p1, "lp"    # Landroid/net/LinkProperties;

    #@0
    .prologue
    .line 4414
    invoke-virtual {p1}, Landroid/net/LinkProperties;->isProvisioned()Z

    #@3
    move-result v0

    #@4
    if-nez v0, :cond_0

    #@6
    .line 4415
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@8
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@a
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiConfigStore;->isUsingStaticIp(I)Z

    #@d
    move-result v0

    #@e
    if-eqz v0, :cond_1

    #@10
    invoke-virtual {p1}, Landroid/net/LinkProperties;->hasIPv4Address()Z

    #@13
    move-result v0

    #@14
    .line 4414
    :goto_0
    return v0

    #@15
    :cond_0
    const/4 v0, 0x1

    #@16
    goto :goto_0

    #@17
    .line 4415
    :cond_1
    const/4 v0, 0x0

    #@18
    goto :goto_0
.end method

.method private isWifiTethered(Ljava/util/ArrayList;)Z
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/String;",
            ">;)Z"
        }
    .end annotation

    #@0
    .prologue
    .local p1, "active":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    const/4 v5, 0x0

    #@1
    .line 3589
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->checkAndSetConnectivityInstance()V

    #@4
    .line 3591
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mCm:Landroid/net/ConnectivityManager;

    #@6
    invoke-virtual {v4}, Landroid/net/ConnectivityManager;->getTetherableWifiRegexs()[Ljava/lang/String;

    #@9
    move-result-object v3

    #@a
    .line 3592
    .local v3, "wifiRegexs":[Ljava/lang/String;
    invoke-interface {p1}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@d
    move-result-object v1

    #@e
    .local v1, "intf$iterator":Ljava/util/Iterator;
    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@11
    move-result v4

    #@12
    if-eqz v4, :cond_2

    #@14
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@17
    move-result-object v0

    #@18
    check-cast v0, Ljava/lang/String;

    #@1a
    .line 3593
    .local v0, "intf":Ljava/lang/String;
    array-length v6, v3

    #@1b
    move v4, v5

    #@1c
    :goto_0
    if-ge v4, v6, :cond_0

    #@1e
    aget-object v2, v3, v4

    #@20
    .line 3594
    .local v2, "regex":Ljava/lang/String;
    invoke-virtual {v0, v2}, Ljava/lang/String;->matches(Ljava/lang/String;)Z

    #@23
    move-result v7

    #@24
    if-eqz v7, :cond_1

    #@26
    .line 3595
    const/4 v4, 0x1

    #@27
    return v4

    #@28
    .line 3593
    :cond_1
    add-int/lit8 v4, v4, 0x1

    #@2a
    goto :goto_0

    #@2b
    .line 3600
    .end local v0    # "intf":Ljava/lang/String;
    .end local v2    # "regex":Ljava/lang/String;
    :cond_2
    return v5
.end method

.method private logStateAndMessage(Landroid/os/Message;Ljava/lang/String;)V
    .locals 2
    .param p1, "message"    # Landroid/os/Message;
    .param p2, "state"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2543
    const/4 v0, 0x0

    #@1
    iput v0, p0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@3
    .line 2544
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->mLogMessages:Z

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 2548
    new-instance v0, Ljava/lang/StringBuilder;

    #@9
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@c
    const-string/jumbo v1, " "

    #@f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12
    move-result-object v0

    #@13
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v0

    #@17
    const-string/jumbo v1, " "

    #@1a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v0

    #@1e
    invoke-virtual {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->getLogRecString(Landroid/os/Message;)Ljava/lang/String;

    #@21
    move-result-object v1

    #@22
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v0

    #@26
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v0

    #@2a
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@2d
    .line 2542
    :cond_0
    return-void
.end method

.method private macAddressFromRoute(Ljava/lang/String;)Ljava/lang/String;
    .locals 11
    .param p1, "ipAddress"    # Ljava/lang/String;

    #@0
    .prologue
    .line 5276
    const/4 v5, 0x0

    #@1
    .line 5277
    .local v5, "macAddress":Ljava/lang/String;
    const/4 v6, 0x0

    #@2
    .line 5279
    .local v6, "reader":Ljava/io/BufferedReader;
    :try_start_0
    new-instance v7, Ljava/io/BufferedReader;

    #@4
    new-instance v9, Ljava/io/FileReader;

    #@6
    const-string/jumbo v10, "/proc/net/arp"

    #@9
    invoke-direct {v9, v10}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V

    #@c
    invoke-direct {v7, v9}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    .line 5282
    .end local v6    # "reader":Ljava/io/BufferedReader;
    .local v7, "reader":Ljava/io/BufferedReader;
    :try_start_1
    invoke-virtual {v7}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    #@12
    move-result-object v3

    #@13
    .line 5284
    .local v3, "line":Ljava/lang/String;
    :cond_0
    invoke-virtual {v7}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    #@16
    move-result-object v3

    #@17
    if-eqz v3, :cond_1

    #@19
    .line 5285
    const-string/jumbo v9, "[ ]+"

    #@1c
    invoke-virtual {v3, v9}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@1f
    move-result-object v8

    #@20
    .line 5286
    .local v8, "tokens":[Ljava/lang/String;
    array-length v9, v8

    #@21
    const/4 v10, 0x6

    #@22
    if-lt v9, v10, :cond_0

    #@24
    .line 5292
    const/4 v9, 0x0

    #@25
    aget-object v2, v8, v9

    #@27
    .line 5293
    .local v2, "ip":Ljava/lang/String;
    const/4 v9, 0x3

    #@28
    aget-object v4, v8, v9

    #@2a
    .line 5295
    .local v4, "mac":Ljava/lang/String;
    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@2d
    move-result v9

    #@2e
    if-eqz v9, :cond_0

    #@30
    .line 5296
    move-object v5, v4

    #@31
    .line 5301
    .end local v2    # "ip":Ljava/lang/String;
    .end local v4    # "mac":Ljava/lang/String;
    .end local v5    # "macAddress":Ljava/lang/String;
    .end local v8    # "tokens":[Ljava/lang/String;
    :cond_1
    if-nez v5, :cond_2

    #@33
    .line 5302
    new-instance v9, Ljava/lang/StringBuilder;

    #@35
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@38
    const-string/jumbo v10, "Did not find remoteAddress {"

    #@3b
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3e
    move-result-object v9

    #@3f
    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42
    move-result-object v9

    #@43
    const-string/jumbo v10, "} in "

    #@46
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@49
    move-result-object v9

    #@4a
    .line 5303
    const-string/jumbo v10, "/proc/net/arp"

    #@4d
    .line 5302
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@50
    move-result-object v9

    #@51
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@54
    move-result-object v9

    #@55
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_6
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_7
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@58
    .line 5312
    :cond_2
    if-eqz v7, :cond_3

    #@5a
    .line 5313
    :try_start_2
    invoke-virtual {v7}, Ljava/io/BufferedReader;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    #@5d
    :cond_3
    :goto_0
    move-object v6, v7

    #@5e
    .line 5319
    .end local v3    # "line":Ljava/lang/String;
    .end local v7    # "reader":Ljava/io/BufferedReader;
    :cond_4
    :goto_1
    return-object v5

    #@5f
    .line 5315
    .restart local v3    # "line":Ljava/lang/String;
    .restart local v7    # "reader":Ljava/io/BufferedReader;
    :catch_0
    move-exception v1

    #@60
    .local v1, "e":Ljava/io/IOException;
    goto :goto_0

    #@61
    .line 5308
    .end local v1    # "e":Ljava/io/IOException;
    .end local v3    # "line":Ljava/lang/String;
    .end local v7    # "reader":Ljava/io/BufferedReader;
    .restart local v5    # "macAddress":Ljava/lang/String;
    .restart local v6    # "reader":Ljava/io/BufferedReader;
    :catch_1
    move-exception v1

    #@62
    .line 5309
    .end local v5    # "macAddress":Ljava/lang/String;
    .end local v6    # "reader":Ljava/io/BufferedReader;
    .restart local v1    # "e":Ljava/io/IOException;
    :goto_2
    :try_start_3
    const-string/jumbo v9, "Could not read /proc/net/arp to lookup mac address"

    #@65
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@68
    .line 5312
    if-eqz v6, :cond_4

    #@6a
    .line 5313
    :try_start_4
    invoke-virtual {v6}, Ljava/io/BufferedReader;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    #@6d
    goto :goto_1

    #@6e
    .line 5315
    :catch_2
    move-exception v1

    #@6f
    goto :goto_1

    #@70
    .line 5306
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v5    # "macAddress":Ljava/lang/String;
    .restart local v6    # "reader":Ljava/io/BufferedReader;
    :catch_3
    move-exception v0

    #@71
    .line 5307
    .end local v5    # "macAddress":Ljava/lang/String;
    .end local v6    # "reader":Ljava/io/BufferedReader;
    .local v0, "e":Ljava/io/FileNotFoundException;
    :goto_3
    :try_start_5
    const-string/jumbo v9, "Could not open /proc/net/arp to lookup mac address"

    #@74
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@77
    .line 5312
    if-eqz v6, :cond_4

    #@79
    .line 5313
    :try_start_6
    invoke-virtual {v6}, Ljava/io/BufferedReader;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_4

    #@7c
    goto :goto_1

    #@7d
    .line 5315
    :catch_4
    move-exception v1

    #@7e
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_1

    #@7f
    .line 5310
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v1    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v9

    #@80
    .line 5312
    :goto_4
    if-eqz v6, :cond_5

    #@82
    .line 5313
    :try_start_7
    invoke-virtual {v6}, Ljava/io/BufferedReader;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_5

    #@85
    .line 5310
    :cond_5
    :goto_5
    throw v9

    #@86
    .line 5315
    :catch_5
    move-exception v1

    #@87
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_5

    #@88
    .line 5310
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v7    # "reader":Ljava/io/BufferedReader;
    :catchall_1
    move-exception v9

    #@89
    move-object v6, v7

    #@8a
    .end local v7    # "reader":Ljava/io/BufferedReader;
    .local v6, "reader":Ljava/io/BufferedReader;
    goto :goto_4

    #@8b
    .line 5306
    .end local v6    # "reader":Ljava/io/BufferedReader;
    .restart local v7    # "reader":Ljava/io/BufferedReader;
    :catch_6
    move-exception v0

    #@8c
    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v6, v7

    #@8d
    .end local v7    # "reader":Ljava/io/BufferedReader;
    .restart local v6    # "reader":Ljava/io/BufferedReader;
    goto :goto_3

    #@8e
    .line 5308
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v6    # "reader":Ljava/io/BufferedReader;
    .restart local v7    # "reader":Ljava/io/BufferedReader;
    :catch_7
    move-exception v1

    #@8f
    .restart local v1    # "e":Ljava/io/IOException;
    move-object v6, v7

    #@90
    .end local v7    # "reader":Ljava/io/BufferedReader;
    .restart local v6    # "reader":Ljava/io/BufferedReader;
    goto :goto_2
.end method

.method private static makeHex([B)Ljava/lang/String;
    .locals 8
    .param p0, "bytes"    # [B

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 9723
    new-instance v1, Ljava/lang/StringBuilder;

    #@3
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@6
    .line 9724
    .local v1, "sb":Ljava/lang/StringBuilder;
    array-length v4, p0

    #@7
    move v2, v3

    #@8
    :goto_0
    if-ge v2, v4, :cond_0

    #@a
    aget-byte v0, p0, v2

    #@c
    .line 9725
    .local v0, "b":B
    const-string/jumbo v5, "%02x"

    #@f
    const/4 v6, 0x1

    #@10
    new-array v6, v6, [Ljava/lang/Object;

    #@12
    invoke-static {v0}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;

    #@15
    move-result-object v7

    #@16
    aput-object v7, v6, v3

    #@18
    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@1b
    move-result-object v5

    #@1c
    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    .line 9724
    add-int/lit8 v2, v2, 0x1

    #@21
    goto :goto_0

    #@22
    .line 9727
    .end local v0    # "b":B
    :cond_0
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@25
    move-result-object v2

    #@26
    return-object v2
.end method

.method private static makeHex([BII)Ljava/lang/String;
    .locals 6
    .param p0, "bytes"    # [B
    .param p1, "from"    # I
    .param p2, "len"    # I

    #@0
    .prologue
    .line 9731
    new-instance v1, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    .line 9732
    .local v1, "sb":Ljava/lang/StringBuilder;
    const/4 v0, 0x0

    #@6
    .local v0, "i":I
    :goto_0
    if-ge v0, p2, :cond_0

    #@8
    .line 9733
    const-string/jumbo v2, "%02x"

    #@b
    const/4 v3, 0x1

    #@c
    new-array v3, v3, [Ljava/lang/Object;

    #@e
    add-int v4, p1, v0

    #@10
    aget-byte v4, p0, v4

    #@12
    invoke-static {v4}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;

    #@15
    move-result-object v4

    #@16
    const/4 v5, 0x0

    #@17
    aput-object v4, v3, v5

    #@19
    invoke-static {v2, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@1c
    move-result-object v2

    #@1d
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@20
    .line 9732
    add-int/lit8 v0, v0, 0x1

    #@22
    goto :goto_0

    #@23
    .line 9735
    :cond_0
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@26
    move-result-object v2

    #@27
    return-object v2
.end method

.method private makeLinkProperties()Landroid/net/LinkProperties;
    .locals 9

    #@0
    .prologue
    .line 4437
    new-instance v3, Landroid/net/LinkProperties;

    #@2
    invoke-direct {v3}, Landroid/net/LinkProperties;-><init>()V

    #@5
    .line 4440
    .local v3, "newLp":Landroid/net/LinkProperties;
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@7
    invoke-virtual {v3, v6}, Landroid/net/LinkProperties;->setInterfaceName(Ljava/lang/String;)V

    #@a
    .line 4441
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@c
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@e
    invoke-virtual {v6, v7}, Lcom/android/server/wifi/WifiConfigStore;->getProxyProperties(I)Landroid/net/ProxyInfo;

    #@11
    move-result-object v6

    #@12
    invoke-virtual {v3, v6}, Landroid/net/LinkProperties;->setHttpProxy(Landroid/net/ProxyInfo;)V

    #@15
    .line 4442
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mTcpBufferSizes:Ljava/lang/String;

    #@17
    invoke-static {v6}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    #@1a
    move-result v6

    #@1b
    if-nez v6, :cond_0

    #@1d
    .line 4443
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mTcpBufferSizes:Ljava/lang/String;

    #@1f
    invoke-virtual {v3, v6}, Landroid/net/LinkProperties;->setTcpBufferSizes(Ljava/lang/String;)V

    #@22
    .line 4447
    :cond_0
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetlinkTracker:Lcom/android/server/net/NetlinkTracker;

    #@24
    invoke-virtual {v6}, Lcom/android/server/net/NetlinkTracker;->getLinkProperties()Landroid/net/LinkProperties;

    #@27
    move-result-object v2

    #@28
    .line 4448
    .local v2, "netlinkLinkProperties":Landroid/net/LinkProperties;
    invoke-virtual {v2}, Landroid/net/LinkProperties;->getLinkAddresses()Ljava/util/List;

    #@2b
    move-result-object v6

    #@2c
    invoke-virtual {v3, v6}, Landroid/net/LinkProperties;->setLinkAddresses(Ljava/util/Collection;)V

    #@2f
    .line 4449
    invoke-virtual {v2}, Landroid/net/LinkProperties;->getRoutes()Ljava/util/List;

    #@32
    move-result-object v6

    #@33
    invoke-interface {v6}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@36
    move-result-object v5

    #@37
    .local v5, "route$iterator":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    #@3a
    move-result v6

    #@3b
    if-eqz v6, :cond_1

    #@3d
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@40
    move-result-object v4

    #@41
    check-cast v4, Landroid/net/RouteInfo;

    #@43
    .line 4450
    .local v4, "route":Landroid/net/RouteInfo;
    invoke-virtual {v3, v4}, Landroid/net/LinkProperties;->addRoute(Landroid/net/RouteInfo;)Z

    #@46
    goto :goto_0

    #@47
    .line 4452
    .end local v4    # "route":Landroid/net/RouteInfo;
    :cond_1
    invoke-virtual {v2}, Landroid/net/LinkProperties;->getDnsServers()Ljava/util/List;

    #@4a
    move-result-object v6

    #@4b
    invoke-interface {v6}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@4e
    move-result-object v1

    #@4f
    .local v1, "dns$iterator":Ljava/util/Iterator;
    :cond_2
    :goto_1
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@52
    move-result v6

    #@53
    if-eqz v6, :cond_3

    #@55
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@58
    move-result-object v0

    #@59
    check-cast v0, Ljava/net/InetAddress;

    #@5b
    .line 4455
    .local v0, "dns":Ljava/net/InetAddress;
    invoke-virtual {v3, v0}, Landroid/net/LinkProperties;->isReachable(Ljava/net/InetAddress;)Z

    #@5e
    move-result v6

    #@5f
    if-eqz v6, :cond_2

    #@61
    .line 4456
    invoke-virtual {v3, v0}, Landroid/net/LinkProperties;->addDnsServer(Ljava/net/InetAddress;)Z

    #@64
    goto :goto_1

    #@65
    .line 4461
    .end local v0    # "dns":Ljava/net/InetAddress;
    :cond_3
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResultsLock:Ljava/lang/Object;

    #@67
    monitor-enter v7

    #@68
    .line 4464
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@6a
    if-eqz v6, :cond_7

    #@6c
    .line 4465
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@6e
    iget-object v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@70
    invoke-virtual {v6, v8}, Landroid/net/DhcpResults;->getRoutes(Ljava/lang/String;)Ljava/util/List;

    #@73
    move-result-object v6

    #@74
    invoke-interface {v6}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@77
    move-result-object v5

    #@78
    :goto_2
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    #@7b
    move-result v6

    #@7c
    if-eqz v6, :cond_4

    #@7e
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@81
    move-result-object v4

    #@82
    check-cast v4, Landroid/net/RouteInfo;

    #@84
    .line 4466
    .restart local v4    # "route":Landroid/net/RouteInfo;
    invoke-virtual {v3, v4}, Landroid/net/LinkProperties;->addRoute(Landroid/net/RouteInfo;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@87
    goto :goto_2

    #@88
    .line 4461
    .end local v4    # "route":Landroid/net/RouteInfo;
    :catchall_0
    move-exception v6

    #@89
    monitor-exit v7

    #@8a
    throw v6

    #@8b
    .line 4468
    :cond_4
    :try_start_1
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@8d
    iget-object v6, v6, Landroid/net/DhcpResults;->dnsServers:Ljava/util/ArrayList;

    #@8f
    invoke-interface {v6}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@92
    move-result-object v1

    #@93
    :cond_5
    :goto_3
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@96
    move-result v6

    #@97
    if-eqz v6, :cond_6

    #@99
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@9c
    move-result-object v0

    #@9d
    check-cast v0, Ljava/net/InetAddress;

    #@9f
    .line 4471
    .restart local v0    # "dns":Ljava/net/InetAddress;
    invoke-virtual {v3, v0}, Landroid/net/LinkProperties;->isReachable(Ljava/net/InetAddress;)Z

    #@a2
    move-result v6

    #@a3
    if-eqz v6, :cond_5

    #@a5
    .line 4472
    invoke-virtual {v3, v0}, Landroid/net/LinkProperties;->addDnsServer(Ljava/net/InetAddress;)Z

    #@a8
    goto :goto_3

    #@a9
    .line 4475
    .end local v0    # "dns":Ljava/net/InetAddress;
    :cond_6
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@ab
    iget-object v6, v6, Landroid/net/DhcpResults;->domains:Ljava/lang/String;

    #@ad
    invoke-virtual {v3, v6}, Landroid/net/LinkProperties;->setDomains(Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@b0
    :cond_7
    monitor-exit v7

    #@b1
    .line 4479
    return-object v3
.end method

.method private maybeInitDhcpStateMachine()V
    .locals 2

    #@0
    .prologue
    .line 4974
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@2
    if-nez v0, :cond_0

    #@4
    .line 4975
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->useLegacyDhcpClient()Z

    #@7
    move-result v0

    #@8
    if-eqz v0, :cond_1

    #@a
    .line 4977
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@c
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@e
    .line 4976
    invoke-static {v0, p0, v1}, Landroid/net/DhcpStateMachine;->makeDhcpStateMachine(Landroid/content/Context;Lcom/android/internal/util/StateMachine;Ljava/lang/String;)Landroid/net/DhcpStateMachine;

    #@11
    move-result-object v0

    #@12
    iput-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@14
    .line 4973
    :cond_0
    :goto_0
    return-void

    #@15
    .line 4980
    :cond_1
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@17
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@19
    .line 4979
    invoke-static {v0, p0, v1}, Landroid/net/dhcp/DhcpClient;->makeDhcpStateMachine(Landroid/content/Context;Lcom/android/internal/util/StateMachine;Ljava/lang/String;)Landroid/net/BaseDhcpStateMachine;

    #@1c
    move-result-object v0

    #@1d
    iput-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@1f
    goto :goto_0
.end method

.method private noteScanEnd()V
    .locals 9

    #@0
    .prologue
    const-wide/16 v6, 0x0

    #@2
    const/4 v8, 0x0

    #@3
    .line 1835
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@6
    move-result-wide v2

    #@7
    .line 1836
    .local v2, "now":J
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->lastStartScanTimeStamp:J

    #@9
    cmp-long v4, v4, v6

    #@b
    if-eqz v4, :cond_0

    #@d
    .line 1837
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->lastStartScanTimeStamp:J

    #@f
    sub-long v4, v2, v4

    #@11
    iput-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->lastScanDuration:J

    #@13
    .line 1839
    :cond_0
    iput-wide v6, p0, Lcom/android/server/wifi/WifiStateMachine;->lastStartScanTimeStamp:J

    #@15
    .line 1840
    sget-boolean v4, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@17
    if-eqz v4, :cond_1

    #@19
    .line 1841
    const-string/jumbo v4, "[%,d ms]"

    #@1c
    const/4 v5, 0x1

    #@1d
    new-array v5, v5, [Ljava/lang/Object;

    #@1f
    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    #@22
    move-result-object v6

    #@23
    const/4 v7, 0x0

    #@24
    aput-object v6, v5, v7

    #@26
    invoke-static {v4, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@29
    move-result-object v1

    #@2a
    .line 1842
    .local v1, "ts":Ljava/lang/String;
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@2c
    if-eqz v4, :cond_3

    #@2e
    .line 1843
    new-instance v4, Ljava/lang/StringBuilder;

    #@30
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@33
    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@36
    move-result-object v4

    #@37
    const-string/jumbo v5, " noteScanEnd "

    #@3a
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d
    move-result-object v4

    #@3e
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@40
    invoke-virtual {v5}, Landroid/os/WorkSource;->toString()Ljava/lang/String;

    #@43
    move-result-object v5

    #@44
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@47
    move-result-object v4

    #@48
    .line 1844
    const-string/jumbo v5, " onTime="

    #@4b
    .line 1843
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v4

    #@4f
    .line 1844
    iget v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeThisScan:I

    #@51
    .line 1843
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@54
    move-result-object v4

    #@55
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@58
    move-result-object v4

    #@59
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@5c
    .line 1849
    .end local v1    # "ts":Ljava/lang/String;
    :cond_1
    :goto_0
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@5e
    if-eqz v4, :cond_2

    #@60
    .line 1851
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@62
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@64
    invoke-interface {v4, v5}, Lcom/android/internal/app/IBatteryStats;->noteWifiScanStoppedFromSource(Landroid/os/WorkSource;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@67
    .line 1855
    iput-object v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@69
    .line 1856
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@6b
    invoke-virtual {v4}, Landroid/os/PowerManager$WakeLock;->release()V

    #@6e
    .line 1857
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@70
    invoke-virtual {v4, v8}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    #@73
    .line 1834
    :cond_2
    :goto_1
    return-void

    #@74
    .line 1846
    .restart local v1    # "ts":Ljava/lang/String;
    :cond_3
    new-instance v4, Ljava/lang/StringBuilder;

    #@76
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@79
    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7c
    move-result-object v4

    #@7d
    const-string/jumbo v5, " noteScanEnd no scan source"

    #@80
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@83
    move-result-object v4

    #@84
    .line 1847
    const-string/jumbo v5, " onTime="

    #@87
    .line 1846
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8a
    move-result-object v4

    #@8b
    .line 1847
    iget v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeThisScan:I

    #@8d
    .line 1846
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@90
    move-result-object v4

    #@91
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@94
    move-result-object v4

    #@95
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@98
    goto :goto_0

    #@99
    .line 1852
    .end local v1    # "ts":Ljava/lang/String;
    :catch_0
    move-exception v0

    #@9a
    .line 1853
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_1
    invoke-virtual {v0}, Landroid/os/RemoteException;->toString()Ljava/lang/String;

    #@9d
    move-result-object v4

    #@9e
    invoke-virtual {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@a1
    .line 1855
    iput-object v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@a3
    .line 1856
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@a5
    invoke-virtual {v4}, Landroid/os/PowerManager$WakeLock;->release()V

    #@a8
    .line 1857
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@aa
    invoke-virtual {v4, v8}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    #@ad
    goto :goto_1

    #@ae
    .line 1854
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_0
    move-exception v4

    #@af
    .line 1855
    iput-object v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@b1
    .line 1856
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@b3
    invoke-virtual {v5}, Landroid/os/PowerManager$WakeLock;->release()V

    #@b6
    .line 1857
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@b8
    invoke-virtual {v5, v8}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    #@bb
    .line 1854
    throw v4
.end method

.method private noteScanStart(ILandroid/os/WorkSource;)V
    .locals 10
    .param p1, "callingUid"    # I
    .param p2, "workSource"    # Landroid/os/WorkSource;

    #@0
    .prologue
    const/4 v9, 0x1

    #@1
    const/4 v8, 0x0

    #@2
    .line 1799
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@5
    move-result-wide v2

    #@6
    .line 1800
    .local v2, "now":J
    iput-wide v2, p0, Lcom/android/server/wifi/WifiStateMachine;->lastStartScanTimeStamp:J

    #@8
    .line 1801
    const-wide/16 v6, 0x0

    #@a
    iput-wide v6, p0, Lcom/android/server/wifi/WifiStateMachine;->lastScanDuration:J

    #@c
    .line 1802
    sget-boolean v5, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@e
    if-eqz v5, :cond_0

    #@10
    .line 1803
    const-string/jumbo v5, "[%,d ms]"

    #@13
    new-array v6, v9, [Ljava/lang/Object;

    #@15
    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    #@18
    move-result-object v7

    #@19
    aput-object v7, v6, v8

    #@1b
    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@1e
    move-result-object v4

    #@1f
    .line 1804
    .local v4, "ts":Ljava/lang/String;
    if-eqz p2, :cond_3

    #@21
    .line 1805
    sget-boolean v5, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@23
    if-eqz v5, :cond_0

    #@25
    new-instance v5, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v5

    #@2e
    const-string/jumbo v6, " noteScanStart"

    #@31
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@34
    move-result-object v5

    #@35
    invoke-virtual {p2}, Landroid/os/WorkSource;->toString()Ljava/lang/String;

    #@38
    move-result-object v6

    #@39
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3c
    move-result-object v5

    #@3d
    .line 1806
    const-string/jumbo v6, " uid "

    #@40
    .line 1805
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@43
    move-result-object v5

    #@44
    .line 1806
    invoke-static {p1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@47
    move-result-object v6

    #@48
    .line 1805
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v5

    #@4c
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4f
    move-result-object v5

    #@50
    invoke-virtual {p0, v5}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@53
    .line 1812
    .end local v4    # "ts":Ljava/lang/String;
    :cond_0
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->startRadioScanStats()V

    #@56
    .line 1813
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@58
    if-nez v5, :cond_2

    #@5a
    const/4 v5, -0x1

    #@5b
    if-eq p1, v5, :cond_4

    #@5d
    .line 1814
    const/4 v5, -0x2

    #@5e
    if-eq p1, v5, :cond_4

    #@60
    .line 1816
    :goto_1
    if-eqz p2, :cond_5

    #@62
    .end local p2    # "workSource":Landroid/os/WorkSource;
    :goto_2
    iput-object p2, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@64
    .line 1818
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@66
    .line 1819
    .local v0, "batteryWorkSource":Landroid/os/WorkSource;
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@68
    invoke-virtual {v5}, Landroid/os/WorkSource;->size()I

    #@6b
    move-result v5

    #@6c
    if-ne v5, v9, :cond_1

    #@6e
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWorkSource:Landroid/os/WorkSource;

    #@70
    invoke-virtual {v5, v8}, Landroid/os/WorkSource;->get(I)I

    #@73
    move-result v5

    #@74
    if-gez v5, :cond_1

    #@76
    .line 1821
    new-instance v0, Landroid/os/WorkSource;

    #@78
    .end local v0    # "batteryWorkSource":Landroid/os/WorkSource;
    const/16 v5, 0x3f2

    #@7a
    invoke-direct {v0, v5}, Landroid/os/WorkSource;-><init>(I)V

    #@7d
    .line 1824
    .restart local v0    # "batteryWorkSource":Landroid/os/WorkSource;
    :cond_1
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@7f
    invoke-virtual {v5, v0}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    #@82
    .line 1825
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanWakeLock:Landroid/os/PowerManager$WakeLock;

    #@84
    const-wide/16 v6, 0x1388

    #@86
    invoke-virtual {v5, v6, v7}, Landroid/os/PowerManager$WakeLock;->acquire(J)V

    #@89
    .line 1827
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@8b
    invoke-interface {v5, v0}, Lcom/android/internal/app/IBatteryStats;->noteWifiScanStartedFromSource(Landroid/os/WorkSource;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@8e
    .line 1798
    .end local v0    # "batteryWorkSource":Landroid/os/WorkSource;
    :cond_2
    :goto_3
    return-void

    #@8f
    .line 1808
    .restart local v4    # "ts":Ljava/lang/String;
    .restart local p2    # "workSource":Landroid/os/WorkSource;
    :cond_3
    sget-boolean v5, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@91
    if-eqz v5, :cond_0

    #@93
    new-instance v5, Ljava/lang/StringBuilder;

    #@95
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@98
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9b
    move-result-object v5

    #@9c
    const-string/jumbo v6, " noteScanstart no scan source"

    #@9f
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a2
    move-result-object v5

    #@a3
    .line 1809
    const-string/jumbo v6, " uid "

    #@a6
    .line 1808
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a9
    move-result-object v5

    #@aa
    .line 1809
    invoke-static {p1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@ad
    move-result-object v6

    #@ae
    .line 1808
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b1
    move-result-object v5

    #@b2
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@b5
    move-result-object v5

    #@b6
    invoke-virtual {p0, v5}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@b9
    goto :goto_0

    #@ba
    .line 1815
    .end local v4    # "ts":Ljava/lang/String;
    :cond_4
    if-eqz p2, :cond_2

    #@bc
    goto :goto_1

    #@bd
    .line 1816
    :cond_5
    new-instance p2, Landroid/os/WorkSource;

    #@bf
    .end local p2    # "workSource":Landroid/os/WorkSource;
    invoke-direct {p2, p1}, Landroid/os/WorkSource;-><init>(I)V

    #@c2
    goto :goto_2

    #@c3
    .line 1828
    .restart local v0    # "batteryWorkSource":Landroid/os/WorkSource;
    :catch_0
    move-exception v1

    #@c4
    .line 1829
    .local v1, "e":Landroid/os/RemoteException;
    invoke-virtual {v1}, Landroid/os/RemoteException;->toString()Ljava/lang/String;

    #@c7
    move-result-object v5

    #@c8
    invoke-virtual {p0, v5}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@cb
    goto :goto_3
.end method

.method private obtainMessageWithWhatAndArg2(Landroid/os/Message;I)Landroid/os/Message;
    .locals 2
    .param p1, "srcMsg"    # Landroid/os/Message;
    .param p2, "what"    # I

    #@0
    .prologue
    .line 9667
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    #@3
    move-result-object v0

    #@4
    .line 9668
    .local v0, "msg":Landroid/os/Message;
    iput p2, v0, Landroid/os/Message;->what:I

    #@6
    .line 9669
    iget v1, p1, Landroid/os/Message;->arg2:I

    #@8
    iput v1, v0, Landroid/os/Message;->arg2:I

    #@a
    .line 9670
    return-object v0
.end method

.method private static parseHex(C)I
    .locals 3
    .param p0, "ch"    # C

    #@0
    .prologue
    .line 9690
    const/16 v0, 0x30

    #@2
    if-gt v0, p0, :cond_0

    #@4
    const/16 v0, 0x39

    #@6
    if-gt p0, v0, :cond_0

    #@8
    .line 9691
    add-int/lit8 v0, p0, -0x30

    #@a
    return v0

    #@b
    .line 9692
    :cond_0
    const/16 v0, 0x61

    #@d
    if-gt v0, p0, :cond_1

    #@f
    const/16 v0, 0x66

    #@11
    if-gt p0, v0, :cond_1

    #@13
    .line 9693
    add-int/lit8 v0, p0, -0x61

    #@15
    add-int/lit8 v0, v0, 0xa

    #@17
    return v0

    #@18
    .line 9694
    :cond_1
    const/16 v0, 0x41

    #@1a
    if-gt v0, p0, :cond_2

    #@1c
    const/16 v0, 0x46

    #@1e
    if-gt p0, v0, :cond_2

    #@20
    .line 9695
    add-int/lit8 v0, p0, -0x41

    #@22
    add-int/lit8 v0, v0, 0xa

    #@24
    return v0

    #@25
    .line 9697
    :cond_2
    new-instance v0, Ljava/lang/NumberFormatException;

    #@27
    new-instance v1, Ljava/lang/StringBuilder;

    #@29
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@2c
    const-string/jumbo v2, ""

    #@2f
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v1

    #@33
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    #@36
    move-result-object v1

    #@37
    const-string/jumbo v2, " is not a valid hex digit"

    #@3a
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d
    move-result-object v1

    #@3e
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@41
    move-result-object v1

    #@42
    invoke-direct {v0, v1}, Ljava/lang/NumberFormatException;-><init>(Ljava/lang/String;)V

    #@45
    throw v0
.end method

.method private parseHex(Ljava/lang/String;)[B
    .locals 8
    .param p1, "hex"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 9703
    if-nez p1, :cond_0

    #@3
    .line 9704
    new-array v5, v6, [B

    #@5
    return-object v5

    #@6
    .line 9707
    :cond_0
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    #@9
    move-result v5

    #@a
    rem-int/lit8 v5, v5, 0x2

    #@c
    if-eqz v5, :cond_1

    #@e
    .line 9708
    new-instance v5, Ljava/lang/NumberFormatException;

    #@10
    new-instance v6, Ljava/lang/StringBuilder;

    #@12
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@15
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v6

    #@19
    const-string/jumbo v7, " is not a valid hex string"

    #@1c
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v6

    #@20
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@23
    move-result-object v6

    #@24
    invoke-direct {v5, v6}, Ljava/lang/NumberFormatException;-><init>(Ljava/lang/String;)V

    #@27
    throw v5

    #@28
    .line 9711
    :cond_1
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    #@2b
    move-result v5

    #@2c
    div-int/lit8 v5, v5, 0x2

    #@2e
    add-int/lit8 v5, v5, 0x1

    #@30
    new-array v3, v5, [B

    #@32
    .line 9712
    .local v3, "result":[B
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    #@35
    move-result v5

    #@36
    div-int/lit8 v5, v5, 0x2

    #@38
    int-to-byte v5, v5

    #@39
    aput-byte v5, v3, v6

    #@3b
    .line 9713
    const/4 v1, 0x0

    #@3c
    .local v1, "i":I
    const/4 v2, 0x1

    #@3d
    .local v2, "j":I
    :goto_0
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    #@40
    move-result v5

    #@41
    if-ge v1, v5, :cond_2

    #@43
    .line 9714
    invoke-virtual {p1, v1}, Ljava/lang/String;->charAt(I)C

    #@46
    move-result v5

    #@47
    invoke-static {v5}, Lcom/android/server/wifi/WifiStateMachine;->parseHex(C)I

    #@4a
    move-result v5

    #@4b
    mul-int/lit8 v5, v5, 0x10

    #@4d
    add-int/lit8 v6, v1, 0x1

    #@4f
    invoke-virtual {p1, v6}, Ljava/lang/String;->charAt(I)C

    #@52
    move-result v6

    #@53
    invoke-static {v6}, Lcom/android/server/wifi/WifiStateMachine;->parseHex(C)I

    #@56
    move-result v6

    #@57
    add-int v4, v5, v6

    #@59
    .line 9715
    .local v4, "val":I
    and-int/lit16 v5, v4, 0xff

    #@5b
    int-to-byte v0, v5

    #@5c
    .line 9716
    .local v0, "b":B
    aput-byte v0, v3, v2

    #@5e
    .line 9713
    add-int/lit8 v1, v1, 0x2

    #@60
    add-int/lit8 v2, v2, 0x1

    #@62
    goto :goto_0

    #@63
    .line 9719
    .end local v0    # "b":B
    .end local v4    # "val":I
    :cond_2
    return-object v3
.end method

.method private replyToMessage(Landroid/os/Message;I)V
    .locals 2
    .param p1, "msg"    # Landroid/os/Message;
    .param p2, "what"    # I

    #@0
    .prologue
    .line 9642
    iget-object v1, p1, Landroid/os/Message;->replyTo:Landroid/os/Messenger;

    #@2
    if-nez v1, :cond_0

    #@4
    return-void

    #@5
    .line 9643
    :cond_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->obtainMessageWithWhatAndArg2(Landroid/os/Message;I)Landroid/os/Message;

    #@8
    move-result-object v0

    #@9
    .line 9644
    .local v0, "dstMsg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mReplyChannel:Lcom/android/internal/util/AsyncChannel;

    #@b
    invoke-virtual {v1, p1, v0}, Lcom/android/internal/util/AsyncChannel;->replyToMessage(Landroid/os/Message;Landroid/os/Message;)V

    #@e
    .line 9641
    return-void
.end method

.method private replyToMessage(Landroid/os/Message;II)V
    .locals 2
    .param p1, "msg"    # Landroid/os/Message;
    .param p2, "what"    # I
    .param p3, "arg1"    # I

    #@0
    .prologue
    .line 9648
    iget-object v1, p1, Landroid/os/Message;->replyTo:Landroid/os/Messenger;

    #@2
    if-nez v1, :cond_0

    #@4
    return-void

    #@5
    .line 9649
    :cond_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->obtainMessageWithWhatAndArg2(Landroid/os/Message;I)Landroid/os/Message;

    #@8
    move-result-object v0

    #@9
    .line 9650
    .local v0, "dstMsg":Landroid/os/Message;
    iput p3, v0, Landroid/os/Message;->arg1:I

    #@b
    .line 9651
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mReplyChannel:Lcom/android/internal/util/AsyncChannel;

    #@d
    invoke-virtual {v1, p1, v0}, Lcom/android/internal/util/AsyncChannel;->replyToMessage(Landroid/os/Message;Landroid/os/Message;)V

    #@10
    .line 9647
    return-void
.end method

.method private replyToMessage(Landroid/os/Message;ILjava/lang/Object;)V
    .locals 2
    .param p1, "msg"    # Landroid/os/Message;
    .param p2, "what"    # I
    .param p3, "obj"    # Ljava/lang/Object;

    #@0
    .prologue
    .line 9655
    iget-object v1, p1, Landroid/os/Message;->replyTo:Landroid/os/Messenger;

    #@2
    if-nez v1, :cond_0

    #@4
    return-void

    #@5
    .line 9656
    :cond_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->obtainMessageWithWhatAndArg2(Landroid/os/Message;I)Landroid/os/Message;

    #@8
    move-result-object v0

    #@9
    .line 9657
    .local v0, "dstMsg":Landroid/os/Message;
    iput-object p3, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@b
    .line 9658
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mReplyChannel:Lcom/android/internal/util/AsyncChannel;

    #@d
    invoke-virtual {v1, p1, v0}, Lcom/android/internal/util/AsyncChannel;->replyToMessage(Landroid/os/Message;Landroid/os/Message;)V

    #@10
    .line 9654
    return-void
.end method

.method private sendConnectedState()V
    .locals 5

    #@0
    .prologue
    .line 8487
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@3
    move-result-object v0

    #@4
    .line 8488
    .local v0, "config":Landroid/net/wifi/WifiConfiguration;
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@6
    invoke-virtual {v2, v0}, Lcom/android/server/wifi/WifiConfigStore;->isLastSelectedConfiguration(Landroid/net/wifi/WifiConfiguration;)Z

    #@9
    move-result v2

    #@a
    if-eqz v2, :cond_2

    #@c
    .line 8489
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@e
    iget v3, v0, Landroid/net/wifi/WifiConfiguration;->lastConnectUid:I

    #@10
    invoke-virtual {v2, v3}, Lcom/android/server/wifi/WifiConfigStore;->checkConfigOverridePermission(I)Z

    #@13
    move-result v1

    #@14
    .line 8490
    .local v1, "prompt":Z
    sget-boolean v2, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@16
    if-eqz v2, :cond_0

    #@18
    .line 8491
    new-instance v2, Ljava/lang/StringBuilder;

    #@1a
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@1d
    const-string/jumbo v3, "Network selected by UID "

    #@20
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v2

    #@24
    iget v3, v0, Landroid/net/wifi/WifiConfiguration;->lastConnectUid:I

    #@26
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@29
    move-result-object v2

    #@2a
    const-string/jumbo v3, " prompt="

    #@2d
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v2

    #@31
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@34
    move-result-object v2

    #@35
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@38
    move-result-object v2

    #@39
    invoke-virtual {p0, v2}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@3c
    .line 8493
    :cond_0
    if-eqz v1, :cond_2

    #@3e
    .line 8497
    sget-boolean v2, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@40
    if-eqz v2, :cond_1

    #@42
    .line 8498
    new-instance v2, Ljava/lang/StringBuilder;

    #@44
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@47
    const-string/jumbo v3, "explictlySelected acceptUnvalidated="

    #@4a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4d
    move-result-object v2

    #@4e
    iget-boolean v3, v0, Landroid/net/wifi/WifiConfiguration;->noInternetAccessExpected:Z

    #@50
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@53
    move-result-object v2

    #@54
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@57
    move-result-object v2

    #@58
    invoke-virtual {p0, v2}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@5b
    .line 8500
    :cond_1
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@5d
    iget-boolean v3, v0, Landroid/net/wifi/WifiConfiguration;->noInternetAccessExpected:Z

    #@5f
    invoke-virtual {v2, v3}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;->explicitlySelected(Z)V

    #@62
    .line 8504
    .end local v1    # "prompt":Z
    :cond_2
    sget-object v2, Landroid/net/NetworkInfo$DetailedState;->CONNECTED:Landroid/net/NetworkInfo$DetailedState;

    #@64
    invoke-direct {p0, v2}, Lcom/android/server/wifi/WifiStateMachine;->setNetworkDetailedState(Landroid/net/NetworkInfo$DetailedState;)Z

    #@67
    .line 8505
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@69
    iget v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@6b
    sget-object v4, Landroid/net/NetworkInfo$DetailedState;->CONNECTED:Landroid/net/NetworkInfo$DetailedState;

    #@6d
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wifi/WifiConfigStore;->updateStatus(ILandroid/net/NetworkInfo$DetailedState;)V

    #@70
    .line 8506
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@72
    invoke-direct {p0, v2}, Lcom/android/server/wifi/WifiStateMachine;->sendNetworkStateChangeBroadcast(Ljava/lang/String;)V

    #@75
    .line 8484
    return-void
.end method

.method private sendLinkConfigurationChangedBroadcast()V
    .locals 4

    #@0
    .prologue
    .line 4730
    new-instance v0, Landroid/content/Intent;

    #@2
    const-string/jumbo v1, "android.net.wifi.LINK_CONFIGURATION_CHANGED"

    #@5
    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@8
    .line 4731
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x4000000

    #@a
    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@d
    .line 4732
    const-string/jumbo v1, "linkProperties"

    #@10
    new-instance v2, Landroid/net/LinkProperties;

    #@12
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@14
    invoke-direct {v2, v3}, Landroid/net/LinkProperties;-><init>(Landroid/net/LinkProperties;)V

    #@17
    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    #@1a
    .line 4733
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@1c
    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@1e
    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    #@21
    .line 4729
    return-void
.end method

.method private sendNetworkStateChangeBroadcast(Ljava/lang/String;)V
    .locals 5
    .param p1, "bssid"    # Ljava/lang/String;

    #@0
    .prologue
    .line 4689
    new-instance v0, Landroid/content/Intent;

    #@2
    const-string/jumbo v2, "android.net.wifi.STATE_CHANGE"

    #@5
    invoke-direct {v0, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@8
    .line 4690
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v2, 0x4000000

    #@a
    invoke-virtual {v0, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@d
    .line 4691
    const-string/jumbo v2, "networkInfo"

    #@10
    new-instance v3, Landroid/net/NetworkInfo;

    #@12
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@14
    invoke-direct {v3, v4}, Landroid/net/NetworkInfo;-><init>(Landroid/net/NetworkInfo;)V

    #@17
    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    #@1a
    .line 4692
    const-string/jumbo v2, "linkProperties"

    #@1d
    new-instance v3, Landroid/net/LinkProperties;

    #@1f
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@21
    invoke-direct {v3, v4}, Landroid/net/LinkProperties;-><init>(Landroid/net/LinkProperties;)V

    #@24
    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    #@27
    .line 4693
    if-eqz p1, :cond_0

    #@29
    .line 4694
    const-string/jumbo v2, "bssid"

    #@2c
    invoke-virtual {v0, v2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    #@2f
    .line 4695
    :cond_0
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@31
    invoke-virtual {v2}, Landroid/net/NetworkInfo;->getDetailedState()Landroid/net/NetworkInfo$DetailedState;

    #@34
    move-result-object v2

    #@35
    sget-object v3, Landroid/net/NetworkInfo$DetailedState;->VERIFYING_POOR_LINK:Landroid/net/NetworkInfo$DetailedState;

    #@37
    if-eq v2, v3, :cond_1

    #@39
    .line 4696
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@3b
    invoke-virtual {v2}, Landroid/net/NetworkInfo;->getDetailedState()Landroid/net/NetworkInfo$DetailedState;

    #@3e
    move-result-object v2

    #@3f
    sget-object v3, Landroid/net/NetworkInfo$DetailedState;->CONNECTED:Landroid/net/NetworkInfo$DetailedState;

    #@41
    if-ne v2, v3, :cond_2

    #@43
    .line 4699
    :cond_1
    new-instance v1, Landroid/net/wifi/WifiInfo;

    #@45
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@47
    invoke-direct {v1, v2}, Landroid/net/wifi/WifiInfo;-><init>(Landroid/net/wifi/WifiInfo;)V

    #@4a
    .line 4700
    .local v1, "sentWifiInfo":Landroid/net/wifi/WifiInfo;
    const-string/jumbo v2, "02:00:00:00:00:00"

    #@4d
    invoke-virtual {v1, v2}, Landroid/net/wifi/WifiInfo;->setMacAddress(Ljava/lang/String;)V

    #@50
    .line 4701
    const-string/jumbo v2, "wifiInfo"

    #@53
    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    #@56
    .line 4703
    .end local v1    # "sentWifiInfo":Landroid/net/wifi/WifiInfo;
    :cond_2
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@58
    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@5a
    invoke-virtual {v2, v0, v3}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    #@5d
    .line 4688
    return-void
.end method

.method private sendRssiChangeBroadcast(I)V
    .locals 4
    .param p1, "newRssi"    # I

    #@0
    .prologue
    .line 4678
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@2
    invoke-interface {v2, p1}, Lcom/android/internal/app/IBatteryStats;->noteWifiRssiChanged(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@5
    .line 4682
    :goto_0
    new-instance v1, Landroid/content/Intent;

    #@7
    const-string/jumbo v2, "android.net.wifi.RSSI_CHANGED"

    #@a
    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@d
    .line 4683
    .local v1, "intent":Landroid/content/Intent;
    const/high16 v2, 0x4000000

    #@f
    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@12
    .line 4684
    const-string/jumbo v2, "newRssi"

    #@15
    invoke-virtual {v1, v2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    #@18
    .line 4685
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@1a
    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@1c
    invoke-virtual {v2, v1, v3}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    #@1f
    .line 4676
    return-void

    #@20
    .line 4679
    .end local v1    # "intent":Landroid/content/Intent;
    :catch_0
    move-exception v0

    #@21
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method private sendSupplicantConnectionChangedBroadcast(Z)V
    .locals 3
    .param p1, "connected"    # Z

    #@0
    .prologue
    .line 4737
    new-instance v0, Landroid/content/Intent;

    #@2
    const-string/jumbo v1, "android.net.wifi.supplicant.CONNECTION_CHANGE"

    #@5
    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@8
    .line 4738
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x4000000

    #@a
    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@d
    .line 4739
    const-string/jumbo v1, "connected"

    #@10
    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    #@13
    .line 4740
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@15
    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@17
    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    #@1a
    .line 4736
    return-void
.end method

.method private setCountryCode()V
    .locals 3

    #@0
    .prologue
    .line 3607
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@2
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@5
    move-result-object v1

    #@6
    .line 3608
    const-string/jumbo v2, "wifi_country_code"

    #@9
    .line 3607
    invoke-static {v1, v2}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    #@c
    move-result-object v0

    #@d
    .line 3609
    .local v0, "countryCode":Ljava/lang/String;
    if-eqz v0, :cond_0

    #@f
    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    #@12
    move-result v1

    #@13
    if-eqz v1, :cond_1

    #@15
    .line 3606
    :cond_0
    :goto_0
    return-void

    #@16
    .line 3610
    :cond_1
    const/4 v1, 0x0

    #@17
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->setCountryCode(Ljava/lang/String;Z)V

    #@1a
    goto :goto_0
.end method

.method private setFrequencyBand()V
    .locals 4

    #@0
    .prologue
    .line 3620
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@2
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@5
    move-result-object v1

    #@6
    .line 3621
    const-string/jumbo v2, "wifi_frequency_band"

    #@9
    const/4 v3, 0x0

    #@a
    .line 3620
    invoke-static {v1, v2, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@d
    move-result v0

    #@e
    .line 3623
    .local v0, "band":I
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@10
    invoke-virtual {v1, v0}, Lcom/android/server/wifi/WifiNative;->setBand(I)Z

    #@13
    move-result v1

    #@14
    if-eqz v1, :cond_1

    #@16
    .line 3624
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mFrequencyBand:Ljava/util/concurrent/atomic/AtomicInteger;

    #@18
    invoke-virtual {v1, v0}, Ljava/util/concurrent/atomic/AtomicInteger;->set(I)V

    #@1b
    .line 3625
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@1d
    if-eqz v1, :cond_0

    #@1f
    .line 3626
    new-instance v1, Ljava/lang/StringBuilder;

    #@21
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@24
    const-string/jumbo v2, "done set frequency band "

    #@27
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2a
    move-result-object v1

    #@2b
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2e
    move-result-object v1

    #@2f
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@32
    move-result-object v1

    #@33
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@36
    .line 3619
    :cond_0
    :goto_0
    return-void

    #@37
    .line 3629
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    #@39
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@3c
    const-string/jumbo v2, "Failed to set frequency band "

    #@3f
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42
    move-result-object v1

    #@43
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@46
    move-result-object v1

    #@47
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4a
    move-result-object v1

    #@4b
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@4e
    goto :goto_0
.end method

.method private setNetworkDetailedState(Landroid/net/NetworkInfo$DetailedState;)Z
    .locals 5
    .param p1, "state"    # Landroid/net/NetworkInfo$DetailedState;

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    const/4 v3, 0x0

    #@2
    .line 4749
    const/4 v0, 0x0

    #@3
    .line 4751
    .local v0, "hidden":Z
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@5
    if-nez v1, :cond_0

    #@7
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->isRoaming()Z

    #@a
    move-result v1

    #@b
    if-eqz v1, :cond_1

    #@d
    .line 4764
    :cond_0
    const/4 v0, 0x1

    #@e
    .line 4766
    :cond_1
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@10
    if-eqz v1, :cond_2

    #@12
    .line 4767
    new-instance v1, Ljava/lang/StringBuilder;

    #@14
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@17
    const-string/jumbo v2, "setDetailed state, old ="

    #@1a
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v1

    #@1e
    .line 4768
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@20
    invoke-virtual {v2}, Landroid/net/NetworkInfo;->getDetailedState()Landroid/net/NetworkInfo$DetailedState;

    #@23
    move-result-object v2

    #@24
    .line 4767
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v1

    #@28
    .line 4768
    const-string/jumbo v2, " and new state="

    #@2b
    .line 4767
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e
    move-result-object v1

    #@2f
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v1

    #@33
    .line 4769
    const-string/jumbo v2, " hidden="

    #@36
    .line 4767
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@39
    move-result-object v1

    #@3a
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@3d
    move-result-object v1

    #@3e
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@41
    move-result-object v1

    #@42
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@45
    .line 4771
    :cond_2
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@47
    invoke-virtual {v1}, Landroid/net/NetworkInfo;->getExtraInfo()Ljava/lang/String;

    #@4a
    move-result-object v1

    #@4b
    if-eqz v1, :cond_4

    #@4d
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4f
    invoke-virtual {v1}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@52
    move-result-object v1

    #@53
    if-eqz v1, :cond_4

    #@55
    .line 4773
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@57
    invoke-virtual {v1}, Landroid/net/NetworkInfo;->getExtraInfo()Ljava/lang/String;

    #@5a
    move-result-object v1

    #@5b
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@5d
    invoke-virtual {v2}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@60
    move-result-object v2

    #@61
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@64
    move-result v1

    #@65
    if-nez v1, :cond_4

    #@67
    .line 4774
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@69
    if-eqz v1, :cond_3

    #@6b
    .line 4775
    new-instance v1, Ljava/lang/StringBuilder;

    #@6d
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@70
    const-string/jumbo v2, "setDetailed state send new extra info"

    #@73
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@76
    move-result-object v1

    #@77
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@79
    invoke-virtual {v2}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@7c
    move-result-object v2

    #@7d
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@80
    move-result-object v1

    #@81
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@84
    move-result-object v1

    #@85
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@88
    .line 4777
    :cond_3
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@8a
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@8c
    invoke-virtual {v2}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@8f
    move-result-object v2

    #@90
    invoke-virtual {v1, v2}, Landroid/net/NetworkInfo;->setExtraInfo(Ljava/lang/String;)V

    #@93
    .line 4778
    invoke-direct {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->sendNetworkStateChangeBroadcast(Ljava/lang/String;)V

    #@96
    .line 4781
    :cond_4
    if-eqz v0, :cond_5

    #@98
    .line 4782
    return v4

    #@99
    .line 4785
    :cond_5
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@9b
    invoke-virtual {v1}, Landroid/net/NetworkInfo;->getDetailedState()Landroid/net/NetworkInfo$DetailedState;

    #@9e
    move-result-object v1

    #@9f
    if-eq p1, v1, :cond_7

    #@a1
    .line 4786
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@a3
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@a5
    invoke-virtual {v2}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@a8
    move-result-object v2

    #@a9
    invoke-virtual {v1, p1, v3, v2}, Landroid/net/NetworkInfo;->setDetailedState(Landroid/net/NetworkInfo$DetailedState;Ljava/lang/String;Ljava/lang/String;)V

    #@ac
    .line 4787
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@ae
    if-eqz v1, :cond_6

    #@b0
    .line 4788
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@b2
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@b4
    invoke-virtual {v1, v2}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;->sendNetworkInfo(Landroid/net/NetworkInfo;)V

    #@b7
    .line 4790
    :cond_6
    invoke-direct {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->sendNetworkStateChangeBroadcast(Ljava/lang/String;)V

    #@ba
    .line 4791
    const/4 v1, 0x1

    #@bb
    return v1

    #@bc
    .line 4793
    :cond_7
    return v4
.end method

.method private setRandomMacOui()Z
    .locals 10

    #@0
    .prologue
    const/4 v9, 0x2

    #@1
    const/16 v8, 0x10

    #@3
    const/4 v7, 0x1

    #@4
    const/4 v6, 0x0

    #@5
    .line 1534
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@7
    invoke-virtual {v3}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@a
    move-result-object v3

    #@b
    new-array v4, v7, [Ljava/lang/Object;

    #@d
    .line 1535
    const-string/jumbo v5, "DA-A1-19"

    #@10
    aput-object v5, v4, v6

    #@12
    const v5, 0x104001e

    #@15
    .line 1534
    invoke-virtual {v3, v5, v4}, Landroid/content/res/Resources;->getString(I[Ljava/lang/Object;)Ljava/lang/String;

    #@18
    move-result-object v0

    #@19
    .line 1536
    .local v0, "oui":Ljava/lang/String;
    const-string/jumbo v3, "-"

    #@1c
    invoke-virtual {v0, v3}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@1f
    move-result-object v2

    #@20
    .line 1537
    .local v2, "ouiParts":[Ljava/lang/String;
    const/4 v3, 0x3

    #@21
    new-array v1, v3, [B

    #@23
    .line 1538
    .local v1, "ouiBytes":[B
    aget-object v3, v2, v6

    #@25
    invoke-static {v3, v8}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I

    #@28
    move-result v3

    #@29
    and-int/lit16 v3, v3, 0xff

    #@2b
    int-to-byte v3, v3

    #@2c
    aput-byte v3, v1, v6

    #@2e
    .line 1539
    aget-object v3, v2, v7

    #@30
    invoke-static {v3, v8}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I

    #@33
    move-result v3

    #@34
    and-int/lit16 v3, v3, 0xff

    #@36
    int-to-byte v3, v3

    #@37
    aput-byte v3, v1, v7

    #@39
    .line 1540
    aget-object v3, v2, v9

    #@3b
    invoke-static {v3, v8}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I

    #@3e
    move-result v3

    #@3f
    and-int/lit16 v3, v3, 0xff

    #@41
    int-to-byte v3, v3

    #@42
    aput-byte v3, v1, v9

    #@44
    .line 1542
    new-instance v3, Ljava/lang/StringBuilder;

    #@46
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@49
    const-string/jumbo v4, "Setting OUI to "

    #@4c
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4f
    move-result-object v3

    #@50
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@53
    move-result-object v3

    #@54
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@57
    move-result-object v3

    #@58
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@5b
    .line 1543
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@5d
    invoke-static {v1}, Lcom/android/server/wifi/WifiNative;->setScanningMacOui([B)Z

    #@60
    move-result v3

    #@61
    return v3
.end method

.method private setScanAlarm(Z)V
    .locals 7
    .param p1, "enabled"    # Z

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 1458
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@3
    if-eqz v1, :cond_0

    #@5
    .line 1460
    if-eqz p1, :cond_2

    #@7
    const-string/jumbo v0, "enabled"

    #@a
    .line 1461
    .local v0, "state":Ljava/lang/String;
    :goto_0
    new-instance v1, Ljava/lang/StringBuilder;

    #@c
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@f
    const-string/jumbo v2, "setScanAlarm "

    #@12
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15
    move-result-object v1

    #@16
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v1

    #@1a
    .line 1462
    const-string/jumbo v2, " defaultperiod "

    #@1d
    .line 1461
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@20
    move-result-object v1

    #@21
    .line 1462
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultFrameworkScanIntervalMs:I

    #@23
    .line 1461
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@26
    move-result-object v1

    #@27
    .line 1463
    const-string/jumbo v2, " mBackgroundScanSupported "

    #@2a
    .line 1461
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v1

    #@2e
    .line 1463
    iget-boolean v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mBackgroundScanSupported:Z

    #@30
    .line 1461
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@33
    move-result-object v1

    #@34
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@37
    move-result-object v1

    #@38
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@3b
    .line 1465
    .end local v0    # "state":Ljava/lang/String;
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mBackgroundScanSupported:Z

    #@3d
    if-nez v1, :cond_1

    #@3f
    .line 1469
    const/4 p1, 0x1

    #@40
    .line 1472
    .end local p1    # "enabled":Z
    :cond_1
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mAlarmEnabled:Z

    #@42
    if-ne p1, v1, :cond_3

    #@44
    return-void

    #@45
    .line 1460
    .restart local p1    # "enabled":Z
    :cond_2
    const-string/jumbo v0, "disabled"

    #@48
    .restart local v0    # "state":Ljava/lang/String;
    goto :goto_0

    #@49
    .line 1473
    .end local v0    # "state":Ljava/lang/String;
    .end local p1    # "enabled":Z
    :cond_3
    if-eqz p1, :cond_4

    #@4b
    .line 1476
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mAlarmManager:Landroid/app/AlarmManager;

    #@4d
    .line 1477
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@50
    move-result-wide v2

    #@51
    iget v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mDefaultFrameworkScanIntervalMs:I

    #@53
    int-to-long v4, v4

    #@54
    add-long/2addr v2, v4

    #@55
    .line 1478
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanIntent:Landroid/app/PendingIntent;

    #@57
    .line 1476
    invoke-virtual {v1, v6, v2, v3, v4}, Landroid/app/AlarmManager;->set(IJLandroid/app/PendingIntent;)V

    #@5a
    .line 1479
    const/4 v1, 0x1

    #@5b
    iput-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mAlarmEnabled:Z

    #@5d
    .line 1457
    :goto_1
    return-void

    #@5e
    .line 1481
    :cond_4
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mAlarmManager:Landroid/app/AlarmManager;

    #@60
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanIntent:Landroid/app/PendingIntent;

    #@62
    invoke-virtual {v1, v2}, Landroid/app/AlarmManager;->cancel(Landroid/app/PendingIntent;)V

    #@65
    .line 1482
    iput-boolean v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mAlarmEnabled:Z

    #@67
    goto :goto_1
.end method

.method private setScanResults()V
    .locals 41

    #@0
    .prologue
    .line 3781
    const/4 v13, 0x0

    #@1
    move-object/from16 v0, p0

    #@3
    iput v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mNumScanResultsKnown:I

    #@5
    .line 3782
    const/4 v13, 0x0

    #@6
    move-object/from16 v0, p0

    #@8
    iput v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mNumScanResultsReturned:I

    #@a
    .line 3783
    const-string/jumbo v16, ""

    #@d
    .line 3784
    .local v16, "bssid":Ljava/lang/String;
    const/4 v5, 0x0

    #@e
    .line 3785
    .local v5, "level":I
    const/4 v9, 0x0

    #@f
    .line 3786
    .local v9, "freq":I
    const-wide/16 v10, 0x0

    #@11
    .line 3787
    .local v10, "tsf":J
    const-string/jumbo v8, ""

    #@14
    .line 3788
    .local v8, "flags":Ljava/lang/String;
    const/4 v6, 0x0

    #@15
    .line 3791
    .local v6, "wifiSsid":Landroid/net/wifi/WifiSsid;
    new-instance v33, Ljava/lang/StringBuffer;

    #@17
    invoke-direct/range {v33 .. v33}, Ljava/lang/StringBuffer;-><init>()V

    #@1a
    .line 3792
    .local v33, "scanResultsBuf":Ljava/lang/StringBuffer;
    const/16 v35, 0x0

    #@1c
    .line 3795
    .local v35, "sid":I
    :cond_0
    move-object/from16 v0, p0

    #@1e
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@20
    move/from16 v0, v35

    #@22
    invoke-virtual {v13, v0}, Lcom/android/server/wifi/WifiNative;->scanResults(I)Ljava/lang/String;

    #@25
    move-result-object v37

    #@26
    .line 3796
    .local v37, "tmpResults":Ljava/lang/String;
    invoke-static/range {v37 .. v37}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    #@29
    move-result v13

    #@2a
    if-eqz v13, :cond_2

    #@2c
    .line 3820
    :goto_0
    invoke-virtual/range {v33 .. v33}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    #@2f
    move-result-object v32

    #@30
    .line 3821
    .local v32, "scanResults":Ljava/lang/String;
    invoke-static/range {v32 .. v32}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    #@33
    move-result v13

    #@34
    if-eqz v13, :cond_6

    #@36
    .line 3822
    move-object/from16 v0, p0

    #@38
    iget v13, v0, Lcom/android/server/wifi/WifiStateMachine;->emptyScanResultCount:I

    #@3a
    add-int/lit8 v13, v13, 0x1

    #@3c
    move-object/from16 v0, p0

    #@3e
    iput v13, v0, Lcom/android/server/wifi/WifiStateMachine;->emptyScanResultCount:I

    #@40
    .line 3823
    move-object/from16 v0, p0

    #@42
    iget v13, v0, Lcom/android/server/wifi/WifiStateMachine;->emptyScanResultCount:I

    #@44
    const/16 v14, 0xa

    #@46
    if-le v13, v14, :cond_1

    #@48
    .line 3826
    new-instance v13, Ljava/util/ArrayList;

    #@4a
    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V

    #@4d
    move-object/from16 v0, p0

    #@4f
    iput-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@51
    .line 3828
    :cond_1
    return-void

    #@52
    .line 3797
    .end local v32    # "scanResults":Ljava/lang/String;
    :cond_2
    move-object/from16 v0, v33

    #@54
    move-object/from16 v1, v37

    #@56
    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    #@59
    .line 3798
    const-string/jumbo v13, "\n"

    #@5c
    move-object/from16 v0, v33

    #@5e
    invoke-virtual {v0, v13}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    #@61
    .line 3799
    const-string/jumbo v13, "\n"

    #@64
    move-object/from16 v0, v37

    #@66
    invoke-virtual {v0, v13}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@69
    move-result-object v31

    #@6a
    .line 3800
    .local v31, "lines":[Ljava/lang/String;
    const/16 v35, -0x1

    #@6c
    .line 3801
    move-object/from16 v0, v31

    #@6e
    array-length v13, v0

    #@6f
    add-int/lit8 v27, v13, -0x1

    #@71
    .local v27, "i":I
    :goto_1
    if-ltz v27, :cond_3

    #@73
    .line 3802
    aget-object v13, v31, v27

    #@75
    const-string/jumbo v14, "####"

    #@78
    invoke-virtual {v13, v14}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    #@7b
    move-result v13

    #@7c
    if-eqz v13, :cond_4

    #@7e
    .line 3813
    :cond_3
    :goto_2
    const/4 v13, -0x1

    #@7f
    move/from16 v0, v35

    #@81
    if-ne v0, v13, :cond_0

    #@83
    goto :goto_0

    #@84
    .line 3804
    :cond_4
    aget-object v13, v31, v27

    #@86
    const-string/jumbo v14, "id="

    #@89
    invoke-virtual {v13, v14}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    #@8c
    move-result v13

    #@8d
    if-eqz v13, :cond_5

    #@8f
    .line 3806
    :try_start_0
    aget-object v13, v31, v27

    #@91
    const-string/jumbo v14, "id="

    #@94
    invoke-virtual {v14}, Ljava/lang/String;->length()I

    #@97
    move-result v14

    #@98
    invoke-virtual {v13, v14}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@9b
    move-result-object v13

    #@9c
    invoke-static {v13}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_4

    #@9f
    move-result v13

    #@a0
    add-int/lit8 v35, v13, 0x1

    #@a2
    goto :goto_2

    #@a3
    .line 3801
    :cond_5
    add-int/lit8 v27, v27, -0x1

    #@a5
    goto :goto_1

    #@a6
    .line 3831
    .end local v27    # "i":I
    .end local v31    # "lines":[Ljava/lang/String;
    .restart local v32    # "scanResults":Ljava/lang/String;
    :cond_6
    const/4 v13, 0x0

    #@a7
    move-object/from16 v0, p0

    #@a9
    iput v13, v0, Lcom/android/server/wifi/WifiStateMachine;->emptyScanResultCount:I

    #@ab
    .line 3833
    move-object/from16 v0, p0

    #@ad
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@af
    const/4 v14, 0x0

    #@b0
    invoke-virtual {v13, v14}, Lcom/android/server/wifi/WifiConfigStore;->trimANQPCache(Z)V

    #@b3
    .line 3838
    move-object/from16 v0, p0

    #@b5
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResultCache:Landroid/util/LruCache;

    #@b7
    move-object/from16 v39, v0

    #@b9
    monitor-enter v39

    #@ba
    .line 3839
    :try_start_1
    new-instance v13, Ljava/util/ArrayList;

    #@bc
    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V

    #@bf
    move-object/from16 v0, p0

    #@c1
    iput-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@c3
    .line 3840
    const-string/jumbo v13, "\n"

    #@c6
    move-object/from16 v0, v32

    #@c8
    invoke-virtual {v0, v13}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@cb
    move-result-object v31

    #@cc
    .line 3841
    .restart local v31    # "lines":[Ljava/lang/String;
    const-string/jumbo v13, "bssid="

    #@cf
    invoke-virtual {v13}, Ljava/lang/String;->length()I

    #@d2
    move-result v23

    #@d3
    .line 3842
    .local v23, "bssidStrLen":I
    const-string/jumbo v13, "flags="

    #@d6
    invoke-virtual {v13}, Ljava/lang/String;->length()I

    #@d9
    move-result v25

    #@da
    .line 3843
    .local v25, "flagLen":I
    const/16 v29, 0x0

    #@dc
    .line 3844
    .local v29, "infoElements":Ljava/lang/String;
    const/4 v2, 0x0

    #@dd
    .line 3846
    .local v2, "anqpLines":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const/4 v13, 0x0

    #@de
    move-object/from16 v0, v31

    #@e0
    array-length v0, v0

    #@e1
    move/from16 v40, v0

    #@e3
    move/from16 v38, v13

    #@e5
    .end local v2    # "anqpLines":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v6    # "wifiSsid":Landroid/net/wifi/WifiSsid;
    .end local v16    # "bssid":Ljava/lang/String;
    .end local v29    # "infoElements":Ljava/lang/String;
    :goto_3
    move/from16 v0, v38

    #@e7
    move/from16 v1, v40

    #@e9
    if-ge v0, v1, :cond_17

    #@eb
    aget-object v30, v31, v38

    #@ed
    .line 3847
    .local v30, "line":Ljava/lang/String;
    const-string/jumbo v13, "bssid="

    #@f0
    move-object/from16 v0, v30

    #@f2
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    #@f5
    move-result v13

    #@f6
    if-eqz v13, :cond_8

    #@f8
    .line 3848
    new-instance v22, Ljava/lang/String;

    #@fa
    invoke-virtual/range {v30 .. v30}, Ljava/lang/String;->getBytes()[B

    #@fd
    move-result-object v13

    #@fe
    invoke-virtual/range {v30 .. v30}, Ljava/lang/String;->length()I

    #@101
    move-result v14

    #@102
    sub-int v14, v14, v23

    #@104
    move-object/from16 v0, v22

    #@106
    move/from16 v1, v23

    #@108
    invoke-direct {v0, v13, v1, v14}, Ljava/lang/String;-><init>([BII)V

    #@10b
    .local v22, "bssid":Ljava/lang/String;
    move-object/from16 v16, v22

    #@10d
    .line 3846
    .end local v22    # "bssid":Ljava/lang/String;
    :cond_7
    :goto_4
    add-int/lit8 v13, v38, 0x1

    #@10f
    move/from16 v38, v13

    #@111
    goto :goto_3

    #@112
    .line 3849
    :cond_8
    const-string/jumbo v13, "freq="

    #@115
    move-object/from16 v0, v30

    #@117
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@11a
    move-result v13

    #@11b
    if-eqz v13, :cond_9

    #@11d
    .line 3851
    :try_start_2
    const-string/jumbo v13, "freq="

    #@120
    invoke-virtual {v13}, Ljava/lang/String;->length()I

    #@123
    move-result v13

    #@124
    move-object/from16 v0, v30

    #@126
    invoke-virtual {v0, v13}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@129
    move-result-object v13

    #@12a
    invoke-static {v13}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_2
    .catch Ljava/lang/NumberFormatException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@12d
    move-result v9

    #@12e
    goto :goto_4

    #@12f
    .line 3852
    :catch_0
    move-exception v24

    #@130
    .line 3853
    .local v24, "e":Ljava/lang/NumberFormatException;
    const/4 v9, 0x0

    #@131
    goto :goto_4

    #@132
    .line 3855
    .end local v24    # "e":Ljava/lang/NumberFormatException;
    :cond_9
    :try_start_3
    const-string/jumbo v13, "level="

    #@135
    move-object/from16 v0, v30

    #@137
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@13a
    move-result v13

    #@13b
    if-eqz v13, :cond_a

    #@13d
    .line 3857
    :try_start_4
    const-string/jumbo v13, "level="

    #@140
    invoke-virtual {v13}, Ljava/lang/String;->length()I

    #@143
    move-result v13

    #@144
    move-object/from16 v0, v30

    #@146
    invoke-virtual {v0, v13}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@149
    move-result-object v13

    #@14a
    invoke-static {v13}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_4
    .catch Ljava/lang/NumberFormatException; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@14d
    move-result v5

    #@14e
    .line 3861
    if-lez v5, :cond_7

    #@150
    add-int/lit16 v5, v5, -0x100

    #@152
    goto :goto_4

    #@153
    .line 3862
    :catch_1
    move-exception v24

    #@154
    .line 3863
    .restart local v24    # "e":Ljava/lang/NumberFormatException;
    const/4 v5, 0x0

    #@155
    goto :goto_4

    #@156
    .line 3865
    .end local v24    # "e":Ljava/lang/NumberFormatException;
    :cond_a
    :try_start_5
    const-string/jumbo v13, "tsf="

    #@159
    move-object/from16 v0, v30

    #@15b
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@15e
    move-result v13

    #@15f
    if-eqz v13, :cond_b

    #@161
    .line 3867
    :try_start_6
    const-string/jumbo v13, "tsf="

    #@164
    invoke-virtual {v13}, Ljava/lang/String;->length()I

    #@167
    move-result v13

    #@168
    move-object/from16 v0, v30

    #@16a
    invoke-virtual {v0, v13}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@16d
    move-result-object v13

    #@16e
    invoke-static {v13}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J
    :try_end_6
    .catch Ljava/lang/NumberFormatException; {:try_start_6 .. :try_end_6} :catch_2
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@171
    move-result-wide v10

    #@172
    goto :goto_4

    #@173
    .line 3868
    :catch_2
    move-exception v24

    #@174
    .line 3869
    .restart local v24    # "e":Ljava/lang/NumberFormatException;
    const-wide/16 v10, 0x0

    #@176
    goto :goto_4

    #@177
    .line 3871
    .end local v24    # "e":Ljava/lang/NumberFormatException;
    :cond_b
    :try_start_7
    const-string/jumbo v13, "flags="

    #@17a
    move-object/from16 v0, v30

    #@17c
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    #@17f
    move-result v13

    #@180
    if-eqz v13, :cond_c

    #@182
    .line 3872
    new-instance v26, Ljava/lang/String;

    #@184
    invoke-virtual/range {v30 .. v30}, Ljava/lang/String;->getBytes()[B

    #@187
    move-result-object v13

    #@188
    invoke-virtual/range {v30 .. v30}, Ljava/lang/String;->length()I

    #@18b
    move-result v14

    #@18c
    sub-int v14, v14, v25

    #@18e
    move-object/from16 v0, v26

    #@190
    move/from16 v1, v25

    #@192
    invoke-direct {v0, v13, v1, v14}, Ljava/lang/String;-><init>([BII)V

    #@195
    .end local v8    # "flags":Ljava/lang/String;
    .local v26, "flags":Ljava/lang/String;
    move-object/from16 v8, v26

    #@197
    .end local v26    # "flags":Ljava/lang/String;
    .restart local v8    # "flags":Ljava/lang/String;
    goto/16 :goto_4

    #@199
    .line 3873
    :cond_c
    const-string/jumbo v13, "ssid="

    #@19c
    move-object/from16 v0, v30

    #@19e
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    #@1a1
    move-result v13

    #@1a2
    if-eqz v13, :cond_d

    #@1a4
    .line 3875
    const-string/jumbo v13, "ssid="

    #@1a7
    invoke-virtual {v13}, Ljava/lang/String;->length()I

    #@1aa
    move-result v13

    #@1ab
    move-object/from16 v0, v30

    #@1ad
    invoke-virtual {v0, v13}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@1b0
    move-result-object v13

    #@1b1
    .line 3874
    invoke-static {v13}, Landroid/net/wifi/WifiSsid;->createFromAsciiEncoded(Ljava/lang/String;)Landroid/net/wifi/WifiSsid;

    #@1b4
    move-result-object v6

    #@1b5
    .local v6, "wifiSsid":Landroid/net/wifi/WifiSsid;
    goto/16 :goto_4

    #@1b7
    .line 3876
    .end local v6    # "wifiSsid":Landroid/net/wifi/WifiSsid;
    :cond_d
    const-string/jumbo v13, "ie="

    #@1ba
    move-object/from16 v0, v30

    #@1bc
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    #@1bf
    move-result v13

    #@1c0
    if-eqz v13, :cond_e

    #@1c2
    .line 3877
    move-object/from16 v29, v30

    #@1c4
    .local v29, "infoElements":Ljava/lang/String;
    goto/16 :goto_4

    #@1c6
    .line 3878
    .end local v29    # "infoElements":Ljava/lang/String;
    :cond_e
    invoke-static/range {v30 .. v30}, Lcom/android/server/wifi/hotspot2/SupplicantBridge;->isAnqpAttribute(Ljava/lang/String;)Z

    #@1c9
    move-result v13

    #@1ca
    if-eqz v13, :cond_10

    #@1cc
    .line 3879
    if-nez v2, :cond_f

    #@1ce
    .line 3880
    new-instance v2, Ljava/util/ArrayList;

    #@1d0
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@1d3
    .line 3882
    :cond_f
    move-object/from16 v0, v30

    #@1d5
    invoke-interface {v2, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    #@1d8
    goto/16 :goto_4

    #@1da
    .line 3838
    .end local v23    # "bssidStrLen":I
    .end local v25    # "flagLen":I
    .end local v30    # "line":Ljava/lang/String;
    .end local v31    # "lines":[Ljava/lang/String;
    :catchall_0
    move-exception v13

    #@1db
    monitor-exit v39

    #@1dc
    throw v13

    #@1dd
    .line 3883
    .restart local v23    # "bssidStrLen":I
    .restart local v25    # "flagLen":I
    .restart local v30    # "line":Ljava/lang/String;
    .restart local v31    # "lines":[Ljava/lang/String;
    :cond_10
    :try_start_8
    const-string/jumbo v13, "===="

    #@1e0
    move-object/from16 v0, v30

    #@1e2
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    #@1e5
    move-result v13

    #@1e6
    if-nez v13, :cond_11

    #@1e8
    const-string/jumbo v13, "####"

    #@1eb
    move-object/from16 v0, v30

    #@1ed
    invoke-virtual {v0, v13}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    #@1f0
    move-result v13

    #@1f1
    if-eqz v13, :cond_7

    #@1f3
    .line 3884
    :cond_11
    if-eqz v16, :cond_14

    #@1f5
    .line 3887
    :try_start_9
    new-instance v4, Lcom/android/server/wifi/hotspot2/NetworkDetail;

    #@1f7
    move-object/from16 v0, v16

    #@1f9
    move-object/from16 v1, v29

    #@1fb
    invoke-direct {v4, v0, v1, v2, v9}, Lcom/android/server/wifi/hotspot2/NetworkDetail;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;I)V

    #@1fe
    .line 3889
    .local v4, "networkDetail":Lcom/android/server/wifi/hotspot2/NetworkDetail;
    if-eqz v6, :cond_15

    #@200
    invoke-virtual {v6}, Landroid/net/wifi/WifiSsid;->toString()Ljava/lang/String;

    #@203
    move-result-object v7

    #@204
    .line 3890
    .local v7, "xssid":Ljava/lang/String;
    :goto_5
    invoke-virtual {v4}, Lcom/android/server/wifi/hotspot2/NetworkDetail;->getTrimmedSSID()Ljava/lang/String;

    #@207
    move-result-object v13

    #@208
    invoke-virtual {v7, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@20b
    move-result v13

    #@20c
    if-nez v13, :cond_12

    #@20e
    .line 3892
    const-string/jumbo v13, "Inconsistent SSID on BSSID \'%s\': \'%s\' vs \'%s\': %s"

    #@211
    .line 3891
    const/4 v14, 0x4

    #@212
    new-array v14, v14, [Ljava/lang/Object;

    #@214
    .line 3893
    const/4 v15, 0x0

    #@215
    aput-object v16, v14, v15

    #@217
    const/4 v15, 0x1

    #@218
    aput-object v7, v14, v15

    #@21a
    invoke-virtual {v4}, Lcom/android/server/wifi/hotspot2/NetworkDetail;->getSSID()Ljava/lang/String;

    #@21d
    move-result-object v15

    #@21e
    const/16 v17, 0x2

    #@220
    aput-object v15, v14, v17

    #@222
    const/4 v15, 0x3

    #@223
    aput-object v29, v14, v15

    #@225
    .line 3891
    invoke-static {v13, v14}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@228
    move-result-object v13

    #@229
    move-object/from16 v0, p0

    #@22b
    invoke-virtual {v0, v13}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@22e
    .line 3896
    :cond_12
    invoke-virtual {v4}, Lcom/android/server/wifi/hotspot2/NetworkDetail;->hasInterworking()Z

    #@231
    move-result v13

    #@232
    if-eqz v13, :cond_13

    #@234
    .line 3897
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getClass()Ljava/lang/Class;

    #@237
    move-result-object v13

    #@238
    invoke-static {v13}, Lcom/android/server/wifi/hotspot2/Utils;->hs2LogTag(Ljava/lang/Class;)Ljava/lang/String;

    #@23b
    move-result-object v13

    #@23c
    new-instance v14, Ljava/lang/StringBuilder;

    #@23e
    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    #@241
    const-string/jumbo v15, "HSNwk: \'"

    #@244
    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@247
    move-result-object v14

    #@248
    invoke-virtual {v14, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@24b
    move-result-object v14

    #@24c
    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@24f
    move-result-object v14

    #@250
    invoke-static {v13, v14}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@253
    .line 3900
    :cond_13
    move-object/from16 v0, p0

    #@255
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResultCache:Landroid/util/LruCache;

    #@257
    invoke-virtual {v13, v4}, Landroid/util/LruCache;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@25a
    move-result-object v3

    #@25b
    check-cast v3, Lcom/android/server/wifi/ScanDetail;

    #@25d
    .line 3901
    .local v3, "scanDetail":Lcom/android/server/wifi/ScanDetail;
    if-eqz v3, :cond_16

    #@25f
    .line 3902
    invoke-virtual/range {v3 .. v11}, Lcom/android/server/wifi/ScanDetail;->updateResults(Lcom/android/server/wifi/hotspot2/NetworkDetail;ILandroid/net/wifi/WifiSsid;Ljava/lang/String;Ljava/lang/String;IJ)V

    #@262
    .line 3910
    :goto_6
    move-object/from16 v0, p0

    #@264
    iget v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mNumScanResultsReturned:I

    #@266
    add-int/lit8 v13, v13, 0x1

    #@268
    move-object/from16 v0, p0

    #@26a
    iput v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mNumScanResultsReturned:I

    #@26c
    .line 3912
    move-object/from16 v0, p0

    #@26e
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@270
    invoke-interface {v13, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_9
    .catch Ljava/lang/IllegalArgumentException; {:try_start_9 .. :try_end_9} :catch_3
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    #@273
    .line 3917
    .end local v3    # "scanDetail":Lcom/android/server/wifi/ScanDetail;
    .end local v4    # "networkDetail":Lcom/android/server/wifi/hotspot2/NetworkDetail;
    .end local v7    # "xssid":Ljava/lang/String;
    :cond_14
    :goto_7
    const/16 v16, 0x0

    #@275
    .line 3918
    .local v16, "bssid":Ljava/lang/String;
    const/4 v5, 0x0

    #@276
    .line 3919
    const/4 v9, 0x0

    #@277
    .line 3920
    const-wide/16 v10, 0x0

    #@279
    .line 3921
    :try_start_a
    const-string/jumbo v8, ""
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    #@27c
    .line 3922
    const/4 v6, 0x0

    #@27d
    .line 3923
    .local v6, "wifiSsid":Landroid/net/wifi/WifiSsid;
    const/16 v29, 0x0

    #@27f
    .line 3924
    .local v29, "infoElements":Ljava/lang/String;
    const/4 v2, 0x0

    #@280
    .restart local v2    # "anqpLines":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    goto/16 :goto_4

    #@282
    .line 3889
    .end local v2    # "anqpLines":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v6    # "wifiSsid":Landroid/net/wifi/WifiSsid;
    .end local v16    # "bssid":Ljava/lang/String;
    .end local v29    # "infoElements":Ljava/lang/String;
    .restart local v4    # "networkDetail":Lcom/android/server/wifi/hotspot2/NetworkDetail;
    :cond_15
    :try_start_b
    const-string/jumbo v7, "<unknown ssid>"

    #@285
    .restart local v7    # "xssid":Ljava/lang/String;
    goto/16 :goto_5

    #@287
    .line 3905
    .restart local v3    # "scanDetail":Lcom/android/server/wifi/ScanDetail;
    :cond_16
    new-instance v3, Lcom/android/server/wifi/ScanDetail;

    #@289
    .end local v3    # "scanDetail":Lcom/android/server/wifi/ScanDetail;
    move-object v13, v3

    #@28a
    move-object v14, v4

    #@28b
    move-object v15, v6

    #@28c
    move-object/from16 v17, v8

    #@28e
    move/from16 v18, v5

    #@290
    move/from16 v19, v9

    #@292
    move-wide/from16 v20, v10

    #@294
    invoke-direct/range {v13 .. v21}, Lcom/android/server/wifi/ScanDetail;-><init>(Lcom/android/server/wifi/hotspot2/NetworkDetail;Landroid/net/wifi/WifiSsid;Ljava/lang/String;Ljava/lang/String;IIJ)V

    #@297
    .line 3907
    .restart local v3    # "scanDetail":Lcom/android/server/wifi/ScanDetail;
    move-object/from16 v0, p0

    #@299
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResultCache:Landroid/util/LruCache;

    #@29b
    invoke-virtual {v13, v4, v3}, Landroid/util/LruCache;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_b
    .catch Ljava/lang/IllegalArgumentException; {:try_start_b .. :try_end_b} :catch_3
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    #@29e
    goto :goto_6

    #@29f
    .line 3913
    .end local v3    # "scanDetail":Lcom/android/server/wifi/ScanDetail;
    .end local v4    # "networkDetail":Lcom/android/server/wifi/hotspot2/NetworkDetail;
    .end local v7    # "xssid":Ljava/lang/String;
    :catch_3
    move-exception v28

    #@2a0
    .line 3914
    .local v28, "iae":Ljava/lang/IllegalArgumentException;
    :try_start_c
    const-string/jumbo v13, "WifiStateMachine"

    #@2a3
    new-instance v14, Ljava/lang/StringBuilder;

    #@2a5
    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    #@2a8
    const-string/jumbo v15, "Failed to parse information elements: "

    #@2ab
    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2ae
    move-result-object v14

    #@2af
    move-object/from16 v0, v28

    #@2b1
    invoke-virtual {v14, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2b4
    move-result-object v14

    #@2b5
    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b8
    move-result-object v14

    #@2b9
    invoke-static {v13, v14}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    #@2bc
    goto :goto_7

    #@2bd
    .end local v28    # "iae":Ljava/lang/IllegalArgumentException;
    .end local v30    # "line":Ljava/lang/String;
    :cond_17
    monitor-exit v39

    #@2be
    .line 3931
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@2c1
    move-result-wide v14

    #@2c2
    move-object/from16 v0, p0

    #@2c4
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastConnectAttemptTimestamp:J

    #@2c6
    move-wide/from16 v18, v0

    #@2c8
    sub-long v14, v14, v18

    #@2ca
    const-wide/16 v18, 0xbb8

    #@2cc
    cmp-long v13, v14, v18

    #@2ce
    if-lez v13, :cond_20

    #@2d0
    const/4 v12, 0x1

    #@2d1
    .line 3932
    .local v12, "attemptAutoJoin":Z
    :goto_8
    move-object/from16 v0, p0

    #@2d3
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@2d5
    invoke-virtual {v13}, Landroid/net/wifi/WifiInfo;->getSupplicantState()Landroid/net/wifi/SupplicantState;

    #@2d8
    move-result-object v36

    #@2d9
    .line 3933
    .local v36, "state":Landroid/net/wifi/SupplicantState;
    move-object/from16 v0, p0

    #@2db
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2dd
    invoke-virtual {v13}, Lcom/android/server/wifi/WifiConfigStore;->getLastSelectedConfiguration()Ljava/lang/String;

    #@2e0
    move-result-object v34

    #@2e1
    .line 3934
    .local v34, "selection":Ljava/lang/String;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@2e4
    move-result-object v13

    #@2e5
    move-object/from16 v0, p0

    #@2e7
    iget-object v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mRoamingState:Lcom/android/internal/util/State;

    #@2e9
    if-eq v13, v14, :cond_18

    #@2eb
    .line 3935
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@2ee
    move-result-object v13

    #@2ef
    move-object/from16 v0, p0

    #@2f1
    iget-object v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mObtainingIpState:Lcom/android/internal/util/State;

    #@2f3
    if-ne v13, v14, :cond_21

    #@2f5
    .line 3950
    :cond_18
    :goto_9
    const/4 v12, 0x0

    #@2f6
    .line 3952
    :cond_19
    sget-boolean v13, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@2f8
    if-eqz v13, :cond_1b

    #@2fa
    .line 3953
    if-nez v34, :cond_1a

    #@2fc
    .line 3954
    const-string/jumbo v34, "<none>"

    #@2ff
    .line 3956
    :cond_1a
    new-instance v13, Ljava/lang/StringBuilder;

    #@301
    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    #@304
    const-string/jumbo v14, "wifi setScanResults state"

    #@307
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30a
    move-result-object v13

    #@30b
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@30e
    move-result-object v14

    #@30f
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@312
    move-result-object v13

    #@313
    .line 3957
    const-string/jumbo v14, " sup_state="

    #@316
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@319
    move-result-object v13

    #@31a
    move-object/from16 v0, v36

    #@31c
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@31f
    move-result-object v13

    #@320
    .line 3958
    const-string/jumbo v14, " debouncing="

    #@323
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@326
    move-result-object v13

    #@327
    .line 3958
    move-object/from16 v0, p0

    #@329
    iget-boolean v14, v0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@32b
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@32e
    move-result-object v13

    #@32f
    .line 3959
    const-string/jumbo v14, " mConnectionRequests="

    #@332
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@335
    move-result-object v13

    #@336
    .line 3959
    move-object/from16 v0, p0

    #@338
    iget v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectionRequests:I

    #@33a
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@33d
    move-result-object v13

    #@33e
    .line 3960
    const-string/jumbo v14, " selection="

    #@341
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@344
    move-result-object v13

    #@345
    move-object/from16 v0, v34

    #@347
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@34a
    move-result-object v13

    #@34b
    .line 3961
    const-string/jumbo v14, " mNumScanResultsReturned "

    #@34e
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@351
    move-result-object v13

    #@352
    .line 3961
    move-object/from16 v0, p0

    #@354
    iget v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mNumScanResultsReturned:I

    #@356
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@359
    move-result-object v13

    #@35a
    .line 3962
    const-string/jumbo v14, " mScanResults "

    #@35d
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@360
    move-result-object v13

    #@361
    .line 3962
    move-object/from16 v0, p0

    #@363
    iget-object v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@365
    invoke-interface {v14}, Ljava/util/List;->size()I

    #@368
    move-result v14

    #@369
    .line 3956
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@36c
    move-result-object v13

    #@36d
    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@370
    move-result-object v13

    #@371
    move-object/from16 v0, p0

    #@373
    invoke-virtual {v0, v13}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@376
    .line 3964
    :cond_1b
    if-eqz v12, :cond_1c

    #@378
    .line 3965
    sget v13, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_PROCESSED:I

    #@37a
    move-object/from16 v0, p0

    #@37c
    iput v13, v0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@37e
    .line 3968
    :cond_1c
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getDisconnectedTimeMilli()J

    #@381
    move-result-wide v14

    #@382
    move-object/from16 v0, p0

    #@384
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@386
    iget v13, v13, Lcom/android/server/wifi/WifiConfigStore;->wifiConfigLastSelectionHysteresis:I

    #@388
    int-to-long v0, v13

    #@389
    move-wide/from16 v18, v0

    #@38b
    cmp-long v13, v14, v18

    #@38d
    if-lez v13, :cond_1d

    #@38f
    .line 3969
    move-object/from16 v0, p0

    #@391
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@393
    const/4 v14, -0x1

    #@394
    invoke-virtual {v13, v14}, Lcom/android/server/wifi/WifiConfigStore;->setLastSelectedConfiguration(I)V

    #@397
    .line 3972
    :cond_1d
    if-eqz v12, :cond_1e

    #@399
    .line 3973
    move-object/from16 v0, p0

    #@39b
    iget-object v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResultCache:Landroid/util/LruCache;

    #@39d
    monitor-enter v14

    #@39e
    .line 3976
    :try_start_d
    move-object/from16 v0, p0

    #@3a0
    iget-object v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiAutoJoinController:Lcom/android/server/wifi/WifiAutoJoinController;

    #@3a2
    invoke-virtual {v13, v12}, Lcom/android/server/wifi/WifiAutoJoinController;->newSupplicantResults(Z)I

    #@3a5
    move-result v13

    #@3a6
    move-object/from16 v0, p0

    #@3a8
    iput v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mNumScanResultsKnown:I
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_1

    #@3aa
    monitor-exit v14

    #@3ab
    .line 3979
    :cond_1e
    move-object/from16 v0, p0

    #@3ad
    iget-boolean v13, v0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@3af
    if-eqz v13, :cond_1f

    #@3b1
    .line 3984
    move-object/from16 v0, p0

    #@3b3
    iget v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@3b5
    const v14, 0x20091

    #@3b8
    const/4 v15, 0x1

    #@3b9
    const/16 v17, 0x0

    #@3bb
    move-object/from16 v0, p0

    #@3bd
    move-object/from16 v1, v17

    #@3bf
    invoke-virtual {v0, v14, v13, v15, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@3c2
    .line 3780
    :cond_1f
    return-void

    #@3c3
    .line 3931
    .end local v12    # "attemptAutoJoin":Z
    .end local v34    # "selection":Ljava/lang/String;
    .end local v36    # "state":Landroid/net/wifi/SupplicantState;
    :cond_20
    const/4 v12, 0x0

    #@3c4
    .restart local v12    # "attemptAutoJoin":Z
    goto/16 :goto_8

    #@3c6
    .line 3936
    .restart local v34    # "selection":Ljava/lang/String;
    .restart local v36    # "state":Landroid/net/wifi/SupplicantState;
    :cond_21
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@3c9
    move-result-object v13

    #@3ca
    move-object/from16 v0, p0

    #@3cc
    iget-object v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanModeState:Lcom/android/internal/util/State;

    #@3ce
    if-eq v13, v14, :cond_18

    #@3d0
    .line 3937
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@3d3
    move-result-object v13

    #@3d4
    move-object/from16 v0, p0

    #@3d6
    iget-object v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectingState:Lcom/android/internal/util/State;

    #@3d8
    if-eq v13, v14, :cond_18

    #@3da
    .line 3938
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@3dd
    move-result-object v13

    #@3de
    move-object/from16 v0, p0

    #@3e0
    iget-object v14, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@3e2
    if-ne v13, v14, :cond_22

    #@3e4
    .line 3939
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getEnableAutoJoinWhenAssociated()Z

    #@3e7
    move-result v13

    #@3e8
    if-eqz v13, :cond_18

    #@3ea
    .line 3940
    :cond_22
    move-object/from16 v0, p0

    #@3ec
    iget-boolean v13, v0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@3ee
    .line 3934
    if-nez v13, :cond_18

    #@3f0
    .line 3941
    sget-object v13, Landroid/net/wifi/SupplicantState;->ASSOCIATING:Landroid/net/wifi/SupplicantState;

    #@3f2
    move-object/from16 v0, v36

    #@3f4
    if-eq v0, v13, :cond_18

    #@3f6
    .line 3942
    sget-object v13, Landroid/net/wifi/SupplicantState;->AUTHENTICATING:Landroid/net/wifi/SupplicantState;

    #@3f8
    move-object/from16 v0, v36

    #@3fa
    if-eq v0, v13, :cond_18

    #@3fc
    .line 3943
    sget-object v13, Landroid/net/wifi/SupplicantState;->FOUR_WAY_HANDSHAKE:Landroid/net/wifi/SupplicantState;

    #@3fe
    move-object/from16 v0, v36

    #@400
    if-eq v0, v13, :cond_18

    #@402
    .line 3944
    sget-object v13, Landroid/net/wifi/SupplicantState;->GROUP_HANDSHAKE:Landroid/net/wifi/SupplicantState;

    #@404
    move-object/from16 v0, v36

    #@406
    if-eq v0, v13, :cond_18

    #@408
    .line 3947
    move-object/from16 v0, p0

    #@40a
    iget v13, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectionRequests:I

    #@40c
    if-nez v13, :cond_19

    #@40e
    if-nez v34, :cond_19

    #@410
    goto/16 :goto_9

    #@412
    .line 3973
    :catchall_1
    move-exception v13

    #@413
    monitor-exit v14

    #@414
    throw v13

    #@415
    .line 3807
    .end local v12    # "attemptAutoJoin":Z
    .end local v23    # "bssidStrLen":I
    .end local v25    # "flagLen":I
    .end local v32    # "scanResults":Ljava/lang/String;
    .end local v34    # "selection":Ljava/lang/String;
    .end local v36    # "state":Landroid/net/wifi/SupplicantState;
    .restart local v6    # "wifiSsid":Landroid/net/wifi/WifiSsid;
    .local v16, "bssid":Ljava/lang/String;
    .restart local v27    # "i":I
    :catch_4
    move-exception v24

    #@416
    .restart local v24    # "e":Ljava/lang/NumberFormatException;
    goto/16 :goto_2
.end method

.method private setSuspendOptimizations(IZ)V
    .locals 2
    .param p1, "reason"    # I
    .param p2, "enabled"    # Z

    #@0
    .prologue
    .line 3666
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    new-instance v0, Ljava/lang/StringBuilder;

    #@6
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@9
    const-string/jumbo v1, "setSuspendOptimizations: "

    #@c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v0

    #@10
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@13
    move-result-object v0

    #@14
    const-string/jumbo v1, " "

    #@17
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v0

    #@1b
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v0

    #@1f
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@22
    move-result-object v0

    #@23
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@26
    .line 3667
    :cond_0
    if-eqz p2, :cond_2

    #@28
    .line 3668
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@2a
    not-int v1, p1

    #@2b
    and-int/2addr v0, v1

    #@2c
    iput v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@2e
    .line 3672
    :goto_0
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@30
    if-eqz v0, :cond_1

    #@32
    new-instance v0, Ljava/lang/StringBuilder;

    #@34
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@37
    const-string/jumbo v1, "mSuspendOptNeedsDisabled "

    #@3a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d
    move-result-object v0

    #@3e
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@40
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@43
    move-result-object v0

    #@44
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@47
    move-result-object v0

    #@48
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@4b
    .line 3665
    :cond_1
    return-void

    #@4c
    .line 3670
    :cond_2
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@4e
    or-int/2addr v0, p1

    #@4f
    iput v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@51
    goto :goto_0
.end method

.method private setSuspendOptimizationsNative(IZ)V
    .locals 7
    .param p1, "reason"    # I
    .param p2, "enabled"    # Z

    #@0
    .prologue
    const/4 v6, 0x5

    #@1
    const/4 v5, 0x4

    #@2
    const/4 v4, 0x3

    #@3
    const/4 v3, 0x2

    #@4
    const/4 v2, 0x0

    #@5
    .line 3636
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@7
    if-eqz v0, :cond_0

    #@9
    .line 3637
    new-instance v0, Ljava/lang/StringBuilder;

    #@b
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@e
    const-string/jumbo v1, "setSuspendOptimizationsNative: "

    #@11
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14
    move-result-object v0

    #@15
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@18
    move-result-object v0

    #@19
    const-string/jumbo v1, " "

    #@1c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v0

    #@20
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@23
    move-result-object v0

    #@24
    .line 3638
    const-string/jumbo v1, " -want "

    #@27
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2a
    move-result-object v0

    #@2b
    .line 3638
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@2d
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    #@30
    move-result v1

    #@31
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@34
    move-result-object v0

    #@35
    .line 3639
    const-string/jumbo v1, " stack:"

    #@38
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3b
    move-result-object v0

    #@3c
    .line 3639
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@3f
    move-result-object v1

    #@40
    invoke-virtual {v1}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@43
    move-result-object v1

    #@44
    aget-object v1, v1, v3

    #@46
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@49
    move-result-object v1

    #@4a
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4d
    move-result-object v0

    #@4e
    .line 3640
    const-string/jumbo v1, " - "

    #@51
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@54
    move-result-object v0

    #@55
    .line 3640
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@58
    move-result-object v1

    #@59
    invoke-virtual {v1}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@5c
    move-result-object v1

    #@5d
    aget-object v1, v1, v4

    #@5f
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@62
    move-result-object v1

    #@63
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@66
    move-result-object v0

    #@67
    .line 3641
    const-string/jumbo v1, " - "

    #@6a
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6d
    move-result-object v0

    #@6e
    .line 3641
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@71
    move-result-object v1

    #@72
    invoke-virtual {v1}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@75
    move-result-object v1

    #@76
    aget-object v1, v1, v5

    #@78
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@7b
    move-result-object v1

    #@7c
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v0

    #@80
    .line 3642
    const-string/jumbo v1, " - "

    #@83
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@86
    move-result-object v0

    #@87
    .line 3642
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@8a
    move-result-object v1

    #@8b
    invoke-virtual {v1}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@8e
    move-result-object v1

    #@8f
    aget-object v1, v1, v6

    #@91
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@94
    move-result-object v1

    #@95
    .line 3637
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@98
    move-result-object v0

    #@99
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9c
    move-result-object v0

    #@9d
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@a0
    .line 3646
    :cond_0
    if-eqz p2, :cond_3

    #@a2
    .line 3647
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@a4
    not-int v1, p1

    #@a5
    and-int/2addr v0, v1

    #@a6
    iput v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@a8
    .line 3649
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@aa
    if-nez v0, :cond_2

    #@ac
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@ae
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    #@b1
    move-result v0

    #@b2
    if-eqz v0, :cond_2

    #@b4
    .line 3650
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@b6
    if-eqz v0, :cond_1

    #@b8
    .line 3651
    new-instance v0, Ljava/lang/StringBuilder;

    #@ba
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@bd
    const-string/jumbo v1, "setSuspendOptimizationsNative do it "

    #@c0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c3
    move-result-object v0

    #@c4
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c7
    move-result-object v0

    #@c8
    const-string/jumbo v1, " "

    #@cb
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ce
    move-result-object v0

    #@cf
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@d2
    move-result-object v0

    #@d3
    .line 3652
    const-string/jumbo v1, " stack:"

    #@d6
    .line 3651
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d9
    move-result-object v0

    #@da
    .line 3652
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@dd
    move-result-object v1

    #@de
    invoke-virtual {v1}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@e1
    move-result-object v1

    #@e2
    aget-object v1, v1, v3

    #@e4
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@e7
    move-result-object v1

    #@e8
    .line 3651
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@eb
    move-result-object v0

    #@ec
    .line 3653
    const-string/jumbo v1, " - "

    #@ef
    .line 3651
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f2
    move-result-object v0

    #@f3
    .line 3653
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@f6
    move-result-object v1

    #@f7
    invoke-virtual {v1}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@fa
    move-result-object v1

    #@fb
    aget-object v1, v1, v4

    #@fd
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@100
    move-result-object v1

    #@101
    .line 3651
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@104
    move-result-object v0

    #@105
    .line 3654
    const-string/jumbo v1, " - "

    #@108
    .line 3651
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10b
    move-result-object v0

    #@10c
    .line 3654
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@10f
    move-result-object v1

    #@110
    invoke-virtual {v1}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@113
    move-result-object v1

    #@114
    aget-object v1, v1, v5

    #@116
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@119
    move-result-object v1

    #@11a
    .line 3651
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11d
    move-result-object v0

    #@11e
    .line 3655
    const-string/jumbo v1, " - "

    #@121
    .line 3651
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@124
    move-result-object v0

    #@125
    .line 3655
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    #@128
    move-result-object v1

    #@129
    invoke-virtual {v1}, Ljava/lang/Thread;->getStackTrace()[Ljava/lang/StackTraceElement;

    #@12c
    move-result-object v1

    #@12d
    aget-object v1, v1, v6

    #@12f
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    #@132
    move-result-object v1

    #@133
    .line 3651
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@136
    move-result-object v0

    #@137
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@13a
    move-result-object v0

    #@13b
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@13e
    .line 3657
    :cond_1
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@140
    const/4 v1, 0x1

    #@141
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiNative;->setSuspendOptimizations(Z)Z

    #@144
    .line 3635
    :cond_2
    :goto_0
    return-void

    #@145
    .line 3660
    :cond_3
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@147
    or-int/2addr v0, p1

    #@148
    iput v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@14a
    .line 3661
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@14c
    invoke-virtual {v0, v2}, Lcom/android/server/wifi/WifiNative;->setSuspendOptimizations(Z)Z

    #@14f
    goto :goto_0
.end method

.method private setWifiApState(II)V
    .locals 5
    .param p1, "wifiApState"    # I
    .param p2, "reason"    # I

    #@0
    .prologue
    .line 3700
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@5
    move-result v2

    #@6
    .line 3703
    .local v2, "previousWifiApState":I
    const/16 v3, 0xd

    #@8
    if-ne p1, v3, :cond_3

    #@a
    .line 3704
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@c
    invoke-interface {v3}, Lcom/android/internal/app/IBatteryStats;->noteWifiOn()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@f
    .line 3713
    :cond_0
    :goto_0
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@11
    invoke-virtual {v3, p1}, Ljava/util/concurrent/atomic/AtomicInteger;->set(I)V

    #@14
    .line 3715
    sget-boolean v3, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@16
    if-eqz v3, :cond_1

    #@18
    new-instance v3, Ljava/lang/StringBuilder;

    #@1a
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@1d
    const-string/jumbo v4, "setWifiApState: "

    #@20
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v3

    #@24
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->syncGetWifiApStateByName()Ljava/lang/String;

    #@27
    move-result-object v4

    #@28
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2b
    move-result-object v3

    #@2c
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2f
    move-result-object v3

    #@30
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@33
    .line 3717
    :cond_1
    new-instance v1, Landroid/content/Intent;

    #@35
    const-string/jumbo v3, "android.net.wifi.WIFI_AP_STATE_CHANGED"

    #@38
    invoke-direct {v1, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@3b
    .line 3718
    .local v1, "intent":Landroid/content/Intent;
    const/high16 v3, 0x4000000

    #@3d
    invoke-virtual {v1, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@40
    .line 3719
    const-string/jumbo v3, "wifi_state"

    #@43
    invoke-virtual {v1, v3, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    #@46
    .line 3720
    const-string/jumbo v3, "previous_wifi_state"

    #@49
    invoke-virtual {v1, v3, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    #@4c
    .line 3721
    const/16 v3, 0xe

    #@4e
    if-ne p1, v3, :cond_2

    #@50
    .line 3723
    const-string/jumbo v3, "wifi_ap_error_code"

    #@53
    invoke-virtual {v1, v3, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    #@56
    .line 3726
    :cond_2
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@58
    sget-object v4, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@5a
    invoke-virtual {v3, v1, v4}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    #@5d
    .line 3699
    return-void

    #@5e
    .line 3705
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_3
    const/16 v3, 0xb

    #@60
    if-ne p1, v3, :cond_0

    #@62
    .line 3706
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@64
    invoke-interface {v3}, Lcom/android/internal/app/IBatteryStats;->noteWifiOff()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@67
    goto :goto_0

    #@68
    .line 3708
    :catch_0
    move-exception v0

    #@69
    .line 3709
    .local v0, "e":Landroid/os/RemoteException;
    const-string/jumbo v3, "Failed to note battery stats in wifi"

    #@6c
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@6f
    goto :goto_0
.end method

.method private setWifiState(I)V
    .locals 5
    .param p1, "wifiState"    # I

    #@0
    .prologue
    .line 3676
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@5
    move-result v2

    #@6
    .line 3679
    .local v2, "previousWifiState":I
    const/4 v3, 0x3

    #@7
    if-ne p1, v3, :cond_2

    #@9
    .line 3680
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@b
    invoke-interface {v3}, Lcom/android/internal/app/IBatteryStats;->noteWifiOn()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@e
    .line 3688
    :cond_0
    :goto_0
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@10
    invoke-virtual {v3, p1}, Ljava/util/concurrent/atomic/AtomicInteger;->set(I)V

    #@13
    .line 3690
    sget-boolean v3, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@15
    if-eqz v3, :cond_1

    #@17
    new-instance v3, Ljava/lang/StringBuilder;

    #@19
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@1c
    const-string/jumbo v4, "setWifiState: "

    #@1f
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@22
    move-result-object v3

    #@23
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->syncGetWifiStateByName()Ljava/lang/String;

    #@26
    move-result-object v4

    #@27
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2a
    move-result-object v3

    #@2b
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2e
    move-result-object v3

    #@2f
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@32
    .line 3692
    :cond_1
    new-instance v1, Landroid/content/Intent;

    #@34
    const-string/jumbo v3, "android.net.wifi.WIFI_STATE_CHANGED"

    #@37
    invoke-direct {v1, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@3a
    .line 3693
    .local v1, "intent":Landroid/content/Intent;
    const/high16 v3, 0x4000000

    #@3c
    invoke-virtual {v1, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@3f
    .line 3694
    const-string/jumbo v3, "wifi_state"

    #@42
    invoke-virtual {v1, v3, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    #@45
    .line 3695
    const-string/jumbo v3, "previous_wifi_state"

    #@48
    invoke-virtual {v1, v3, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    #@4b
    .line 3696
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@4d
    sget-object v4, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@4f
    invoke-virtual {v3, v1, v4}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    #@52
    .line 3675
    return-void

    #@53
    .line 3681
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_2
    const/4 v3, 0x1

    #@54
    if-ne p1, v3, :cond_0

    #@56
    .line 3682
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@58
    invoke-interface {v3}, Lcom/android/internal/app/IBatteryStats;->noteWifiOff()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@5b
    goto :goto_0

    #@5c
    .line 3684
    :catch_0
    move-exception v0

    #@5d
    .line 3685
    .local v0, "e":Landroid/os/RemoteException;
    const-string/jumbo v3, "Failed to note battery stats in wifi"

    #@60
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@63
    goto :goto_0
.end method

.method private startConnectedGScan(Ljava/lang/String;)Z
    .locals 11
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v10, 0x1

    #@1
    .line 3343
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mPnoEnabled:Z

    #@3
    if-nez v1, :cond_0

    #@5
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLazyRoamEnabled:Z

    #@7
    if-eqz v1, :cond_3

    #@9
    .line 3344
    :cond_0
    new-instance v0, Landroid/net/wifi/WifiScanner$ScanSettings;

    #@b
    invoke-direct {v0}, Landroid/net/wifi/WifiScanner$ScanSettings;-><init>()V

    #@e
    .line 3345
    .local v0, "settings":Landroid/net/wifi/WifiScanner$ScanSettings;
    const/4 v1, 0x3

    #@f
    iput v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->band:I

    #@11
    .line 3346
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@14
    move-result-wide v8

    #@15
    .line 3348
    .local v8, "now":J
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@17
    if-eqz v1, :cond_1

    #@19
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@1b
    const-wide/16 v6, 0x0

    #@1d
    cmp-long v1, v4, v6

    #@1f
    if-eqz v1, :cond_4

    #@21
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@23
    cmp-long v1, v8, v4

    #@25
    if-lez v1, :cond_4

    #@27
    .line 3349
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@29
    sub-long v4, v8, v4

    #@2b
    const-wide/32 v6, 0x1d4c0

    #@2e
    cmp-long v1, v4, v6

    #@30
    if-lez v1, :cond_4

    #@32
    .line 3350
    :cond_1
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@34
    iget-object v1, v1, Lcom/android/server/wifi/WifiConfigStore;->wifiAssociatedLongScanIntervalMilli:Ljava/util/concurrent/atomic/AtomicInteger;

    #@36
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@39
    move-result v1

    #@3a
    iput v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->periodInMs:I

    #@3c
    .line 3362
    :goto_0
    iget v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->periodInMs:I

    #@3e
    int-to-long v4, v1

    #@3f
    iput-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanPeriodMilli:J

    #@41
    .line 3363
    const/4 v1, 0x0

    #@42
    iput v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->reportEvents:I

    #@44
    .line 3364
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@46
    if-eqz v1, :cond_2

    #@48
    .line 3365
    new-instance v1, Ljava/lang/StringBuilder;

    #@4a
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@4d
    const-string/jumbo v2, "startConnectedScan: settings band="

    #@50
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@53
    move-result-object v1

    #@54
    iget v2, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->band:I

    #@56
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@59
    move-result-object v1

    #@5a
    .line 3366
    const-string/jumbo v2, " period="

    #@5d
    .line 3365
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@60
    move-result-object v1

    #@61
    .line 3366
    iget v2, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->periodInMs:I

    #@63
    .line 3365
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@66
    move-result-object v1

    #@67
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6a
    move-result-object v1

    #@6b
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@6e
    .line 3369
    :cond_2
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanner:Landroid/net/wifi/WifiScanner;

    #@70
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanListener:Lcom/android/server/wifi/WifiStateMachine$WifiScanListener;

    #@72
    invoke-virtual {v1, v0, v2}, Landroid/net/wifi/WifiScanner;->startBackgroundScan(Landroid/net/wifi/WifiScanner$ScanSettings;Landroid/net/wifi/WifiScanner$ScanListener;)V

    #@75
    .line 3371
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanPeriodMilli:J

    #@77
    long-to-int v1, v4

    #@78
    const v2, 0x2009f

    #@7b
    invoke-virtual {p0, v2, v10, v1, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@7e
    .line 3374
    .end local v0    # "settings":Landroid/net/wifi/WifiScanner$ScanSettings;
    .end local v8    # "now":J
    :cond_3
    return v10

    #@7f
    .line 3352
    .restart local v0    # "settings":Landroid/net/wifi/WifiScanner$ScanSettings;
    .restart local v8    # "now":J
    :cond_4
    iput-wide v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@81
    .line 3353
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@83
    iget-object v1, v1, Lcom/android/server/wifi/WifiConfigStore;->wifiAssociatedShortScanIntervalMilli:Ljava/util/concurrent/atomic/AtomicInteger;

    #@85
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@88
    move-result v1

    #@89
    iput v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->periodInMs:I

    #@8b
    .line 3356
    const v3, 0x249f0

    #@8e
    .line 3358
    .local v3, "delay":I
    sget v4, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@90
    new-instance v1, Ljava/lang/StringBuilder;

    #@92
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@95
    const-string/jumbo v2, " startConnectedGScan "

    #@98
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9b
    move-result-object v1

    #@9c
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9f
    move-result-object v1

    #@a0
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@a3
    move-result-object v5

    #@a4
    .line 3359
    const-wide/32 v6, 0x249f0

    #@a7
    .line 3357
    const v2, 0x2009a

    #@aa
    move-object v1, p0

    #@ab
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/wifi/WifiStateMachine;->sendMessageDelayed(IIILjava/lang/Object;J)V

    #@ae
    .line 3360
    sget v1, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@b0
    add-int/lit8 v1, v1, 0x1

    #@b2
    sput v1, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@b4
    goto :goto_0
.end method

.method private startDelayedScan(ILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V
    .locals 8
    .param p1, "milli"    # I
    .param p2, "settings"    # Landroid/net/wifi/ScanSettings;
    .param p3, "workSource"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 1502
    if-gtz p1, :cond_0

    #@2
    return-void

    #@3
    .line 1511
    :cond_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@5
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    #@8
    .line 1512
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@a
    if-eqz v0, :cond_3

    #@c
    .line 1513
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@f
    move-result-object v0

    #@10
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedState:Lcom/android/internal/util/State;

    #@12
    if-eq v0, v1, :cond_1

    #@14
    .line 1514
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@17
    move-result-object v0

    #@18
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@1a
    if-ne v0, v1, :cond_3

    #@1c
    .line 1515
    :cond_1
    new-instance v5, Landroid/os/Bundle;

    #@1e
    invoke-direct {v5}, Landroid/os/Bundle;-><init>()V

    #@21
    .line 1516
    .local v5, "bundle":Landroid/os/Bundle;
    const-string/jumbo v0, "customized_scan_settings"

    #@24
    invoke-virtual {v5, v0, p2}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    #@27
    .line 1517
    const-string/jumbo v0, "customized_scan_worksource"

    #@2a
    invoke-virtual {v5, v0, p3}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    #@2d
    .line 1518
    const-string/jumbo v0, "scan_request_time"

    #@30
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@33
    move-result-wide v2

    #@34
    invoke-virtual {v5, v0, v2, v3}, Landroid/os/Bundle;->putLong(Ljava/lang/String;J)V

    #@37
    .line 1520
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@39
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@3c
    move-result v4

    #@3d
    int-to-long v6, p1

    #@3e
    .line 1519
    const v2, 0x20047

    #@41
    const/4 v3, -0x2

    #@42
    move-object v1, p0

    #@43
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/wifi/WifiStateMachine;->sendMessageDelayed(IIILjava/lang/Object;J)V

    #@46
    .line 1521
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@48
    if-eqz v0, :cond_2

    #@4a
    new-instance v0, Ljava/lang/StringBuilder;

    #@4c
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@4f
    const-string/jumbo v1, "startDelayedScan send -> "

    #@52
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@55
    move-result-object v0

    #@56
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@58
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5b
    move-result-object v0

    #@5c
    const-string/jumbo v1, " milli "

    #@5f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@62
    move-result-object v0

    #@63
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@66
    move-result-object v0

    #@67
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6a
    move-result-object v0

    #@6b
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@6e
    .line 1501
    .end local v5    # "bundle":Landroid/os/Bundle;
    :cond_2
    :goto_0
    return-void

    #@6f
    .line 1522
    :cond_3
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mBackgroundScanSupported:Z

    #@71
    if-nez v0, :cond_4

    #@73
    .line 1523
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@75
    if-eqz v0, :cond_5

    #@77
    .line 1528
    :cond_4
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@79
    if-eqz v0, :cond_2

    #@7b
    new-instance v0, Ljava/lang/StringBuilder;

    #@7d
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@80
    const-string/jumbo v1, "startDelayedScan unhandled -> "

    #@83
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@86
    move-result-object v0

    #@87
    .line 1529
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@89
    .line 1528
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@8c
    move-result-object v0

    #@8d
    .line 1529
    const-string/jumbo v1, " milli "

    #@90
    .line 1528
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@93
    move-result-object v0

    #@94
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@97
    move-result-object v0

    #@98
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9b
    move-result-object v0

    #@9c
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@9f
    goto :goto_0

    #@a0
    .line 1523
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@a3
    move-result-object v0

    #@a4
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedState:Lcom/android/internal/util/State;

    #@a6
    if-ne v0, v1, :cond_4

    #@a8
    .line 1524
    const/4 v0, 0x1

    #@a9
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->setScanAlarm(Z)V

    #@ac
    .line 1525
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@ae
    if-eqz v0, :cond_2

    #@b0
    new-instance v0, Ljava/lang/StringBuilder;

    #@b2
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@b5
    const-string/jumbo v1, "startDelayedScan start scan alarm -> "

    #@b8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bb
    move-result-object v0

    #@bc
    .line 1526
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@be
    .line 1525
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@c1
    move-result-object v0

    #@c2
    .line 1526
    const-string/jumbo v1, " milli "

    #@c5
    .line 1525
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c8
    move-result-object v0

    #@c9
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@cc
    move-result-object v0

    #@cd
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@d0
    move-result-object v0

    #@d1
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@d4
    goto :goto_0
.end method

.method private startDisconnectedGScan(Ljava/lang/String;)Z
    .locals 12
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v11, 0x1

    #@1
    const/4 v10, 0x0

    #@2
    .line 3383
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanner:Landroid/net/wifi/WifiScanner;

    #@4
    if-nez v1, :cond_0

    #@6
    .line 3384
    const-string/jumbo v1, "startDisconnectedGScan: no wifi scanner"

    #@9
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@c
    .line 3385
    return v10

    #@d
    .line 3388
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mPnoEnabled:Z

    #@f
    if-nez v1, :cond_1

    #@11
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLazyRoamEnabled:Z

    #@13
    if-eqz v1, :cond_4

    #@15
    .line 3389
    :cond_1
    new-instance v0, Landroid/net/wifi/WifiScanner$ScanSettings;

    #@17
    invoke-direct {v0}, Landroid/net/wifi/WifiScanner$ScanSettings;-><init>()V

    #@1a
    .line 3390
    .local v0, "settings":Landroid/net/wifi/WifiScanner$ScanSettings;
    const/4 v1, 0x3

    #@1b
    iput v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->band:I

    #@1d
    .line 3391
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@20
    move-result-wide v8

    #@21
    .line 3394
    .local v8, "now":J
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@23
    if-eqz v1, :cond_2

    #@25
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@27
    const-wide/16 v6, 0x0

    #@29
    cmp-long v1, v4, v6

    #@2b
    if-eqz v1, :cond_5

    #@2d
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@2f
    cmp-long v1, v8, v4

    #@31
    if-lez v1, :cond_5

    #@33
    .line 3395
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@35
    sub-long v4, v8, v4

    #@37
    const-wide/32 v6, 0x1d4c0

    #@3a
    cmp-long v1, v4, v6

    #@3c
    if-lez v1, :cond_5

    #@3e
    .line 3396
    :cond_2
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@40
    iget-object v1, v1, Lcom/android/server/wifi/WifiConfigStore;->wifiDisconnectedLongScanIntervalMilli:Ljava/util/concurrent/atomic/AtomicInteger;

    #@42
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@45
    move-result v1

    #@46
    iput v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->periodInMs:I

    #@48
    .line 3408
    :goto_0
    iget v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->periodInMs:I

    #@4a
    int-to-long v4, v1

    #@4b
    iput-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanPeriodMilli:J

    #@4d
    .line 3409
    iput v10, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->reportEvents:I

    #@4f
    .line 3410
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@51
    if-eqz v1, :cond_3

    #@53
    .line 3411
    new-instance v1, Ljava/lang/StringBuilder;

    #@55
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@58
    const-string/jumbo v2, "startDisconnectedScan: settings band="

    #@5b
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5e
    move-result-object v1

    #@5f
    iget v2, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->band:I

    #@61
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@64
    move-result-object v1

    #@65
    .line 3412
    const-string/jumbo v2, " period="

    #@68
    .line 3411
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6b
    move-result-object v1

    #@6c
    .line 3412
    iget v2, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->periodInMs:I

    #@6e
    .line 3411
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@71
    move-result-object v1

    #@72
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@75
    move-result-object v1

    #@76
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@79
    .line 3414
    :cond_3
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanner:Landroid/net/wifi/WifiScanner;

    #@7b
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanListener:Lcom/android/server/wifi/WifiStateMachine$WifiScanListener;

    #@7d
    invoke-virtual {v1, v0, v2}, Landroid/net/wifi/WifiScanner;->startBackgroundScan(Landroid/net/wifi/WifiScanner$ScanSettings;Landroid/net/wifi/WifiScanner$ScanListener;)V

    #@80
    .line 3416
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanPeriodMilli:J

    #@82
    long-to-int v1, v4

    #@83
    const v2, 0x2009f

    #@86
    invoke-virtual {p0, v2, v11, v1, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@89
    .line 3419
    .end local v0    # "settings":Landroid/net/wifi/WifiScanner$ScanSettings;
    .end local v8    # "now":J
    :cond_4
    return v11

    #@8a
    .line 3398
    .restart local v0    # "settings":Landroid/net/wifi/WifiScanner$ScanSettings;
    .restart local v8    # "now":J
    :cond_5
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@8c
    iget-object v1, v1, Lcom/android/server/wifi/WifiConfigStore;->wifiDisconnectedShortScanIntervalMilli:Ljava/util/concurrent/atomic/AtomicInteger;

    #@8e
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@91
    move-result v1

    #@92
    iput v1, v0, Landroid/net/wifi/WifiScanner$ScanSettings;->periodInMs:I

    #@94
    .line 3399
    iput-wide v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@96
    .line 3402
    const v3, 0x249f0

    #@99
    .line 3404
    .local v3, "delay":I
    sget v4, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@9b
    new-instance v1, Ljava/lang/StringBuilder;

    #@9d
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@a0
    const-string/jumbo v2, " startDisconnectedGScan "

    #@a3
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a6
    move-result-object v1

    #@a7
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@aa
    move-result-object v1

    #@ab
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@ae
    move-result-object v5

    #@af
    .line 3405
    const-wide/32 v6, 0x249f0

    #@b2
    .line 3403
    const v2, 0x2009a

    #@b5
    move-object v1, p0

    #@b6
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/wifi/WifiStateMachine;->sendMessageDelayed(IIILjava/lang/Object;J)V

    #@b9
    .line 3406
    sget v1, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@bb
    add-int/lit8 v1, v1, 0x1

    #@bd
    sput v1, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@bf
    goto :goto_0
.end method

.method private startGScanConnectedModeOffload(Ljava/lang/String;)Z
    .locals 4
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v3, 0x1

    #@1
    const/4 v2, 0x0

    #@2
    .line 3220
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@4
    if-eqz v0, :cond_1

    #@6
    .line 3221
    if-nez p1, :cond_0

    #@8
    .line 3222
    const-string/jumbo p1, ""

    #@b
    .line 3224
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    #@d
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@10
    const-string/jumbo v1, "startGScanConnectedModeOffload "

    #@13
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v0

    #@17
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v0

    #@1b
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1e
    move-result-object v0

    #@1f
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@22
    .line 3226
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    #@24
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@27
    const-string/jumbo v1, "startGScanConnectedModeOffload "

    #@2a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v0

    #@2e
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@31
    move-result-object v0

    #@32
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@35
    move-result-object v0

    #@36
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->stopGScan(Ljava/lang/String;)Z

    #@39
    .line 3227
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@3b
    if-nez v0, :cond_2

    #@3d
    return v2

    #@3e
    .line 3229
    :cond_2
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@40
    if-eqz v0, :cond_3

    #@42
    .line 3230
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@44
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->pauseScan()V

    #@47
    .line 3232
    :cond_3
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->configurePno()Z

    #@4a
    move-result v0

    #@4b
    iput-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mPnoEnabled:Z

    #@4d
    .line 3233
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mPnoEnabled:Z

    #@4f
    if-nez v0, :cond_5

    #@51
    .line 3234
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@53
    if-eqz v0, :cond_4

    #@55
    .line 3235
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@57
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->restartScan()V

    #@5a
    .line 3237
    :cond_4
    return v2

    #@5b
    .line 3239
    :cond_5
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->configureLazyRoam()Z

    #@5e
    move-result v0

    #@5f
    iput-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLazyRoamEnabled:Z

    #@61
    .line 3240
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLazyRoamEnabled:Z

    #@63
    if-nez v0, :cond_7

    #@65
    .line 3241
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@67
    if-eqz v0, :cond_6

    #@69
    .line 3242
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@6b
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->restartScan()V

    #@6e
    .line 3244
    :cond_6
    return v2

    #@6f
    .line 3246
    :cond_7
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@71
    invoke-virtual {v0}, Lcom/android/server/wifi/WifiConfigStore;->getLastSelectedConfiguration()Ljava/lang/String;

    #@74
    move-result-object v0

    #@75
    if-nez v0, :cond_8

    #@77
    .line 3247
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->configureSsidWhiteList()Z

    #@7a
    .line 3249
    :cond_8
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->startConnectedGScan(Ljava/lang/String;)Z

    #@7d
    move-result v0

    #@7e
    if-nez v0, :cond_a

    #@80
    .line 3250
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@82
    if-eqz v0, :cond_9

    #@84
    .line 3251
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@86
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->restartScan()V

    #@89
    .line 3253
    :cond_9
    return v2

    #@8a
    .line 3255
    :cond_a
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@8c
    if-eqz v0, :cond_b

    #@8e
    .line 3256
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@90
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->restartScan()V

    #@93
    .line 3258
    :cond_b
    iput-boolean v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedModeGScanOffloadStarted:Z

    #@95
    .line 3259
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@97
    if-eqz v0, :cond_c

    #@99
    .line 3260
    const-string/jumbo v0, "startGScanConnectedModeOffload success"

    #@9c
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@9f
    .line 3262
    :cond_c
    return v3
.end method

.method private startGScanDisconnectedModeOffload(Ljava/lang/String;)Z
    .locals 3
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 3266
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@3
    if-eqz v0, :cond_0

    #@5
    .line 3267
    new-instance v0, Ljava/lang/StringBuilder;

    #@7
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@a
    const-string/jumbo v1, "startGScanDisconnectedModeOffload "

    #@d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10
    move-result-object v0

    #@11
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14
    move-result-object v0

    #@15
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@18
    move-result-object v0

    #@19
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@1c
    .line 3269
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    #@1e
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@21
    const-string/jumbo v1, "startGScanDisconnectedModeOffload "

    #@24
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v0

    #@28
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2b
    move-result-object v0

    #@2c
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2f
    move-result-object v0

    #@30
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->stopGScan(Ljava/lang/String;)Z

    #@33
    .line 3270
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@35
    if-eqz v0, :cond_1

    #@37
    .line 3271
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@39
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->pauseScan()V

    #@3c
    .line 3273
    :cond_1
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->configurePno()Z

    #@3f
    move-result v0

    #@40
    iput-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mPnoEnabled:Z

    #@42
    .line 3274
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mPnoEnabled:Z

    #@44
    if-nez v0, :cond_3

    #@46
    .line 3275
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@48
    if-eqz v0, :cond_2

    #@4a
    .line 3276
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@4c
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->restartScan()V

    #@4f
    .line 3278
    :cond_2
    return v2

    #@50
    .line 3280
    :cond_3
    invoke-direct {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->startDisconnectedGScan(Ljava/lang/String;)Z

    #@53
    move-result v0

    #@54
    if-nez v0, :cond_5

    #@56
    .line 3281
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@58
    if-eqz v0, :cond_4

    #@5a
    .line 3282
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@5c
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->restartScan()V

    #@5f
    .line 3284
    :cond_4
    return v2

    #@60
    .line 3286
    :cond_5
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->USE_PAUSE_SCANS:Z

    #@62
    if-eqz v0, :cond_6

    #@64
    .line 3287
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@66
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->restartScan()V

    #@69
    .line 3289
    :cond_6
    const/4 v0, 0x1

    #@6a
    return v0
.end method

.method private startScanNative(ILjava/lang/String;)Z
    .locals 3
    .param p1, "type"    # I
    .param p2, "freqs"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v0, 0x0

    #@1
    const/4 v1, 0x1

    #@2
    .line 1943
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@4
    invoke-virtual {v2, p1, p2}, Lcom/android/server/wifi/WifiNative;->scan(ILjava/lang/String;)Z

    #@7
    move-result v2

    #@8
    if-eqz v2, :cond_1

    #@a
    .line 1944
    iput-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsScanOngoing:Z

    #@c
    .line 1945
    if-nez p2, :cond_0

    #@e
    move v0, v1

    #@f
    :cond_0
    iput-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsFullScanOngoing:Z

    #@11
    .line 1946
    iput-object p2, p0, Lcom/android/server/wifi/WifiStateMachine;->lastScanFreqs:Ljava/lang/String;

    #@13
    .line 1947
    return v1

    #@14
    .line 1949
    :cond_1
    return v0
.end method

.method private startSoftApWithConfig(Landroid/net/wifi/WifiConfiguration;)V
    .locals 7
    .param p1, "configuration"    # Landroid/net/wifi/WifiConfiguration;

    #@0
    .prologue
    const/4 v6, 0x6

    #@1
    const v5, 0x20017

    #@4
    const/4 v4, 0x0

    #@5
    .line 5201
    new-instance v0, Landroid/net/wifi/WifiConfiguration;

    #@7
    invoke-direct {v0, p1}, Landroid/net/wifi/WifiConfiguration;-><init>(Landroid/net/wifi/WifiConfiguration;)V

    #@a
    .line 5203
    .local v0, "config":Landroid/net/wifi/WifiConfiguration;
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@c
    if-eqz v1, :cond_0

    #@e
    .line 5204
    const-string/jumbo v1, "WifiStateMachine"

    #@11
    new-instance v2, Ljava/lang/StringBuilder;

    #@13
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@16
    const-string/jumbo v3, "SoftAp config channel is: "

    #@19
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v2

    #@1d
    iget v3, v0, Landroid/net/wifi/WifiConfiguration;->apChannel:I

    #@1f
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@22
    move-result-object v2

    #@23
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@26
    move-result-object v2

    #@27
    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@2a
    .line 5209
    :cond_0
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@2c
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->isHalStarted()Z

    #@2f
    move-result v1

    #@30
    if-eqz v1, :cond_5

    #@32
    .line 5211
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSetCountryCode:Ljava/lang/String;

    #@34
    if-eqz v1, :cond_1

    #@36
    .line 5212
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@38
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSetCountryCode:Ljava/lang/String;

    #@3a
    sget-object v2, Ljava/util/Locale;->ROOT:Ljava/util/Locale;

    #@3c
    invoke-virtual {v1, v2}, Ljava/lang/String;->toUpperCase(Ljava/util/Locale;)Ljava/lang/String;

    #@3f
    move-result-object v1

    #@40
    invoke-static {v1}, Lcom/android/server/wifi/WifiNative;->setCountryCodeHal(Ljava/lang/String;)Z

    #@43
    move-result v1

    #@44
    if-nez v1, :cond_2

    #@46
    .line 5213
    iget v1, v0, Landroid/net/wifi/WifiConfiguration;->apBand:I

    #@48
    if-eqz v1, :cond_2

    #@4a
    .line 5214
    const-string/jumbo v1, "WifiStateMachine"

    #@4d
    const-string/jumbo v2, "Fail to set country code. Can not setup Softap on 5GHz"

    #@50
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@53
    .line 5216
    invoke-virtual {p0, v5, v4}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(II)V

    #@56
    .line 5217
    return-void

    #@57
    .line 5221
    :cond_1
    iget v1, v0, Landroid/net/wifi/WifiConfiguration;->apBand:I

    #@59
    if-eqz v1, :cond_2

    #@5b
    .line 5223
    const-string/jumbo v1, "WifiStateMachine"

    #@5e
    const-string/jumbo v2, "Can not setup softAp on 5GHz without country code!"

    #@61
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@64
    .line 5224
    invoke-virtual {p0, v5, v4}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(II)V

    #@67
    .line 5225
    return-void

    #@68
    .line 5229
    :cond_2
    iget v1, v0, Landroid/net/wifi/WifiConfiguration;->apChannel:I

    #@6a
    if-nez v1, :cond_4

    #@6c
    .line 5230
    iget v1, v0, Landroid/net/wifi/WifiConfiguration;->apBand:I

    #@6e
    invoke-direct {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->chooseApChannel(I)I

    #@71
    move-result v1

    #@72
    iput v1, v0, Landroid/net/wifi/WifiConfiguration;->apChannel:I

    #@74
    .line 5231
    iget v1, v0, Landroid/net/wifi/WifiConfiguration;->apChannel:I

    #@76
    if-nez v1, :cond_4

    #@78
    .line 5232
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@7a
    invoke-static {}, Lcom/android/server/wifi/WifiNative;->isGetChannelsForBandSupported()Z

    #@7d
    move-result v1

    #@7e
    if-eqz v1, :cond_3

    #@80
    .line 5234
    const/4 v1, 0x1

    #@81
    invoke-virtual {p0, v5, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(II)V

    #@84
    .line 5235
    return-void

    #@85
    .line 5239
    :cond_3
    iput v4, v0, Landroid/net/wifi/WifiConfiguration;->apBand:I

    #@87
    .line 5240
    iput v6, v0, Landroid/net/wifi/WifiConfiguration;->apChannel:I

    #@89
    .line 5250
    :cond_4
    :goto_0
    new-instance v1, Ljava/lang/Thread;

    #@8b
    new-instance v2, Lcom/android/server/wifi/WifiStateMachine$9;

    #@8d
    invoke-direct {v2, p0, v0}, Lcom/android/server/wifi/WifiStateMachine$9;-><init>(Lcom/android/server/wifi/WifiStateMachine;Landroid/net/wifi/WifiConfiguration;)V

    #@90
    invoke-direct {v1, v2}, Ljava/lang/Thread;-><init>(Ljava/lang/Runnable;)V

    #@93
    invoke-virtual {v1}, Ljava/lang/Thread;->start()V

    #@96
    .line 5199
    return-void

    #@97
    .line 5246
    :cond_5
    iput v4, v0, Landroid/net/wifi/WifiConfiguration;->apBand:I

    #@99
    .line 5247
    iput v6, v0, Landroid/net/wifi/WifiConfiguration;->apChannel:I

    #@9b
    goto :goto_0
.end method

.method private startTethering(Ljava/util/ArrayList;)Z
    .locals 11
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/String;",
            ">;)Z"
        }
    .end annotation

    #@0
    .prologue
    .local p1, "available":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    const/4 v8, 0x0

    #@1
    .line 3525
    const/4 v5, 0x0

    #@2
    .line 3527
    .local v5, "wifiAvailable":Z
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->checkAndSetConnectivityInstance()V

    #@5
    .line 3529
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mCm:Landroid/net/ConnectivityManager;

    #@7
    invoke-virtual {v7}, Landroid/net/ConnectivityManager;->getTetherableWifiRegexs()[Ljava/lang/String;

    #@a
    move-result-object v6

    #@b
    .line 3531
    .local v6, "wifiRegexs":[Ljava/lang/String;
    invoke-interface {p1}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@e
    move-result-object v3

    #@f
    .local v3, "intf$iterator":Ljava/util/Iterator;
    :cond_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    #@12
    move-result v7

    #@13
    if-eqz v7, :cond_4

    #@15
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@18
    move-result-object v2

    #@19
    check-cast v2, Ljava/lang/String;

    #@1b
    .line 3532
    .local v2, "intf":Ljava/lang/String;
    array-length v9, v6

    #@1c
    move v7, v8

    #@1d
    :goto_0
    if-ge v7, v9, :cond_0

    #@1f
    aget-object v4, v6, v7

    #@21
    .line 3533
    .local v4, "regex":Ljava/lang/String;
    invoke-virtual {v2, v4}, Ljava/lang/String;->matches(Ljava/lang/String;)Z

    #@24
    move-result v10

    #@25
    if-eqz v10, :cond_3

    #@27
    .line 3535
    const/4 v1, 0x0

    #@28
    .line 3537
    .local v1, "ifcg":Landroid/net/InterfaceConfiguration;
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@2a
    invoke-interface {v7, v2}, Landroid/os/INetworkManagementService;->getInterfaceConfig(Ljava/lang/String;)Landroid/net/InterfaceConfiguration;

    #@2d
    move-result-object v1

    #@2e
    .line 3538
    .local v1, "ifcg":Landroid/net/InterfaceConfiguration;
    if-eqz v1, :cond_1

    #@30
    .line 3540
    new-instance v7, Landroid/net/LinkAddress;

    #@32
    .line 3541
    const-string/jumbo v9, "192.168.43.1"

    #@35
    invoke-static {v9}, Landroid/net/NetworkUtils;->numericToInetAddress(Ljava/lang/String;)Ljava/net/InetAddress;

    #@38
    move-result-object v9

    #@39
    const/16 v10, 0x18

    #@3b
    .line 3540
    invoke-direct {v7, v9, v10}, Landroid/net/LinkAddress;-><init>(Ljava/net/InetAddress;I)V

    #@3e
    invoke-virtual {v1, v7}, Landroid/net/InterfaceConfiguration;->setLinkAddress(Landroid/net/LinkAddress;)V

    #@41
    .line 3542
    invoke-virtual {v1}, Landroid/net/InterfaceConfiguration;->setInterfaceUp()V

    #@44
    .line 3544
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@46
    invoke-interface {v7, v2, v1}, Landroid/os/INetworkManagementService;->setInterfaceConfig(Ljava/lang/String;Landroid/net/InterfaceConfiguration;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    #@49
    .line 3551
    :cond_1
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mCm:Landroid/net/ConnectivityManager;

    #@4b
    invoke-virtual {v7, v2}, Landroid/net/ConnectivityManager;->tether(Ljava/lang/String;)I

    #@4e
    move-result v7

    #@4f
    if-eqz v7, :cond_2

    #@51
    .line 3552
    new-instance v7, Ljava/lang/StringBuilder;

    #@53
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    #@56
    const-string/jumbo v9, "Error tethering on "

    #@59
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5c
    move-result-object v7

    #@5d
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@60
    move-result-object v7

    #@61
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@64
    move-result-object v7

    #@65
    invoke-virtual {p0, v7}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@68
    .line 3553
    return v8

    #@69
    .line 3546
    .end local v1    # "ifcg":Landroid/net/InterfaceConfiguration;
    :catch_0
    move-exception v0

    #@6a
    .line 3547
    .local v0, "e":Ljava/lang/Exception;
    new-instance v7, Ljava/lang/StringBuilder;

    #@6c
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    #@6f
    const-string/jumbo v9, "Error configuring interface "

    #@72
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@75
    move-result-object v7

    #@76
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@79
    move-result-object v7

    #@7a
    const-string/jumbo v9, ", :"

    #@7d
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@80
    move-result-object v7

    #@81
    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@84
    move-result-object v7

    #@85
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@88
    move-result-object v7

    #@89
    invoke-virtual {p0, v7}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@8c
    .line 3548
    return v8

    #@8d
    .line 3555
    .end local v0    # "e":Ljava/lang/Exception;
    .restart local v1    # "ifcg":Landroid/net/InterfaceConfiguration;
    :cond_2
    iput-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetherInterfaceName:Ljava/lang/String;

    #@8f
    .line 3556
    const/4 v7, 0x1

    #@90
    return v7

    #@91
    .line 3532
    .end local v1    # "ifcg":Landroid/net/InterfaceConfiguration;
    :cond_3
    add-int/lit8 v7, v7, 0x1

    #@93
    goto :goto_0

    #@94
    .line 3561
    .end local v2    # "intf":Ljava/lang/String;
    .end local v4    # "regex":Ljava/lang/String;
    :cond_4
    return v8
.end method

.method private stopGScan(Ljava/lang/String;)Z
    .locals 3
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    const-wide/16 v0, 0x0

    #@2
    const/4 v2, 0x0

    #@3
    .line 3423
    iput-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanStartTimeMilli:J

    #@5
    .line 3424
    iput-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanPeriodMilli:J

    #@7
    .line 3425
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanner:Landroid/net/wifi/WifiScanner;

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 3426
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanner:Landroid/net/wifi/WifiScanner;

    #@d
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanListener:Lcom/android/server/wifi/WifiStateMachine$WifiScanListener;

    #@f
    invoke-virtual {v0, v1}, Landroid/net/wifi/WifiScanner;->stopBackgroundScan(Landroid/net/wifi/WifiScanner$ScanListener;)V

    #@12
    .line 3428
    :cond_0
    iput-boolean v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedModeGScanOffloadStarted:Z

    #@14
    .line 3430
    const v0, 0x2009f

    #@17
    invoke-virtual {p0, v0, v2, v2, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@1a
    .line 3432
    const/4 v0, 0x1

    #@1b
    return v0
.end method

.method private stopLazyRoam()Z
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 3212
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@4
    move-result v0

    #@5
    if-nez v0, :cond_0

    #@7
    return v2

    #@8
    .line 3213
    :cond_0
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@a
    if-eqz v0, :cond_1

    #@c
    .line 3214
    const-string/jumbo v0, "WifiStateMachine"

    #@f
    const-string/jumbo v1, "stopLazyRoam"

    #@12
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@15
    .line 3216
    :cond_1
    const/4 v0, 0x0

    #@16
    invoke-static {v2, v0}, Lcom/android/server/wifi/WifiNative;->setLazyRoam(ZLcom/android/server/wifi/WifiNative$WifiLazyRoamParams;)Z

    #@19
    move-result v0

    #@1a
    return v0
.end method

.method private stopPnoOffload()V
    .locals 2

    #@0
    .prologue
    .line 3155
    const/4 v0, 0x0

    #@1
    invoke-static {v0, p0}, Lcom/android/server/wifi/WifiNative;->setPnoList([Lcom/android/server/wifi/WifiNative$WifiPnoNetwork;Lcom/android/server/wifi/WifiNative$WifiPnoEventHandler;)Z

    #@4
    move-result v0

    #@5
    if-nez v0, :cond_0

    #@7
    .line 3156
    const-string/jumbo v0, "WifiStateMachine"

    #@a
    const-string/jumbo v1, "Failed to stop pno"

    #@d
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@10
    .line 3152
    :cond_0
    return-void
.end method

.method private stopTethering()V
    .locals 5

    #@0
    .prologue
    .line 3566
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->checkAndSetConnectivityInstance()V

    #@3
    .line 3570
    const/4 v1, 0x0

    #@4
    .line 3572
    .local v1, "ifcg":Landroid/net/InterfaceConfiguration;
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@6
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetherInterfaceName:Ljava/lang/String;

    #@8
    invoke-interface {v2, v3}, Landroid/os/INetworkManagementService;->getInterfaceConfig(Ljava/lang/String;)Landroid/net/InterfaceConfiguration;

    #@b
    move-result-object v1

    #@c
    .line 3573
    .local v1, "ifcg":Landroid/net/InterfaceConfiguration;
    if-eqz v1, :cond_0

    #@e
    .line 3575
    new-instance v2, Landroid/net/LinkAddress;

    #@10
    const-string/jumbo v3, "0.0.0.0"

    #@13
    invoke-static {v3}, Landroid/net/NetworkUtils;->numericToInetAddress(Ljava/lang/String;)Ljava/net/InetAddress;

    #@16
    move-result-object v3

    #@17
    const/4 v4, 0x0

    #@18
    invoke-direct {v2, v3, v4}, Landroid/net/LinkAddress;-><init>(Ljava/net/InetAddress;I)V

    #@1b
    .line 3574
    invoke-virtual {v1, v2}, Landroid/net/InterfaceConfiguration;->setLinkAddress(Landroid/net/LinkAddress;)V

    #@1e
    .line 3576
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNwService:Landroid/os/INetworkManagementService;

    #@20
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetherInterfaceName:Ljava/lang/String;

    #@22
    invoke-interface {v2, v3, v1}, Landroid/os/INetworkManagementService;->setInterfaceConfig(Ljava/lang/String;Landroid/net/InterfaceConfiguration;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    #@25
    .line 3582
    .end local v1    # "ifcg":Landroid/net/InterfaceConfiguration;
    :cond_0
    :goto_0
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mCm:Landroid/net/ConnectivityManager;

    #@27
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetherInterfaceName:Ljava/lang/String;

    #@29
    invoke-virtual {v2, v3}, Landroid/net/ConnectivityManager;->untether(Ljava/lang/String;)I

    #@2c
    move-result v2

    #@2d
    if-eqz v2, :cond_1

    #@2f
    .line 3583
    const-string/jumbo v2, "Untether initiate failed!"

    #@32
    invoke-virtual {p0, v2}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@35
    .line 3564
    :cond_1
    return-void

    #@36
    .line 3578
    :catch_0
    move-exception v0

    #@37
    .line 3579
    .local v0, "e":Ljava/lang/Exception;
    new-instance v2, Ljava/lang/StringBuilder;

    #@39
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@3c
    const-string/jumbo v3, "Error resetting interface "

    #@3f
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42
    move-result-object v2

    #@43
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mTetherInterfaceName:Ljava/lang/String;

    #@45
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@48
    move-result-object v2

    #@49
    const-string/jumbo v3, ", :"

    #@4c
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4f
    move-result-object v2

    #@50
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@53
    move-result-object v2

    #@54
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@57
    move-result-object v2

    #@58
    invoke-virtual {p0, v2}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@5b
    goto :goto_0
.end method

.method static unexpectedDisconnectedReason(I)Z
    .locals 2
    .param p0, "reason"    # I

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    .line 9960
    const/4 v1, 0x2

    #@2
    if-eq p0, v1, :cond_0

    #@4
    .line 9961
    const/4 v1, 0x6

    #@5
    if-ne p0, v1, :cond_1

    #@7
    .line 9960
    :cond_0
    :goto_0
    return v0

    #@8
    .line 9962
    :cond_1
    const/4 v1, 0x7

    #@9
    if-eq p0, v1, :cond_0

    #@b
    .line 9963
    const/16 v1, 0x8

    #@d
    if-eq p0, v1, :cond_0

    #@f
    .line 9964
    const/16 v1, 0x9

    #@11
    if-eq p0, v1, :cond_0

    #@13
    .line 9965
    const/16 v1, 0xe

    #@15
    if-eq p0, v1, :cond_0

    #@17
    .line 9966
    const/16 v1, 0xf

    #@19
    if-eq p0, v1, :cond_0

    #@1b
    .line 9967
    const/16 v1, 0x10

    #@1d
    if-eq p0, v1, :cond_0

    #@1f
    .line 9968
    const/16 v1, 0x12

    #@21
    if-eq p0, v1, :cond_0

    #@23
    .line 9969
    const/16 v1, 0x13

    #@25
    if-eq p0, v1, :cond_0

    #@27
    .line 9970
    const/16 v1, 0x17

    #@29
    if-eq p0, v1, :cond_0

    #@2b
    .line 9971
    const/16 v1, 0x22

    #@2d
    if-eq p0, v1, :cond_0

    #@2f
    const/4 v0, 0x0

    #@30
    goto :goto_0
.end method

.method private updateCapabilities(Landroid/net/wifi/WifiConfiguration;)V
    .locals 2
    .param p1, "config"    # Landroid/net/wifi/WifiConfiguration;

    #@0
    .prologue
    const/16 v1, 0xe

    #@2
    .line 7776
    iget-boolean v0, p1, Landroid/net/wifi/WifiConfiguration;->ephemeral:Z

    #@4
    if-eqz v0, :cond_0

    #@6
    .line 7777
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilities:Landroid/net/NetworkCapabilities;

    #@8
    invoke-virtual {v0, v1}, Landroid/net/NetworkCapabilities;->removeCapability(I)Landroid/net/NetworkCapabilities;

    #@b
    .line 7783
    :goto_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@d
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilities:Landroid/net/NetworkCapabilities;

    #@f
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;->sendNetworkCapabilities(Landroid/net/NetworkCapabilities;)V

    #@12
    .line 7775
    return-void

    #@13
    .line 7780
    :cond_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilities:Landroid/net/NetworkCapabilities;

    #@15
    invoke-virtual {v0, v1}, Landroid/net/NetworkCapabilities;->addCapability(I)Landroid/net/NetworkCapabilities;

    #@18
    goto :goto_0
.end method

.method private updateDefaultRouteMacAddress(I)Ljava/lang/String;
    .locals 8
    .param p1, "timeout"    # I

    #@0
    .prologue
    .line 4630
    const/4 v0, 0x0

    #@1
    .line 4631
    .local v0, "address":Ljava/lang/String;
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@3
    invoke-virtual {v6}, Landroid/net/LinkProperties;->getRoutes()Ljava/util/List;

    #@6
    move-result-object v6

    #@7
    invoke-interface {v6}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@a
    move-result-object v5

    #@b
    .end local v0    # "address":Ljava/lang/String;
    .local v5, "route$iterator":Ljava/util/Iterator;
    :cond_0
    :goto_0
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    #@e
    move-result v6

    #@f
    if-eqz v6, :cond_3

    #@11
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@14
    move-result-object v4

    #@15
    check-cast v4, Landroid/net/RouteInfo;

    #@17
    .line 4632
    .local v4, "route":Landroid/net/RouteInfo;
    invoke-virtual {v4}, Landroid/net/RouteInfo;->isDefaultRoute()Z

    #@1a
    move-result v6

    #@1b
    if-eqz v6, :cond_0

    #@1d
    invoke-virtual {v4}, Landroid/net/RouteInfo;->hasGateway()Z

    #@20
    move-result v6

    #@21
    if-eqz v6, :cond_0

    #@23
    .line 4633
    invoke-virtual {v4}, Landroid/net/RouteInfo;->getGateway()Ljava/net/InetAddress;

    #@26
    move-result-object v2

    #@27
    .line 4634
    .local v2, "gateway":Ljava/net/InetAddress;
    instance-of v6, v2, Ljava/net/Inet4Address;

    #@29
    if-eqz v6, :cond_0

    #@2b
    .line 4635
    sget-boolean v6, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@2d
    if-eqz v6, :cond_1

    #@2f
    .line 4636
    new-instance v6, Ljava/lang/StringBuilder;

    #@31
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@34
    const-string/jumbo v7, "updateDefaultRouteMacAddress found Ipv4 default :"

    #@37
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3a
    move-result-object v6

    #@3b
    .line 4637
    invoke-virtual {v2}, Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;

    #@3e
    move-result-object v7

    #@3f
    .line 4636
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42
    move-result-object v6

    #@43
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@46
    move-result-object v6

    #@47
    invoke-virtual {p0, v6}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@4a
    .line 4639
    :cond_1
    invoke-virtual {v2}, Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;

    #@4d
    move-result-object v6

    #@4e
    invoke-direct {p0, v6}, Lcom/android/server/wifi/WifiStateMachine;->macAddressFromRoute(Ljava/lang/String;)Ljava/lang/String;

    #@51
    move-result-object v0

    #@52
    .line 4641
    .local v0, "address":Ljava/lang/String;
    if-nez v0, :cond_2

    #@54
    if-lez p1, :cond_2

    #@56
    .line 4644
    :try_start_0
    invoke-virtual {v2, p1}, Ljava/net/InetAddress;->isReachable(I)Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@59
    move-result v3

    #@5a
    .line 4650
    .local v3, "reachable":Z
    if-eqz v3, :cond_2

    #@5c
    .line 4652
    invoke-virtual {v2}, Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;

    #@5f
    move-result-object v6

    #@60
    invoke-direct {p0, v6}, Lcom/android/server/wifi/WifiStateMachine;->macAddressFromRoute(Ljava/lang/String;)Ljava/lang/String;

    #@63
    move-result-object v0

    #@64
    .line 4653
    sget-boolean v6, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@66
    if-eqz v6, :cond_2

    #@68
    .line 4654
    new-instance v6, Ljava/lang/StringBuilder;

    #@6a
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@6d
    const-string/jumbo v7, "updateDefaultRouteMacAddress reachable (tried again) :"

    #@70
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@73
    move-result-object v6

    #@74
    .line 4655
    invoke-virtual {v2}, Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;

    #@77
    move-result-object v7

    #@78
    .line 4654
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7b
    move-result-object v6

    #@7c
    .line 4655
    const-string/jumbo v7, " found "

    #@7f
    .line 4654
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@82
    move-result-object v6

    #@83
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@86
    move-result-object v6

    #@87
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8a
    move-result-object v6

    #@8b
    invoke-virtual {p0, v6}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@8e
    .line 4660
    .end local v3    # "reachable":Z
    :cond_2
    :goto_1
    if-eqz v0, :cond_0

    #@90
    .line 4661
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@92
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@94
    invoke-virtual {v6, v7, v0}, Lcom/android/server/wifi/WifiConfigStore;->setDefaultGwMacAddress(ILjava/lang/String;)V

    #@97
    goto/16 :goto_0

    #@99
    .line 4645
    :catch_0
    move-exception v1

    #@9a
    .line 4646
    .local v1, "e":Ljava/lang/Exception;
    :try_start_1
    new-instance v6, Ljava/lang/StringBuilder;

    #@9c
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@9f
    const-string/jumbo v7, "updateDefaultRouteMacAddress exception reaching :"

    #@a2
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a5
    move-result-object v6

    #@a6
    .line 4647
    invoke-virtual {v2}, Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;

    #@a9
    move-result-object v7

    #@aa
    .line 4646
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ad
    move-result-object v6

    #@ae
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@b1
    move-result-object v6

    #@b2
    invoke-virtual {p0, v6}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@b5
    goto :goto_1

    #@b6
    .line 4649
    .end local v1    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v6

    #@b7
    throw v6

    #@b8
    .line 4666
    .end local v0    # "address":Ljava/lang/String;
    .end local v2    # "gateway":Ljava/net/InetAddress;
    .end local v4    # "route":Landroid/net/RouteInfo;
    :cond_3
    return-object v0
.end method

.method private updateLinkProperties(I)V
    .locals 11
    .param p1, "reason"    # I

    #@0
    .prologue
    const v10, 0x2008a

    #@3
    const v9, 0x2008b

    #@6
    .line 4483
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->makeLinkProperties()Landroid/net/LinkProperties;

    #@9
    move-result-object v4

    #@a
    .line 4485
    .local v4, "newLp":Landroid/net/LinkProperties;
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@c
    invoke-virtual {v4, v7}, Landroid/net/LinkProperties;->equals(Ljava/lang/Object;)Z

    #@f
    move-result v7

    #@10
    if-eqz v7, :cond_d

    #@12
    const/4 v2, 0x0

    #@13
    .line 4486
    .local v2, "linkChanged":Z
    :goto_0
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@15
    invoke-direct {p0, v7}, Lcom/android/server/wifi/WifiStateMachine;->isProvisioned(Landroid/net/LinkProperties;)Z

    #@18
    move-result v6

    #@19
    .line 4487
    .local v6, "wasProvisioned":Z
    invoke-direct {p0, v4}, Lcom/android/server/wifi/WifiStateMachine;->isProvisioned(Landroid/net/LinkProperties;)Z

    #@1c
    move-result v1

    #@1d
    .line 4489
    .local v1, "isProvisioned":Z
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@1f
    invoke-virtual {v7}, Landroid/net/LinkProperties;->hasIPv4Address()Z

    #@22
    move-result v7

    #@23
    if-eqz v7, :cond_0

    #@25
    invoke-virtual {v4}, Landroid/net/LinkProperties;->hasIPv4Address()Z

    #@28
    move-result v7

    #@29
    if-eqz v7, :cond_e

    #@2b
    :cond_0
    const/4 v3, 0x0

    #@2c
    .line 4490
    .local v3, "lostIPv4Provisioning":Z
    :goto_1
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->getNetworkDetailedState()Landroid/net/NetworkInfo$DetailedState;

    #@2f
    move-result-object v0

    #@30
    .line 4492
    .local v0, "detailedState":Landroid/net/NetworkInfo$DetailedState;
    if-eqz v2, :cond_3

    #@32
    .line 4493
    sget-boolean v7, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@34
    if-eqz v7, :cond_1

    #@36
    .line 4494
    new-instance v7, Ljava/lang/StringBuilder;

    #@38
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    #@3b
    const-string/jumbo v8, "Link configuration changed for netId: "

    #@3e
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@41
    move-result-object v7

    #@42
    iget v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@44
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@47
    move-result-object v7

    #@48
    .line 4495
    const-string/jumbo v8, " old: "

    #@4b
    .line 4494
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v7

    #@4f
    .line 4495
    iget-object v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@51
    .line 4494
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@54
    move-result-object v7

    #@55
    .line 4495
    const-string/jumbo v8, " new: "

    #@58
    .line 4494
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5b
    move-result-object v7

    #@5c
    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5f
    move-result-object v7

    #@60
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@63
    move-result-object v7

    #@64
    invoke-virtual {p0, v7}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@67
    .line 4497
    :cond_1
    iput-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@69
    .line 4498
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

    #@6b
    if-eqz v7, :cond_2

    #@6d
    .line 4499
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mIpReachabilityMonitor:Landroid/net/IpReachabilityMonitor;

    #@6f
    iget-object v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@71
    invoke-virtual {v7, v8}, Landroid/net/IpReachabilityMonitor;->updateLinkProperties(Landroid/net/LinkProperties;)V

    #@74
    .line 4501
    :cond_2
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@76
    if-eqz v7, :cond_3

    #@78
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@7a
    iget-object v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@7c
    invoke-virtual {v7, v8}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;->sendLinkProperties(Landroid/net/LinkProperties;)V

    #@7f
    .line 4504
    :cond_3
    sget-boolean v7, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@81
    if-eqz v7, :cond_b

    #@83
    .line 4505
    new-instance v5, Ljava/lang/StringBuilder;

    #@85
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@88
    .line 4506
    .local v5, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v7, "updateLinkProperties nid: "

    #@8b
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8e
    move-result-object v7

    #@8f
    iget v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@91
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@94
    .line 4507
    const-string/jumbo v7, " state: "

    #@97
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9a
    move-result-object v7

    #@9b
    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@9e
    .line 4508
    const-string/jumbo v7, " reason: "

    #@a1
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a4
    move-result-object v7

    #@a5
    invoke-virtual {p0, p1}, Lcom/android/server/wifi/WifiStateMachine;->smToString(I)Ljava/lang/String;

    #@a8
    move-result-object v8

    #@a9
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ac
    .line 4510
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@ae
    if-eqz v7, :cond_a

    #@b0
    .line 4511
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@b2
    invoke-virtual {v7}, Landroid/net/LinkProperties;->hasIPv4Address()Z

    #@b5
    move-result v7

    #@b6
    if-eqz v7, :cond_4

    #@b8
    .line 4512
    const-string/jumbo v7, " v4"

    #@bb
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@be
    .line 4514
    :cond_4
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@c0
    invoke-virtual {v7}, Landroid/net/LinkProperties;->hasGlobalIPv6Address()Z

    #@c3
    move-result v7

    #@c4
    if-eqz v7, :cond_5

    #@c6
    .line 4515
    const-string/jumbo v7, " v6"

    #@c9
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cc
    .line 4517
    :cond_5
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@ce
    invoke-virtual {v7}, Landroid/net/LinkProperties;->hasIPv4DefaultRoute()Z

    #@d1
    move-result v7

    #@d2
    if-eqz v7, :cond_6

    #@d4
    .line 4518
    const-string/jumbo v7, " v4r"

    #@d7
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@da
    .line 4520
    :cond_6
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@dc
    invoke-virtual {v7}, Landroid/net/LinkProperties;->hasIPv6DefaultRoute()Z

    #@df
    move-result v7

    #@e0
    if-eqz v7, :cond_7

    #@e2
    .line 4521
    const-string/jumbo v7, " v6r"

    #@e5
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e8
    .line 4523
    :cond_7
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@ea
    invoke-virtual {v7}, Landroid/net/LinkProperties;->hasIPv4DnsServer()Z

    #@ed
    move-result v7

    #@ee
    if-eqz v7, :cond_8

    #@f0
    .line 4524
    const-string/jumbo v7, " v4dns"

    #@f3
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f6
    .line 4526
    :cond_8
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@f8
    invoke-virtual {v7}, Landroid/net/LinkProperties;->hasIPv6DnsServer()Z

    #@fb
    move-result v7

    #@fc
    if-eqz v7, :cond_9

    #@fe
    .line 4527
    const-string/jumbo v7, " v6dns"

    #@101
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@104
    .line 4529
    :cond_9
    if-eqz v1, :cond_a

    #@106
    .line 4530
    const-string/jumbo v7, " isprov"

    #@109
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10c
    .line 4533
    :cond_a
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10f
    move-result-object v7

    #@110
    invoke-virtual {p0, v7}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@113
    .line 4540
    .end local v5    # "sb":Ljava/lang/StringBuilder;
    :cond_b
    sparse-switch p1, :sswitch_data_0

    #@116
    .line 4482
    :cond_c
    :goto_2
    return-void

    #@117
    .line 4485
    .end local v0    # "detailedState":Landroid/net/NetworkInfo$DetailedState;
    .end local v1    # "isProvisioned":Z
    .end local v2    # "linkChanged":Z
    .end local v3    # "lostIPv4Provisioning":Z
    .end local v6    # "wasProvisioned":Z
    :cond_d
    const/4 v2, 0x1

    #@118
    .restart local v2    # "linkChanged":Z
    goto/16 :goto_0

    #@11a
    .line 4489
    .restart local v1    # "isProvisioned":Z
    .restart local v6    # "wasProvisioned":Z
    :cond_e
    const/4 v3, 0x1

    #@11b
    .restart local v3    # "lostIPv4Provisioning":Z
    goto/16 :goto_1

    #@11d
    .line 4544
    .restart local v0    # "detailedState":Landroid/net/NetworkInfo$DetailedState;
    :sswitch_0
    invoke-virtual {p0, v10}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@120
    .line 4545
    if-nez v1, :cond_c

    #@122
    .line 4552
    const-string/jumbo v7, "IPv4 config succeeded, but not provisioned"

    #@125
    invoke-virtual {p0, v7}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@128
    goto :goto_2

    #@129
    .line 4560
    :sswitch_1
    if-eqz v1, :cond_f

    #@12b
    if-eqz v3, :cond_10

    #@12d
    .line 4561
    :cond_f
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@130
    goto :goto_2

    #@131
    .line 4564
    :cond_10
    invoke-virtual {p0, v10}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@134
    .line 4577
    const-string/jumbo v7, "DHCP failure: provisioned, clearing IPv4 address."

    #@137
    invoke-virtual {p0, v7}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@13a
    .line 4578
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@13c
    invoke-direct {p0, v7}, Lcom/android/server/wifi/WifiStateMachine;->clearIPv4Address(Ljava/lang/String;)Z

    #@13f
    move-result v7

    #@140
    if-nez v7, :cond_c

    #@142
    .line 4579
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@145
    goto :goto_2

    #@146
    .line 4586
    :sswitch_2
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@149
    goto :goto_2

    #@14a
    .line 4591
    :sswitch_3
    if-eqz v6, :cond_11

    #@14c
    if-eqz v1, :cond_13

    #@14e
    .line 4594
    :cond_11
    if-nez v6, :cond_12

    #@150
    if-eqz v1, :cond_12

    #@152
    .line 4596
    invoke-virtual {p0, v10}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@155
    .line 4598
    :cond_12
    :goto_3
    if-eqz v2, :cond_c

    #@157
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->getNetworkDetailedState()Landroid/net/NetworkInfo$DetailedState;

    #@15a
    move-result-object v7

    #@15b
    sget-object v8, Landroid/net/NetworkInfo$DetailedState;->CONNECTED:Landroid/net/NetworkInfo$DetailedState;

    #@15d
    if-ne v7, v8, :cond_c

    #@15f
    .line 4600
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->sendLinkConfigurationChangedBroadcast()V

    #@162
    goto :goto_2

    #@163
    .line 4593
    :cond_13
    invoke-virtual {p0, v9}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@166
    goto :goto_3

    #@167
    .line 4540
    nop

    #@168
    :sswitch_data_0
    .sparse-switch
        0x1 -> :sswitch_0
        0x2 -> :sswitch_1
        0x2000f -> :sswitch_0
        0x20010 -> :sswitch_2
        0x2008c -> :sswitch_3
    .end sparse-switch
.end method

.method private useLegacyDhcpClient()Z
    .locals 4

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    const/4 v1, 0x0

    #@2
    .line 4969
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@4
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@7
    move-result-object v2

    #@8
    .line 4970
    const-string/jumbo v3, "legacy_dhcp_client"

    #@b
    .line 4968
    invoke-static {v2, v3, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@e
    move-result v2

    #@f
    if-ne v2, v0, :cond_0

    #@11
    :goto_0
    return v0

    #@12
    :cond_0
    move v0, v1

    #@13
    goto :goto_0
.end method


# virtual methods
.method public addToBlacklist(Ljava/lang/String;)V
    .locals 1
    .param p1, "bssid"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2275
    const v0, 0x20038

    #@3
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(ILjava/lang/Object;)V

    #@6
    .line 2274
    return-void
.end method

.method allowFullBandScanAndAssociated()Z
    .locals 5

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 1345
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getEnableAutoJoinWhenAssociated()Z

    #@4
    move-result v0

    #@5
    if-nez v0, :cond_1

    #@7
    .line 1346
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 1347
    const-string/jumbo v0, "WifiStateMachine"

    #@e
    const-string/jumbo v1, "allowFullBandScanAndAssociated:  enableAutoJoinWhenAssociated : disallow"

    #@11
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@14
    .line 1350
    :cond_0
    return v4

    #@15
    .line 1353
    :cond_1
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@17
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@19
    .line 1354
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1b
    iget v2, v2, Lcom/android/server/wifi/WifiConfigStore;->maxTxPacketForFullScans:I

    #@1d
    int-to-double v2, v2

    #@1e
    .line 1353
    cmpl-double v0, v0, v2

    #@20
    if-gtz v0, :cond_2

    #@22
    .line 1355
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@24
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@26
    .line 1356
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@28
    iget v2, v2, Lcom/android/server/wifi/WifiConfigStore;->maxRxPacketForFullScans:I

    #@2a
    int-to-double v2, v2

    #@2b
    .line 1355
    cmpl-double v0, v0, v2

    #@2d
    if-lez v0, :cond_4

    #@2f
    .line 1357
    :cond_2
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@31
    if-eqz v0, :cond_3

    #@33
    .line 1358
    const-string/jumbo v0, "WifiStateMachine"

    #@36
    new-instance v1, Ljava/lang/StringBuilder;

    #@38
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@3b
    const-string/jumbo v2, "allowFullBandScanAndAssociated: packet rate tx"

    #@3e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@41
    move-result-object v1

    #@42
    .line 1359
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@44
    iget-wide v2, v2, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@46
    .line 1358
    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;

    #@49
    move-result-object v1

    #@4a
    .line 1359
    const-string/jumbo v2, "  rx "

    #@4d
    .line 1358
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@50
    move-result-object v1

    #@51
    .line 1360
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@53
    iget-wide v2, v2, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@55
    .line 1358
    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;

    #@58
    move-result-object v1

    #@59
    .line 1361
    const-string/jumbo v2, " allow scan with traffic "

    #@5c
    .line 1358
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5f
    move-result-object v1

    #@60
    .line 1361
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getAllowScansWithTraffic()I

    #@63
    move-result v2

    #@64
    .line 1358
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@67
    move-result-object v1

    #@68
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6b
    move-result-object v1

    #@6c
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@6f
    .line 1364
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getAllowScansWithTraffic()I

    #@72
    move-result v0

    #@73
    if-nez v0, :cond_4

    #@75
    .line 1365
    return v4

    #@76
    .line 1369
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@79
    move-result-object v0

    #@7a
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@7c
    if-eq v0, v1, :cond_6

    #@7e
    .line 1370
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@80
    if-eqz v0, :cond_5

    #@82
    .line 1371
    const-string/jumbo v0, "WifiStateMachine"

    #@85
    const-string/jumbo v1, "allowFullBandScanAndAssociated: getCurrentState() : disallow"

    #@88
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@8b
    .line 1373
    :cond_5
    return v4

    #@8c
    .line 1376
    :cond_6
    const/4 v0, 0x1

    #@8d
    return v0
.end method

.method public autoRoamSetBSSID(ILjava/lang/String;)V
    .locals 1
    .param p1, "netId"    # I
    .param p2, "bssid"    # Ljava/lang/String;

    #@0
    .prologue
    .line 436
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/WifiConfigStore;->getWifiConfiguration(I)Landroid/net/wifi/WifiConfiguration;

    #@5
    move-result-object v0

    #@6
    invoke-virtual {p0, v0, p2}, Lcom/android/server/wifi/WifiStateMachine;->autoRoamSetBSSID(Landroid/net/wifi/WifiConfiguration;Ljava/lang/String;)Z

    #@9
    .line 435
    return-void
.end method

.method public autoRoamSetBSSID(Landroid/net/wifi/WifiConfiguration;Ljava/lang/String;)Z
    .locals 3
    .param p1, "config"    # Landroid/net/wifi/WifiConfiguration;
    .param p2, "bssid"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 440
    const/4 v0, 0x1

    #@2
    .line 441
    .local v0, "ret":Z
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@4
    if-nez v1, :cond_0

    #@6
    const-string/jumbo v1, "any"

    #@9
    iput-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@b
    .line 442
    :cond_0
    if-nez p2, :cond_1

    #@d
    const-string/jumbo p2, "any"

    #@10
    .line 443
    :cond_1
    if-nez p1, :cond_2

    #@12
    return v2

    #@13
    .line 445
    :cond_2
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@15
    if-eqz v1, :cond_3

    #@17
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@19
    if-ne p2, v1, :cond_3

    #@1b
    iget-object v1, p1, Landroid/net/wifi/WifiConfiguration;->BSSID:Ljava/lang/String;

    #@1d
    if-ne p2, v1, :cond_3

    #@1f
    .line 446
    return v2

    #@20
    .line 448
    :cond_3
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@22
    const-string/jumbo v2, "any"

    #@25
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@28
    move-result v1

    #@29
    if-nez v1, :cond_4

    #@2b
    const-string/jumbo v1, "any"

    #@2e
    invoke-virtual {p2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@31
    move-result v1

    #@32
    if-eqz v1, :cond_4

    #@34
    .line 450
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@36
    iget-boolean v1, v1, Lcom/android/server/wifi/WifiConfigStore;->roamOnAny:Z

    #@38
    if-nez v1, :cond_4

    #@3a
    .line 451
    const/4 v0, 0x0

    #@3b
    .line 454
    :cond_4
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->VDBG:Z

    #@3d
    if-eqz v1, :cond_5

    #@3f
    .line 455
    new-instance v1, Ljava/lang/StringBuilder;

    #@41
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@44
    const-string/jumbo v2, "autoRoamSetBSSID "

    #@47
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v1

    #@4b
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v1

    #@4f
    const-string/jumbo v2, " key="

    #@52
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@55
    move-result-object v1

    #@56
    invoke-virtual {p1}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@59
    move-result-object v2

    #@5a
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d
    move-result-object v1

    #@5e
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@61
    move-result-object v1

    #@62
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@65
    .line 457
    :cond_5
    iput-object p2, p1, Landroid/net/wifi/WifiConfiguration;->autoJoinBSSID:Ljava/lang/String;

    #@67
    .line 458
    iput-object p2, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@69
    .line 459
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@6b
    invoke-virtual {v1, p1}, Lcom/android/server/wifi/WifiConfigStore;->saveWifiConfigBSSID(Landroid/net/wifi/WifiConfiguration;)V

    #@6e
    .line 460
    return v0
.end method

.method public clearANQPCache()V
    .locals 2

    #@0
    .prologue
    .line 1424
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2
    const/4 v1, 0x1

    #@3
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiConfigStore;->trimANQPCache(Z)V

    #@6
    .line 1423
    return-void
.end method

.method public clearBlacklist()V
    .locals 1

    #@0
    .prologue
    .line 2282
    const v0, 0x20039

    #@3
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@6
    .line 2281
    return-void
.end method

.method clearConfigBSSID(Landroid/net/wifi/WifiConfiguration;Ljava/lang/String;)V
    .locals 2
    .param p1, "config"    # Landroid/net/wifi/WifiConfiguration;
    .param p2, "dbg"    # Ljava/lang/String;

    #@0
    .prologue
    .line 7928
    if-nez p1, :cond_0

    #@2
    .line 7929
    return-void

    #@3
    .line 7930
    :cond_0
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@5
    if-eqz v0, :cond_1

    #@7
    .line 7931
    new-instance v0, Ljava/lang/StringBuilder;

    #@9
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@c
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v0

    #@10
    const-string/jumbo v1, " "

    #@13
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v0

    #@17
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@19
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v0

    #@1d
    const-string/jumbo v1, " config "

    #@20
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v0

    #@24
    invoke-virtual {p1}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@27
    move-result-object v1

    #@28
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2b
    move-result-object v0

    #@2c
    .line 7932
    const-string/jumbo v1, " config.bssid "

    #@2f
    .line 7931
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v0

    #@33
    .line 7932
    iget-object v1, p1, Landroid/net/wifi/WifiConfiguration;->BSSID:Ljava/lang/String;

    #@35
    .line 7931
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@38
    move-result-object v0

    #@39
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3c
    move-result-object v0

    #@3d
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@40
    .line 7934
    :cond_1
    const-string/jumbo v0, "any"

    #@43
    iput-object v0, p1, Landroid/net/wifi/WifiConfiguration;->autoJoinBSSID:Ljava/lang/String;

    #@45
    .line 7935
    const-string/jumbo v0, "any"

    #@48
    iput-object v0, p1, Landroid/net/wifi/WifiConfiguration;->BSSID:Ljava/lang/String;

    #@4a
    .line 7936
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@4c
    if-eqz v0, :cond_2

    #@4e
    .line 7937
    new-instance v0, Ljava/lang/StringBuilder;

    #@50
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@53
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@56
    move-result-object v0

    #@57
    const-string/jumbo v1, " "

    #@5a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d
    move-result-object v0

    #@5e
    iget-object v1, p1, Landroid/net/wifi/WifiConfiguration;->SSID:Ljava/lang/String;

    #@60
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@63
    move-result-object v0

    #@64
    .line 7938
    const-string/jumbo v1, " nid="

    #@67
    .line 7937
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6a
    move-result-object v0

    #@6b
    .line 7938
    iget v1, p1, Landroid/net/wifi/WifiConfiguration;->networkId:I

    #@6d
    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@70
    move-result-object v1

    #@71
    .line 7937
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@74
    move-result-object v0

    #@75
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@78
    move-result-object v0

    #@79
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@7c
    .line 7940
    :cond_2
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@7e
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/WifiConfigStore;->saveWifiConfigBSSID(Landroid/net/wifi/WifiConfiguration;)V

    #@81
    .line 7927
    return-void
.end method

.method clearCurrentConfigBSSID(Ljava/lang/String;)V
    .locals 1
    .param p1, "dbg"    # Ljava/lang/String;

    #@0
    .prologue
    .line 7922
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@3
    move-result-object v0

    #@4
    .line 7923
    .local v0, "config":Landroid/net/wifi/WifiConfiguration;
    if-nez v0, :cond_0

    #@6
    .line 7924
    return-void

    #@7
    .line 7925
    :cond_0
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wifi/WifiStateMachine;->clearConfigBSSID(Landroid/net/wifi/WifiConfiguration;Ljava/lang/String;)V

    #@a
    .line 7920
    return-void
.end method

.method closeRadioScanStats()V
    .locals 3

    #@0
    .prologue
    .line 1786
    const/4 v1, 0x0

    #@1
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->getWifiLinkLayerStats(Z)Landroid/net/wifi/WifiLinkLayerStats;

    #@4
    move-result-object v0

    #@5
    .line 1787
    .local v0, "stats":Landroid/net/wifi/WifiLinkLayerStats;
    if-eqz v0, :cond_0

    #@7
    .line 1788
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->on_time:I

    #@9
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeStartScan:I

    #@b
    sub-int/2addr v1, v2

    #@c
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeThisScan:I

    #@e
    .line 1789
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->tx_time:I

    #@10
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeStartScan:I

    #@12
    sub-int/2addr v1, v2

    #@13
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeThisScan:I

    #@15
    .line 1790
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->rx_time:I

    #@17
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeStartScan:I

    #@19
    sub-int/2addr v1, v2

    #@1a
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeThisScan:I

    #@1c
    .line 1791
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeScan:I

    #@1e
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeThisScan:I

    #@20
    add-int/2addr v1, v2

    #@21
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeScan:I

    #@23
    .line 1792
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeScan:I

    #@25
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeThisScan:I

    #@27
    add-int/2addr v1, v2

    #@28
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeScan:I

    #@2a
    .line 1793
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeScan:I

    #@2c
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeThisScan:I

    #@2e
    add-int/2addr v1, v2

    #@2f
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeScan:I

    #@31
    .line 1785
    :cond_0
    return-void
.end method

.method connectScanningService()V
    .locals 2

    #@0
    .prologue
    .line 5021
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanner:Landroid/net/wifi/WifiScanner;

    #@2
    if-nez v0, :cond_0

    #@4
    .line 5022
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@6
    const-string/jumbo v1, "wifiscanner"

    #@9
    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@c
    move-result-object v0

    #@d
    check-cast v0, Landroid/net/wifi/WifiScanner;

    #@f
    iput-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiScanner:Landroid/net/wifi/WifiScanner;

    #@11
    .line 5019
    :cond_0
    return-void
.end method

.method deferForUserInput(Landroid/os/Message;IZ)Z
    .locals 4
    .param p1, "message"    # Landroid/os/Message;
    .param p2, "netId"    # I
    .param p3, "allowOverride"    # Z

    #@0
    .prologue
    const/4 v3, 0x1

    #@1
    const/4 v2, 0x0

    #@2
    .line 493
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@4
    invoke-virtual {v1, p2}, Lcom/android/server/wifi/WifiConfigStore;->getWifiConfiguration(I)Landroid/net/wifi/WifiConfiguration;

    #@7
    move-result-object v0

    #@8
    .line 496
    .local v0, "config":Landroid/net/wifi/WifiConfiguration;
    if-nez v0, :cond_0

    #@a
    .line 497
    new-instance v1, Ljava/lang/StringBuilder;

    #@c
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@f
    const-string/jumbo v2, "deferForUserInput: configuration for netId="

    #@12
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15
    move-result-object v1

    #@16
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@19
    move-result-object v1

    #@1a
    const-string/jumbo v2, " not stored"

    #@1d
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@20
    move-result-object v1

    #@21
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@24
    move-result-object v1

    #@25
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@28
    .line 498
    return v3

    #@29
    .line 501
    :cond_0
    iget v1, v0, Landroid/net/wifi/WifiConfiguration;->userApproved:I

    #@2b
    packed-switch v1, :pswitch_data_0

    #@2e
    .line 509
    iput v3, v0, Landroid/net/wifi/WifiConfiguration;->userApproved:I

    #@30
    .line 510
    return v2

    #@31
    .line 504
    :pswitch_0
    return v2

    #@32
    .line 501
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method public disableEphemeralNetwork(Ljava/lang/String;)V
    .locals 1
    .param p1, "SSID"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2087
    if-eqz p1, :cond_0

    #@2
    .line 2088
    const v0, 0x20062

    #@5
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(ILjava/lang/Object;)V

    #@8
    .line 2086
    :cond_0
    return-void
.end method

.method public disconnectCommand()V
    .locals 1

    #@0
    .prologue
    .line 2104
    const v0, 0x20049

    #@3
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@6
    .line 2103
    return-void
.end method

.method public disconnectCommand(II)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "reason"    # I

    #@0
    .prologue
    .line 2108
    const v0, 0x20049

    #@3
    invoke-virtual {p0, v0, p1, p2}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@6
    .line 2107
    return-void
.end method

.method doNetworkStatus(I)V
    .locals 1
    .param p1, "status"    # I

    #@0
    .prologue
    .line 7831
    const v0, 0x20094

    #@3
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(II)V

    #@6
    .line 7830
    return-void
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 4
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    #@0
    .prologue
    .line 2503
    invoke-super {p0, p1, p2, p3}, Lcom/android/internal/util/StateMachine;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@3
    .line 2504
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStateTracker:Lcom/android/server/wifi/SupplicantStateTracker;

    #@5
    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/wifi/SupplicantStateTracker;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@8
    .line 2505
    new-instance v1, Ljava/lang/StringBuilder;

    #@a
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@d
    const-string/jumbo v2, "mLinkProperties "

    #@10
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13
    move-result-object v1

    #@14
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@16
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v1

    #@1a
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1d
    move-result-object v1

    #@1e
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@21
    .line 2506
    new-instance v1, Ljava/lang/StringBuilder;

    #@23
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@26
    const-string/jumbo v2, "mWifiInfo "

    #@29
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v1

    #@2d
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@2f
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v1

    #@33
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@36
    move-result-object v1

    #@37
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@3a
    .line 2507
    new-instance v1, Ljava/lang/StringBuilder;

    #@3c
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@3f
    const-string/jumbo v2, "mDhcpResults "

    #@42
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@45
    move-result-object v1

    #@46
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@48
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v1

    #@4c
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4f
    move-result-object v1

    #@50
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@53
    .line 2508
    new-instance v1, Ljava/lang/StringBuilder;

    #@55
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@58
    const-string/jumbo v2, "mNetworkInfo "

    #@5b
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5e
    move-result-object v1

    #@5f
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkInfo:Landroid/net/NetworkInfo;

    #@61
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@64
    move-result-object v1

    #@65
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@68
    move-result-object v1

    #@69
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6c
    .line 2509
    new-instance v1, Ljava/lang/StringBuilder;

    #@6e
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@71
    const-string/jumbo v2, "mLastSignalLevel "

    #@74
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@77
    move-result-object v1

    #@78
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastSignalLevel:I

    #@7a
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@7d
    move-result-object v1

    #@7e
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@81
    move-result-object v1

    #@82
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@85
    .line 2510
    new-instance v1, Ljava/lang/StringBuilder;

    #@87
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@8a
    const-string/jumbo v2, "mLastBssid "

    #@8d
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@90
    move-result-object v1

    #@91
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@93
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@96
    move-result-object v1

    #@97
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9a
    move-result-object v1

    #@9b
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@9e
    .line 2511
    new-instance v1, Ljava/lang/StringBuilder;

    #@a0
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@a3
    const-string/jumbo v2, "mLastNetworkId "

    #@a6
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a9
    move-result-object v1

    #@aa
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@ac
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@af
    move-result-object v1

    #@b0
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@b3
    move-result-object v1

    #@b4
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@b7
    .line 2512
    new-instance v1, Ljava/lang/StringBuilder;

    #@b9
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@bc
    const-string/jumbo v2, "mOperationalMode "

    #@bf
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c2
    move-result-object v1

    #@c3
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mOperationalMode:I

    #@c5
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c8
    move-result-object v1

    #@c9
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@cc
    move-result-object v1

    #@cd
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@d0
    .line 2513
    new-instance v1, Ljava/lang/StringBuilder;

    #@d2
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@d5
    const-string/jumbo v2, "mUserWantsSuspendOpt "

    #@d8
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@db
    move-result-object v1

    #@dc
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mUserWantsSuspendOpt:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@de
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@e1
    move-result-object v1

    #@e2
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@e5
    move-result-object v1

    #@e6
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@e9
    .line 2514
    new-instance v1, Ljava/lang/StringBuilder;

    #@eb
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@ee
    const-string/jumbo v2, "mSuspendOptNeedsDisabled "

    #@f1
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f4
    move-result-object v1

    #@f5
    iget v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mSuspendOptNeedsDisabled:I

    #@f7
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@fa
    move-result-object v1

    #@fb
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@fe
    move-result-object v1

    #@ff
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@102
    .line 2515
    new-instance v1, Ljava/lang/StringBuilder;

    #@104
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@107
    const-string/jumbo v2, "Supplicant status "

    #@10a
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10d
    move-result-object v1

    #@10e
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@110
    const/4 v3, 0x1

    #@111
    invoke-virtual {v2, v3}, Lcom/android/server/wifi/WifiNative;->status(Z)Ljava/lang/String;

    #@114
    move-result-object v2

    #@115
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@118
    move-result-object v1

    #@119
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@11c
    move-result-object v1

    #@11d
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@120
    .line 2516
    new-instance v1, Ljava/lang/StringBuilder;

    #@122
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@125
    const-string/jumbo v2, "mLegacyPnoEnabled "

    #@128
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12b
    move-result-object v1

    #@12c
    iget-boolean v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLegacyPnoEnabled:Z

    #@12e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@131
    move-result-object v1

    #@132
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@135
    move-result-object v1

    #@136
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@139
    .line 2517
    new-instance v1, Ljava/lang/StringBuilder;

    #@13b
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@13e
    const-string/jumbo v2, "mSetCountryCode "

    #@141
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@144
    move-result-object v1

    #@145
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mSetCountryCode:Ljava/lang/String;

    #@147
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14a
    move-result-object v1

    #@14b
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@14e
    move-result-object v1

    #@14f
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@152
    .line 2518
    new-instance v1, Ljava/lang/StringBuilder;

    #@154
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@157
    const-string/jumbo v2, "mDriverSetCountryCode "

    #@15a
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15d
    move-result-object v1

    #@15e
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mDriverSetCountryCode:Ljava/lang/String;

    #@160
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@163
    move-result-object v1

    #@164
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@167
    move-result-object v1

    #@168
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@16b
    .line 2519
    new-instance v1, Ljava/lang/StringBuilder;

    #@16d
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@170
    const-string/jumbo v2, "mConnectedModeGScanOffloadStarted "

    #@173
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@176
    move-result-object v1

    #@177
    iget-boolean v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedModeGScanOffloadStarted:Z

    #@179
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@17c
    move-result-object v1

    #@17d
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@180
    move-result-object v1

    #@181
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@184
    .line 2520
    new-instance v1, Ljava/lang/StringBuilder;

    #@186
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@189
    const-string/jumbo v2, "mGScanPeriodMilli "

    #@18c
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18f
    move-result-object v1

    #@190
    iget-wide v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mGScanPeriodMilli:J

    #@192
    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@195
    move-result-object v1

    #@196
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@199
    move-result-object v1

    #@19a
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@19d
    .line 2521
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@19f
    if-eqz v1, :cond_0

    #@1a1
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@1a3
    array-length v1, v1

    #@1a4
    if-lez v1, :cond_0

    #@1a6
    .line 2522
    const-string/jumbo v1, "SSID whitelist :"

    #@1a9
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@1ac
    .line 2523
    const/4 v0, 0x0

    #@1ad
    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@1af
    array-length v1, v1

    #@1b0
    if-ge v0, v1, :cond_0

    #@1b2
    .line 2524
    new-instance v1, Ljava/lang/StringBuilder;

    #@1b4
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@1b7
    const-string/jumbo v2, "       "

    #@1ba
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1bd
    move-result-object v1

    #@1be
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWhiteListedSsids:[Ljava/lang/String;

    #@1c0
    aget-object v2, v2, v0

    #@1c2
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c5
    move-result-object v1

    #@1c6
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1c9
    move-result-object v1

    #@1ca
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@1cd
    .line 2523
    add-int/lit8 v0, v0, 0x1

    #@1cf
    goto :goto_0

    #@1d0
    .line 2527
    .end local v0    # "i":I
    :cond_0
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;

    #@1d2
    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@1d5
    .line 2528
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mUntrustedNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;

    #@1d7
    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@1da
    .line 2529
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@1dd
    .line 2530
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1df
    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/wifi/WifiConfigStore;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@1e2
    .line 2531
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@1e5
    .line 2532
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLogger:Lcom/android/server/wifi/WifiLogger;

    #@1e7
    const/4 v2, 0x7

    #@1e8
    invoke-virtual {v1, v2}, Lcom/android/server/wifi/WifiLogger;->captureBugReportData(I)V

    #@1eb
    .line 2533
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLogger:Lcom/android/server/wifi/WifiLogger;

    #@1ed
    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/wifi/WifiLogger;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@1f0
    .line 2502
    return-void
.end method

.method enableAggressiveHandover(I)V
    .locals 0
    .param p1, "enabled"    # I

    #@0
    .prologue
    .line 1420
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mAggressiveHandover:I

    #@2
    .line 1419
    return-void
.end method

.method public enableAllNetworks()V
    .locals 1

    #@0
    .prologue
    .line 2290
    const v0, 0x20037

    #@3
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@6
    .line 2289
    return-void
.end method

.method public enableAutoJoinWhenAssociated(Z)Z
    .locals 4
    .param p1, "enabled"    # Z

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 1436
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getEnableAutoJoinWhenAssociated()Z

    #@4
    move-result v0

    #@5
    .line 1437
    .local v0, "old_state":Z
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@7
    iget-object v1, v1, Lcom/android/server/wifi/WifiConfigStore;->enableAutoJoinWhenAssociated:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@9
    invoke-virtual {v1, p1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    #@c
    .line 1438
    if-nez v0, :cond_0

    #@e
    if-eqz p1, :cond_0

    #@10
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@12
    if-eqz v1, :cond_0

    #@14
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@17
    move-result-object v1

    #@18
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@1a
    if-ne v1, v2, :cond_0

    #@1c
    .line 1439
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1e
    iget-object v1, v1, Lcom/android/server/wifi/WifiConfigStore;->wifiAssociatedShortScanIntervalMilli:Ljava/util/concurrent/atomic/AtomicInteger;

    #@20
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@23
    move-result v1

    #@24
    invoke-direct {p0, v1, v3, v3}, Lcom/android/server/wifi/WifiStateMachine;->startDelayedScan(ILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V

    #@27
    .line 1442
    :cond_0
    const/4 v1, 0x1

    #@28
    return v1
.end method

.method enableBackgroundScan(Z)V
    .locals 4
    .param p1, "enable"    # Z

    #@0
    .prologue
    .line 2257
    if-eqz p1, :cond_0

    #@2
    .line 2258
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@4
    invoke-virtual {v1}, Lcom/android/server/wifi/WifiConfigStore;->enableAllNetworks()V

    #@7
    .line 2260
    :cond_0
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@9
    invoke-virtual {v1, p1}, Lcom/android/server/wifi/WifiNative;->enableBackgroundScan(Z)Z

    #@c
    move-result v0

    #@d
    .line 2261
    .local v0, "ret":Z
    if-eqz v0, :cond_1

    #@f
    .line 2262
    iput-boolean p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLegacyPnoEnabled:Z

    #@11
    .line 2256
    :goto_0
    return-void

    #@12
    .line 2264
    :cond_1
    const-string/jumbo v1, "WifiStateMachine"

    #@15
    new-instance v2, Ljava/lang/StringBuilder;

    #@17
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@1a
    const-string/jumbo v3, " Fail to set up pno, want "

    #@1d
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@20
    move-result-object v2

    #@21
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@24
    move-result-object v2

    #@25
    const-string/jumbo v3, " now "

    #@28
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2b
    move-result-object v2

    #@2c
    iget-boolean v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mLegacyPnoEnabled:Z

    #@2e
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@31
    move-result-object v2

    #@32
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@35
    move-result-object v2

    #@36
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@39
    goto :goto_0
.end method

.method public enableRssiPolling(Z)V
    .locals 3
    .param p1, "enabled"    # Z

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2286
    if-eqz p1, :cond_0

    #@3
    const/4 v0, 0x1

    #@4
    :goto_0
    const v2, 0x20052

    #@7
    invoke-virtual {p0, v2, v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@a
    .line 2285
    return-void

    #@b
    :cond_0
    move v0, v1

    #@c
    .line 2286
    goto :goto_0
.end method

.method public enableTdls(Ljava/lang/String;Z)V
    .locals 3
    .param p1, "remoteMacAddress"    # Ljava/lang/String;
    .param p2, "enable"    # Z

    #@0
    .prologue
    .line 2409
    if-eqz p2, :cond_0

    #@2
    const/4 v0, 0x1

    #@3
    .line 2410
    .local v0, "enabler":I
    :goto_0
    const v1, 0x2005c

    #@6
    const/4 v2, 0x0

    #@7
    invoke-virtual {p0, v1, v0, v2, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@a
    .line 2408
    return-void

    #@b
    .line 2409
    .end local v0    # "enabler":I
    :cond_0
    const/4 v0, 0x0

    #@c
    .restart local v0    # "enabler":I
    goto :goto_0
.end method

.method enableVerboseLogging(I)V
    .locals 4
    .param p1, "verbose"    # I

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    const/4 v1, 0x0

    #@2
    .line 1298
    iput p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mVerboseLoggingLevel:I

    #@4
    .line 1299
    if-lez p1, :cond_0

    #@6
    .line 1300
    sput-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@8
    .line 1301
    sput-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->VDBG:Z

    #@a
    .line 1302
    sput-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@c
    .line 1303
    sput-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->mLogMessages:Z

    #@e
    .line 1304
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@10
    const-string/jumbo v3, "DEBUG"

    #@13
    invoke-virtual {v2, v3}, Lcom/android/server/wifi/WifiNative;->setSupplicantLogLevel(Ljava/lang/String;)V

    #@16
    .line 1312
    :goto_0
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLogger:Lcom/android/server/wifi/WifiLogger;

    #@18
    iget v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mVerboseLoggingLevel:I

    #@1a
    if-lez v3, :cond_1

    #@1c
    :goto_1
    invoke-virtual {v2, v0}, Lcom/android/server/wifi/WifiLogger;->startLogging(Z)V

    #@1f
    .line 1313
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiAutoJoinController:Lcom/android/server/wifi/WifiAutoJoinController;

    #@21
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/WifiAutoJoinController;->enableVerboseLogging(I)V

    #@24
    .line 1314
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiMonitor:Lcom/android/server/wifi/WifiMonitor;

    #@26
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/WifiMonitor;->enableVerboseLogging(I)V

    #@29
    .line 1315
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@2b
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/WifiNative;->enableVerboseLogging(I)V

    #@2e
    .line 1316
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@30
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/WifiConfigStore;->enableVerboseLogging(I)V

    #@33
    .line 1317
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSupplicantStateTracker:Lcom/android/server/wifi/SupplicantStateTracker;

    #@35
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/SupplicantStateTracker;->enableVerboseLogging(I)V

    #@38
    .line 1297
    return-void

    #@39
    .line 1306
    :cond_0
    sput-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@3b
    .line 1307
    sput-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->VDBG:Z

    #@3d
    .line 1308
    sput-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->PDBG:Z

    #@3f
    .line 1309
    sput-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->mLogMessages:Z

    #@41
    .line 1310
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@43
    const-string/jumbo v3, "INFO"

    #@46
    invoke-virtual {v2, v3}, Lcom/android/server/wifi/WifiNative;->setSupplicantLogLevel(Ljava/lang/String;)V

    #@49
    goto :goto_0

    #@4a
    :cond_1
    move v0, v1

    #@4b
    .line 1312
    goto :goto_1
.end method

.method getAggressiveHandover()I
    .locals 1

    #@0
    .prologue
    .line 1416
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mAggressiveHandover:I

    #@2
    return v0
.end method

.method public getAllowScansWithTraffic()I
    .locals 1

    #@0
    .prologue
    .line 1432
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->alwaysEnableScansWhileAssociated:Ljava/util/concurrent/atomic/AtomicInteger;

    #@4
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@7
    move-result v0

    #@8
    return v0
.end method

.method public getConfigFile()Ljava/lang/String;
    .locals 1

    #@0
    .prologue
    .line 2424
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2
    invoke-virtual {v0}, Lcom/android/server/wifi/WifiConfigStore;->getConfigFile()Ljava/lang/String;

    #@5
    move-result-object v0

    #@6
    return-object v0
.end method

.method public getCountryCode()Ljava/lang/String;
    .locals 1

    #@0
    .prologue
    .line 2386
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mSetCountryCode:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method getCurrentBSSID()Ljava/lang/String;
    .locals 1

    #@0
    .prologue
    .line 6980
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 6981
    const/4 v0, 0x0

    #@5
    return-object v0

    #@6
    .line 6983
    :cond_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@8
    return-object v0
.end method

.method public getCurrentNetwork()Landroid/net/Network;
    .locals 2

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2373
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@3
    if-eqz v0, :cond_0

    #@5
    .line 2374
    new-instance v0, Landroid/net/Network;

    #@7
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkAgent:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;

    #@9
    iget v1, v1, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkAgent;->netId:I

    #@b
    invoke-direct {v0, v1}, Landroid/net/Network;-><init>(I)V

    #@e
    return-object v0

    #@f
    .line 2376
    :cond_0
    return-object v1
.end method

.method getCurrentScanResult()Landroid/net/wifi/ScanResult;
    .locals 5

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 6961
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@4
    move-result-object v1

    #@5
    .line 6962
    .local v1, "config":Landroid/net/wifi/WifiConfiguration;
    if-nez v1, :cond_0

    #@7
    .line 6963
    return-object v4

    #@8
    .line 6965
    :cond_0
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@a
    invoke-virtual {v3}, Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;

    #@d
    move-result-object v0

    #@e
    .line 6966
    .local v0, "BSSID":Ljava/lang/String;
    if-nez v0, :cond_1

    #@10
    .line 6967
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@12
    .line 6970
    :cond_1
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@14
    invoke-virtual {v3, v1}, Lcom/android/server/wifi/WifiConfigStore;->getScanDetailCache(Landroid/net/wifi/WifiConfiguration;)Lcom/android/server/wifi/ScanDetailCache;

    #@17
    move-result-object v2

    #@18
    .line 6972
    .local v2, "scanDetailCache":Lcom/android/server/wifi/ScanDetailCache;
    if-nez v2, :cond_2

    #@1a
    .line 6973
    return-object v4

    #@1b
    .line 6976
    :cond_2
    invoke-virtual {v2, v0}, Lcom/android/server/wifi/ScanDetailCache;->get(Ljava/lang/String;)Landroid/net/wifi/ScanResult;

    #@1e
    move-result-object v3

    #@1f
    return-object v3
.end method

.method getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;
    .locals 2

    #@0
    .prologue
    .line 6954
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@2
    const/4 v1, -0x1

    #@3
    if-ne v0, v1, :cond_0

    #@5
    .line 6955
    const/4 v0, 0x0

    #@6
    return-object v0

    #@7
    .line 6957
    :cond_0
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@9
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiConfigStore;->getWifiConfiguration(I)Landroid/net/wifi/WifiConfiguration;

    #@e
    move-result-object v0

    #@f
    return-object v0
.end method

.method public getDisconnectedTimeMilli()J
    .locals 6

    #@0
    .prologue
    const-wide/16 v4, 0x0

    #@2
    .line 1659
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@5
    move-result-object v2

    #@6
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedState:Lcom/android/internal/util/State;

    #@8
    if-ne v2, v3, :cond_0

    #@a
    .line 1660
    iget-wide v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedTimeStamp:J

    #@c
    cmp-long v2, v2, v4

    #@e
    if-eqz v2, :cond_0

    #@10
    .line 1661
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@13
    move-result-wide v0

    #@14
    .line 1662
    .local v0, "now_ms":J
    iget-wide v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mDisconnectedTimeStamp:J

    #@16
    sub-long v2, v0, v2

    #@18
    return-wide v2

    #@19
    .line 1664
    .end local v0    # "now_ms":J
    :cond_0
    return-wide v4
.end method

.method public getEnableAutoJoinWhenAssociated()Z
    .locals 1

    #@0
    .prologue
    .line 1446
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->enableAutoJoinWhenAssociated:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@4
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    #@7
    move-result v0

    #@8
    return v0
.end method

.method public getFrequencyBand()I
    .locals 1

    #@0
    .prologue
    .line 2417
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mFrequencyBand:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method getHalBasedAutojoinOffload()I
    .locals 1

    #@0
    .prologue
    .line 1330
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoEnableInDevSettings:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    const/4 v0, 0x1

    #@5
    :goto_0
    return v0

    #@6
    :cond_0
    const/4 v0, 0x0

    #@7
    goto :goto_0
.end method

.method protected getLogRecString(Landroid/os/Message;)Ljava/lang/String;
    .locals 32
    .param p1, "msg"    # Landroid/os/Message;

    #@0
    .prologue
    .line 2573
    new-instance v20, Ljava/lang/StringBuilder;

    #@2
    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    .line 2574
    .local v20, "sb":Ljava/lang/StringBuilder;
    move-object/from16 v0, p0

    #@7
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mScreenOn:Z

    #@9
    move/from16 v26, v0

    #@b
    if-eqz v26, :cond_0

    #@d
    .line 2575
    const-string/jumbo v26, "!"

    #@10
    move-object/from16 v0, v20

    #@12
    move-object/from16 v1, v26

    #@14
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17
    .line 2577
    :cond_0
    move-object/from16 v0, p0

    #@19
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@1b
    move/from16 v26, v0

    #@1d
    sget v27, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_UNKNOWN:I

    #@1f
    move/from16 v0, v26

    #@21
    move/from16 v1, v27

    #@23
    if-eq v0, v1, :cond_1

    #@25
    .line 2578
    const-string/jumbo v26, "("

    #@28
    move-object/from16 v0, v20

    #@2a
    move-object/from16 v1, v26

    #@2c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2f
    move-result-object v26

    #@30
    move-object/from16 v0, p0

    #@32
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@34
    move/from16 v27, v0

    #@36
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@39
    move-result-object v26

    #@3a
    const-string/jumbo v27, ")"

    #@3d
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@40
    .line 2580
    :cond_1
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wifi/WifiStateMachine;->smToString(Landroid/os/Message;)Ljava/lang/String;

    #@43
    move-result-object v26

    #@44
    move-object/from16 v0, v20

    #@46
    move-object/from16 v1, v26

    #@48
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4b
    .line 2581
    move-object/from16 v0, p1

    #@4d
    iget v0, v0, Landroid/os/Message;->sendingUid:I

    #@4f
    move/from16 v26, v0

    #@51
    if-lez v26, :cond_2

    #@53
    move-object/from16 v0, p1

    #@55
    iget v0, v0, Landroid/os/Message;->sendingUid:I

    #@57
    move/from16 v26, v0

    #@59
    const/16 v27, 0x3f2

    #@5b
    move/from16 v0, v26

    #@5d
    move/from16 v1, v27

    #@5f
    if-eq v0, v1, :cond_2

    #@61
    .line 2582
    const-string/jumbo v26, " uid="

    #@64
    move-object/from16 v0, v20

    #@66
    move-object/from16 v1, v26

    #@68
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6b
    move-result-object v26

    #@6c
    move-object/from16 v0, p1

    #@6e
    iget v0, v0, Landroid/os/Message;->sendingUid:I

    #@70
    move/from16 v27, v0

    #@72
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@75
    .line 2584
    :cond_2
    const-string/jumbo v26, " "

    #@78
    move-object/from16 v0, v20

    #@7a
    move-object/from16 v1, v26

    #@7c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v26

    #@80
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->printTime()Ljava/lang/String;

    #@83
    move-result-object v27

    #@84
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@87
    .line 2585
    move-object/from16 v0, p1

    #@89
    iget v0, v0, Landroid/os/Message;->what:I

    #@8b
    move/from16 v26, v0

    #@8d
    sparse-switch v26, :sswitch_data_0

    #@90
    .line 3142
    const-string/jumbo v26, " "

    #@93
    move-object/from16 v0, v20

    #@95
    move-object/from16 v1, v26

    #@97
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9a
    .line 3143
    move-object/from16 v0, p1

    #@9c
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@9e
    move/from16 v26, v0

    #@a0
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@a3
    move-result-object v26

    #@a4
    move-object/from16 v0, v20

    #@a6
    move-object/from16 v1, v26

    #@a8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ab
    .line 3144
    const-string/jumbo v26, " "

    #@ae
    move-object/from16 v0, v20

    #@b0
    move-object/from16 v1, v26

    #@b2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b5
    .line 3145
    move-object/from16 v0, p1

    #@b7
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@b9
    move/from16 v26, v0

    #@bb
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@be
    move-result-object v26

    #@bf
    move-object/from16 v0, v20

    #@c1
    move-object/from16 v1, v26

    #@c3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c6
    .line 3149
    :cond_3
    :goto_0
    :sswitch_0
    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c9
    move-result-object v26

    #@ca
    return-object v26

    #@cb
    .line 2588
    :sswitch_1
    const-string/jumbo v26, " "

    #@ce
    move-object/from16 v0, v20

    #@d0
    move-object/from16 v1, v26

    #@d2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d5
    .line 2589
    move-object/from16 v0, p1

    #@d7
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@d9
    move/from16 v26, v0

    #@db
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@de
    move-result-object v26

    #@df
    move-object/from16 v0, v20

    #@e1
    move-object/from16 v1, v26

    #@e3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e6
    .line 2590
    const-string/jumbo v26, " "

    #@e9
    move-object/from16 v0, v20

    #@eb
    move-object/from16 v1, v26

    #@ed
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f0
    .line 2591
    move-object/from16 v0, p1

    #@f2
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@f4
    move/from16 v26, v0

    #@f6
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@f9
    move-result-object v26

    #@fa
    move-object/from16 v0, v20

    #@fc
    move-object/from16 v1, v26

    #@fe
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@101
    .line 2592
    move-object/from16 v0, p1

    #@103
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@105
    move-object/from16 v26, v0

    #@107
    if-eqz v26, :cond_3

    #@109
    .line 2593
    const-string/jumbo v26, " "

    #@10c
    move-object/from16 v0, v20

    #@10e
    move-object/from16 v1, v26

    #@110
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@113
    move-result-object v27

    #@114
    move-object/from16 v0, p1

    #@116
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@118
    move-object/from16 v26, v0

    #@11a
    check-cast v26, Ljava/lang/String;

    #@11c
    move-object/from16 v0, v27

    #@11e
    move-object/from16 v1, v26

    #@120
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@123
    goto :goto_0

    #@124
    .line 2597
    :sswitch_2
    const-string/jumbo v26, " "

    #@127
    move-object/from16 v0, v20

    #@129
    move-object/from16 v1, v26

    #@12b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12e
    .line 2598
    move-object/from16 v0, p1

    #@130
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@132
    move/from16 v26, v0

    #@134
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@137
    move-result-object v26

    #@138
    move-object/from16 v0, v20

    #@13a
    move-object/from16 v1, v26

    #@13c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13f
    .line 2599
    const-string/jumbo v26, " "

    #@142
    move-object/from16 v0, v20

    #@144
    move-object/from16 v1, v26

    #@146
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@149
    .line 2600
    move-object/from16 v0, p1

    #@14b
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@14d
    move/from16 v26, v0

    #@14f
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@152
    move-result-object v26

    #@153
    move-object/from16 v0, v20

    #@155
    move-object/from16 v1, v26

    #@157
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15a
    .line 2601
    const-string/jumbo v26, "/"

    #@15d
    move-object/from16 v0, v20

    #@15f
    move-object/from16 v1, v26

    #@161
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@164
    move-result-object v26

    #@165
    sget v27, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@167
    invoke-static/range {v27 .. v27}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@16a
    move-result-object v27

    #@16b
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16e
    .line 2602
    move-object/from16 v0, p1

    #@170
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@172
    move-object/from16 v26, v0

    #@174
    if-eqz v26, :cond_3

    #@176
    .line 2603
    const-string/jumbo v26, " "

    #@179
    move-object/from16 v0, v20

    #@17b
    move-object/from16 v1, v26

    #@17d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@180
    move-result-object v27

    #@181
    move-object/from16 v0, p1

    #@183
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@185
    move-object/from16 v26, v0

    #@187
    check-cast v26, Ljava/lang/String;

    #@189
    move-object/from16 v0, v27

    #@18b
    move-object/from16 v1, v26

    #@18d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@190
    goto/16 :goto_0

    #@192
    .line 2607
    :sswitch_3
    const-string/jumbo v26, " "

    #@195
    move-object/from16 v0, v20

    #@197
    move-object/from16 v1, v26

    #@199
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19c
    .line 2608
    move-object/from16 v0, p1

    #@19e
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@1a0
    move/from16 v26, v0

    #@1a2
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1a5
    move-result-object v26

    #@1a6
    move-object/from16 v0, v20

    #@1a8
    move-object/from16 v1, v26

    #@1aa
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1ad
    .line 2609
    const-string/jumbo v26, " "

    #@1b0
    move-object/from16 v0, v20

    #@1b2
    move-object/from16 v1, v26

    #@1b4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1b7
    .line 2610
    move-object/from16 v0, p1

    #@1b9
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@1bb
    move/from16 v26, v0

    #@1bd
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1c0
    move-result-object v26

    #@1c1
    move-object/from16 v0, v20

    #@1c3
    move-object/from16 v1, v26

    #@1c5
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c8
    .line 2611
    const-string/jumbo v26, " halAllowed="

    #@1cb
    move-object/from16 v0, v20

    #@1cd
    move-object/from16 v1, v26

    #@1cf
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1d2
    move-result-object v26

    #@1d3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@1d6
    move-result v27

    #@1d7
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@1da
    .line 2612
    const-string/jumbo v26, " scanAllowed="

    #@1dd
    move-object/from16 v0, v20

    #@1df
    move-object/from16 v1, v26

    #@1e1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1e4
    move-result-object v26

    #@1e5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->allowFullBandScanAndAssociated()Z

    #@1e8
    move-result v27

    #@1e9
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@1ec
    .line 2613
    const-string/jumbo v26, " autojoinAllowed="

    #@1ef
    move-object/from16 v0, v20

    #@1f1
    move-object/from16 v1, v26

    #@1f3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f6
    .line 2614
    move-object/from16 v0, p0

    #@1f8
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1fa
    move-object/from16 v26, v0

    #@1fc
    move-object/from16 v0, v26

    #@1fe
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->enableAutoJoinWhenAssociated:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@200
    move-object/from16 v26, v0

    #@202
    invoke-virtual/range {v26 .. v26}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    #@205
    move-result v26

    #@206
    move-object/from16 v0, v20

    #@208
    move/from16 v1, v26

    #@20a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@20d
    .line 2615
    const-string/jumbo v26, " withTraffic="

    #@210
    move-object/from16 v0, v20

    #@212
    move-object/from16 v1, v26

    #@214
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@217
    move-result-object v26

    #@218
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getAllowScansWithTraffic()I

    #@21b
    move-result v27

    #@21c
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@21f
    .line 2616
    const-string/jumbo v26, " tx="

    #@222
    move-object/from16 v0, v20

    #@224
    move-object/from16 v1, v26

    #@226
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@229
    move-result-object v26

    #@22a
    move-object/from16 v0, p0

    #@22c
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@22e
    move-object/from16 v27, v0

    #@230
    move-object/from16 v0, v27

    #@232
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@234
    move-wide/from16 v28, v0

    #@236
    move-object/from16 v0, v26

    #@238
    move-wide/from16 v1, v28

    #@23a
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;

    #@23d
    .line 2617
    const-string/jumbo v26, "/"

    #@240
    move-object/from16 v0, v20

    #@242
    move-object/from16 v1, v26

    #@244
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@247
    move-result-object v26

    #@248
    move-object/from16 v0, p0

    #@24a
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@24c
    move-object/from16 v27, v0

    #@24e
    move-object/from16 v0, v27

    #@250
    iget v0, v0, Lcom/android/server/wifi/WifiConfigStore;->maxTxPacketForFullScans:I

    #@252
    move/from16 v27, v0

    #@254
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@257
    .line 2618
    const-string/jumbo v26, " rx="

    #@25a
    move-object/from16 v0, v20

    #@25c
    move-object/from16 v1, v26

    #@25e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@261
    move-result-object v26

    #@262
    move-object/from16 v0, p0

    #@264
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@266
    move-object/from16 v27, v0

    #@268
    move-object/from16 v0, v27

    #@26a
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@26c
    move-wide/from16 v28, v0

    #@26e
    move-object/from16 v0, v26

    #@270
    move-wide/from16 v1, v28

    #@272
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(D)Ljava/lang/StringBuilder;

    #@275
    .line 2619
    const-string/jumbo v26, "/"

    #@278
    move-object/from16 v0, v20

    #@27a
    move-object/from16 v1, v26

    #@27c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@27f
    move-result-object v26

    #@280
    move-object/from16 v0, p0

    #@282
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@284
    move-object/from16 v27, v0

    #@286
    move-object/from16 v0, v27

    #@288
    iget v0, v0, Lcom/android/server/wifi/WifiConfigStore;->maxRxPacketForFullScans:I

    #@28a
    move/from16 v27, v0

    #@28c
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@28f
    .line 2620
    const-string/jumbo v26, " -> "

    #@292
    move-object/from16 v0, v20

    #@294
    move-object/from16 v1, v26

    #@296
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@299
    move-result-object v26

    #@29a
    move-object/from16 v0, p0

    #@29c
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedModeGScanOffloadStarted:Z

    #@29e
    move/from16 v27, v0

    #@2a0
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@2a3
    goto/16 :goto_0

    #@2a5
    .line 2623
    :sswitch_4
    const-string/jumbo v26, " "

    #@2a8
    move-object/from16 v0, v20

    #@2aa
    move-object/from16 v1, v26

    #@2ac
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2af
    .line 2624
    move-object/from16 v0, p1

    #@2b1
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@2b3
    move/from16 v26, v0

    #@2b5
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@2b8
    move-result-object v26

    #@2b9
    move-object/from16 v0, v20

    #@2bb
    move-object/from16 v1, v26

    #@2bd
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c0
    .line 2625
    const-string/jumbo v26, " "

    #@2c3
    move-object/from16 v0, v20

    #@2c5
    move-object/from16 v1, v26

    #@2c7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2ca
    .line 2626
    move-object/from16 v0, p1

    #@2cc
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@2ce
    move/from16 v26, v0

    #@2d0
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@2d3
    move-result-object v26

    #@2d4
    move-object/from16 v0, v20

    #@2d6
    move-object/from16 v1, v26

    #@2d8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2db
    .line 2627
    move-object/from16 v0, p1

    #@2dd
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@2df
    move-object/from16 v26, v0

    #@2e1
    if-eqz v26, :cond_3

    #@2e3
    .line 2628
    move-object/from16 v0, p1

    #@2e5
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@2e7
    move-object/from16 v19, v0

    #@2e9
    check-cast v19, [Landroid/net/wifi/ScanResult;

    #@2eb
    .line 2629
    .local v19, "results":[Landroid/net/wifi/ScanResult;
    const/4 v11, 0x0

    #@2ec
    .local v11, "i":I
    :goto_1
    move-object/from16 v0, v19

    #@2ee
    array-length v0, v0

    #@2ef
    move/from16 v26, v0

    #@2f1
    move/from16 v0, v26

    #@2f3
    if-ge v11, v0, :cond_3

    #@2f5
    .line 2630
    const-string/jumbo v26, " "

    #@2f8
    move-object/from16 v0, v20

    #@2fa
    move-object/from16 v1, v26

    #@2fc
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2ff
    move-result-object v26

    #@300
    aget-object v27, v19, v11

    #@302
    move-object/from16 v0, v27

    #@304
    iget-object v0, v0, Landroid/net/wifi/ScanResult;->SSID:Ljava/lang/String;

    #@306
    move-object/from16 v27, v0

    #@308
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30b
    move-result-object v26

    #@30c
    const-string/jumbo v27, " "

    #@30f
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@312
    .line 2631
    aget-object v26, v19, v11

    #@314
    move-object/from16 v0, v26

    #@316
    iget v0, v0, Landroid/net/wifi/ScanResult;->frequency:I

    #@318
    move/from16 v26, v0

    #@31a
    move-object/from16 v0, v20

    #@31c
    move/from16 v1, v26

    #@31e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@321
    .line 2632
    const-string/jumbo v26, " "

    #@324
    move-object/from16 v0, v20

    #@326
    move-object/from16 v1, v26

    #@328
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32b
    move-result-object v26

    #@32c
    aget-object v27, v19, v11

    #@32e
    move-object/from16 v0, v27

    #@330
    iget v0, v0, Landroid/net/wifi/ScanResult;->level:I

    #@332
    move/from16 v27, v0

    #@334
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@337
    .line 2629
    add-int/lit8 v11, v11, 0x1

    #@339
    goto :goto_1

    #@33a
    .line 2637
    .end local v11    # "i":I
    .end local v19    # "results":[Landroid/net/wifi/ScanResult;
    :sswitch_5
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@33d
    move-result-wide v26

    #@33e
    invoke-static/range {v26 .. v27}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    #@341
    move-result-object v14

    #@342
    .line 2638
    .local v14, "now":Ljava/lang/Long;
    const-string/jumbo v26, " "

    #@345
    move-object/from16 v0, v20

    #@347
    move-object/from16 v1, v26

    #@349
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@34c
    .line 2639
    move-object/from16 v0, p1

    #@34e
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@350
    move/from16 v26, v0

    #@352
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@355
    move-result-object v26

    #@356
    move-object/from16 v0, v20

    #@358
    move-object/from16 v1, v26

    #@35a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@35d
    .line 2640
    const-string/jumbo v26, " "

    #@360
    move-object/from16 v0, v20

    #@362
    move-object/from16 v1, v26

    #@364
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@367
    .line 2641
    move-object/from16 v0, p1

    #@369
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@36b
    move/from16 v26, v0

    #@36d
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@370
    move-result-object v26

    #@371
    move-object/from16 v0, v20

    #@373
    move-object/from16 v1, v26

    #@375
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@378
    .line 2642
    const-string/jumbo v26, " ic="

    #@37b
    move-object/from16 v0, v20

    #@37d
    move-object/from16 v1, v26

    #@37f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@382
    .line 2643
    sget v26, Lcom/android/server/wifi/WifiStateMachine;->sScanAlarmIntentCount:I

    #@384
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@387
    move-result-object v26

    #@388
    move-object/from16 v0, v20

    #@38a
    move-object/from16 v1, v26

    #@38c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@38f
    .line 2644
    move-object/from16 v0, p1

    #@391
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@393
    move-object/from16 v26, v0

    #@395
    if-eqz v26, :cond_4

    #@397
    .line 2645
    move-object/from16 v0, p1

    #@399
    iget-object v5, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@39b
    check-cast v5, Landroid/os/Bundle;

    #@39d
    .line 2646
    .local v5, "bundle":Landroid/os/Bundle;
    const-string/jumbo v26, "scan_request_time"

    #@3a0
    const-wide/16 v28, 0x0

    #@3a2
    move-object/from16 v0, v26

    #@3a4
    move-wide/from16 v1, v28

    #@3a6
    invoke-virtual {v5, v0, v1, v2}, Landroid/os/Bundle;->getLong(Ljava/lang/String;J)J

    #@3a9
    move-result-wide v26

    #@3aa
    invoke-static/range {v26 .. v27}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    #@3ad
    move-result-object v17

    #@3ae
    .line 2647
    .local v17, "request":Ljava/lang/Long;
    invoke-virtual/range {v17 .. v17}, Ljava/lang/Long;->longValue()J

    #@3b1
    move-result-wide v26

    #@3b2
    const-wide/16 v28, 0x0

    #@3b4
    cmp-long v26, v26, v28

    #@3b6
    if-eqz v26, :cond_4

    #@3b8
    .line 2648
    const-string/jumbo v26, " proc(ms):"

    #@3bb
    move-object/from16 v0, v20

    #@3bd
    move-object/from16 v1, v26

    #@3bf
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3c2
    move-result-object v26

    #@3c3
    invoke-virtual {v14}, Ljava/lang/Long;->longValue()J

    #@3c6
    move-result-wide v28

    #@3c7
    invoke-virtual/range {v17 .. v17}, Ljava/lang/Long;->longValue()J

    #@3ca
    move-result-wide v30

    #@3cb
    sub-long v28, v28, v30

    #@3cd
    move-object/from16 v0, v26

    #@3cf
    move-wide/from16 v1, v28

    #@3d1
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@3d4
    .line 2651
    .end local v5    # "bundle":Landroid/os/Bundle;
    .end local v17    # "request":Ljava/lang/Long;
    :cond_4
    move-object/from16 v0, p0

    #@3d6
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mIsScanOngoing:Z

    #@3d8
    move/from16 v26, v0

    #@3da
    if-eqz v26, :cond_5

    #@3dc
    const-string/jumbo v26, " onGoing"

    #@3df
    move-object/from16 v0, v20

    #@3e1
    move-object/from16 v1, v26

    #@3e3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3e6
    .line 2652
    :cond_5
    move-object/from16 v0, p0

    #@3e8
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mIsFullScanOngoing:Z

    #@3ea
    move/from16 v26, v0

    #@3ec
    if-eqz v26, :cond_6

    #@3ee
    const-string/jumbo v26, " full"

    #@3f1
    move-object/from16 v0, v20

    #@3f3
    move-object/from16 v1, v26

    #@3f5
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3f8
    .line 2653
    :cond_6
    move-object/from16 v0, p0

    #@3fa
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastStartScanTimeStamp:J

    #@3fc
    move-wide/from16 v26, v0

    #@3fe
    const-wide/16 v28, 0x0

    #@400
    cmp-long v26, v26, v28

    #@402
    if-eqz v26, :cond_7

    #@404
    .line 2654
    const-string/jumbo v26, " started:"

    #@407
    move-object/from16 v0, v20

    #@409
    move-object/from16 v1, v26

    #@40b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@40e
    move-result-object v26

    #@40f
    move-object/from16 v0, p0

    #@411
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastStartScanTimeStamp:J

    #@413
    move-wide/from16 v28, v0

    #@415
    move-object/from16 v0, v26

    #@417
    move-wide/from16 v1, v28

    #@419
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@41c
    .line 2655
    const-string/jumbo v26, ","

    #@41f
    move-object/from16 v0, v20

    #@421
    move-object/from16 v1, v26

    #@423
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@426
    move-result-object v26

    #@427
    invoke-virtual {v14}, Ljava/lang/Long;->longValue()J

    #@42a
    move-result-wide v28

    #@42b
    move-object/from16 v0, p0

    #@42d
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastStartScanTimeStamp:J

    #@42f
    move-wide/from16 v30, v0

    #@431
    sub-long v28, v28, v30

    #@433
    move-object/from16 v0, v26

    #@435
    move-wide/from16 v1, v28

    #@437
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@43a
    .line 2657
    :cond_7
    move-object/from16 v0, p0

    #@43c
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScanDuration:J

    #@43e
    move-wide/from16 v26, v0

    #@440
    const-wide/16 v28, 0x0

    #@442
    cmp-long v26, v26, v28

    #@444
    if-eqz v26, :cond_8

    #@446
    .line 2658
    const-string/jumbo v26, " dur:"

    #@449
    move-object/from16 v0, v20

    #@44b
    move-object/from16 v1, v26

    #@44d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@450
    move-result-object v26

    #@451
    move-object/from16 v0, p0

    #@453
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScanDuration:J

    #@455
    move-wide/from16 v28, v0

    #@457
    move-object/from16 v0, v26

    #@459
    move-wide/from16 v1, v28

    #@45b
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@45e
    .line 2660
    :cond_8
    const-string/jumbo v26, " cnt="

    #@461
    move-object/from16 v0, v20

    #@463
    move-object/from16 v1, v26

    #@465
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@468
    move-result-object v26

    #@469
    move-object/from16 v0, p0

    #@46b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mDelayedScanCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    #@46d
    move-object/from16 v27, v0

    #@46f
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@472
    .line 2661
    const-string/jumbo v26, " rssi="

    #@475
    move-object/from16 v0, v20

    #@477
    move-object/from16 v1, v26

    #@479
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@47c
    move-result-object v26

    #@47d
    move-object/from16 v0, p0

    #@47f
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@481
    move-object/from16 v27, v0

    #@483
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@486
    move-result v27

    #@487
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@48a
    .line 2662
    const-string/jumbo v26, " f="

    #@48d
    move-object/from16 v0, v20

    #@48f
    move-object/from16 v1, v26

    #@491
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@494
    move-result-object v26

    #@495
    move-object/from16 v0, p0

    #@497
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@499
    move-object/from16 v27, v0

    #@49b
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getFrequency()I

    #@49e
    move-result v27

    #@49f
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4a2
    .line 2663
    const-string/jumbo v26, " sc="

    #@4a5
    move-object/from16 v0, v20

    #@4a7
    move-object/from16 v1, v26

    #@4a9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4ac
    move-result-object v26

    #@4ad
    move-object/from16 v0, p0

    #@4af
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4b1
    move-object/from16 v27, v0

    #@4b3
    move-object/from16 v0, v27

    #@4b5
    iget v0, v0, Landroid/net/wifi/WifiInfo;->score:I

    #@4b7
    move/from16 v27, v0

    #@4b9
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4bc
    .line 2664
    const-string/jumbo v26, " link="

    #@4bf
    move-object/from16 v0, v20

    #@4c1
    move-object/from16 v1, v26

    #@4c3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4c6
    move-result-object v26

    #@4c7
    move-object/from16 v0, p0

    #@4c9
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4cb
    move-object/from16 v27, v0

    #@4cd
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getLinkSpeed()I

    #@4d0
    move-result v27

    #@4d1
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4d4
    .line 2665
    const-string/jumbo v26, " tx=%.1f,"

    #@4d7
    const/16 v27, 0x1

    #@4d9
    move/from16 v0, v27

    #@4db
    new-array v0, v0, [Ljava/lang/Object;

    #@4dd
    move-object/from16 v27, v0

    #@4df
    move-object/from16 v0, p0

    #@4e1
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@4e3
    move-object/from16 v28, v0

    #@4e5
    move-object/from16 v0, v28

    #@4e7
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@4e9
    move-wide/from16 v28, v0

    #@4eb
    invoke-static/range {v28 .. v29}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@4ee
    move-result-object v28

    #@4ef
    const/16 v29, 0x0

    #@4f1
    aput-object v28, v27, v29

    #@4f3
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@4f6
    move-result-object v26

    #@4f7
    move-object/from16 v0, v20

    #@4f9
    move-object/from16 v1, v26

    #@4fb
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4fe
    .line 2666
    const-string/jumbo v26, " %.1f,"

    #@501
    const/16 v27, 0x1

    #@503
    move/from16 v0, v27

    #@505
    new-array v0, v0, [Ljava/lang/Object;

    #@507
    move-object/from16 v27, v0

    #@509
    move-object/from16 v0, p0

    #@50b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@50d
    move-object/from16 v28, v0

    #@50f
    move-object/from16 v0, v28

    #@511
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txRetriesRate:D

    #@513
    move-wide/from16 v28, v0

    #@515
    invoke-static/range {v28 .. v29}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@518
    move-result-object v28

    #@519
    const/16 v29, 0x0

    #@51b
    aput-object v28, v27, v29

    #@51d
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@520
    move-result-object v26

    #@521
    move-object/from16 v0, v20

    #@523
    move-object/from16 v1, v26

    #@525
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@528
    .line 2667
    const-string/jumbo v26, " %.1f "

    #@52b
    const/16 v27, 0x1

    #@52d
    move/from16 v0, v27

    #@52f
    new-array v0, v0, [Ljava/lang/Object;

    #@531
    move-object/from16 v27, v0

    #@533
    move-object/from16 v0, p0

    #@535
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@537
    move-object/from16 v28, v0

    #@539
    move-object/from16 v0, v28

    #@53b
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txBadRate:D

    #@53d
    move-wide/from16 v28, v0

    #@53f
    invoke-static/range {v28 .. v29}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@542
    move-result-object v28

    #@543
    const/16 v29, 0x0

    #@545
    aput-object v28, v27, v29

    #@547
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@54a
    move-result-object v26

    #@54b
    move-object/from16 v0, v20

    #@54d
    move-object/from16 v1, v26

    #@54f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@552
    .line 2668
    const-string/jumbo v26, " rx=%.1f"

    #@555
    const/16 v27, 0x1

    #@557
    move/from16 v0, v27

    #@559
    new-array v0, v0, [Ljava/lang/Object;

    #@55b
    move-object/from16 v27, v0

    #@55d
    move-object/from16 v0, p0

    #@55f
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@561
    move-object/from16 v28, v0

    #@563
    move-object/from16 v0, v28

    #@565
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@567
    move-wide/from16 v28, v0

    #@569
    invoke-static/range {v28 .. v29}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@56c
    move-result-object v28

    #@56d
    const/16 v29, 0x0

    #@56f
    aput-object v28, v27, v29

    #@571
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@574
    move-result-object v26

    #@575
    move-object/from16 v0, v20

    #@577
    move-object/from16 v1, v26

    #@579
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@57c
    .line 2669
    move-object/from16 v0, p0

    #@57e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScanFreqs:Ljava/lang/String;

    #@580
    move-object/from16 v26, v0

    #@582
    if-eqz v26, :cond_9

    #@584
    .line 2670
    const-string/jumbo v26, " list="

    #@587
    move-object/from16 v0, v20

    #@589
    move-object/from16 v1, v26

    #@58b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@58e
    move-result-object v26

    #@58f
    move-object/from16 v0, p0

    #@591
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScanFreqs:Ljava/lang/String;

    #@593
    move-object/from16 v27, v0

    #@595
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@598
    .line 2674
    :goto_2
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->reportOnTime()Ljava/lang/String;

    #@59b
    move-result-object v16

    #@59c
    .line 2675
    .local v16, "report":Ljava/lang/String;
    if-eqz v16, :cond_3

    #@59e
    .line 2676
    const-string/jumbo v26, " "

    #@5a1
    move-object/from16 v0, v20

    #@5a3
    move-object/from16 v1, v26

    #@5a5
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5a8
    move-result-object v26

    #@5a9
    move-object/from16 v0, v26

    #@5ab
    move-object/from16 v1, v16

    #@5ad
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5b0
    goto/16 :goto_0

    #@5b2
    .line 2672
    .end local v16    # "report":Ljava/lang/String;
    :cond_9
    const-string/jumbo v26, " fiv="

    #@5b5
    move-object/from16 v0, v20

    #@5b7
    move-object/from16 v1, v26

    #@5b9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5bc
    move-result-object v26

    #@5bd
    move-object/from16 v0, p0

    #@5bf
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->fullBandConnectedTimeIntervalMilli:J

    #@5c1
    move-wide/from16 v28, v0

    #@5c3
    move-object/from16 v0, v26

    #@5c5
    move-wide/from16 v1, v28

    #@5c7
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@5ca
    goto :goto_2

    #@5cb
    .line 2680
    .end local v14    # "now":Ljava/lang/Long;
    :sswitch_6
    const-string/jumbo v26, " "

    #@5ce
    move-object/from16 v0, v20

    #@5d0
    move-object/from16 v1, v26

    #@5d2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d5
    .line 2681
    move-object/from16 v0, p1

    #@5d7
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@5d9
    move/from16 v26, v0

    #@5db
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@5de
    move-result-object v26

    #@5df
    move-object/from16 v0, v20

    #@5e1
    move-object/from16 v1, v26

    #@5e3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5e6
    .line 2682
    const-string/jumbo v26, " "

    #@5e9
    move-object/from16 v0, v20

    #@5eb
    move-object/from16 v1, v26

    #@5ed
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5f0
    .line 2683
    move-object/from16 v0, p1

    #@5f2
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@5f4
    move/from16 v26, v0

    #@5f6
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@5f9
    move-result-object v26

    #@5fa
    move-object/from16 v0, v20

    #@5fc
    move-object/from16 v1, v26

    #@5fe
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@601
    .line 2684
    move-object/from16 v0, p1

    #@603
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@605
    move-object/from16 v25, v0

    #@607
    check-cast v25, Lcom/android/server/wifi/StateChangeResult;

    #@609
    .line 2685
    .local v25, "stateChangeResult":Lcom/android/server/wifi/StateChangeResult;
    if-eqz v25, :cond_3

    #@60b
    .line 2686
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wifi/StateChangeResult;->toString()Ljava/lang/String;

    #@60e
    move-result-object v26

    #@60f
    move-object/from16 v0, v20

    #@611
    move-object/from16 v1, v26

    #@613
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@616
    goto/16 :goto_0

    #@618
    .line 2691
    .end local v25    # "stateChangeResult":Lcom/android/server/wifi/StateChangeResult;
    :sswitch_7
    const-string/jumbo v26, " "

    #@61b
    move-object/from16 v0, v20

    #@61d
    move-object/from16 v1, v26

    #@61f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@622
    .line 2692
    move-object/from16 v0, p1

    #@624
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@626
    move/from16 v26, v0

    #@628
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@62b
    move-result-object v26

    #@62c
    move-object/from16 v0, v20

    #@62e
    move-object/from16 v1, v26

    #@630
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@633
    .line 2693
    const-string/jumbo v26, " "

    #@636
    move-object/from16 v0, v20

    #@638
    move-object/from16 v1, v26

    #@63a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@63d
    .line 2694
    move-object/from16 v0, p1

    #@63f
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@641
    move/from16 v26, v0

    #@643
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@646
    move-result-object v26

    #@647
    move-object/from16 v0, v20

    #@649
    move-object/from16 v1, v26

    #@64b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@64e
    .line 2695
    move-object/from16 v0, p0

    #@650
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@652
    move-object/from16 v26, v0

    #@654
    if-eqz v26, :cond_3

    #@656
    .line 2696
    const-string/jumbo v26, " "

    #@659
    move-object/from16 v0, v20

    #@65b
    move-object/from16 v1, v26

    #@65d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@660
    move-result-object v26

    #@661
    move-object/from16 v0, p0

    #@663
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@665
    move-object/from16 v27, v0

    #@667
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@66a
    move-result-object v27

    #@66b
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@66e
    .line 2697
    const-string/jumbo v26, " nid="

    #@671
    move-object/from16 v0, v20

    #@673
    move-object/from16 v1, v26

    #@675
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@678
    move-result-object v26

    #@679
    move-object/from16 v0, p0

    #@67b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@67d
    move-object/from16 v27, v0

    #@67f
    move-object/from16 v0, v27

    #@681
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->networkId:I

    #@683
    move/from16 v27, v0

    #@685
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@688
    .line 2698
    move-object/from16 v0, p0

    #@68a
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@68c
    move-object/from16 v26, v0

    #@68e
    move-object/from16 v0, v26

    #@690
    iget-boolean v0, v0, Landroid/net/wifi/WifiConfiguration;->hiddenSSID:Z

    #@692
    move/from16 v26, v0

    #@694
    if-eqz v26, :cond_a

    #@696
    .line 2699
    const-string/jumbo v26, " hidden"

    #@699
    move-object/from16 v0, v20

    #@69b
    move-object/from16 v1, v26

    #@69d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6a0
    .line 2701
    :cond_a
    move-object/from16 v0, p0

    #@6a2
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@6a4
    move-object/from16 v26, v0

    #@6a6
    move-object/from16 v0, v26

    #@6a8
    iget-object v0, v0, Landroid/net/wifi/WifiConfiguration;->preSharedKey:Ljava/lang/String;

    #@6aa
    move-object/from16 v26, v0

    #@6ac
    if-eqz v26, :cond_b

    #@6ae
    .line 2702
    move-object/from16 v0, p0

    #@6b0
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@6b2
    move-object/from16 v26, v0

    #@6b4
    move-object/from16 v0, v26

    #@6b6
    iget-object v0, v0, Landroid/net/wifi/WifiConfiguration;->preSharedKey:Ljava/lang/String;

    #@6b8
    move-object/from16 v26, v0

    #@6ba
    const-string/jumbo v27, "*"

    #@6bd
    invoke-virtual/range {v26 .. v27}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@6c0
    move-result v26

    #@6c1
    if-eqz v26, :cond_e

    #@6c3
    .line 2705
    :cond_b
    :goto_3
    move-object/from16 v0, p0

    #@6c5
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@6c7
    move-object/from16 v26, v0

    #@6c9
    move-object/from16 v0, v26

    #@6cb
    iget-boolean v0, v0, Landroid/net/wifi/WifiConfiguration;->ephemeral:Z

    #@6cd
    move/from16 v26, v0

    #@6cf
    if-eqz v26, :cond_c

    #@6d1
    .line 2706
    const-string/jumbo v26, " ephemeral"

    #@6d4
    move-object/from16 v0, v20

    #@6d6
    move-object/from16 v1, v26

    #@6d8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6db
    .line 2708
    :cond_c
    move-object/from16 v0, p0

    #@6dd
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@6df
    move-object/from16 v26, v0

    #@6e1
    move-object/from16 v0, v26

    #@6e3
    iget-boolean v0, v0, Landroid/net/wifi/WifiConfiguration;->selfAdded:Z

    #@6e5
    move/from16 v26, v0

    #@6e7
    if-eqz v26, :cond_d

    #@6e9
    .line 2709
    const-string/jumbo v26, " selfAdded"

    #@6ec
    move-object/from16 v0, v20

    #@6ee
    move-object/from16 v1, v26

    #@6f0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6f3
    .line 2711
    :cond_d
    const-string/jumbo v26, " cuid="

    #@6f6
    move-object/from16 v0, v20

    #@6f8
    move-object/from16 v1, v26

    #@6fa
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6fd
    move-result-object v26

    #@6fe
    move-object/from16 v0, p0

    #@700
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@702
    move-object/from16 v27, v0

    #@704
    move-object/from16 v0, v27

    #@706
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->creatorUid:I

    #@708
    move/from16 v27, v0

    #@70a
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@70d
    .line 2712
    const-string/jumbo v26, " suid="

    #@710
    move-object/from16 v0, v20

    #@712
    move-object/from16 v1, v26

    #@714
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@717
    move-result-object v26

    #@718
    move-object/from16 v0, p0

    #@71a
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastSavedConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@71c
    move-object/from16 v27, v0

    #@71e
    move-object/from16 v0, v27

    #@720
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->lastUpdateUid:I

    #@722
    move/from16 v27, v0

    #@724
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@727
    goto/16 :goto_0

    #@729
    .line 2703
    :cond_e
    const-string/jumbo v26, " hasPSK"

    #@72c
    move-object/from16 v0, v20

    #@72e
    move-object/from16 v1, v26

    #@730
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@733
    goto :goto_3

    #@734
    .line 2716
    :sswitch_8
    const-string/jumbo v26, " "

    #@737
    move-object/from16 v0, v20

    #@739
    move-object/from16 v1, v26

    #@73b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@73e
    .line 2717
    move-object/from16 v0, p1

    #@740
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@742
    move/from16 v26, v0

    #@744
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@747
    move-result-object v26

    #@748
    move-object/from16 v0, v20

    #@74a
    move-object/from16 v1, v26

    #@74c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@74f
    .line 2718
    const-string/jumbo v26, " "

    #@752
    move-object/from16 v0, v20

    #@754
    move-object/from16 v1, v26

    #@756
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@759
    .line 2719
    move-object/from16 v0, p1

    #@75b
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@75d
    move/from16 v26, v0

    #@75f
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@762
    move-result-object v26

    #@763
    move-object/from16 v0, v20

    #@765
    move-object/from16 v1, v26

    #@767
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@76a
    .line 2720
    move-object/from16 v0, p0

    #@76c
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@76e
    move-object/from16 v26, v0

    #@770
    if-eqz v26, :cond_3

    #@772
    .line 2721
    const-string/jumbo v26, " "

    #@775
    move-object/from16 v0, v20

    #@777
    move-object/from16 v1, v26

    #@779
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@77c
    move-result-object v26

    #@77d
    move-object/from16 v0, p0

    #@77f
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@781
    move-object/from16 v27, v0

    #@783
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@786
    move-result-object v27

    #@787
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@78a
    .line 2722
    const-string/jumbo v26, " nid="

    #@78d
    move-object/from16 v0, v20

    #@78f
    move-object/from16 v1, v26

    #@791
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@794
    move-result-object v26

    #@795
    move-object/from16 v0, p0

    #@797
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@799
    move-object/from16 v27, v0

    #@79b
    move-object/from16 v0, v27

    #@79d
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->networkId:I

    #@79f
    move/from16 v27, v0

    #@7a1
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@7a4
    .line 2723
    move-object/from16 v0, p0

    #@7a6
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@7a8
    move-object/from16 v26, v0

    #@7aa
    move-object/from16 v0, v26

    #@7ac
    iget-boolean v0, v0, Landroid/net/wifi/WifiConfiguration;->hiddenSSID:Z

    #@7ae
    move/from16 v26, v0

    #@7b0
    if-eqz v26, :cond_f

    #@7b2
    .line 2724
    const-string/jumbo v26, " hidden"

    #@7b5
    move-object/from16 v0, v20

    #@7b7
    move-object/from16 v1, v26

    #@7b9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7bc
    .line 2726
    :cond_f
    move-object/from16 v0, p0

    #@7be
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@7c0
    move-object/from16 v26, v0

    #@7c2
    move-object/from16 v0, v26

    #@7c4
    iget-object v0, v0, Landroid/net/wifi/WifiConfiguration;->preSharedKey:Ljava/lang/String;

    #@7c6
    move-object/from16 v26, v0

    #@7c8
    if-eqz v26, :cond_10

    #@7ca
    .line 2727
    const-string/jumbo v26, " hasPSK"

    #@7cd
    move-object/from16 v0, v20

    #@7cf
    move-object/from16 v1, v26

    #@7d1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7d4
    .line 2729
    :cond_10
    move-object/from16 v0, p0

    #@7d6
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@7d8
    move-object/from16 v26, v0

    #@7da
    move-object/from16 v0, v26

    #@7dc
    iget-boolean v0, v0, Landroid/net/wifi/WifiConfiguration;->ephemeral:Z

    #@7de
    move/from16 v26, v0

    #@7e0
    if-eqz v26, :cond_11

    #@7e2
    .line 2730
    const-string/jumbo v26, " ephemeral"

    #@7e5
    move-object/from16 v0, v20

    #@7e7
    move-object/from16 v1, v26

    #@7e9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7ec
    .line 2732
    :cond_11
    move-object/from16 v0, p0

    #@7ee
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@7f0
    move-object/from16 v26, v0

    #@7f2
    move-object/from16 v0, v26

    #@7f4
    iget-boolean v0, v0, Landroid/net/wifi/WifiConfiguration;->selfAdded:Z

    #@7f6
    move/from16 v26, v0

    #@7f8
    if-eqz v26, :cond_12

    #@7fa
    .line 2733
    const-string/jumbo v26, " selfAdded"

    #@7fd
    move-object/from16 v0, v20

    #@7ff
    move-object/from16 v1, v26

    #@801
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@804
    .line 2735
    :cond_12
    const-string/jumbo v26, " cuid="

    #@807
    move-object/from16 v0, v20

    #@809
    move-object/from16 v1, v26

    #@80b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@80e
    move-result-object v26

    #@80f
    move-object/from16 v0, p0

    #@811
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@813
    move-object/from16 v27, v0

    #@815
    move-object/from16 v0, v27

    #@817
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->creatorUid:I

    #@819
    move/from16 v27, v0

    #@81b
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@81e
    .line 2736
    const-string/jumbo v26, " suid="

    #@821
    move-object/from16 v0, v20

    #@823
    move-object/from16 v1, v26

    #@825
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@828
    move-result-object v26

    #@829
    move-object/from16 v0, p0

    #@82b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@82d
    move-object/from16 v27, v0

    #@82f
    move-object/from16 v0, v27

    #@831
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->lastUpdateUid:I

    #@833
    move/from16 v27, v0

    #@835
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@838
    .line 2737
    const-string/jumbo v26, " ajst="

    #@83b
    move-object/from16 v0, v20

    #@83d
    move-object/from16 v1, v26

    #@83f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@842
    move-result-object v26

    #@843
    move-object/from16 v0, p0

    #@845
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastForgetConfigurationAttempt:Landroid/net/wifi/WifiConfiguration;

    #@847
    move-object/from16 v27, v0

    #@849
    move-object/from16 v0, v27

    #@84b
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->autoJoinStatus:I

    #@84d
    move/from16 v27, v0

    #@84f
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@852
    goto/16 :goto_0

    #@854
    .line 2741
    :sswitch_9
    const-string/jumbo v26, " "

    #@857
    move-object/from16 v0, v20

    #@859
    move-object/from16 v1, v26

    #@85b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@85e
    .line 2742
    move-object/from16 v0, p1

    #@860
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@862
    move/from16 v26, v0

    #@864
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@867
    move-result-object v26

    #@868
    move-object/from16 v0, v20

    #@86a
    move-object/from16 v1, v26

    #@86c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@86f
    .line 2743
    const-string/jumbo v26, " "

    #@872
    move-object/from16 v0, v20

    #@874
    move-object/from16 v1, v26

    #@876
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@879
    .line 2744
    move-object/from16 v0, p1

    #@87b
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@87d
    move/from16 v26, v0

    #@87f
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@882
    move-result-object v26

    #@883
    move-object/from16 v0, v20

    #@885
    move-object/from16 v1, v26

    #@887
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@88a
    .line 2745
    move-object/from16 v0, p1

    #@88c
    iget-object v4, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@88e
    check-cast v4, Ljava/lang/String;

    #@890
    .line 2746
    .local v4, "bssid":Ljava/lang/String;
    if-eqz v4, :cond_13

    #@892
    invoke-virtual {v4}, Ljava/lang/String;->length()I

    #@895
    move-result v26

    #@896
    if-lez v26, :cond_13

    #@898
    .line 2747
    const-string/jumbo v26, " "

    #@89b
    move-object/from16 v0, v20

    #@89d
    move-object/from16 v1, v26

    #@89f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8a2
    .line 2748
    move-object/from16 v0, v20

    #@8a4
    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8a7
    .line 2750
    :cond_13
    const-string/jumbo v26, " blacklist="

    #@8aa
    move-object/from16 v0, v20

    #@8ac
    move-object/from16 v1, v26

    #@8ae
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8b1
    move-result-object v26

    #@8b2
    move-object/from16 v0, p0

    #@8b4
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiStateMachine;->didBlackListBSSID:Z

    #@8b6
    move/from16 v27, v0

    #@8b8
    invoke-static/range {v27 .. v27}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    #@8bb
    move-result-object v27

    #@8bc
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8bf
    goto/16 :goto_0

    #@8c1
    .line 2753
    .end local v4    # "bssid":Ljava/lang/String;
    :sswitch_a
    const-string/jumbo v26, " "

    #@8c4
    move-object/from16 v0, v20

    #@8c6
    move-object/from16 v1, v26

    #@8c8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8cb
    .line 2754
    move-object/from16 v0, p1

    #@8cd
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@8cf
    move/from16 v26, v0

    #@8d1
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@8d4
    move-result-object v26

    #@8d5
    move-object/from16 v0, v20

    #@8d7
    move-object/from16 v1, v26

    #@8d9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8dc
    .line 2755
    const-string/jumbo v26, " "

    #@8df
    move-object/from16 v0, v20

    #@8e1
    move-object/from16 v1, v26

    #@8e3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8e6
    .line 2756
    move-object/from16 v0, p1

    #@8e8
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@8ea
    move/from16 v26, v0

    #@8ec
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@8ef
    move-result-object v26

    #@8f0
    move-object/from16 v0, v20

    #@8f2
    move-object/from16 v1, v26

    #@8f4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8f7
    .line 2757
    move-object/from16 v0, p0

    #@8f9
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@8fb
    move-object/from16 v26, v0

    #@8fd
    if-eqz v26, :cond_14

    #@8ff
    .line 2758
    const-string/jumbo v26, " found="

    #@902
    move-object/from16 v0, v20

    #@904
    move-object/from16 v1, v26

    #@906
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@909
    .line 2759
    move-object/from16 v0, p0

    #@90b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@90d
    move-object/from16 v26, v0

    #@90f
    invoke-interface/range {v26 .. v26}, Ljava/util/List;->size()I

    #@912
    move-result v26

    #@913
    move-object/from16 v0, v20

    #@915
    move/from16 v1, v26

    #@917
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@91a
    .line 2761
    :cond_14
    const-string/jumbo v26, " known="

    #@91d
    move-object/from16 v0, v20

    #@91f
    move-object/from16 v1, v26

    #@921
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@924
    move-result-object v26

    #@925
    move-object/from16 v0, p0

    #@927
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mNumScanResultsKnown:I

    #@929
    move/from16 v27, v0

    #@92b
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@92e
    .line 2762
    const-string/jumbo v26, " got="

    #@931
    move-object/from16 v0, v20

    #@933
    move-object/from16 v1, v26

    #@935
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@938
    move-result-object v26

    #@939
    move-object/from16 v0, p0

    #@93b
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mNumScanResultsReturned:I

    #@93d
    move/from16 v27, v0

    #@93f
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@942
    .line 2763
    move-object/from16 v0, p0

    #@944
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScanDuration:J

    #@946
    move-wide/from16 v26, v0

    #@948
    const-wide/16 v28, 0x0

    #@94a
    cmp-long v26, v26, v28

    #@94c
    if-eqz v26, :cond_15

    #@94e
    .line 2764
    const-string/jumbo v26, " dur:"

    #@951
    move-object/from16 v0, v20

    #@953
    move-object/from16 v1, v26

    #@955
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@958
    move-result-object v26

    #@959
    move-object/from16 v0, p0

    #@95b
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->lastScanDuration:J

    #@95d
    move-wide/from16 v28, v0

    #@95f
    move-object/from16 v0, v26

    #@961
    move-wide/from16 v1, v28

    #@963
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@966
    .line 2766
    :cond_15
    move-object/from16 v0, p0

    #@968
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@96a
    move/from16 v26, v0

    #@96c
    if-eqz v26, :cond_16

    #@96e
    .line 2767
    const-string/jumbo v26, " on:"

    #@971
    move-object/from16 v0, v20

    #@973
    move-object/from16 v1, v26

    #@975
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@978
    move-result-object v26

    #@979
    move-object/from16 v0, p0

    #@97b
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeThisScan:I

    #@97d
    move/from16 v27, v0

    #@97f
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@982
    move-result-object v26

    #@983
    const-string/jumbo v27, ","

    #@986
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@989
    move-result-object v26

    #@98a
    move-object/from16 v0, p0

    #@98c
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeScan:I

    #@98e
    move/from16 v27, v0

    #@990
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@993
    .line 2768
    const-string/jumbo v26, ","

    #@996
    move-object/from16 v0, v20

    #@998
    move-object/from16 v1, v26

    #@99a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@99d
    move-result-object v26

    #@99e
    move-object/from16 v0, p0

    #@9a0
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@9a2
    move/from16 v27, v0

    #@9a4
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@9a7
    .line 2770
    :cond_16
    move-object/from16 v0, p0

    #@9a9
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTime:I

    #@9ab
    move/from16 v26, v0

    #@9ad
    if-eqz v26, :cond_17

    #@9af
    .line 2771
    const-string/jumbo v26, " tx:"

    #@9b2
    move-object/from16 v0, v20

    #@9b4
    move-object/from16 v1, v26

    #@9b6
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9b9
    move-result-object v26

    #@9ba
    move-object/from16 v0, p0

    #@9bc
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeThisScan:I

    #@9be
    move/from16 v27, v0

    #@9c0
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@9c3
    move-result-object v26

    #@9c4
    const-string/jumbo v27, ","

    #@9c7
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9ca
    move-result-object v26

    #@9cb
    move-object/from16 v0, p0

    #@9cd
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeScan:I

    #@9cf
    move/from16 v27, v0

    #@9d1
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@9d4
    .line 2772
    const-string/jumbo v26, ","

    #@9d7
    move-object/from16 v0, v20

    #@9d9
    move-object/from16 v1, v26

    #@9db
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9de
    move-result-object v26

    #@9df
    move-object/from16 v0, p0

    #@9e1
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTxTime:I

    #@9e3
    move/from16 v27, v0

    #@9e5
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@9e8
    .line 2774
    :cond_17
    move-object/from16 v0, p0

    #@9ea
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTime:I

    #@9ec
    move/from16 v26, v0

    #@9ee
    if-eqz v26, :cond_18

    #@9f0
    .line 2775
    const-string/jumbo v26, " rx:"

    #@9f3
    move-object/from16 v0, v20

    #@9f5
    move-object/from16 v1, v26

    #@9f7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9fa
    move-result-object v26

    #@9fb
    move-object/from16 v0, p0

    #@9fd
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeThisScan:I

    #@9ff
    move/from16 v27, v0

    #@a01
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@a04
    move-result-object v26

    #@a05
    const-string/jumbo v27, ","

    #@a08
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a0b
    move-result-object v26

    #@a0c
    move-object/from16 v0, p0

    #@a0e
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeScan:I

    #@a10
    move/from16 v27, v0

    #@a12
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@a15
    .line 2776
    const-string/jumbo v26, ","

    #@a18
    move-object/from16 v0, v20

    #@a1a
    move-object/from16 v1, v26

    #@a1c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a1f
    move-result-object v26

    #@a20
    move-object/from16 v0, p0

    #@a22
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mRxTime:I

    #@a24
    move/from16 v27, v0

    #@a26
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@a29
    .line 2778
    :cond_18
    const-string/jumbo v26, " bcn=%d"

    #@a2c
    const/16 v27, 0x1

    #@a2e
    move/from16 v0, v27

    #@a30
    new-array v0, v0, [Ljava/lang/Object;

    #@a32
    move-object/from16 v27, v0

    #@a34
    move-object/from16 v0, p0

    #@a36
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mRunningBeaconCount:I

    #@a38
    move/from16 v28, v0

    #@a3a
    invoke-static/range {v28 .. v28}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@a3d
    move-result-object v28

    #@a3e
    const/16 v29, 0x0

    #@a40
    aput-object v28, v27, v29

    #@a42
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@a45
    move-result-object v26

    #@a46
    move-object/from16 v0, v20

    #@a48
    move-object/from16 v1, v26

    #@a4a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a4d
    .line 2779
    const-string/jumbo v26, " con=%d"

    #@a50
    const/16 v27, 0x1

    #@a52
    move/from16 v0, v27

    #@a54
    new-array v0, v0, [Ljava/lang/Object;

    #@a56
    move-object/from16 v27, v0

    #@a58
    move-object/from16 v0, p0

    #@a5a
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectionRequests:I

    #@a5c
    move/from16 v28, v0

    #@a5e
    invoke-static/range {v28 .. v28}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@a61
    move-result-object v28

    #@a62
    const/16 v29, 0x0

    #@a64
    aput-object v28, v27, v29

    #@a66
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@a69
    move-result-object v26

    #@a6a
    move-object/from16 v0, v20

    #@a6c
    move-object/from16 v1, v26

    #@a6e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a71
    .line 2780
    move-object/from16 v0, p0

    #@a73
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@a75
    move-object/from16 v26, v0

    #@a77
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wifi/WifiConfigStore;->getLastSelectedConfiguration()Ljava/lang/String;

    #@a7a
    move-result-object v13

    #@a7b
    .line 2781
    .local v13, "key":Ljava/lang/String;
    if-eqz v13, :cond_3

    #@a7d
    .line 2782
    const-string/jumbo v26, " last="

    #@a80
    move-object/from16 v0, v20

    #@a82
    move-object/from16 v1, v26

    #@a84
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a87
    move-result-object v26

    #@a88
    move-object/from16 v0, v26

    #@a8a
    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a8d
    goto/16 :goto_0

    #@a8f
    .line 2788
    .end local v13    # "key":Ljava/lang/String;
    :sswitch_b
    const-string/jumbo v26, " "

    #@a92
    move-object/from16 v0, v20

    #@a94
    move-object/from16 v1, v26

    #@a96
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a99
    .line 2789
    move-object/from16 v0, p1

    #@a9b
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@a9d
    move/from16 v26, v0

    #@a9f
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@aa2
    move-result-object v26

    #@aa3
    move-object/from16 v0, v20

    #@aa5
    move-object/from16 v1, v26

    #@aa7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@aaa
    .line 2790
    const-string/jumbo v26, " "

    #@aad
    move-object/from16 v0, v20

    #@aaf
    move-object/from16 v1, v26

    #@ab1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ab4
    .line 2791
    move-object/from16 v0, p1

    #@ab6
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@ab8
    move/from16 v26, v0

    #@aba
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@abd
    move-result-object v26

    #@abe
    move-object/from16 v0, v20

    #@ac0
    move-object/from16 v1, v26

    #@ac2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ac5
    .line 2792
    const-string/jumbo v26, " "

    #@ac8
    move-object/from16 v0, v20

    #@aca
    move-object/from16 v1, v26

    #@acc
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@acf
    move-result-object v26

    #@ad0
    move-object/from16 v0, p0

    #@ad2
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@ad4
    move-object/from16 v27, v0

    #@ad6
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ad9
    .line 2793
    const-string/jumbo v26, " nid="

    #@adc
    move-object/from16 v0, v20

    #@ade
    move-object/from16 v1, v26

    #@ae0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ae3
    move-result-object v26

    #@ae4
    move-object/from16 v0, p0

    #@ae6
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@ae8
    move/from16 v27, v0

    #@aea
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@aed
    .line 2794
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@af0
    move-result-object v7

    #@af1
    .line 2795
    .local v7, "config":Landroid/net/wifi/WifiConfiguration;
    if-eqz v7, :cond_19

    #@af3
    .line 2796
    const-string/jumbo v26, " "

    #@af6
    move-object/from16 v0, v20

    #@af8
    move-object/from16 v1, v26

    #@afa
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@afd
    move-result-object v26

    #@afe
    invoke-virtual {v7}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@b01
    move-result-object v27

    #@b02
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b05
    .line 2798
    :cond_19
    move-object/from16 v0, p0

    #@b07
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@b09
    move-object/from16 v26, v0

    #@b0b
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wifi/WifiConfigStore;->getLastSelectedConfiguration()Ljava/lang/String;

    #@b0e
    move-result-object v13

    #@b0f
    .line 2799
    .restart local v13    # "key":Ljava/lang/String;
    if-eqz v13, :cond_3

    #@b11
    .line 2800
    const-string/jumbo v26, " last="

    #@b14
    move-object/from16 v0, v20

    #@b16
    move-object/from16 v1, v26

    #@b18
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b1b
    move-result-object v26

    #@b1c
    move-object/from16 v0, v26

    #@b1e
    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b21
    goto/16 :goto_0

    #@b23
    .line 2805
    .end local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    .end local v13    # "key":Ljava/lang/String;
    :sswitch_c
    const-string/jumbo v26, " "

    #@b26
    move-object/from16 v0, v20

    #@b28
    move-object/from16 v1, v26

    #@b2a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b2d
    .line 2806
    move-object/from16 v0, p1

    #@b2f
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@b31
    move/from16 v26, v0

    #@b33
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@b36
    move-result-object v26

    #@b37
    move-object/from16 v0, v20

    #@b39
    move-object/from16 v1, v26

    #@b3b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b3e
    .line 2807
    const-string/jumbo v26, " "

    #@b41
    move-object/from16 v0, v20

    #@b43
    move-object/from16 v1, v26

    #@b45
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b48
    .line 2808
    move-object/from16 v0, p1

    #@b4a
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@b4c
    move/from16 v26, v0

    #@b4e
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@b51
    move-result-object v26

    #@b52
    move-object/from16 v0, v20

    #@b54
    move-object/from16 v1, v26

    #@b56
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b59
    .line 2809
    move-object/from16 v0, p1

    #@b5b
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@b5d
    move-object/from16 v26, v0

    #@b5f
    if-eqz v26, :cond_1a

    #@b61
    .line 2810
    const-string/jumbo v26, " BSSID="

    #@b64
    move-object/from16 v0, v20

    #@b66
    move-object/from16 v1, v26

    #@b68
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b6b
    move-result-object v27

    #@b6c
    move-object/from16 v0, p1

    #@b6e
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@b70
    move-object/from16 v26, v0

    #@b72
    check-cast v26, Ljava/lang/String;

    #@b74
    move-object/from16 v0, v27

    #@b76
    move-object/from16 v1, v26

    #@b78
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b7b
    .line 2812
    :cond_1a
    move-object/from16 v0, p0

    #@b7d
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@b7f
    move-object/from16 v26, v0

    #@b81
    if-eqz v26, :cond_1b

    #@b83
    .line 2813
    const-string/jumbo v26, " Target="

    #@b86
    move-object/from16 v0, v20

    #@b88
    move-object/from16 v1, v26

    #@b8a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b8d
    move-result-object v26

    #@b8e
    move-object/from16 v0, p0

    #@b90
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@b92
    move-object/from16 v27, v0

    #@b94
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b97
    .line 2815
    :cond_1b
    const-string/jumbo v26, " roam="

    #@b9a
    move-object/from16 v0, v20

    #@b9c
    move-object/from16 v1, v26

    #@b9e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ba1
    move-result-object v26

    #@ba2
    move-object/from16 v0, p0

    #@ba4
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@ba6
    move/from16 v27, v0

    #@ba8
    invoke-static/range {v27 .. v27}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@bab
    move-result-object v27

    #@bac
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@baf
    goto/16 :goto_0

    #@bb1
    .line 2818
    :sswitch_d
    move-object/from16 v0, p1

    #@bb3
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@bb5
    move-object/from16 v26, v0

    #@bb7
    if-eqz v26, :cond_1c

    #@bb9
    .line 2819
    const-string/jumbo v26, " "

    #@bbc
    move-object/from16 v0, v20

    #@bbe
    move-object/from16 v1, v26

    #@bc0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bc3
    move-result-object v27

    #@bc4
    move-object/from16 v0, p1

    #@bc6
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@bc8
    move-object/from16 v26, v0

    #@bca
    check-cast v26, Ljava/lang/String;

    #@bcc
    move-object/from16 v0, v27

    #@bce
    move-object/from16 v1, v26

    #@bd0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bd3
    .line 2821
    :cond_1c
    const-string/jumbo v26, " nid="

    #@bd6
    move-object/from16 v0, v20

    #@bd8
    move-object/from16 v1, v26

    #@bda
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bdd
    move-result-object v26

    #@bde
    move-object/from16 v0, p1

    #@be0
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@be2
    move/from16 v27, v0

    #@be4
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@be7
    .line 2822
    const-string/jumbo v26, " reason="

    #@bea
    move-object/from16 v0, v20

    #@bec
    move-object/from16 v1, v26

    #@bee
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bf1
    move-result-object v26

    #@bf2
    move-object/from16 v0, p1

    #@bf4
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@bf6
    move/from16 v27, v0

    #@bf8
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@bfb
    .line 2823
    move-object/from16 v0, p0

    #@bfd
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@bff
    move-object/from16 v26, v0

    #@c01
    if-eqz v26, :cond_1d

    #@c03
    .line 2824
    const-string/jumbo v26, " lastbssid="

    #@c06
    move-object/from16 v0, v20

    #@c08
    move-object/from16 v1, v26

    #@c0a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c0d
    move-result-object v26

    #@c0e
    move-object/from16 v0, p0

    #@c10
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@c12
    move-object/from16 v27, v0

    #@c14
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c17
    .line 2826
    :cond_1d
    move-object/from16 v0, p0

    #@c19
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@c1b
    move-object/from16 v26, v0

    #@c1d
    invoke-virtual/range {v26 .. v26}, Landroid/net/wifi/WifiInfo;->getFrequency()I

    #@c20
    move-result v26

    #@c21
    const/16 v27, -0x1

    #@c23
    move/from16 v0, v26

    #@c25
    move/from16 v1, v27

    #@c27
    if-eq v0, v1, :cond_1e

    #@c29
    .line 2827
    const-string/jumbo v26, " freq="

    #@c2c
    move-object/from16 v0, v20

    #@c2e
    move-object/from16 v1, v26

    #@c30
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c33
    move-result-object v26

    #@c34
    move-object/from16 v0, p0

    #@c36
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@c38
    move-object/from16 v27, v0

    #@c3a
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getFrequency()I

    #@c3d
    move-result v27

    #@c3e
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c41
    .line 2828
    const-string/jumbo v26, " rssi="

    #@c44
    move-object/from16 v0, v20

    #@c46
    move-object/from16 v1, v26

    #@c48
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c4b
    move-result-object v26

    #@c4c
    move-object/from16 v0, p0

    #@c4e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@c50
    move-object/from16 v27, v0

    #@c52
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@c55
    move-result v27

    #@c56
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c59
    .line 2830
    :cond_1e
    move-object/from16 v0, p0

    #@c5b
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiStateMachine;->linkDebouncing:Z

    #@c5d
    move/from16 v26, v0

    #@c5f
    if-eqz v26, :cond_3

    #@c61
    .line 2831
    const-string/jumbo v26, " debounce"

    #@c64
    move-object/from16 v0, v20

    #@c66
    move-object/from16 v1, v26

    #@c68
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c6b
    goto/16 :goto_0

    #@c6d
    .line 2836
    :sswitch_e
    const-string/jumbo v26, " nid="

    #@c70
    move-object/from16 v0, v20

    #@c72
    move-object/from16 v1, v26

    #@c74
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c77
    move-result-object v26

    #@c78
    move-object/from16 v0, p1

    #@c7a
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@c7c
    move/from16 v27, v0

    #@c7e
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c81
    .line 2837
    move-object/from16 v0, p1

    #@c83
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@c85
    move-object/from16 v26, v0

    #@c87
    if-eqz v26, :cond_1f

    #@c89
    .line 2838
    const-string/jumbo v26, " "

    #@c8c
    move-object/from16 v0, v20

    #@c8e
    move-object/from16 v1, v26

    #@c90
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c93
    move-result-object v27

    #@c94
    move-object/from16 v0, p1

    #@c96
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@c98
    move-object/from16 v26, v0

    #@c9a
    check-cast v26, Ljava/lang/String;

    #@c9c
    move-object/from16 v0, v27

    #@c9e
    move-object/from16 v1, v26

    #@ca0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ca3
    .line 2840
    :cond_1f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@ca6
    move-result-object v7

    #@ca7
    .line 2841
    .restart local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    if-eqz v7, :cond_3

    #@ca9
    .line 2842
    const-string/jumbo v26, " cur="

    #@cac
    move-object/from16 v0, v20

    #@cae
    move-object/from16 v1, v26

    #@cb0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cb3
    move-result-object v26

    #@cb4
    invoke-virtual {v7}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@cb7
    move-result-object v27

    #@cb8
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cbb
    .line 2843
    const-string/jumbo v26, " ajst="

    #@cbe
    move-object/from16 v0, v20

    #@cc0
    move-object/from16 v1, v26

    #@cc2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cc5
    move-result-object v26

    #@cc6
    iget v0, v7, Landroid/net/wifi/WifiConfiguration;->autoJoinStatus:I

    #@cc8
    move/from16 v27, v0

    #@cca
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@ccd
    .line 2844
    iget-boolean v0, v7, Landroid/net/wifi/WifiConfiguration;->selfAdded:Z

    #@ccf
    move/from16 v26, v0

    #@cd1
    if-eqz v26, :cond_20

    #@cd3
    .line 2845
    const-string/jumbo v26, " selfAdded"

    #@cd6
    move-object/from16 v0, v20

    #@cd8
    move-object/from16 v1, v26

    #@cda
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cdd
    .line 2847
    :cond_20
    iget v0, v7, Landroid/net/wifi/WifiConfiguration;->status:I

    #@cdf
    move/from16 v26, v0

    #@ce1
    if-eqz v26, :cond_21

    #@ce3
    .line 2848
    const-string/jumbo v26, " st="

    #@ce6
    move-object/from16 v0, v20

    #@ce8
    move-object/from16 v1, v26

    #@cea
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ced
    move-result-object v26

    #@cee
    iget v0, v7, Landroid/net/wifi/WifiConfiguration;->status:I

    #@cf0
    move/from16 v27, v0

    #@cf2
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@cf5
    .line 2849
    const-string/jumbo v26, " rs="

    #@cf8
    move-object/from16 v0, v20

    #@cfa
    move-object/from16 v1, v26

    #@cfc
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cff
    move-result-object v26

    #@d00
    iget v0, v7, Landroid/net/wifi/WifiConfiguration;->disableReason:I

    #@d02
    move/from16 v27, v0

    #@d04
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@d07
    .line 2851
    :cond_21
    iget-wide v0, v7, Landroid/net/wifi/WifiConfiguration;->lastConnected:J

    #@d09
    move-wide/from16 v26, v0

    #@d0b
    const-wide/16 v28, 0x0

    #@d0d
    cmp-long v26, v26, v28

    #@d0f
    if-eqz v26, :cond_22

    #@d11
    .line 2852
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@d14
    move-result-wide v26

    #@d15
    invoke-static/range {v26 .. v27}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    #@d18
    move-result-object v14

    #@d19
    .line 2853
    .restart local v14    # "now":Ljava/lang/Long;
    const-string/jumbo v26, " lastconn="

    #@d1c
    move-object/from16 v0, v20

    #@d1e
    move-object/from16 v1, v26

    #@d20
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d23
    move-result-object v26

    #@d24
    invoke-virtual {v14}, Ljava/lang/Long;->longValue()J

    #@d27
    move-result-wide v28

    #@d28
    iget-wide v0, v7, Landroid/net/wifi/WifiConfiguration;->lastConnected:J

    #@d2a
    move-wide/from16 v30, v0

    #@d2c
    sub-long v28, v28, v30

    #@d2e
    move-object/from16 v0, v26

    #@d30
    move-wide/from16 v1, v28

    #@d32
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@d35
    move-result-object v26

    #@d36
    const-string/jumbo v27, "(ms)"

    #@d39
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d3c
    .line 2855
    .end local v14    # "now":Ljava/lang/Long;
    :cond_22
    move-object/from16 v0, p0

    #@d3e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@d40
    move-object/from16 v26, v0

    #@d42
    if-eqz v26, :cond_23

    #@d44
    .line 2856
    const-string/jumbo v26, " lastbssid="

    #@d47
    move-object/from16 v0, v20

    #@d49
    move-object/from16 v1, v26

    #@d4b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d4e
    move-result-object v26

    #@d4f
    move-object/from16 v0, p0

    #@d51
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLastBssid:Ljava/lang/String;

    #@d53
    move-object/from16 v27, v0

    #@d55
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d58
    .line 2858
    :cond_23
    move-object/from16 v0, p0

    #@d5a
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@d5c
    move-object/from16 v26, v0

    #@d5e
    invoke-virtual/range {v26 .. v26}, Landroid/net/wifi/WifiInfo;->getFrequency()I

    #@d61
    move-result v26

    #@d62
    const/16 v27, -0x1

    #@d64
    move/from16 v0, v26

    #@d66
    move/from16 v1, v27

    #@d68
    if-eq v0, v1, :cond_3

    #@d6a
    .line 2859
    const-string/jumbo v26, " freq="

    #@d6d
    move-object/from16 v0, v20

    #@d6f
    move-object/from16 v1, v26

    #@d71
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d74
    move-result-object v26

    #@d75
    move-object/from16 v0, p0

    #@d77
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@d79
    move-object/from16 v27, v0

    #@d7b
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getFrequency()I

    #@d7e
    move-result v27

    #@d7f
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@d82
    .line 2860
    const-string/jumbo v26, " rssi="

    #@d85
    move-object/from16 v0, v20

    #@d87
    move-object/from16 v1, v26

    #@d89
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d8c
    move-result-object v26

    #@d8d
    move-object/from16 v0, p0

    #@d8f
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@d91
    move-object/from16 v27, v0

    #@d93
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@d96
    move-result v27

    #@d97
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@d9a
    .line 2861
    const-string/jumbo v26, " bssid="

    #@d9d
    move-object/from16 v0, v20

    #@d9f
    move-object/from16 v1, v26

    #@da1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@da4
    move-result-object v26

    #@da5
    move-object/from16 v0, p0

    #@da7
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@da9
    move-object/from16 v27, v0

    #@dab
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;

    #@dae
    move-result-object v27

    #@daf
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@db2
    goto/16 :goto_0

    #@db4
    .line 2868
    .end local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    :sswitch_f
    const-string/jumbo v26, " "

    #@db7
    move-object/from16 v0, v20

    #@db9
    move-object/from16 v1, v26

    #@dbb
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@dbe
    .line 2869
    move-object/from16 v0, p1

    #@dc0
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@dc2
    move/from16 v26, v0

    #@dc4
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@dc7
    move-result-object v26

    #@dc8
    move-object/from16 v0, v20

    #@dca
    move-object/from16 v1, v26

    #@dcc
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@dcf
    .line 2870
    const-string/jumbo v26, " "

    #@dd2
    move-object/from16 v0, v20

    #@dd4
    move-object/from16 v1, v26

    #@dd6
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@dd9
    .line 2871
    move-object/from16 v0, p1

    #@ddb
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@ddd
    move/from16 v26, v0

    #@ddf
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@de2
    move-result-object v26

    #@de3
    move-object/from16 v0, v20

    #@de5
    move-object/from16 v1, v26

    #@de7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@dea
    .line 2872
    move-object/from16 v0, p0

    #@dec
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@dee
    move-object/from16 v26, v0

    #@df0
    invoke-virtual/range {v26 .. v26}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@df3
    move-result-object v26

    #@df4
    if-eqz v26, :cond_24

    #@df6
    .line 2873
    move-object/from16 v0, p0

    #@df8
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@dfa
    move-object/from16 v26, v0

    #@dfc
    invoke-virtual/range {v26 .. v26}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@dff
    move-result-object v26

    #@e00
    if-eqz v26, :cond_24

    #@e02
    .line 2874
    const-string/jumbo v26, " "

    #@e05
    move-object/from16 v0, v20

    #@e07
    move-object/from16 v1, v26

    #@e09
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e0c
    move-result-object v26

    #@e0d
    move-object/from16 v0, p0

    #@e0f
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@e11
    move-object/from16 v27, v0

    #@e13
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getSSID()Ljava/lang/String;

    #@e16
    move-result-object v27

    #@e17
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e1a
    .line 2875
    :cond_24
    move-object/from16 v0, p0

    #@e1c
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@e1e
    move-object/from16 v26, v0

    #@e20
    invoke-virtual/range {v26 .. v26}, Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;

    #@e23
    move-result-object v26

    #@e24
    if-eqz v26, :cond_25

    #@e26
    .line 2876
    const-string/jumbo v26, " "

    #@e29
    move-object/from16 v0, v20

    #@e2b
    move-object/from16 v1, v26

    #@e2d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e30
    move-result-object v26

    #@e31
    move-object/from16 v0, p0

    #@e33
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@e35
    move-object/from16 v27, v0

    #@e37
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;

    #@e3a
    move-result-object v27

    #@e3b
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e3e
    .line 2877
    :cond_25
    const-string/jumbo v26, " rssi="

    #@e41
    move-object/from16 v0, v20

    #@e43
    move-object/from16 v1, v26

    #@e45
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e48
    move-result-object v26

    #@e49
    move-object/from16 v0, p0

    #@e4b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@e4d
    move-object/from16 v27, v0

    #@e4f
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@e52
    move-result v27

    #@e53
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@e56
    .line 2878
    const-string/jumbo v26, " f="

    #@e59
    move-object/from16 v0, v20

    #@e5b
    move-object/from16 v1, v26

    #@e5d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e60
    move-result-object v26

    #@e61
    move-object/from16 v0, p0

    #@e63
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@e65
    move-object/from16 v27, v0

    #@e67
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getFrequency()I

    #@e6a
    move-result v27

    #@e6b
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@e6e
    .line 2879
    const-string/jumbo v26, " sc="

    #@e71
    move-object/from16 v0, v20

    #@e73
    move-object/from16 v1, v26

    #@e75
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e78
    move-result-object v26

    #@e79
    move-object/from16 v0, p0

    #@e7b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@e7d
    move-object/from16 v27, v0

    #@e7f
    move-object/from16 v0, v27

    #@e81
    iget v0, v0, Landroid/net/wifi/WifiInfo;->score:I

    #@e83
    move/from16 v27, v0

    #@e85
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@e88
    .line 2880
    const-string/jumbo v26, " link="

    #@e8b
    move-object/from16 v0, v20

    #@e8d
    move-object/from16 v1, v26

    #@e8f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e92
    move-result-object v26

    #@e93
    move-object/from16 v0, p0

    #@e95
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@e97
    move-object/from16 v27, v0

    #@e99
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getLinkSpeed()I

    #@e9c
    move-result v27

    #@e9d
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@ea0
    .line 2881
    const-string/jumbo v26, " tx=%.1f,"

    #@ea3
    const/16 v27, 0x1

    #@ea5
    move/from16 v0, v27

    #@ea7
    new-array v0, v0, [Ljava/lang/Object;

    #@ea9
    move-object/from16 v27, v0

    #@eab
    move-object/from16 v0, p0

    #@ead
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@eaf
    move-object/from16 v28, v0

    #@eb1
    move-object/from16 v0, v28

    #@eb3
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@eb5
    move-wide/from16 v28, v0

    #@eb7
    invoke-static/range {v28 .. v29}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@eba
    move-result-object v28

    #@ebb
    const/16 v29, 0x0

    #@ebd
    aput-object v28, v27, v29

    #@ebf
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@ec2
    move-result-object v26

    #@ec3
    move-object/from16 v0, v20

    #@ec5
    move-object/from16 v1, v26

    #@ec7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@eca
    .line 2882
    const-string/jumbo v26, " %.1f,"

    #@ecd
    const/16 v27, 0x1

    #@ecf
    move/from16 v0, v27

    #@ed1
    new-array v0, v0, [Ljava/lang/Object;

    #@ed3
    move-object/from16 v27, v0

    #@ed5
    move-object/from16 v0, p0

    #@ed7
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@ed9
    move-object/from16 v28, v0

    #@edb
    move-object/from16 v0, v28

    #@edd
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txRetriesRate:D

    #@edf
    move-wide/from16 v28, v0

    #@ee1
    invoke-static/range {v28 .. v29}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@ee4
    move-result-object v28

    #@ee5
    const/16 v29, 0x0

    #@ee7
    aput-object v28, v27, v29

    #@ee9
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@eec
    move-result-object v26

    #@eed
    move-object/from16 v0, v20

    #@eef
    move-object/from16 v1, v26

    #@ef1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ef4
    .line 2883
    const-string/jumbo v26, " %.1f "

    #@ef7
    const/16 v27, 0x1

    #@ef9
    move/from16 v0, v27

    #@efb
    new-array v0, v0, [Ljava/lang/Object;

    #@efd
    move-object/from16 v27, v0

    #@eff
    move-object/from16 v0, p0

    #@f01
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@f03
    move-object/from16 v28, v0

    #@f05
    move-object/from16 v0, v28

    #@f07
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txBadRate:D

    #@f09
    move-wide/from16 v28, v0

    #@f0b
    invoke-static/range {v28 .. v29}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@f0e
    move-result-object v28

    #@f0f
    const/16 v29, 0x0

    #@f11
    aput-object v28, v27, v29

    #@f13
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@f16
    move-result-object v26

    #@f17
    move-object/from16 v0, v20

    #@f19
    move-object/from16 v1, v26

    #@f1b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f1e
    .line 2884
    const-string/jumbo v26, " rx=%.1f"

    #@f21
    const/16 v27, 0x1

    #@f23
    move/from16 v0, v27

    #@f25
    new-array v0, v0, [Ljava/lang/Object;

    #@f27
    move-object/from16 v27, v0

    #@f29
    move-object/from16 v0, p0

    #@f2b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@f2d
    move-object/from16 v28, v0

    #@f2f
    move-object/from16 v0, v28

    #@f31
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@f33
    move-wide/from16 v28, v0

    #@f35
    invoke-static/range {v28 .. v29}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@f38
    move-result-object v28

    #@f39
    const/16 v29, 0x0

    #@f3b
    aput-object v28, v27, v29

    #@f3d
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@f40
    move-result-object v26

    #@f41
    move-object/from16 v0, v20

    #@f43
    move-object/from16 v1, v26

    #@f45
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f48
    .line 2885
    const-string/jumbo v26, " bcn=%d"

    #@f4b
    const/16 v27, 0x1

    #@f4d
    move/from16 v0, v27

    #@f4f
    new-array v0, v0, [Ljava/lang/Object;

    #@f51
    move-object/from16 v27, v0

    #@f53
    move-object/from16 v0, p0

    #@f55
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mRunningBeaconCount:I

    #@f57
    move/from16 v28, v0

    #@f59
    invoke-static/range {v28 .. v28}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@f5c
    move-result-object v28

    #@f5d
    const/16 v29, 0x0

    #@f5f
    aput-object v28, v27, v29

    #@f61
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@f64
    move-result-object v26

    #@f65
    move-object/from16 v0, v20

    #@f67
    move-object/from16 v1, v26

    #@f69
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f6c
    .line 2886
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->reportOnTime()Ljava/lang/String;

    #@f6f
    move-result-object v16

    #@f70
    .line 2887
    .restart local v16    # "report":Ljava/lang/String;
    if-eqz v16, :cond_26

    #@f72
    .line 2888
    const-string/jumbo v26, " "

    #@f75
    move-object/from16 v0, v20

    #@f77
    move-object/from16 v1, v26

    #@f79
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f7c
    move-result-object v26

    #@f7d
    move-object/from16 v0, v26

    #@f7f
    move-object/from16 v1, v16

    #@f81
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f84
    .line 2890
    :cond_26
    move-object/from16 v0, p0

    #@f86
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->wifiScoringReport:Ljava/lang/String;

    #@f88
    move-object/from16 v26, v0

    #@f8a
    if-eqz v26, :cond_27

    #@f8c
    .line 2891
    move-object/from16 v0, p0

    #@f8e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->wifiScoringReport:Ljava/lang/String;

    #@f90
    move-object/from16 v26, v0

    #@f92
    move-object/from16 v0, v20

    #@f94
    move-object/from16 v1, v26

    #@f96
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f99
    .line 2893
    :cond_27
    move-object/from16 v0, p0

    #@f9b
    iget-boolean v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedModeGScanOffloadStarted:Z

    #@f9d
    move/from16 v26, v0

    #@f9f
    if-eqz v26, :cond_28

    #@fa1
    .line 2894
    const-string/jumbo v26, " offload-started periodMilli "

    #@fa4
    move-object/from16 v0, v20

    #@fa6
    move-object/from16 v1, v26

    #@fa8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fab
    move-result-object v26

    #@fac
    move-object/from16 v0, p0

    #@fae
    iget-wide v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mGScanPeriodMilli:J

    #@fb0
    move-wide/from16 v28, v0

    #@fb2
    move-object/from16 v0, v26

    #@fb4
    move-wide/from16 v1, v28

    #@fb6
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@fb9
    goto/16 :goto_0

    #@fbb
    .line 2896
    :cond_28
    const-string/jumbo v26, " offload-stopped"

    #@fbe
    move-object/from16 v0, v20

    #@fc0
    move-object/from16 v1, v26

    #@fc2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fc5
    goto/16 :goto_0

    #@fc7
    .line 2901
    .end local v16    # "report":Ljava/lang/String;
    :sswitch_10
    const-string/jumbo v26, " "

    #@fca
    move-object/from16 v0, v20

    #@fcc
    move-object/from16 v1, v26

    #@fce
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fd1
    .line 2902
    move-object/from16 v0, p1

    #@fd3
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@fd5
    move/from16 v26, v0

    #@fd7
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@fda
    move-result-object v26

    #@fdb
    move-object/from16 v0, v20

    #@fdd
    move-object/from16 v1, v26

    #@fdf
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fe2
    .line 2903
    const-string/jumbo v26, " "

    #@fe5
    move-object/from16 v0, v20

    #@fe7
    move-object/from16 v1, v26

    #@fe9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fec
    .line 2904
    move-object/from16 v0, p1

    #@fee
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@ff0
    move/from16 v26, v0

    #@ff2
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@ff5
    move-result-object v26

    #@ff6
    move-object/from16 v0, v20

    #@ff8
    move-object/from16 v1, v26

    #@ffa
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ffd
    .line 2905
    move-object/from16 v0, p1

    #@fff
    iget-object v7, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@1001
    check-cast v7, Landroid/net/wifi/WifiConfiguration;

    #@1003
    .line 2906
    .restart local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    if-eqz v7, :cond_29

    #@1005
    .line 2907
    const-string/jumbo v26, " "

    #@1008
    move-object/from16 v0, v20

    #@100a
    move-object/from16 v1, v26

    #@100c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@100f
    move-result-object v26

    #@1010
    invoke-virtual {v7}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@1013
    move-result-object v27

    #@1014
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1017
    .line 2908
    iget-object v0, v7, Landroid/net/wifi/WifiConfiguration;->visibility:Landroid/net/wifi/WifiConfiguration$Visibility;

    #@1019
    move-object/from16 v26, v0

    #@101b
    if-eqz v26, :cond_29

    #@101d
    .line 2909
    const-string/jumbo v26, " "

    #@1020
    move-object/from16 v0, v20

    #@1022
    move-object/from16 v1, v26

    #@1024
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1027
    move-result-object v26

    #@1028
    iget-object v0, v7, Landroid/net/wifi/WifiConfiguration;->visibility:Landroid/net/wifi/WifiConfiguration$Visibility;

    #@102a
    move-object/from16 v27, v0

    #@102c
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiConfiguration$Visibility;->toString()Ljava/lang/String;

    #@102f
    move-result-object v27

    #@1030
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1033
    .line 2912
    :cond_29
    move-object/from16 v0, p0

    #@1035
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@1037
    move-object/from16 v26, v0

    #@1039
    if-eqz v26, :cond_2a

    #@103b
    .line 2913
    const-string/jumbo v26, " "

    #@103e
    move-object/from16 v0, v20

    #@1040
    move-object/from16 v1, v26

    #@1042
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1045
    move-result-object v26

    #@1046
    move-object/from16 v0, p0

    #@1048
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@104a
    move-object/from16 v27, v0

    #@104c
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@104f
    .line 2915
    :cond_2a
    const-string/jumbo v26, " roam="

    #@1052
    move-object/from16 v0, v20

    #@1054
    move-object/from16 v1, v26

    #@1056
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1059
    move-result-object v26

    #@105a
    move-object/from16 v0, p0

    #@105c
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@105e
    move/from16 v27, v0

    #@1060
    invoke-static/range {v27 .. v27}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1063
    move-result-object v27

    #@1064
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1067
    .line 2916
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@106a
    move-result-object v7

    #@106b
    .line 2917
    if-eqz v7, :cond_3

    #@106d
    .line 2918
    invoke-virtual {v7}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@1070
    move-result-object v26

    #@1071
    move-object/from16 v0, v20

    #@1073
    move-object/from16 v1, v26

    #@1075
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1078
    .line 2919
    iget-object v0, v7, Landroid/net/wifi/WifiConfiguration;->visibility:Landroid/net/wifi/WifiConfiguration$Visibility;

    #@107a
    move-object/from16 v26, v0

    #@107c
    if-eqz v26, :cond_3

    #@107e
    .line 2920
    const-string/jumbo v26, " "

    #@1081
    move-object/from16 v0, v20

    #@1083
    move-object/from16 v1, v26

    #@1085
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1088
    move-result-object v26

    #@1089
    iget-object v0, v7, Landroid/net/wifi/WifiConfiguration;->visibility:Landroid/net/wifi/WifiConfiguration$Visibility;

    #@108b
    move-object/from16 v27, v0

    #@108d
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiConfiguration$Visibility;->toString()Ljava/lang/String;

    #@1090
    move-result-object v27

    #@1091
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1094
    goto/16 :goto_0

    #@1096
    .line 2925
    .end local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    :sswitch_11
    const-string/jumbo v26, " "

    #@1099
    move-object/from16 v0, v20

    #@109b
    move-object/from16 v1, v26

    #@109d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10a0
    .line 2926
    move-object/from16 v0, p1

    #@10a2
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@10a4
    move/from16 v26, v0

    #@10a6
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@10a9
    move-result-object v26

    #@10aa
    move-object/from16 v0, v20

    #@10ac
    move-object/from16 v1, v26

    #@10ae
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10b1
    .line 2927
    const-string/jumbo v26, " "

    #@10b4
    move-object/from16 v0, v20

    #@10b6
    move-object/from16 v1, v26

    #@10b8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10bb
    .line 2928
    move-object/from16 v0, p1

    #@10bd
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@10bf
    move/from16 v26, v0

    #@10c1
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@10c4
    move-result-object v26

    #@10c5
    move-object/from16 v0, v20

    #@10c7
    move-object/from16 v1, v26

    #@10c9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10cc
    .line 2929
    move-object/from16 v0, p1

    #@10ce
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@10d0
    move-object/from16 v18, v0

    #@10d2
    check-cast v18, Landroid/net/wifi/ScanResult;

    #@10d4
    .line 2930
    .local v18, "result":Landroid/net/wifi/ScanResult;
    if-eqz v18, :cond_2b

    #@10d6
    .line 2931
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@10d9
    move-result-wide v26

    #@10da
    invoke-static/range {v26 .. v27}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    #@10dd
    move-result-object v14

    #@10de
    .line 2932
    .restart local v14    # "now":Ljava/lang/Long;
    const-string/jumbo v26, " bssid="

    #@10e1
    move-object/from16 v0, v20

    #@10e3
    move-object/from16 v1, v26

    #@10e5
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10e8
    move-result-object v26

    #@10e9
    move-object/from16 v0, v18

    #@10eb
    iget-object v0, v0, Landroid/net/wifi/ScanResult;->BSSID:Ljava/lang/String;

    #@10ed
    move-object/from16 v27, v0

    #@10ef
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10f2
    .line 2933
    const-string/jumbo v26, " rssi="

    #@10f5
    move-object/from16 v0, v20

    #@10f7
    move-object/from16 v1, v26

    #@10f9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@10fc
    move-result-object v26

    #@10fd
    move-object/from16 v0, v18

    #@10ff
    iget v0, v0, Landroid/net/wifi/ScanResult;->level:I

    #@1101
    move/from16 v27, v0

    #@1103
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1106
    .line 2934
    const-string/jumbo v26, " freq="

    #@1109
    move-object/from16 v0, v20

    #@110b
    move-object/from16 v1, v26

    #@110d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1110
    move-result-object v26

    #@1111
    move-object/from16 v0, v18

    #@1113
    iget v0, v0, Landroid/net/wifi/ScanResult;->frequency:I

    #@1115
    move/from16 v27, v0

    #@1117
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@111a
    .line 2935
    move-object/from16 v0, v18

    #@111c
    iget-wide v0, v0, Landroid/net/wifi/ScanResult;->seen:J

    #@111e
    move-wide/from16 v26, v0

    #@1120
    const-wide/16 v28, 0x0

    #@1122
    cmp-long v26, v26, v28

    #@1124
    if-lez v26, :cond_2d

    #@1126
    move-object/from16 v0, v18

    #@1128
    iget-wide v0, v0, Landroid/net/wifi/ScanResult;->seen:J

    #@112a
    move-wide/from16 v26, v0

    #@112c
    invoke-virtual {v14}, Ljava/lang/Long;->longValue()J

    #@112f
    move-result-wide v28

    #@1130
    cmp-long v26, v26, v28

    #@1132
    if-gez v26, :cond_2d

    #@1134
    .line 2936
    const-string/jumbo v26, " seen="

    #@1137
    move-object/from16 v0, v20

    #@1139
    move-object/from16 v1, v26

    #@113b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@113e
    move-result-object v26

    #@113f
    invoke-virtual {v14}, Ljava/lang/Long;->longValue()J

    #@1142
    move-result-wide v28

    #@1143
    move-object/from16 v0, v18

    #@1145
    iget-wide v0, v0, Landroid/net/wifi/ScanResult;->seen:J

    #@1147
    move-wide/from16 v30, v0

    #@1149
    sub-long v28, v28, v30

    #@114b
    move-object/from16 v0, v26

    #@114d
    move-wide/from16 v1, v28

    #@114f
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@1152
    .line 2942
    .end local v14    # "now":Ljava/lang/Long;
    :cond_2b
    :goto_4
    move-object/from16 v0, p0

    #@1154
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@1156
    move-object/from16 v26, v0

    #@1158
    if-eqz v26, :cond_2c

    #@115a
    .line 2943
    const-string/jumbo v26, " "

    #@115d
    move-object/from16 v0, v20

    #@115f
    move-object/from16 v1, v26

    #@1161
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1164
    move-result-object v26

    #@1165
    move-object/from16 v0, p0

    #@1167
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mTargetRoamBSSID:Ljava/lang/String;

    #@1169
    move-object/from16 v27, v0

    #@116b
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@116e
    .line 2945
    :cond_2c
    const-string/jumbo v26, " roam="

    #@1171
    move-object/from16 v0, v20

    #@1173
    move-object/from16 v1, v26

    #@1175
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1178
    move-result-object v26

    #@1179
    move-object/from16 v0, p0

    #@117b
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@117d
    move/from16 v27, v0

    #@117f
    invoke-static/range {v27 .. v27}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1182
    move-result-object v27

    #@1183
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1186
    .line 2946
    const-string/jumbo v26, " fail count="

    #@1189
    move-object/from16 v0, v20

    #@118b
    move-object/from16 v1, v26

    #@118d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1190
    move-result-object v26

    #@1191
    move-object/from16 v0, p0

    #@1193
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mRoamFailCount:I

    #@1195
    move/from16 v27, v0

    #@1197
    invoke-static/range {v27 .. v27}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@119a
    move-result-object v27

    #@119b
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@119e
    goto/16 :goto_0

    #@11a0
    .line 2939
    .restart local v14    # "now":Ljava/lang/Long;
    :cond_2d
    const-string/jumbo v26, " !seen="

    #@11a3
    move-object/from16 v0, v20

    #@11a5
    move-object/from16 v1, v26

    #@11a7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11aa
    move-result-object v26

    #@11ab
    move-object/from16 v0, v18

    #@11ad
    iget-wide v0, v0, Landroid/net/wifi/ScanResult;->seen:J

    #@11af
    move-wide/from16 v28, v0

    #@11b1
    move-object/from16 v0, v26

    #@11b3
    move-wide/from16 v1, v28

    #@11b5
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@11b8
    goto :goto_4

    #@11b9
    .line 2949
    .end local v14    # "now":Ljava/lang/Long;
    .end local v18    # "result":Landroid/net/wifi/ScanResult;
    :sswitch_12
    const-string/jumbo v26, " "

    #@11bc
    move-object/from16 v0, v20

    #@11be
    move-object/from16 v1, v26

    #@11c0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11c3
    .line 2950
    move-object/from16 v0, p1

    #@11c5
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@11c7
    move/from16 v26, v0

    #@11c9
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@11cc
    move-result-object v26

    #@11cd
    move-object/from16 v0, v20

    #@11cf
    move-object/from16 v1, v26

    #@11d1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11d4
    .line 2951
    const-string/jumbo v26, " "

    #@11d7
    move-object/from16 v0, v20

    #@11d9
    move-object/from16 v1, v26

    #@11db
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11de
    .line 2952
    move-object/from16 v0, p1

    #@11e0
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@11e2
    move/from16 v26, v0

    #@11e4
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@11e7
    move-result-object v26

    #@11e8
    move-object/from16 v0, v20

    #@11ea
    move-object/from16 v1, v26

    #@11ec
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11ef
    .line 2953
    move-object/from16 v0, p1

    #@11f1
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@11f3
    move-object/from16 v26, v0

    #@11f5
    if-eqz v26, :cond_3

    #@11f7
    .line 2954
    move-object/from16 v0, p1

    #@11f9
    iget-object v7, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@11fb
    check-cast v7, Landroid/net/wifi/WifiConfiguration;

    #@11fd
    .line 2955
    .restart local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    const-string/jumbo v26, " "

    #@1200
    move-object/from16 v0, v20

    #@1202
    move-object/from16 v1, v26

    #@1204
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1207
    move-result-object v26

    #@1208
    invoke-virtual {v7}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@120b
    move-result-object v27

    #@120c
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@120f
    .line 2956
    const-string/jumbo v26, " prio="

    #@1212
    move-object/from16 v0, v20

    #@1214
    move-object/from16 v1, v26

    #@1216
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1219
    move-result-object v26

    #@121a
    iget v0, v7, Landroid/net/wifi/WifiConfiguration;->priority:I

    #@121c
    move/from16 v27, v0

    #@121e
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1221
    .line 2957
    const-string/jumbo v26, " status="

    #@1224
    move-object/from16 v0, v20

    #@1226
    move-object/from16 v1, v26

    #@1228
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@122b
    move-result-object v26

    #@122c
    iget v0, v7, Landroid/net/wifi/WifiConfiguration;->status:I

    #@122e
    move/from16 v27, v0

    #@1230
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1233
    .line 2958
    iget-object v0, v7, Landroid/net/wifi/WifiConfiguration;->BSSID:Ljava/lang/String;

    #@1235
    move-object/from16 v26, v0

    #@1237
    if-eqz v26, :cond_2e

    #@1239
    .line 2959
    const-string/jumbo v26, " "

    #@123c
    move-object/from16 v0, v20

    #@123e
    move-object/from16 v1, v26

    #@1240
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1243
    move-result-object v26

    #@1244
    iget-object v0, v7, Landroid/net/wifi/WifiConfiguration;->BSSID:Ljava/lang/String;

    #@1246
    move-object/from16 v27, v0

    #@1248
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@124b
    .line 2961
    :cond_2e
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@124e
    move-result-object v9

    #@124f
    .line 2962
    .local v9, "curConfig":Landroid/net/wifi/WifiConfiguration;
    if-eqz v9, :cond_3

    #@1251
    .line 2963
    invoke-virtual {v9}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@1254
    move-result-object v26

    #@1255
    invoke-virtual {v7}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@1258
    move-result-object v27

    #@1259
    invoke-virtual/range {v26 .. v27}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@125c
    move-result v26

    #@125d
    if-eqz v26, :cond_2f

    #@125f
    .line 2964
    const-string/jumbo v26, " is current"

    #@1262
    move-object/from16 v0, v20

    #@1264
    move-object/from16 v1, v26

    #@1266
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1269
    goto/16 :goto_0

    #@126b
    .line 2966
    :cond_2f
    const-string/jumbo v26, " current="

    #@126e
    move-object/from16 v0, v20

    #@1270
    move-object/from16 v1, v26

    #@1272
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1275
    move-result-object v26

    #@1276
    invoke-virtual {v9}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@1279
    move-result-object v27

    #@127a
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@127d
    .line 2967
    const-string/jumbo v26, " prio="

    #@1280
    move-object/from16 v0, v20

    #@1282
    move-object/from16 v1, v26

    #@1284
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1287
    move-result-object v26

    #@1288
    iget v0, v9, Landroid/net/wifi/WifiConfiguration;->priority:I

    #@128a
    move/from16 v27, v0

    #@128c
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@128f
    .line 2968
    const-string/jumbo v26, " status="

    #@1292
    move-object/from16 v0, v20

    #@1294
    move-object/from16 v1, v26

    #@1296
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1299
    move-result-object v26

    #@129a
    iget v0, v9, Landroid/net/wifi/WifiConfiguration;->status:I

    #@129c
    move/from16 v27, v0

    #@129e
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@12a1
    goto/16 :goto_0

    #@12a3
    .line 2975
    .end local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    .end local v9    # "curConfig":Landroid/net/wifi/WifiConfiguration;
    :sswitch_13
    const-string/jumbo v26, " "

    #@12a6
    move-object/from16 v0, v20

    #@12a8
    move-object/from16 v1, v26

    #@12aa
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12ad
    .line 2976
    move-object/from16 v0, p1

    #@12af
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@12b1
    move/from16 v26, v0

    #@12b3
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@12b6
    move-result-object v26

    #@12b7
    move-object/from16 v0, v20

    #@12b9
    move-object/from16 v1, v26

    #@12bb
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12be
    .line 2977
    const-string/jumbo v26, " "

    #@12c1
    move-object/from16 v0, v20

    #@12c3
    move-object/from16 v1, v26

    #@12c5
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12c8
    .line 2978
    move-object/from16 v0, p1

    #@12ca
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@12cc
    move/from16 v26, v0

    #@12ce
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@12d1
    move-result-object v26

    #@12d2
    move-object/from16 v0, v20

    #@12d4
    move-object/from16 v1, v26

    #@12d6
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12d9
    .line 2979
    move-object/from16 v0, p0

    #@12db
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@12dd
    move-object/from16 v26, v0

    #@12df
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wifi/WifiConfigStore;->getLastSelectedConfiguration()Ljava/lang/String;

    #@12e2
    move-result-object v13

    #@12e3
    .line 2980
    .restart local v13    # "key":Ljava/lang/String;
    if-eqz v13, :cond_30

    #@12e5
    .line 2981
    const-string/jumbo v26, " last="

    #@12e8
    move-object/from16 v0, v20

    #@12ea
    move-object/from16 v1, v26

    #@12ec
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12ef
    move-result-object v26

    #@12f0
    move-object/from16 v0, v26

    #@12f2
    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12f5
    .line 2983
    :cond_30
    move-object/from16 v0, p0

    #@12f7
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@12f9
    move-object/from16 v26, v0

    #@12fb
    move-object/from16 v0, p1

    #@12fd
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@12ff
    move/from16 v27, v0

    #@1301
    invoke-virtual/range {v26 .. v27}, Lcom/android/server/wifi/WifiConfigStore;->getWifiConfiguration(I)Landroid/net/wifi/WifiConfiguration;

    #@1304
    move-result-object v7

    #@1305
    .line 2984
    .restart local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    if-eqz v7, :cond_3

    #@1307
    if-eqz v13, :cond_31

    #@1309
    invoke-virtual {v7}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@130c
    move-result-object v26

    #@130d
    move-object/from16 v0, v26

    #@130f
    invoke-virtual {v0, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1312
    move-result v26

    #@1313
    if-nez v26, :cond_3

    #@1315
    .line 2985
    :cond_31
    const-string/jumbo v26, " target="

    #@1318
    move-object/from16 v0, v20

    #@131a
    move-object/from16 v1, v26

    #@131c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@131f
    move-result-object v26

    #@1320
    move-object/from16 v0, v26

    #@1322
    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1325
    goto/16 :goto_0

    #@1327
    .line 2989
    .end local v7    # "config":Landroid/net/wifi/WifiConfiguration;
    .end local v13    # "key":Ljava/lang/String;
    :sswitch_14
    const-string/jumbo v26, " "

    #@132a
    move-object/from16 v0, v20

    #@132c
    move-object/from16 v1, v26

    #@132e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1331
    .line 2990
    move-object/from16 v0, p1

    #@1333
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@1335
    move/from16 v26, v0

    #@1337
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@133a
    move-result-object v26

    #@133b
    move-object/from16 v0, v20

    #@133d
    move-object/from16 v1, v26

    #@133f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1342
    .line 2991
    const-string/jumbo v26, " "

    #@1345
    move-object/from16 v0, v20

    #@1347
    move-object/from16 v1, v26

    #@1349
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@134c
    .line 2992
    move-object/from16 v0, p1

    #@134e
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@1350
    move/from16 v26, v0

    #@1352
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1355
    move-result-object v26

    #@1356
    move-object/from16 v0, v20

    #@1358
    move-object/from16 v1, v26

    #@135a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@135d
    .line 2993
    const-string/jumbo v26, " num="

    #@1360
    move-object/from16 v0, v20

    #@1362
    move-object/from16 v1, v26

    #@1364
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1367
    move-result-object v26

    #@1368
    move-object/from16 v0, p0

    #@136a
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@136c
    move-object/from16 v27, v0

    #@136e
    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wifi/WifiConfigStore;->getConfiguredNetworksSize()I

    #@1371
    move-result v27

    #@1372
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1375
    goto/16 :goto_0

    #@1377
    .line 2996
    :sswitch_15
    const-string/jumbo v26, " "

    #@137a
    move-object/from16 v0, v20

    #@137c
    move-object/from16 v1, v26

    #@137e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1381
    .line 2997
    move-object/from16 v0, p1

    #@1383
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@1385
    move/from16 v26, v0

    #@1387
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@138a
    move-result-object v26

    #@138b
    move-object/from16 v0, v20

    #@138d
    move-object/from16 v1, v26

    #@138f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1392
    .line 2998
    const-string/jumbo v26, " "

    #@1395
    move-object/from16 v0, v20

    #@1397
    move-object/from16 v1, v26

    #@1399
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@139c
    .line 2999
    move-object/from16 v0, p1

    #@139e
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@13a0
    move/from16 v26, v0

    #@13a2
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@13a5
    move-result-object v26

    #@13a6
    move-object/from16 v0, v20

    #@13a8
    move-object/from16 v1, v26

    #@13aa
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13ad
    .line 3000
    const-string/jumbo v26, " txpkts="

    #@13b0
    move-object/from16 v0, v20

    #@13b2
    move-object/from16 v1, v26

    #@13b4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13b7
    move-result-object v26

    #@13b8
    move-object/from16 v0, p0

    #@13ba
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@13bc
    move-object/from16 v27, v0

    #@13be
    move-object/from16 v0, v27

    #@13c0
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccess:J

    #@13c2
    move-wide/from16 v28, v0

    #@13c4
    move-object/from16 v0, v26

    #@13c6
    move-wide/from16 v1, v28

    #@13c8
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@13cb
    .line 3001
    const-string/jumbo v26, ","

    #@13ce
    move-object/from16 v0, v20

    #@13d0
    move-object/from16 v1, v26

    #@13d2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13d5
    move-result-object v26

    #@13d6
    move-object/from16 v0, p0

    #@13d8
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@13da
    move-object/from16 v27, v0

    #@13dc
    move-object/from16 v0, v27

    #@13de
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txBad:J

    #@13e0
    move-wide/from16 v28, v0

    #@13e2
    move-object/from16 v0, v26

    #@13e4
    move-wide/from16 v1, v28

    #@13e6
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@13e9
    .line 3002
    const-string/jumbo v26, ","

    #@13ec
    move-object/from16 v0, v20

    #@13ee
    move-object/from16 v1, v26

    #@13f0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13f3
    move-result-object v26

    #@13f4
    move-object/from16 v0, p0

    #@13f6
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@13f8
    move-object/from16 v27, v0

    #@13fa
    move-object/from16 v0, v27

    #@13fc
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txRetries:J

    #@13fe
    move-wide/from16 v28, v0

    #@1400
    move-object/from16 v0, v26

    #@1402
    move-wide/from16 v1, v28

    #@1404
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@1407
    goto/16 :goto_0

    #@1409
    .line 3005
    :sswitch_16
    const-string/jumbo v26, " "

    #@140c
    move-object/from16 v0, v20

    #@140e
    move-object/from16 v1, v26

    #@1410
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1413
    .line 3006
    move-object/from16 v0, p1

    #@1415
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@1417
    move/from16 v26, v0

    #@1419
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@141c
    move-result-object v26

    #@141d
    move-object/from16 v0, v20

    #@141f
    move-object/from16 v1, v26

    #@1421
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1424
    .line 3007
    const-string/jumbo v26, " "

    #@1427
    move-object/from16 v0, v20

    #@1429
    move-object/from16 v1, v26

    #@142b
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@142e
    .line 3008
    move-object/from16 v0, p1

    #@1430
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@1432
    move/from16 v26, v0

    #@1434
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1437
    move-result-object v26

    #@1438
    move-object/from16 v0, v20

    #@143a
    move-object/from16 v1, v26

    #@143c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@143f
    .line 3009
    move-object/from16 v0, p1

    #@1441
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@1443
    move/from16 v26, v0

    #@1445
    const/16 v27, 0x1

    #@1447
    move/from16 v0, v26

    #@1449
    move/from16 v1, v27

    #@144b
    if-ne v0, v1, :cond_38

    #@144d
    .line 3010
    const-string/jumbo v26, " OK "

    #@1450
    move-object/from16 v0, v20

    #@1452
    move-object/from16 v1, v26

    #@1454
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1457
    .line 3014
    :cond_32
    :goto_5
    move-object/from16 v0, p0

    #@1459
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@145b
    move-object/from16 v26, v0

    #@145d
    if-eqz v26, :cond_3

    #@145f
    .line 3015
    move-object/from16 v0, p0

    #@1461
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@1463
    move-object/from16 v26, v0

    #@1465
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv4Address()Z

    #@1468
    move-result v26

    #@1469
    if-eqz v26, :cond_33

    #@146b
    .line 3016
    const-string/jumbo v26, " v4"

    #@146e
    move-object/from16 v0, v20

    #@1470
    move-object/from16 v1, v26

    #@1472
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1475
    .line 3018
    :cond_33
    move-object/from16 v0, p0

    #@1477
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@1479
    move-object/from16 v26, v0

    #@147b
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasGlobalIPv6Address()Z

    #@147e
    move-result v26

    #@147f
    if-eqz v26, :cond_34

    #@1481
    .line 3019
    const-string/jumbo v26, " v6"

    #@1484
    move-object/from16 v0, v20

    #@1486
    move-object/from16 v1, v26

    #@1488
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@148b
    .line 3021
    :cond_34
    move-object/from16 v0, p0

    #@148d
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@148f
    move-object/from16 v26, v0

    #@1491
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv4DefaultRoute()Z

    #@1494
    move-result v26

    #@1495
    if-eqz v26, :cond_35

    #@1497
    .line 3022
    const-string/jumbo v26, " v4r"

    #@149a
    move-object/from16 v0, v20

    #@149c
    move-object/from16 v1, v26

    #@149e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14a1
    .line 3024
    :cond_35
    move-object/from16 v0, p0

    #@14a3
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@14a5
    move-object/from16 v26, v0

    #@14a7
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv6DefaultRoute()Z

    #@14aa
    move-result v26

    #@14ab
    if-eqz v26, :cond_36

    #@14ad
    .line 3025
    const-string/jumbo v26, " v6r"

    #@14b0
    move-object/from16 v0, v20

    #@14b2
    move-object/from16 v1, v26

    #@14b4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14b7
    .line 3027
    :cond_36
    move-object/from16 v0, p0

    #@14b9
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@14bb
    move-object/from16 v26, v0

    #@14bd
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv4DnsServer()Z

    #@14c0
    move-result v26

    #@14c1
    if-eqz v26, :cond_37

    #@14c3
    .line 3028
    const-string/jumbo v26, " v4dns"

    #@14c6
    move-object/from16 v0, v20

    #@14c8
    move-object/from16 v1, v26

    #@14ca
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14cd
    .line 3030
    :cond_37
    move-object/from16 v0, p0

    #@14cf
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@14d1
    move-object/from16 v26, v0

    #@14d3
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv6DnsServer()Z

    #@14d6
    move-result v26

    #@14d7
    if-eqz v26, :cond_3

    #@14d9
    .line 3031
    const-string/jumbo v26, " v6dns"

    #@14dc
    move-object/from16 v0, v20

    #@14de
    move-object/from16 v1, v26

    #@14e0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14e3
    goto/16 :goto_0

    #@14e5
    .line 3011
    :cond_38
    move-object/from16 v0, p1

    #@14e7
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@14e9
    move/from16 v26, v0

    #@14eb
    const/16 v27, 0x2

    #@14ed
    move/from16 v0, v26

    #@14ef
    move/from16 v1, v27

    #@14f1
    if-ne v0, v1, :cond_32

    #@14f3
    .line 3012
    const-string/jumbo v26, " FAIL "

    #@14f6
    move-object/from16 v0, v20

    #@14f8
    move-object/from16 v1, v26

    #@14fa
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14fd
    goto/16 :goto_5

    #@14ff
    .line 3036
    :sswitch_17
    const-string/jumbo v26, " "

    #@1502
    move-object/from16 v0, v20

    #@1504
    move-object/from16 v1, v26

    #@1506
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1509
    .line 3037
    move-object/from16 v0, p1

    #@150b
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@150d
    move/from16 v26, v0

    #@150f
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1512
    move-result-object v26

    #@1513
    move-object/from16 v0, v20

    #@1515
    move-object/from16 v1, v26

    #@1517
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@151a
    .line 3038
    const-string/jumbo v26, " "

    #@151d
    move-object/from16 v0, v20

    #@151f
    move-object/from16 v1, v26

    #@1521
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1524
    .line 3039
    move-object/from16 v0, p1

    #@1526
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@1528
    move/from16 v26, v0

    #@152a
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@152d
    move-result-object v26

    #@152e
    move-object/from16 v0, v20

    #@1530
    move-object/from16 v1, v26

    #@1532
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1535
    .line 3040
    move-object/from16 v0, p1

    #@1537
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@1539
    move-object/from16 v26, v0

    #@153b
    if-eqz v26, :cond_3

    #@153d
    .line 3041
    move-object/from16 v0, p1

    #@153f
    iget-object v12, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@1541
    check-cast v12, Landroid/net/NetworkInfo;

    #@1543
    .line 3042
    .local v12, "info":Landroid/net/NetworkInfo;
    invoke-virtual {v12}, Landroid/net/NetworkInfo;->getState()Landroid/net/NetworkInfo$State;

    #@1546
    move-result-object v24

    #@1547
    .line 3043
    .local v24, "state":Landroid/net/NetworkInfo$State;
    invoke-virtual {v12}, Landroid/net/NetworkInfo;->getDetailedState()Landroid/net/NetworkInfo$DetailedState;

    #@154a
    move-result-object v10

    #@154b
    .line 3044
    .local v10, "detailedState":Landroid/net/NetworkInfo$DetailedState;
    if-eqz v24, :cond_39

    #@154d
    .line 3045
    const-string/jumbo v26, " st="

    #@1550
    move-object/from16 v0, v20

    #@1552
    move-object/from16 v1, v26

    #@1554
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1557
    move-result-object v26

    #@1558
    move-object/from16 v0, v26

    #@155a
    move-object/from16 v1, v24

    #@155c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@155f
    .line 3047
    :cond_39
    if-eqz v10, :cond_3

    #@1561
    .line 3048
    const-string/jumbo v26, "/"

    #@1564
    move-object/from16 v0, v20

    #@1566
    move-object/from16 v1, v26

    #@1568
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@156b
    move-result-object v26

    #@156c
    move-object/from16 v0, v26

    #@156e
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1571
    goto/16 :goto_0

    #@1573
    .line 3053
    .end local v10    # "detailedState":Landroid/net/NetworkInfo$DetailedState;
    .end local v12    # "info":Landroid/net/NetworkInfo;
    .end local v24    # "state":Landroid/net/NetworkInfo$State;
    :sswitch_18
    const/4 v8, -0x1

    #@1574
    .line 3054
    .local v8, "count":I
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@1577
    move-result-object v6

    #@1578
    .line 3055
    .local v6, "c":Landroid/net/wifi/WifiConfiguration;
    if-eqz v6, :cond_3a

    #@157a
    iget v8, v6, Landroid/net/wifi/WifiConfiguration;->numIpConfigFailures:I

    #@157c
    .line 3056
    :cond_3a
    const-string/jumbo v26, " "

    #@157f
    move-object/from16 v0, v20

    #@1581
    move-object/from16 v1, v26

    #@1583
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1586
    .line 3057
    move-object/from16 v0, p1

    #@1588
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@158a
    move/from16 v26, v0

    #@158c
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@158f
    move-result-object v26

    #@1590
    move-object/from16 v0, v20

    #@1592
    move-object/from16 v1, v26

    #@1594
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1597
    .line 3058
    const-string/jumbo v26, " "

    #@159a
    move-object/from16 v0, v20

    #@159c
    move-object/from16 v1, v26

    #@159e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15a1
    .line 3059
    move-object/from16 v0, p1

    #@15a3
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@15a5
    move/from16 v26, v0

    #@15a7
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@15aa
    move-result-object v26

    #@15ab
    move-object/from16 v0, v20

    #@15ad
    move-object/from16 v1, v26

    #@15af
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15b2
    .line 3060
    const-string/jumbo v26, " failures: "

    #@15b5
    move-object/from16 v0, v20

    #@15b7
    move-object/from16 v1, v26

    #@15b9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15bc
    .line 3061
    invoke-static {v8}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@15bf
    move-result-object v26

    #@15c0
    move-object/from16 v0, v20

    #@15c2
    move-object/from16 v1, v26

    #@15c4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15c7
    .line 3062
    const-string/jumbo v26, "/"

    #@15ca
    move-object/from16 v0, v20

    #@15cc
    move-object/from16 v1, v26

    #@15ce
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15d1
    .line 3063
    move-object/from16 v0, p0

    #@15d3
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@15d5
    move-object/from16 v26, v0

    #@15d7
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wifi/WifiConfigStore;->getMaxDhcpRetries()I

    #@15da
    move-result v26

    #@15db
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@15de
    move-result-object v26

    #@15df
    move-object/from16 v0, v20

    #@15e1
    move-object/from16 v1, v26

    #@15e3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15e6
    .line 3064
    move-object/from16 v0, p0

    #@15e8
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@15ea
    move-object/from16 v26, v0

    #@15ec
    invoke-virtual/range {v26 .. v26}, Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;

    #@15ef
    move-result-object v26

    #@15f0
    if-eqz v26, :cond_3b

    #@15f2
    .line 3065
    const-string/jumbo v26, " "

    #@15f5
    move-object/from16 v0, v20

    #@15f7
    move-object/from16 v1, v26

    #@15f9
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15fc
    move-result-object v26

    #@15fd
    move-object/from16 v0, p0

    #@15ff
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@1601
    move-object/from16 v27, v0

    #@1603
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;

    #@1606
    move-result-object v27

    #@1607
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@160a
    .line 3067
    :cond_3b
    if-eqz v6, :cond_3e

    #@160c
    .line 3069
    move-object/from16 v0, p0

    #@160e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1610
    move-object/from16 v26, v0

    #@1612
    move-object/from16 v0, v26

    #@1614
    invoke-virtual {v0, v6}, Lcom/android/server/wifi/WifiConfigStore;->getScanDetailCache(Landroid/net/wifi/WifiConfiguration;)Lcom/android/server/wifi/ScanDetailCache;

    #@1617
    move-result-object v21

    #@1618
    .line 3070
    .local v21, "scanDetailCache":Lcom/android/server/wifi/ScanDetailCache;
    if-eqz v21, :cond_3d

    #@161a
    .line 3071
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wifi/ScanDetailCache;->values()Ljava/util/Collection;

    #@161d
    move-result-object v26

    #@161e
    invoke-interface/range {v26 .. v26}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@1621
    move-result-object v23

    #@1622
    .local v23, "sd$iterator":Ljava/util/Iterator;
    :cond_3c
    :goto_6
    invoke-interface/range {v23 .. v23}, Ljava/util/Iterator;->hasNext()Z

    #@1625
    move-result v26

    #@1626
    if-eqz v26, :cond_3d

    #@1628
    invoke-interface/range {v23 .. v23}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@162b
    move-result-object v22

    #@162c
    check-cast v22, Lcom/android/server/wifi/ScanDetail;

    #@162e
    .line 3072
    .local v22, "sd":Lcom/android/server/wifi/ScanDetail;
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wifi/ScanDetail;->getScanResult()Landroid/net/wifi/ScanResult;

    #@1631
    move-result-object v15

    #@1632
    .line 3073
    .local v15, "r":Landroid/net/wifi/ScanResult;
    iget-object v0, v15, Landroid/net/wifi/ScanResult;->BSSID:Ljava/lang/String;

    #@1634
    move-object/from16 v26, v0

    #@1636
    move-object/from16 v0, p0

    #@1638
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@163a
    move-object/from16 v27, v0

    #@163c
    invoke-virtual/range {v27 .. v27}, Landroid/net/wifi/WifiInfo;->getBSSID()Ljava/lang/String;

    #@163f
    move-result-object v27

    #@1640
    invoke-virtual/range {v26 .. v27}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1643
    move-result v26

    #@1644
    if-eqz v26, :cond_3c

    #@1646
    .line 3074
    const-string/jumbo v26, " ipfail="

    #@1649
    move-object/from16 v0, v20

    #@164b
    move-object/from16 v1, v26

    #@164d
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1650
    move-result-object v26

    #@1651
    iget v0, v15, Landroid/net/wifi/ScanResult;->numIpConfigFailures:I

    #@1653
    move/from16 v27, v0

    #@1655
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1658
    .line 3075
    const-string/jumbo v26, ",st="

    #@165b
    move-object/from16 v0, v20

    #@165d
    move-object/from16 v1, v26

    #@165f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1662
    move-result-object v26

    #@1663
    iget v0, v15, Landroid/net/wifi/ScanResult;->autoJoinStatus:I

    #@1665
    move/from16 v27, v0

    #@1667
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@166a
    goto :goto_6

    #@166b
    .line 3079
    .end local v15    # "r":Landroid/net/wifi/ScanResult;
    .end local v22    # "sd":Lcom/android/server/wifi/ScanDetail;
    .end local v23    # "sd$iterator":Ljava/util/Iterator;
    :cond_3d
    const-string/jumbo v26, " -> ajst="

    #@166e
    move-object/from16 v0, v20

    #@1670
    move-object/from16 v1, v26

    #@1672
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1675
    move-result-object v26

    #@1676
    iget v0, v6, Landroid/net/wifi/WifiConfiguration;->autoJoinStatus:I

    #@1678
    move/from16 v27, v0

    #@167a
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@167d
    .line 3080
    const-string/jumbo v26, " "

    #@1680
    move-object/from16 v0, v20

    #@1682
    move-object/from16 v1, v26

    #@1684
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1687
    move-result-object v26

    #@1688
    iget v0, v6, Landroid/net/wifi/WifiConfiguration;->disableReason:I

    #@168a
    move/from16 v27, v0

    #@168c
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@168f
    .line 3081
    const-string/jumbo v26, " txpkts="

    #@1692
    move-object/from16 v0, v20

    #@1694
    move-object/from16 v1, v26

    #@1696
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1699
    move-result-object v26

    #@169a
    move-object/from16 v0, p0

    #@169c
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@169e
    move-object/from16 v27, v0

    #@16a0
    move-object/from16 v0, v27

    #@16a2
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccess:J

    #@16a4
    move-wide/from16 v28, v0

    #@16a6
    move-object/from16 v0, v26

    #@16a8
    move-wide/from16 v1, v28

    #@16aa
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@16ad
    .line 3082
    const-string/jumbo v26, ","

    #@16b0
    move-object/from16 v0, v20

    #@16b2
    move-object/from16 v1, v26

    #@16b4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16b7
    move-result-object v26

    #@16b8
    move-object/from16 v0, p0

    #@16ba
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@16bc
    move-object/from16 v27, v0

    #@16be
    move-object/from16 v0, v27

    #@16c0
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txBad:J

    #@16c2
    move-wide/from16 v28, v0

    #@16c4
    move-object/from16 v0, v26

    #@16c6
    move-wide/from16 v1, v28

    #@16c8
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@16cb
    .line 3083
    const-string/jumbo v26, ","

    #@16ce
    move-object/from16 v0, v20

    #@16d0
    move-object/from16 v1, v26

    #@16d2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16d5
    move-result-object v26

    #@16d6
    move-object/from16 v0, p0

    #@16d8
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@16da
    move-object/from16 v27, v0

    #@16dc
    move-object/from16 v0, v27

    #@16de
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txRetries:J

    #@16e0
    move-wide/from16 v28, v0

    #@16e2
    move-object/from16 v0, v26

    #@16e4
    move-wide/from16 v1, v28

    #@16e6
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@16e9
    .line 3085
    .end local v21    # "scanDetailCache":Lcom/android/server/wifi/ScanDetailCache;
    :cond_3e
    const-string/jumbo v26, " bcn=%d"

    #@16ec
    const/16 v27, 0x1

    #@16ee
    move/from16 v0, v27

    #@16f0
    new-array v0, v0, [Ljava/lang/Object;

    #@16f2
    move-object/from16 v27, v0

    #@16f4
    move-object/from16 v0, p0

    #@16f6
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mRunningBeaconCount:I

    #@16f8
    move/from16 v28, v0

    #@16fa
    invoke-static/range {v28 .. v28}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@16fd
    move-result-object v28

    #@16fe
    const/16 v29, 0x0

    #@1700
    aput-object v28, v27, v29

    #@1702
    invoke-static/range {v26 .. v27}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@1705
    move-result-object v26

    #@1706
    move-object/from16 v0, v20

    #@1708
    move-object/from16 v1, v26

    #@170a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@170d
    goto/16 :goto_0

    #@170f
    .line 3088
    .end local v6    # "c":Landroid/net/wifi/WifiConfiguration;
    .end local v8    # "count":I
    :sswitch_19
    const-string/jumbo v26, " "

    #@1712
    move-object/from16 v0, v20

    #@1714
    move-object/from16 v1, v26

    #@1716
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1719
    .line 3089
    move-object/from16 v0, p1

    #@171b
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@171d
    move/from16 v26, v0

    #@171f
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1722
    move-result-object v26

    #@1723
    move-object/from16 v0, v20

    #@1725
    move-object/from16 v1, v26

    #@1727
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@172a
    .line 3090
    const-string/jumbo v26, " "

    #@172d
    move-object/from16 v0, v20

    #@172f
    move-object/from16 v1, v26

    #@1731
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1734
    .line 3091
    move-object/from16 v0, p1

    #@1736
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@1738
    move/from16 v26, v0

    #@173a
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@173d
    move-result-object v26

    #@173e
    move-object/from16 v0, v20

    #@1740
    move-object/from16 v1, v26

    #@1742
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1745
    .line 3092
    move-object/from16 v0, p0

    #@1747
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@1749
    move-object/from16 v26, v0

    #@174b
    if-eqz v26, :cond_3

    #@174d
    .line 3093
    move-object/from16 v0, p0

    #@174f
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@1751
    move-object/from16 v26, v0

    #@1753
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv4Address()Z

    #@1756
    move-result v26

    #@1757
    if-eqz v26, :cond_3f

    #@1759
    .line 3094
    const-string/jumbo v26, " v4"

    #@175c
    move-object/from16 v0, v20

    #@175e
    move-object/from16 v1, v26

    #@1760
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1763
    .line 3096
    :cond_3f
    move-object/from16 v0, p0

    #@1765
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@1767
    move-object/from16 v26, v0

    #@1769
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasGlobalIPv6Address()Z

    #@176c
    move-result v26

    #@176d
    if-eqz v26, :cond_40

    #@176f
    .line 3097
    const-string/jumbo v26, " v6"

    #@1772
    move-object/from16 v0, v20

    #@1774
    move-object/from16 v1, v26

    #@1776
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1779
    .line 3099
    :cond_40
    move-object/from16 v0, p0

    #@177b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@177d
    move-object/from16 v26, v0

    #@177f
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv4DefaultRoute()Z

    #@1782
    move-result v26

    #@1783
    if-eqz v26, :cond_41

    #@1785
    .line 3100
    const-string/jumbo v26, " v4r"

    #@1788
    move-object/from16 v0, v20

    #@178a
    move-object/from16 v1, v26

    #@178c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@178f
    .line 3102
    :cond_41
    move-object/from16 v0, p0

    #@1791
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@1793
    move-object/from16 v26, v0

    #@1795
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv6DefaultRoute()Z

    #@1798
    move-result v26

    #@1799
    if-eqz v26, :cond_42

    #@179b
    .line 3103
    const-string/jumbo v26, " v6r"

    #@179e
    move-object/from16 v0, v20

    #@17a0
    move-object/from16 v1, v26

    #@17a2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17a5
    .line 3105
    :cond_42
    move-object/from16 v0, p0

    #@17a7
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@17a9
    move-object/from16 v26, v0

    #@17ab
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv4DnsServer()Z

    #@17ae
    move-result v26

    #@17af
    if-eqz v26, :cond_43

    #@17b1
    .line 3106
    const-string/jumbo v26, " v4dns"

    #@17b4
    move-object/from16 v0, v20

    #@17b6
    move-object/from16 v1, v26

    #@17b8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17bb
    .line 3108
    :cond_43
    move-object/from16 v0, p0

    #@17bd
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mLinkProperties:Landroid/net/LinkProperties;

    #@17bf
    move-object/from16 v26, v0

    #@17c1
    invoke-virtual/range {v26 .. v26}, Landroid/net/LinkProperties;->hasIPv6DnsServer()Z

    #@17c4
    move-result v26

    #@17c5
    if-eqz v26, :cond_3

    #@17c7
    .line 3109
    const-string/jumbo v26, " v6dns"

    #@17ca
    move-object/from16 v0, v20

    #@17cc
    move-object/from16 v1, v26

    #@17ce
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17d1
    goto/16 :goto_0

    #@17d3
    .line 3114
    :sswitch_1a
    move-object/from16 v0, p1

    #@17d5
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@17d7
    move-object/from16 v26, v0

    #@17d9
    if-eqz v26, :cond_3

    #@17db
    .line 3115
    const-string/jumbo v26, " "

    #@17de
    move-object/from16 v0, v20

    #@17e0
    move-object/from16 v1, v26

    #@17e2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17e5
    move-result-object v27

    #@17e6
    move-object/from16 v0, p1

    #@17e8
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@17ea
    move-object/from16 v26, v0

    #@17ec
    check-cast v26, Ljava/lang/String;

    #@17ee
    move-object/from16 v0, v27

    #@17f0
    move-object/from16 v1, v26

    #@17f2
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17f5
    goto/16 :goto_0

    #@17f7
    .line 3119
    :sswitch_1b
    const-string/jumbo v26, " "

    #@17fa
    move-object/from16 v0, v20

    #@17fc
    move-object/from16 v1, v26

    #@17fe
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1801
    .line 3120
    move-object/from16 v0, p1

    #@1803
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@1805
    move/from16 v26, v0

    #@1807
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@180a
    move-result-object v26

    #@180b
    move-object/from16 v0, v20

    #@180d
    move-object/from16 v1, v26

    #@180f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1812
    .line 3121
    const-string/jumbo v26, " "

    #@1815
    move-object/from16 v0, v20

    #@1817
    move-object/from16 v1, v26

    #@1819
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@181c
    .line 3122
    move-object/from16 v0, p1

    #@181e
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@1820
    move/from16 v26, v0

    #@1822
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1825
    move-result-object v26

    #@1826
    move-object/from16 v0, v20

    #@1828
    move-object/from16 v1, v26

    #@182a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@182d
    .line 3123
    move-object/from16 v0, p1

    #@182f
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@1831
    move-object/from16 v26, v0

    #@1833
    if-eqz v26, :cond_3

    #@1835
    .line 3124
    const-string/jumbo v26, " "

    #@1838
    move-object/from16 v0, v20

    #@183a
    move-object/from16 v1, v26

    #@183c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@183f
    move-result-object v27

    #@1840
    move-object/from16 v0, p1

    #@1842
    iget-object v0, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@1844
    move-object/from16 v26, v0

    #@1846
    check-cast v26, Ljava/lang/String;

    #@1848
    move-object/from16 v0, v27

    #@184a
    move-object/from16 v1, v26

    #@184c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@184f
    goto/16 :goto_0

    #@1851
    .line 3128
    :sswitch_1c
    const-string/jumbo v26, " "

    #@1854
    move-object/from16 v0, v20

    #@1856
    move-object/from16 v1, v26

    #@1858
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@185b
    .line 3129
    move-object/from16 v0, p1

    #@185d
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@185f
    move/from16 v26, v0

    #@1861
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@1864
    move-result-object v26

    #@1865
    move-object/from16 v0, v20

    #@1867
    move-object/from16 v1, v26

    #@1869
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@186c
    .line 3130
    const-string/jumbo v26, " "

    #@186f
    move-object/from16 v0, v20

    #@1871
    move-object/from16 v1, v26

    #@1873
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1876
    .line 3131
    move-object/from16 v0, p1

    #@1878
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@187a
    move/from16 v26, v0

    #@187c
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@187f
    move-result-object v26

    #@1880
    move-object/from16 v0, v20

    #@1882
    move-object/from16 v1, v26

    #@1884
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1887
    .line 3132
    const-string/jumbo v26, " cur="

    #@188a
    move-object/from16 v0, v20

    #@188c
    move-object/from16 v1, v26

    #@188e
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1891
    move-result-object v26

    #@1892
    move-object/from16 v0, p0

    #@1894
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->roamWatchdogCount:I

    #@1896
    move/from16 v27, v0

    #@1898
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@189b
    goto/16 :goto_0

    #@189d
    .line 3135
    :sswitch_1d
    const-string/jumbo v26, " "

    #@18a0
    move-object/from16 v0, v20

    #@18a2
    move-object/from16 v1, v26

    #@18a4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18a7
    .line 3136
    move-object/from16 v0, p1

    #@18a9
    iget v0, v0, Landroid/os/Message;->arg1:I

    #@18ab
    move/from16 v26, v0

    #@18ad
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@18b0
    move-result-object v26

    #@18b1
    move-object/from16 v0, v20

    #@18b3
    move-object/from16 v1, v26

    #@18b5
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18b8
    .line 3137
    const-string/jumbo v26, " "

    #@18bb
    move-object/from16 v0, v20

    #@18bd
    move-object/from16 v1, v26

    #@18bf
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18c2
    .line 3138
    move-object/from16 v0, p1

    #@18c4
    iget v0, v0, Landroid/os/Message;->arg2:I

    #@18c6
    move/from16 v26, v0

    #@18c8
    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@18cb
    move-result-object v26

    #@18cc
    move-object/from16 v0, v20

    #@18ce
    move-object/from16 v1, v26

    #@18d0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18d3
    .line 3139
    const-string/jumbo v26, " cur="

    #@18d6
    move-object/from16 v0, v20

    #@18d8
    move-object/from16 v1, v26

    #@18da
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18dd
    move-result-object v26

    #@18de
    move-object/from16 v0, p0

    #@18e0
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine;->disconnectingWatchdogCount:I

    #@18e2
    move/from16 v27, v0

    #@18e4
    invoke-virtual/range {v26 .. v27}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@18e7
    goto/16 :goto_0

    #@18e9
    .line 2585
    nop

    #@18ea
    :sswitch_data_0
    .sparse-switch
        0x20034 -> :sswitch_12
        0x20036 -> :sswitch_13
        0x2003b -> :sswitch_14
        0x20047 -> :sswitch_5
        0x20050 -> :sswitch_1b
        0x20053 -> :sswitch_f
        0x2005e -> :sswitch_1c
        0x20060 -> :sswitch_1d
        0x2008b -> :sswitch_18
        0x2008c -> :sswitch_19
        0x2008d -> :sswitch_c
        0x2008f -> :sswitch_10
        0x20090 -> :sswitch_f
        0x20091 -> :sswitch_11
        0x20092 -> :sswitch_7
        0x20093 -> :sswitch_c
        0x20095 -> :sswitch_1a
        0x2009a -> :sswitch_2
        0x2009b -> :sswitch_1
        0x2009c -> :sswitch_4
        0x2009e -> :sswitch_3
        0x2009f -> :sswitch_1
        0x2300b -> :sswitch_17
        0x24003 -> :sswitch_b
        0x24004 -> :sswitch_d
        0x24005 -> :sswitch_a
        0x24006 -> :sswitch_6
        0x2400d -> :sswitch_e
        0x2400e -> :sswitch_e
        0x24011 -> :sswitch_0
        0x2402b -> :sswitch_9
        0x25001 -> :sswitch_10
        0x25004 -> :sswitch_8
        0x25007 -> :sswitch_7
        0x25011 -> :sswitch_13
        0x25014 -> :sswitch_f
        0x30004 -> :sswitch_15
        0x30005 -> :sswitch_16
    .end sparse-switch
.end method

.method public getMessenger()Landroid/os/Messenger;
    .locals 2

    #@0
    .prologue
    .line 1553
    new-instance v0, Landroid/os/Messenger;

    #@2
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getHandler()Landroid/os/Handler;

    #@5
    move-result-object v1

    #@6
    invoke-direct {v0, v1}, Landroid/os/Messenger;-><init>(Landroid/os/Handler;)V

    #@9
    return-object v0
.end method

.method getPrivateBroadcast(Ljava/lang/String;I)Landroid/app/PendingIntent;
    .locals 3
    .param p1, "action"    # Ljava/lang/String;
    .param p2, "requestCode"    # I

    #@0
    .prologue
    .line 1284
    new-instance v0, Landroid/content/Intent;

    #@2
    const/4 v1, 0x0

    #@3
    invoke-direct {v0, p1, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    #@6
    .line 1285
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x4000000

    #@8
    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@b
    .line 1287
    const-string/jumbo v1, "android"

    #@e
    invoke-virtual {v0, v1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    #@11
    .line 1288
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@13
    const/4 v2, 0x0

    #@14
    invoke-static {v1, p2, v0, v2}, Landroid/app/PendingIntent;->getBroadcast(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;

    #@17
    move-result-object v1

    #@18
    return-object v1
.end method

.method public getRxPacketRate()D
    .locals 2

    #@0
    .prologue
    .line 4372
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 4373
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@6
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@8
    return-wide v0

    #@9
    .line 4375
    :cond_0
    const-wide/high16 v0, -0x4010000000000000L    # -1.0

    #@b
    return-wide v0
.end method

.method public getScanResultsListNoCopyUnsync()Ljava/util/List;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/wifi/ScanDetail;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    .line 2097
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@2
    return-object v0
.end method

.method public getTxPacketRate()D
    .locals 2

    #@0
    .prologue
    .line 4365
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 4366
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@6
    iget-wide v0, v0, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@8
    return-wide v0

    #@9
    .line 4368
    :cond_0
    const-wide/high16 v0, -0x4010000000000000L    # -1.0

    #@b
    return-wide v0
.end method

.method getVerboseLoggingLevel()I
    .locals 1

    #@0
    .prologue
    .line 1294
    iget v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mVerboseLoggingLevel:I

    #@2
    return v0
.end method

.method getWifiLinkLayerStats(Z)Landroid/net/wifi/WifiLinkLayerStats;
    .locals 8
    .param p1, "dbg"    # Z

    #@0
    .prologue
    .line 1746
    const/4 v5, 0x0

    #@1
    .line 1747
    .local v5, "stats":Landroid/net/wifi/WifiLinkLayerStats;
    iget v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLinkLayerStatsSupported:I

    #@3
    if-lez v6, :cond_0

    #@5
    .line 1748
    const-string/jumbo v4, "wlan0"

    #@8
    .line 1749
    .local v4, "name":Ljava/lang/String;
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@a
    invoke-static {v4}, Lcom/android/server/wifi/WifiNative;->getWifiLinkLayerStats(Ljava/lang/String;)Landroid/net/wifi/WifiLinkLayerStats;

    #@d
    move-result-object v5

    #@e
    .line 1750
    .local v5, "stats":Landroid/net/wifi/WifiLinkLayerStats;
    if-eqz v4, :cond_3

    #@10
    if-nez v5, :cond_3

    #@12
    iget v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLinkLayerStatsSupported:I

    #@14
    if-lez v6, :cond_3

    #@16
    .line 1751
    iget v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLinkLayerStatsSupported:I

    #@18
    add-int/lit8 v6, v6, -0x1

    #@1a
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLinkLayerStatsSupported:I

    #@1c
    .line 1760
    .end local v4    # "name":Ljava/lang/String;
    .end local v5    # "stats":Landroid/net/wifi/WifiLinkLayerStats;
    :cond_0
    :goto_0
    if-eqz v5, :cond_1

    #@1e
    iget v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiLinkLayerStatsSupported:I

    #@20
    if-gtz v6, :cond_4

    #@22
    .line 1761
    :cond_1
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@24
    invoke-static {v6}, Landroid/net/TrafficStats;->getTxPackets(Ljava/lang/String;)J

    #@27
    move-result-wide v2

    #@28
    .line 1762
    .local v2, "mTxPkts":J
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mInterfaceName:Ljava/lang/String;

    #@2a
    invoke-static {v6}, Landroid/net/TrafficStats;->getRxPackets(Ljava/lang/String;)J

    #@2d
    move-result-wide v0

    #@2e
    .line 1763
    .local v0, "mRxPkts":J
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@30
    invoke-virtual {v6, v2, v3, v0, v1}, Landroid/net/wifi/WifiInfo;->updatePacketRates(JJ)V

    #@33
    .line 1767
    .end local v0    # "mRxPkts":J
    .end local v2    # "mTxPkts":J
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@36
    move-result v6

    #@37
    if-eqz v6, :cond_2

    #@39
    .line 1768
    const v6, 0x2009e

    #@3c
    invoke-virtual {p0, v6}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@3f
    .line 1770
    :cond_2
    return-object v5

    #@40
    .line 1752
    .restart local v4    # "name":Ljava/lang/String;
    .restart local v5    # "stats":Landroid/net/wifi/WifiLinkLayerStats;
    :cond_3
    if-eqz v5, :cond_0

    #@42
    .line 1753
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@45
    move-result-wide v6

    #@46
    iput-wide v6, p0, Lcom/android/server/wifi/WifiStateMachine;->lastLinkLayerStatsUpdate:J

    #@48
    .line 1754
    iget v6, v5, Landroid/net/wifi/WifiLinkLayerStats;->on_time:I

    #@4a
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@4c
    .line 1755
    iget v6, v5, Landroid/net/wifi/WifiLinkLayerStats;->tx_time:I

    #@4e
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTime:I

    #@50
    .line 1756
    iget v6, v5, Landroid/net/wifi/WifiLinkLayerStats;->rx_time:I

    #@52
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTime:I

    #@54
    .line 1757
    iget v6, v5, Landroid/net/wifi/WifiLinkLayerStats;->beacon_rx:I

    #@56
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mRunningBeaconCount:I

    #@58
    goto :goto_0

    #@59
    .line 1765
    .end local v4    # "name":Ljava/lang/String;
    .end local v5    # "stats":Landroid/net/wifi/WifiLinkLayerStats;
    :cond_4
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@5b
    invoke-virtual {v6, v5}, Landroid/net/wifi/WifiInfo;->updatePacketRates(Landroid/net/wifi/WifiLinkLayerStats;)V

    #@5e
    goto :goto_1
.end method

.method public getWifiMonitor()Lcom/android/server/wifi/WifiMonitor;
    .locals 1

    #@0
    .prologue
    .line 1557
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiMonitor:Lcom/android/server/wifi/WifiMonitor;

    #@2
    return-object v0
.end method

.method handle3GAuthRequest(Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;)V
    .locals 26
    .param p1, "requestData"    # Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;

    #@0
    .prologue
    .line 9880
    new-instance v20, Ljava/lang/StringBuilder;

    #@2
    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    .line 9881
    .local v20, "sb":Ljava/lang/StringBuilder;
    const/4 v14, 0x0

    #@6
    .line 9882
    .local v14, "rand":[B
    const/4 v5, 0x0

    #@7
    .line 9883
    .local v5, "authn":[B
    const-string/jumbo v17, "UMTS-AUTH"

    #@a
    .line 9885
    .local v17, "res_type":Ljava/lang/String;
    move-object/from16 v0, p0

    #@c
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

    #@e
    move-object/from16 v24, v0

    #@10
    if-eqz v24, :cond_0

    #@12
    .line 9886
    move-object/from16 v0, p0

    #@14
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

    #@16
    move-object/from16 v24, v0

    #@18
    move-object/from16 v0, v24

    #@1a
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->networkId:I

    #@1c
    move/from16 v24, v0

    #@1e
    move-object/from16 v0, p1

    #@20
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;->networkId:I

    #@22
    move/from16 v25, v0

    #@24
    move/from16 v0, v24

    #@26
    move/from16 v1, v25

    #@28
    if-ne v0, v1, :cond_2

    #@2a
    .line 9887
    :cond_0
    const-string/jumbo v24, "id matches targetWifiConfiguration"

    #@2d
    move-object/from16 v0, p0

    #@2f
    move-object/from16 v1, v24

    #@31
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@34
    .line 9892
    move-object/from16 v0, p1

    #@36
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;->data:[Ljava/lang/String;

    #@38
    move-object/from16 v24, v0

    #@3a
    move-object/from16 v0, v24

    #@3c
    array-length v0, v0

    #@3d
    move/from16 v24, v0

    #@3f
    const/16 v25, 0x2

    #@41
    move/from16 v0, v24

    #@43
    move/from16 v1, v25

    #@45
    if-ne v0, v1, :cond_3

    #@47
    .line 9894
    :try_start_0
    move-object/from16 v0, p1

    #@49
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;->data:[Ljava/lang/String;

    #@4b
    move-object/from16 v24, v0

    #@4d
    const/16 v25, 0x0

    #@4f
    aget-object v24, v24, v25

    #@51
    move-object/from16 v0, p0

    #@53
    move-object/from16 v1, v24

    #@55
    invoke-direct {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->parseHex(Ljava/lang/String;)[B

    #@58
    move-result-object v14

    #@59
    .line 9895
    .local v14, "rand":[B
    move-object/from16 v0, p1

    #@5b
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;->data:[Ljava/lang/String;

    #@5d
    move-object/from16 v24, v0

    #@5f
    const/16 v25, 0x1

    #@61
    aget-object v24, v24, v25

    #@63
    move-object/from16 v0, p0

    #@65
    move-object/from16 v1, v24

    #@67
    invoke-direct {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->parseHex(Ljava/lang/String;)[B
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@6a
    move-result-object v5

    #@6b
    .line 9903
    .end local v5    # "authn":[B
    .end local v14    # "rand":[B
    :goto_0
    const-string/jumbo v23, ""

    #@6e
    .line 9904
    .local v23, "tmResponse":Ljava/lang/String;
    if-eqz v14, :cond_1

    #@70
    if-eqz v5, :cond_1

    #@72
    .line 9906
    invoke-static {v14, v5}, Lcom/android/server/wifi/WifiStateMachine;->concatHex([B[B)[B

    #@75
    move-result-object v24

    #@76
    const/16 v25, 0x2

    #@78
    .line 9905
    invoke-static/range {v24 .. v25}, Landroid/util/Base64;->encodeToString([BI)Ljava/lang/String;

    #@7b
    move-result-object v8

    #@7c
    .line 9909
    .local v8, "base64Challenge":Ljava/lang/String;
    move-object/from16 v0, p0

    #@7e
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@80
    move-object/from16 v24, v0

    #@82
    const-string/jumbo v25, "phone"

    #@85
    invoke-virtual/range {v24 .. v25}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@88
    move-result-object v22

    #@89
    .line 9908
    check-cast v22, Landroid/telephony/TelephonyManager;

    #@8b
    .line 9910
    .local v22, "tm":Landroid/telephony/TelephonyManager;
    if-eqz v22, :cond_4

    #@8d
    .line 9911
    const/4 v4, 0x2

    #@8e
    .line 9912
    .local v4, "appType":I
    move-object/from16 v0, v22

    #@90
    invoke-virtual {v0, v4, v8}, Landroid/telephony/TelephonyManager;->getIccSimChallengeResponse(ILjava/lang/String;)Ljava/lang/String;

    #@93
    move-result-object v23

    #@94
    .line 9913
    new-instance v24, Ljava/lang/StringBuilder;

    #@96
    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    #@99
    const-string/jumbo v25, "Raw Response - "

    #@9c
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9f
    move-result-object v24

    #@a0
    move-object/from16 v0, v24

    #@a2
    move-object/from16 v1, v23

    #@a4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a7
    move-result-object v24

    #@a8
    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@ab
    move-result-object v24

    #@ac
    move-object/from16 v0, p0

    #@ae
    move-object/from16 v1, v24

    #@b0
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@b3
    .line 9919
    .end local v4    # "appType":I
    .end local v8    # "base64Challenge":Ljava/lang/String;
    .end local v22    # "tm":Landroid/telephony/TelephonyManager;
    :cond_1
    :goto_1
    if-eqz v23, :cond_7

    #@b5
    invoke-virtual/range {v23 .. v23}, Ljava/lang/String;->length()I

    #@b8
    move-result v24

    #@b9
    const/16 v25, 0x4

    #@bb
    move/from16 v0, v24

    #@bd
    move/from16 v1, v25

    #@bf
    if-le v0, v1, :cond_7

    #@c1
    .line 9921
    const/16 v24, 0x0

    #@c3
    .line 9920
    invoke-static/range {v23 .. v24}, Landroid/util/Base64;->decode(Ljava/lang/String;I)[B

    #@c6
    move-result-object v19

    #@c7
    .line 9922
    .local v19, "result":[B
    new-instance v24, Ljava/lang/StringBuilder;

    #@c9
    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    #@cc
    const-string/jumbo v25, "Hex Response - "

    #@cf
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d2
    move-result-object v24

    #@d3
    invoke-static/range {v19 .. v19}, Lcom/android/server/wifi/WifiStateMachine;->makeHex([B)Ljava/lang/String;

    #@d6
    move-result-object v25

    #@d7
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@da
    move-result-object v24

    #@db
    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@de
    move-result-object v24

    #@df
    move-object/from16 v0, p0

    #@e1
    move-object/from16 v1, v24

    #@e3
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@e6
    .line 9923
    const/16 v24, 0x0

    #@e8
    aget-byte v21, v19, v24

    #@ea
    .line 9924
    .local v21, "tag":B
    const/16 v24, -0x25

    #@ec
    move/from16 v0, v21

    #@ee
    move/from16 v1, v24

    #@f0
    if-ne v0, v1, :cond_5

    #@f2
    .line 9925
    const-string/jumbo v24, "successful 3G authentication "

    #@f5
    move-object/from16 v0, p0

    #@f7
    move-object/from16 v1, v24

    #@f9
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@fc
    .line 9926
    const/16 v24, 0x1

    #@fe
    aget-byte v16, v19, v24

    #@100
    .line 9927
    .local v16, "res_len":I
    const/16 v24, 0x2

    #@102
    move-object/from16 v0, v19

    #@104
    move/from16 v1, v24

    #@106
    move/from16 v2, v16

    #@108
    invoke-static {v0, v1, v2}, Lcom/android/server/wifi/WifiStateMachine;->makeHex([BII)Ljava/lang/String;

    #@10b
    move-result-object v15

    #@10c
    .line 9928
    .local v15, "res":Ljava/lang/String;
    add-int/lit8 v24, v16, 0x2

    #@10e
    aget-byte v10, v19, v24

    #@110
    .line 9929
    .local v10, "ck_len":I
    add-int/lit8 v24, v16, 0x3

    #@112
    move-object/from16 v0, v19

    #@114
    move/from16 v1, v24

    #@116
    invoke-static {v0, v1, v10}, Lcom/android/server/wifi/WifiStateMachine;->makeHex([BII)Ljava/lang/String;

    #@119
    move-result-object v9

    #@11a
    .line 9930
    .local v9, "ck":Ljava/lang/String;
    add-int v24, v16, v10

    #@11c
    add-int/lit8 v24, v24, 0x3

    #@11e
    aget-byte v13, v19, v24

    #@120
    .line 9931
    .local v13, "ik_len":I
    add-int v24, v16, v10

    #@122
    add-int/lit8 v24, v24, 0x4

    #@124
    move-object/from16 v0, v19

    #@126
    move/from16 v1, v24

    #@128
    invoke-static {v0, v1, v13}, Lcom/android/server/wifi/WifiStateMachine;->makeHex([BII)Ljava/lang/String;

    #@12b
    move-result-object v12

    #@12c
    .line 9932
    .local v12, "ik":Ljava/lang/String;
    const-string/jumbo v24, ":"

    #@12f
    move-object/from16 v0, v20

    #@131
    move-object/from16 v1, v24

    #@133
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@136
    move-result-object v24

    #@137
    move-object/from16 v0, v24

    #@139
    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13c
    move-result-object v24

    #@13d
    const-string/jumbo v25, ":"

    #@140
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@143
    move-result-object v24

    #@144
    move-object/from16 v0, v24

    #@146
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@149
    move-result-object v24

    #@14a
    const-string/jumbo v25, ":"

    #@14d
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@150
    move-result-object v24

    #@151
    move-object/from16 v0, v24

    #@153
    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@156
    .line 9933
    new-instance v24, Ljava/lang/StringBuilder;

    #@158
    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    #@15b
    const-string/jumbo v25, "ik:"

    #@15e
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@161
    move-result-object v24

    #@162
    move-object/from16 v0, v24

    #@164
    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@167
    move-result-object v24

    #@168
    const-string/jumbo v25, "ck:"

    #@16b
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16e
    move-result-object v24

    #@16f
    move-object/from16 v0, v24

    #@171
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@174
    move-result-object v24

    #@175
    const-string/jumbo v25, " res:"

    #@178
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17b
    move-result-object v24

    #@17c
    move-object/from16 v0, v24

    #@17e
    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@181
    move-result-object v24

    #@182
    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@185
    move-result-object v24

    #@186
    move-object/from16 v0, p0

    #@188
    move-object/from16 v1, v24

    #@18a
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@18d
    .line 9950
    .end local v9    # "ck":Ljava/lang/String;
    .end local v10    # "ck_len":I
    .end local v12    # "ik":Ljava/lang/String;
    .end local v13    # "ik_len":I
    .end local v15    # "res":Ljava/lang/String;
    .end local v16    # "res_len":I
    :goto_2
    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@190
    move-result-object v18

    #@191
    .line 9951
    .local v18, "response":Ljava/lang/String;
    new-instance v24, Ljava/lang/StringBuilder;

    #@193
    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    #@196
    const-string/jumbo v25, "Supplicant Response -"

    #@199
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19c
    move-result-object v24

    #@19d
    move-object/from16 v0, v24

    #@19f
    move-object/from16 v1, v18

    #@1a1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a4
    move-result-object v24

    #@1a5
    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1a8
    move-result-object v24

    #@1a9
    move-object/from16 v0, p0

    #@1ab
    move-object/from16 v1, v24

    #@1ad
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@1b0
    .line 9952
    move-object/from16 v0, p0

    #@1b2
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@1b4
    move-object/from16 v24, v0

    #@1b6
    move-object/from16 v0, p1

    #@1b8
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;->networkId:I

    #@1ba
    move/from16 v25, v0

    #@1bc
    move-object/from16 v0, v24

    #@1be
    move/from16 v1, v25

    #@1c0
    move-object/from16 v2, v17

    #@1c2
    move-object/from16 v3, v18

    #@1c4
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wifi/WifiNative;->simAuthResponse(ILjava/lang/String;Ljava/lang/String;)Z

    #@1c7
    .line 9879
    return-void

    #@1c8
    .line 9889
    .end local v18    # "response":Ljava/lang/String;
    .end local v19    # "result":[B
    .end local v21    # "tag":B
    .end local v23    # "tmResponse":Ljava/lang/String;
    .restart local v5    # "authn":[B
    .local v14, "rand":[B
    :cond_2
    const-string/jumbo v24, "id does not match targetWifiConfiguration"

    #@1cb
    move-object/from16 v0, p0

    #@1cd
    move-object/from16 v1, v24

    #@1cf
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@1d2
    .line 9890
    return-void

    #@1d3
    .line 9896
    .end local v14    # "rand":[B
    :catch_0
    move-exception v11

    #@1d4
    .line 9897
    .local v11, "e":Ljava/lang/NumberFormatException;
    const-string/jumbo v24, "malformed challenge"

    #@1d7
    move-object/from16 v0, p0

    #@1d9
    move-object/from16 v1, v24

    #@1db
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@1de
    goto/16 :goto_0

    #@1e0
    .line 9900
    .end local v11    # "e":Ljava/lang/NumberFormatException;
    .restart local v14    # "rand":[B
    :cond_3
    const-string/jumbo v24, "malformed challenge"

    #@1e3
    move-object/from16 v0, p0

    #@1e5
    move-object/from16 v1, v24

    #@1e7
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@1ea
    goto/16 :goto_0

    #@1ec
    .line 9915
    .end local v5    # "authn":[B
    .end local v14    # "rand":[B
    .restart local v8    # "base64Challenge":Ljava/lang/String;
    .restart local v22    # "tm":Landroid/telephony/TelephonyManager;
    .restart local v23    # "tmResponse":Ljava/lang/String;
    :cond_4
    const-string/jumbo v24, "could not get telephony manager"

    #@1ef
    move-object/from16 v0, p0

    #@1f1
    move-object/from16 v1, v24

    #@1f3
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@1f6
    goto/16 :goto_1

    #@1f8
    .line 9934
    .end local v8    # "base64Challenge":Ljava/lang/String;
    .end local v22    # "tm":Landroid/telephony/TelephonyManager;
    .restart local v19    # "result":[B
    .restart local v21    # "tag":B
    :cond_5
    const/16 v24, -0x24

    #@1fa
    move/from16 v0, v21

    #@1fc
    move/from16 v1, v24

    #@1fe
    if-ne v0, v1, :cond_6

    #@200
    .line 9935
    const-string/jumbo v24, "synchronisation failure"

    #@203
    move-object/from16 v0, p0

    #@205
    move-object/from16 v1, v24

    #@207
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@20a
    .line 9936
    const/16 v24, 0x1

    #@20c
    aget-byte v7, v19, v24

    #@20e
    .line 9937
    .local v7, "auts_len":I
    const/16 v24, 0x2

    #@210
    move-object/from16 v0, v19

    #@212
    move/from16 v1, v24

    #@214
    invoke-static {v0, v1, v7}, Lcom/android/server/wifi/WifiStateMachine;->makeHex([BII)Ljava/lang/String;

    #@217
    move-result-object v6

    #@218
    .line 9938
    .local v6, "auts":Ljava/lang/String;
    const-string/jumbo v17, "UMTS-AUTS"

    #@21b
    .line 9939
    const-string/jumbo v24, ":"

    #@21e
    move-object/from16 v0, v20

    #@220
    move-object/from16 v1, v24

    #@222
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@225
    move-result-object v24

    #@226
    move-object/from16 v0, v24

    #@228
    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@22b
    .line 9940
    new-instance v24, Ljava/lang/StringBuilder;

    #@22d
    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    #@230
    const-string/jumbo v25, "auts:"

    #@233
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@236
    move-result-object v24

    #@237
    move-object/from16 v0, v24

    #@239
    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23c
    move-result-object v24

    #@23d
    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@240
    move-result-object v24

    #@241
    move-object/from16 v0, p0

    #@243
    move-object/from16 v1, v24

    #@245
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@248
    goto/16 :goto_2

    #@24a
    .line 9942
    .end local v6    # "auts":Ljava/lang/String;
    .end local v7    # "auts_len":I
    :cond_6
    new-instance v24, Ljava/lang/StringBuilder;

    #@24c
    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    #@24f
    const-string/jumbo v25, "bad response - unknown tag = "

    #@252
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@255
    move-result-object v24

    #@256
    move-object/from16 v0, v24

    #@258
    move/from16 v1, v21

    #@25a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@25d
    move-result-object v24

    #@25e
    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@261
    move-result-object v24

    #@262
    move-object/from16 v0, p0

    #@264
    move-object/from16 v1, v24

    #@266
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@269
    .line 9943
    return-void

    #@26a
    .line 9946
    .end local v19    # "result":[B
    .end local v21    # "tag":B
    :cond_7
    new-instance v24, Ljava/lang/StringBuilder;

    #@26c
    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    #@26f
    const-string/jumbo v25, "bad response - "

    #@272
    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@275
    move-result-object v24

    #@276
    move-object/from16 v0, v24

    #@278
    move-object/from16 v1, v23

    #@27a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@27d
    move-result-object v24

    #@27e
    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@281
    move-result-object v24

    #@282
    move-object/from16 v0, p0

    #@284
    move-object/from16 v1, v24

    #@286
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@289
    .line 9947
    return-void
.end method

.method handleGsmAuthRequest(Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;)V
    .locals 23
    .param p1, "requestData"    # Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;

    #@0
    .prologue
    .line 9811
    move-object/from16 v0, p0

    #@2
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

    #@4
    move-object/from16 v18, v0

    #@6
    if-eqz v18, :cond_0

    #@8
    .line 9812
    move-object/from16 v0, p0

    #@a
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->targetWificonfiguration:Landroid/net/wifi/WifiConfiguration;

    #@c
    move-object/from16 v18, v0

    #@e
    move-object/from16 v0, v18

    #@10
    iget v0, v0, Landroid/net/wifi/WifiConfiguration;->networkId:I

    #@12
    move/from16 v18, v0

    #@14
    move-object/from16 v0, p1

    #@16
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;->networkId:I

    #@18
    move/from16 v19, v0

    #@1a
    move/from16 v0, v18

    #@1c
    move/from16 v1, v19

    #@1e
    if-ne v0, v1, :cond_2

    #@20
    .line 9813
    :cond_0
    const-string/jumbo v18, "id matches targetWifiConfiguration"

    #@23
    move-object/from16 v0, p0

    #@25
    move-object/from16 v1, v18

    #@27
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@2a
    .line 9820
    move-object/from16 v0, p0

    #@2c
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@2e
    move-object/from16 v18, v0

    #@30
    const-string/jumbo v19, "phone"

    #@33
    invoke-virtual/range {v18 .. v19}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@36
    move-result-object v16

    #@37
    .line 9819
    check-cast v16, Landroid/telephony/TelephonyManager;

    #@39
    .line 9822
    .local v16, "tm":Landroid/telephony/TelephonyManager;
    if-eqz v16, :cond_7

    #@3b
    .line 9823
    new-instance v13, Ljava/lang/StringBuilder;

    #@3d
    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    #@40
    .line 9824
    .local v13, "sb":Ljava/lang/StringBuilder;
    move-object/from16 v0, p1

    #@42
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;->data:[Ljava/lang/String;

    #@44
    move-object/from16 v19, v0

    #@46
    const/16 v18, 0x0

    #@48
    move-object/from16 v0, v19

    #@4a
    array-length v0, v0

    #@4b
    move/from16 v20, v0

    #@4d
    :goto_0
    move/from16 v0, v18

    #@4f
    move/from16 v1, v20

    #@51
    if-ge v0, v1, :cond_6

    #@53
    aget-object v5, v19, v18

    #@55
    .line 9826
    .local v5, "challenge":Ljava/lang/String;
    if-eqz v5, :cond_1

    #@57
    invoke-virtual {v5}, Ljava/lang/String;->isEmpty()Z

    #@5a
    move-result v21

    #@5b
    if-eqz v21, :cond_3

    #@5d
    .line 9824
    :cond_1
    :goto_1
    add-int/lit8 v18, v18, 0x1

    #@5f
    goto :goto_0

    #@60
    .line 9815
    .end local v5    # "challenge":Ljava/lang/String;
    .end local v13    # "sb":Ljava/lang/StringBuilder;
    .end local v16    # "tm":Landroid/telephony/TelephonyManager;
    :cond_2
    const-string/jumbo v18, "id does not match targetWifiConfiguration"

    #@63
    move-object/from16 v0, p0

    #@65
    move-object/from16 v1, v18

    #@67
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@6a
    .line 9816
    return-void

    #@6b
    .line 9828
    .restart local v5    # "challenge":Ljava/lang/String;
    .restart local v13    # "sb":Ljava/lang/StringBuilder;
    .restart local v16    # "tm":Landroid/telephony/TelephonyManager;
    :cond_3
    new-instance v21, Ljava/lang/StringBuilder;

    #@6d
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@70
    const-string/jumbo v22, "RAND = "

    #@73
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@76
    move-result-object v21

    #@77
    move-object/from16 v0, v21

    #@79
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7c
    move-result-object v21

    #@7d
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@80
    move-result-object v21

    #@81
    move-object/from16 v0, p0

    #@83
    move-object/from16 v1, v21

    #@85
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@88
    .line 9830
    const/4 v10, 0x0

    #@89
    .line 9832
    .local v10, "rand":[B
    :try_start_0
    move-object/from16 v0, p0

    #@8b
    invoke-direct {v0, v5}, Lcom/android/server/wifi/WifiStateMachine;->parseHex(Ljava/lang/String;)[B
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@8e
    move-result-object v10

    #@8f
    .line 9839
    .local v10, "rand":[B
    const/16 v21, 0x2

    #@91
    .line 9838
    move/from16 v0, v21

    #@93
    invoke-static {v10, v0}, Landroid/util/Base64;->encodeToString([BI)Ljava/lang/String;

    #@96
    move-result-object v4

    #@97
    .line 9844
    .local v4, "base64Challenge":Ljava/lang/String;
    const/4 v3, 0x2

    #@98
    .line 9845
    .local v3, "appType":I
    move-object/from16 v0, v16

    #@9a
    invoke-virtual {v0, v3, v4}, Landroid/telephony/TelephonyManager;->getIccSimChallengeResponse(ILjava/lang/String;)Ljava/lang/String;

    #@9d
    move-result-object v17

    #@9e
    .line 9846
    .local v17, "tmResponse":Ljava/lang/String;
    if-nez v17, :cond_4

    #@a0
    .line 9850
    const/4 v3, 0x1

    #@a1
    .line 9851
    move-object/from16 v0, v16

    #@a3
    invoke-virtual {v0, v3, v4}, Landroid/telephony/TelephonyManager;->getIccSimChallengeResponse(ILjava/lang/String;)Ljava/lang/String;

    #@a6
    move-result-object v17

    #@a7
    .line 9853
    :cond_4
    new-instance v21, Ljava/lang/StringBuilder;

    #@a9
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@ac
    const-string/jumbo v22, "Raw Response - "

    #@af
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b2
    move-result-object v21

    #@b3
    move-object/from16 v0, v21

    #@b5
    move-object/from16 v1, v17

    #@b7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ba
    move-result-object v21

    #@bb
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@be
    move-result-object v21

    #@bf
    move-object/from16 v0, p0

    #@c1
    move-object/from16 v1, v21

    #@c3
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@c6
    .line 9855
    if-eqz v17, :cond_5

    #@c8
    invoke-virtual/range {v17 .. v17}, Ljava/lang/String;->length()I

    #@cb
    move-result v21

    #@cc
    const/16 v22, 0x4

    #@ce
    move/from16 v0, v21

    #@d0
    move/from16 v1, v22

    #@d2
    if-le v0, v1, :cond_5

    #@d4
    .line 9857
    const/16 v21, 0x0

    #@d6
    .line 9856
    move-object/from16 v0, v17

    #@d8
    move/from16 v1, v21

    #@da
    invoke-static {v0, v1}, Landroid/util/Base64;->decode(Ljava/lang/String;I)[B

    #@dd
    move-result-object v12

    #@de
    .line 9858
    .local v12, "result":[B
    new-instance v21, Ljava/lang/StringBuilder;

    #@e0
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@e3
    const-string/jumbo v22, "Hex Response -"

    #@e6
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e9
    move-result-object v21

    #@ea
    invoke-static {v12}, Lcom/android/server/wifi/WifiStateMachine;->makeHex([B)Ljava/lang/String;

    #@ed
    move-result-object v22

    #@ee
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f1
    move-result-object v21

    #@f2
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@f5
    move-result-object v21

    #@f6
    move-object/from16 v0, p0

    #@f8
    move-object/from16 v1, v21

    #@fa
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@fd
    .line 9859
    const/16 v21, 0x0

    #@ff
    aget-byte v15, v12, v21

    #@101
    .line 9860
    .local v15, "sres_len":I
    const/16 v21, 0x1

    #@103
    move/from16 v0, v21

    #@105
    invoke-static {v12, v0, v15}, Lcom/android/server/wifi/WifiStateMachine;->makeHex([BII)Ljava/lang/String;

    #@108
    move-result-object v14

    #@109
    .line 9861
    .local v14, "sres":Ljava/lang/String;
    add-int/lit8 v9, v15, 0x1

    #@10b
    .line 9862
    .local v9, "kc_offset":I
    aget-byte v8, v12, v9

    #@10d
    .line 9863
    .local v8, "kc_len":I
    add-int/lit8 v21, v9, 0x1

    #@10f
    move/from16 v0, v21

    #@111
    invoke-static {v12, v0, v8}, Lcom/android/server/wifi/WifiStateMachine;->makeHex([BII)Ljava/lang/String;

    #@114
    move-result-object v7

    #@115
    .line 9864
    .local v7, "kc":Ljava/lang/String;
    const-string/jumbo v21, ":"

    #@118
    move-object/from16 v0, v21

    #@11a
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11d
    move-result-object v21

    #@11e
    move-object/from16 v0, v21

    #@120
    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@123
    move-result-object v21

    #@124
    const-string/jumbo v22, ":"

    #@127
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12a
    move-result-object v21

    #@12b
    move-object/from16 v0, v21

    #@12d
    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@130
    .line 9865
    new-instance v21, Ljava/lang/StringBuilder;

    #@132
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@135
    const-string/jumbo v22, "kc:"

    #@138
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13b
    move-result-object v21

    #@13c
    move-object/from16 v0, v21

    #@13e
    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@141
    move-result-object v21

    #@142
    const-string/jumbo v22, " sres:"

    #@145
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@148
    move-result-object v21

    #@149
    move-object/from16 v0, v21

    #@14b
    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@14e
    move-result-object v21

    #@14f
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@152
    move-result-object v21

    #@153
    move-object/from16 v0, p0

    #@155
    move-object/from16 v1, v21

    #@157
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@15a
    goto/16 :goto_1

    #@15c
    .line 9833
    .end local v3    # "appType":I
    .end local v4    # "base64Challenge":Ljava/lang/String;
    .end local v7    # "kc":Ljava/lang/String;
    .end local v8    # "kc_len":I
    .end local v9    # "kc_offset":I
    .end local v12    # "result":[B
    .end local v14    # "sres":Ljava/lang/String;
    .end local v15    # "sres_len":I
    .end local v17    # "tmResponse":Ljava/lang/String;
    .local v10, "rand":[B
    :catch_0
    move-exception v6

    #@15d
    .line 9834
    .local v6, "e":Ljava/lang/NumberFormatException;
    const-string/jumbo v21, "malformed challenge"

    #@160
    move-object/from16 v0, p0

    #@162
    move-object/from16 v1, v21

    #@164
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@167
    goto/16 :goto_1

    #@169
    .line 9867
    .end local v6    # "e":Ljava/lang/NumberFormatException;
    .restart local v3    # "appType":I
    .restart local v4    # "base64Challenge":Ljava/lang/String;
    .local v10, "rand":[B
    .restart local v17    # "tmResponse":Ljava/lang/String;
    :cond_5
    new-instance v21, Ljava/lang/StringBuilder;

    #@16b
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@16e
    const-string/jumbo v22, "bad response - "

    #@171
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@174
    move-result-object v21

    #@175
    move-object/from16 v0, v21

    #@177
    move-object/from16 v1, v17

    #@179
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17c
    move-result-object v21

    #@17d
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@180
    move-result-object v21

    #@181
    move-object/from16 v0, p0

    #@183
    move-object/from16 v1, v21

    #@185
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@188
    goto/16 :goto_1

    #@18a
    .line 9871
    .end local v3    # "appType":I
    .end local v4    # "base64Challenge":Ljava/lang/String;
    .end local v5    # "challenge":Ljava/lang/String;
    .end local v10    # "rand":[B
    .end local v17    # "tmResponse":Ljava/lang/String;
    :cond_6
    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@18d
    move-result-object v11

    #@18e
    .line 9872
    .local v11, "response":Ljava/lang/String;
    new-instance v18, Ljava/lang/StringBuilder;

    #@190
    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    #@193
    const-string/jumbo v19, "Supplicant Response -"

    #@196
    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@199
    move-result-object v18

    #@19a
    move-object/from16 v0, v18

    #@19c
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19f
    move-result-object v18

    #@1a0
    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1a3
    move-result-object v18

    #@1a4
    move-object/from16 v0, p0

    #@1a6
    move-object/from16 v1, v18

    #@1a8
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logv(Ljava/lang/String;)V

    #@1ab
    .line 9873
    move-object/from16 v0, p0

    #@1ad
    iget-object v0, v0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@1af
    move-object/from16 v18, v0

    #@1b1
    move-object/from16 v0, p1

    #@1b3
    iget v0, v0, Lcom/android/server/wifi/WifiStateMachine$SimAuthRequestData;->networkId:I

    #@1b5
    move/from16 v19, v0

    #@1b7
    const-string/jumbo v20, "GSM-AUTH"

    #@1ba
    move-object/from16 v0, v18

    #@1bc
    move/from16 v1, v19

    #@1be
    move-object/from16 v2, v20

    #@1c0
    invoke-virtual {v0, v1, v2, v11}, Lcom/android/server/wifi/WifiNative;->simAuthResponse(ILjava/lang/String;Ljava/lang/String;)Z

    #@1c3
    .line 9810
    .end local v11    # "response":Ljava/lang/String;
    .end local v13    # "sb":Ljava/lang/StringBuilder;
    :goto_2
    return-void

    #@1c4
    .line 9875
    :cond_7
    const-string/jumbo v18, "could not get telephony manager"

    #@1c7
    move-object/from16 v0, p0

    #@1c9
    move-object/from16 v1, v18

    #@1cb
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->loge(Ljava/lang/String;)V

    #@1ce
    goto :goto_2
.end method

.method handlePostDhcpSetup()V
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    const/4 v1, 0x1

    #@2
    .line 5007
    invoke-direct {p0, v1, v1}, Lcom/android/server/wifi/WifiStateMachine;->setSuspendOptimizationsNative(IZ)V

    #@5
    .line 5008
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@7
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiNative;->setPowerSave(Z)V

    #@a
    .line 5010
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiP2pChannel:Lcom/android/internal/util/AsyncChannel;

    #@c
    const v1, 0x2300f

    #@f
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/util/AsyncChannel;->sendMessage(II)V

    #@12
    .line 5013
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@14
    .line 5014
    const/4 v1, 0x2

    #@15
    .line 5013
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiNative;->setBluetoothCoexistenceMode(I)Z

    #@18
    .line 5016
    iput-boolean v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpActive:Z

    #@1a
    .line 5005
    return-void
.end method

.method handlePreDhcpSetup()V
    .locals 4

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    const/4 v2, 0x1

    #@2
    .line 4924
    iput-boolean v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpActive:Z

    #@4
    .line 4925
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mBluetoothConnectionActive:Z

    #@6
    if-nez v1, :cond_0

    #@8
    .line 4943
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@a
    invoke-virtual {v1, v2}, Lcom/android/server/wifi/WifiNative;->setBluetoothCoexistenceMode(I)Z

    #@d
    .line 4951
    :cond_0
    invoke-direct {p0, v2, v3}, Lcom/android/server/wifi/WifiStateMachine;->setSuspendOptimizationsNative(IZ)V

    #@10
    .line 4952
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@12
    invoke-virtual {v1, v3}, Lcom/android/server/wifi/WifiNative;->setPowerSave(Z)V

    #@15
    .line 4955
    invoke-virtual {p0, v3}, Lcom/android/server/wifi/WifiStateMachine;->getWifiLinkLayerStats(Z)Landroid/net/wifi/WifiLinkLayerStats;

    #@18
    .line 4958
    new-instance v0, Landroid/os/Message;

    #@1a
    invoke-direct {v0}, Landroid/os/Message;-><init>()V

    #@1d
    .line 4959
    .local v0, "msg":Landroid/os/Message;
    const v1, 0x2300f

    #@20
    iput v1, v0, Landroid/os/Message;->what:I

    #@22
    .line 4960
    iput v2, v0, Landroid/os/Message;->arg1:I

    #@24
    .line 4961
    const v1, 0x30007

    #@27
    iput v1, v0, Landroid/os/Message;->arg2:I

    #@29
    .line 4962
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@2b
    iput-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@2d
    .line 4963
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiP2pChannel:Lcom/android/internal/util/AsyncChannel;

    #@2f
    invoke-virtual {v1, v0}, Lcom/android/internal/util/AsyncChannel;->sendMessage(Landroid/os/Message;)V

    #@32
    .line 4923
    return-void
.end method

.method isRoaming()Z
    .locals 3

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    .line 431
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@3
    if-eq v1, v0, :cond_0

    #@5
    .line 432
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mAutoRoaming:I

    #@7
    const/4 v2, 0x2

    #@8
    if-ne v1, v2, :cond_1

    #@a
    .line 431
    :cond_0
    :goto_0
    return v0

    #@b
    .line 432
    :cond_1
    const/4 v0, 0x0

    #@c
    goto :goto_0
.end method

.method protected log(Ljava/lang/String;)V
    .locals 1
    .param p1, "s"    # Ljava/lang/String;

    #@0
    .prologue
    .line 185
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getName()Ljava/lang/String;

    #@3
    move-result-object v0

    #@4
    invoke-static {v0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@7
    .line 184
    return-void
.end method

.method protected logd(Ljava/lang/String;)V
    .locals 1
    .param p1, "s"    # Ljava/lang/String;

    #@0
    .prologue
    .line 182
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getName()Ljava/lang/String;

    #@3
    move-result-object v0

    #@4
    invoke-static {v0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@7
    .line 181
    return-void
.end method

.method protected loge(Ljava/lang/String;)V
    .locals 1
    .param p1, "s"    # Ljava/lang/String;

    #@0
    .prologue
    .line 179
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getName()Ljava/lang/String;

    #@3
    move-result-object v0

    #@4
    invoke-static {v0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@7
    .line 178
    return-void
.end method

.method maybeRegisterNetworkFactory()V
    .locals 6

    #@0
    .prologue
    .line 5377
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;

    #@2
    if-nez v0, :cond_0

    #@4
    .line 5378
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->checkAndSetConnectivityInstance()V

    #@7
    .line 5379
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mCm:Landroid/net/ConnectivityManager;

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5380
    new-instance v0, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;

    #@d
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getHandler()Landroid/os/Handler;

    #@10
    move-result-object v1

    #@11
    invoke-virtual {v1}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    #@14
    move-result-object v2

    #@15
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@17
    .line 5381
    const-string/jumbo v4, "WIFI"

    #@1a
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@1c
    move-object v1, p0

    #@1d
    .line 5380
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;-><init>(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Looper;Landroid/content/Context;Ljava/lang/String;Landroid/net/NetworkCapabilities;)V

    #@20
    iput-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;

    #@22
    .line 5382
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;

    #@24
    const/16 v1, 0x3c

    #@26
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;->setScoreFilter(I)V

    #@29
    .line 5383
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;

    #@2b
    invoke-virtual {v0}, Lcom/android/server/wifi/WifiStateMachine$WifiNetworkFactory;->register()V

    #@2e
    .line 5387
    new-instance v0, Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;

    #@30
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getHandler()Landroid/os/Handler;

    #@33
    move-result-object v1

    #@34
    invoke-virtual {v1}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    #@37
    move-result-object v2

    #@38
    .line 5388
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@3a
    const-string/jumbo v4, "WIFI_UT"

    #@3d
    iget-object v5, p0, Lcom/android/server/wifi/WifiStateMachine;->mNetworkCapabilitiesFilter:Landroid/net/NetworkCapabilities;

    #@3f
    move-object v1, p0

    #@40
    .line 5387
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;-><init>(Lcom/android/server/wifi/WifiStateMachine;Landroid/os/Looper;Landroid/content/Context;Ljava/lang/String;Landroid/net/NetworkCapabilities;)V

    #@43
    iput-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mUntrustedNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;

    #@45
    .line 5389
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mUntrustedNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;

    #@47
    const v1, 0x7fffffff

    #@4a
    invoke-virtual {v0, v1}, Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;->setScoreFilter(I)V

    #@4d
    .line 5390
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mUntrustedNetworkFactory:Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;

    #@4f
    invoke-virtual {v0}, Lcom/android/server/wifi/WifiStateMachine$UntrustedWifiNetworkFactory;->register()V

    #@52
    .line 5376
    :cond_0
    return-void
.end method

.method noteWifiDisabledWhileAssociated()V
    .locals 8

    #@0
    .prologue
    .line 6928
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@2
    invoke-virtual {v6}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@5
    move-result v5

    #@6
    .line 6929
    .local v5, "rssi":I
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentWifiConfiguration()Landroid/net/wifi/WifiConfiguration;

    #@9
    move-result-object v0

    #@a
    .line 6930
    .local v0, "config":Landroid/net/wifi/WifiConfiguration;
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getCurrentState()Lcom/android/internal/util/IState;

    #@d
    move-result-object v6

    #@e
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedState:Lcom/android/internal/util/State;

    #@10
    if-ne v6, v7, :cond_0

    #@12
    .line 6931
    const/16 v6, -0x7f

    #@14
    if-eq v5, v6, :cond_0

    #@16
    .line 6932
    if-eqz v0, :cond_0

    #@18
    .line 6933
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@1a
    invoke-virtual {v6}, Landroid/net/wifi/WifiInfo;->is24GHz()Z

    #@1d
    move-result v1

    #@1e
    .line 6934
    .local v1, "is24GHz":Z
    if-eqz v1, :cond_1

    #@20
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@22
    iget-object v6, v6, Lcom/android/server/wifi/WifiConfigStore;->thresholdBadRssi24:Ljava/util/concurrent/atomic/AtomicInteger;

    #@24
    invoke-virtual {v6}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@27
    move-result v6

    #@28
    if-ge v5, v6, :cond_1

    #@2a
    const/4 v2, 0x1

    #@2b
    .line 6936
    .local v2, "isBadRSSI":Z
    :goto_0
    if-eqz v1, :cond_3

    #@2d
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2f
    iget-object v6, v6, Lcom/android/server/wifi/WifiConfigStore;->thresholdLowRssi24:Ljava/util/concurrent/atomic/AtomicInteger;

    #@31
    invoke-virtual {v6}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@34
    move-result v6

    #@35
    if-ge v5, v6, :cond_3

    #@37
    const/4 v4, 0x1

    #@38
    .line 6938
    .local v4, "isLowRSSI":Z
    :goto_1
    if-eqz v1, :cond_5

    #@3a
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@3c
    iget-object v6, v6, Lcom/android/server/wifi/WifiConfigStore;->thresholdGoodRssi24:Ljava/util/concurrent/atomic/AtomicInteger;

    #@3e
    invoke-virtual {v6}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@41
    move-result v6

    #@42
    if-lt v5, v6, :cond_5

    #@44
    const/4 v3, 0x1

    #@45
    .line 6940
    .local v3, "isHighRSSI":Z
    :goto_2
    if-eqz v2, :cond_7

    #@47
    .line 6942
    iget v6, v0, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@49
    add-int/lit8 v6, v6, 0x1

    #@4b
    iput v6, v0, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableLowRSSI:I

    #@4d
    .line 6926
    .end local v1    # "is24GHz":Z
    .end local v2    # "isBadRSSI":Z
    .end local v3    # "isHighRSSI":Z
    .end local v4    # "isLowRSSI":Z
    :cond_0
    :goto_3
    return-void

    #@4e
    .line 6935
    .restart local v1    # "is24GHz":Z
    :cond_1
    if-nez v1, :cond_2

    #@50
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@52
    iget-object v6, v6, Lcom/android/server/wifi/WifiConfigStore;->thresholdBadRssi5:Ljava/util/concurrent/atomic/AtomicInteger;

    #@54
    invoke-virtual {v6}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@57
    move-result v6

    #@58
    if-ge v5, v6, :cond_2

    #@5a
    const/4 v2, 0x1

    #@5b
    .restart local v2    # "isBadRSSI":Z
    goto :goto_0

    #@5c
    .end local v2    # "isBadRSSI":Z
    :cond_2
    const/4 v2, 0x0

    #@5d
    .restart local v2    # "isBadRSSI":Z
    goto :goto_0

    #@5e
    .line 6937
    :cond_3
    if-nez v1, :cond_4

    #@60
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@62
    invoke-virtual {v6}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@65
    move-result v6

    #@66
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@68
    iget-object v7, v7, Lcom/android/server/wifi/WifiConfigStore;->thresholdLowRssi5:Ljava/util/concurrent/atomic/AtomicInteger;

    #@6a
    invoke-virtual {v7}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@6d
    move-result v7

    #@6e
    if-ge v6, v7, :cond_4

    #@70
    const/4 v4, 0x1

    #@71
    .restart local v4    # "isLowRSSI":Z
    goto :goto_1

    #@72
    .end local v4    # "isLowRSSI":Z
    :cond_4
    const/4 v4, 0x0

    #@73
    .restart local v4    # "isLowRSSI":Z
    goto :goto_1

    #@74
    .line 6939
    :cond_5
    if-nez v1, :cond_6

    #@76
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@78
    invoke-virtual {v6}, Landroid/net/wifi/WifiInfo;->getRssi()I

    #@7b
    move-result v6

    #@7c
    iget-object v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@7e
    iget-object v7, v7, Lcom/android/server/wifi/WifiConfigStore;->thresholdGoodRssi5:Ljava/util/concurrent/atomic/AtomicInteger;

    #@80
    invoke-virtual {v7}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@83
    move-result v7

    #@84
    if-lt v6, v7, :cond_6

    #@86
    const/4 v3, 0x1

    #@87
    .restart local v3    # "isHighRSSI":Z
    goto :goto_2

    #@88
    .end local v3    # "isHighRSSI":Z
    :cond_6
    const/4 v3, 0x0

    #@89
    .restart local v3    # "isHighRSSI":Z
    goto :goto_2

    #@8a
    .line 6943
    :cond_7
    if-eqz v4, :cond_8

    #@8c
    .line 6945
    iget v6, v0, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableBadRSSI:I

    #@8e
    add-int/lit8 v6, v6, 0x1

    #@90
    iput v6, v0, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableBadRSSI:I

    #@92
    goto :goto_3

    #@93
    .line 6946
    :cond_8
    if-nez v3, :cond_0

    #@95
    .line 6948
    iget v6, v0, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@97
    add-int/lit8 v6, v6, 0x1

    #@99
    iput v6, v0, Landroid/net/wifi/WifiConfiguration;->numUserTriggeredWifiDisableNotHighRSSI:I

    #@9b
    goto :goto_3
.end method

.method public onPnoNetworkFound([Landroid/net/wifi/ScanResult;)V
    .locals 4
    .param p1, "results"    # [Landroid/net/wifi/ScanResult;

    #@0
    .prologue
    .line 237
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@2
    if-eqz v1, :cond_0

    #@4
    .line 238
    const-string/jumbo v1, "WifiStateMachine"

    #@7
    new-instance v2, Ljava/lang/StringBuilder;

    #@9
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@c
    const-string/jumbo v3, "onPnoNetworkFound event received num = "

    #@f
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12
    move-result-object v2

    #@13
    array-length v3, p1

    #@14
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@17
    move-result-object v2

    #@18
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1b
    move-result-object v2

    #@1c
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@1f
    .line 239
    const/4 v0, 0x0

    #@20
    .local v0, "i":I
    :goto_0
    array-length v1, p1

    #@21
    if-ge v0, v1, :cond_0

    #@23
    .line 240
    const-string/jumbo v1, "WifiStateMachine"

    #@26
    aget-object v2, p1, v0

    #@28
    invoke-virtual {v2}, Landroid/net/wifi/ScanResult;->toString()Ljava/lang/String;

    #@2b
    move-result-object v2

    #@2c
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@2f
    .line 239
    add-int/lit8 v0, v0, 0x1

    #@31
    goto :goto_0

    #@32
    .line 243
    .end local v0    # "i":I
    :cond_0
    array-length v1, p1

    #@33
    const v2, 0x2009c

    #@36
    const/4 v3, 0x0

    #@37
    invoke-virtual {p0, v2, v1, v3, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@3a
    .line 236
    return-void
.end method

.method printTime()Ljava/lang/String;
    .locals 4

    #@0
    .prologue
    .line 2556
    new-instance v0, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    .line 2557
    .local v0, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v1, " rt="

    #@8
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b
    move-result-object v1

    #@c
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@13
    .line 2558
    const-string/jumbo v1, "/"

    #@16
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v1

    #@1a
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@1d
    move-result-wide v2

    #@1e
    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@21
    .line 2559
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@24
    move-result-object v1

    #@25
    return-object v1
.end method

.method public processPnoNetworkFound([Landroid/net/wifi/ScanResult;)V
    .locals 11
    .param p1, "results"    # [Landroid/net/wifi/ScanResult;

    #@0
    .prologue
    .line 247
    new-instance v10, Landroid/net/wifi/ScanSettings;

    #@2
    invoke-direct {v10}, Landroid/net/wifi/ScanSettings;-><init>()V

    #@5
    .line 248
    .local v10, "settings":Landroid/net/wifi/ScanSettings;
    new-instance v1, Ljava/util/ArrayList;

    #@7
    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    #@a
    iput-object v1, v10, Landroid/net/wifi/ScanSettings;->channelSet:Ljava/util/Collection;

    #@c
    .line 249
    new-instance v9, Ljava/lang/StringBuilder;

    #@e
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@11
    .line 250
    .local v9, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v1, ""

    #@14
    invoke-virtual {v9, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17
    .line 251
    const/4 v8, 0x0

    #@18
    .local v8, "i":I
    :goto_0
    array-length v1, p1

    #@19
    if-ge v8, v1, :cond_0

    #@1b
    .line 252
    new-instance v0, Landroid/net/wifi/WifiChannel;

    #@1d
    invoke-direct {v0}, Landroid/net/wifi/WifiChannel;-><init>()V

    #@20
    .line 253
    .local v0, "channel":Landroid/net/wifi/WifiChannel;
    aget-object v1, p1, v8

    #@22
    iget v1, v1, Landroid/net/wifi/ScanResult;->frequency:I

    #@24
    iput v1, v0, Landroid/net/wifi/WifiChannel;->freqMHz:I

    #@26
    .line 254
    iget-object v1, v10, Landroid/net/wifi/ScanSettings;->channelSet:Ljava/util/Collection;

    #@28
    invoke-interface {v1, v0}, Ljava/util/Collection;->add(Ljava/lang/Object;)Z

    #@2b
    .line 255
    aget-object v1, p1, v8

    #@2d
    iget-object v1, v1, Landroid/net/wifi/ScanResult;->SSID:Ljava/lang/String;

    #@2f
    invoke-virtual {v9, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v1

    #@33
    const-string/jumbo v2, " "

    #@36
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@39
    .line 251
    add-int/lit8 v8, v8, 0x1

    #@3b
    goto :goto_0

    #@3c
    .line 258
    .end local v0    # "channel":Landroid/net/wifi/WifiChannel;
    :cond_0
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->stopPnoOffload()V

    #@3f
    .line 260
    const-string/jumbo v1, "WifiStateMachine"

    #@42
    new-instance v2, Ljava/lang/StringBuilder;

    #@44
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@47
    const-string/jumbo v4, "processPnoNetworkFound starting scan cnt="

    #@4a
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4d
    move-result-object v2

    #@4e
    sget v4, Lcom/android/server/wifi/WifiStateMachine;->mPnoResultFound:I

    #@50
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@53
    move-result-object v2

    #@54
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@57
    move-result-object v2

    #@58
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@5b
    .line 261
    sget v1, Lcom/android/server/wifi/WifiStateMachine;->mPnoResultFound:I

    #@5d
    const/4 v2, -0x7

    #@5e
    const/4 v4, 0x0

    #@5f
    invoke-virtual {p0, v2, v1, v10, v4}, Lcom/android/server/wifi/WifiStateMachine;->startScan(IILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V

    #@62
    .line 262
    sget v1, Lcom/android/server/wifi/WifiStateMachine;->mPnoResultFound:I

    #@64
    add-int/lit8 v1, v1, 0x1

    #@66
    sput v1, Lcom/android/server/wifi/WifiStateMachine;->mPnoResultFound:I

    #@68
    .line 264
    const/16 v3, 0x7530

    #@6a
    .line 267
    .local v3, "delay":I
    sget v4, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@6c
    new-instance v1, Ljava/lang/StringBuilder;

    #@6e
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@71
    const-string/jumbo v2, " processPnoNetworkFound "

    #@74
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@77
    move-result-object v1

    #@78
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@7b
    move-result-object v2

    #@7c
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v1

    #@80
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@83
    move-result-object v5

    #@84
    .line 268
    const-wide/16 v6, 0x7530

    #@86
    .line 266
    const v2, 0x2009a

    #@89
    move-object v1, p0

    #@8a
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/wifi/WifiStateMachine;->sendMessageDelayed(IIILjava/lang/Object;J)V

    #@8d
    .line 269
    sget v1, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@8f
    add-int/lit8 v1, v1, 0x1

    #@91
    sput v1, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@93
    .line 246
    return-void
.end method

.method public reassociateCommand()V
    .locals 1

    #@0
    .prologue
    .line 2122
    const v0, 0x2004b

    #@3
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@6
    .line 2121
    return-void
.end method

.method public reconnectCommand()V
    .locals 1

    #@0
    .prologue
    .line 2115
    const v0, 0x2004a

    #@3
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@6
    .line 2114
    return-void
.end method

.method recordUidIfAuthorized(Landroid/net/wifi/WifiConfiguration;IZ)Z
    .locals 1
    .param p1, "config"    # Landroid/net/wifi/WifiConfiguration;
    .param p2, "uid"    # I
    .param p3, "onlyAnnotate"    # Z

    #@0
    .prologue
    .line 468
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/WifiConfigStore;->isNetworkConfigured(Landroid/net/wifi/WifiConfiguration;)Z

    #@5
    move-result v0

    #@6
    if-nez v0, :cond_1

    #@8
    .line 469
    iput p2, p1, Landroid/net/wifi/WifiConfiguration;->creatorUid:I

    #@a
    .line 470
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@c
    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    #@f
    move-result-object v0

    #@10
    invoke-virtual {v0, p2}, Landroid/content/pm/PackageManager;->getNameForUid(I)Ljava/lang/String;

    #@13
    move-result-object v0

    #@14
    iput-object v0, p1, Landroid/net/wifi/WifiConfiguration;->creatorName:Ljava/lang/String;

    #@16
    .line 475
    :cond_0
    iput p2, p1, Landroid/net/wifi/WifiConfiguration;->lastUpdateUid:I

    #@18
    .line 476
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@1a
    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    #@1d
    move-result-object v0

    #@1e
    invoke-virtual {v0, p2}, Landroid/content/pm/PackageManager;->getNameForUid(I)Ljava/lang/String;

    #@21
    move-result-object v0

    #@22
    iput-object v0, p1, Landroid/net/wifi/WifiConfiguration;->lastUpdateName:Ljava/lang/String;

    #@24
    .line 478
    const/4 v0, 0x1

    #@25
    return v0

    #@26
    .line 471
    :cond_1
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@28
    invoke-virtual {v0, p2, p1, p3}, Lcom/android/server/wifi/WifiConfigStore;->canModifyNetwork(ILandroid/net/wifi/WifiConfiguration;Z)Z

    #@2b
    move-result v0

    #@2c
    if-nez v0, :cond_0

    #@2e
    .line 472
    const/4 v0, 0x0

    #@2f
    return v0
.end method

.method registerConnected()V
    .locals 7

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 6892
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@3
    const/4 v4, -0x1

    #@4
    if-eq v1, v4, :cond_1

    #@6
    .line 6893
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@9
    move-result-wide v2

    #@a
    .line 6896
    .local v2, "now_ms":J
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@c
    iget v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@e
    invoke-virtual {v1, v4}, Lcom/android/server/wifi/WifiConfigStore;->getWifiConfiguration(I)Landroid/net/wifi/WifiConfiguration;

    #@11
    move-result-object v0

    #@12
    .line 6897
    .local v0, "config":Landroid/net/wifi/WifiConfiguration;
    if-eqz v0, :cond_0

    #@14
    .line 6898
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@17
    move-result-wide v4

    #@18
    iput-wide v4, v0, Landroid/net/wifi/WifiConfiguration;->lastConnected:J

    #@1a
    .line 6899
    iput-boolean v6, v0, Landroid/net/wifi/WifiConfiguration;->autoJoinBailedDueToLowRssi:Z

    #@1c
    .line 6900
    invoke-virtual {v0, v6}, Landroid/net/wifi/WifiConfiguration;->setAutoJoinStatus(I)V

    #@1f
    .line 6901
    iput v6, v0, Landroid/net/wifi/WifiConfiguration;->numConnectionFailures:I

    #@21
    .line 6902
    iput v6, v0, Landroid/net/wifi/WifiConfiguration;->numIpConfigFailures:I

    #@23
    .line 6903
    iput v6, v0, Landroid/net/wifi/WifiConfiguration;->numAuthFailures:I

    #@25
    .line 6904
    iget v1, v0, Landroid/net/wifi/WifiConfiguration;->numAssociation:I

    #@27
    add-int/lit8 v1, v1, 0x1

    #@29
    iput v1, v0, Landroid/net/wifi/WifiConfiguration;->numAssociation:I

    #@2b
    .line 6906
    :cond_0
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mBadLinkspeedcount:I

    #@2d
    .line 6891
    .end local v0    # "config":Landroid/net/wifi/WifiConfiguration;
    .end local v2    # "now_ms":J
    :cond_1
    return-void
.end method

.method registerDisconnected()V
    .locals 6

    #@0
    .prologue
    .line 6911
    iget v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@2
    const/4 v4, -0x1

    #@3
    if-eq v1, v4, :cond_0

    #@5
    .line 6912
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@8
    move-result-wide v2

    #@9
    .line 6915
    .local v2, "now_ms":J
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@b
    iget v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@d
    invoke-virtual {v1, v4}, Lcom/android/server/wifi/WifiConfigStore;->getWifiConfiguration(I)Landroid/net/wifi/WifiConfiguration;

    #@10
    move-result-object v0

    #@11
    .line 6916
    .local v0, "config":Landroid/net/wifi/WifiConfiguration;
    if-eqz v0, :cond_0

    #@13
    .line 6917
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@16
    move-result-wide v4

    #@17
    iput-wide v4, v0, Landroid/net/wifi/WifiConfiguration;->lastDisconnected:J

    #@19
    .line 6918
    iget-boolean v1, v0, Landroid/net/wifi/WifiConfiguration;->ephemeral:Z

    #@1b
    if-eqz v1, :cond_0

    #@1d
    .line 6920
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@1f
    iget v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastNetworkId:I

    #@21
    invoke-virtual {v1, v4}, Lcom/android/server/wifi/WifiConfigStore;->forgetNetwork(I)Z

    #@24
    .line 6910
    .end local v0    # "config":Landroid/net/wifi/WifiConfiguration;
    .end local v2    # "now_ms":J
    :cond_0
    return-void
.end method

.method public registerNetworkDisabled(I)V
    .locals 4
    .param p1, "netId"    # I

    #@0
    .prologue
    .line 275
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@2
    new-instance v1, Ljava/lang/StringBuilder;

    #@4
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@7
    const-string/jumbo v2, " registerNetworkDisabled "

    #@a
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d
    move-result-object v1

    #@e
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@11
    move-result-object v1

    #@12
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@15
    move-result-object v1

    #@16
    .line 274
    const v2, 0x2009a

    #@19
    const/4 v3, 0x0

    #@1a
    invoke-virtual {p0, v2, v3, v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@1d
    .line 276
    sget v0, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@1f
    add-int/lit8 v0, v0, 0x1

    #@21
    sput v0, Lcom/android/server/wifi/WifiStateMachine;->mRestartAutoJoinOffloadCounter:I

    #@23
    .line 272
    return-void
.end method

.method public reloadTlsNetworksAndReconnect()V
    .locals 1

    #@0
    .prologue
    .line 2130
    const v0, 0x2008e

    #@3
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@6
    .line 2129
    return-void
.end method

.method public removeAppConfigs(Ljava/lang/String;I)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    .line 2439
    new-instance v0, Landroid/content/pm/ApplicationInfo;

    #@2
    invoke-direct {v0}, Landroid/content/pm/ApplicationInfo;-><init>()V

    #@5
    .line 2440
    .local v0, "ai":Landroid/content/pm/ApplicationInfo;
    iput-object p1, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    #@7
    .line 2441
    iput p2, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    #@9
    .line 2442
    const v1, 0x20061

    #@c
    invoke-virtual {p0, v1, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(ILjava/lang/Object;)V

    #@f
    .line 2437
    return-void
.end method

.method public removeUserConfigs(I)V
    .locals 1
    .param p1, "userId"    # I

    #@0
    .prologue
    .line 2449
    const v0, 0x20098

    #@3
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(II)V

    #@6
    .line 2448
    return-void
.end method

.method renewDhcp()V
    .locals 2

    #@0
    .prologue
    .line 4992
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->maybeInitDhcpStateMachine()V

    #@3
    .line 4993
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@5
    invoke-virtual {v0}, Landroid/net/BaseDhcpStateMachine;->registerForPreDhcpNotification()V

    #@8
    .line 4994
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@a
    const v1, 0x30003

    #@d
    invoke-virtual {v0, v1}, Landroid/net/BaseDhcpStateMachine;->sendMessage(I)V

    #@10
    .line 4991
    return-void
.end method

.method reportOnTime()Ljava/lang/String;
    .locals 14

    #@0
    .prologue
    const/4 v13, 0x2

    #@1
    const/4 v12, 0x1

    #@2
    const/4 v11, 0x0

    #@3
    .line 1726
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@6
    move-result-wide v0

    #@7
    .line 1727
    .local v0, "now":J
    new-instance v5, Ljava/lang/StringBuilder;

    #@9
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@c
    .line 1729
    .local v5, "sb":Ljava/lang/StringBuilder;
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@e
    iget v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeLastReport:I

    #@10
    sub-int v2, v7, v8

    #@12
    .line 1730
    .local v2, "on":I
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@14
    iput v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeLastReport:I

    #@16
    .line 1731
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTime:I

    #@18
    iget v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeLastReport:I

    #@1a
    sub-int v6, v7, v8

    #@1c
    .line 1732
    .local v6, "tx":I
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTime:I

    #@1e
    iput v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeLastReport:I

    #@20
    .line 1733
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTime:I

    #@22
    iget v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeLastReport:I

    #@24
    sub-int v4, v7, v8

    #@26
    .line 1734
    .local v4, "rx":I
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTime:I

    #@28
    iput v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeLastReport:I

    #@2a
    .line 1735
    iget-wide v8, p0, Lcom/android/server/wifi/WifiStateMachine;->lastOntimeReportTimeStamp:J

    #@2c
    sub-long v8, v0, v8

    #@2e
    long-to-int v3, v8

    #@2f
    .line 1736
    .local v3, "period":I
    iput-wide v0, p0, Lcom/android/server/wifi/WifiStateMachine;->lastOntimeReportTimeStamp:J

    #@31
    .line 1737
    const-string/jumbo v7, "[on:%d tx:%d rx:%d period:%d]"

    #@34
    const/4 v8, 0x4

    #@35
    new-array v8, v8, [Ljava/lang/Object;

    #@37
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@3a
    move-result-object v9

    #@3b
    aput-object v9, v8, v11

    #@3d
    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@40
    move-result-object v9

    #@41
    aput-object v9, v8, v12

    #@43
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@46
    move-result-object v9

    #@47
    aput-object v9, v8, v13

    #@49
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@4c
    move-result-object v9

    #@4d
    const/4 v10, 0x3

    #@4e
    aput-object v9, v8, v10

    #@50
    invoke-static {v7, v8}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@53
    move-result-object v7

    #@54
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@57
    .line 1739
    iget v7, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@59
    iget v8, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeScreenStateChange:I

    #@5b
    sub-int v2, v7, v8

    #@5d
    .line 1740
    iget-wide v8, p0, Lcom/android/server/wifi/WifiStateMachine;->lastScreenStateChangeTimeStamp:J

    #@5f
    sub-long v8, v0, v8

    #@61
    long-to-int v3, v8

    #@62
    .line 1741
    const-string/jumbo v7, " from screen [on:%d period:%d]"

    #@65
    new-array v8, v13, [Ljava/lang/Object;

    #@67
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@6a
    move-result-object v9

    #@6b
    aput-object v9, v8, v11

    #@6d
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@70
    move-result-object v9

    #@71
    aput-object v9, v8, v12

    #@73
    invoke-static {v7, v8}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@76
    move-result-object v7

    #@77
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7a
    .line 1742
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@7d
    move-result-object v7

    #@7e
    return-object v7
.end method

.method public sendBluetoothAdapterStateChange(I)V
    .locals 2
    .param p1, "state"    # I

    #@0
    .prologue
    .line 2431
    const v0, 0x2001f

    #@3
    const/4 v1, 0x0

    #@4
    invoke-virtual {p0, v0, p1, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@7
    .line 2430
    return-void
.end method

.method sendScanResultsAvailableBroadcast(Z)V
    .locals 3
    .param p1, "scanSucceeded"    # Z

    #@0
    .prologue
    .line 4670
    new-instance v0, Landroid/content/Intent;

    #@2
    const-string/jumbo v1, "android.net.wifi.SCAN_RESULTS"

    #@5
    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    #@8
    .line 4671
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x4000000

    #@a
    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    #@d
    .line 4672
    const-string/jumbo v1, "resultsUpdated"

    #@10
    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    #@13
    .line 4673
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@15
    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@17
    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    #@1a
    .line 4669
    return-void
.end method

.method public setAllowScansWithTraffic(I)V
    .locals 1
    .param p1, "enabled"    # I

    #@0
    .prologue
    .line 1428
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@2
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->alwaysEnableScansWhileAssociated:Ljava/util/concurrent/atomic/AtomicInteger;

    #@4
    invoke-virtual {v0, p1}, Ljava/util/concurrent/atomic/AtomicInteger;->set(I)V

    #@7
    .line 1427
    return-void
.end method

.method public declared-synchronized setCountryCode(Ljava/lang/String;Z)V
    .locals 3
    .param p1, "countryCode"    # Ljava/lang/String;
    .param p2, "persist"    # Z

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    monitor-enter p0

    #@2
    .line 2346
    :try_start_0
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    #@5
    move-result v2

    #@6
    if-eqz v2, :cond_1

    #@8
    .line 2347
    const-string/jumbo v1, "Ignoring resetting of country code"

    #@b
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@e
    :cond_0
    :goto_0
    monitor-exit p0

    #@f
    .line 2340
    return-void

    #@10
    .line 2351
    :cond_1
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mCountryCodeSequence:Ljava/util/concurrent/atomic/AtomicInteger;

    #@12
    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@15
    move-result v0

    #@16
    .line 2352
    .local v0, "countryCodeSequence":I
    if-eqz v0, :cond_2

    #@18
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mSetCountryCode:Ljava/lang/String;

    #@1a
    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1d
    move-result v2

    #@1e
    if-nez v2, :cond_4

    #@20
    .line 2354
    :cond_2
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mCountryCodeSequence:Ljava/util/concurrent/atomic/AtomicInteger;

    #@22
    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    #@25
    move-result v0

    #@26
    .line 2355
    iput-object p1, p0, Lcom/android/server/wifi/WifiStateMachine;->mSetCountryCode:Ljava/lang/String;

    #@28
    .line 2356
    if-eqz p2, :cond_3

    #@2a
    const/4 v1, 0x1

    #@2b
    :cond_3
    const v2, 0x20050

    #@2e
    invoke-virtual {p0, v2, v0, v1, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@31
    .line 2360
    :cond_4
    if-eqz p2, :cond_0

    #@33
    .line 2361
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@35
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@38
    move-result-object v1

    #@39
    .line 2362
    const-string/jumbo v2, "wifi_country_code"

    #@3c
    .line 2361
    invoke-static {v1, v2, p1}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@3f
    goto :goto_0

    #@40
    .end local v0    # "countryCodeSequence":I
    :catchall_0
    move-exception v1

    #@41
    monitor-exit p0

    #@42
    throw v1
.end method

.method public setDriverStart(Z)V
    .locals 1
    .param p1, "enable"    # Z

    #@0
    .prologue
    .line 2058
    if-eqz p1, :cond_0

    #@2
    .line 2059
    const v0, 0x2000d

    #@5
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@8
    .line 2057
    :goto_0
    return-void

    #@9
    .line 2061
    :cond_0
    const v0, 0x2000e

    #@c
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@f
    goto :goto_0
.end method

.method public setFrequencyBand(IZ)V
    .locals 2
    .param p1, "band"    # I
    .param p2, "persist"    # Z

    #@0
    .prologue
    .line 2397
    if-eqz p2, :cond_0

    #@2
    .line 2398
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mContext:Landroid/content/Context;

    #@4
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@7
    move-result-object v0

    #@8
    .line 2399
    const-string/jumbo v1, "wifi_frequency_band"

    #@b
    .line 2398
    invoke-static {v0, v1, p1}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    #@e
    .line 2402
    :cond_0
    const v0, 0x2005a

    #@11
    const/4 v1, 0x0

    #@12
    invoke-virtual {p0, v0, p1, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@15
    .line 2396
    return-void
.end method

.method public setHalBasedAutojoinOffload(I)V
    .locals 2
    .param p1, "enabled"    # I

    #@0
    .prologue
    const/4 v0, 0x0

    #@1
    .line 1323
    if-lez p1, :cond_0

    #@3
    const/4 v0, 0x1

    #@4
    :cond_0
    iput-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoEnableInDevSettings:Z

    #@6
    .line 1324
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@8
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->enableHalBasedPno:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@a
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoEnableInDevSettings:Z

    #@c
    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    #@f
    .line 1325
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@11
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->enableSsidWhitelist:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@13
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoEnableInDevSettings:Z

    #@15
    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    #@18
    .line 1326
    const v0, 0x20049

    #@1b
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@1e
    .line 1320
    return-void
.end method

.method public setHighPerfModeEnabled(Z)V
    .locals 3
    .param p1, "enable"    # Z

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2331
    if-eqz p1, :cond_0

    #@3
    const/4 v0, 0x1

    #@4
    :goto_0
    const v2, 0x2004d

    #@7
    invoke-virtual {p0, v2, v0, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@a
    .line 2330
    return-void

    #@b
    :cond_0
    move v0, v1

    #@c
    .line 2331
    goto :goto_0
.end method

.method public setHostApRunning(Landroid/net/wifi/WifiConfiguration;Z)V
    .locals 1
    .param p1, "wifiConfig"    # Landroid/net/wifi/WifiConfiguration;
    .param p2, "enable"    # Z

    #@0
    .prologue
    .line 1967
    if-eqz p2, :cond_0

    #@2
    .line 1968
    const v0, 0x20015

    #@5
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(ILjava/lang/Object;)V

    #@8
    .line 1966
    :goto_0
    return-void

    #@9
    .line 1970
    :cond_0
    const v0, 0x20018

    #@c
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@f
    goto :goto_0
.end method

.method public setOperationalMode(I)V
    .locals 2
    .param p1, "mode"    # I

    #@0
    .prologue
    .line 2069
    sget-boolean v0, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    new-instance v0, Ljava/lang/StringBuilder;

    #@6
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@9
    const-string/jumbo v1, "setting operational mode to "

    #@c
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v0

    #@10
    invoke-static {p1}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    #@13
    move-result-object v1

    #@14
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17
    move-result-object v0

    #@18
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1b
    move-result-object v0

    #@1c
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->log(Ljava/lang/String;)V

    #@1f
    .line 2070
    :cond_0
    const v0, 0x20048

    #@22
    const/4 v1, 0x0

    #@23
    invoke-virtual {p0, v0, p1, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@26
    .line 2068
    return-void
.end method

.method public setSupplicantRunning(Z)V
    .locals 1
    .param p1, "enable"    # Z

    #@0
    .prologue
    .line 1956
    if-eqz p1, :cond_0

    #@2
    .line 1957
    const v0, 0x2000b

    #@5
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@8
    .line 1955
    :goto_0
    return-void

    #@9
    .line 1959
    :cond_0
    const v0, 0x2000c

    #@c
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(I)V

    #@f
    goto :goto_0
.end method

.method public setWifiApConfiguration(Landroid/net/wifi/WifiConfiguration;)V
    .locals 2
    .param p1, "config"    # Landroid/net/wifi/WifiConfiguration;

    #@0
    .prologue
    .line 1975
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigChannel:Lcom/android/internal/util/AsyncChannel;

    #@2
    const v1, 0x20019

    #@5
    invoke-virtual {v0, v1, p1}, Lcom/android/internal/util/AsyncChannel;->sendMessage(ILjava/lang/Object;)V

    #@8
    .line 1974
    return-void
.end method

.method shouldSwitchNetwork(I)Z
    .locals 8
    .param p1, "networkDelta"    # I

    #@0
    .prologue
    const/4 v7, 0x1

    #@1
    const/4 v6, 0x0

    #@2
    .line 4071
    if-gtz p1, :cond_0

    #@4
    .line 4072
    return v6

    #@5
    .line 4074
    :cond_0
    move v0, p1

    #@6
    .line 4075
    .local v0, "delta":I
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@8
    if-eqz v1, :cond_6

    #@a
    .line 4076
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->getEnableAutoJoinWhenAssociated()Z

    #@d
    move-result v1

    #@e
    if-nez v1, :cond_1

    #@10
    .line 4077
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@12
    invoke-virtual {v1}, Landroid/net/wifi/WifiInfo;->getNetworkId()I

    #@15
    move-result v1

    #@16
    const/4 v2, -0x1

    #@17
    if-eq v1, v2, :cond_1

    #@19
    .line 4080
    const/16 v0, -0x3e8

    #@1b
    .line 4100
    :goto_0
    if-lez v0, :cond_7

    #@1d
    .line 4101
    return v7

    #@1e
    .line 4086
    :cond_1
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@20
    iget-wide v2, v1, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@22
    const-wide/high16 v4, 0x4034000000000000L    # 20.0

    #@24
    cmpl-double v1, v2, v4

    #@26
    if-gtz v1, :cond_2

    #@28
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@2a
    iget-wide v2, v1, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@2c
    const-wide/high16 v4, 0x4054000000000000L    # 80.0

    #@2e
    cmpl-double v1, v2, v4

    #@30
    if-lez v1, :cond_4

    #@32
    .line 4087
    :cond_2
    add-int/lit16 v0, v0, -0x3e7

    #@34
    .line 4091
    :cond_3
    :goto_1
    new-instance v1, Ljava/lang/StringBuilder;

    #@36
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@39
    const-string/jumbo v2, "shouldSwitchNetwork  txSuccessRate="

    #@3c
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3f
    move-result-object v1

    #@40
    .line 4092
    const-string/jumbo v2, "%.2f"

    #@43
    new-array v3, v7, [Ljava/lang/Object;

    #@45
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@47
    iget-wide v4, v4, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@49
    invoke-static {v4, v5}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@4c
    move-result-object v4

    #@4d
    aput-object v4, v3, v6

    #@4f
    invoke-static {v2, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@52
    move-result-object v2

    #@53
    .line 4091
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@56
    move-result-object v1

    #@57
    .line 4093
    const-string/jumbo v2, " rxSuccessRate="

    #@5a
    .line 4091
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d
    move-result-object v1

    #@5e
    .line 4093
    const-string/jumbo v2, "%.2f"

    #@61
    new-array v3, v7, [Ljava/lang/Object;

    #@63
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@65
    iget-wide v4, v4, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@67
    invoke-static {v4, v5}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    #@6a
    move-result-object v4

    #@6b
    aput-object v4, v3, v6

    #@6d
    invoke-static {v2, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    #@70
    move-result-object v2

    #@71
    .line 4091
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@74
    move-result-object v1

    #@75
    .line 4094
    const-string/jumbo v2, " delta "

    #@78
    .line 4091
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7b
    move-result-object v1

    #@7c
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v1

    #@80
    .line 4094
    const-string/jumbo v2, " -> "

    #@83
    .line 4091
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@86
    move-result-object v1

    #@87
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@8a
    move-result-object v1

    #@8b
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8e
    move-result-object v1

    #@8f
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@92
    goto :goto_0

    #@93
    .line 4088
    :cond_4
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@95
    iget-wide v2, v1, Landroid/net/wifi/WifiInfo;->txSuccessRate:D

    #@97
    const-wide/high16 v4, 0x4014000000000000L    # 5.0

    #@99
    cmpl-double v1, v2, v4

    #@9b
    if-gtz v1, :cond_5

    #@9d
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiInfo:Landroid/net/wifi/WifiInfo;

    #@9f
    iget-wide v2, v1, Landroid/net/wifi/WifiInfo;->rxSuccessRate:D

    #@a1
    const-wide/high16 v4, 0x403e000000000000L    # 30.0

    #@a3
    cmpl-double v1, v2, v4

    #@a5
    if-lez v1, :cond_3

    #@a7
    .line 4089
    :cond_5
    add-int/lit8 v0, v0, -0x6

    #@a9
    goto :goto_1

    #@aa
    .line 4097
    :cond_6
    new-instance v1, Ljava/lang/StringBuilder;

    #@ac
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@af
    const-string/jumbo v2, "shouldSwitchNetwork  delta "

    #@b2
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b5
    move-result-object v1

    #@b6
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@b9
    move-result-object v1

    #@ba
    .line 4098
    const-string/jumbo v2, " -> "

    #@bd
    .line 4097
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c0
    move-result-object v1

    #@c1
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c4
    move-result-object v1

    #@c5
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c8
    move-result-object v1

    #@c9
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@cc
    goto/16 :goto_0

    #@ce
    .line 4103
    :cond_7
    return v6
.end method

.method smToString(I)Ljava/lang/String;
    .locals 3
    .param p1, "what"    # I

    #@0
    .prologue
    .line 6525
    const-string/jumbo v0, "unknown"

    #@3
    .line 6526
    .local v0, "s":Ljava/lang/String;
    sparse-switch p1, :sswitch_data_0

    #@6
    .line 6885
    new-instance v1, Ljava/lang/StringBuilder;

    #@8
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@b
    const-string/jumbo v2, "what:"

    #@e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@11
    move-result-object v1

    #@12
    invoke-static {p1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@15
    move-result-object v2

    #@16
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v1

    #@1a
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1d
    move-result-object v0

    #@1e
    .line 6888
    :goto_0
    return-object v0

    #@1f
    .line 6528
    :sswitch_0
    const-string/jumbo v0, "DRIVER_HUNG_EVENT"

    #@22
    goto :goto_0

    #@23
    .line 6531
    :sswitch_1
    const-string/jumbo v0, "AsyncChannel.CMD_CHANNEL_HALF_CONNECTED"

    #@26
    goto :goto_0

    #@27
    .line 6534
    :sswitch_2
    const-string/jumbo v0, "AsyncChannel.CMD_CHANNEL_DISCONNECTED"

    #@2a
    goto :goto_0

    #@2b
    .line 6537
    :sswitch_3
    const-string/jumbo v0, "CMD_SET_FREQUENCY_BAND"

    #@2e
    goto :goto_0

    #@2f
    .line 6540
    :sswitch_4
    const-string/jumbo v0, "CMD_DELAYED_NETWORK_DISCONNECT"

    #@32
    goto :goto_0

    #@33
    .line 6543
    :sswitch_5
    const-string/jumbo v0, "CMD_TEST_NETWORK_DISCONNECT"

    #@36
    goto :goto_0

    #@37
    .line 6546
    :sswitch_6
    const-string/jumbo v0, "CMD_OBTAINING_IP_ADDRESS_WATCHDOG_TIMER"

    #@3a
    goto :goto_0

    #@3b
    .line 6549
    :sswitch_7
    const-string/jumbo v0, "CMD_DISABLE_EPHEMERAL_NETWORK"

    #@3e
    goto :goto_0

    #@3f
    .line 6552
    :sswitch_8
    const-string/jumbo v0, "CMD_START_DRIVER"

    #@42
    goto :goto_0

    #@43
    .line 6555
    :sswitch_9
    const-string/jumbo v0, "CMD_STOP_DRIVER"

    #@46
    goto :goto_0

    #@47
    .line 6558
    :sswitch_a
    const-string/jumbo v0, "CMD_STOP_SUPPLICANT"

    #@4a
    goto :goto_0

    #@4b
    .line 6561
    :sswitch_b
    const-string/jumbo v0, "CMD_STOP_SUPPLICANT_FAILED"

    #@4e
    goto :goto_0

    #@4f
    .line 6564
    :sswitch_c
    const-string/jumbo v0, "CMD_START_SUPPLICANT"

    #@52
    goto :goto_0

    #@53
    .line 6567
    :sswitch_d
    const-string/jumbo v0, "CMD_REQUEST_AP_CONFIG"

    #@56
    goto :goto_0

    #@57
    .line 6570
    :sswitch_e
    const-string/jumbo v0, "CMD_RESPONSE_AP_CONFIG"

    #@5a
    goto :goto_0

    #@5b
    .line 6573
    :sswitch_f
    const-string/jumbo v0, "CMD_TETHER_STATE_CHANGE"

    #@5e
    goto :goto_0

    #@5f
    .line 6576
    :sswitch_10
    const-string/jumbo v0, "CMD_TETHER_NOTIFICATION_TIMED_OUT"

    #@62
    goto :goto_0

    #@63
    .line 6579
    :sswitch_11
    const-string/jumbo v0, "CMD_BLUETOOTH_ADAPTER_STATE_CHANGE"

    #@66
    goto :goto_0

    #@67
    .line 6582
    :sswitch_12
    const-string/jumbo v0, "CMD_ADD_OR_UPDATE_NETWORK"

    #@6a
    goto :goto_0

    #@6b
    .line 6585
    :sswitch_13
    const-string/jumbo v0, "CMD_REMOVE_NETWORK"

    #@6e
    goto :goto_0

    #@6f
    .line 6588
    :sswitch_14
    const-string/jumbo v0, "CMD_ENABLE_NETWORK"

    #@72
    goto :goto_0

    #@73
    .line 6591
    :sswitch_15
    const-string/jumbo v0, "CMD_ENABLE_ALL_NETWORKS"

    #@76
    goto :goto_0

    #@77
    .line 6594
    :sswitch_16
    const-string/jumbo v0, "CMD_AUTO_CONNECT"

    #@7a
    goto :goto_0

    #@7b
    .line 6597
    :sswitch_17
    const-string/jumbo v0, "CMD_AUTO_ROAM"

    #@7e
    goto :goto_0

    #@7f
    .line 6600
    :sswitch_18
    const-string/jumbo v0, "CMD_AUTO_SAVE_NETWORK"

    #@82
    goto :goto_0

    #@83
    .line 6603
    :sswitch_19
    const-string/jumbo v0, "CMD_BOOT_COMPLETED"

    #@86
    goto :goto_0

    #@87
    .line 6606
    :sswitch_1a
    const-string/jumbo v0, "CMD_START_DHCP"

    #@8a
    goto :goto_0

    #@8b
    .line 6609
    :sswitch_1b
    const-string/jumbo v0, "CMD_STOP_DHCP"

    #@8e
    goto :goto_0

    #@8f
    .line 6612
    :sswitch_1c
    const-string/jumbo v0, "CMD_RENEW_DHCP"

    #@92
    goto :goto_0

    #@93
    .line 6615
    :sswitch_1d
    const-string/jumbo v0, "CMD_PRE_DHCP_ACTION"

    #@96
    goto :goto_0

    #@97
    .line 6618
    :sswitch_1e
    const-string/jumbo v0, "CMD_POST_DHCP_ACTION"

    #@9a
    goto :goto_0

    #@9b
    .line 6621
    :sswitch_1f
    const-string/jumbo v0, "CMD_PRE_DHCP_ACTION_COMPLETE"

    #@9e
    goto :goto_0

    #@9f
    .line 6624
    :sswitch_20
    const-string/jumbo v0, "CMD_ON_QUIT"

    #@a2
    goto/16 :goto_0

    #@a4
    .line 6627
    :sswitch_21
    const-string/jumbo v0, "WifiP2pServiceImpl.DISCONNECT_WIFI_REQUEST"

    #@a7
    goto/16 :goto_0

    #@a9
    .line 6630
    :sswitch_22
    const-string/jumbo v0, "WifiManager.DISABLE_NETWORK"

    #@ac
    goto/16 :goto_0

    #@ae
    .line 6633
    :sswitch_23
    const-string/jumbo v0, "CMD_BLACKLIST_NETWORK"

    #@b1
    goto/16 :goto_0

    #@b3
    .line 6636
    :sswitch_24
    const-string/jumbo v0, "CMD_CLEAR_BLACKLIST"

    #@b6
    goto/16 :goto_0

    #@b8
    .line 6639
    :sswitch_25
    const-string/jumbo v0, "CMD_SAVE_CONFIG"

    #@bb
    goto/16 :goto_0

    #@bd
    .line 6642
    :sswitch_26
    const-string/jumbo v0, "CMD_GET_CONFIGURED_NETWORKS"

    #@c0
    goto/16 :goto_0

    #@c2
    .line 6645
    :sswitch_27
    const-string/jumbo v0, "CMD_GET_SUPPORTED_FEATURES"

    #@c5
    goto/16 :goto_0

    #@c7
    .line 6648
    :sswitch_28
    const-string/jumbo v0, "CMD_UNWANTED_NETWORK"

    #@ca
    goto/16 :goto_0

    #@cc
    .line 6651
    :sswitch_29
    const-string/jumbo v0, "CMD_NETWORK_STATUS"

    #@cf
    goto/16 :goto_0

    #@d1
    .line 6654
    :sswitch_2a
    const-string/jumbo v0, "CMD_GET_LINK_LAYER_STATS"

    #@d4
    goto/16 :goto_0

    #@d6
    .line 6657
    :sswitch_2b
    const-string/jumbo v0, "CMD_GET_MATCHING_CONFIG"

    #@d9
    goto/16 :goto_0

    #@db
    .line 6660
    :sswitch_2c
    const-string/jumbo v0, "CMD_GET_PRIVILEGED_CONFIGURED_NETWORKS"

    #@de
    goto/16 :goto_0

    #@e0
    .line 6663
    :sswitch_2d
    const-string/jumbo v0, "CMD_DISCONNECT"

    #@e3
    goto/16 :goto_0

    #@e5
    .line 6666
    :sswitch_2e
    const-string/jumbo v0, "CMD_RECONNECT"

    #@e8
    goto/16 :goto_0

    #@ea
    .line 6669
    :sswitch_2f
    const-string/jumbo v0, "CMD_REASSOCIATE"

    #@ed
    goto/16 :goto_0

    #@ef
    .line 6672
    :sswitch_30
    const-string/jumbo v0, "CMD_GET_CONNECTION_STATISTICS"

    #@f2
    goto/16 :goto_0

    #@f4
    .line 6675
    :sswitch_31
    const-string/jumbo v0, "CMD_SET_HIGH_PERF_MODE"

    #@f7
    goto/16 :goto_0

    #@f9
    .line 6678
    :sswitch_32
    const-string/jumbo v0, "CMD_SET_COUNTRY_CODE"

    #@fc
    goto/16 :goto_0

    #@fe
    .line 6681
    :sswitch_33
    const-string/jumbo v0, "CMD_ENABLE_RSSI_POLL"

    #@101
    goto/16 :goto_0

    #@103
    .line 6684
    :sswitch_34
    const-string/jumbo v0, "CMD_RSSI_POLL"

    #@106
    goto/16 :goto_0

    #@108
    .line 6687
    :sswitch_35
    const-string/jumbo v0, "CMD_START_PACKET_FILTERING"

    #@10b
    goto/16 :goto_0

    #@10d
    .line 6690
    :sswitch_36
    const-string/jumbo v0, "CMD_STOP_PACKET_FILTERING"

    #@110
    goto/16 :goto_0

    #@112
    .line 6693
    :sswitch_37
    const-string/jumbo v0, "CMD_SET_SUSPEND_OPT_ENABLED"

    #@115
    goto/16 :goto_0

    #@117
    .line 6696
    :sswitch_38
    const-string/jumbo v0, "CMD_NO_NETWORKS_PERIODIC_SCAN"

    #@11a
    goto/16 :goto_0

    #@11c
    .line 6699
    :sswitch_39
    const-string/jumbo v0, "CMD_UPDATE_LINKPROPERTIES"

    #@11f
    goto/16 :goto_0

    #@121
    .line 6702
    :sswitch_3a
    const-string/jumbo v0, "CMD_RELOAD_TLS_AND_RECONNECT"

    #@124
    goto/16 :goto_0

    #@126
    .line 6705
    :sswitch_3b
    const-string/jumbo v0, "CONNECT_NETWORK"

    #@129
    goto/16 :goto_0

    #@12b
    .line 6708
    :sswitch_3c
    const-string/jumbo v0, "SAVE_NETWORK"

    #@12e
    goto/16 :goto_0

    #@130
    .line 6711
    :sswitch_3d
    const-string/jumbo v0, "FORGET_NETWORK"

    #@133
    goto/16 :goto_0

    #@135
    .line 6714
    :sswitch_3e
    const-string/jumbo v0, "SUP_CONNECTION_EVENT"

    #@138
    goto/16 :goto_0

    #@13a
    .line 6717
    :sswitch_3f
    const-string/jumbo v0, "SUP_DISCONNECTION_EVENT"

    #@13d
    goto/16 :goto_0

    #@13f
    .line 6720
    :sswitch_40
    const-string/jumbo v0, "SCAN_RESULTS_EVENT"

    #@142
    goto/16 :goto_0

    #@144
    .line 6723
    :sswitch_41
    const-string/jumbo v0, "SCAN_FAILED_EVENT"

    #@147
    goto/16 :goto_0

    #@149
    .line 6726
    :sswitch_42
    const-string/jumbo v0, "SUPPLICANT_STATE_CHANGE_EVENT"

    #@14c
    goto/16 :goto_0

    #@14e
    .line 6729
    :sswitch_43
    const-string/jumbo v0, "AUTHENTICATION_FAILURE_EVENT"

    #@151
    goto/16 :goto_0

    #@153
    .line 6732
    :sswitch_44
    const-string/jumbo v0, "SSID_TEMP_DISABLED"

    #@156
    goto/16 :goto_0

    #@158
    .line 6735
    :sswitch_45
    const-string/jumbo v0, "SSID_REENABLED"

    #@15b
    goto/16 :goto_0

    #@15d
    .line 6738
    :sswitch_46
    const-string/jumbo v0, "WPS_SUCCESS_EVENT"

    #@160
    goto/16 :goto_0

    #@162
    .line 6741
    :sswitch_47
    const-string/jumbo v0, "WPS_FAIL_EVENT"

    #@165
    goto/16 :goto_0

    #@167
    .line 6744
    :sswitch_48
    const-string/jumbo v0, "SUP_REQUEST_IDENTITY"

    #@16a
    goto/16 :goto_0

    #@16c
    .line 6747
    :sswitch_49
    const-string/jumbo v0, "NETWORK_CONNECTION_EVENT"

    #@16f
    goto/16 :goto_0

    #@171
    .line 6750
    :sswitch_4a
    const-string/jumbo v0, "NETWORK_DISCONNECTION_EVENT"

    #@174
    goto/16 :goto_0

    #@176
    .line 6753
    :sswitch_4b
    const-string/jumbo v0, "ASSOCIATION_REJECTION_EVENT"

    #@179
    goto/16 :goto_0

    #@17b
    .line 6756
    :sswitch_4c
    const-string/jumbo v0, "WifiMonitor.ANQP_DONE_EVENT"

    #@17e
    goto/16 :goto_0

    #@180
    .line 6759
    :sswitch_4d
    const-string/jumbo v0, "WifiMonitor.GAS_QUERY_DONE_EVENT"

    #@183
    goto/16 :goto_0

    #@185
    .line 6762
    :sswitch_4e
    const-string/jumbo v0, "WifiMonitor.HS20_DEAUTH_EVENT"

    #@188
    goto/16 :goto_0

    #@18a
    .line 6765
    :sswitch_4f
    const-string/jumbo v0, "WifiMonitor.GAS_QUERY_START_EVENT"

    #@18d
    goto/16 :goto_0

    #@18f
    .line 6768
    :sswitch_50
    const-string/jumbo v0, "CMD_SET_OPERATIONAL_MODE"

    #@192
    goto/16 :goto_0

    #@194
    .line 6771
    :sswitch_51
    const-string/jumbo v0, "CMD_START_SCAN"

    #@197
    goto/16 :goto_0

    #@199
    .line 6774
    :sswitch_52
    const-string/jumbo v0, "CMD_DISABLE_P2P_RSP"

    #@19c
    goto/16 :goto_0

    #@19e
    .line 6777
    :sswitch_53
    const-string/jumbo v0, "CMD_DISABLE_P2P_REQ"

    #@1a1
    goto/16 :goto_0

    #@1a3
    .line 6780
    :sswitch_54
    const-string/jumbo v0, "GOOD_LINK_DETECTED"

    #@1a6
    goto/16 :goto_0

    #@1a8
    .line 6783
    :sswitch_55
    const-string/jumbo v0, "POOR_LINK_DETECTED"

    #@1ab
    goto/16 :goto_0

    #@1ad
    .line 6786
    :sswitch_56
    const-string/jumbo v0, "GROUP_CREATING_TIMED_OUT"

    #@1b0
    goto/16 :goto_0

    #@1b2
    .line 6789
    :sswitch_57
    const-string/jumbo v0, "P2P_CONNECTION_CHANGED"

    #@1b5
    goto/16 :goto_0

    #@1b7
    .line 6792
    :sswitch_58
    const-string/jumbo v0, "P2P.DISCONNECT_WIFI_RESPONSE"

    #@1ba
    goto/16 :goto_0

    #@1bc
    .line 6795
    :sswitch_59
    const-string/jumbo v0, "P2P.SET_MIRACAST_MODE"

    #@1bf
    goto/16 :goto_0

    #@1c1
    .line 6798
    :sswitch_5a
    const-string/jumbo v0, "P2P.BLOCK_DISCOVERY"

    #@1c4
    goto/16 :goto_0

    #@1c6
    .line 6801
    :sswitch_5b
    const-string/jumbo v0, "P2P.SET_COUNTRY_CODE"

    #@1c9
    goto/16 :goto_0

    #@1cb
    .line 6804
    :sswitch_5c
    const-string/jumbo v0, "CANCEL_WPS"

    #@1ce
    goto/16 :goto_0

    #@1d0
    .line 6807
    :sswitch_5d
    const-string/jumbo v0, "CANCEL_WPS_FAILED"

    #@1d3
    goto/16 :goto_0

    #@1d5
    .line 6810
    :sswitch_5e
    const-string/jumbo v0, "CANCEL_WPS_SUCCEDED"

    #@1d8
    goto/16 :goto_0

    #@1da
    .line 6813
    :sswitch_5f
    const-string/jumbo v0, "START_WPS"

    #@1dd
    goto/16 :goto_0

    #@1df
    .line 6816
    :sswitch_60
    const-string/jumbo v0, "START_WPS_SUCCEEDED"

    #@1e2
    goto/16 :goto_0

    #@1e4
    .line 6819
    :sswitch_61
    const-string/jumbo v0, "WPS_FAILED"

    #@1e7
    goto/16 :goto_0

    #@1e9
    .line 6822
    :sswitch_62
    const-string/jumbo v0, "WPS_COMPLETED"

    #@1ec
    goto/16 :goto_0

    #@1ee
    .line 6825
    :sswitch_63
    const-string/jumbo v0, "RSSI_PKTCNT_FETCH"

    #@1f1
    goto/16 :goto_0

    #@1f3
    .line 6828
    :sswitch_64
    const-string/jumbo v0, "CMD_IP_CONFIGURATION_LOST"

    #@1f6
    goto/16 :goto_0

    #@1f8
    .line 6831
    :sswitch_65
    const-string/jumbo v0, "CMD_IP_CONFIGURATION_SUCCESSFUL"

    #@1fb
    goto/16 :goto_0

    #@1fd
    .line 6834
    :sswitch_66
    const-string/jumbo v0, "CMD_IP_REACHABILITY_LOST"

    #@200
    goto/16 :goto_0

    #@202
    .line 6837
    :sswitch_67
    const-string/jumbo v0, "CMD_STATIC_IP_SUCCESSFUL"

    #@205
    goto/16 :goto_0

    #@207
    .line 6840
    :sswitch_68
    const-string/jumbo v0, "CMD_STATIC_IP_FAILURE"

    #@20a
    goto/16 :goto_0

    #@20c
    .line 6843
    :sswitch_69
    const-string/jumbo v0, "DHCP_SUCCESS"

    #@20f
    goto/16 :goto_0

    #@211
    .line 6846
    :sswitch_6a
    const-string/jumbo v0, "DHCP_FAILURE"

    #@214
    goto/16 :goto_0

    #@216
    .line 6849
    :sswitch_6b
    const-string/jumbo v0, "CMD_TARGET_BSSID"

    #@219
    goto/16 :goto_0

    #@21b
    .line 6852
    :sswitch_6c
    const-string/jumbo v0, "CMD_ASSOCIATED_BSSID"

    #@21e
    goto/16 :goto_0

    #@220
    .line 6855
    :sswitch_6d
    const-string/jumbo v0, "CMD_REMOVE_APP_CONFIGURATIONS"

    #@223
    goto/16 :goto_0

    #@225
    .line 6858
    :sswitch_6e
    const-string/jumbo v0, "CMD_REMOVE_USER_CONFIGURATIONS"

    #@228
    goto/16 :goto_0

    #@22a
    .line 6861
    :sswitch_6f
    const-string/jumbo v0, "CMD_ROAM_WATCHDOG_TIMER"

    #@22d
    goto/16 :goto_0

    #@22f
    .line 6864
    :sswitch_70
    const-string/jumbo v0, "CMD_SCREEN_STATE_CHANGED"

    #@232
    goto/16 :goto_0

    #@234
    .line 6867
    :sswitch_71
    const-string/jumbo v0, "CMD_DISCONNECTING_WATCHDOG_TIMER"

    #@237
    goto/16 :goto_0

    #@239
    .line 6870
    :sswitch_72
    const-string/jumbo v0, "CMD_RESTART_AUTOJOIN_OFFLOAD"

    #@23c
    goto/16 :goto_0

    #@23e
    .line 6873
    :sswitch_73
    const-string/jumbo v0, "CMD_STARTED_PNO_DBG"

    #@241
    goto/16 :goto_0

    #@243
    .line 6876
    :sswitch_74
    const-string/jumbo v0, "CMD_STARTED_GSCAN_DBG"

    #@246
    goto/16 :goto_0

    #@248
    .line 6879
    :sswitch_75
    const-string/jumbo v0, "CMD_PNO_NETWORK_FOUND"

    #@24b
    goto/16 :goto_0

    #@24d
    .line 6882
    :sswitch_76
    const-string/jumbo v0, "CMD_UPDATE_ASSOCIATED_SCAN_PERMISSION"

    #@250
    goto/16 :goto_0

    #@252
    .line 6526
    :sswitch_data_0
    .sparse-switch
        0x1 -> :sswitch_69
        0x2 -> :sswitch_6a
        0x11000 -> :sswitch_1
        0x11004 -> :sswitch_2
        0x2000b -> :sswitch_c
        0x2000c -> :sswitch_a
        0x2000d -> :sswitch_8
        0x2000e -> :sswitch_9
        0x2000f -> :sswitch_67
        0x20010 -> :sswitch_68
        0x20011 -> :sswitch_b
        0x2001b -> :sswitch_d
        0x2001c -> :sswitch_e
        0x2001d -> :sswitch_f
        0x2001e -> :sswitch_10
        0x2001f -> :sswitch_11
        0x20034 -> :sswitch_12
        0x20035 -> :sswitch_13
        0x20036 -> :sswitch_14
        0x20037 -> :sswitch_15
        0x20038 -> :sswitch_23
        0x20039 -> :sswitch_24
        0x2003a -> :sswitch_25
        0x2003b -> :sswitch_26
        0x2003d -> :sswitch_27
        0x2003e -> :sswitch_2c
        0x2003f -> :sswitch_2a
        0x20047 -> :sswitch_51
        0x20048 -> :sswitch_50
        0x20049 -> :sswitch_2d
        0x2004a -> :sswitch_2e
        0x2004b -> :sswitch_2f
        0x2004c -> :sswitch_30
        0x2004d -> :sswitch_31
        0x20050 -> :sswitch_32
        0x20052 -> :sswitch_33
        0x20053 -> :sswitch_34
        0x20054 -> :sswitch_35
        0x20055 -> :sswitch_36
        0x20056 -> :sswitch_37
        0x20057 -> :sswitch_4
        0x20058 -> :sswitch_38
        0x20059 -> :sswitch_5
        0x2005a -> :sswitch_3
        0x2005d -> :sswitch_6
        0x2005e -> :sswitch_6f
        0x2005f -> :sswitch_70
        0x20060 -> :sswitch_71
        0x20061 -> :sswitch_6d
        0x20062 -> :sswitch_7
        0x20063 -> :sswitch_2b
        0x20084 -> :sswitch_53
        0x20085 -> :sswitch_52
        0x20086 -> :sswitch_19
        0x2008a -> :sswitch_65
        0x2008b -> :sswitch_64
        0x2008c -> :sswitch_39
        0x2008d -> :sswitch_6b
        0x2008e -> :sswitch_3a
        0x2008f -> :sswitch_16
        0x20090 -> :sswitch_28
        0x20091 -> :sswitch_17
        0x20092 -> :sswitch_18
        0x20093 -> :sswitch_6c
        0x20094 -> :sswitch_29
        0x20095 -> :sswitch_66
        0x20098 -> :sswitch_6e
        0x2009a -> :sswitch_72
        0x2009b -> :sswitch_73
        0x2009c -> :sswitch_75
        0x2009e -> :sswitch_76
        0x2009f -> :sswitch_74
        0x21015 -> :sswitch_55
        0x21016 -> :sswitch_54
        0x23001 -> :sswitch_56
        0x2300b -> :sswitch_57
        0x2300c -> :sswitch_21
        0x2300d -> :sswitch_58
        0x2300e -> :sswitch_59
        0x2300f -> :sswitch_5a
        0x23010 -> :sswitch_5b
        0x24001 -> :sswitch_3e
        0x24002 -> :sswitch_3f
        0x24003 -> :sswitch_49
        0x24004 -> :sswitch_4a
        0x24005 -> :sswitch_40
        0x24006 -> :sswitch_42
        0x24007 -> :sswitch_43
        0x24008 -> :sswitch_46
        0x24009 -> :sswitch_47
        0x2400c -> :sswitch_0
        0x2400d -> :sswitch_44
        0x2400e -> :sswitch_45
        0x2400f -> :sswitch_48
        0x24011 -> :sswitch_41
        0x2402b -> :sswitch_4b
        0x2402c -> :sswitch_4c
        0x24033 -> :sswitch_4f
        0x24034 -> :sswitch_4d
        0x2403e -> :sswitch_4e
        0x25001 -> :sswitch_3b
        0x25004 -> :sswitch_3d
        0x25007 -> :sswitch_3c
        0x2500a -> :sswitch_5f
        0x2500b -> :sswitch_60
        0x2500c -> :sswitch_61
        0x2500d -> :sswitch_62
        0x2500e -> :sswitch_5c
        0x2500f -> :sswitch_5d
        0x25010 -> :sswitch_5e
        0x25011 -> :sswitch_22
        0x25014 -> :sswitch_63
        0x30001 -> :sswitch_1a
        0x30002 -> :sswitch_1b
        0x30003 -> :sswitch_1c
        0x30004 -> :sswitch_1d
        0x30005 -> :sswitch_1e
        0x30006 -> :sswitch_20
        0x30007 -> :sswitch_1f
    .end sparse-switch
.end method

.method smToString(Landroid/os/Message;)Ljava/lang/String;
    .locals 1
    .param p1, "message"    # Landroid/os/Message;

    #@0
    .prologue
    .line 6521
    iget v0, p1, Landroid/os/Message;->what:I

    #@2
    invoke-virtual {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->smToString(I)Ljava/lang/String;

    #@5
    move-result-object v0

    #@6
    return-object v0
.end method

.method startDhcp()V
    .locals 2

    #@0
    .prologue
    .line 4986
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->maybeInitDhcpStateMachine()V

    #@3
    .line 4987
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@5
    invoke-virtual {v0}, Landroid/net/BaseDhcpStateMachine;->registerForPreDhcpNotification()V

    #@8
    .line 4988
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@a
    const v1, 0x30001

    #@d
    invoke-virtual {v0, v1}, Landroid/net/BaseDhcpStateMachine;->sendMessage(I)V

    #@10
    .line 4985
    return-void
.end method

.method public startFilteringMulticastV4Packets()V
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 2297
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mFilteringMulticastV4Packets:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@3
    const/4 v1, 0x1

    #@4
    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    #@7
    .line 2298
    const v0, 0x20054

    #@a
    invoke-virtual {p0, v0, v2, v2}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@d
    .line 2296
    return-void
.end method

.method public startFilteringMulticastV6Packets()V
    .locals 3

    #@0
    .prologue
    .line 2313
    const v0, 0x20054

    #@3
    const/4 v1, 0x1

    #@4
    const/4 v2, 0x0

    #@5
    invoke-virtual {p0, v0, v1, v2}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@8
    .line 2312
    return-void
.end method

.method startRadioScanStats()V
    .locals 2

    #@0
    .prologue
    .line 1774
    const/4 v1, 0x0

    #@1
    invoke-virtual {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->getWifiLinkLayerStats(Z)Landroid/net/wifi/WifiLinkLayerStats;

    #@4
    move-result-object v0

    #@5
    .line 1775
    .local v0, "stats":Landroid/net/wifi/WifiLinkLayerStats;
    if-eqz v0, :cond_0

    #@7
    .line 1776
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->on_time:I

    #@9
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTimeStartScan:I

    #@b
    .line 1777
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->tx_time:I

    #@d
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTimeStartScan:I

    #@f
    .line 1778
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->rx_time:I

    #@11
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTimeStartScan:I

    #@13
    .line 1779
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->on_time:I

    #@15
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mOnTime:I

    #@17
    .line 1780
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->tx_time:I

    #@19
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mTxTime:I

    #@1b
    .line 1781
    iget v1, v0, Landroid/net/wifi/WifiLinkLayerStats;->rx_time:I

    #@1d
    iput v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mRxTime:I

    #@1f
    .line 1773
    :cond_0
    return-void
.end method

.method public startScan(IILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V
    .locals 4
    .param p1, "callingUid"    # I
    .param p2, "scanCounter"    # I
    .param p3, "settings"    # Landroid/net/wifi/ScanSettings;
    .param p4, "workSource"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 1618
    new-instance v0, Landroid/os/Bundle;

    #@2
    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    #@5
    .line 1619
    .local v0, "bundle":Landroid/os/Bundle;
    const-string/jumbo v1, "customized_scan_settings"

    #@8
    invoke-virtual {v0, v1, p3}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    #@b
    .line 1620
    const-string/jumbo v1, "customized_scan_worksource"

    #@e
    invoke-virtual {v0, v1, p4}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    #@11
    .line 1621
    const-string/jumbo v1, "scan_request_time"

    #@14
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@17
    move-result-wide v2

    #@18
    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Bundle;->putLong(Ljava/lang/String;J)V

    #@1b
    .line 1622
    const v1, 0x20047

    #@1e
    invoke-virtual {p0, v1, p1, p2, v0}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(IIILjava/lang/Object;)V

    #@21
    .line 1617
    return-void
.end method

.method startScanForConfiguration(Landroid/net/wifi/WifiConfiguration;Z)Z
    .locals 11
    .param p1, "config"    # Landroid/net/wifi/WifiConfiguration;
    .param p2, "restrictChannelList"    # Z

    #@0
    .prologue
    const/4 v10, 0x0

    #@1
    const/4 v9, 0x0

    #@2
    const/4 v8, 0x1

    #@3
    .line 7872
    if-nez p1, :cond_0

    #@5
    .line 7873
    return v10

    #@6
    .line 7881
    :cond_0
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@8
    invoke-virtual {v6, p1}, Lcom/android/server/wifi/WifiConfigStore;->getScanDetailCache(Landroid/net/wifi/WifiConfiguration;)Lcom/android/server/wifi/ScanDetailCache;

    #@b
    move-result-object v5

    #@c
    .line 7882
    .local v5, "scanDetailCache":Lcom/android/server/wifi/ScanDetailCache;
    if-eqz v5, :cond_1

    #@e
    .line 7883
    iget-object v6, p1, Landroid/net/wifi/WifiConfiguration;->allowedKeyManagement:Ljava/util/BitSet;

    #@10
    invoke-virtual {v6, v8}, Ljava/util/BitSet;->get(I)Z

    #@13
    move-result v6

    #@14
    if-eqz v6, :cond_1

    #@16
    .line 7884
    invoke-virtual {v5}, Lcom/android/server/wifi/ScanDetailCache;->size()I

    #@19
    move-result v6

    #@1a
    const/4 v7, 0x6

    #@1b
    if-le v6, v7, :cond_2

    #@1d
    .line 7886
    :cond_1
    return v8

    #@1e
    .line 7888
    :cond_2
    iget-object v6, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@20
    .line 7889
    const v7, 0x36ee80

    #@23
    .line 7888
    invoke-virtual {v6, p1, v7, p2}, Lcom/android/server/wifi/WifiConfigStore;->makeChannelList(Landroid/net/wifi/WifiConfiguration;IZ)Ljava/util/HashSet;

    #@26
    move-result-object v2

    #@27
    .line 7890
    .local v2, "channels":Ljava/util/HashSet;, "Ljava/util/HashSet<Ljava/lang/Integer;>;"
    if-eqz v2, :cond_6

    #@29
    invoke-virtual {v2}, Ljava/util/HashSet;->size()I

    #@2c
    move-result v6

    #@2d
    if-eqz v6, :cond_6

    #@2f
    .line 7891
    new-instance v4, Ljava/lang/StringBuilder;

    #@31
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@34
    .line 7892
    .local v4, "freqs":Ljava/lang/StringBuilder;
    const/4 v3, 0x1

    #@35
    .line 7893
    .local v3, "first":Z
    invoke-interface {v2}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@38
    move-result-object v1

    #@39
    .local v1, "channel$iterator":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@3c
    move-result v6

    #@3d
    if-eqz v6, :cond_4

    #@3f
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@42
    move-result-object v0

    #@43
    check-cast v0, Ljava/lang/Integer;

    #@45
    .line 7894
    .local v0, "channel":Ljava/lang/Integer;
    if-nez v3, :cond_3

    #@47
    .line 7895
    const-string/jumbo v6, ","

    #@4a
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4d
    .line 7896
    :cond_3
    invoke-virtual {v0}, Ljava/lang/Integer;->toString()Ljava/lang/String;

    #@50
    move-result-object v6

    #@51
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@54
    .line 7897
    const/4 v3, 0x0

    #@55
    goto :goto_0

    #@56
    .line 7900
    .end local v0    # "channel":Ljava/lang/Integer;
    :cond_4
    new-instance v6, Ljava/lang/StringBuilder;

    #@58
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@5b
    const-string/jumbo v7, "starting scan for "

    #@5e
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@61
    move-result-object v6

    #@62
    invoke-virtual {p1}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@65
    move-result-object v7

    #@66
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@69
    move-result-object v6

    #@6a
    const-string/jumbo v7, " with "

    #@6d
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@70
    move-result-object v6

    #@71
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@74
    move-result-object v6

    #@75
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@78
    move-result-object v6

    #@79
    invoke-virtual {p0, v6}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@7c
    .line 7905
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@7f
    move-result-object v6

    #@80
    .line 7903
    invoke-direct {p0, v8, v6}, Lcom/android/server/wifi/WifiStateMachine;->startScanNative(ILjava/lang/String;)Z

    #@83
    move-result v6

    #@84
    if-eqz v6, :cond_5

    #@86
    .line 7907
    const/4 v6, -0x2

    #@87
    invoke-direct {p0, v6, v9}, Lcom/android/server/wifi/WifiStateMachine;->noteScanStart(ILandroid/os/WorkSource;)V

    #@8a
    .line 7908
    sget v6, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_OK:I

    #@8c
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@8e
    .line 7913
    :goto_1
    return v8

    #@8f
    .line 7911
    :cond_5
    sget v6, Lcom/android/server/wifi/WifiStateMachine;->MESSAGE_HANDLING_STATUS_HANDLING_ERROR:I

    #@91
    iput v6, p0, Lcom/android/server/wifi/WifiStateMachine;->messageHandlingStatus:I

    #@93
    goto :goto_1

    #@94
    .line 7915
    .end local v1    # "channel$iterator":Ljava/util/Iterator;
    .end local v3    # "first":Z
    .end local v4    # "freqs":Ljava/lang/StringBuilder;
    :cond_6
    sget-boolean v6, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@96
    if-eqz v6, :cond_7

    #@98
    new-instance v6, Ljava/lang/StringBuilder;

    #@9a
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@9d
    const-string/jumbo v7, "no channels for "

    #@a0
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a3
    move-result-object v6

    #@a4
    invoke-virtual {p1}, Landroid/net/wifi/WifiConfiguration;->configKey()Ljava/lang/String;

    #@a7
    move-result-object v7

    #@a8
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ab
    move-result-object v6

    #@ac
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@af
    move-result-object v6

    #@b0
    invoke-virtual {p0, v6}, Lcom/android/server/wifi/WifiStateMachine;->logd(Ljava/lang/String;)V

    #@b3
    .line 7916
    :cond_7
    return v10
.end method

.method public startScanForUntrustedSettingChange()V
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 1604
    const/4 v0, -0x4

    #@2
    const/4 v1, 0x0

    #@3
    invoke-virtual {p0, v0, v1, v2, v2}, Lcom/android/server/wifi/WifiStateMachine;->startScan(IILandroid/net/wifi/ScanSettings;Landroid/os/WorkSource;)V

    #@6
    .line 1603
    return-void
.end method

.method stopDhcp()V
    .locals 2

    #@0
    .prologue
    .line 4998
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 5000
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->handlePostDhcpSetup()V

    #@7
    .line 5001
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpStateMachine:Landroid/net/BaseDhcpStateMachine;

    #@9
    const v1, 0x30002

    #@c
    invoke-virtual {v0, v1}, Landroid/net/BaseDhcpStateMachine;->sendMessage(I)V

    #@f
    .line 4997
    :cond_0
    return-void
.end method

.method public stopFilteringMulticastV4Packets()V
    .locals 2

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2305
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mFilteringMulticastV4Packets:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@3
    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    #@6
    .line 2306
    const v0, 0x20055

    #@9
    invoke-virtual {p0, v0, v1, v1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@c
    .line 2304
    return-void
.end method

.method public stopFilteringMulticastV6Packets()V
    .locals 3

    #@0
    .prologue
    .line 2320
    const v0, 0x20055

    #@3
    const/4 v1, 0x1

    #@4
    const/4 v2, 0x0

    #@5
    invoke-virtual {p0, v0, v1, v2}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(III)V

    #@8
    .line 2319
    return-void
.end method

.method public syncAddOrUpdateNetwork(Lcom/android/internal/util/AsyncChannel;Landroid/net/wifi/WifiConfiguration;)I
    .locals 3
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;
    .param p2, "config"    # Landroid/net/wifi/WifiConfiguration;

    #@0
    .prologue
    .line 2139
    const v2, 0x20034

    #@3
    invoke-virtual {p1, v2, p2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(ILjava/lang/Object;)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 2140
    .local v1, "resultMsg":Landroid/os/Message;
    iget v0, v1, Landroid/os/Message;->arg1:I

    #@9
    .line 2141
    .local v0, "result":I
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@c
    .line 2142
    return v0
.end method

.method public syncDisableNetwork(Lcom/android/internal/util/AsyncChannel;I)Z
    .locals 4
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;
    .param p2, "netId"    # I

    #@0
    .prologue
    .line 2241
    const v2, 0x25011

    #@3
    invoke-virtual {p1, v2, p2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(II)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 2242
    .local v1, "resultMsg":Landroid/os/Message;
    iget v2, v1, Landroid/os/Message;->arg1:I

    #@9
    const v3, 0x25012

    #@c
    if-eq v2, v3, :cond_0

    #@e
    const/4 v0, 0x1

    #@f
    .line 2243
    .local v0, "result":Z
    :goto_0
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@12
    .line 2244
    return v0

    #@13
    .line 2242
    .end local v0    # "result":Z
    :cond_0
    const/4 v0, 0x0

    #@14
    .restart local v0    # "result":Z
    goto :goto_0
.end method

.method public syncEnableNetwork(Lcom/android/internal/util/AsyncChannel;IZ)Z
    .locals 4
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;
    .param p2, "netId"    # I
    .param p3, "disableOthers"    # Z

    #@0
    .prologue
    .line 2228
    if-eqz p3, :cond_0

    #@2
    const/4 v2, 0x1

    #@3
    .line 2227
    :goto_0
    const v3, 0x20036

    #@6
    invoke-virtual {p1, v3, p2, v2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(III)Landroid/os/Message;

    #@9
    move-result-object v1

    #@a
    .line 2229
    .local v1, "resultMsg":Landroid/os/Message;
    iget v2, v1, Landroid/os/Message;->arg1:I

    #@c
    const/4 v3, -0x1

    #@d
    if-eq v2, v3, :cond_1

    #@f
    const/4 v0, 0x1

    #@10
    .line 2230
    .local v0, "result":Z
    :goto_1
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@13
    .line 2231
    return v0

    #@14
    .line 2228
    .end local v0    # "result":Z
    .end local v1    # "resultMsg":Landroid/os/Message;
    :cond_0
    const/4 v2, 0x0

    #@15
    goto :goto_0

    #@16
    .line 2229
    .restart local v1    # "resultMsg":Landroid/os/Message;
    :cond_1
    const/4 v0, 0x0

    #@17
    .restart local v0    # "result":Z
    goto :goto_1
.end method

.method public syncGetChannelList(Lcom/android/internal/util/AsyncChannel;)Ljava/util/List;
    .locals 13
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/internal/util/AsyncChannel;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/net/wifi/WifiChannel;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    const/4 v9, 0x0

    #@1
    const/4 v8, 0x0

    #@2
    .line 1571
    const v10, 0x2003c

    #@5
    invoke-virtual {p1, v10}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(I)Landroid/os/Message;

    #@8
    move-result-object v7

    #@9
    .line 1572
    .local v7, "resultMsg":Landroid/os/Message;
    const/4 v5, 0x0

    #@a
    .line 1573
    .local v5, "list":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/WifiChannel;>;"
    iget-object v10, v7, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@c
    if-eqz v10, :cond_3

    #@e
    .line 1574
    new-instance v5, Ljava/util/ArrayList;

    #@10
    .end local v5    # "list":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/WifiChannel;>;"
    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    #@13
    .line 1575
    .local v5, "list":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/WifiChannel;>;"
    iget-object v2, v7, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@15
    check-cast v2, Ljava/lang/String;

    #@17
    .line 1576
    .local v2, "freqs":Ljava/lang/String;
    const-string/jumbo v10, "\n"

    #@1a
    invoke-virtual {v2, v10}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@1d
    move-result-object v4

    #@1e
    .line 1577
    .local v4, "lines":[Ljava/lang/String;
    array-length v10, v4

    #@1f
    :goto_0
    if-ge v9, v10, :cond_3

    #@21
    aget-object v3, v4, v9

    #@23
    .line 1578
    .local v3, "line":Ljava/lang/String;
    const-string/jumbo v11, "MHz"

    #@26
    invoke-virtual {v3, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@29
    move-result v11

    #@2a
    if-eqz v11, :cond_2

    #@2c
    .line 1580
    new-instance v0, Landroid/net/wifi/WifiChannel;

    #@2e
    invoke-direct {v0}, Landroid/net/wifi/WifiChannel;-><init>()V

    #@31
    .line 1581
    .local v0, "c":Landroid/net/wifi/WifiChannel;
    const-string/jumbo v11, " "

    #@34
    invoke-virtual {v3, v11}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@37
    move-result-object v6

    #@38
    .line 1582
    .local v6, "prop":[Ljava/lang/String;
    array-length v11, v6

    #@39
    const/4 v12, 0x5

    #@3a
    if-ge v11, v12, :cond_1

    #@3c
    .line 1577
    .end local v0    # "c":Landroid/net/wifi/WifiChannel;
    .end local v6    # "prop":[Ljava/lang/String;
    :cond_0
    :goto_1
    add-int/lit8 v9, v9, 0x1

    #@3e
    goto :goto_0

    #@3f
    .line 1584
    .restart local v0    # "c":Landroid/net/wifi/WifiChannel;
    .restart local v6    # "prop":[Ljava/lang/String;
    :cond_1
    const/4 v11, 0x1

    #@40
    :try_start_0
    aget-object v11, v6, v11

    #@42
    invoke-static {v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@45
    move-result v11

    #@46
    iput v11, v0, Landroid/net/wifi/WifiChannel;->channelNum:I

    #@48
    .line 1585
    const/4 v11, 0x3

    #@49
    aget-object v11, v6, v11

    #@4b
    invoke-static {v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@4e
    move-result v11

    #@4f
    iput v11, v0, Landroid/net/wifi/WifiChannel;->freqMHz:I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@51
    .line 1588
    :goto_2
    const-string/jumbo v11, "(DFS)"

    #@54
    invoke-virtual {v3, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@57
    move-result v11

    #@58
    iput-boolean v11, v0, Landroid/net/wifi/WifiChannel;->isDFS:Z

    #@5a
    .line 1589
    invoke-interface {v5, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    #@5d
    goto :goto_1

    #@5e
    .line 1590
    .end local v0    # "c":Landroid/net/wifi/WifiChannel;
    .end local v6    # "prop":[Ljava/lang/String;
    :cond_2
    const-string/jumbo v11, "Mode[B] Channels:"

    #@61
    invoke-virtual {v3, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@64
    move-result v11

    #@65
    if-eqz v11, :cond_0

    #@67
    .line 1595
    .end local v2    # "freqs":Ljava/lang/String;
    .end local v3    # "line":Ljava/lang/String;
    .end local v4    # "lines":[Ljava/lang/String;
    .end local v5    # "list":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/WifiChannel;>;"
    :cond_3
    invoke-virtual {v7}, Landroid/os/Message;->recycle()V

    #@6a
    .line 1596
    if-eqz v5, :cond_4

    #@6c
    invoke-interface {v5}, Ljava/util/List;->size()I

    #@6f
    move-result v9

    #@70
    if-lez v9, :cond_4

    #@72
    :goto_3
    return-object v5

    #@73
    :cond_4
    move-object v5, v8

    #@74
    goto :goto_3

    #@75
    .line 1586
    .restart local v0    # "c":Landroid/net/wifi/WifiChannel;
    .restart local v2    # "freqs":Ljava/lang/String;
    .restart local v3    # "line":Ljava/lang/String;
    .restart local v4    # "lines":[Ljava/lang/String;
    .restart local v5    # "list":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/WifiChannel;>;"
    .restart local v6    # "prop":[Ljava/lang/String;
    :catch_0
    move-exception v1

    #@76
    .local v1, "e":Ljava/lang/NumberFormatException;
    goto :goto_2
.end method

.method public syncGetConfiguredNetworks(ILcom/android/internal/util/AsyncChannel;)Ljava/util/List;
    .locals 3
    .param p1, "uuid"    # I
    .param p2, "channel"    # Lcom/android/internal/util/AsyncChannel;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Lcom/android/internal/util/AsyncChannel;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/net/wifi/WifiConfiguration;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    .line 2153
    const v2, 0x2003b

    #@3
    invoke-virtual {p2, v2, p1}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(II)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 2154
    .local v1, "resultMsg":Landroid/os/Message;
    iget-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@9
    check-cast v0, Ljava/util/List;

    #@b
    .line 2155
    .local v0, "result":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/WifiConfiguration;>;"
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@e
    .line 2156
    return-object v0
.end method

.method public syncGetConnectionStatistics(Lcom/android/internal/util/AsyncChannel;)Landroid/net/wifi/WifiConnectionStatistics;
    .locals 3
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;

    #@0
    .prologue
    .line 2180
    const v2, 0x2004c

    #@3
    invoke-virtual {p1, v2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(I)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 2181
    .local v1, "resultMsg":Landroid/os/Message;
    iget-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@9
    check-cast v0, Landroid/net/wifi/WifiConnectionStatistics;

    #@b
    .line 2182
    .local v0, "result":Landroid/net/wifi/WifiConnectionStatistics;
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@e
    .line 2183
    return-object v0
.end method

.method public syncGetDhcpResults()Landroid/net/DhcpResults;
    .locals 3

    #@0
    .prologue
    .line 2049
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResultsLock:Ljava/lang/Object;

    #@2
    monitor-enter v1

    #@3
    .line 2050
    :try_start_0
    new-instance v0, Landroid/net/DhcpResults;

    #@5
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mDhcpResults:Landroid/net/DhcpResults;

    #@7
    invoke-direct {v0, v2}, Landroid/net/DhcpResults;-><init>(Landroid/net/DhcpResults;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@a
    monitor-exit v1

    #@b
    return-object v0

    #@c
    .line 2049
    :catchall_0
    move-exception v0

    #@d
    monitor-exit v1

    #@e
    throw v0
.end method

.method public syncGetLinkLayerStats(Lcom/android/internal/util/AsyncChannel;)Landroid/net/wifi/WifiLinkLayerStats;
    .locals 3
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;

    #@0
    .prologue
    .line 2201
    const v2, 0x2003f

    #@3
    invoke-virtual {p1, v2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(I)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 2202
    .local v1, "resultMsg":Landroid/os/Message;
    iget-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@9
    check-cast v0, Landroid/net/wifi/WifiLinkLayerStats;

    #@b
    .line 2203
    .local v0, "result":Landroid/net/wifi/WifiLinkLayerStats;
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@e
    .line 2204
    return-object v0
.end method

.method public syncGetMatchingWifiConfig(Landroid/net/wifi/ScanResult;Lcom/android/internal/util/AsyncChannel;)Landroid/net/wifi/WifiConfiguration;
    .locals 2
    .param p1, "scanResult"    # Landroid/net/wifi/ScanResult;
    .param p2, "channel"    # Lcom/android/internal/util/AsyncChannel;

    #@0
    .prologue
    .line 2168
    const v1, 0x20063

    #@3
    invoke-virtual {p2, v1, p1}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(ILjava/lang/Object;)Landroid/os/Message;

    #@6
    move-result-object v0

    #@7
    .line 2169
    .local v0, "resultMsg":Landroid/os/Message;
    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@9
    check-cast v1, Landroid/net/wifi/WifiConfiguration;

    #@b
    return-object v1
.end method

.method public syncGetPrivilegedConfiguredNetwork(Lcom/android/internal/util/AsyncChannel;)Ljava/util/List;
    .locals 3
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/internal/util/AsyncChannel;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/net/wifi/WifiConfiguration;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    .line 2161
    const v2, 0x2003e

    #@3
    .line 2160
    invoke-virtual {p1, v2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(I)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 2162
    .local v1, "resultMsg":Landroid/os/Message;
    iget-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@9
    check-cast v0, Ljava/util/List;

    #@b
    .line 2163
    .local v0, "result":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/WifiConfiguration;>;"
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@e
    .line 2164
    return-object v0
.end method

.method public syncGetScanResultsList()Ljava/util/List;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/net/wifi/ScanResult;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    .line 2077
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanResultCache:Landroid/util/LruCache;

    #@2
    monitor-enter v4

    #@3
    .line 2078
    :try_start_0
    new-instance v2, Ljava/util/ArrayList;

    #@5
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@8
    .line 2079
    .local v2, "scanList":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/ScanResult;>;"
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mScanResults:Ljava/util/List;

    #@a
    invoke-interface {v3}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@d
    move-result-object v1

    #@e
    .local v1, "result$iterator":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@11
    move-result v3

    #@12
    if-eqz v3, :cond_0

    #@14
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@17
    move-result-object v0

    #@18
    check-cast v0, Lcom/android/server/wifi/ScanDetail;

    #@1a
    .line 2080
    .local v0, "result":Lcom/android/server/wifi/ScanDetail;
    new-instance v3, Landroid/net/wifi/ScanResult;

    #@1c
    invoke-virtual {v0}, Lcom/android/server/wifi/ScanDetail;->getScanResult()Landroid/net/wifi/ScanResult;

    #@1f
    move-result-object v5

    #@20
    invoke-direct {v3, v5}, Landroid/net/wifi/ScanResult;-><init>(Landroid/net/wifi/ScanResult;)V

    #@23
    invoke-interface {v2, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@26
    goto :goto_0

    #@27
    .line 2077
    .end local v0    # "result":Lcom/android/server/wifi/ScanDetail;
    .end local v1    # "result$iterator":Ljava/util/Iterator;
    .end local v2    # "scanList":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/ScanResult;>;"
    :catchall_0
    move-exception v3

    #@28
    monitor-exit v4

    #@29
    throw v3

    #@2a
    .restart local v1    # "result$iterator":Ljava/util/Iterator;
    .restart local v2    # "scanList":Ljava/util/List;, "Ljava/util/List<Landroid/net/wifi/ScanResult;>;"
    :cond_0
    monitor-exit v4

    #@2b
    .line 2082
    return-object v2
.end method

.method public syncGetSupportedFeatures(Lcom/android/internal/util/AsyncChannel;)I
    .locals 3
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;

    #@0
    .prologue
    .line 2191
    const v2, 0x2003d

    #@3
    invoke-virtual {p1, v2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(I)Landroid/os/Message;

    #@6
    move-result-object v0

    #@7
    .line 2192
    .local v0, "resultMsg":Landroid/os/Message;
    iget v1, v0, Landroid/os/Message;->arg1:I

    #@9
    .line 2193
    .local v1, "supportedFeatureSet":I
    invoke-virtual {v0}, Landroid/os/Message;->recycle()V

    #@c
    .line 2194
    return v1
.end method

.method public syncGetWifiApConfiguration()Landroid/net/wifi/WifiConfiguration;
    .locals 4

    #@0
    .prologue
    .line 1979
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApConfigChannel:Lcom/android/internal/util/AsyncChannel;

    #@2
    const v3, 0x2001b

    #@5
    invoke-virtual {v2, v3}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(I)Landroid/os/Message;

    #@8
    move-result-object v0

    #@9
    .line 1980
    .local v0, "resultMsg":Landroid/os/Message;
    iget-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    #@b
    check-cast v1, Landroid/net/wifi/WifiConfiguration;

    #@d
    .line 1981
    .local v1, "ret":Landroid/net/wifi/WifiConfiguration;
    invoke-virtual {v0}, Landroid/os/Message;->recycle()V

    #@10
    .line 1982
    return-object v1
.end method

.method public syncGetWifiApState()I
    .locals 1

    #@0
    .prologue
    .line 2016
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public syncGetWifiApStateByName()Ljava/lang/String;
    .locals 1

    #@0
    .prologue
    .line 2023
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiApState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@5
    move-result v0

    #@6
    packed-switch v0, :pswitch_data_0

    #@9
    .line 2035
    const-string/jumbo v0, "[invalid state]"

    #@c
    return-object v0

    #@d
    .line 2025
    :pswitch_0
    const-string/jumbo v0, "disabling"

    #@10
    return-object v0

    #@11
    .line 2027
    :pswitch_1
    const-string/jumbo v0, "disabled"

    #@14
    return-object v0

    #@15
    .line 2029
    :pswitch_2
    const-string/jumbo v0, "enabling"

    #@18
    return-object v0

    #@19
    .line 2031
    :pswitch_3
    const-string/jumbo v0, "enabled"

    #@1c
    return-object v0

    #@1d
    .line 2033
    :pswitch_4
    const-string/jumbo v0, "failed"

    #@20
    return-object v0

    #@21
    .line 2023
    nop

    #@22
    :pswitch_data_0
    .packed-switch 0xa
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
    .end packed-switch
.end method

.method public syncGetWifiState()I
    .locals 1

    #@0
    .prologue
    .line 1989
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public syncGetWifiStateByName()Ljava/lang/String;
    .locals 1

    #@0
    .prologue
    .line 1996
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiState:Ljava/util/concurrent/atomic/AtomicInteger;

    #@2
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    #@5
    move-result v0

    #@6
    packed-switch v0, :pswitch_data_0

    #@9
    .line 2008
    const-string/jumbo v0, "[invalid state]"

    #@c
    return-object v0

    #@d
    .line 1998
    :pswitch_0
    const-string/jumbo v0, "disabling"

    #@10
    return-object v0

    #@11
    .line 2000
    :pswitch_1
    const-string/jumbo v0, "disabled"

    #@14
    return-object v0

    #@15
    .line 2002
    :pswitch_2
    const-string/jumbo v0, "enabling"

    #@18
    return-object v0

    #@19
    .line 2004
    :pswitch_3
    const-string/jumbo v0, "enabled"

    #@1c
    return-object v0

    #@1d
    .line 2006
    :pswitch_4
    const-string/jumbo v0, "unknown state"

    #@20
    return-object v0

    #@21
    .line 1996
    nop

    #@22
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
    .end packed-switch
.end method

.method public syncGetWpsNfcConfigurationToken(I)Ljava/lang/String;
    .locals 1
    .param p1, "netId"    # I

    #@0
    .prologue
    .line 2253
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiNative:Lcom/android/server/wifi/WifiNative;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wifi/WifiNative;->getNfcWpsConfigurationToken(I)Ljava/lang/String;

    #@5
    move-result-object v0

    #@6
    return-object v0
.end method

.method public syncPingSupplicant(Lcom/android/internal/util/AsyncChannel;)Z
    .locals 4
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;

    #@0
    .prologue
    .line 1564
    const v2, 0x20033

    #@3
    invoke-virtual {p1, v2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(I)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 1565
    .local v1, "resultMsg":Landroid/os/Message;
    iget v2, v1, Landroid/os/Message;->arg1:I

    #@9
    const/4 v3, -0x1

    #@a
    if-eq v2, v3, :cond_0

    #@c
    const/4 v0, 0x1

    #@d
    .line 1566
    .local v0, "result":Z
    :goto_0
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@10
    .line 1567
    return v0

    #@11
    .line 1565
    .end local v0    # "result":Z
    :cond_0
    const/4 v0, 0x0

    #@12
    .restart local v0    # "result":Z
    goto :goto_0
.end method

.method public syncRemoveNetwork(Lcom/android/internal/util/AsyncChannel;I)Z
    .locals 4
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;
    .param p2, "networkId"    # I

    #@0
    .prologue
    .line 2213
    const v2, 0x20035

    #@3
    invoke-virtual {p1, v2, p2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(II)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 2214
    .local v1, "resultMsg":Landroid/os/Message;
    iget v2, v1, Landroid/os/Message;->arg1:I

    #@9
    const/4 v3, -0x1

    #@a
    if-eq v2, v3, :cond_0

    #@c
    const/4 v0, 0x1

    #@d
    .line 2215
    .local v0, "result":Z
    :goto_0
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@10
    .line 2216
    return v0

    #@11
    .line 2214
    .end local v0    # "result":Z
    :cond_0
    const/4 v0, 0x0

    #@12
    .restart local v0    # "result":Z
    goto :goto_0
.end method

.method public syncRequestConnectionInfo()Landroid/net/wifi/WifiInfo;
    .locals 1

    #@0
    .prologue
    .line 2045
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@3
    move-result v0

    #@4
    invoke-direct {p0, v0}, Lcom/android/server/wifi/WifiStateMachine;->getWiFiInfoForUid(I)Landroid/net/wifi/WifiInfo;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public syncSaveConfig(Lcom/android/internal/util/AsyncChannel;)Z
    .locals 4
    .param p1, "channel"    # Lcom/android/internal/util/AsyncChannel;

    #@0
    .prologue
    .line 2460
    const v2, 0x2003a

    #@3
    invoke-virtual {p1, v2}, Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(I)Landroid/os/Message;

    #@6
    move-result-object v1

    #@7
    .line 2461
    .local v1, "resultMsg":Landroid/os/Message;
    iget v2, v1, Landroid/os/Message;->arg1:I

    #@9
    const/4 v3, -0x1

    #@a
    if-eq v2, v3, :cond_0

    #@c
    const/4 v0, 0x1

    #@d
    .line 2462
    .local v0, "result":Z
    :goto_0
    invoke-virtual {v1}, Landroid/os/Message;->recycle()V

    #@10
    .line 2463
    return v0

    #@11
    .line 2461
    .end local v0    # "result":Z
    :cond_0
    const/4 v0, 0x0

    #@12
    .restart local v0    # "result":Z
    goto :goto_0
.end method

.method unwantedNetwork(I)V
    .locals 1
    .param p1, "reason"    # I

    #@0
    .prologue
    .line 7827
    const v0, 0x20090

    #@3
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wifi/WifiStateMachine;->sendMessage(II)V

    #@6
    .line 7826
    return-void
.end method

.method updateAssociatedScanPermission()V
    .locals 8

    #@0
    .prologue
    .line 1387
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->useHalBasedAutoJoinOffload()Z

    #@3
    move-result v1

    #@4
    if-eqz v1, :cond_2

    #@6
    .line 1388
    invoke-virtual {p0}, Lcom/android/server/wifi/WifiStateMachine;->allowFullBandScanAndAssociated()Z

    #@9
    move-result v0

    #@a
    .line 1390
    .local v0, "allowed":Z
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@d
    move-result-wide v2

    #@e
    .line 1391
    .local v2, "now":J
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedModeGScanOffloadStarted:Z

    #@10
    if-eqz v1, :cond_0

    #@12
    if-eqz v0, :cond_3

    #@14
    .line 1398
    :cond_0
    :goto_0
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mConnectedModeGScanOffloadStarted:Z

    #@16
    if-nez v1, :cond_2

    #@18
    if-eqz v0, :cond_2

    #@1a
    .line 1399
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastScanPermissionUpdate:J

    #@1c
    sub-long v4, v2, v4

    #@1e
    const-wide/16 v6, 0x4e20

    #@20
    cmp-long v1, v4, v6

    #@22
    if-lez v1, :cond_2

    #@24
    .line 1402
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@26
    if-eqz v1, :cond_1

    #@28
    .line 1403
    const-string/jumbo v1, "WifiStateMachine"

    #@2b
    const-string/jumbo v4, " useHalBasedAutoJoinOffload restart offload"

    #@2e
    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@31
    .line 1405
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    #@33
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@36
    const-string/jumbo v4, "updatePermission "

    #@39
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3c
    move-result-object v1

    #@3d
    .line 1406
    iget-wide v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastScanPermissionUpdate:J

    #@3f
    sub-long v4, v2, v4

    #@41
    .line 1405
    invoke-virtual {v1, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@44
    move-result-object v1

    #@45
    .line 1406
    const-string/jumbo v4, "ms"

    #@48
    .line 1405
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v1

    #@4c
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4f
    move-result-object v1

    #@50
    invoke-direct {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->startGScanConnectedModeOffload(Ljava/lang/String;)Z

    #@53
    .line 1407
    iput-wide v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastScanPermissionUpdate:J

    #@55
    .line 1385
    .end local v0    # "allowed":Z
    .end local v2    # "now":J
    :cond_2
    return-void

    #@56
    .line 1392
    .restart local v0    # "allowed":Z
    .restart local v2    # "now":J
    :cond_3
    sget-boolean v1, Lcom/android/server/wifi/WifiStateMachine;->DBG:Z

    #@58
    if-eqz v1, :cond_4

    #@5a
    .line 1393
    const-string/jumbo v1, "WifiStateMachine"

    #@5d
    const-string/jumbo v4, " useHalBasedAutoJoinOffload stop offload"

    #@60
    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@63
    .line 1395
    :cond_4
    invoke-direct {p0}, Lcom/android/server/wifi/WifiStateMachine;->stopPnoOffload()V

    #@66
    .line 1396
    const-string/jumbo v1, " useHalBasedAutoJoinOffload"

    #@69
    invoke-direct {p0, v1}, Lcom/android/server/wifi/WifiStateMachine;->stopGScan(Ljava/lang/String;)Z

    #@6c
    goto :goto_0
.end method

.method public updateBatteryWorkSource(Landroid/os/WorkSource;)V
    .locals 5
    .param p1, "newSource"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 2467
    iget-object v2, p0, Lcom/android/server/wifi/WifiStateMachine;->mRunningWifiUids:Landroid/os/WorkSource;

    #@2
    monitor-enter v2

    #@3
    .line 2469
    if-eqz p1, :cond_0

    #@5
    .line 2470
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mRunningWifiUids:Landroid/os/WorkSource;

    #@7
    invoke-virtual {v1, p1}, Landroid/os/WorkSource;->set(Landroid/os/WorkSource;)V

    #@a
    .line 2472
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mIsRunning:Z

    #@c
    if-eqz v1, :cond_3

    #@e
    .line 2473
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mReportedRunning:Z

    #@10
    if-eqz v1, :cond_2

    #@12
    .line 2476
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastRunningWifiUids:Landroid/os/WorkSource;

    #@14
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mRunningWifiUids:Landroid/os/WorkSource;

    #@16
    invoke-virtual {v1, v3}, Landroid/os/WorkSource;->diff(Landroid/os/WorkSource;)Z

    #@19
    move-result v1

    #@1a
    if-eqz v1, :cond_1

    #@1c
    .line 2477
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@1e
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastRunningWifiUids:Landroid/os/WorkSource;

    #@20
    .line 2478
    iget-object v4, p0, Lcom/android/server/wifi/WifiStateMachine;->mRunningWifiUids:Landroid/os/WorkSource;

    #@22
    .line 2477
    invoke-interface {v1, v3, v4}, Lcom/android/internal/app/IBatteryStats;->noteWifiRunningChanged(Landroid/os/WorkSource;Landroid/os/WorkSource;)V

    #@25
    .line 2479
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastRunningWifiUids:Landroid/os/WorkSource;

    #@27
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mRunningWifiUids:Landroid/os/WorkSource;

    #@29
    invoke-virtual {v1, v3}, Landroid/os/WorkSource;->set(Landroid/os/WorkSource;)V

    #@2c
    .line 2495
    :cond_1
    :goto_0
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mWakeLock:Landroid/os/PowerManager$WakeLock;

    #@2e
    invoke-virtual {v1, p1}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@31
    :goto_1
    monitor-exit v2

    #@32
    .line 2466
    return-void

    #@33
    .line 2483
    :cond_2
    :try_start_1
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@35
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mRunningWifiUids:Landroid/os/WorkSource;

    #@37
    invoke-interface {v1, v3}, Lcom/android/internal/app/IBatteryStats;->noteWifiRunning(Landroid/os/WorkSource;)V

    #@3a
    .line 2484
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastRunningWifiUids:Landroid/os/WorkSource;

    #@3c
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mRunningWifiUids:Landroid/os/WorkSource;

    #@3e
    invoke-virtual {v1, v3}, Landroid/os/WorkSource;->set(Landroid/os/WorkSource;)V

    #@41
    .line 2485
    const/4 v1, 0x1

    #@42
    iput-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mReportedRunning:Z

    #@44
    goto :goto_0

    #@45
    .line 2496
    :catch_0
    move-exception v0

    #@46
    .local v0, "ignore":Landroid/os/RemoteException;
    goto :goto_1

    #@47
    .line 2488
    .end local v0    # "ignore":Landroid/os/RemoteException;
    :cond_3
    iget-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mReportedRunning:Z

    #@49
    if-eqz v1, :cond_1

    #@4b
    .line 2490
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@4d
    iget-object v3, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastRunningWifiUids:Landroid/os/WorkSource;

    #@4f
    invoke-interface {v1, v3}, Lcom/android/internal/app/IBatteryStats;->noteWifiStopped(Landroid/os/WorkSource;)V

    #@52
    .line 2491
    iget-object v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mLastRunningWifiUids:Landroid/os/WorkSource;

    #@54
    invoke-virtual {v1}, Landroid/os/WorkSource;->clear()V

    #@57
    .line 2492
    const/4 v1, 0x0

    #@58
    iput-boolean v1, p0, Lcom/android/server/wifi/WifiStateMachine;->mReportedRunning:Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@5a
    goto :goto_0

    #@5b
    .line 2467
    :catchall_0
    move-exception v1

    #@5c
    monitor-exit v2

    #@5d
    throw v1
.end method

.method useHalBasedAutoJoinOffload()Z
    .locals 1

    #@0
    .prologue
    .line 1338
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoEnableInDevSettings:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 1339
    iget-boolean v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mHalBasedPnoDriverSupported:Z

    #@6
    .line 1338
    if-eqz v0, :cond_0

    #@8
    .line 1340
    iget-object v0, p0, Lcom/android/server/wifi/WifiStateMachine;->mWifiConfigStore:Lcom/android/server/wifi/WifiConfigStore;

    #@a
    iget-object v0, v0, Lcom/android/server/wifi/WifiConfigStore;->enableHalBasedPno:Ljava/util/concurrent/atomic/AtomicBoolean;

    #@c
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    #@f
    move-result v0

    #@10
    .line 1338
    :goto_0
    return v0

    #@11
    :cond_0
    const/4 v0, 0x0

    #@12
    goto :goto_0
.end method
