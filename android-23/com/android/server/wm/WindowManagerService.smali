.class public Lcom/android/server/wm/WindowManagerService;
.super Landroid/view/IWindowManager$Stub;
.source "WindowManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Landroid/view/WindowManagerPolicy$WindowManagerFuncs;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wm/WindowManagerService$RotationWatcher;,
        Lcom/android/server/wm/WindowManagerService$SettingsObserver;,
        Lcom/android/server/wm/WindowManagerService$LayoutFields;,
        Lcom/android/server/wm/WindowManagerService$DragInputEventReceiver;,
        Lcom/android/server/wm/WindowManagerService$WindowChangeListener;,
        Lcom/android/server/wm/WindowManagerService$H;,
        Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;,
        Lcom/android/server/wm/WindowManagerService$LocalService;,
        Lcom/android/server/wm/WindowManagerService$1;,
        Lcom/android/server/wm/WindowManagerService$2;
    }
.end annotation


# static fields
.field private static final BOOT_ANIMATION_POLL_INTERVAL:I = 0xc8

.field private static final BOOT_ANIMATION_SERVICE:Ljava/lang/String; = "bootanim"

.field static final CUSTOM_SCREEN_ROTATION:Z = true

.field static final DEBUG:Z = false

.field static final DEBUG_ADD_REMOVE:Z = false

.field static final DEBUG_ANIM:Z = false

.field static final DEBUG_APP_ORIENTATION:Z = false

.field static final DEBUG_APP_TRANSITIONS:Z = false

.field static final DEBUG_BOOT:Z = false

.field static final DEBUG_CONFIGURATION:Z = false

.field static final DEBUG_DISPLAY:Z = false

.field static final DEBUG_DRAG:Z = false

.field static final DEBUG_FOCUS:Z = false

.field static final DEBUG_FOCUS_LIGHT:Z = false

.field static final DEBUG_INPUT:Z = false

.field static final DEBUG_INPUT_METHOD:Z = false

.field static final DEBUG_KEYGUARD:Z = false

.field static final DEBUG_LAYERS:Z = false

.field static final DEBUG_LAYOUT:Z = false

.field static final DEBUG_LAYOUT_REPEATS:Z = true

.field static final DEBUG_ORIENTATION:Z = false

.field static final DEBUG_POWER:Z = false

.field static final DEBUG_RESIZE:Z = false

.field static final DEBUG_SCREENSHOT:Z = false

.field static final DEBUG_SCREEN_ON:Z = false

.field static final DEBUG_STACK:Z = false

.field static final DEBUG_STARTING_WINDOW:Z = false

.field static final DEBUG_SURFACE_TRACE:Z = false

.field static final DEBUG_TASK_MOVEMENT:Z = false

.field static final DEBUG_TOKEN_MOVEMENT:Z = false

.field static final DEBUG_VISIBILITY:Z = false

.field static final DEBUG_WALLPAPER:Z = false

.field static final DEBUG_WALLPAPER_LIGHT:Z = false

.field static final DEBUG_WINDOW_MOVEMENT:Z = false

.field static final DEBUG_WINDOW_TRACE:Z = false

.field static final DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS:J = 0x12a05f200L

.field private static final DENSITY_OVERRIDE:Ljava/lang/String; = "ro.config.density_override"

.field static final HIDE_STACK_CRAWLS:Z = true

.field private static final INPUT_DEVICES_READY_FOR_SAFE_MODE_DETECTION_TIMEOUT_MILLIS:I = 0x3e8

.field static final LAST_ANR_LIFETIME_DURATION_MSECS:I = 0x6ddd00

.field static final LAYER_OFFSET_DIM:I = 0x1

.field static final LAYER_OFFSET_FOCUSED_STACK:I = 0x1

.field static final LAYER_OFFSET_THUMBNAIL:I = 0x4

.field static final LAYOUT_REPEAT_THRESHOLD:I = 0x4

.field static final MAX_ANIMATION_DURATION:I = 0x2710

.field private static final MAX_SCREENSHOT_RETRIES:I = 0x3

.field static final PROFILE_ORIENTATION:Z = false

.field private static final PROPERTY_EMULATOR_CIRCULAR:Ljava/lang/String; = "ro.emulator.circular"

.field static final SHOW_LIGHT_TRANSACTIONS:Z = false

.field static final SHOW_SURFACE_ALLOC:Z = false

.field static final SHOW_TRANSACTIONS:Z = false

.field private static final SIZE_OVERRIDE:Ljava/lang/String; = "ro.config.size_override"

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSTEM_SECURE:Ljava/lang/String; = "ro.secure"

.field static final TAG:Ljava/lang/String; = "WindowManager"

.field static final TYPE_LAYER_MULTIPLIER:I = 0x2710

.field static final TYPE_LAYER_OFFSET:I = 0x3e8

.field static final UPDATE_FOCUS_NORMAL:I = 0x0

.field static final UPDATE_FOCUS_PLACING_SURFACES:I = 0x2

.field static final UPDATE_FOCUS_WILL_ASSIGN_LAYERS:I = 0x1

.field static final UPDATE_FOCUS_WILL_PLACE_SURFACES:I = 0x3

.field static final WALLPAPER_DRAW_NORMAL:I = 0x0

.field static final WALLPAPER_DRAW_PENDING:I = 0x1

.field static final WALLPAPER_DRAW_PENDING_TIMEOUT_DURATION:J = 0x1f4L

.field static final WALLPAPER_DRAW_TIMEOUT:I = 0x2

.field static final WALLPAPER_TIMEOUT:J = 0x96L

.field static final WALLPAPER_TIMEOUT_RECOVERY:J = 0x2710L

.field static final WINDOWS_FREEZING_SCREENS_ACTIVE:I = 0x1

.field static final WINDOWS_FREEZING_SCREENS_NONE:I = 0x0

.field static final WINDOWS_FREEZING_SCREENS_TIMEOUT:I = 0x2

.field static final WINDOW_FREEZE_TIMEOUT_DURATION:I = 0x7d0

.field static final WINDOW_LAYER_MULTIPLIER:I = 0x5

.field static final localLOGV:Z


# instance fields
.field mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

.field final mActivityManager:Landroid/app/IActivityManager;

.field private final mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

.field final mAllowAnimationsInLowPowerMode:Z

.field final mAllowBootMessages:Z

.field mAllowTheaterModeWakeFromLayout:Z

.field mAltOrientation:Z

.field mAnimateWallpaperWithTarget:Z

.field mAnimationScheduled:Z

.field mAnimationsDisabled:Z

.field final mAnimator:Lcom/android/server/wm/WindowAnimator;

.field mAnimatorDurationScaleSetting:F

.field final mAppOps:Landroid/app/AppOpsManager;

.field final mAppTransition:Lcom/android/server/wm/AppTransition;

.field mAppsFreezingScreen:I

.field final mBatteryStats:Lcom/android/internal/app/IBatteryStats;

.field mBootAnimationStopped:Z

.field final mBroadcastReceiver:Landroid/content/BroadcastReceiver;

.field final mChoreographer:Landroid/view/Choreographer;

.field mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

.field mClientFreezingScreen:Z

.field final mClosingApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

.field mCompatibleScreenScale:F

.field final mContext:Landroid/content/Context;

.field mCurConfiguration:Landroid/content/res/Configuration;

.field mCurrentFocus:Lcom/android/server/wm/WindowState;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

.field mDeferredRotationPauseCount:I

.field final mDestroySurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayContents:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/DisplayContent;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayEnabled:Z

.field mDisplayFreezeTime:J

.field mDisplayFrozen:Z

.field final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field final mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

.field final mDisplayMetrics:Landroid/util/DisplayMetrics;

.field mDisplayReady:Z

.field final mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

.field mDragState:Lcom/android/server/wm/DragState;

.field final mDrawLockTimeoutMillis:J

.field mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

.field mEnterAnimId:I

.field private mEventDispatchingEnabled:Z

.field mExitAnimId:I

.field final mFinishedStarting:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mFocusMayChange:Z

.field mFocusedApp:Lcom/android/server/wm/AppWindowToken;

.field mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

.field mFocusedStackLayer:I

.field mForceDisplayEnabled:Z

.field final mForceRemoves:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mForcedAppOrientation:I

.field final mFxSession:Landroid/view/SurfaceSession;

.field final mH:Lcom/android/server/wm/WindowManagerService$H;

.field mHardKeyboardAvailable:Z

.field mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

.field final mHasPermanentDpad:Z

.field final mHaveInputMethods:Z

.field mHoldingScreenOn:Lcom/android/server/wm/Session;

.field mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mInLayout:Z

.field mInTouchMode:Z

.field final mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

.field mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

.field final mInputManager:Lcom/android/server/input/InputManagerService;

.field mInputMethodAnimLayerAdjustment:I

.field final mInputMethodDialogs:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mInputMethodManager:Lcom/android/internal/view/IInputMethodManager;

.field mInputMethodTarget:Lcom/android/server/wm/WindowState;

.field mInputMethodTargetWaitingAnim:Z

.field mInputMethodWindow:Lcom/android/server/wm/WindowState;

.field final mInputMonitor:Lcom/android/server/wm/InputMonitor;

.field mIsTouchDevice:Z

.field private final mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

.field private mKeyguardWaitingForActivityDrawn:Z

.field mLastANRState:Ljava/lang/String;

.field mLastDispatchedSystemUiVisibility:I

.field mLastDisplayFreezeDuration:I

.field mLastFinishedFreezeSource:Ljava/lang/Object;

.field mLastFocus:Lcom/android/server/wm/WindowState;

.field mLastKeyguardForcedOrientation:I

.field mLastStatusBarVisibility:I

.field mLastWallpaperDisplayOffsetX:I

.field mLastWallpaperDisplayOffsetY:I

.field mLastWallpaperTimeoutTime:J

.field mLastWallpaperX:F

.field mLastWallpaperXStep:F

.field mLastWallpaperY:F

.field mLastWallpaperYStep:F

.field mLastWindowForcedOrientation:I

.field private mLayoutRepeatCount:I

.field mLayoutSeq:I

.field final mLimitedAlphaCompositing:Z

.field mLosingFocus:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

.field private final mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mOnlyCore:Z

.field final mOpeningApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingRemove:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

.field private final mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

.field final mPolicy:Landroid/view/WindowManagerPolicy;

.field mPowerManager:Landroid/os/PowerManager;

.field mPowerManagerInternal:Landroid/os/PowerManagerInternal;

.field final mRealDisplayMetrics:Landroid/util/DisplayMetrics;

.field mRebuildTmp:[Lcom/android/server/wm/WindowState;

.field final mResizingWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRotation:I

.field mRotationWatchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$RotationWatcher;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field mScreenCaptureDisabled:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field private final mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

.field final mScreenRect:Landroid/graphics/Rect;

.field final mSessions:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/Session;",
            ">;"
        }
    .end annotation
.end field

.field mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

.field mShowImeWithHardKeyboard:Z

.field mShowingBootMessages:Z

.field mSkipAppTransitionAnimation:Z

.field mStackIdToStack:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/TaskStack;",
            ">;"
        }
    .end annotation
.end field

.field mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

.field mSystemBooted:Z

.field mSystemDecorLayer:I

.field mTaskIdToTask:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/Task;",
            ">;"
        }
    .end annotation
.end field

.field final mTempConfiguration:Landroid/content/res/Configuration;

.field private mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

.field final mTmpContentRect:Landroid/graphics/Rect;

.field final mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

.field final mTmpFloats:[F

.field final mTmpWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mTokenMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field private mTransactionSequence:I

.field mTransitionAnimationScaleSetting:F

.field mTraversalScheduled:Z

.field mTurnOnScreen:Z

.field mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

.field private mViewServer:Lcom/android/server/wm/ViewServer;

.field mWaitingForConfig:Z

.field mWaitingForDrawn:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mWaitingForDrawnCallback:Ljava/lang/Runnable;

.field mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

.field mWallpaperAnimLayerAdjustment:I

.field mWallpaperDrawState:I

.field mWallpaperTarget:Lcom/android/server/wm/WindowState;

.field private final mWallpaperTokens:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mWatermark:Lcom/android/server/wm/Watermark;

.field mWindowAnimationScaleSetting:F

.field private final mWindowChangeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WindowChangeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field private mWindowsChanged:Z

.field private mWindowsFreezingScreen:I


# direct methods
.method static synthetic -get0(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/KeyguardDisableHandler;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@2
    return-object v0
.end method

.method static synthetic -get1(Lcom/android/server/wm/WindowManagerService;)Z
    .locals 1

    #@0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@2
    return v0
.end method

.method static synthetic -set0(Lcom/android/server/wm/WindowManagerService;Z)Z
    .locals 0

    #@0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@2
    return p1
.end method

.method static synthetic -set1(Lcom/android/server/wm/WindowManagerService;I)I
    .locals 0

    #@0
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@2
    return p1
.end method

.method static synthetic -wrap0(Lcom/android/server/wm/WindowManagerService;)Z
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap1(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/WindowState;
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method static synthetic -wrap2(Lcom/android/server/wm/WindowManagerService;I)V
    .locals 0
    .param p1, "displayId"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayChangedLocked(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap3(Lcom/android/server/wm/WindowManagerService;I)V
    .locals 0
    .param p1, "displayId"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayRemovedLocked(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap4(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyFocusChanged()V

    #@3
    return-void
.end method

.method static synthetic -wrap5(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyWindowsChanged()V

    #@3
    return-void
.end method

.method static synthetic -wrap6(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@3
    return-void
.end method

.method static synthetic -wrap7(Lcom/android/server/wm/WindowManagerService;II)V
    .locals 0
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showStrictModeViolation(II)V

    #@3
    return-void
.end method

.method static synthetic -wrap8(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    #@3
    return-void
.end method

.method private constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V
    .locals 7
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    #@0
    .prologue
    .line 891
    invoke-direct {p0}, Landroid/view/IWindowManager$Stub;-><init>()V

    #@3
    .line 310
    new-instance v4, Lcom/android/server/wm/WindowManagerService$1;

    #@5
    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowManagerService$1;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@8
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    #@a
    .line 330
    const/4 v4, 0x1

    #@b
    new-array v4, v4, [I

    #@d
    const/4 v5, 0x0

    #@e
    const/4 v6, 0x0

    #@f
    aput v5, v4, v6

    #@11
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@13
    .line 344
    new-instance v4, Lcom/android/server/policy/PhoneWindowManager;

    #@15
    invoke-direct {v4}, Lcom/android/server/policy/PhoneWindowManager;-><init>()V

    #@18
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1a
    .line 357
    new-instance v4, Landroid/util/ArraySet;

    #@1c
    invoke-direct {v4}, Landroid/util/ArraySet;-><init>()V

    #@1f
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@21
    .line 364
    new-instance v4, Ljava/util/HashMap;

    #@23
    invoke-direct {v4}, Ljava/util/HashMap;-><init>()V

    #@26
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@28
    .line 369
    new-instance v4, Ljava/util/HashMap;

    #@2a
    invoke-direct {v4}, Ljava/util/HashMap;-><init>()V

    #@2d
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@2f
    .line 375
    new-instance v4, Ljava/util/ArrayList;

    #@31
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@34
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@36
    .line 388
    new-instance v4, Ljava/util/ArrayList;

    #@38
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@3b
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@3d
    .line 393
    new-instance v4, Ljava/util/ArrayList;

    #@3f
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@42
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@44
    .line 398
    const/16 v4, 0x14

    #@46
    new-array v4, v4, [Lcom/android/server/wm/WindowState;

    #@48
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    #@4a
    .line 403
    new-instance v4, Ljava/util/ArrayList;

    #@4c
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@4f
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@51
    .line 409
    new-instance v4, Ljava/util/ArrayList;

    #@53
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@56
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@58
    .line 415
    new-instance v4, Ljava/util/ArrayList;

    #@5a
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@5d
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@5f
    .line 420
    new-instance v4, Ljava/util/ArrayList;

    #@61
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@64
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@66
    .line 430
    const/16 v4, 0x14

    #@68
    new-array v4, v4, [Lcom/android/server/wm/WindowState;

    #@6a
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@6c
    .line 437
    new-instance v4, Landroid/util/SparseArray;

    #@6e
    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    #@71
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@73
    .line 452
    const/16 v4, 0x9

    #@75
    new-array v4, v4, [F

    #@77
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    #@79
    .line 453
    new-instance v4, Landroid/graphics/Rect;

    #@7b
    invoke-direct {v4}, Landroid/graphics/Rect;-><init>()V

    #@7e
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTmpContentRect:Landroid/graphics/Rect;

    #@80
    .line 457
    const/4 v4, 0x0

    #@81
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@83
    .line 458
    const/4 v4, 0x0

    #@84
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@86
    .line 459
    const/4 v4, 0x0

    #@87
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@89
    .line 460
    const/4 v4, 0x0

    #@8a
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@8c
    .line 461
    const/4 v4, 0x0

    #@8d
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    #@8f
    .line 468
    new-instance v4, Landroid/util/SparseArray;

    #@91
    const/4 v5, 0x2

    #@92
    invoke-direct {v4, v5}, Landroid/util/SparseArray;-><init>(I)V

    #@95
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@97
    .line 470
    const/4 v4, 0x0

    #@98
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@9a
    .line 471
    const/4 v4, -0x1

    #@9b
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@9d
    .line 472
    const/4 v4, 0x0

    #@9e
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@a0
    .line 484
    new-instance v4, Ljava/util/ArrayList;

    #@a2
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@a5
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@a7
    .line 487
    const/4 v4, 0x0

    #@a8
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    #@aa
    .line 488
    new-instance v4, Landroid/graphics/Rect;

    #@ac
    invoke-direct {v4}, Landroid/graphics/Rect;-><init>()V

    #@af
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    #@b1
    .line 490
    const/4 v4, 0x0

    #@b2
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    #@b4
    .line 491
    const/4 v4, 0x0

    #@b5
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@b7
    .line 492
    const-wide/16 v4, 0x0

    #@b9
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@bb
    .line 493
    const/4 v4, 0x0

    #@bc
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@be
    .line 494
    const/4 v4, 0x0

    #@bf
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@c1
    .line 495
    const/4 v4, 0x0

    #@c2
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@c4
    .line 500
    const/4 v4, 0x0

    #@c5
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@c7
    .line 502
    const/4 v4, 0x0

    #@c8
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@ca
    .line 503
    const/4 v4, 0x0

    #@cb
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@cd
    .line 504
    const/4 v4, -0x1

    #@ce
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@d0
    .line 505
    const/4 v4, 0x5

    #@d1
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@d3
    .line 507
    const/4 v4, 0x0

    #@d4
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@d6
    .line 510
    const/4 v4, 0x0

    #@d7
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@d9
    .line 512
    const/4 v4, 0x0

    #@da
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@dc
    .line 517
    new-instance v4, Landroid/content/res/Configuration;

    #@de
    invoke-direct {v4}, Landroid/content/res/Configuration;-><init>()V

    #@e1
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@e3
    .line 525
    const/4 v4, 0x0

    #@e4
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@e6
    .line 527
    new-instance v4, Landroid/util/ArraySet;

    #@e8
    invoke-direct {v4}, Landroid/util/ArraySet;-><init>()V

    #@eb
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@ed
    .line 528
    new-instance v4, Landroid/util/ArraySet;

    #@ef
    invoke-direct {v4}, Landroid/util/ArraySet;-><init>()V

    #@f2
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@f4
    .line 532
    new-instance v4, Landroid/util/DisplayMetrics;

    #@f6
    invoke-direct {v4}, Landroid/util/DisplayMetrics;-><init>()V

    #@f9
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@fb
    .line 533
    new-instance v4, Landroid/util/DisplayMetrics;

    #@fd
    invoke-direct {v4}, Landroid/util/DisplayMetrics;-><init>()V

    #@100
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@102
    .line 534
    new-instance v4, Landroid/util/DisplayMetrics;

    #@104
    invoke-direct {v4}, Landroid/util/DisplayMetrics;-><init>()V

    #@107
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@109
    .line 535
    new-instance v4, Landroid/util/DisplayMetrics;

    #@10b
    invoke-direct {v4}, Landroid/util/DisplayMetrics;-><init>()V

    #@10e
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    #@110
    .line 537
    new-instance v4, Lcom/android/server/wm/WindowManagerService$H;

    #@112
    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowManagerService$H;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@115
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@117
    .line 539
    invoke-static {}, Landroid/view/Choreographer;->getInstance()Landroid/view/Choreographer;

    #@11a
    move-result-object v4

    #@11b
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    #@11d
    .line 541
    const/4 v4, 0x0

    #@11e
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@120
    .line 542
    const/4 v4, 0x0

    #@121
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@123
    .line 546
    const/4 v4, 0x0

    #@124
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@126
    .line 552
    const/4 v4, 0x0

    #@127
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@129
    .line 553
    new-instance v4, Ljava/util/ArrayList;

    #@12b
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@12e
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@130
    .line 557
    new-instance v4, Ljava/util/ArrayList;

    #@132
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@135
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@137
    .line 590
    new-instance v4, Ljava/util/ArrayList;

    #@139
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@13c
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@13e
    .line 594
    const/4 v4, 0x0

    #@13f
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@141
    .line 597
    const/4 v4, 0x0

    #@142
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@144
    .line 600
    const/4 v4, 0x0

    #@145
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@147
    .line 602
    const/high16 v4, -0x40800000    # -1.0f

    #@149
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    #@14b
    .line 603
    const/high16 v4, -0x40800000    # -1.0f

    #@14d
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    #@14f
    .line 604
    const/high16 v4, -0x40800000    # -1.0f

    #@151
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    #@153
    .line 605
    const/high16 v4, -0x40800000    # -1.0f

    #@155
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    #@157
    .line 606
    const/high16 v4, -0x80000000

    #@159
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetX:I

    #@15b
    .line 607
    const/high16 v4, -0x80000000

    #@15d
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetY:I

    #@15f
    .line 624
    const/4 v4, 0x0

    #@160
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperDrawState:I

    #@162
    .line 630
    const/4 v4, 0x0

    #@163
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    #@165
    .line 632
    const/4 v4, 0x0

    #@166
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@168
    .line 637
    const/high16 v4, 0x3f800000    # 1.0f

    #@16a
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@16c
    .line 638
    const/high16 v4, 0x3f800000    # 1.0f

    #@16e
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@170
    .line 639
    const/high16 v4, 0x3f800000    # 1.0f

    #@172
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@174
    .line 640
    const/4 v4, 0x0

    #@175
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@177
    .line 655
    const/4 v4, 0x0

    #@178
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@17a
    .line 695
    new-instance v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@17c
    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowManagerService$LayoutFields;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@17f
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@181
    .line 708
    new-instance v4, Landroid/util/SparseArray;

    #@183
    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    #@186
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@188
    .line 712
    new-instance v4, Landroid/util/SparseArray;

    #@18a
    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    #@18d
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@18f
    .line 814
    new-instance v4, Ljava/util/ArrayList;

    #@191
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@194
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@196
    .line 815
    const/4 v4, 0x0

    #@197
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@199
    .line 822
    new-instance v4, Landroid/content/res/Configuration;

    #@19b
    invoke-direct {v4}, Landroid/content/res/Configuration;-><init>()V

    #@19e
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@1a0
    .line 834
    new-instance v4, Ljava/util/ArrayList;

    #@1a2
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    #@1a5
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@1a7
    .line 838
    new-instance v4, Lcom/android/server/wm/WindowManagerService$2;

    #@1a9
    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowManagerService$2;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@1ac
    .line 837
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    #@1ae
    .line 7539
    new-instance v4, Lcom/android/server/wm/InputMonitor;

    #@1b0
    invoke-direct {v4, p0}, Lcom/android/server/wm/InputMonitor;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@1b3
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@1b5
    .line 8924
    const/4 v4, 0x0

    #@1b6
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    #@1b8
    .line 893
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1ba
    .line 894
    iput-boolean p3, p0, Lcom/android/server/wm/WindowManagerService;->mHaveInputMethods:Z

    #@1bc
    .line 895
    iput-boolean p4, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    #@1be
    .line 896
    iput-boolean p5, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    #@1c0
    .line 897
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1c3
    move-result-object v4

    #@1c4
    .line 898
    const v5, 0x112000d

    #@1c7
    .line 897
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1ca
    move-result v4

    #@1cb
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mLimitedAlphaCompositing:Z

    #@1cd
    .line 899
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1d0
    move-result-object v4

    #@1d1
    .line 900
    const v5, 0x112007c

    #@1d4
    .line 899
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1d7
    move-result v4

    #@1d8
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@1da
    .line 901
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1dd
    move-result-object v4

    #@1de
    .line 902
    const v5, 0x1120097

    #@1e1
    .line 901
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1e4
    move-result v4

    #@1e5
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@1e7
    .line 903
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1ea
    move-result-object v4

    #@1eb
    .line 904
    const v5, 0x10e008d

    #@1ee
    .line 903
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getInteger(I)I

    #@1f1
    move-result v4

    #@1f2
    int-to-long v4, v4

    #@1f3
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    #@1f5
    .line 905
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1f8
    move-result-object v4

    #@1f9
    .line 906
    const v5, 0x1120099

    #@1fc
    .line 905
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1ff
    move-result v4

    #@200
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mAllowAnimationsInLowPowerMode:Z

    #@202
    .line 907
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@204
    .line 908
    const-class v4, Landroid/hardware/display/DisplayManagerInternal;

    #@206
    invoke-static {v4}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@209
    move-result-object v4

    #@20a
    check-cast v4, Landroid/hardware/display/DisplayManagerInternal;

    #@20c
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@20e
    .line 909
    new-instance v4, Lcom/android/server/wm/DisplaySettings;

    #@210
    invoke-direct {v4}, Lcom/android/server/wm/DisplaySettings;-><init>()V

    #@213
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@215
    .line 910
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@217
    invoke-virtual {v4}, Lcom/android/server/wm/DisplaySettings;->readSettingsLocked()V

    #@21a
    .line 912
    const-class v4, Landroid/view/WindowManagerPolicy;

    #@21c
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@21e
    invoke-static {v4, v5}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    #@221
    .line 914
    new-instance v4, Lcom/android/server/wm/PointerEventDispatcher;

    #@223
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@225
    const-string/jumbo v6, "WindowManager"

    #@228
    invoke-virtual {v5, v6}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    #@22b
    move-result-object v5

    #@22c
    invoke-direct {v4, v5}, Lcom/android/server/wm/PointerEventDispatcher;-><init>(Landroid/view/InputChannel;)V

    #@22f
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@231
    .line 916
    new-instance v4, Landroid/view/SurfaceSession;

    #@233
    invoke-direct {v4}, Landroid/view/SurfaceSession;-><init>()V

    #@236
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@238
    .line 917
    const-string/jumbo v4, "display"

    #@23b
    invoke-virtual {p1, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@23e
    move-result-object v4

    #@23f
    check-cast v4, Landroid/hardware/display/DisplayManager;

    #@241
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@243
    .line 918
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@245
    invoke-virtual {v4}, Landroid/hardware/display/DisplayManager;->getDisplays()[Landroid/view/Display;

    #@248
    move-result-object v1

    #@249
    .line 919
    .local v1, "displays":[Landroid/view/Display;
    const/4 v4, 0x0

    #@24a
    array-length v5, v1

    #@24b
    :goto_0
    if-ge v4, v5, :cond_0

    #@24d
    aget-object v0, v1, v4

    #@24f
    .line 920
    .local v0, "display":Landroid/view/Display;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    #@252
    .line 919
    add-int/lit8 v4, v4, 0x1

    #@254
    goto :goto_0

    #@255
    .line 923
    .end local v0    # "display":Landroid/view/Display;
    :cond_0
    new-instance v4, Lcom/android/server/wm/KeyguardDisableHandler;

    #@257
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@259
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@25b
    invoke-direct {v4, v5, v6}, Lcom/android/server/wm/KeyguardDisableHandler;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy;)V

    #@25e
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@260
    .line 925
    const-string/jumbo v4, "power"

    #@263
    invoke-virtual {p1, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@266
    move-result-object v4

    #@267
    check-cast v4, Landroid/os/PowerManager;

    #@269
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@26b
    .line 926
    const-class v4, Landroid/os/PowerManagerInternal;

    #@26d
    invoke-static {v4}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@270
    move-result-object v4

    #@271
    check-cast v4, Landroid/os/PowerManagerInternal;

    #@273
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@275
    .line 927
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@277
    .line 928
    new-instance v5, Lcom/android/server/wm/WindowManagerService$5;

    #@279
    invoke-direct {v5, p0}, Lcom/android/server/wm/WindowManagerService$5;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@27c
    .line 927
    invoke-virtual {v4, v5}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(Landroid/os/PowerManagerInternal$LowPowerModeListener;)V

    #@27f
    .line 939
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@281
    invoke-virtual {v4}, Landroid/os/PowerManagerInternal;->getLowPowerModeEnabled()Z

    #@284
    move-result v4

    #@285
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@287
    .line 940
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@289
    .line 941
    const-string/jumbo v5, "SCREEN_FROZEN"

    #@28c
    const/4 v6, 0x1

    #@28d
    .line 940
    invoke-virtual {v4, v6, v5}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@290
    move-result-object v4

    #@291
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@293
    .line 942
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@295
    const/4 v5, 0x0

    #@296
    invoke-virtual {v4, v5}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    #@299
    .line 944
    new-instance v4, Lcom/android/server/wm/AppTransition;

    #@29b
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@29d
    invoke-direct {v4, p1, v5}, Lcom/android/server/wm/AppTransition;-><init>(Landroid/content/Context;Landroid/os/Handler;)V

    #@2a0
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2a2
    .line 945
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2a4
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    #@2a6
    invoke-virtual {v4, v5}, Lcom/android/server/wm/AppTransition;->registerListenerLocked(Landroid/view/WindowManagerInternal$AppTransitionListener;)V

    #@2a9
    .line 947
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    #@2ac
    move-result-object v4

    #@2ad
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@2af
    .line 948
    invoke-static {}, Lcom/android/server/am/BatteryStatsService;->getService()Lcom/android/internal/app/IBatteryStats;

    #@2b2
    move-result-object v4

    #@2b3
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    #@2b5
    .line 949
    const-string/jumbo v4, "appops"

    #@2b8
    invoke-virtual {p1, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@2bb
    move-result-object v4

    #@2bc
    check-cast v4, Landroid/app/AppOpsManager;

    #@2be
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@2c0
    .line 951
    new-instance v3, Lcom/android/server/wm/WindowManagerService$6;

    #@2c2
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$6;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@2c5
    .line 956
    .local v3, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@2c7
    const/16 v5, 0x18

    #@2c9
    const/4 v6, 0x0

    #@2ca
    invoke-virtual {v4, v5, v6, v3}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    #@2cd
    .line 957
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@2cf
    const/16 v5, 0x2d

    #@2d1
    const/4 v6, 0x0

    #@2d2
    invoke-virtual {v4, v5, v6, v3}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    #@2d5
    .line 960
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@2d8
    move-result-object v4

    #@2d9
    .line 961
    const-string/jumbo v5, "window_animation_scale"

    #@2dc
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@2de
    .line 960
    invoke-static {v4, v5, v6}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@2e1
    move-result v4

    #@2e2
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@2e4
    .line 962
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@2e7
    move-result-object v4

    #@2e8
    .line 963
    const-string/jumbo v5, "transition_animation_scale"

    #@2eb
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@2ed
    .line 962
    invoke-static {v4, v5, v6}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@2f0
    move-result v4

    #@2f1
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@2f3
    .line 964
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@2f6
    move-result-object v4

    #@2f7
    .line 965
    const-string/jumbo v5, "animator_duration_scale"

    #@2fa
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@2fc
    .line 964
    invoke-static {v4, v5, v6}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@2ff
    move-result v4

    #@300
    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->setAnimatorDurationScale(F)V

    #@303
    .line 968
    new-instance v2, Landroid/content/IntentFilter;

    #@305
    invoke-direct {v2}, Landroid/content/IntentFilter;-><init>()V

    #@308
    .line 969
    .local v2, "filter":Landroid/content/IntentFilter;
    const-string/jumbo v4, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    #@30b
    invoke-virtual {v2, v4}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    #@30e
    .line 970
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@310
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    #@312
    invoke-virtual {v4, v5, v2}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@315
    .line 972
    new-instance v4, Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    #@317
    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@31a
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    #@31c
    .line 973
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->updateShowImeWithHardKeyboard()V

    #@31f
    .line 975
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@321
    .line 976
    const-string/jumbo v5, "WindowManager"

    #@324
    const v6, 0x2000000a

    #@327
    .line 975
    invoke-virtual {v4, v6, v5}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@32a
    move-result-object v4

    #@32b
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@32d
    .line 977
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@32f
    const/4 v5, 0x0

    #@330
    invoke-virtual {v4, v5}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    #@333
    .line 979
    new-instance v4, Lcom/android/server/wm/WindowAnimator;

    #@335
    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowAnimator;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@338
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@33a
    .line 981
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@33d
    move-result-object v4

    #@33e
    .line 982
    const v5, 0x1120030

    #@341
    .line 981
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@344
    move-result v4

    #@345
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mAllowTheaterModeWakeFromLayout:Z

    #@347
    .line 984
    const-class v4, Landroid/view/WindowManagerInternal;

    #@349
    new-instance v5, Lcom/android/server/wm/WindowManagerService$LocalService;

    #@34b
    const/4 v6, 0x0

    #@34c
    invoke-direct {v5, p0, v6}, Lcom/android/server/wm/WindowManagerService$LocalService;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$LocalService;)V

    #@34f
    invoke-static {v4, v5}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    #@352
    .line 985
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->initPolicy()V

    #@355
    .line 988
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    #@358
    move-result-object v4

    #@359
    invoke-virtual {v4, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    #@35c
    .line 990
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@35f
    .line 992
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->createWatermarkInTransaction()V

    #@362
    .line 993
    new-instance v4, Lcom/android/server/wm/FocusedStackFrame;

    #@364
    .line 994
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@367
    move-result-object v5

    #@368
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@36b
    move-result-object v5

    #@36c
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@36e
    .line 993
    invoke-direct {v4, v5, v6}, Lcom/android/server/wm/FocusedStackFrame;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;)V

    #@371
    iput-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@373
    .line 996
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@376
    .line 999
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->updateCircularDisplayMaskIfNeeded()V

    #@379
    .line 1000
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->showEmulatorDisplayOverlayIfNeeded()V

    #@37c
    .line 892
    return-void

    #@37d
    .line 995
    :catchall_0
    move-exception v4

    #@37e
    .line 996
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@381
    .line 995
    throw v4
.end method

.method synthetic constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZLcom/android/server/wm/WindowManagerService;)V
    .locals 0
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    #@0
    .prologue
    invoke-direct/range {p0 .. p5}, Lcom/android/server/wm/WindowManagerService;-><init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    #@3
    return-void
.end method

.method private addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I
    .locals 31
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1099
    move-object/from16 v0, p1

    #@2
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@4
    .line 1100
    .local v9, "client":Landroid/view/IWindow;
    move-object/from16 v0, p1

    #@6
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@8
    move-object/from16 v20, v0

    #@a
    .line 1101
    .local v20, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@d
    move-result-object v10

    #@e
    .line 1102
    .local v10, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v10, :cond_0

    #@10
    .line 1104
    const/16 v29, 0x0

    #@12
    return v29

    #@13
    .line 1107
    :cond_0
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@16
    move-result-object v28

    #@17
    .line 1108
    .local v28, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/WindowList;->size()I

    #@1a
    move-result v3

    #@1b
    .line 1109
    .local v3, "N":I
    move-object/from16 v0, p0

    #@1d
    move-object/from16 v1, v20

    #@1f
    invoke-virtual {v0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@22
    move-result-object v22

    #@23
    .line 1110
    .local v22, "tokenWindowList":Lcom/android/server/wm/WindowList;
    const/16 v23, 0x0

    #@25
    .line 1111
    .local v23, "tokenWindowsPos":I
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowList;->size()I

    #@28
    move-result v27

    #@29
    .line 1112
    .local v27, "windowListPos":I
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@2c
    move-result v29

    #@2d
    if-nez v29, :cond_4

    #@2f
    .line 1116
    move-object/from16 v0, p1

    #@31
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@33
    move-object/from16 v29, v0

    #@35
    move-object/from16 v0, v29

    #@37
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@39
    move/from16 v29, v0

    #@3b
    const/16 v30, 0x1

    #@3d
    move/from16 v0, v29

    #@3f
    move/from16 v1, v30

    #@41
    if-ne v0, v1, :cond_1

    #@43
    .line 1118
    const/16 v29, 0x0

    #@45
    move-object/from16 v0, v22

    #@47
    move/from16 v1, v29

    #@49
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@4c
    move-result-object v13

    #@4d
    check-cast v13, Lcom/android/server/wm/WindowState;

    #@4f
    .line 1119
    .local v13, "lowestWindow":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@51
    move-object/from16 v1, p1

    #@53
    invoke-direct {v0, v13, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@56
    .line 1120
    move-object/from16 v0, v20

    #@58
    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@5a
    move-object/from16 v29, v0

    #@5c
    move-object/from16 v0, p0

    #@5e
    move-object/from16 v1, v29

    #@60
    invoke-direct {v0, v13, v1}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@63
    move-result v23

    #@64
    .line 1147
    .end local v13    # "lowestWindow":Lcom/android/server/wm/WindowState;
    :goto_0
    return v23

    #@65
    .line 1122
    :cond_1
    move-object/from16 v0, p1

    #@67
    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@69
    .line 1123
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    add-int/lit8 v29, v27, -0x1

    #@6b
    move-object/from16 v0, v22

    #@6d
    move/from16 v1, v29

    #@6f
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@72
    move-result-object v12

    #@73
    check-cast v12, Lcom/android/server/wm/WindowState;

    #@75
    .line 1124
    .local v12, "lastWindow":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_2

    #@77
    iget-object v0, v6, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@79
    move-object/from16 v29, v0

    #@7b
    move-object/from16 v0, v29

    #@7d
    if-ne v12, v0, :cond_2

    #@7f
    .line 1125
    move-object/from16 v0, p0

    #@81
    move-object/from16 v1, p1

    #@83
    invoke-direct {v0, v12, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@86
    .line 1126
    move-object/from16 v0, v20

    #@88
    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@8a
    move-object/from16 v29, v0

    #@8c
    move-object/from16 v0, p0

    #@8e
    move-object/from16 v1, v29

    #@90
    invoke-direct {v0, v12, v1}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@93
    move-result v23

    #@94
    goto :goto_0

    #@95
    .line 1128
    :cond_2
    invoke-direct/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I

    #@98
    move-result v15

    #@99
    .line 1136
    .local v15, "newIdx":I
    add-int/lit8 v29, v15, 0x1

    #@9b
    move-object/from16 v0, v28

    #@9d
    move/from16 v1, v29

    #@9f
    move-object/from16 v2, p1

    #@a1
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@a4
    .line 1137
    if-gez v15, :cond_3

    #@a6
    .line 1139
    const/16 v23, 0x0

    #@a8
    .line 1144
    :goto_1
    const/16 v29, 0x1

    #@aa
    move/from16 v0, v29

    #@ac
    move-object/from16 v1, p0

    #@ae
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@b0
    goto :goto_0

    #@b1
    .line 1142
    :cond_3
    move-object/from16 v0, v28

    #@b3
    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@b6
    move-result-object v29

    #@b7
    check-cast v29, Lcom/android/server/wm/WindowState;

    #@b9
    move-object/from16 v0, v20

    #@bb
    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@bd
    move-object/from16 v30, v0

    #@bf
    .line 1141
    move-object/from16 v0, p0

    #@c1
    move-object/from16 v1, v29

    #@c3
    move-object/from16 v2, v30

    #@c5
    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@c8
    move-result v29

    #@c9
    add-int/lit8 v23, v29, 0x1

    #@cb
    goto :goto_1

    #@cc
    .line 1155
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v12    # "lastWindow":Lcom/android/server/wm/WindowState;
    .end local v15    # "newIdx":I
    :cond_4
    const/16 v16, 0x0

    #@ce
    .line 1157
    .local v16, "pos":Lcom/android/server/wm/WindowState;
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@d1
    move-result-object v19

    #@d2
    .line 1159
    .local v19, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/16 v21, -0x1

    #@d4
    .line 1160
    .local v21, "tokenNdx":I
    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I

    #@d7
    move-result v29

    #@d8
    add-int/lit8 v18, v29, -0x1

    #@da
    .end local v16    # "pos":Lcom/android/server/wm/WindowState;
    .local v18, "taskNdx":I
    :goto_2
    if-ltz v18, :cond_6

    #@dc
    .line 1161
    move-object/from16 v0, v19

    #@de
    move/from16 v1, v18

    #@e0
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@e3
    move-result-object v29

    #@e4
    check-cast v29, Lcom/android/server/wm/Task;

    #@e6
    move-object/from16 v0, v29

    #@e8
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@ea
    move-object/from16 v24, v0

    #@ec
    .line 1162
    .local v24, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/AppTokenList;->size()I

    #@ef
    move-result v29

    #@f0
    add-int/lit8 v21, v29, -0x1

    #@f2
    :goto_3
    if-ltz v21, :cond_5

    #@f4
    .line 1163
    move-object/from16 v0, v24

    #@f6
    move/from16 v1, v21

    #@f8
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@fb
    move-result-object v17

    #@fc
    check-cast v17, Lcom/android/server/wm/AppWindowToken;

    #@fe
    .line 1164
    .local v17, "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v17

    #@100
    move-object/from16 v1, v20

    #@102
    if-ne v0, v1, :cond_8

    #@104
    .line 1165
    add-int/lit8 v21, v21, -0x1

    #@106
    .line 1166
    if-gez v21, :cond_5

    #@108
    .line 1167
    add-int/lit8 v18, v18, -0x1

    #@10a
    .line 1168
    if-ltz v18, :cond_5

    #@10c
    .line 1169
    move-object/from16 v0, v19

    #@10e
    move/from16 v1, v18

    #@110
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@113
    move-result-object v29

    #@114
    check-cast v29, Lcom/android/server/wm/Task;

    #@116
    move-object/from16 v0, v29

    #@118
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@11a
    move-object/from16 v29, v0

    #@11c
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/AppTokenList;->size()I

    #@11f
    move-result v29

    #@120
    add-int/lit8 v21, v29, -0x1

    #@122
    .line 1183
    .end local v17    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_5
    if-ltz v21, :cond_a

    #@124
    .line 1192
    .end local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_6
    if-eqz v16, :cond_c

    #@126
    .line 1194
    move-object/from16 v0, p0

    #@128
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@12a
    move-object/from16 v29, v0

    #@12c
    move-object/from16 v0, v16

    #@12e
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@130
    move-object/from16 v30, v0

    #@132
    invoke-interface/range {v30 .. v30}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@135
    move-result-object v30

    #@136
    invoke-virtual/range {v29 .. v30}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@139
    move-result-object v7

    #@13a
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@13c
    .line 1195
    .local v7, "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_7

    #@13e
    .line 1197
    move-object/from16 v0, p0

    #@140
    invoke-virtual {v0, v7, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@143
    move-result-object v22

    #@144
    .line 1198
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowList;->size()I

    #@147
    move-result v4

    #@148
    .line 1199
    .local v4, "NC":I
    if-lez v4, :cond_7

    #@14a
    .line 1200
    const/16 v29, 0x0

    #@14c
    move-object/from16 v0, v22

    #@14e
    move/from16 v1, v29

    #@150
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@153
    move-result-object v8

    #@154
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@156
    .line 1201
    .local v8, "bottom":Lcom/android/server/wm/WindowState;
    iget v0, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@158
    move/from16 v29, v0

    #@15a
    if-gez v29, :cond_7

    #@15c
    .line 1202
    move-object/from16 v16, v8

    #@15e
    .line 1206
    .end local v4    # "NC":I
    .end local v8    # "bottom":Lcom/android/server/wm/WindowState;
    :cond_7
    move-object/from16 v0, p0

    #@160
    move-object/from16 v1, v16

    #@162
    move-object/from16 v2, p1

    #@164
    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@167
    .line 1207
    return v23

    #@168
    .line 1178
    .end local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v17    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_8
    move-object/from16 v0, p0

    #@16a
    move-object/from16 v1, v17

    #@16c
    invoke-virtual {v0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@16f
    move-result-object v22

    #@170
    .line 1179
    move-object/from16 v0, v17

    #@172
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@174
    move/from16 v29, v0

    #@176
    if-nez v29, :cond_9

    #@178
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowList;->size()I

    #@17b
    move-result v29

    #@17c
    if-lez v29, :cond_9

    #@17e
    .line 1180
    const/16 v29, 0x0

    #@180
    move-object/from16 v0, v22

    #@182
    move/from16 v1, v29

    #@184
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@187
    move-result-object v16

    #@188
    check-cast v16, Lcom/android/server/wm/WindowState;

    #@18a
    .line 1162
    :cond_9
    add-int/lit8 v21, v21, -0x1

    #@18c
    goto/16 :goto_3

    #@18e
    .line 1160
    .end local v17    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_a
    add-int/lit8 v18, v18, -0x1

    #@190
    goto/16 :goto_2

    #@192
    .line 1212
    :cond_b
    add-int/lit8 v18, v18, -0x1

    #@194
    .end local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_c
    if-ltz v18, :cond_e

    #@196
    .line 1213
    move-object/from16 v0, v19

    #@198
    move/from16 v1, v18

    #@19a
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@19d
    move-result-object v29

    #@19e
    check-cast v29, Lcom/android/server/wm/Task;

    #@1a0
    move-object/from16 v0, v29

    #@1a2
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@1a4
    move-object/from16 v24, v0

    #@1a6
    .line 1214
    .restart local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :goto_4
    if-ltz v21, :cond_d

    #@1a8
    .line 1215
    move-object/from16 v0, v24

    #@1aa
    move/from16 v1, v21

    #@1ac
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@1af
    move-result-object v17

    #@1b0
    check-cast v17, Lcom/android/server/wm/AppWindowToken;

    #@1b2
    .line 1216
    .restart local v17    # "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    #@1b4
    move-object/from16 v1, v17

    #@1b6
    invoke-virtual {v0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@1b9
    move-result-object v22

    #@1ba
    .line 1217
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowList;->size()I

    #@1bd
    move-result v5

    #@1be
    .line 1218
    .local v5, "NW":I
    if-lez v5, :cond_10

    #@1c0
    .line 1219
    add-int/lit8 v29, v5, -0x1

    #@1c2
    move-object/from16 v0, v22

    #@1c4
    move/from16 v1, v29

    #@1c6
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1c9
    move-result-object v16

    #@1ca
    check-cast v16, Lcom/android/server/wm/WindowState;

    #@1cc
    .line 1223
    .end local v5    # "NW":I
    .end local v17    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_d
    if-ltz v21, :cond_b

    #@1ce
    .line 1229
    .end local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_e
    if-eqz v16, :cond_11

    #@1d0
    .line 1232
    move-object/from16 v0, p0

    #@1d2
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1d4
    move-object/from16 v29, v0

    #@1d6
    move-object/from16 v0, v16

    #@1d8
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@1da
    move-object/from16 v30, v0

    #@1dc
    invoke-interface/range {v30 .. v30}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@1df
    move-result-object v30

    #@1e0
    invoke-virtual/range {v29 .. v30}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1e3
    move-result-object v7

    #@1e4
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@1e6
    .line 1233
    .restart local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_f

    #@1e8
    .line 1234
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@1ea
    move-object/from16 v29, v0

    #@1ec
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowList;->size()I

    #@1ef
    move-result v4

    #@1f0
    .line 1235
    .restart local v4    # "NC":I
    if-lez v4, :cond_f

    #@1f2
    .line 1236
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@1f4
    move-object/from16 v29, v0

    #@1f6
    add-int/lit8 v30, v4, -0x1

    #@1f8
    invoke-virtual/range {v29 .. v30}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1fb
    move-result-object v25

    #@1fc
    check-cast v25, Lcom/android/server/wm/WindowState;

    #@1fe
    .line 1237
    .local v25, "top":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v25

    #@200
    iget v0, v0, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@202
    move/from16 v29, v0

    #@204
    if-ltz v29, :cond_f

    #@206
    .line 1238
    move-object/from16 v16, v25

    #@208
    .line 1242
    .end local v4    # "NC":I
    .end local v25    # "top":Lcom/android/server/wm/WindowState;
    :cond_f
    move-object/from16 v0, p0

    #@20a
    move-object/from16 v1, v16

    #@20c
    move-object/from16 v2, p1

    #@20e
    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@211
    .line 1243
    return v23

    #@212
    .line 1214
    .end local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v5    # "NW":I
    .restart local v17    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_10
    add-int/lit8 v21, v21, -0x1

    #@214
    goto :goto_4

    #@215
    .line 1247
    .end local v5    # "NW":I
    .end local v17    # "t":Lcom/android/server/wm/AppWindowToken;
    .end local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_11
    move-object/from16 v0, p1

    #@217
    iget v14, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@219
    .line 1249
    .local v14, "myLayer":I
    add-int/lit8 v11, v3, -0x1

    #@21b
    .local v11, "i":I
    :goto_5
    if-ltz v11, :cond_12

    #@21d
    .line 1250
    move-object/from16 v0, v28

    #@21f
    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@222
    move-result-object v26

    #@223
    check-cast v26, Lcom/android/server/wm/WindowState;

    #@225
    .line 1251
    .local v26, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v26

    #@227
    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@229
    move/from16 v29, v0

    #@22b
    move/from16 v0, v29

    #@22d
    if-gt v0, v14, :cond_13

    #@22f
    .line 1257
    .end local v26    # "w":Lcom/android/server/wm/WindowState;
    :cond_12
    add-int/lit8 v29, v11, 0x1

    #@231
    move-object/from16 v0, v28

    #@233
    move/from16 v1, v29

    #@235
    move-object/from16 v2, p1

    #@237
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@23a
    .line 1258
    const/16 v29, 0x1

    #@23c
    move/from16 v0, v29

    #@23e
    move-object/from16 v1, p0

    #@240
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@242
    .line 1259
    return v23

    #@243
    .line 1249
    .restart local v26    # "w":Lcom/android/server/wm/WindowState;
    :cond_13
    add-int/lit8 v11, v11, -0x1

    #@245
    goto :goto_5
.end method

.method private addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 12
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    #@0
    .prologue
    .line 1281
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@2
    .line 1282
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@5
    move-result-object v2

    #@6
    .line 1283
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v2, :cond_0

    #@8
    .line 1284
    return-void

    #@9
    .line 1286
    :cond_0
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@b
    .line 1288
    .local v1, "attached":Lcom/android/server/wm/WindowState;
    invoke-virtual {p0, v6, v2}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@e
    move-result-object v7

    #@f
    .line 1292
    .local v7, "tokenWindowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@12
    move-result v0

    #@13
    .line 1293
    .local v0, "NA":I
    iget v5, p1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@15
    .line 1294
    .local v5, "sublayer":I
    const/high16 v4, -0x80000000

    #@17
    .line 1295
    .local v4, "largestSublayer":I
    const/4 v10, 0x0

    #@18
    .line 1297
    .local v10, "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    const/4 v3, 0x0

    #@19
    .end local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    .local v3, "i":I
    :goto_0
    if-ge v3, v0, :cond_4

    #@1b
    .line 1298
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1e
    move-result-object v8

    #@1f
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@21
    .line 1299
    .local v8, "w":Lcom/android/server/wm/WindowState;
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@23
    .line 1300
    .local v9, "wSublayer":I
    if-lt v9, v4, :cond_1

    #@25
    .line 1301
    move v4, v9

    #@26
    .line 1302
    move-object v10, v8

    #@27
    .line 1304
    :cond_1
    if-gez v5, :cond_7

    #@29
    .line 1307
    if-lt v9, v5, :cond_9

    #@2b
    .line 1308
    if-eqz p2, :cond_2

    #@2d
    .line 1310
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2f
    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@32
    .line 1312
    :cond_2
    if-ltz v9, :cond_3

    #@34
    move-object v8, v1

    #@35
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@38
    .line 1328
    .end local v9    # "wSublayer":I
    :cond_4
    :goto_1
    if-lt v3, v0, :cond_6

    #@3a
    .line 1329
    if-eqz p2, :cond_5

    #@3c
    .line 1331
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3e
    invoke-virtual {v11, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@41
    .line 1333
    :cond_5
    if-gez v5, :cond_a

    #@43
    .line 1334
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@46
    .line 1280
    :cond_6
    :goto_2
    return-void

    #@47
    .line 1318
    .restart local v8    # "w":Lcom/android/server/wm/WindowState;
    .restart local v9    # "wSublayer":I
    :cond_7
    if-le v9, v5, :cond_9

    #@49
    .line 1319
    if-eqz p2, :cond_8

    #@4b
    .line 1321
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@4d
    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@50
    .line 1323
    :cond_8
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@53
    goto :goto_1

    #@54
    .line 1297
    :cond_9
    add-int/lit8 v3, v3, 0x1

    #@56
    goto :goto_0

    #@57
    .line 1336
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "wSublayer":I
    :cond_a
    if-ltz v4, :cond_b

    #@59
    :goto_3
    invoke-direct {p0, v10, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@5c
    goto :goto_2

    #@5d
    :cond_b
    move-object v10, v1

    #@5e
    .line 1338
    goto :goto_3
.end method

.method private addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .locals 4
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1263
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v2

    #@4
    .line 1266
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    iget v1, p1, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@6
    .line 1268
    .local v1, "myLayer":I
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@9
    move-result v3

    #@a
    add-int/lit8 v0, v3, -0x1

    #@c
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    #@e
    .line 1269
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v3

    #@12
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@14
    iget v3, v3, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@16
    if-gt v3, v1, :cond_1

    #@18
    .line 1273
    :cond_0
    add-int/lit8 v0, v0, 0x1

    #@1a
    .line 1276
    invoke-virtual {v2, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@1d
    .line 1277
    const/4 v3, 0x1

    #@1e
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@20
    .line 1262
    return-void

    #@21
    .line 1268
    :cond_1
    add-int/lit8 v0, v0, -0x1

    #@23
    goto :goto_0
.end method

.method private addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    #@0
    .prologue
    .line 1347
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@2
    if-nez v2, :cond_3

    #@4
    .line 1348
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@6
    .line 1349
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    const/4 v1, 0x0

    #@7
    .line 1350
    .local v1, "tokenWindowsPos":I
    iget-object v2, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@9
    if-eqz v2, :cond_2

    #@b
    .line 1351
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I

    #@e
    move-result v1

    #@f
    .line 1355
    :goto_0
    if-eqz p2, :cond_0

    #@11
    .line 1357
    iget-object v2, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-virtual {v2, v1, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@16
    .line 1363
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    .end local v1    # "tokenWindowsPos":I
    :cond_0
    :goto_1
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@18
    if-eqz v2, :cond_1

    #@1a
    if-eqz p2, :cond_1

    #@1c
    .line 1364
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1e
    iget-object v2, v2, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@20
    invoke-virtual {v2, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@23
    .line 1344
    :cond_1
    return-void

    #@24
    .line 1353
    .restart local v0    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v1    # "tokenWindowsPos":I
    :cond_2
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    #@27
    goto :goto_0

    #@28
    .line 1360
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    .end local v1    # "tokenWindowsPos":I
    :cond_3
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V

    #@2b
    goto :goto_1
.end method

.method private adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V
    .locals 3
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotation"    # I
    .param p3, "dw"    # I
    .param p4, "dh"    # I

    #@0
    .prologue
    .line 7182
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v2, p3, p4, p2}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(III)I

    #@5
    move-result v1

    #@6
    .line 7183
    .local v1, "width":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@8
    if-ge v1, v2, :cond_0

    #@a
    .line 7184
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@c
    .line 7186
    :cond_0
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@e
    if-le v1, v2, :cond_1

    #@10
    .line 7187
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@12
    .line 7189
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@14
    invoke-interface {v2, p3, p4, p2}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(III)I

    #@17
    move-result v0

    #@18
    .line 7190
    .local v0, "height":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@1a
    if-ge v0, v2, :cond_2

    #@1c
    .line 7191
    iput v0, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@1e
    .line 7193
    :cond_2
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@20
    if-le v0, v2, :cond_3

    #@22
    .line 7194
    iput v0, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@24
    .line 7180
    :cond_3
    return-void
.end method

.method private applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z
    .locals 14
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "transit"    # I
    .param p4, "enter"    # Z
    .param p5, "isVoiceInteraction"    # Z

    #@0
    .prologue
    .line 3467
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@3
    move-result v0

    #@4
    if-eqz v0, :cond_3

    #@6
    .line 3468
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@9
    move-result-object v12

    #@a
    .line 3469
    .local v12, "displayInfo":Landroid/view/DisplayInfo;
    iget v4, v12, Landroid/view/DisplayInfo;->appWidth:I

    #@c
    .line 3470
    .local v4, "width":I
    iget v5, v12, Landroid/view/DisplayInfo;->appHeight:I

    #@e
    .line 3475
    .local v5, "height":I
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@11
    move-result-object v13

    #@12
    .line 3476
    .local v13, "win":Lcom/android/server/wm/WindowState;
    new-instance v7, Landroid/graphics/Rect;

    #@14
    const/4 v0, 0x0

    #@15
    const/4 v1, 0x0

    #@16
    invoke-direct {v7, v0, v1, v4, v5}, Landroid/graphics/Rect;-><init>(IIII)V

    #@19
    .line 3477
    .local v7, "containingFrame":Landroid/graphics/Rect;
    new-instance v8, Landroid/graphics/Rect;

    #@1b
    invoke-direct {v8}, Landroid/graphics/Rect;-><init>()V

    #@1e
    .line 3478
    .local v8, "contentInsets":Landroid/graphics/Rect;
    new-instance v9, Landroid/graphics/Rect;

    #@20
    const/4 v0, 0x0

    #@21
    const/4 v1, 0x0

    #@22
    invoke-direct {v9, v0, v1, v4, v5}, Landroid/graphics/Rect;-><init>(IIII)V

    #@25
    .line 3479
    .local v9, "appFrame":Landroid/graphics/Rect;
    if-eqz v13, :cond_0

    #@27
    invoke-virtual {v13, v4, v5}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    #@2a
    move-result v0

    #@2b
    if-eqz v0, :cond_0

    #@2d
    .line 3483
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    #@2f
    invoke-virtual {v7, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@32
    .line 3484
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@34
    invoke-virtual {v8, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@37
    .line 3485
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@39
    invoke-virtual {v9, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@3c
    .line 3488
    :cond_0
    iget-boolean v0, p1, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@3e
    if-eqz v0, :cond_1

    #@40
    .line 3492
    const/16 p4, 0x0

    #@42
    .line 3494
    .end local p4    # "enter":Z
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@44
    .line 3495
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@46
    iget v6, v1, Landroid/content/res/Configuration;->orientation:I

    #@48
    move-object/from16 v1, p2

    #@4a
    move/from16 v2, p3

    #@4c
    move/from16 v3, p4

    #@4e
    move/from16 v10, p5

    #@50
    .line 3494
    invoke-virtual/range {v0 .. v10}, Lcom/android/server/wm/AppTransition;->loadAnimation(Landroid/view/WindowManager$LayoutParams;IZIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Z)Landroid/view/animation/Animation;

    #@53
    move-result-object v11

    #@54
    .line 3497
    .local v11, "a":Landroid/view/animation/Animation;
    if-eqz v11, :cond_2

    #@56
    .line 3506
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@58
    .line 3507
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5a
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->canSkipFirstFrame()Z

    #@5d
    move-result v1

    #@5e
    .line 3506
    invoke-virtual {v0, v11, v4, v5, v1}, Lcom/android/server/wm/AppWindowAnimator;->setAnimation(Landroid/view/animation/Animation;IIZ)V

    #@61
    .line 3513
    .end local v4    # "width":I
    .end local v5    # "height":I
    .end local v7    # "containingFrame":Landroid/graphics/Rect;
    .end local v8    # "contentInsets":Landroid/graphics/Rect;
    .end local v9    # "appFrame":Landroid/graphics/Rect;
    .end local v11    # "a":Landroid/view/animation/Animation;
    .end local v12    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v13    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    :goto_0
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@63
    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@65
    if-eqz v0, :cond_4

    #@67
    const/4 v0, 0x1

    #@68
    :goto_1
    return v0

    #@69
    .line 3510
    .restart local p4    # "enter":Z
    :cond_3
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6b
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    #@6e
    goto :goto_0

    #@6f
    .line 3513
    .end local p4    # "enter":Z
    :cond_4
    const/4 v0, 0x0

    #@70
    goto :goto_1
.end method

.method private final assignLayersLocked(Lcom/android/server/wm/WindowList;)V
    .locals 13
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;

    #@0
    .prologue
    .line 8844
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    #@3
    move-result v0

    #@4
    .line 8845
    .local v0, "N":I
    const/4 v2, 0x0

    #@5
    .line 8846
    .local v2, "curBaseLayer":I
    const/4 v3, 0x0

    #@6
    .line 8852
    .local v3, "curLayer":I
    const/4 v1, 0x0

    #@7
    .line 8854
    .local v1, "anyLayerChanged":Z
    const/4 v4, 0x0

    #@8
    .local v4, "i":I
    :goto_0
    if-ge v4, v0, :cond_9

    #@a
    .line 8855
    invoke-virtual {p1, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@d
    move-result-object v8

    #@e
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@10
    .line 8856
    .local v8, "w":Lcom/android/server/wm/WindowState;
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@12
    .line 8857
    .local v9, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v5, 0x0

    #@13
    .line 8858
    .local v5, "layerChanged":Z
    iget v6, v8, Lcom/android/server/wm/WindowState;->mLayer:I

    #@15
    .line 8859
    .local v6, "oldLayer":I
    iget v11, v8, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@17
    if-eq v11, v2, :cond_0

    #@19
    iget-boolean v11, v8, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@1b
    if-nez v11, :cond_0

    #@1d
    .line 8860
    if-lez v4, :cond_5

    #@1f
    iget-boolean v11, v8, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@21
    .line 8859
    if-eqz v11, :cond_5

    #@23
    .line 8861
    :cond_0
    add-int/lit8 v3, v3, 0x5

    #@25
    .line 8862
    iput v3, v8, Lcom/android/server/wm/WindowState;->mLayer:I

    #@27
    .line 8867
    :goto_1
    iget v11, v8, Lcom/android/server/wm/WindowState;->mLayer:I

    #@29
    if-eq v11, v6, :cond_1

    #@2b
    .line 8868
    const/4 v5, 0x1

    #@2c
    .line 8869
    const/4 v1, 0x1

    #@2d
    .line 8871
    :cond_1
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2f
    .line 8872
    .local v10, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget v6, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@31
    .line 8873
    iget-object v11, v8, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@33
    if-eqz v11, :cond_6

    #@35
    .line 8875
    iget v11, v8, Lcom/android/server/wm/WindowState;->mLayer:I

    #@37
    iget-object v12, v8, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@39
    iget-object v12, v12, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@3b
    iget v12, v12, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    #@3d
    add-int/2addr v11, v12

    #@3e
    .line 8874
    iput v11, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@40
    .line 8882
    :goto_2
    iget-boolean v11, v8, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@42
    if-eqz v11, :cond_8

    #@44
    .line 8883
    iget v11, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@46
    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodAnimLayerAdjustment:I

    #@48
    add-int/2addr v11, v12

    #@49
    iput v11, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@4b
    .line 8887
    :cond_2
    :goto_3
    iget v11, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@4d
    if-eq v11, v6, :cond_3

    #@4f
    .line 8888
    const/4 v5, 0x1

    #@50
    .line 8889
    const/4 v1, 0x1

    #@51
    .line 8891
    :cond_3
    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    #@54
    move-result-object v7

    #@55
    .line 8892
    .local v7, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v5, :cond_4

    #@57
    if-eqz v7, :cond_4

    #@59
    invoke-virtual {v7, v9}, Lcom/android/server/wm/TaskStack;->isDimming(Lcom/android/server/wm/WindowStateAnimator;)Z

    #@5c
    move-result v11

    #@5d
    if-eqz v11, :cond_4

    #@5f
    .line 8894
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    #@62
    .line 8854
    :cond_4
    add-int/lit8 v4, v4, 0x1

    #@64
    goto :goto_0

    #@65
    .line 8864
    .end local v7    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v10    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_5
    iget v3, v8, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@67
    move v2, v3

    #@68
    .line 8865
    iput v3, v8, Lcom/android/server/wm/WindowState;->mLayer:I

    #@6a
    goto :goto_1

    #@6b
    .line 8876
    .restart local v10    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_6
    if-eqz v10, :cond_7

    #@6d
    .line 8878
    iget v11, v8, Lcom/android/server/wm/WindowState;->mLayer:I

    #@6f
    iget-object v12, v10, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@71
    iget v12, v12, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    #@73
    add-int/2addr v11, v12

    #@74
    .line 8877
    iput v11, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@76
    goto :goto_2

    #@77
    .line 8880
    :cond_7
    iget v11, v8, Lcom/android/server/wm/WindowState;->mLayer:I

    #@79
    iput v11, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@7b
    goto :goto_2

    #@7c
    .line 8884
    :cond_8
    iget-boolean v11, v8, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@7e
    if-eqz v11, :cond_2

    #@80
    .line 8885
    iget v11, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@82
    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    #@84
    add-int/2addr v11, v12

    #@85
    iput v11, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@87
    goto :goto_3

    #@88
    .line 8907
    .end local v5    # "layerChanged":Z
    .end local v6    # "oldLayer":I
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v10    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_9
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@8a
    if-eqz v11, :cond_a

    #@8c
    if-eqz v1, :cond_a

    #@8e
    .line 8908
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    #@91
    move-result v11

    #@92
    add-int/lit8 v11, v11, -0x1

    #@94
    invoke-virtual {p1, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@97
    move-result-object v11

    #@98
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@9a
    invoke-virtual {v11}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@9d
    move-result v11

    #@9e
    if-nez v11, :cond_a

    #@a0
    .line 8909
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@a2
    invoke-virtual {v11}, Lcom/android/server/wm/AccessibilityController;->onWindowLayersChangedLocked()V

    #@a5
    .line 8843
    :cond_a
    return-void
.end method

.method static canBeImeTarget(Lcom/android/server/wm/WindowState;)Z
    .locals 4
    .param p0, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const v2, 0x20008

    #@3
    const/4 v3, 0x0

    #@4
    .line 1369
    iget-object v1, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6
    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@8
    and-int v0, v1, v2

    #@a
    .line 1371
    .local v0, "fl":I
    if-eqz v0, :cond_0

    #@c
    if-ne v0, v2, :cond_1

    #@e
    .line 1387
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    #@11
    move-result v1

    #@12
    return v1

    #@13
    .line 1372
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@15
    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    #@17
    const/4 v2, 0x3

    #@18
    if-eq v1, v2, :cond_0

    #@1a
    .line 1389
    return v3
.end method

.method private checkBootAnimationCompleteLocked()Z
    .locals 4

    #@0
    .prologue
    const/16 v1, 0x25

    #@2
    .line 5877
    const-string/jumbo v0, "bootanim"

    #@5
    invoke-static {v0}, Landroid/os/SystemService;->isRunning(Ljava/lang/String;)Z

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5878
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@10
    .line 5879
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@12
    .line 5880
    const-wide/16 v2, 0xc8

    #@14
    .line 5879
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@17
    .line 5882
    const/4 v0, 0x0

    #@18
    return v0

    #@19
    .line 5885
    :cond_0
    const/4 v0, 0x1

    #@1a
    return v0
.end method

.method private checkWaitingForWindowsLocked()Z
    .locals 12

    #@0
    .prologue
    const/4 v11, 0x1

    #@1
    .line 5761
    const/4 v2, 0x0

    #@2
    .line 5762
    .local v2, "haveBootMsg":Z
    const/4 v1, 0x0

    #@3
    .line 5765
    .local v1, "haveApp":Z
    const/4 v4, 0x0

    #@4
    .line 5766
    .local v4, "haveWallpaper":Z
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@6
    invoke-virtual {v9}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@9
    move-result-object v9

    #@a
    .line 5767
    const v10, 0x1120048

    #@d
    .line 5766
    invoke-virtual {v9, v10}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@10
    move-result v9

    #@11
    if-eqz v9, :cond_3

    #@13
    .line 5768
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    #@15
    if-eqz v9, :cond_2

    #@17
    const/4 v7, 0x0

    #@18
    .line 5769
    .local v7, "wallpaperEnabled":Z
    :goto_0
    const/4 v3, 0x1

    #@19
    .line 5771
    .local v3, "haveKeyguard":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@1c
    move-result-object v8

    #@1d
    .line 5772
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@20
    move-result v0

    #@21
    .line 5773
    .local v0, "N":I
    const/4 v5, 0x0

    #@22
    .end local v3    # "haveKeyguard":Z
    .local v5, "i":I
    :goto_1
    if-ge v5, v0, :cond_8

    #@24
    .line 5774
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@27
    move-result-object v6

    #@28
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@2a
    .line 5775
    .local v6, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@2d
    move-result v9

    #@2e
    if-eqz v9, :cond_0

    #@30
    iget-boolean v9, v6, Lcom/android/server/wm/WindowState;->mObscured:Z

    #@32
    if-eqz v9, :cond_4

    #@34
    .line 5778
    :cond_0
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@37
    move-result v9

    #@38
    if-eqz v9, :cond_1

    #@3a
    .line 5779
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@3c
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@3e
    const/16 v10, 0x7e5

    #@40
    if-ne v9, v10, :cond_5

    #@42
    .line 5780
    const/4 v2, 0x1

    #@43
    .line 5773
    :cond_1
    :goto_2
    add-int/lit8 v5, v5, 0x1

    #@45
    goto :goto_1

    #@46
    .line 5768
    .end local v0    # "N":I
    .end local v5    # "i":I
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    .end local v7    # "wallpaperEnabled":Z
    .end local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_2
    const/4 v7, 0x1

    #@47
    .restart local v7    # "wallpaperEnabled":Z
    goto :goto_0

    #@48
    .line 5766
    .end local v7    # "wallpaperEnabled":Z
    :cond_3
    const/4 v7, 0x0

    #@49
    .restart local v7    # "wallpaperEnabled":Z
    goto :goto_0

    #@4a
    .line 5775
    .restart local v0    # "N":I
    .restart local v5    # "i":I
    .restart local v6    # "w":Lcom/android/server/wm/WindowState;
    .restart local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@4d
    move-result v9

    #@4e
    if-nez v9, :cond_0

    #@50
    .line 5776
    return v11

    #@51
    .line 5781
    :cond_5
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@53
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@55
    const/4 v10, 0x2

    #@56
    if-ne v9, v10, :cond_6

    #@58
    .line 5782
    const/4 v1, 0x1

    #@59
    goto :goto_2

    #@5a
    .line 5783
    :cond_6
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5c
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@5e
    const/16 v10, 0x7dd

    #@60
    if-ne v9, v10, :cond_7

    #@62
    .line 5784
    const/4 v4, 0x1

    #@63
    goto :goto_2

    #@64
    .line 5785
    :cond_7
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@66
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@68
    const/16 v10, 0x7d0

    #@6a
    if-ne v9, v10, :cond_1

    #@6c
    .line 5786
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6e
    invoke-interface {v9}, Landroid/view/WindowManagerPolicy;->isKeyguardDrawnLw()Z

    #@71
    move-result v3

    #@72
    .local v3, "haveKeyguard":Z
    goto :goto_2

    #@73
    .line 5800
    .end local v3    # "haveKeyguard":Z
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    :cond_8
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@75
    if-nez v9, :cond_9

    #@77
    if-eqz v2, :cond_c

    #@79
    .line 5807
    :cond_9
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@7b
    if-eqz v9, :cond_b

    #@7d
    if-nez v1, :cond_a

    #@7f
    if-eqz v3, :cond_d

    #@81
    .line 5808
    :cond_a
    if-eqz v7, :cond_b

    #@83
    if-eqz v4, :cond_d

    #@85
    .line 5812
    :cond_b
    const/4 v9, 0x0

    #@86
    return v9

    #@87
    .line 5801
    :cond_c
    return v11

    #@88
    .line 5809
    :cond_d
    return v11
.end method

.method private computeCompatSmallestWidth(ZLandroid/util/DisplayMetrics;II)I
    .locals 12
    .param p1, "rotated"    # Z
    .param p2, "dm"    # Landroid/util/DisplayMetrics;
    .param p3, "dw"    # I
    .param p4, "dh"    # I

    #@0
    .prologue
    .line 7266
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@2
    invoke-virtual {v0, p2}, Landroid/util/DisplayMetrics;->setTo(Landroid/util/DisplayMetrics;)V

    #@5
    .line 7267
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@7
    .line 7269
    .local v3, "tmpDm":Landroid/util/DisplayMetrics;
    if-eqz p1, :cond_0

    #@9
    .line 7270
    move/from16 v4, p4

    #@b
    .line 7271
    .local v4, "unrotDw":I
    move v5, p3

    #@c
    .line 7276
    .local v5, "unrotDh":I
    :goto_0
    const/4 v1, 0x0

    #@d
    const/4 v2, 0x0

    #@e
    move-object v0, p0

    #@f
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    #@12
    move-result v7

    #@13
    .line 7277
    .local v7, "sw":I
    const/4 v8, 0x1

    #@14
    move-object v6, p0

    #@15
    move-object v9, v3

    #@16
    move v10, v5

    #@17
    move v11, v4

    #@18
    invoke-direct/range {v6 .. v11}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    #@1b
    move-result v7

    #@1c
    .line 7278
    const/4 v2, 0x2

    #@1d
    move-object v0, p0

    #@1e
    move v1, v7

    #@1f
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    #@22
    move-result v7

    #@23
    .line 7279
    const/4 v8, 0x3

    #@24
    move-object v6, p0

    #@25
    move-object v9, v3

    #@26
    move v10, v5

    #@27
    move v11, v4

    #@28
    invoke-direct/range {v6 .. v11}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    #@2b
    move-result v7

    #@2c
    .line 7280
    return v7

    #@2d
    .line 7273
    .end local v4    # "unrotDw":I
    .end local v5    # "unrotDh":I
    .end local v7    # "sw":I
    :cond_0
    move v4, p3

    #@2e
    .line 7274
    .restart local v4    # "unrotDw":I
    move/from16 v5, p4

    #@30
    .restart local v5    # "unrotDh":I
    goto :goto_0
.end method

.method private computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .locals 6

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 10697
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@3
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@6
    move-result v1

    #@7
    .line 10698
    .local v1, "displayCount":I
    const/4 v2, 0x0

    #@8
    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_1

    #@a
    .line 10699
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@f
    move-result-object v0

    #@10
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@12
    .line 10700
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    #@15
    move-result-object v3

    #@16
    .line 10701
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_0

    #@18
    .line 10702
    return-object v3

    #@19
    .line 10698
    :cond_0
    add-int/lit8 v2, v2, 0x1

    #@1b
    goto :goto_0

    #@1c
    .line 10705
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    return-object v5
.end method

.method private computeNewConfigurationLocked()Landroid/content/res/Configuration;
    .locals 2

    #@0
    .prologue
    .line 7171
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@2
    if-nez v1, :cond_0

    #@4
    .line 7172
    const/4 v1, 0x0

    #@5
    return-object v1

    #@6
    .line 7174
    :cond_0
    new-instance v0, Landroid/content/res/Configuration;

    #@8
    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    #@b
    .line 7175
    .local v0, "config":Landroid/content/res/Configuration;
    const/4 v1, 0x0

    #@c
    iput v1, v0, Landroid/content/res/Configuration;->fontScale:F

    #@e
    .line 7176
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@11
    .line 7177
    return-object v0
.end method

.method private computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIFLandroid/content/res/Configuration;)V
    .locals 13
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotated"    # Z
    .param p3, "dw"    # I
    .param p4, "dh"    # I
    .param p5, "density"    # F
    .param p6, "outConfig"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 7227
    if-eqz p2, :cond_0

    #@2
    .line 7228
    move/from16 v5, p4

    #@4
    .line 7229
    .local v5, "unrotDw":I
    move/from16 v6, p3

    #@6
    .line 7234
    .local v6, "unrotDh":I
    :goto_0
    const/high16 v1, 0x40000000    # 2.0f

    #@8
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@a
    .line 7235
    const/high16 v1, 0x40000000    # 2.0f

    #@c
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@e
    .line 7236
    const/4 v1, 0x0

    #@f
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@11
    .line 7237
    const/4 v1, 0x0

    #@12
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@14
    .line 7238
    const/4 v1, 0x0

    #@15
    invoke-direct {p0, p1, v1, v5, v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    #@18
    .line 7239
    const/4 v1, 0x1

    #@19
    invoke-direct {p0, p1, v1, v6, v5}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    #@1c
    .line 7240
    const/4 v1, 0x2

    #@1d
    invoke-direct {p0, p1, v1, v5, v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    #@20
    .line 7241
    const/4 v1, 0x3

    #@21
    invoke-direct {p0, p1, v1, v6, v5}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    #@24
    .line 7242
    move-object/from16 v0, p6

    #@26
    iget v1, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@28
    invoke-static {v1}, Landroid/content/res/Configuration;->resetScreenLayout(I)I

    #@2b
    move-result v2

    #@2c
    .line 7243
    .local v2, "sl":I
    const/4 v3, 0x0

    #@2d
    move-object v1, p0

    #@2e
    move/from16 v4, p5

    #@30
    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFII)I

    #@33
    move-result v2

    #@34
    .line 7244
    const/4 v9, 0x1

    #@35
    move-object v7, p0

    #@36
    move v8, v2

    #@37
    move/from16 v10, p5

    #@39
    move v11, v6

    #@3a
    move v12, v5

    #@3b
    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFII)I

    #@3e
    move-result v2

    #@3f
    .line 7245
    const/4 v3, 0x2

    #@40
    move-object v1, p0

    #@41
    move/from16 v4, p5

    #@43
    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFII)I

    #@46
    move-result v2

    #@47
    .line 7246
    const/4 v9, 0x3

    #@48
    move-object v7, p0

    #@49
    move v8, v2

    #@4a
    move/from16 v10, p5

    #@4c
    move v11, v6

    #@4d
    move v12, v5

    #@4e
    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFII)I

    #@51
    move-result v2

    #@52
    .line 7247
    iget v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@54
    int-to-float v1, v1

    #@55
    div-float v1, v1, p5

    #@57
    float-to-int v1, v1

    #@58
    move-object/from16 v0, p6

    #@5a
    iput v1, v0, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    #@5c
    .line 7248
    move-object/from16 v0, p6

    #@5e
    iput v2, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@60
    .line 7219
    return-void

    #@61
    .line 7231
    .end local v2    # "sl":I
    .end local v5    # "unrotDw":I
    .end local v6    # "unrotDh":I
    :cond_0
    move/from16 v5, p3

    #@63
    .line 7232
    .restart local v5    # "unrotDw":I
    move/from16 v6, p4

    #@65
    .restart local v6    # "unrotDh":I
    goto :goto_0
.end method

.method private configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 8660
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@5
    move-result-object v1

    #@6
    .line 8661
    iget v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@8
    .line 8662
    iget v3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@a
    .line 8663
    iget v4, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@c
    .line 8660
    invoke-interface {v0, v1, v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setInitialDisplaySize(Landroid/view/Display;III)V

    #@f
    .line 8665
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@12
    move-result-object v6

    #@13
    .line 8666
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@15
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@18
    move-result-object v1

    #@19
    .line 8667
    iget v2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    #@1b
    iget v3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    #@1d
    .line 8668
    iget v4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    #@1f
    iget v5, v6, Landroid/view/DisplayInfo;->overscanBottom:I

    #@21
    .line 8666
    invoke-interface/range {v0 .. v5}, Landroid/view/WindowManagerPolicy;->setDisplayOverscan(Landroid/view/Display;IIII)V

    #@24
    .line 8659
    return-void
.end method

.method private static convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V
    .locals 2
    .param p0, "crop"    # Landroid/graphics/Rect;
    .param p1, "rot"    # I
    .param p2, "dw"    # I
    .param p3, "dh"    # I

    #@0
    .prologue
    .line 6088
    const/4 v1, 0x1

    #@1
    if-ne p1, v1, :cond_1

    #@3
    .line 6089
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@5
    .line 6090
    .local v0, "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->right:I

    #@7
    sub-int v1, p2, v1

    #@9
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@b
    .line 6091
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@d
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@f
    .line 6092
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@11
    sub-int v1, p2, v1

    #@13
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@15
    .line 6093
    iput v0, p0, Landroid/graphics/Rect;->left:I

    #@17
    .line 6087
    .end local v0    # "tmp":I
    :cond_0
    :goto_0
    return-void

    #@18
    .line 6094
    :cond_1
    const/4 v1, 0x2

    #@19
    if-ne p1, v1, :cond_2

    #@1b
    .line 6095
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@1d
    .line 6096
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@1f
    sub-int v1, p3, v1

    #@21
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@23
    .line 6097
    sub-int v1, p3, v0

    #@25
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@27
    .line 6098
    iget v0, p0, Landroid/graphics/Rect;->right:I

    #@29
    .line 6099
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@2b
    sub-int v1, p2, v1

    #@2d
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@2f
    .line 6100
    sub-int v1, p2, v0

    #@31
    iput v1, p0, Landroid/graphics/Rect;->left:I

    #@33
    goto :goto_0

    #@34
    .line 6101
    .end local v0    # "tmp":I
    :cond_2
    const/4 v1, 0x3

    #@35
    if-ne p1, v1, :cond_0

    #@37
    .line 6102
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@39
    .line 6103
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@3b
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@3d
    .line 6104
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@3f
    sub-int v1, p3, v1

    #@41
    iput v1, p0, Landroid/graphics/Rect;->left:I

    #@43
    .line 6105
    iget v1, p0, Landroid/graphics/Rect;->right:I

    #@45
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@47
    .line 6106
    sub-int v1, p3, v0

    #@49
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@4b
    goto :goto_0
.end method

.method private createTaskLocked(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;
    .locals 6
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "userId"    # I
    .param p4, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v3, 0x1

    #@1
    const/4 v2, 0x0

    #@2
    .line 3703
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@4
    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@7
    move-result-object v0

    #@8
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@a
    .line 3704
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@c
    .line 3705
    new-instance v2, Ljava/lang/IllegalArgumentException;

    #@e
    new-instance v3, Ljava/lang/StringBuilder;

    #@10
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@13
    const-string/jumbo v4, "addAppToken: invalid stackId="

    #@16
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v3

    #@1a
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v3

    #@1e
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21
    move-result-object v3

    #@22
    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@25
    throw v2

    #@26
    .line 3707
    :cond_0
    const/4 v4, 0x2

    #@27
    new-array v4, v4, [Ljava/lang/Object;

    #@29
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@2c
    move-result-object v5

    #@2d
    aput-object v5, v4, v2

    #@2f
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@32
    move-result-object v5

    #@33
    aput-object v5, v4, v3

    #@35
    const/16 v5, 0x7919

    #@37
    invoke-static {v5, v4}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    #@3a
    .line 3708
    new-instance v1, Lcom/android/server/wm/Task;

    #@3c
    invoke-direct {v1, p1, v0, p3, p0}, Lcom/android/server/wm/Task;-><init>(ILcom/android/server/wm/TaskStack;ILcom/android/server/wm/WindowManagerService;)V

    #@3f
    .line 3709
    .local v1, "task":Lcom/android/server/wm/Task;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@41
    invoke-virtual {v4, p1, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@44
    .line 3710
    iget-boolean v4, p4, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@46
    if-eqz v4, :cond_1

    #@48
    :goto_0
    iget-boolean v3, p4, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    #@4a
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;ZZ)V

    #@4d
    .line 3711
    return-object v1

    #@4e
    :cond_1
    move v2, v3

    #@4f
    .line 3710
    goto :goto_0
.end method

.method private displayReady(I)V
    .locals 10
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 7660
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 7661
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 7662
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@9
    .line 7663
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@b
    invoke-virtual {v3, p1}, Lcom/android/server/wm/WindowAnimator;->addDisplayLocked(I)V

    #@e
    .line 7664
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@10
    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@11
    .line 7666
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@14
    move-result-object v1

    #@15
    .line 7667
    .local v1, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@17
    invoke-virtual {v3, p1}, Landroid/hardware/display/DisplayManagerInternal;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    #@1a
    move-result-object v2

    #@1b
    .line 7668
    .local v2, "newDisplayInfo":Landroid/view/DisplayInfo;
    if-eqz v2, :cond_0

    #@1d
    .line 7669
    invoke-virtual {v1, v2}, Landroid/view/DisplayInfo;->copyFrom(Landroid/view/DisplayInfo;)V

    #@20
    .line 7671
    :cond_0
    iget v3, v1, Landroid/view/DisplayInfo;->logicalWidth:I

    #@22
    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@24
    .line 7672
    iget v3, v1, Landroid/view/DisplayInfo;->logicalHeight:I

    #@26
    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@28
    .line 7673
    iget v3, v1, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    #@2a
    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    #@2c
    .line 7674
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@2e
    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@30
    .line 7675
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@32
    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@34
    .line 7676
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    #@36
    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@38
    .line 7677
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayRect:Landroid/graphics/Rect;

    #@3a
    .line 7678
    iget v6, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@3c
    iget v7, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@3e
    .line 7677
    const/4 v8, 0x0

    #@3f
    const/4 v9, 0x0

    #@40
    invoke-virtual {v3, v8, v9, v6, v7}, Landroid/graphics/Rect;->set(IIII)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@43
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@44
    .end local v1    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v2    # "newDisplayInfo":Landroid/view/DisplayInfo;
    :cond_1
    monitor-exit v4

    #@45
    .line 7659
    return-void

    #@46
    .line 7664
    :catchall_0
    move-exception v3

    #@47
    :try_start_3
    monitor-exit v5

    #@48
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@49
    .line 7660
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v3

    #@4a
    monitor-exit v4

    #@4b
    throw v3
.end method

.method private findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v11, 0x0

    #@1
    .line 10709
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@4
    move-result-object v7

    #@5
    .line 10710
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@8
    move-result v9

    #@9
    add-int/lit8 v0, v9, -0x1

    #@b
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_8

    #@d
    .line 10711
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@10
    move-result-object v6

    #@11
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@13
    .line 10719
    .local v6, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    #@16
    move-result v9

    #@17
    if-nez v9, :cond_1

    #@19
    .line 10710
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@1b
    goto :goto_0

    #@1c
    .line 10723
    :cond_1
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1e
    .line 10726
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v8, :cond_2

    #@20
    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@22
    if-nez v9, :cond_0

    #@24
    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@26
    if-nez v9, :cond_0

    #@28
    .line 10734
    :cond_2
    if-eqz v8, :cond_4

    #@2a
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@2c
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@2e
    const/4 v10, 0x3

    #@2f
    if-eq v9, v10, :cond_4

    #@31
    .line 10735
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@33
    if-eqz v9, :cond_4

    #@35
    .line 10736
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@38
    move-result-object v2

    #@39
    .line 10737
    .local v2, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@3c
    move-result v9

    #@3d
    add-int/lit8 v1, v9, -0x1

    #@3f
    .local v1, "taskNdx":I
    :goto_1
    if-ltz v1, :cond_4

    #@41
    .line 10738
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v9

    #@45
    check-cast v9, Lcom/android/server/wm/Task;

    #@47
    iget-object v5, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@49
    .line 10739
    .local v5, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    #@4c
    move-result v9

    #@4d
    add-int/lit8 v4, v9, -0x1

    #@4f
    .line 10740
    .local v4, "tokenNdx":I
    :goto_2
    if-ltz v4, :cond_3

    #@51
    .line 10741
    invoke-virtual {v5, v4}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@54
    move-result-object v3

    #@55
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@57
    .line 10742
    .local v3, "token":Lcom/android/server/wm/AppWindowToken;
    if-ne v8, v3, :cond_5

    #@59
    .line 10752
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_3
    if-ltz v4, :cond_7

    #@5b
    .line 10761
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_4
    return-object v6

    #@5c
    .line 10745
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@5e
    if-ne v9, v3, :cond_6

    #@60
    .line 10749
    return-object v11

    #@61
    .line 10740
    :cond_6
    add-int/lit8 v4, v4, -0x1

    #@63
    goto :goto_2

    #@64
    .line 10737
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_7
    add-int/lit8 v1, v1, -0x1

    #@66
    goto :goto_1

    #@67
    .line 10765
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    return-object v11
.end method

.method private findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I
    .locals 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1049
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v2

    #@4
    .line 1050
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@7
    move-result v3

    #@8
    add-int/lit8 v0, v3, -0x1

    #@a
    .local v0, "j":I
    :goto_0
    if-ltz v0, :cond_1

    #@c
    .line 1051
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v1

    #@10
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@12
    .line 1052
    .local v1, "wentry":Lcom/android/server/wm/WindowState;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@14
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@16
    if-ne v3, v4, :cond_0

    #@18
    .line 1053
    return v0

    #@19
    .line 1050
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@1b
    goto :goto_0

    #@1c
    .line 1056
    .end local v1    # "wentry":Lcom/android/server/wm/WindowState;
    :cond_1
    const/4 v3, -0x1

    #@1d
    return v3
.end method

.method private findWindow(I)Lcom/android/server/wm/WindowState;
    .locals 8
    .param p1, "hashCode"    # I

    #@0
    .prologue
    .line 7131
    const/4 v6, -0x1

    #@1
    if-ne p1, v6, :cond_0

    #@3
    .line 7133
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@6
    move-result-object v6

    #@7
    return-object v6

    #@8
    .line 7136
    :cond_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@a
    monitor-enter v7

    #@b
    .line 7137
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@d
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    #@10
    move-result v1

    #@11
    .line 7138
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    #@12
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v1, :cond_3

    #@14
    .line 7139
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@16
    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@19
    move-result-object v6

    #@1a
    check-cast v6, Lcom/android/server/wm/DisplayContent;

    #@1c
    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1f
    move-result-object v5

    #@20
    .line 7140
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@23
    move-result v2

    #@24
    .line 7141
    .local v2, "numWindows":I
    const/4 v4, 0x0

    #@25
    .local v4, "winNdx":I
    :goto_1
    if-ge v4, v2, :cond_2

    #@27
    .line 7142
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2a
    move-result-object v3

    #@2b
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@2d
    .line 7143
    .local v3, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@30
    move-result v6

    #@31
    if-ne v6, p1, :cond_1

    #@33
    monitor-exit v7

    #@34
    .line 7144
    return-object v3

    #@35
    .line 7141
    :cond_1
    add-int/lit8 v4, v4, 0x1

    #@37
    goto :goto_1

    #@38
    .line 7138
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v0, v0, 0x1

    #@3a
    goto :goto_0

    #@3b
    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    monitor-exit v7

    #@3c
    .line 7150
    const/4 v6, 0x0

    #@3d
    return-object v6

    #@3e
    .line 7136
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_0
    move-exception v6

    #@3f
    monitor-exit v7

    #@40
    throw v6
.end method

.method static fixScale(F)F
    .locals 1
    .param p0, "scale"    # F

    #@0
    .prologue
    .line 5516
    const/4 v0, 0x0

    #@1
    cmpg-float v0, p0, v0

    #@3
    if-gez v0, :cond_1

    #@5
    const/4 p0, 0x0

    #@6
    .line 5518
    :cond_0
    :goto_0
    invoke-static {p0}, Ljava/lang/Math;->abs(F)F

    #@9
    move-result v0

    #@a
    return v0

    #@b
    .line 5517
    :cond_1
    const/high16 v0, 0x41a00000    # 20.0f

    #@d
    cmpl-float v0, p0, v0

    #@f
    if-lez v0, :cond_0

    #@11
    const/high16 p0, 0x41a00000    # 20.0f

    #@13
    goto :goto_0
.end method

.method private getFocusedWindow()Lcom/android/server/wm/WindowState;
    .locals 2

    #@0
    .prologue
    .line 7588
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 7589
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    move-result-object v1

    #@7
    monitor-exit v0

    #@8
    return-object v1

    #@9
    .line 7588
    :catchall_0
    move-exception v1

    #@a
    monitor-exit v0

    #@b
    throw v1
.end method

.method private getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .locals 1

    #@0
    .prologue
    .line 7594
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@2
    return-object v0
.end method

.method static getPropertyInt([Ljava/lang/String;IIILandroid/util/DisplayMetrics;)I
    .locals 4
    .param p0, "tokens"    # [Ljava/lang/String;
    .param p1, "index"    # I
    .param p2, "defUnits"    # I
    .param p3, "defDps"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;

    #@0
    .prologue
    .line 10930
    array-length v3, p0

    #@1
    if-ge p1, v3, :cond_0

    #@3
    .line 10931
    aget-object v1, p0, p1

    #@5
    .line 10932
    .local v1, "str":Ljava/lang/String;
    if-eqz v1, :cond_0

    #@7
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@a
    move-result v3

    #@b
    if-lez v3, :cond_0

    #@d
    .line 10934
    :try_start_0
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    #@10
    move-result v2

    #@11
    .line 10935
    .local v2, "val":I
    return v2

    #@12
    .line 10936
    .end local v2    # "val":I
    :catch_0
    move-exception v0

    #@13
    .line 10940
    .end local v1    # "str":Ljava/lang/String;
    :cond_0
    if-nez p2, :cond_1

    #@15
    .line 10941
    return p3

    #@16
    .line 10943
    :cond_1
    int-to-float v3, p3

    #@17
    invoke-static {p2, v3, p4}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    #@1a
    move-result v3

    #@1b
    float-to-int v2, v3

    #@1c
    .line 10944
    .restart local v2    # "val":I
    return v2
.end method

.method private handleAnimatingStoppedAndTransitionLocked()I
    .locals 13

    #@0
    .prologue
    const/4 v12, 0x0

    #@1
    const/4 v11, 0x1

    #@2
    const/4 v10, 0x0

    #@3
    .line 9589
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v9}, Lcom/android/server/wm/AppTransition;->setIdle()V

    #@8
    .line 9591
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@a
    invoke-interface {v9}, Ljava/util/List;->size()I

    #@d
    move-result v9

    #@e
    add-int/lit8 v1, v9, -0x1

    #@10
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    #@12
    .line 9592
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@14
    invoke-interface {v9, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@17
    move-result-object v6

    #@18
    check-cast v6, Landroid/os/IBinder;

    #@1a
    .line 9593
    .local v6, "token":Landroid/os/IBinder;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1c
    invoke-virtual {v9, v6}, Lcom/android/server/wm/AppTransition;->notifyAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    #@1f
    .line 9591
    add-int/lit8 v1, v1, -0x1

    #@21
    goto :goto_0

    #@22
    .line 9595
    .end local v6    # "token":Landroid/os/IBinder;
    :cond_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@24
    invoke-interface {v9}, Ljava/util/List;->clear()V

    #@27
    .line 9597
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    #@29
    if-eqz v9, :cond_1

    #@2b
    .line 9598
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    #@2d
    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->hideWallpapersLocked(Lcom/android/server/wm/WindowState;)V

    #@30
    .line 9599
    iput-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    #@32
    .line 9603
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@35
    move-result-object v9

    #@36
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@39
    move-result-object v3

    #@3a
    .line 9604
    .local v3, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@3d
    move-result v9

    #@3e
    add-int/lit8 v2, v9, -0x1

    #@40
    .local v2, "stackNdx":I
    :goto_1
    if-ltz v2, :cond_4

    #@42
    .line 9605
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@45
    move-result-object v9

    #@46
    check-cast v9, Lcom/android/server/wm/TaskStack;

    #@48
    invoke-virtual {v9}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@4b
    move-result-object v5

    #@4c
    .line 9606
    .local v5, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@4f
    move-result v9

    #@50
    add-int/lit8 v4, v9, -0x1

    #@52
    .local v4, "taskNdx":I
    :goto_2
    if-ltz v4, :cond_3

    #@54
    .line 9607
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@57
    move-result-object v9

    #@58
    check-cast v9, Lcom/android/server/wm/Task;

    #@5a
    iget-object v8, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@5c
    .line 9608
    .local v8, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v8}, Lcom/android/server/wm/AppTokenList;->size()I

    #@5f
    move-result v9

    #@60
    add-int/lit8 v7, v9, -0x1

    #@62
    .local v7, "tokenNdx":I
    :goto_3
    if-ltz v7, :cond_2

    #@64
    .line 9609
    invoke-virtual {v8, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@67
    move-result-object v9

    #@68
    check-cast v9, Lcom/android/server/wm/AppWindowToken;

    #@6a
    iput-boolean v10, v9, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@6c
    .line 9608
    add-int/lit8 v7, v7, -0x1

    #@6e
    goto :goto_3

    #@6f
    .line 9606
    :cond_2
    add-int/lit8 v4, v4, -0x1

    #@71
    goto :goto_2

    #@72
    .line 9604
    .end local v7    # "tokenNdx":I
    .end local v8    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_3
    add-int/lit8 v2, v2, -0x1

    #@74
    goto :goto_1

    #@75
    .line 9613
    .end local v4    # "taskNdx":I
    .end local v5    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked()V

    #@78
    .line 9615
    const/4 v0, 0x1

    #@79
    .line 9618
    .local v0, "changes":I
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@7c
    .line 9619
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@7e
    iput-boolean v11, v9, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    #@80
    .line 9623
    iput-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    #@82
    .line 9625
    return v0
.end method

.method private handleDisplayChangedLocked(I)V
    .locals 1
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11830
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    .line 11831
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@6
    .line 11832
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    #@9
    .line 11834
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V

    #@c
    .line 11829
    return-void
.end method

.method private handleDisplayRemovedLocked(I)V
    .locals 2
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11808
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    .line 11809
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@6
    .line 11810
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isAnimating()Z

    #@9
    move-result v1

    #@a
    if-eqz v1, :cond_0

    #@c
    .line 11811
    const/4 v1, 0x1

    #@d
    iput-boolean v1, v0, Lcom/android/server/wm/DisplayContent;->mDeferredRemoval:Z

    #@f
    .line 11812
    return-void

    #@10
    .line 11815
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@12
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->delete(I)V

    #@15
    .line 11816
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->close()V

    #@18
    .line 11817
    if-nez p1, :cond_1

    #@1a
    .line 11818
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    #@1c
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@1f
    .line 11821
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@21
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->removeDisplayLocked(I)V

    #@24
    .line 11822
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V

    #@27
    .line 11807
    return-void
.end method

.method private handleFlagDimBehind(Lcom/android/server/wm/WindowState;)V
    .locals 4
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 9777
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@2
    .line 9778
    .local v0, "attrs":Landroid/view/WindowManager$LayoutParams;
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@4
    and-int/lit8 v3, v3, 0x2

    #@6
    if-eqz v3, :cond_0

    #@8
    .line 9779
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@b
    move-result v3

    #@c
    .line 9778
    if-eqz v3, :cond_0

    #@e
    .line 9780
    iget-boolean v3, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@10
    if-eqz v3, :cond_1

    #@12
    .line 9776
    :cond_0
    :goto_0
    return-void

    #@13
    .line 9781
    :cond_1
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@15
    .line 9782
    .local v2, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    #@18
    move-result-object v1

    #@19
    .line 9783
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_2

    #@1b
    .line 9784
    return-void

    #@1c
    .line 9786
    :cond_2
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->setDimmingTag()V

    #@1f
    .line 9787
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskStack;->isDimming(Lcom/android/server/wm/WindowStateAnimator;)Z

    #@22
    move-result v3

    #@23
    if-nez v3, :cond_0

    #@25
    .line 9789
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskStack;->startDimmingIfNeeded(Lcom/android/server/wm/WindowStateAnimator;)V

    #@28
    goto :goto_0
.end method

.method private handleNotObscuredLocked(Lcom/android/server/wm/WindowState;II)V
    .locals 12
    .param p1, "w"    # Lcom/android/server/wm/WindowState;
    .param p2, "innerDw"    # I
    .param p3, "innerDh"    # I

    #@0
    .prologue
    const-wide/16 v8, 0x0

    #@2
    const/4 v11, 0x1

    #@3
    const/4 v10, 0x0

    #@4
    .line 9708
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6
    .line 9709
    .local v1, "attrs":Landroid/view/WindowManager$LayoutParams;
    iget v0, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@8
    .line 9710
    .local v0, "attrFlags":I
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@b
    move-result v2

    #@c
    .line 9711
    .local v2, "canBeSeen":Z
    if-eqz v2, :cond_c

    #@e
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isOpaqueDrawn()Z

    #@11
    move-result v4

    #@12
    .line 9713
    :goto_0
    if-eqz v4, :cond_0

    #@14
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    #@17
    move-result v6

    #@18
    if-eqz v6, :cond_0

    #@1a
    .line 9717
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@1c
    invoke-static {v6, v11}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set2(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    #@1f
    .line 9720
    :cond_0
    iget-boolean v6, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@21
    if-eqz v6, :cond_b

    #@23
    .line 9721
    and-int/lit16 v6, v0, 0x80

    #@25
    if-eqz v6, :cond_1

    #@27
    .line 9722
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@29
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@2b
    invoke-static {v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set1(Lcom/android/server/wm/WindowManagerService$LayoutFields;Lcom/android/server/wm/Session;)Lcom/android/server/wm/Session;

    #@2e
    .line 9724
    :cond_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@30
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get4(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@33
    move-result v6

    #@34
    if-nez v6, :cond_2

    #@36
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@38
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    #@3a
    cmpl-float v6, v6, v10

    #@3c
    if-ltz v6, :cond_2

    #@3e
    .line 9725
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@40
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get3(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    #@43
    move-result v6

    #@44
    cmpg-float v6, v6, v10

    #@46
    if-gez v6, :cond_2

    #@48
    .line 9726
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@4a
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4c
    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    #@4e
    invoke-static {v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set3(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    #@51
    .line 9728
    :cond_2
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@53
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get4(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@56
    move-result v6

    #@57
    if-nez v6, :cond_3

    #@59
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5b
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->buttonBrightness:F

    #@5d
    cmpl-float v6, v6, v10

    #@5f
    if-ltz v6, :cond_3

    #@61
    .line 9729
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@63
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get0(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    #@66
    move-result v6

    #@67
    cmpg-float v6, v6, v10

    #@69
    if-gez v6, :cond_3

    #@6b
    .line 9730
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@6d
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6f
    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->buttonBrightness:F

    #@71
    invoke-static {v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set0(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    #@74
    .line 9732
    :cond_3
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@76
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get4(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@79
    move-result v6

    #@7a
    if-nez v6, :cond_4

    #@7c
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@7e
    iget-wide v6, v6, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    #@80
    cmp-long v6, v6, v8

    #@82
    if-ltz v6, :cond_4

    #@84
    .line 9733
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@86
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get6(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    #@89
    move-result-wide v6

    #@8a
    cmp-long v6, v6, v8

    #@8c
    if-gez v6, :cond_4

    #@8e
    .line 9734
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@90
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@92
    iget-wide v8, v7, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    #@94
    invoke-static {v6, v8, v9}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set6(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    #@97
    .line 9737
    :cond_4
    iget v5, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    #@99
    .line 9738
    .local v5, "type":I
    if-eqz v2, :cond_6

    #@9b
    .line 9739
    const/16 v6, 0x7d8

    #@9d
    if-eq v5, v6, :cond_5

    #@9f
    .line 9740
    const/16 v6, 0x7da

    #@a1
    if-ne v5, v6, :cond_d

    #@a3
    .line 9742
    :cond_5
    :goto_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@a5
    invoke-static {v6, v11}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set4(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    #@a8
    .line 9745
    :cond_6
    if-eqz v2, :cond_b

    #@aa
    .line 9748
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@ad
    move-result-object v3

    #@ae
    .line 9749
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_e

    #@b0
    iget-boolean v6, v3, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    #@b2
    if-eqz v6, :cond_e

    #@b4
    .line 9754
    const/16 v6, 0x7e7

    #@b6
    if-eq v5, v6, :cond_7

    #@b8
    iget v6, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@ba
    and-int/lit16 v6, v6, 0x400

    #@bc
    if-eqz v6, :cond_8

    #@be
    .line 9755
    :cond_7
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@c0
    iput-boolean v11, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    #@c2
    .line 9757
    :cond_8
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@c4
    iput-boolean v11, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    #@c6
    .line 9764
    :cond_9
    :goto_2
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@c8
    iget v6, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredRefreshRate:F

    #@ca
    cmpl-float v6, v6, v10

    #@cc
    if-nez v6, :cond_a

    #@ce
    .line 9765
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@d0
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->preferredRefreshRate:F

    #@d2
    cmpl-float v6, v6, v10

    #@d4
    if-eqz v6, :cond_a

    #@d6
    .line 9766
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@d8
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@da
    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->preferredRefreshRate:F

    #@dc
    iput v7, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredRefreshRate:F

    #@de
    .line 9768
    :cond_a
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@e0
    iget v6, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredModeId:I

    #@e2
    if-nez v6, :cond_b

    #@e4
    .line 9769
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@e6
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->preferredDisplayModeId:I

    #@e8
    if-eqz v6, :cond_b

    #@ea
    .line 9770
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@ec
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@ee
    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->preferredDisplayModeId:I

    #@f0
    iput v7, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredModeId:I

    #@f2
    .line 9707
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "type":I
    :cond_b
    return-void

    #@f3
    .line 9711
    :cond_c
    const/4 v4, 0x0

    #@f4
    .local v4, "opaqueDrawn":Z
    goto/16 :goto_0

    #@f6
    .line 9741
    .end local v4    # "opaqueDrawn":Z
    .restart local v5    # "type":I
    :cond_d
    iget v6, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@f8
    and-int/lit16 v6, v6, 0x400

    #@fa
    if-eqz v6, :cond_6

    #@fc
    goto :goto_1

    #@fd
    .line 9758
    .restart local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_e
    if-eqz v3, :cond_9

    #@ff
    .line 9759
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@101
    iget-boolean v6, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    #@103
    if-eqz v6, :cond_f

    #@105
    .line 9760
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@107
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get2(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@10a
    move-result v6

    #@10b
    if-eqz v6, :cond_9

    #@10d
    const/16 v6, 0x7d9

    #@10f
    if-ne v5, v6, :cond_9

    #@111
    .line 9762
    :cond_f
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@113
    iput-boolean v11, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    #@115
    goto :goto_2
.end method

.method private indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I
    .locals 3
    .param p1, "targetWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "windows"    # Lcom/android/server/wm/WindowList;

    #@0
    .prologue
    .line 1084
    invoke-virtual {p2}, Lcom/android/server/wm/WindowList;->size()I

    #@3
    move-result v2

    #@4
    add-int/lit8 v0, v2, -0x1

    #@6
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_2

    #@8
    .line 1085
    invoke-virtual {p2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@b
    move-result-object v1

    #@c
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@e
    .line 1086
    .local v1, "w":Lcom/android/server/wm/WindowState;
    if-ne v1, p1, :cond_0

    #@10
    .line 1087
    return v0

    #@11
    .line 1089
    :cond_0
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@16
    move-result v2

    #@17
    if-nez v2, :cond_1

    #@19
    .line 1090
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@1b
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@1e
    move-result v2

    #@1f
    if-ltz v2, :cond_1

    #@21
    .line 1091
    return v0

    #@22
    .line 1084
    :cond_1
    add-int/lit8 v0, v0, -0x1

    #@24
    goto :goto_0

    #@25
    .line 1095
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    const/4 v2, -0x1

    #@26
    return v2
.end method

.method private initPolicy()V
    .locals 4

    #@0
    .prologue
    .line 881
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    #@3
    move-result-object v0

    #@4
    new-instance v1, Lcom/android/server/wm/WindowManagerService$4;

    #@6
    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@9
    .line 888
    const-wide/16 v2, 0x0

    #@b
    .line 881
    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    #@e
    .line 880
    return-void
.end method

.method private isSystemSecure()Z
    .locals 3

    #@0
    .prologue
    .line 6839
    const-string/jumbo v0, "1"

    #@3
    const-string/jumbo v1, "ro.secure"

    #@6
    const-string/jumbo v2, "1"

    #@9
    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@c
    move-result-object v1

    #@d
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@10
    move-result v0

    #@11
    if-eqz v0, :cond_0

    #@13
    .line 6840
    const-string/jumbo v0, "0"

    #@16
    const-string/jumbo v1, "ro.debuggable"

    #@19
    const-string/jumbo v2, "0"

    #@1c
    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1f
    move-result-object v1

    #@20
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@23
    move-result v0

    #@24
    .line 6839
    :goto_0
    return v0

    #@25
    :cond_0
    const/4 v0, 0x0

    #@26
    goto :goto_0
.end method

.method private isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z
    .locals 2
    .param p1, "wallpaperTarget"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    .line 1787
    if-eqz p1, :cond_1

    #@3
    .line 1788
    iget-boolean v1, p1, Lcom/android/server/wm/WindowState;->mObscured:Z

    #@5
    if-eqz v1, :cond_0

    #@7
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@9
    if-eqz v1, :cond_1

    #@b
    .line 1789
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@d
    iget-object v1, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@f
    iget-object v1, v1, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@11
    if-eqz v1, :cond_1

    #@13
    .line 1787
    :cond_0
    :goto_0
    return v0

    #@14
    .line 1790
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@16
    if-nez v1, :cond_0

    #@18
    .line 1791
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@1a
    if-nez v1, :cond_0

    #@1c
    const/4 v0, 0x0

    #@1d
    goto :goto_0
.end method

.method static logSurface(Landroid/view/SurfaceControl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/RuntimeException;)V
    .locals 3
    .param p0, "s"    # Landroid/view/SurfaceControl;
    .param p1, "title"    # Ljava/lang/String;
    .param p2, "msg"    # Ljava/lang/String;
    .param p3, "where"    # Ljava/lang/RuntimeException;

    #@0
    .prologue
    .line 2932
    new-instance v1, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    const-string/jumbo v2, "  SURFACE "

    #@8
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b
    move-result-object v1

    #@c
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v1

    #@10
    const-string/jumbo v2, ": "

    #@13
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v1

    #@17
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v1

    #@1b
    const-string/jumbo v2, " / "

    #@1e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@21
    move-result-object v1

    #@22
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v1

    #@26
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v0

    #@2a
    .line 2933
    .local v0, "str":Ljava/lang/String;
    if-eqz p3, :cond_0

    #@2c
    .line 2934
    const-string/jumbo v1, "WindowManager"

    #@2f
    invoke-static {v1, v0, p3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@32
    .line 2931
    :goto_0
    return-void

    #@33
    .line 2936
    :cond_0
    const-string/jumbo v1, "WindowManager"

    #@36
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@39
    goto :goto_0
.end method

.method static logSurface(Lcom/android/server/wm/WindowState;Ljava/lang/String;Ljava/lang/RuntimeException;)V
    .locals 3
    .param p0, "w"    # Lcom/android/server/wm/WindowState;
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "where"    # Ljava/lang/RuntimeException;

    #@0
    .prologue
    .line 2923
    new-instance v1, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    const-string/jumbo v2, "  SURFACE "

    #@8
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b
    move-result-object v1

    #@c
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v1

    #@10
    const-string/jumbo v2, ": "

    #@13
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v1

    #@17
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v1

    #@1b
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1e
    move-result-object v0

    #@1f
    .line 2924
    .local v0, "str":Ljava/lang/String;
    if-eqz p2, :cond_0

    #@21
    .line 2925
    const-string/jumbo v1, "WindowManager"

    #@24
    invoke-static {v1, v0, p2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@27
    .line 2922
    :goto_0
    return-void

    #@28
    .line 2927
    :cond_0
    const-string/jumbo v1, "WindowManager"

    #@2b
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@2e
    goto :goto_0
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)Lcom/android/server/wm/WindowManagerService;
    .locals 8
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "haveInputMethods"    # Z
    .param p3, "showBootMsgs"    # Z
    .param p4, "onlyCore"    # Z

    #@0
    .prologue
    .line 869
    const/4 v0, 0x1

    #@1
    new-array v1, v0, [Lcom/android/server/wm/WindowManagerService;

    #@3
    .line 870
    .local v1, "holder":[Lcom/android/server/wm/WindowManagerService;
    invoke-static {}, Lcom/android/server/DisplayThread;->getHandler()Landroid/os/Handler;

    #@6
    move-result-object v7

    #@7
    new-instance v0, Lcom/android/server/wm/WindowManagerService$3;

    #@9
    move-object v2, p0

    #@a
    move-object v3, p1

    #@b
    move v4, p2

    #@c
    move v5, p3

    #@d
    move v6, p4

    #@e
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService$3;-><init>([Lcom/android/server/wm/WindowManagerService;Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    #@11
    .line 876
    const-wide/16 v2, 0x0

    #@13
    .line 870
    invoke-virtual {v7, v0, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    #@16
    .line 877
    const/4 v0, 0x0

    #@17
    aget-object v0, v1, v0

    #@19
    return-object v0
.end method

.method private needsLayout()Z
    .locals 4

    #@0
    .prologue
    .line 10470
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v2

    #@6
    .line 10471
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@9
    .line 10472
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v0

    #@f
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@11
    .line 10473
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@13
    if-eqz v3, :cond_0

    #@15
    .line 10474
    const/4 v3, 0x1

    #@16
    return v3

    #@17
    .line 10471
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@19
    goto :goto_0

    #@1a
    .line 10477
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    const/4 v3, 0x0

    #@1b
    return v3
.end method

.method private newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;
    .locals 7
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 11705
    new-instance v0, Lcom/android/server/wm/DisplayContent;

    #@2
    invoke-direct {v0, p1, p0}, Lcom/android/server/wm/DisplayContent;-><init>(Landroid/view/Display;Lcom/android/server/wm/WindowManagerService;)V

    #@5
    .line 11706
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@8
    move-result v1

    #@9
    .line 11708
    .local v1, "displayId":I
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v4, v1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@e
    .line 11710
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@11
    move-result-object v2

    #@12
    .line 11711
    .local v2, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v3, Landroid/graphics/Rect;

    #@14
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@17
    .line 11712
    .local v3, "rect":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@19
    iget-object v5, v2, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    #@1b
    iget-object v6, v2, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    #@1d
    invoke-virtual {v4, v5, v6, v3}, Lcom/android/server/wm/DisplaySettings;->getOverscanLocked(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Rect;)V

    #@20
    .line 11713
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@22
    monitor-enter v5

    #@23
    .line 11714
    :try_start_0
    iget v4, v3, Landroid/graphics/Rect;->left:I

    #@25
    iput v4, v2, Landroid/view/DisplayInfo;->overscanLeft:I

    #@27
    .line 11715
    iget v4, v3, Landroid/graphics/Rect;->top:I

    #@29
    iput v4, v2, Landroid/view/DisplayInfo;->overscanTop:I

    #@2b
    .line 11716
    iget v4, v3, Landroid/graphics/Rect;->right:I

    #@2d
    iput v4, v2, Landroid/view/DisplayInfo;->overscanRight:I

    #@2f
    .line 11717
    iget v4, v3, Landroid/graphics/Rect;->bottom:I

    #@31
    iput v4, v2, Landroid/view/DisplayInfo;->overscanBottom:I

    #@33
    .line 11718
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@35
    invoke-virtual {v4, v1, v2}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    monitor-exit v5

    #@39
    .line 11721
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    #@3c
    .line 11724
    if-nez v1, :cond_0

    #@3e
    .line 11725
    new-instance v4, Lcom/android/server/wm/StackTapPointerEventListener;

    #@40
    invoke-direct {v4, p0, v0}, Lcom/android/server/wm/StackTapPointerEventListener;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;)V

    #@43
    iput-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    #@45
    .line 11726
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    #@47
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@4a
    .line 11729
    :cond_0
    return-object v0

    #@4b
    .line 11713
    :catchall_0
    move-exception v4

    #@4c
    monitor-exit v5

    #@4d
    throw v4
.end method

.method private notifyFocusChanged()V
    .locals 5

    #@0
    .prologue
    .line 7117
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 7118
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v3

    #@9
    if-eqz v3, :cond_0

    #@b
    monitor-exit v4

    #@c
    .line 7119
    return-void

    #@d
    .line 7121
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v3

    #@13
    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@15
    .line 7122
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@17
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    #@1a
    move-result-object v2

    #@1b
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1d
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4

    #@1e
    .line 7124
    array-length v0, v2

    #@1f
    .line 7125
    .local v0, "N":I
    const/4 v1, 0x0

    #@20
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@22
    .line 7126
    aget-object v3, v2, v1

    #@24
    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->focusChanged()V

    #@27
    .line 7125
    add-int/lit8 v1, v1, 0x1

    #@29
    goto :goto_0

    #@2a
    .line 7117
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_0
    move-exception v3

    #@2b
    monitor-exit v4

    #@2c
    throw v3

    #@2d
    .line 7115
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :cond_1
    return-void
.end method

.method private notifyWindowsChanged()V
    .locals 5

    #@0
    .prologue
    .line 7102
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 7103
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v3

    #@9
    if-eqz v3, :cond_0

    #@b
    monitor-exit v4

    #@c
    .line 7104
    return-void

    #@d
    .line 7106
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v3

    #@13
    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@15
    .line 7107
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@17
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    #@1a
    move-result-object v2

    #@1b
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1d
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4

    #@1e
    .line 7109
    array-length v0, v2

    #@1f
    .line 7110
    .local v0, "N":I
    const/4 v1, 0x0

    #@20
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@22
    .line 7111
    aget-object v3, v2, v1

    #@24
    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->windowsChanged()V

    #@27
    .line 7110
    add-int/lit8 v1, v1, 0x1

    #@29
    goto :goto_0

    #@2a
    .line 7102
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_0
    move-exception v3

    #@2b
    monitor-exit v4

    #@2c
    throw v3

    #@2d
    .line 7100
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :cond_1
    return-void
.end method

.method private final performLayoutAndPlaceSurfacesLocked()V
    .locals 4

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 8914
    const/4 v0, 0x6

    #@2
    .line 8916
    .local v0, "loopCount":I
    :cond_0
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    #@4
    .line 8917
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLockedLoop()V

    #@7
    .line 8918
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@9
    const/4 v2, 0x4

    #@a
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@d
    .line 8919
    add-int/lit8 v0, v0, -0x1

    #@f
    .line 8920
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    #@11
    if-eqz v1, :cond_1

    #@13
    if-gtz v0, :cond_0

    #@15
    .line 8921
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@17
    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperActionPending:Z

    #@19
    .line 8913
    return-void
.end method

.method private final performLayoutAndPlaceSurfacesLockedInner(Z)V
    .locals 53
    .param p1, "recoveringMemory"    # Z

    #@0
    .prologue
    .line 9831
    const/16 v47, 0x0

    #@2
    .line 9833
    .local v47, "updateInputWindowsNeeded":Z
    move-object/from16 v0, p0

    #@4
    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    #@6
    if-eqz v4, :cond_0

    #@8
    .line 9834
    const/4 v4, 0x0

    #@9
    move-object/from16 v0, p0

    #@b
    iput-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    #@d
    .line 9835
    const/4 v4, 0x3

    #@e
    .line 9836
    const/4 v6, 0x0

    #@f
    .line 9835
    move-object/from16 v0, p0

    #@11
    invoke-direct {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@14
    move-result v47

    #@15
    .line 9840
    .end local v47    # "updateInputWindowsNeeded":Z
    :cond_0
    move-object/from16 v0, p0

    #@17
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@19
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@1c
    move-result v36

    #@1d
    .line 9841
    .local v36, "numDisplays":I
    const/16 v24, 0x0

    #@1f
    .local v24, "displayNdx":I
    :goto_0
    move/from16 v0, v24

    #@21
    move/from16 v1, v36

    #@23
    if-ge v0, v1, :cond_2

    #@25
    .line 9842
    move-object/from16 v0, p0

    #@27
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@29
    move/from16 v0, v24

    #@2b
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@2e
    move-result-object v20

    #@2f
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@31
    .line 9843
    .local v20, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v20

    #@33
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    #@35
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@38
    move-result v4

    #@39
    add-int/lit8 v31, v4, -0x1

    #@3b
    .local v31, "i":I
    :goto_1
    if-ltz v31, :cond_1

    #@3d
    .line 9844
    move-object/from16 v0, v20

    #@3f
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    #@41
    move/from16 v0, v31

    #@43
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@46
    move-result-object v4

    #@47
    check-cast v4, Lcom/android/server/wm/WindowToken;

    #@49
    const/4 v6, 0x0

    #@4a
    iput-boolean v6, v4, Lcom/android/server/wm/WindowToken;->hasVisible:Z

    #@4c
    .line 9843
    add-int/lit8 v31, v31, -0x1

    #@4e
    goto :goto_1

    #@4f
    .line 9841
    :cond_1
    add-int/lit8 v24, v24, 0x1

    #@51
    goto :goto_0

    #@52
    .line 9848
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v31    # "i":I
    :cond_2
    move-object/from16 v0, p0

    #@54
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@56
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@59
    move-result v4

    #@5a
    add-int/lit8 v41, v4, -0x1

    #@5c
    .local v41, "stackNdx":I
    :goto_2
    if-ltz v41, :cond_4

    #@5e
    .line 9851
    move-object/from16 v0, p0

    #@60
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@62
    move/from16 v0, v41

    #@64
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@67
    move-result-object v4

    #@68
    check-cast v4, Lcom/android/server/wm/TaskStack;

    #@6a
    .line 9850
    iget-object v0, v4, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    #@6c
    move-object/from16 v28, v0

    #@6e
    .line 9852
    .local v28, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/AppTokenList;->size()I

    #@71
    move-result v4

    #@72
    add-int/lit8 v44, v4, -0x1

    #@74
    .local v44, "tokenNdx":I
    :goto_3
    if-ltz v44, :cond_3

    #@76
    .line 9853
    move-object/from16 v0, v28

    #@78
    move/from16 v1, v44

    #@7a
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@7d
    move-result-object v4

    #@7e
    check-cast v4, Lcom/android/server/wm/AppWindowToken;

    #@80
    const/4 v6, 0x0

    #@81
    iput-boolean v6, v4, Lcom/android/server/wm/AppWindowToken;->hasVisible:Z

    #@83
    .line 9852
    add-int/lit8 v44, v44, -0x1

    #@85
    goto :goto_3

    #@86
    .line 9848
    :cond_3
    add-int/lit8 v41, v41, -0x1

    #@88
    goto :goto_2

    #@89
    .line 9857
    .end local v28    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    .end local v44    # "tokenNdx":I
    :cond_4
    move-object/from16 v0, p0

    #@8b
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@8d
    const/4 v6, 0x0

    #@8e
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set1(Lcom/android/server/wm/WindowManagerService$LayoutFields;Lcom/android/server/wm/Session;)Lcom/android/server/wm/Session;

    #@91
    .line 9858
    move-object/from16 v0, p0

    #@93
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@95
    const/high16 v6, -0x40800000    # -1.0f

    #@97
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set3(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    #@9a
    .line 9859
    move-object/from16 v0, p0

    #@9c
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@9e
    const/high16 v6, -0x40800000    # -1.0f

    #@a0
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set0(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    #@a3
    .line 9860
    move-object/from16 v0, p0

    #@a5
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@a7
    const-wide/16 v6, -0x1

    #@a9
    invoke-static {v4, v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set6(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    #@ac
    .line 9861
    move-object/from16 v0, p0

    #@ae
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@b0
    const/4 v6, 0x0

    #@b1
    iput-boolean v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    #@b3
    .line 9863
    move-object/from16 v0, p0

    #@b5
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    #@b7
    add-int/lit8 v4, v4, 0x1

    #@b9
    move-object/from16 v0, p0

    #@bb
    iput v4, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    #@bd
    .line 9865
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@c0
    move-result-object v15

    #@c1
    .line 9866
    .local v15, "defaultDisplay":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v15}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@c4
    move-result-object v17

    #@c5
    .line 9867
    .local v17, "defaultInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v17

    #@c7
    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@c9
    move/from16 v16, v0

    #@cb
    .line 9868
    .local v16, "defaultDw":I
    move-object/from16 v0, v17

    #@cd
    iget v14, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@cf
    .line 9872
    .local v14, "defaultDh":I
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@d2
    .line 9875
    :try_start_0
    move-object/from16 v0, p0

    #@d4
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    #@d6
    if-eqz v4, :cond_5

    #@d8
    .line 9876
    move-object/from16 v0, p0

    #@da
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    #@dc
    move/from16 v0, v16

    #@de
    invoke-virtual {v4, v0, v14}, Lcom/android/server/wm/Watermark;->positionSurface(II)V

    #@e1
    .line 9878
    :cond_5
    move-object/from16 v0, p0

    #@e3
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@e5
    if-eqz v4, :cond_6

    #@e7
    .line 9879
    move-object/from16 v0, p0

    #@e9
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@eb
    move/from16 v0, v16

    #@ed
    invoke-virtual {v4, v0, v14}, Lcom/android/server/wm/StrictModeFlash;->positionSurface(II)V

    #@f0
    .line 9881
    :cond_6
    move-object/from16 v0, p0

    #@f2
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@f4
    if-eqz v4, :cond_7

    #@f6
    .line 9882
    move-object/from16 v0, p0

    #@f8
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@fa
    move-object/from16 v0, p0

    #@fc
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@fe
    move/from16 v0, v16

    #@100
    invoke-virtual {v4, v0, v14, v6}, Lcom/android/server/wm/CircularDisplayMask;->positionSurface(III)V

    #@103
    .line 9884
    :cond_7
    move-object/from16 v0, p0

    #@105
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@107
    if-eqz v4, :cond_8

    #@109
    .line 9885
    move-object/from16 v0, p0

    #@10b
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@10d
    move-object/from16 v0, p0

    #@10f
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@111
    move/from16 v0, v16

    #@113
    invoke-virtual {v4, v0, v14, v6}, Lcom/android/server/wm/EmulatorDisplayOverlay;->positionSurface(III)V

    #@116
    .line 9888
    :cond_8
    const/16 v30, 0x0

    #@118
    .line 9890
    .local v30, "focusDisplayed":Z
    const/16 v24, 0x0

    #@11a
    :goto_4
    move/from16 v0, v24

    #@11c
    move/from16 v1, v36

    #@11e
    if-ge v0, v1, :cond_31

    #@120
    .line 9891
    move-object/from16 v0, p0

    #@122
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@124
    move/from16 v0, v24

    #@126
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@129
    move-result-object v20

    #@12a
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@12c
    .line 9892
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    const/16 v46, 0x0

    #@12e
    .line 9893
    .local v46, "updateAllDrawn":Z
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@131
    move-result-object v52

    #@132
    .line 9894
    .local v52, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@135
    move-result-object v22

    #@136
    .line 9895
    .local v22, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@139
    move-result v5

    #@13a
    .line 9896
    .local v5, "displayId":I
    move-object/from16 v0, v22

    #@13c
    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@13e
    move/from16 v25, v0

    #@140
    .line 9897
    .local v25, "dw":I
    move-object/from16 v0, v22

    #@142
    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@144
    move/from16 v19, v0

    #@146
    .line 9898
    .local v19, "dh":I
    move-object/from16 v0, v22

    #@148
    iget v0, v0, Landroid/view/DisplayInfo;->appWidth:I

    #@14a
    move/from16 v33, v0

    #@14c
    .line 9899
    .local v33, "innerDw":I
    move-object/from16 v0, v22

    #@14e
    iget v0, v0, Landroid/view/DisplayInfo;->appHeight:I

    #@150
    move/from16 v32, v0

    #@152
    .line 9900
    .local v32, "innerDh":I
    if-nez v5, :cond_a

    #@154
    const/16 v34, 0x1

    #@156
    .line 9903
    .local v34, "isDefaultDisplay":Z
    :goto_5
    move-object/from16 v0, p0

    #@158
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@15a
    const/4 v6, 0x0

    #@15b
    iput-boolean v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    #@15d
    .line 9904
    move-object/from16 v0, p0

    #@15f
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@161
    const/4 v6, 0x0

    #@162
    iput v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredRefreshRate:F

    #@164
    .line 9905
    move-object/from16 v0, p0

    #@166
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@168
    const/4 v6, 0x0

    #@169
    iput v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredModeId:I

    #@16b
    .line 9907
    const/16 v38, 0x0

    #@16d
    .line 9909
    .local v38, "repeats":I
    :goto_6
    add-int/lit8 v38, v38, 0x1

    #@16f
    .line 9910
    const/4 v4, 0x6

    #@170
    move/from16 v0, v38

    #@172
    if-le v0, v4, :cond_b

    #@174
    .line 9911
    const-string/jumbo v4, "WindowManager"

    #@177
    const-string/jumbo v6, "Animation repeat aborted after too many iterations"

    #@17a
    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@17d
    .line 9912
    const/4 v4, 0x0

    #@17e
    move-object/from16 v0, v20

    #@180
    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@182
    .line 9966
    :cond_9
    move-object/from16 v0, p0

    #@184
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@186
    const/4 v6, 0x0

    #@187
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set2(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    #@18a
    .line 9967
    move-object/from16 v0, p0

    #@18c
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@18e
    const/4 v6, 0x0

    #@18f
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set4(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    #@192
    .line 9968
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->resetDimming()V

    #@195
    .line 9971
    move-object/from16 v0, p0

    #@197
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@199
    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    #@19c
    move-result v4

    #@19d
    if-eqz v4, :cond_1a

    #@19f
    const/16 v39, 0x0

    #@1a1
    .line 9973
    .local v39, "someoneLosingFocus":Z
    :goto_7
    invoke-virtual/range {v52 .. v52}, Lcom/android/server/wm/WindowList;->size()I

    #@1a4
    move-result v10

    #@1a5
    .line 9974
    .local v10, "N":I
    add-int/lit8 v31, v10, -0x1

    #@1a7
    .restart local v31    # "i":I
    :goto_8
    if-ltz v31, :cond_2f

    #@1a9
    .line 9975
    move-object/from16 v0, v52

    #@1ab
    move/from16 v1, v31

    #@1ad
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1b0
    move-result-object v48

    #@1b1
    check-cast v48, Lcom/android/server/wm/WindowState;

    #@1b3
    .line 9976
    .local v48, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    #@1b6
    move-result-object v40

    #@1b7
    .line 9977
    .local v40, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v40, :cond_1b

    #@1b9
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    #@1bc
    move-result-object v4

    #@1bd
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@1bf
    const/16 v6, 0x7ee

    #@1c1
    if-eq v4, v6, :cond_1b

    #@1c3
    .line 9974
    :goto_9
    add-int/lit8 v31, v31, -0x1

    #@1c5
    goto :goto_8

    #@1c6
    .line 9900
    .end local v10    # "N":I
    .end local v31    # "i":I
    .end local v34    # "isDefaultDisplay":Z
    .end local v38    # "repeats":I
    .end local v39    # "someoneLosingFocus":Z
    .end local v40    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v48    # "w":Lcom/android/server/wm/WindowState;
    :cond_a
    const/16 v34, 0x0

    #@1c8
    .restart local v34    # "isDefaultDisplay":Z
    goto :goto_5

    #@1c9
    .line 9916
    .restart local v38    # "repeats":I
    :cond_b
    const-string/jumbo v4, "On entry to LockedInner"

    #@1cc
    .line 9917
    move-object/from16 v0, v20

    #@1ce
    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@1d0
    .line 9916
    move-object/from16 v0, p0

    #@1d2
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@1d5
    .line 9919
    move-object/from16 v0, v20

    #@1d7
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@1d9
    and-int/lit8 v4, v4, 0x4

    #@1db
    if-eqz v4, :cond_c

    #@1dd
    .line 9921
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->adjustWallpaperWindowsLocked()Z

    #@1e0
    move-result v4

    #@1e1
    .line 9919
    if-eqz v4, :cond_c

    #@1e3
    .line 9922
    move-object/from16 v0, p0

    #@1e5
    move-object/from16 v1, v52

    #@1e7
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@1ea
    .line 9923
    const/4 v4, 0x1

    #@1eb
    move-object/from16 v0, v20

    #@1ed
    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@1ef
    .line 9926
    :cond_c
    if-eqz v34, :cond_d

    #@1f1
    move-object/from16 v0, v20

    #@1f3
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@1f5
    and-int/lit8 v4, v4, 0x2

    #@1f7
    if-eqz v4, :cond_d

    #@1f9
    .line 9929
    const/4 v4, 0x1

    #@1fa
    move-object/from16 v0, p0

    #@1fc
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@1ff
    move-result v4

    #@200
    if-eqz v4, :cond_d

    #@202
    .line 9930
    const/4 v4, 0x1

    #@203
    move-object/from16 v0, v20

    #@205
    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@207
    .line 9931
    move-object/from16 v0, p0

    #@209
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@20b
    const/16 v6, 0x12

    #@20d
    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@210
    .line 9935
    :cond_d
    move-object/from16 v0, v20

    #@212
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@214
    and-int/lit8 v4, v4, 0x1

    #@216
    if-eqz v4, :cond_e

    #@218
    .line 9937
    const/4 v4, 0x1

    #@219
    move-object/from16 v0, v20

    #@21b
    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@21d
    .line 9941
    :cond_e
    const/4 v4, 0x4

    #@21e
    move/from16 v0, v38

    #@220
    if-ge v0, v4, :cond_11

    #@222
    .line 9942
    const/4 v4, 0x1

    #@223
    move/from16 v0, v38

    #@225
    if-ne v0, v4, :cond_10

    #@227
    const/4 v4, 0x1

    #@228
    .line 9943
    :goto_a
    const/4 v6, 0x0

    #@229
    .line 9942
    move-object/from16 v0, p0

    #@22b
    move-object/from16 v1, v20

    #@22d
    invoke-direct {v0, v1, v4, v6}, Lcom/android/server/wm/WindowManagerService;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    #@230
    .line 9950
    :goto_b
    const/4 v4, 0x0

    #@231
    move-object/from16 v0, v20

    #@233
    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@235
    .line 9952
    if-eqz v34, :cond_19

    #@237
    .line 9953
    move-object/from16 v0, p0

    #@239
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@23b
    move/from16 v0, v25

    #@23d
    move/from16 v1, v19

    #@23f
    invoke-interface {v4, v0, v1}, Landroid/view/WindowManagerPolicy;->beginPostLayoutPolicyLw(II)V

    #@242
    .line 9954
    invoke-virtual/range {v52 .. v52}, Lcom/android/server/wm/WindowList;->size()I

    #@245
    move-result v4

    #@246
    add-int/lit8 v31, v4, -0x1

    #@248
    .restart local v31    # "i":I
    :goto_c
    if-ltz v31, :cond_18

    #@24a
    .line 9955
    move-object/from16 v0, v52

    #@24c
    move/from16 v1, v31

    #@24e
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@251
    move-result-object v48

    #@252
    check-cast v48, Lcom/android/server/wm/WindowState;

    #@254
    .line 9956
    .restart local v48    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v48

    #@256
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@258
    if-eqz v4, :cond_f

    #@25a
    .line 9957
    move-object/from16 v0, p0

    #@25c
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@25e
    move-object/from16 v0, v48

    #@260
    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@262
    move-object/from16 v0, v48

    #@264
    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@266
    move-object/from16 v0, v48

    #@268
    invoke-interface {v4, v0, v6, v7}, Landroid/view/WindowManagerPolicy;->applyPostLayoutPolicyLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Landroid/view/WindowManagerPolicy$WindowState;)V

    #@26b
    .line 9954
    :cond_f
    add-int/lit8 v31, v31, -0x1

    #@26d
    goto :goto_c

    #@26e
    .line 9942
    .end local v31    # "i":I
    .end local v48    # "w":Lcom/android/server/wm/WindowState;
    :cond_10
    const/4 v4, 0x0

    #@26f
    goto :goto_a

    #@270
    .line 9945
    :cond_11
    const-string/jumbo v4, "WindowManager"

    #@273
    const-string/jumbo v6, "Layout repeat skipped after too many iterations"

    #@276
    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@279
    goto :goto_b

    #@27a
    .line 10146
    .end local v5    # "displayId":I
    .end local v19    # "dh":I
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v25    # "dw":I
    .end local v30    # "focusDisplayed":Z
    .end local v32    # "innerDh":I
    .end local v33    # "innerDw":I
    .end local v34    # "isDefaultDisplay":Z
    .end local v38    # "repeats":I
    .end local v46    # "updateAllDrawn":Z
    .end local v52    # "windows":Lcom/android/server/wm/WindowList;
    :catch_0
    move-exception v27

    #@27b
    .line 10147
    .local v27, "e":Ljava/lang/RuntimeException;
    :try_start_1
    const-string/jumbo v4, "WindowManager"

    #@27e
    const-string/jumbo v6, "Unhandled exception in Window Manager"

    #@281
    move-object/from16 v0, v27

    #@283
    invoke-static {v4, v6, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@286
    .line 10149
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@289
    .line 10154
    .end local v27    # "e":Ljava/lang/RuntimeException;
    :goto_d
    invoke-virtual {v15}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@28c
    move-result-object v18

    #@28d
    .line 10159
    .local v18, "defaultWindows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    #@28f
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@291
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isReady()Z

    #@294
    move-result v4

    #@295
    if-eqz v4, :cond_12

    #@297
    .line 10160
    iget v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@299
    move-object/from16 v0, p0

    #@29b
    move-object/from16 v1, v18

    #@29d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;)I

    #@2a0
    move-result v6

    #@2a1
    or-int/2addr v4, v6

    #@2a2
    iput v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2a4
    .line 10161
    const-string/jumbo v4, "after handleAppTransitionReadyLocked"

    #@2a7
    .line 10162
    iget v6, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2a9
    .line 10161
    move-object/from16 v0, p0

    #@2ab
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@2ae
    .line 10165
    :cond_12
    move-object/from16 v0, p0

    #@2b0
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@2b2
    iget-boolean v4, v4, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    #@2b4
    if-nez v4, :cond_13

    #@2b6
    move-object/from16 v0, p0

    #@2b8
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2ba
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isRunning()Z

    #@2bd
    move-result v4

    #@2be
    if-eqz v4, :cond_13

    #@2c0
    .line 10172
    iget v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2c2
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->handleAnimatingStoppedAndTransitionLocked()I

    #@2c5
    move-result v6

    #@2c6
    or-int/2addr v4, v6

    #@2c7
    iput v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2c9
    .line 10173
    const-string/jumbo v4, "after handleAnimStopAndXitionLock"

    #@2cc
    .line 10174
    iget v6, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2ce
    .line 10173
    move-object/from16 v0, p0

    #@2d0
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@2d3
    .line 10177
    :cond_13
    move-object/from16 v0, p0

    #@2d5
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@2d7
    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    #@2d9
    if-eqz v4, :cond_14

    #@2db
    iget v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2dd
    if-nez v4, :cond_14

    #@2df
    .line 10178
    move-object/from16 v0, p0

    #@2e1
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2e3
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isReady()Z

    #@2e6
    move-result v4

    #@2e7
    if-eqz v4, :cond_33

    #@2e9
    .line 10189
    :cond_14
    :goto_e
    move-object/from16 v0, p0

    #@2eb
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@2ed
    const/4 v6, 0x0

    #@2ee
    iput-boolean v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    #@2f0
    .line 10191
    move-object/from16 v0, p0

    #@2f2
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@2f4
    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    #@2f6
    if-eqz v4, :cond_15

    #@2f8
    .line 10193
    iget v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2fa
    or-int/lit8 v4, v4, 0x4

    #@2fc
    iput v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2fe
    .line 10195
    const-string/jumbo v4, "WallpaperMayChange"

    #@301
    .line 10196
    iget v6, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@303
    .line 10195
    move-object/from16 v0, p0

    #@305
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@308
    .line 10199
    :cond_15
    move-object/from16 v0, p0

    #@30a
    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    #@30c
    if-eqz v4, :cond_16

    #@30e
    .line 10200
    const/4 v4, 0x0

    #@30f
    move-object/from16 v0, p0

    #@311
    iput-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    #@313
    .line 10201
    const/4 v4, 0x2

    #@314
    .line 10202
    const/4 v6, 0x0

    #@315
    .line 10201
    move-object/from16 v0, p0

    #@317
    invoke-direct {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@31a
    move-result v4

    #@31b
    if-eqz v4, :cond_16

    #@31d
    .line 10203
    const/16 v47, 0x1

    #@31f
    .line 10204
    .restart local v47    # "updateInputWindowsNeeded":Z
    iget v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@321
    or-int/lit8 v4, v4, 0x8

    #@323
    iput v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@325
    .line 10208
    .end local v47    # "updateInputWindowsNeeded":Z
    :cond_16
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    #@328
    move-result v4

    #@329
    if-eqz v4, :cond_17

    #@32b
    .line 10209
    iget v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@32d
    or-int/lit8 v4, v4, 0x1

    #@32f
    iput v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@331
    .line 10210
    const-string/jumbo v4, "mLayoutNeeded"

    #@334
    .line 10211
    iget v6, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@336
    .line 10210
    move-object/from16 v0, p0

    #@338
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@33b
    .line 10214
    :cond_17
    move-object/from16 v0, p0

    #@33d
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@33f
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@342
    move-result v4

    #@343
    add-int/lit8 v31, v4, -0x1

    #@345
    .restart local v31    # "i":I
    :goto_f
    if-ltz v31, :cond_35

    #@347
    .line 10215
    move-object/from16 v0, p0

    #@349
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@34b
    move/from16 v0, v31

    #@34d
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@350
    move-result-object v50

    #@351
    check-cast v50, Lcom/android/server/wm/WindowState;

    #@353
    .line 10216
    .local v50, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v50

    #@355
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@357
    if-eqz v4, :cond_34

    #@359
    .line 10214
    :goto_10
    add-int/lit8 v31, v31, -0x1

    #@35b
    goto :goto_f

    #@35c
    .line 9960
    .end local v18    # "defaultWindows":Lcom/android/server/wm/WindowList;
    .end local v50    # "win":Lcom/android/server/wm/WindowState;
    .restart local v5    # "displayId":I
    .restart local v19    # "dh":I
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v25    # "dw":I
    .restart local v30    # "focusDisplayed":Z
    .restart local v32    # "innerDh":I
    .restart local v33    # "innerDw":I
    .restart local v34    # "isDefaultDisplay":Z
    .restart local v38    # "repeats":I
    .restart local v46    # "updateAllDrawn":Z
    .restart local v52    # "windows":Lcom/android/server/wm/WindowList;
    :cond_18
    :try_start_2
    move-object/from16 v0, v20

    #@35e
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@360
    move-object/from16 v0, p0

    #@362
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@364
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->finishPostLayoutPolicyLw()I

    #@367
    move-result v6

    #@368
    or-int/2addr v4, v6

    #@369
    move-object/from16 v0, v20

    #@36b
    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@36d
    .line 9962
    const-string/jumbo v4, "after finishPostLayoutPolicyLw"

    #@370
    move-object/from16 v0, v20

    #@372
    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@374
    .line 9961
    move-object/from16 v0, p0

    #@376
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@379
    .line 9964
    .end local v31    # "i":I
    :cond_19
    move-object/from16 v0, v20

    #@37b
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@37d
    if-eqz v4, :cond_9

    #@37f
    goto/16 :goto_6

    #@381
    .line 9971
    :cond_1a
    const/16 v39, 0x1

    #@383
    .restart local v39    # "someoneLosingFocus":Z
    goto/16 :goto_7

    #@385
    .line 9981
    .restart local v10    # "N":I
    .restart local v31    # "i":I
    .restart local v40    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v48    # "w":Lcom/android/server/wm/WindowState;
    :cond_1b
    move-object/from16 v0, v48

    #@387
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mObscured:Z

    #@389
    move-object/from16 v0, p0

    #@38b
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@38d
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get2(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@390
    move-result v6

    #@391
    if-eq v4, v6, :cond_2a

    #@393
    const/16 v37, 0x1

    #@395
    .line 9984
    .local v37, "obscuredChanged":Z
    :goto_11
    move-object/from16 v0, p0

    #@397
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@399
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get2(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@39c
    move-result v4

    #@39d
    move-object/from16 v0, v48

    #@39f
    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mObscured:Z

    #@3a1
    .line 9985
    move-object/from16 v0, p0

    #@3a3
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@3a5
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get2(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@3a8
    move-result v4

    #@3a9
    if-nez v4, :cond_1c

    #@3ab
    .line 9986
    move-object/from16 v0, p0

    #@3ad
    move-object/from16 v1, v48

    #@3af
    move/from16 v2, v33

    #@3b1
    move/from16 v3, v32

    #@3b3
    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService;->handleNotObscuredLocked(Lcom/android/server/wm/WindowState;II)V

    #@3b6
    .line 9989
    :cond_1c
    if-eqz v40, :cond_1d

    #@3b8
    invoke-virtual/range {v40 .. v40}, Lcom/android/server/wm/TaskStack;->testDimmingTag()Z

    #@3bb
    move-result v4

    #@3bc
    if-eqz v4, :cond_2b

    #@3be
    .line 9993
    :cond_1d
    :goto_12
    if-eqz v34, :cond_1e

    #@3c0
    if-eqz v37, :cond_1e

    #@3c2
    move-object/from16 v0, p0

    #@3c4
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@3c6
    move-object/from16 v0, v48

    #@3c8
    if-ne v4, v0, :cond_1e

    #@3ca
    .line 9994
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@3cd
    move-result v4

    #@3ce
    .line 9993
    if-eqz v4, :cond_1e

    #@3d0
    .line 9998
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperVisibilityLocked()V

    #@3d3
    .line 10001
    :cond_1e
    move-object/from16 v0, v48

    #@3d5
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@3d7
    move-object/from16 v51, v0

    #@3d9
    .line 10005
    .local v51, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->hasMoved()Z

    #@3dc
    move-result v4

    #@3dd
    if-eqz v4, :cond_21

    #@3df
    .line 10008
    move-object/from16 v0, v48

    #@3e1
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@3e3
    iget v0, v4, Landroid/graphics/Rect;->left:I

    #@3e5
    move/from16 v35, v0

    #@3e7
    .line 10009
    .local v35, "left":I
    move-object/from16 v0, v48

    #@3e9
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@3eb
    iget v0, v4, Landroid/graphics/Rect;->top:I

    #@3ed
    move/from16 v45, v0

    #@3ef
    .line 10010
    .local v45, "top":I
    move-object/from16 v0, v48

    #@3f1
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@3f3
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@3f5
    and-int/lit8 v4, v4, 0x40

    #@3f7
    if-nez v4, :cond_1f

    #@3f9
    .line 10011
    move-object/from16 v0, p0

    #@3fb
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@3fd
    .line 10012
    const v6, 0x10a008c

    #@400
    .line 10011
    invoke-static {v4, v6}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    #@403
    move-result-object v11

    #@404
    .line 10013
    .local v11, "a":Landroid/view/animation/Animation;
    move-object/from16 v0, v51

    #@406
    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowStateAnimator;->setAnimation(Landroid/view/animation/Animation;)V

    #@409
    .line 10014
    move-object/from16 v0, v48

    #@40b
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    #@40d
    iget v4, v4, Landroid/graphics/Rect;->left:I

    #@40f
    sub-int v4, v4, v35

    #@411
    move-object/from16 v0, v51

    #@413
    iput v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimDw:I

    #@415
    .line 10015
    move-object/from16 v0, v48

    #@417
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    #@419
    iget v4, v4, Landroid/graphics/Rect;->top:I

    #@41b
    sub-int v4, v4, v45

    #@41d
    move-object/from16 v0, v51

    #@41f
    iput v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimDh:I

    #@421
    .line 10016
    const/4 v4, 0x1

    #@422
    move-object/from16 v0, v51

    #@424
    iput-boolean v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimateMove:Z

    #@426
    .line 10017
    const/4 v4, 0x1

    #@427
    move-object/from16 v0, v51

    #@429
    iput-boolean v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimatingMove:Z

    #@42b
    .line 10021
    .end local v11    # "a":Landroid/view/animation/Animation;
    :cond_1f
    move-object/from16 v0, p0

    #@42d
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@42f
    if-eqz v4, :cond_20

    #@431
    .line 10022
    if-nez v5, :cond_20

    #@433
    .line 10023
    move-object/from16 v0, p0

    #@435
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@437
    invoke-virtual {v4}, Lcom/android/server/wm/AccessibilityController;->onSomeWindowResizedOrMovedLocked()V
    :try_end_2
    .catch Ljava/lang/RuntimeException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@43a
    .line 10027
    :cond_20
    :try_start_3
    move-object/from16 v0, v48

    #@43c
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@43e
    move/from16 v0, v35

    #@440
    move/from16 v1, v45

    #@442
    invoke-interface {v4, v0, v1}, Landroid/view/IWindow;->moved(II)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@445
    .line 10033
    .end local v35    # "left":I
    .end local v45    # "top":I
    :cond_21
    :goto_13
    const/4 v4, 0x0

    #@446
    :try_start_4
    move-object/from16 v0, v48

    #@448
    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    #@44a
    .line 10036
    move-object/from16 v0, v48

    #@44c
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@44e
    if-eqz v4, :cond_24

    #@450
    .line 10039
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/WindowStateAnimator;->commitFinishDrawingLocked()Z

    #@453
    move-result v13

    #@454
    .line 10040
    .local v13, "committed":Z
    if-eqz v34, :cond_23

    #@456
    if-eqz v13, :cond_23

    #@458
    .line 10041
    move-object/from16 v0, v48

    #@45a
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@45c
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@45e
    const/16 v6, 0x7e7

    #@460
    if-ne v4, v6, :cond_22

    #@462
    .line 10046
    move-object/from16 v0, v20

    #@464
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@466
    or-int/lit8 v4, v4, 0x1

    #@468
    move-object/from16 v0, v20

    #@46a
    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@46c
    .line 10050
    const-string/jumbo v4, "dream and commitFinishDrawingLocked true"

    #@46f
    .line 10051
    move-object/from16 v0, v20

    #@471
    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@473
    .line 10049
    move-object/from16 v0, p0

    #@475
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@478
    .line 10054
    :cond_22
    move-object/from16 v0, v48

    #@47a
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@47c
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@47e
    const/high16 v6, 0x100000

    #@480
    and-int/2addr v4, v6

    #@481
    if-eqz v4, :cond_23

    #@483
    .line 10057
    move-object/from16 v0, p0

    #@485
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@487
    const/4 v6, 0x1

    #@488
    iput-boolean v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    #@48a
    .line 10058
    move-object/from16 v0, v20

    #@48c
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@48e
    or-int/lit8 v4, v4, 0x4

    #@490
    move-object/from16 v0, v20

    #@492
    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@494
    .line 10062
    const-string/jumbo v4, "wallpaper and commitFinishDrawingLocked true"

    #@497
    .line 10063
    move-object/from16 v0, v20

    #@499
    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@49b
    .line 10061
    move-object/from16 v0, p0

    #@49d
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@4a0
    .line 10068
    :cond_23
    move-object/from16 v0, v51

    #@4a2
    move/from16 v1, p1

    #@4a4
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowStateAnimator;->setSurfaceBoundariesLocked(Z)V

    #@4a7
    .line 10071
    .end local v13    # "committed":Z
    :cond_24
    move-object/from16 v0, v48

    #@4a9
    iget-object v12, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@4ab
    .line 10078
    .local v12, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v12, :cond_28

    #@4ad
    .line 10079
    iget-boolean v4, v12, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@4af
    if-eqz v4, :cond_25

    #@4b1
    iget-object v4, v12, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@4b3
    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@4b5
    .line 10078
    if-eqz v4, :cond_28

    #@4b7
    .line 10080
    :cond_25
    iget-wide v6, v12, Lcom/android/server/wm/AppWindowToken;->lastTransactionSequence:J

    #@4b9
    move-object/from16 v0, p0

    #@4bb
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    #@4bd
    int-to-long v8, v4

    #@4be
    cmp-long v4, v6, v8

    #@4c0
    if-eqz v4, :cond_26

    #@4c2
    .line 10081
    move-object/from16 v0, p0

    #@4c4
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    #@4c6
    int-to-long v6, v4

    #@4c7
    iput-wide v6, v12, Lcom/android/server/wm/AppWindowToken;->lastTransactionSequence:J

    #@4c9
    .line 10082
    const/4 v4, 0x0

    #@4ca
    iput v4, v12, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    #@4cc
    const/4 v4, 0x0

    #@4cd
    iput v4, v12, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    #@4cf
    .line 10083
    const/4 v4, 0x0

    #@4d0
    iput-boolean v4, v12, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@4d2
    .line 10085
    :cond_26
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->isOnScreenIgnoringKeyguard()Z

    #@4d5
    move-result v4

    #@4d6
    if-nez v4, :cond_27

    #@4d8
    .line 10086
    move-object/from16 v0, v51

    #@4da
    iget v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAttrType:I

    #@4dc
    const/4 v6, 0x1

    #@4dd
    if-ne v4, v6, :cond_28

    #@4df
    .line 10087
    :cond_27
    move-object/from16 v0, v48

    #@4e1
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@4e3
    if-eqz v4, :cond_2c

    #@4e5
    .line 10118
    :cond_28
    :goto_14
    if-eqz v34, :cond_29

    #@4e7
    if-eqz v39, :cond_29

    #@4e9
    move-object/from16 v0, p0

    #@4eb
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@4ed
    move-object/from16 v0, v48

    #@4ef
    if-ne v0, v4, :cond_29

    #@4f1
    .line 10119
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@4f4
    move-result v4

    #@4f5
    .line 10118
    if-eqz v4, :cond_29

    #@4f7
    .line 10120
    const/16 v30, 0x1

    #@4f9
    .line 10123
    :cond_29
    move-object/from16 v0, p0

    #@4fb
    move-object/from16 v1, v48

    #@4fd
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->updateResizingWindows(Lcom/android/server/wm/WindowState;)V
    :try_end_4
    .catch Ljava/lang/RuntimeException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@500
    goto/16 :goto_9

    #@502
    .line 10148
    .end local v5    # "displayId":I
    .end local v10    # "N":I
    .end local v12    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v19    # "dh":I
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v25    # "dw":I
    .end local v30    # "focusDisplayed":Z
    .end local v31    # "i":I
    .end local v32    # "innerDh":I
    .end local v33    # "innerDw":I
    .end local v34    # "isDefaultDisplay":Z
    .end local v37    # "obscuredChanged":Z
    .end local v38    # "repeats":I
    .end local v39    # "someoneLosingFocus":Z
    .end local v40    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v46    # "updateAllDrawn":Z
    .end local v48    # "w":Lcom/android/server/wm/WindowState;
    .end local v51    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v52    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_0
    move-exception v4

    #@503
    .line 10149
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@506
    .line 10148
    throw v4

    #@507
    .line 9981
    .restart local v5    # "displayId":I
    .restart local v10    # "N":I
    .restart local v19    # "dh":I
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v25    # "dw":I
    .restart local v30    # "focusDisplayed":Z
    .restart local v31    # "i":I
    .restart local v32    # "innerDh":I
    .restart local v33    # "innerDw":I
    .restart local v34    # "isDefaultDisplay":Z
    .restart local v38    # "repeats":I
    .restart local v39    # "someoneLosingFocus":Z
    .restart local v40    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v46    # "updateAllDrawn":Z
    .restart local v48    # "w":Lcom/android/server/wm/WindowState;
    .restart local v52    # "windows":Lcom/android/server/wm/WindowList;
    :cond_2a
    const/16 v37, 0x0

    #@509
    .restart local v37    # "obscuredChanged":Z
    goto/16 :goto_11

    #@50b
    .line 9990
    :cond_2b
    :try_start_5
    move-object/from16 v0, p0

    #@50d
    move-object/from16 v1, v48

    #@50f
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->handleFlagDimBehind(Lcom/android/server/wm/WindowState;)V

    #@512
    goto/16 :goto_12

    #@514
    .line 10087
    .restart local v12    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v51    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_2c
    move-object/from16 v0, v48

    #@516
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@518
    if-nez v4, :cond_28

    #@51a
    .line 10100
    iget-object v4, v12, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@51c
    move-object/from16 v0, v48

    #@51e
    if-eq v0, v4, :cond_2e

    #@520
    .line 10101
    iget-object v4, v12, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@522
    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@524
    if-eqz v4, :cond_2d

    #@526
    move-object/from16 v0, v48

    #@528
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@52a
    if-nez v4, :cond_28

    #@52c
    .line 10102
    :cond_2d
    iget v4, v12, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    #@52e
    add-int/lit8 v4, v4, 0x1

    #@530
    iput v4, v12, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    #@532
    .line 10103
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@535
    move-result v4

    #@536
    if-eqz v4, :cond_28

    #@538
    .line 10104
    iget v4, v12, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    #@53a
    add-int/lit8 v4, v4, 0x1

    #@53c
    iput v4, v12, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    #@53e
    .line 10109
    const/16 v46, 0x1

    #@540
    goto :goto_14

    #@541
    .line 10112
    :cond_2e
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@544
    move-result v4

    #@545
    if-eqz v4, :cond_28

    #@547
    .line 10113
    const/4 v4, 0x1

    #@548
    iput-boolean v4, v12, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@54a
    goto :goto_14

    #@54b
    .line 10126
    .end local v12    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v37    # "obscuredChanged":Z
    .end local v40    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v48    # "w":Lcom/android/server/wm/WindowState;
    .end local v51    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_2f
    move-object/from16 v0, p0

    #@54d
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@54f
    .line 10127
    move-object/from16 v0, p0

    #@551
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@553
    iget-boolean v6, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    #@555
    move-object/from16 v0, p0

    #@557
    iget-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@559
    iget v7, v7, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredRefreshRate:F

    #@55b
    .line 10128
    move-object/from16 v0, p0

    #@55d
    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@55f
    iget v8, v8, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredModeId:I

    #@561
    .line 10129
    const/4 v9, 0x1

    #@562
    .line 10126
    invoke-virtual/range {v4 .. v9}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayProperties(IZFIZ)V

    #@565
    .line 10131
    move-object/from16 v0, p0

    #@567
    invoke-virtual {v0, v5}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@56a
    move-result-object v4

    #@56b
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->stopDimmingIfNeeded()V

    #@56e
    .line 10133
    if-eqz v46, :cond_30

    #@570
    .line 10134
    move-object/from16 v0, p0

    #@572
    move-object/from16 v1, v20

    #@574
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->updateAllDrawnLocked(Lcom/android/server/wm/DisplayContent;)V

    #@577
    .line 9890
    :cond_30
    add-int/lit8 v24, v24, 0x1

    #@579
    goto/16 :goto_4

    #@57b
    .line 10138
    .end local v5    # "displayId":I
    .end local v10    # "N":I
    .end local v19    # "dh":I
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v25    # "dw":I
    .end local v31    # "i":I
    .end local v32    # "innerDh":I
    .end local v33    # "innerDw":I
    .end local v34    # "isDefaultDisplay":Z
    .end local v38    # "repeats":I
    .end local v39    # "someoneLosingFocus":Z
    .end local v46    # "updateAllDrawn":Z
    .end local v52    # "windows":Lcom/android/server/wm/WindowList;
    :cond_31
    if-eqz v30, :cond_32

    #@57d
    .line 10139
    move-object/from16 v0, p0

    #@57f
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@581
    const/4 v6, 0x3

    #@582
    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@585
    .line 10144
    :cond_32
    move-object/from16 v0, p0

    #@587
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@589
    invoke-virtual {v4}, Landroid/hardware/display/DisplayManagerInternal;->performTraversalInTransactionFromWindowManager()V
    :try_end_5
    .catch Ljava/lang/RuntimeException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@58c
    .line 10149
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@58f
    goto/16 :goto_d

    #@591
    .line 10185
    .end local v30    # "focusDisplayed":Z
    .restart local v18    # "defaultWindows":Lcom/android/server/wm/WindowList;
    :cond_33
    iget v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@593
    or-int/lit8 v4, v4, 0x1

    #@595
    iput v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@597
    .line 10186
    const-string/jumbo v4, "after animateAwayWallpaperLocked"

    #@59a
    .line 10187
    iget v6, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@59c
    .line 10186
    move-object/from16 v0, p0

    #@59e
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    #@5a1
    goto/16 :goto_e

    #@5a3
    .line 10220
    .restart local v31    # "i":I
    .restart local v50    # "win":Lcom/android/server/wm/WindowState;
    :cond_34
    invoke-virtual/range {v50 .. v50}, Lcom/android/server/wm/WindowState;->reportResized()V

    #@5a6
    .line 10221
    move-object/from16 v0, p0

    #@5a8
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@5aa
    move/from16 v0, v31

    #@5ac
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    #@5af
    goto/16 :goto_10

    #@5b1
    .line 10227
    .end local v50    # "win":Lcom/android/server/wm/WindowState;
    :cond_35
    move-object/from16 v0, p0

    #@5b3
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@5b5
    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    #@5b7
    if-eqz v4, :cond_37

    #@5b9
    .line 10228
    move-object/from16 v0, p0

    #@5bb
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@5bd
    if-eqz v4, :cond_36

    #@5bf
    .line 10229
    const/4 v4, 0x0

    #@5c0
    move-object/from16 v0, p0

    #@5c2
    iput v4, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@5c4
    .line 10230
    move-object/from16 v0, p0

    #@5c6
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@5c8
    iget-object v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mLastWindowFreezeSource:Ljava/lang/Object;

    #@5ca
    move-object/from16 v0, p0

    #@5cc
    iput-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@5ce
    .line 10231
    move-object/from16 v0, p0

    #@5d0
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@5d2
    const/16 v6, 0xb

    #@5d4
    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@5d7
    .line 10233
    :cond_36
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    #@5da
    .line 10237
    :cond_37
    const/16 v49, 0x0

    #@5dc
    .line 10238
    .local v49, "wallpaperDestroyed":Z
    move-object/from16 v0, p0

    #@5de
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@5e0
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@5e3
    move-result v31

    #@5e4
    .line 10239
    if-lez v31, :cond_3b

    #@5e6
    .line 10241
    :cond_38
    add-int/lit8 v31, v31, -0x1

    #@5e8
    .line 10242
    move-object/from16 v0, p0

    #@5ea
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@5ec
    move/from16 v0, v31

    #@5ee
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@5f1
    move-result-object v50

    #@5f2
    check-cast v50, Lcom/android/server/wm/WindowState;

    #@5f4
    .line 10243
    .restart local v50    # "win":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    #@5f5
    move-object/from16 v0, v50

    #@5f7
    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@5f9
    .line 10244
    move-object/from16 v0, p0

    #@5fb
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@5fd
    move-object/from16 v0, v50

    #@5ff
    if-ne v4, v0, :cond_39

    #@601
    .line 10245
    const/4 v4, 0x0

    #@602
    move-object/from16 v0, p0

    #@604
    iput-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@606
    .line 10247
    :cond_39
    move-object/from16 v0, p0

    #@608
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@60a
    move-object/from16 v0, v50

    #@60c
    if-ne v0, v4, :cond_3a

    #@60e
    .line 10248
    const/16 v49, 0x1

    #@610
    .line 10250
    :cond_3a
    move-object/from16 v0, v50

    #@612
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@614
    invoke-virtual {v4}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    #@617
    .line 10251
    if-gtz v31, :cond_38

    #@619
    .line 10252
    move-object/from16 v0, p0

    #@61b
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@61d
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@620
    .line 10256
    .end local v50    # "win":Lcom/android/server/wm/WindowState;
    :cond_3b
    const/16 v24, 0x0

    #@622
    :goto_15
    move/from16 v0, v24

    #@624
    move/from16 v1, v36

    #@626
    if-ge v0, v1, :cond_3e

    #@628
    .line 10257
    move-object/from16 v0, p0

    #@62a
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@62c
    move/from16 v0, v24

    #@62e
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@631
    move-result-object v20

    #@632
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@634
    .line 10258
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v20

    #@636
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    #@638
    move-object/from16 v29, v0

    #@63a
    .line 10259
    .local v29, "exitingTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    invoke-virtual/range {v29 .. v29}, Ljava/util/ArrayList;->size()I

    #@63d
    move-result v4

    #@63e
    add-int/lit8 v31, v4, -0x1

    #@640
    :goto_16
    if-ltz v31, :cond_3d

    #@642
    .line 10260
    move-object/from16 v0, v29

    #@644
    move/from16 v1, v31

    #@646
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@649
    move-result-object v43

    #@64a
    check-cast v43, Lcom/android/server/wm/WindowToken;

    #@64c
    .line 10261
    .local v43, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, v43

    #@64e
    iget-boolean v4, v0, Lcom/android/server/wm/WindowToken;->hasVisible:Z

    #@650
    if-nez v4, :cond_3c

    #@652
    .line 10262
    move-object/from16 v0, v29

    #@654
    move/from16 v1, v31

    #@656
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    #@659
    .line 10263
    move-object/from16 v0, v43

    #@65b
    iget v4, v0, Lcom/android/server/wm/WindowToken;->windowType:I

    #@65d
    const/16 v6, 0x7dd

    #@65f
    if-ne v4, v6, :cond_3c

    #@661
    .line 10264
    move-object/from16 v0, p0

    #@663
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@665
    move-object/from16 v0, v43

    #@667
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@66a
    .line 10259
    :cond_3c
    add-int/lit8 v31, v31, -0x1

    #@66c
    goto :goto_16

    #@66d
    .line 10256
    .end local v43    # "token":Lcom/android/server/wm/WindowToken;
    :cond_3d
    add-int/lit8 v24, v24, 0x1

    #@66f
    goto :goto_15

    #@670
    .line 10271
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v29    # "exitingTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    :cond_3e
    move-object/from16 v0, p0

    #@672
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@674
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@677
    move-result v4

    #@678
    add-int/lit8 v41, v4, -0x1

    #@67a
    :goto_17
    if-ltz v41, :cond_43

    #@67c
    .line 10274
    move-object/from16 v0, p0

    #@67e
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@680
    move/from16 v0, v41

    #@682
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@685
    move-result-object v4

    #@686
    check-cast v4, Lcom/android/server/wm/TaskStack;

    #@688
    .line 10273
    iget-object v0, v4, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    #@68a
    move-object/from16 v28, v0

    #@68c
    .line 10275
    .restart local v28    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/AppTokenList;->size()I

    #@68f
    move-result v4

    #@690
    add-int/lit8 v31, v4, -0x1

    #@692
    :goto_18
    if-ltz v31, :cond_42

    #@694
    .line 10276
    move-object/from16 v0, v28

    #@696
    move/from16 v1, v31

    #@698
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@69b
    move-result-object v42

    #@69c
    check-cast v42, Lcom/android/server/wm/AppWindowToken;

    #@69e
    .line 10277
    .local v42, "token":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v42

    #@6a0
    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowToken;->hasVisible:Z

    #@6a2
    if-nez v4, :cond_3f

    #@6a4
    move-object/from16 v0, p0

    #@6a6
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@6a8
    move-object/from16 v0, v42

    #@6aa
    invoke-virtual {v4, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@6ad
    move-result v4

    #@6ae
    if-eqz v4, :cond_40

    #@6b0
    .line 10275
    :cond_3f
    :goto_19
    add-int/lit8 v31, v31, -0x1

    #@6b2
    goto :goto_18

    #@6b3
    .line 10278
    :cond_40
    move-object/from16 v0, v42

    #@6b5
    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@6b7
    if-eqz v4, :cond_41

    #@6b9
    move-object/from16 v0, v42

    #@6bb
    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@6bd
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@6c0
    move-result v4

    #@6c1
    .line 10277
    if-eqz v4, :cond_3f

    #@6c3
    .line 10282
    :cond_41
    move-object/from16 v0, v42

    #@6c5
    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6c7
    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    #@6ca
    .line 10283
    move-object/from16 v0, v42

    #@6cc
    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6ce
    const/4 v6, 0x0

    #@6cf
    iput-boolean v6, v4, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    #@6d1
    .line 10286
    invoke-virtual/range {v42 .. v42}, Lcom/android/server/wm/AppWindowToken;->removeAppFromTaskLocked()V

    #@6d4
    goto :goto_19

    #@6d5
    .line 10271
    .end local v42    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_42
    add-int/lit8 v41, v41, -0x1

    #@6d7
    goto :goto_17

    #@6d8
    .line 10291
    .end local v28    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    :cond_43
    if-eqz v49, :cond_44

    #@6da
    .line 10292
    iget v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@6dc
    or-int/lit8 v4, v4, 0x4

    #@6de
    iput v4, v15, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@6e0
    .line 10294
    const/4 v4, 0x1

    #@6e1
    iput-boolean v4, v15, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@6e3
    .line 10297
    :cond_44
    const/16 v24, 0x0

    #@6e5
    :goto_1a
    move/from16 v0, v24

    #@6e7
    move/from16 v1, v36

    #@6e9
    if-ge v0, v1, :cond_46

    #@6eb
    .line 10298
    move-object/from16 v0, p0

    #@6ed
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@6ef
    move/from16 v0, v24

    #@6f1
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@6f4
    move-result-object v20

    #@6f5
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@6f7
    .line 10299
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v20

    #@6f9
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@6fb
    if-eqz v4, :cond_45

    #@6fd
    .line 10300
    const/4 v4, 0x1

    #@6fe
    move-object/from16 v0, v20

    #@700
    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@702
    .line 10297
    :cond_45
    add-int/lit8 v24, v24, 0x1

    #@704
    goto :goto_1a

    #@705
    .line 10305
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_46
    move-object/from16 v0, p0

    #@707
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@709
    const/4 v6, 0x1

    #@70a
    invoke-virtual {v4, v6}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@70d
    .line 10307
    move-object/from16 v0, p0

    #@70f
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@711
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get1(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Lcom/android/server/wm/Session;

    #@714
    move-result-object v4

    #@715
    move-object/from16 v0, p0

    #@717
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->setHoldScreenLocked(Lcom/android/server/wm/Session;)V

    #@71a
    .line 10308
    move-object/from16 v0, p0

    #@71c
    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@71e
    if-nez v4, :cond_49

    #@720
    .line 10309
    move-object/from16 v0, p0

    #@722
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@724
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get3(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    #@727
    move-result v4

    #@728
    const/4 v6, 0x0

    #@729
    cmpg-float v4, v4, v6

    #@72b
    if-ltz v4, :cond_47

    #@72d
    move-object/from16 v0, p0

    #@72f
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@731
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get3(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    #@734
    move-result v4

    #@735
    const/high16 v6, 0x3f800000    # 1.0f

    #@737
    cmpl-float v4, v4, v6

    #@739
    if-lez v4, :cond_51

    #@73b
    .line 10310
    :cond_47
    move-object/from16 v0, p0

    #@73d
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@73f
    const/4 v6, -0x1

    #@740
    invoke-virtual {v4, v6}, Landroid/os/PowerManagerInternal;->setScreenBrightnessOverrideFromWindowManager(I)V

    #@743
    .line 10315
    :goto_1b
    move-object/from16 v0, p0

    #@745
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@747
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get0(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    #@74a
    move-result v4

    #@74b
    const/4 v6, 0x0

    #@74c
    cmpg-float v4, v4, v6

    #@74e
    if-ltz v4, :cond_48

    #@750
    move-object/from16 v0, p0

    #@752
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@754
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get0(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    #@757
    move-result v4

    #@758
    const/high16 v6, 0x3f800000    # 1.0f

    #@75a
    cmpl-float v4, v4, v6

    #@75c
    if-lez v4, :cond_52

    #@75e
    .line 10316
    :cond_48
    move-object/from16 v0, p0

    #@760
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@762
    const/4 v6, -0x1

    #@763
    invoke-virtual {v4, v6}, Landroid/os/PowerManagerInternal;->setButtonBrightnessOverrideFromWindowManager(I)V

    #@766
    .line 10321
    :goto_1c
    move-object/from16 v0, p0

    #@768
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@76a
    .line 10322
    move-object/from16 v0, p0

    #@76c
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@76e
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get6(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    #@771
    move-result-wide v6

    #@772
    .line 10321
    invoke-virtual {v4, v6, v7}, Landroid/os/PowerManagerInternal;->setUserActivityTimeoutOverrideFromWindowManager(J)V

    #@775
    .line 10325
    :cond_49
    move-object/from16 v0, p0

    #@777
    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mTurnOnScreen:Z

    #@779
    if-eqz v4, :cond_4c

    #@77b
    .line 10326
    move-object/from16 v0, p0

    #@77d
    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mAllowTheaterModeWakeFromLayout:Z

    #@77f
    if-nez v4, :cond_4a

    #@781
    .line 10327
    move-object/from16 v0, p0

    #@783
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@785
    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@788
    move-result-object v4

    #@789
    .line 10328
    const-string/jumbo v6, "theater_mode_on"

    #@78c
    const/4 v7, 0x0

    #@78d
    .line 10327
    invoke-static {v4, v6, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@790
    move-result v4

    #@791
    if-nez v4, :cond_4b

    #@793
    .line 10332
    :cond_4a
    move-object/from16 v0, p0

    #@795
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@797
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@79a
    move-result-wide v6

    #@79b
    const-string/jumbo v8, "android.server.wm:TURN_ON"

    #@79e
    invoke-virtual {v4, v6, v7, v8}, Landroid/os/PowerManager;->wakeUp(JLjava/lang/String;)V

    #@7a1
    .line 10334
    :cond_4b
    const/4 v4, 0x0

    #@7a2
    move-object/from16 v0, p0

    #@7a4
    iput-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mTurnOnScreen:Z

    #@7a6
    .line 10337
    :cond_4c
    move-object/from16 v0, p0

    #@7a8
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@7aa
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get5(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@7ad
    move-result v4

    #@7ae
    if-eqz v4, :cond_4d

    #@7b0
    .line 10339
    const/4 v4, 0x0

    #@7b1
    move-object/from16 v0, p0

    #@7b3
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@7b6
    move-result v4

    #@7b7
    if-eqz v4, :cond_53

    #@7b9
    .line 10340
    move-object/from16 v0, p0

    #@7bb
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@7bd
    const/16 v6, 0x12

    #@7bf
    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@7c2
    .line 10346
    :cond_4d
    :goto_1d
    move-object/from16 v0, p0

    #@7c4
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallback:Ljava/lang/Runnable;

    #@7c6
    if-nez v4, :cond_55

    #@7c8
    .line 10347
    move-object/from16 v0, p0

    #@7ca
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@7cc
    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    #@7ce
    if-eqz v4, :cond_4e

    #@7d0
    iget-boolean v4, v15, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@7d2
    if-eqz v4, :cond_54

    #@7d4
    .line 10352
    :cond_4e
    :goto_1e
    move-object/from16 v0, p0

    #@7d6
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@7d8
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@7db
    move-result v10

    #@7dc
    .line 10353
    .restart local v10    # "N":I
    if-lez v10, :cond_58

    #@7de
    .line 10354
    move-object/from16 v0, p0

    #@7e0
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    #@7e2
    array-length v4, v4

    #@7e3
    if-ge v4, v10, :cond_4f

    #@7e5
    .line 10355
    add-int/lit8 v4, v10, 0xa

    #@7e7
    new-array v4, v4, [Lcom/android/server/wm/WindowState;

    #@7e9
    move-object/from16 v0, p0

    #@7eb
    iput-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    #@7ed
    .line 10357
    :cond_4f
    move-object/from16 v0, p0

    #@7ef
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@7f1
    move-object/from16 v0, p0

    #@7f3
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    #@7f5
    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    #@7f8
    .line 10358
    move-object/from16 v0, p0

    #@7fa
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@7fc
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@7ff
    .line 10359
    new-instance v23, Lcom/android/server/wm/DisplayContentList;

    #@801
    invoke-direct/range {v23 .. v23}, Lcom/android/server/wm/DisplayContentList;-><init>()V

    #@804
    .line 10360
    .local v23, "displayList":Lcom/android/server/wm/DisplayContentList;
    const/16 v31, 0x0

    #@806
    :goto_1f
    move/from16 v0, v31

    #@808
    if-ge v0, v10, :cond_57

    #@80a
    .line 10361
    move-object/from16 v0, p0

    #@80c
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    #@80e
    aget-object v48, v4, v31

    #@810
    .line 10362
    .restart local v48    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@812
    move-object/from16 v1, v48

    #@814
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    #@817
    .line 10363
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@81a
    move-result-object v20

    #@81b
    .line 10364
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v20, :cond_50

    #@81d
    move-object/from16 v0, v23

    #@81f
    move-object/from16 v1, v20

    #@821
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    #@824
    move-result v4

    #@825
    if-eqz v4, :cond_56

    #@827
    .line 10360
    :cond_50
    :goto_20
    add-int/lit8 v31, v31, 0x1

    #@829
    goto :goto_1f

    #@82a
    .line 10312
    .end local v10    # "N":I
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v23    # "displayList":Lcom/android/server/wm/DisplayContentList;
    .end local v48    # "w":Lcom/android/server/wm/WindowState;
    :cond_51
    move-object/from16 v0, p0

    #@82c
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@82e
    .line 10313
    move-object/from16 v0, p0

    #@830
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@832
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get3(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    #@835
    move-result v6

    #@836
    move-object/from16 v0, p0

    #@838
    invoke-direct {v0, v6}, Lcom/android/server/wm/WindowManagerService;->toBrightnessOverride(F)I

    #@83b
    move-result v6

    #@83c
    .line 10312
    invoke-virtual {v4, v6}, Landroid/os/PowerManagerInternal;->setScreenBrightnessOverrideFromWindowManager(I)V

    #@83f
    goto/16 :goto_1b

    #@841
    .line 10318
    :cond_52
    move-object/from16 v0, p0

    #@843
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@845
    .line 10319
    move-object/from16 v0, p0

    #@847
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@849
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get0(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    #@84c
    move-result v6

    #@84d
    move-object/from16 v0, p0

    #@84f
    invoke-direct {v0, v6}, Lcom/android/server/wm/WindowManagerService;->toBrightnessOverride(F)I

    #@852
    move-result v6

    #@853
    .line 10318
    invoke-virtual {v4, v6}, Landroid/os/PowerManagerInternal;->setButtonBrightnessOverrideFromWindowManager(I)V

    #@856
    goto/16 :goto_1c

    #@858
    .line 10342
    :cond_53
    move-object/from16 v0, p0

    #@85a
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@85c
    const/4 v6, 0x0

    #@85d
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set5(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    #@860
    goto/16 :goto_1d

    #@862
    .line 10348
    :cond_54
    move-object/from16 v0, p0

    #@864
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@866
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-get5(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    #@869
    move-result v4

    #@86a
    if-nez v4, :cond_4e

    #@86c
    .line 10349
    :cond_55
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->checkDrawnWindowsLocked()V

    #@86f
    goto/16 :goto_1e

    #@871
    .line 10365
    .restart local v10    # "N":I
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v23    # "displayList":Lcom/android/server/wm/DisplayContentList;
    .restart local v48    # "w":Lcom/android/server/wm/WindowState;
    :cond_56
    move-object/from16 v0, v23

    #@873
    move-object/from16 v1, v20

    #@875
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    #@878
    goto :goto_20

    #@879
    .line 10369
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v48    # "w":Lcom/android/server/wm/WindowState;
    :cond_57
    invoke-interface/range {v23 .. v23}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@87c
    move-result-object v21

    #@87d
    .local v21, "displayContent$iterator":Ljava/util/Iterator;
    :goto_21
    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->hasNext()Z

    #@880
    move-result v4

    #@881
    if-eqz v4, :cond_58

    #@883
    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@886
    move-result-object v20

    #@887
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@889
    .line 10370
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@88c
    move-result-object v4

    #@88d
    move-object/from16 v0, p0

    #@88f
    invoke-direct {v0, v4}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@892
    .line 10371
    const/4 v4, 0x1

    #@893
    move-object/from16 v0, v20

    #@895
    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@897
    goto :goto_21

    #@898
    .line 10376
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v21    # "displayContent$iterator":Ljava/util/Iterator;
    .end local v23    # "displayList":Lcom/android/server/wm/DisplayContentList;
    :cond_58
    move-object/from16 v0, p0

    #@89a
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@89c
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@89f
    move-result v4

    #@8a0
    add-int/lit8 v24, v4, -0x1

    #@8a2
    :goto_22
    if-ltz v24, :cond_59

    #@8a4
    .line 10377
    move-object/from16 v0, p0

    #@8a6
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@8a8
    move/from16 v0, v24

    #@8aa
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@8ad
    move-result-object v4

    #@8ae
    check-cast v4, Lcom/android/server/wm/DisplayContent;

    #@8b0
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->checkForDeferredActions()V

    #@8b3
    .line 10376
    add-int/lit8 v24, v24, -0x1

    #@8b5
    goto :goto_22

    #@8b6
    .line 10380
    :cond_59
    if-eqz v47, :cond_5a

    #@8b8
    .line 10381
    move-object/from16 v0, p0

    #@8ba
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@8bc
    const/4 v6, 0x0

    #@8bd
    invoke-virtual {v4, v6}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@8c0
    .line 10383
    :cond_5a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->setFocusedStackFrame()V

    #@8c3
    .line 10387
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->enableScreenIfNeededLocked()V

    #@8c6
    .line 10389
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    #@8c9
    .line 9824
    return-void

    #@8ca
    .line 10028
    .end local v18    # "defaultWindows":Lcom/android/server/wm/WindowList;
    .end local v49    # "wallpaperDestroyed":Z
    .restart local v5    # "displayId":I
    .restart local v19    # "dh":I
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v25    # "dw":I
    .restart local v30    # "focusDisplayed":Z
    .restart local v32    # "innerDh":I
    .restart local v33    # "innerDw":I
    .restart local v34    # "isDefaultDisplay":Z
    .restart local v35    # "left":I
    .restart local v37    # "obscuredChanged":Z
    .restart local v38    # "repeats":I
    .restart local v39    # "someoneLosingFocus":Z
    .restart local v40    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v45    # "top":I
    .restart local v46    # "updateAllDrawn":Z
    .restart local v48    # "w":Lcom/android/server/wm/WindowState;
    .restart local v51    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v52    # "windows":Lcom/android/server/wm/WindowList;
    :catch_1
    move-exception v26

    #@8cb
    .local v26, "e":Landroid/os/RemoteException;
    goto/16 :goto_13
.end method

.method private final performLayoutAndPlaceSurfacesLockedLoop()V
    .locals 12

    #@0
    .prologue
    const-wide/16 v10, 0x20

    #@2
    const/4 v8, 0x0

    #@3
    .line 8926
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    #@5
    if-eqz v5, :cond_0

    #@7
    .line 8930
    const-string/jumbo v5, "WindowManager"

    #@a
    new-instance v6, Ljava/lang/StringBuilder;

    #@c
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@f
    const-string/jumbo v7, "performLayoutAndPlaceSurfacesLocked called while in layout. Callers="

    #@12
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@15
    move-result-object v6

    #@16
    .line 8931
    const/4 v7, 0x3

    #@17
    invoke-static {v7}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    #@1a
    move-result-object v7

    #@1b
    .line 8930
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v6

    #@1f
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@22
    move-result-object v6

    #@23
    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@26
    .line 8932
    return-void

    #@27
    .line 8935
    :cond_0
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@29
    if-eqz v5, :cond_1

    #@2b
    .line 8939
    return-void

    #@2c
    .line 8942
    :cond_1
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@2e
    if-nez v5, :cond_2

    #@30
    .line 8944
    return-void

    #@31
    .line 8947
    :cond_2
    const-string/jumbo v5, "wmLayout"

    #@34
    invoke-static {v10, v11, v5}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@37
    .line 8948
    const/4 v5, 0x1

    #@38
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    #@3a
    .line 8950
    const/4 v2, 0x0

    #@3b
    .line 8951
    .local v2, "recoveringMemory":Z
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@3d
    invoke-virtual {v5}, Ljava/util/ArrayList;->isEmpty()Z

    #@40
    move-result v5

    #@41
    if-nez v5, :cond_4

    #@43
    .line 8952
    const/4 v2, 0x1

    #@44
    .line 8954
    :goto_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@46
    invoke-virtual {v5}, Ljava/util/ArrayList;->isEmpty()Z

    #@49
    move-result v5

    #@4a
    if-nez v5, :cond_3

    #@4c
    .line 8955
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@4e
    invoke-virtual {v5, v8}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    #@51
    move-result-object v4

    #@52
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@54
    .line 8956
    .local v4, "ws":Lcom/android/server/wm/WindowState;
    const-string/jumbo v5, "WindowManager"

    #@57
    new-instance v6, Ljava/lang/StringBuilder;

    #@59
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@5c
    const-string/jumbo v7, "Force removing: "

    #@5f
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@62
    move-result-object v6

    #@63
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@66
    move-result-object v6

    #@67
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6a
    move-result-object v6

    #@6b
    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@6e
    .line 8957
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    #@71
    goto :goto_0

    #@72
    .line 8959
    .end local v4    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3
    const-string/jumbo v5, "WindowManager"

    #@75
    const-string/jumbo v6, "Due to memory failure, waiting a bit for next layout"

    #@78
    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@7b
    .line 8960
    new-instance v3, Ljava/lang/Object;

    #@7d
    invoke-direct {v3}, Ljava/lang/Object;-><init>()V

    #@80
    .line 8961
    .local v3, "tmp":Ljava/lang/Object;
    monitor-enter v3

    #@81
    .line 8963
    const-wide/16 v6, 0xfa

    #@83
    :try_start_0
    invoke-virtual {v3, v6, v7}, Ljava/lang/Object;->wait(J)V
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@86
    :goto_1
    monitor-exit v3

    #@87
    .line 8970
    .end local v3    # "tmp":Ljava/lang/Object;
    :cond_4
    :try_start_1
    invoke-direct {p0, v2}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLockedInner(Z)V

    #@8a
    .line 8972
    const/4 v5, 0x0

    #@8b
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    #@8d
    .line 8974
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    #@90
    move-result v5

    #@91
    if-eqz v5, :cond_7

    #@93
    .line 8975
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I

    #@95
    add-int/lit8 v5, v5, 0x1

    #@97
    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I

    #@99
    const/4 v6, 0x6

    #@9a
    if-ge v5, v6, :cond_6

    #@9c
    .line 8976
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V

    #@9f
    .line 8985
    :goto_2
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@a1
    if-eqz v5, :cond_5

    #@a3
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@a5
    invoke-virtual {v5}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_1
    .catch Ljava/lang/RuntimeException; {:try_start_1 .. :try_end_1} :catch_1

    #@a8
    move-result v5

    #@a9
    if-eqz v5, :cond_8

    #@ab
    .line 8994
    :cond_5
    :goto_3
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    #@ae
    .line 8925
    return-void

    #@af
    .line 8964
    .restart local v3    # "tmp":Ljava/lang/Object;
    :catch_0
    move-exception v0

    #@b0
    .local v0, "e":Ljava/lang/InterruptedException;
    goto :goto_1

    #@b1
    .line 8961
    .end local v0    # "e":Ljava/lang/InterruptedException;
    :catchall_0
    move-exception v5

    #@b2
    monitor-exit v3

    #@b3
    throw v5

    #@b4
    .line 8978
    .end local v3    # "tmp":Ljava/lang/Object;
    :cond_6
    :try_start_2
    const-string/jumbo v5, "WindowManager"

    #@b7
    const-string/jumbo v6, "Performed 6 layouts in a row. Skipping"

    #@ba
    invoke-static {v5, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@bd
    .line 8979
    const/4 v5, 0x0

    #@be
    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I
    :try_end_2
    .catch Ljava/lang/RuntimeException; {:try_start_2 .. :try_end_2} :catch_1

    #@c0
    goto :goto_2

    #@c1
    .line 8989
    :catch_1
    move-exception v1

    #@c2
    .line 8990
    .local v1, "e":Ljava/lang/RuntimeException;
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    #@c4
    .line 8991
    const-string/jumbo v5, "WindowManager"

    #@c7
    const-string/jumbo v6, "Unhandled exception while laying out windows"

    #@ca
    invoke-static {v5, v6, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@cd
    goto :goto_3

    #@ce
    .line 8982
    .end local v1    # "e":Ljava/lang/RuntimeException;
    :cond_7
    const/4 v5, 0x0

    #@cf
    :try_start_3
    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I

    #@d1
    goto :goto_2

    #@d2
    .line 8986
    :cond_8
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@d4
    const/16 v6, 0x13

    #@d6
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@d9
    .line 8987
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@db
    const/16 v6, 0x13

    #@dd
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_1

    #@e0
    goto :goto_3
.end method

.method private final performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V
    .locals 17
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "initial"    # Z
    .param p3, "updateInputWindows"    # Z

    #@0
    .prologue
    .line 8999
    move-object/from16 v0, p1

    #@2
    iget-boolean v14, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@4
    if-nez v14, :cond_0

    #@6
    .line 9000
    return-void

    #@7
    .line 9002
    :cond_0
    const/4 v14, 0x0

    #@8
    move-object/from16 v0, p1

    #@a
    iput-boolean v14, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@c
    .line 9003
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@f
    move-result-object v13

    #@10
    .line 9004
    .local v13, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p1

    #@12
    iget-boolean v9, v0, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    #@14
    .line 9006
    .local v9, "isDefaultDisplay":Z
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@17
    move-result-object v5

    #@18
    .line 9007
    .local v5, "displayInfo":Landroid/view/DisplayInfo;
    iget v6, v5, Landroid/view/DisplayInfo;->logicalWidth:I

    #@1a
    .line 9008
    .local v6, "dw":I
    iget v4, v5, Landroid/view/DisplayInfo;->logicalHeight:I

    #@1c
    .line 9010
    .local v4, "dh":I
    move-object/from16 v0, p0

    #@1e
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@20
    if-eqz v14, :cond_1

    #@22
    .line 9011
    move-object/from16 v0, p0

    #@24
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@26
    invoke-virtual {v14, v6, v4}, Lcom/android/server/wm/InputConsumerImpl;->layout(II)V

    #@29
    .line 9014
    :cond_1
    invoke-virtual {v13}, Lcom/android/server/wm/WindowList;->size()I

    #@2c
    move-result v1

    #@2d
    .line 9023
    .local v1, "N":I
    move-object/from16 v0, p0

    #@2f
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@31
    move-object/from16 v0, p0

    #@33
    iget v15, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@35
    invoke-interface {v14, v9, v6, v4, v15}, Landroid/view/WindowManagerPolicy;->beginLayoutLw(ZIII)V

    #@38
    .line 9024
    if-eqz v9, :cond_2

    #@3a
    .line 9026
    move-object/from16 v0, p0

    #@3c
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3e
    invoke-interface {v14}, Landroid/view/WindowManagerPolicy;->getSystemDecorLayerLw()I

    #@41
    move-result v14

    #@42
    move-object/from16 v0, p0

    #@44
    iput v14, v0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    #@46
    .line 9027
    move-object/from16 v0, p0

    #@48
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    #@4a
    const/4 v15, 0x0

    #@4b
    const/16 v16, 0x0

    #@4d
    move/from16 v0, v16

    #@4f
    invoke-virtual {v14, v15, v0, v6, v4}, Landroid/graphics/Rect;->set(IIII)V

    #@52
    .line 9030
    :cond_2
    move-object/from16 v0, p0

    #@54
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@56
    move-object/from16 v0, p0

    #@58
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTmpContentRect:Landroid/graphics/Rect;

    #@5a
    invoke-interface {v14, v15}, Landroid/view/WindowManagerPolicy;->getContentRectLw(Landroid/graphics/Rect;)V

    #@5d
    .line 9031
    move-object/from16 v0, p0

    #@5f
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mTmpContentRect:Landroid/graphics/Rect;

    #@61
    move-object/from16 v0, p1

    #@63
    invoke-virtual {v0, v14}, Lcom/android/server/wm/DisplayContent;->resize(Landroid/graphics/Rect;)V

    #@66
    .line 9033
    move-object/from16 v0, p0

    #@68
    iget v14, v0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@6a
    add-int/lit8 v10, v14, 0x1

    #@6c
    .line 9034
    .local v10, "seq":I
    if-gez v10, :cond_3

    #@6e
    const/4 v10, 0x0

    #@6f
    .line 9035
    :cond_3
    move-object/from16 v0, p0

    #@71
    iput v10, v0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@73
    .line 9037
    const/4 v3, 0x0

    #@74
    .line 9041
    .local v3, "behindDream":Z
    const/4 v11, -0x1

    #@75
    .line 9042
    .local v11, "topAttached":I
    add-int/lit8 v8, v1, -0x1

    #@77
    .local v8, "i":I
    :goto_0
    if-ltz v8, :cond_c

    #@79
    .line 9043
    invoke-virtual {v13, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@7c
    move-result-object v12

    #@7d
    check-cast v12, Lcom/android/server/wm/WindowState;

    #@7f
    .line 9048
    .local v12, "win":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_4

    #@81
    move-object/from16 v0, p0

    #@83
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@85
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@87
    invoke-interface {v14, v12, v15}, Landroid/view/WindowManagerPolicy;->canBeForceHidden(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    #@8a
    move-result v14

    #@8b
    if-nez v14, :cond_a

    #@8d
    .line 9049
    :cond_4
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    #@90
    move-result v7

    #@91
    .line 9076
    :goto_1
    if-eqz v7, :cond_6

    #@93
    iget-boolean v14, v12, Lcom/android/server/wm/WindowState;->mHaveFrame:Z

    #@95
    if-eqz v14, :cond_6

    #@97
    iget-boolean v14, v12, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@99
    if-nez v14, :cond_6

    #@9b
    .line 9077
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    #@9e
    move-result v14

    #@9f
    if-nez v14, :cond_5

    #@a1
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->setInsetsChanged()Z

    #@a4
    move-result v14

    #@a5
    if-eqz v14, :cond_9

    #@a7
    .line 9078
    :cond_5
    iget-object v14, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@a9
    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@ab
    and-int/lit16 v14, v14, 0x400

    #@ad
    if-nez v14, :cond_6

    #@af
    .line 9079
    iget-boolean v14, v12, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@b1
    if-eqz v14, :cond_9

    #@b3
    iget-object v14, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@b5
    if-eqz v14, :cond_9

    #@b7
    .line 9080
    iget-object v14, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@b9
    iget-boolean v14, v14, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    #@bb
    .line 9076
    if-eqz v14, :cond_9

    #@bd
    .line 9081
    :cond_6
    iget-boolean v14, v12, Lcom/android/server/wm/WindowState;->mLayoutAttached:Z

    #@bf
    if-nez v14, :cond_b

    #@c1
    .line 9082
    if-eqz p2, :cond_7

    #@c3
    .line 9084
    const/4 v14, 0x0

    #@c4
    iput-boolean v14, v12, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    #@c6
    .line 9086
    :cond_7
    iget-object v14, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@c8
    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->type:I

    #@ca
    const/16 v15, 0x7e7

    #@cc
    if-ne v14, v15, :cond_8

    #@ce
    .line 9090
    const/4 v3, 0x1

    #@cf
    .line 9092
    :cond_8
    const/4 v14, 0x0

    #@d0
    iput-boolean v14, v12, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@d2
    .line 9093
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->prelayout()V

    #@d5
    .line 9094
    move-object/from16 v0, p0

    #@d7
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@d9
    const/4 v15, 0x0

    #@da
    invoke-interface {v14, v12, v15}, Landroid/view/WindowManagerPolicy;->layoutWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    #@dd
    .line 9095
    iput v10, v12, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    #@df
    .line 9042
    :cond_9
    :goto_2
    add-int/lit8 v8, v8, -0x1

    #@e1
    goto :goto_0

    #@e2
    .line 9048
    :cond_a
    const/4 v7, 0x1

    #@e3
    .local v7, "gone":Z
    goto :goto_1

    #@e4
    .line 9101
    .end local v7    # "gone":Z
    :cond_b
    if-gez v11, :cond_9

    #@e6
    move v11, v8

    #@e7
    goto :goto_2

    #@e8
    .line 9106
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    :cond_c
    const/4 v2, 0x0

    #@e9
    .line 9112
    .local v2, "attachedBehindDream":Z
    move v8, v11

    #@ea
    .end local v2    # "attachedBehindDream":Z
    :goto_3
    if-ltz v8, :cond_13

    #@ec
    .line 9113
    invoke-virtual {v13, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@ef
    move-result-object v12

    #@f0
    check-cast v12, Lcom/android/server/wm/WindowState;

    #@f2
    .line 9115
    .restart local v12    # "win":Lcom/android/server/wm/WindowState;
    iget-boolean v14, v12, Lcom/android/server/wm/WindowState;->mLayoutAttached:Z

    #@f4
    if-eqz v14, :cond_12

    #@f6
    .line 9125
    if-eqz v2, :cond_e

    #@f8
    move-object/from16 v0, p0

    #@fa
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@fc
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@fe
    invoke-interface {v14, v12, v15}, Landroid/view/WindowManagerPolicy;->canBeForceHidden(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    #@101
    move-result v14

    #@102
    if-eqz v14, :cond_e

    #@104
    .line 9112
    :cond_d
    :goto_4
    add-int/lit8 v8, v8, -0x1

    #@106
    goto :goto_3

    #@107
    .line 9128
    :cond_e
    iget v14, v12, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@109
    const/16 v15, 0x8

    #@10b
    if-eq v14, v15, :cond_f

    #@10d
    iget-boolean v14, v12, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    #@10f
    if-nez v14, :cond_10

    #@111
    .line 9129
    :cond_f
    iget-boolean v14, v12, Lcom/android/server/wm/WindowState;->mHaveFrame:Z

    #@113
    if-eqz v14, :cond_10

    #@115
    iget-boolean v14, v12, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@117
    .line 9128
    if-eqz v14, :cond_d

    #@119
    .line 9130
    :cond_10
    if-eqz p2, :cond_11

    #@11b
    .line 9132
    const/4 v14, 0x0

    #@11c
    iput-boolean v14, v12, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    #@11e
    .line 9134
    :cond_11
    const/4 v14, 0x0

    #@11f
    iput-boolean v14, v12, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@121
    .line 9135
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->prelayout()V

    #@124
    .line 9136
    move-object/from16 v0, p0

    #@126
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@128
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@12a
    invoke-interface {v14, v12, v15}, Landroid/view/WindowManagerPolicy;->layoutWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    #@12d
    .line 9137
    iput v10, v12, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    #@12f
    goto :goto_4

    #@130
    .line 9143
    :cond_12
    iget-object v14, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@132
    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->type:I

    #@134
    const/16 v15, 0x7e7

    #@136
    if-ne v14, v15, :cond_d

    #@138
    .line 9147
    move v2, v3

    #@139
    .local v2, "attachedBehindDream":Z
    goto :goto_4

    #@13a
    .line 9152
    .end local v2    # "attachedBehindDream":Z
    .end local v12    # "win":Lcom/android/server/wm/WindowState;
    :cond_13
    move-object/from16 v0, p0

    #@13c
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@13e
    invoke-virtual {v14}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@141
    .line 9153
    if-eqz p3, :cond_14

    #@143
    .line 9154
    move-object/from16 v0, p0

    #@145
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@147
    const/4 v15, 0x0

    #@148
    invoke-virtual {v14, v15}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@14b
    .line 9157
    :cond_14
    move-object/from16 v0, p0

    #@14d
    iget-object v14, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@14f
    invoke-interface {v14}, Landroid/view/WindowManagerPolicy;->finishLayoutLw()V

    #@152
    .line 8998
    return-void
.end method

.method private placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1023
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v1

    #@4
    .line 1024
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v0

    #@8
    .line 1028
    .local v0, "i":I
    add-int/lit8 v2, v0, 0x1

    #@a
    invoke-virtual {v1, v2, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@d
    .line 1029
    const/4 v2, 0x1

    #@e
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@10
    .line 1022
    return-void
.end method

.method private placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .locals 5
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1033
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v1

    #@4
    .line 1034
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v0

    #@8
    .line 1038
    .local v0, "i":I
    if-gez v0, :cond_0

    #@a
    .line 1039
    const-string/jumbo v2, "WindowManager"

    #@d
    new-instance v3, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v4, "placeWindowBefore: Unable to find "

    #@15
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v3

    #@19
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v3

    #@1d
    const-string/jumbo v4, " in "

    #@20
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v3

    #@24
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v3

    #@28
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b
    move-result-object v3

    #@2c
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@2f
    .line 1040
    const/4 v0, 0x0

    #@30
    .line 1042
    :cond_0
    invoke-virtual {v1, v0, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@33
    .line 1043
    const/4 v2, 0x1

    #@34
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@36
    .line 1032
    return-void
.end method

.method private final reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I
    .locals 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "index"    # I
    .param p3, "token"    # Lcom/android/server/wm/WindowToken;

    #@0
    .prologue
    .line 5031
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@5
    move-result v0

    #@6
    .line 5032
    .local v0, "NW":I
    const/4 v1, 0x0

    #@7
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_2

    #@9
    .line 5033
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@b
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@e
    move-result-object v2

    #@f
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@11
    .line 5034
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@14
    move-result-object v3

    #@15
    .line 5035
    .local v3, "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    if-eq v3, p1, :cond_0

    #@17
    if-nez v3, :cond_1

    #@19
    .line 5036
    :cond_0
    iput-object p1, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    #@1b
    .line 5037
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@1e
    move-result p2

    #@1f
    .line 5032
    :cond_1
    add-int/lit8 v1, v1, 0x1

    #@21
    goto :goto_0

    #@22
    .line 5040
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .end local v3    # "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2
    return p2
.end method

.method private final reAddWindowLocked(ILcom/android/server/wm/WindowState;)I
    .locals 7
    .param p1, "index"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 4998
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@4
    move-result-object v4

    #@5
    .line 5000
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@7
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@a
    move-result v0

    #@b
    .line 5001
    .local v0, "NCW":I
    const/4 v3, 0x0

    #@c
    .line 5002
    .local v3, "winAdded":Z
    const/4 v2, 0x0

    #@d
    .local v2, "j":I
    :goto_0
    if-ge v2, v0, :cond_1

    #@f
    .line 5003
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@11
    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@17
    .line 5004
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_0

    #@19
    iget v5, v1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@1b
    if-ltz v5, :cond_0

    #@1d
    .line 5007
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@1f
    .line 5008
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@22
    .line 5009
    add-int/lit8 p1, p1, 0x1

    #@24
    .line 5010
    const/4 v3, 0x1

    #@25
    .line 5014
    :cond_0
    iput-boolean v6, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@27
    .line 5015
    invoke-virtual {v4, p1, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@2a
    .line 5016
    add-int/lit8 p1, p1, 0x1

    #@2c
    .line 5002
    add-int/lit8 v2, v2, 0x1

    #@2e
    goto :goto_0

    #@2f
    .line 5018
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_1
    if-nez v3, :cond_2

    #@31
    .line 5021
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@33
    .line 5022
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@36
    .line 5023
    add-int/lit8 p1, p1, 0x1

    #@38
    .line 5025
    :cond_2
    const/4 v5, 0x1

    #@39
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@3b
    .line 5026
    return p1
.end method

.method private reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 1601
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@4
    .line 1605
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    .line 1606
    .local v0, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@b
    move-result v1

    #@c
    .line 1607
    .local v1, "wpos":I
    if-ltz v1, :cond_0

    #@e
    .line 1609
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@11
    .line 1610
    const/4 v2, 0x1

    #@12
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@14
    .line 1611
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@17
    .line 1600
    :cond_0
    return-void
.end method

.method private readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 14
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/16 v10, 0x2c

    #@2
    const/4 v13, 0x0

    #@3
    const/4 v12, 0x0

    #@4
    .line 8452
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@6
    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@9
    move-result-object v8

    #@a
    .line 8453
    const-string/jumbo v9, "display_size_forced"

    #@d
    .line 8452
    invoke-static {v8, v9}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    #@10
    move-result-object v6

    #@11
    .line 8454
    .local v6, "sizeStr":Ljava/lang/String;
    if-eqz v6, :cond_0

    #@13
    invoke-virtual {v6}, Ljava/lang/String;->length()I

    #@16
    move-result v8

    #@17
    if-nez v8, :cond_1

    #@19
    .line 8455
    :cond_0
    const-string/jumbo v8, "ro.config.size_override"

    #@1c
    invoke-static {v8, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1f
    move-result-object v6

    #@20
    .line 8457
    :cond_1
    if-eqz v6, :cond_4

    #@22
    invoke-virtual {v6}, Ljava/lang/String;->length()I

    #@25
    move-result v8

    #@26
    if-lez v8, :cond_4

    #@28
    .line 8458
    invoke-virtual {v6, v10}, Ljava/lang/String;->indexOf(I)I

    #@2b
    move-result v5

    #@2c
    .line 8459
    .local v5, "pos":I
    if-lez v5, :cond_4

    #@2e
    invoke-virtual {v6, v10}, Ljava/lang/String;->lastIndexOf(I)I

    #@31
    move-result v8

    #@32
    if-ne v8, v5, :cond_4

    #@34
    .line 8462
    const/4 v8, 0x0

    #@35
    :try_start_0
    invoke-virtual {v6, v8, v5}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@38
    move-result-object v8

    #@39
    invoke-static {v8}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@3c
    move-result v7

    #@3d
    .line 8463
    .local v7, "width":I
    add-int/lit8 v8, v5, 0x1

    #@3f
    invoke-virtual {v6, v8}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@42
    move-result-object v8

    #@43
    invoke-static {v8}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@46
    move-result v3

    #@47
    .line 8464
    .local v3, "height":I
    iget-object v9, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@49
    monitor-enter v9
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@4a
    .line 8465
    :try_start_1
    iget v8, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@4c
    if-ne v8, v7, :cond_2

    #@4e
    .line 8466
    iget v8, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@50
    if-eq v8, v3, :cond_3

    #@52
    .line 8467
    :cond_2
    const-string/jumbo v8, "WindowManager"

    #@55
    new-instance v10, Ljava/lang/StringBuilder;

    #@57
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@5a
    const-string/jumbo v11, "FORCED DISPLAY SIZE: "

    #@5d
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@60
    move-result-object v10

    #@61
    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@64
    move-result-object v10

    #@65
    const-string/jumbo v11, "x"

    #@68
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@6b
    move-result-object v10

    #@6c
    invoke-virtual {v10, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@6f
    move-result-object v10

    #@70
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@73
    move-result-object v10

    #@74
    invoke-static {v8, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@77
    .line 8468
    iput v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@79
    .line 8469
    iput v3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@7b
    :cond_3
    :try_start_2
    monitor-exit v9
    :try_end_2
    .catch Ljava/lang/NumberFormatException; {:try_start_2 .. :try_end_2} :catch_0

    #@7c
    .line 8478
    .end local v3    # "height":I
    .end local v5    # "pos":I
    .end local v7    # "width":I
    :cond_4
    :goto_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@7e
    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@81
    move-result-object v8

    #@82
    .line 8479
    const-string/jumbo v9, "display_density_forced"

    #@85
    .line 8478
    invoke-static {v8, v9}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    #@88
    move-result-object v1

    #@89
    .line 8480
    .local v1, "densityStr":Ljava/lang/String;
    if-eqz v1, :cond_5

    #@8b
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@8e
    move-result v8

    #@8f
    if-nez v8, :cond_6

    #@91
    .line 8481
    :cond_5
    const-string/jumbo v8, "ro.config.density_override"

    #@94
    invoke-static {v8, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@97
    move-result-object v1

    #@98
    .line 8483
    :cond_6
    if-eqz v1, :cond_8

    #@9a
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@9d
    move-result v8

    #@9e
    if-lez v8, :cond_8

    #@a0
    .line 8486
    :try_start_3
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@a3
    move-result v0

    #@a4
    .line 8487
    .local v0, "density":I
    iget-object v9, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@a6
    monitor-enter v9
    :try_end_3
    .catch Ljava/lang/NumberFormatException; {:try_start_3 .. :try_end_3} :catch_1

    #@a7
    .line 8488
    :try_start_4
    iget v8, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@a9
    if-eq v8, v0, :cond_7

    #@ab
    .line 8489
    const-string/jumbo v8, "WindowManager"

    #@ae
    new-instance v10, Ljava/lang/StringBuilder;

    #@b0
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@b3
    const-string/jumbo v11, "FORCED DISPLAY DENSITY: "

    #@b6
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b9
    move-result-object v10

    #@ba
    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@bd
    move-result-object v10

    #@be
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c1
    move-result-object v10

    #@c2
    invoke-static {v8, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@c5
    .line 8490
    iput v0, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@c7
    :cond_7
    :try_start_5
    monitor-exit v9
    :try_end_5
    .catch Ljava/lang/NumberFormatException; {:try_start_5 .. :try_end_5} :catch_1

    #@c8
    .line 8498
    .end local v0    # "density":I
    :cond_8
    :goto_1
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@ca
    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@cd
    move-result-object v8

    #@ce
    .line 8499
    const-string/jumbo v9, "display_scaling_force"

    #@d1
    .line 8498
    invoke-static {v8, v9, v12}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@d4
    move-result v4

    #@d5
    .line 8500
    .local v4, "mode":I
    if-eqz v4, :cond_9

    #@d7
    .line 8501
    iget-object v9, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@d9
    monitor-enter v9

    #@da
    .line 8502
    :try_start_6
    const-string/jumbo v8, "WindowManager"

    #@dd
    const-string/jumbo v10, "FORCED DISPLAY SCALING DISABLED"

    #@e0
    invoke-static {v8, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@e3
    .line 8503
    const/4 v8, 0x1

    #@e4
    iput-boolean v8, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    #@e6
    monitor-exit v9

    #@e7
    .line 8450
    :cond_9
    return-void

    #@e8
    .line 8464
    .end local v1    # "densityStr":Ljava/lang/String;
    .end local v4    # "mode":I
    .restart local v3    # "height":I
    .restart local v5    # "pos":I
    .restart local v7    # "width":I
    :catchall_0
    move-exception v8

    #@e9
    :try_start_7
    monitor-exit v9

    #@ea
    throw v8
    :try_end_7
    .catch Ljava/lang/NumberFormatException; {:try_start_7 .. :try_end_7} :catch_0

    #@eb
    .line 8472
    .end local v3    # "height":I
    .end local v7    # "width":I
    :catch_0
    move-exception v2

    #@ec
    .local v2, "ex":Ljava/lang/NumberFormatException;
    goto :goto_0

    #@ed
    .line 8487
    .end local v2    # "ex":Ljava/lang/NumberFormatException;
    .end local v5    # "pos":I
    .restart local v0    # "density":I
    .restart local v1    # "densityStr":Ljava/lang/String;
    :catchall_1
    move-exception v8

    #@ee
    :try_start_8
    monitor-exit v9

    #@ef
    throw v8
    :try_end_8
    .catch Ljava/lang/NumberFormatException; {:try_start_8 .. :try_end_8} :catch_1

    #@f0
    .line 8493
    .end local v0    # "density":I
    :catch_1
    move-exception v2

    #@f1
    .restart local v2    # "ex":Ljava/lang/NumberFormatException;
    goto :goto_1

    #@f2
    .line 8501
    .end local v2    # "ex":Ljava/lang/NumberFormatException;
    .restart local v4    # "mode":I
    :catchall_2
    move-exception v8

    #@f3
    monitor-exit v9

    #@f4
    throw v8
.end method

.method private rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 30
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 8750
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v23

    #@4
    .line 8751
    .local v23, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    #@7
    move-result v4

    #@8
    .line 8753
    .local v4, "NW":I
    const/4 v8, -0x1

    #@9
    .line 8754
    .local v8, "lastBelow":I
    const/4 v9, 0x0

    #@a
    .line 8756
    .local v9, "numRemoved":I
    move-object/from16 v0, p0

    #@c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@e
    move-object/from16 v26, v0

    #@10
    move-object/from16 v0, v26

    #@12
    array-length v0, v0

    #@13
    move/from16 v26, v0

    #@15
    move/from16 v0, v26

    #@17
    if-ge v0, v4, :cond_0

    #@19
    .line 8757
    add-int/lit8 v26, v4, 0xa

    #@1b
    move/from16 v0, v26

    #@1d
    new-array v0, v0, [Lcom/android/server/wm/WindowState;

    #@1f
    move-object/from16 v26, v0

    #@21
    move-object/from16 v0, v26

    #@23
    move-object/from16 v1, p0

    #@25
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@27
    .line 8761
    :cond_0
    const/4 v6, 0x0

    #@28
    .line 8762
    .local v6, "i":I
    :goto_0
    if-ge v6, v4, :cond_3

    #@2a
    .line 8763
    move-object/from16 v0, v23

    #@2c
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2f
    move-result-object v21

    #@30
    check-cast v21, Lcom/android/server/wm/WindowState;

    #@32
    .line 8764
    .local v21, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v21

    #@34
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@36
    move-object/from16 v26, v0

    #@38
    if-eqz v26, :cond_1

    #@3a
    .line 8765
    move-object/from16 v0, v23

    #@3c
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@3f
    move-result-object v22

    #@40
    check-cast v22, Lcom/android/server/wm/WindowState;

    #@42
    .line 8766
    .local v22, "win":Lcom/android/server/wm/WindowState;
    const/16 v26, 0x1

    #@44
    move/from16 v0, v26

    #@46
    move-object/from16 v1, v22

    #@48
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@4a
    .line 8767
    move-object/from16 v0, p0

    #@4c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@4e
    move-object/from16 v26, v0

    #@50
    aput-object v22, v26, v9

    #@52
    .line 8768
    const/16 v26, 0x1

    #@54
    move/from16 v0, v26

    #@56
    move-object/from16 v1, p0

    #@58
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@5a
    .line 8770
    add-int/lit8 v4, v4, -0x1

    #@5c
    .line 8771
    add-int/lit8 v9, v9, 0x1

    #@5e
    .line 8772
    goto :goto_0

    #@5f
    .line 8773
    .end local v22    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v26, v6, -0x1

    #@61
    move/from16 v0, v26

    #@63
    if-ne v8, v0, :cond_2

    #@65
    .line 8774
    move-object/from16 v0, v21

    #@67
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@69
    move-object/from16 v26, v0

    #@6b
    move-object/from16 v0, v26

    #@6d
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@6f
    move/from16 v26, v0

    #@71
    const/16 v27, 0x7dd

    #@73
    move/from16 v0, v26

    #@75
    move/from16 v1, v27

    #@77
    if-ne v0, v1, :cond_2

    #@79
    .line 8775
    move v8, v6

    #@7a
    .line 8778
    :cond_2
    add-int/lit8 v6, v6, 0x1

    #@7c
    goto :goto_0

    #@7d
    .line 8783
    .end local v21    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    add-int/lit8 v8, v8, 0x1

    #@7f
    .line 8784
    move v6, v8

    #@80
    .line 8790
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@83
    move-result-object v15

    #@84
    .line 8791
    .local v15, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    #@87
    move-result v10

    #@88
    .line 8792
    .local v10, "numStacks":I
    const/4 v14, 0x0

    #@89
    .local v14, "stackNdx":I
    :goto_1
    if-ge v14, v10, :cond_5

    #@8b
    .line 8793
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@8e
    move-result-object v26

    #@8f
    check-cast v26, Lcom/android/server/wm/TaskStack;

    #@91
    move-object/from16 v0, v26

    #@93
    iget-object v5, v0, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    #@95
    .line 8794
    .local v5, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    #@98
    move-result v3

    #@99
    .line 8795
    .local v3, "NT":I
    const/4 v7, 0x0

    #@9a
    .local v7, "j":I
    :goto_2
    if-ge v7, v3, :cond_4

    #@9c
    .line 8796
    invoke-virtual {v5, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@9f
    move-result-object v26

    #@a0
    check-cast v26, Lcom/android/server/wm/WindowToken;

    #@a2
    move-object/from16 v0, p0

    #@a4
    move-object/from16 v1, p1

    #@a6
    move-object/from16 v2, v26

    #@a8
    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    #@ab
    move-result v6

    #@ac
    .line 8795
    add-int/lit8 v7, v7, 0x1

    #@ae
    goto :goto_2

    #@af
    .line 8792
    :cond_4
    add-int/lit8 v14, v14, 0x1

    #@b1
    goto :goto_1

    #@b2
    .line 8801
    .end local v3    # "NT":I
    .end local v5    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "j":I
    :cond_5
    const/4 v14, 0x0

    #@b3
    :goto_3
    if-ge v14, v10, :cond_9

    #@b5
    .line 8802
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@b8
    move-result-object v26

    #@b9
    check-cast v26, Lcom/android/server/wm/TaskStack;

    #@bb
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@be
    move-result-object v18

    #@bf
    .line 8803
    .local v18, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    #@c2
    move-result v11

    #@c3
    .line 8804
    .local v11, "numTasks":I
    const/16 v17, 0x0

    #@c5
    .local v17, "taskNdx":I
    :goto_4
    move/from16 v0, v17

    #@c7
    if-ge v0, v11, :cond_8

    #@c9
    .line 8805
    move-object/from16 v0, v18

    #@cb
    move/from16 v1, v17

    #@cd
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@d0
    move-result-object v26

    #@d1
    check-cast v26, Lcom/android/server/wm/Task;

    #@d3
    move-object/from16 v0, v26

    #@d5
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@d7
    move-object/from16 v20, v0

    #@d9
    .line 8806
    .local v20, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/AppTokenList;->size()I

    #@dc
    move-result v12

    #@dd
    .line 8807
    .local v12, "numTokens":I
    const/16 v19, 0x0

    #@df
    .local v19, "tokenNdx":I
    :goto_5
    move/from16 v0, v19

    #@e1
    if-ge v0, v12, :cond_7

    #@e3
    .line 8808
    move-object/from16 v0, v20

    #@e5
    move/from16 v1, v19

    #@e7
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@ea
    move-result-object v25

    #@eb
    check-cast v25, Lcom/android/server/wm/AppWindowToken;

    #@ed
    .line 8809
    .local v25, "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v25

    #@ef
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@f1
    move/from16 v26, v0

    #@f3
    if-eqz v26, :cond_6

    #@f5
    .line 8807
    :goto_6
    add-int/lit8 v19, v19, 0x1

    #@f7
    goto :goto_5

    #@f8
    .line 8812
    :cond_6
    move-object/from16 v0, p0

    #@fa
    move-object/from16 v1, p1

    #@fc
    move-object/from16 v2, v25

    #@fe
    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    #@101
    move-result v6

    #@102
    goto :goto_6

    #@103
    .line 8804
    .end local v25    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_7
    add-int/lit8 v17, v17, 0x1

    #@105
    goto :goto_4

    #@106
    .line 8801
    .end local v12    # "numTokens":I
    .end local v19    # "tokenNdx":I
    .end local v20    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_8
    add-int/lit8 v14, v14, 0x1

    #@108
    goto :goto_3

    #@109
    .line 8817
    .end local v11    # "numTasks":I
    .end local v17    # "taskNdx":I
    .end local v18    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_9
    sub-int/2addr v6, v8

    #@10a
    .line 8818
    if-eq v6, v9, :cond_c

    #@10c
    .line 8819
    const/16 v26, 0x1

    #@10e
    move/from16 v0, v26

    #@110
    move-object/from16 v1, p1

    #@112
    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@114
    .line 8820
    const-string/jumbo v26, "WindowManager"

    #@117
    new-instance v27, Ljava/lang/StringBuilder;

    #@119
    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    #@11c
    const-string/jumbo v28, "On display="

    #@11f
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@122
    move-result-object v27

    #@123
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@126
    move-result v28

    #@127
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@12a
    move-result-object v27

    #@12b
    const-string/jumbo v28, " Rebuild removed "

    #@12e
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@131
    move-result-object v27

    #@132
    move-object/from16 v0, v27

    #@134
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@137
    move-result-object v27

    #@138
    .line 8821
    const-string/jumbo v28, " windows but added "

    #@13b
    .line 8820
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13e
    move-result-object v27

    #@13f
    move-object/from16 v0, v27

    #@141
    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@144
    move-result-object v27

    #@145
    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@148
    move-result-object v27

    #@149
    .line 8822
    new-instance v28, Ljava/lang/RuntimeException;

    #@14b
    const-string/jumbo v29, "here"

    #@14e
    invoke-direct/range {v28 .. v29}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    #@151
    invoke-virtual/range {v28 .. v28}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    #@154
    move-result-object v28

    #@155
    .line 8820
    invoke-static/range {v26 .. v28}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@158
    .line 8823
    const/4 v6, 0x0

    #@159
    :goto_7
    if-ge v6, v9, :cond_b

    #@15b
    .line 8824
    move-object/from16 v0, p0

    #@15d
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@15f
    move-object/from16 v26, v0

    #@161
    aget-object v24, v26, v6

    #@163
    .line 8825
    .local v24, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v24

    #@165
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@167
    move/from16 v26, v0

    #@169
    if-eqz v26, :cond_a

    #@16b
    .line 8826
    new-instance v16, Ljava/io/StringWriter;

    #@16d
    invoke-direct/range {v16 .. v16}, Ljava/io/StringWriter;-><init>()V

    #@170
    .line 8827
    .local v16, "sw":Ljava/io/StringWriter;
    new-instance v13, Lcom/android/internal/util/FastPrintWriter;

    #@172
    const/16 v26, 0x0

    #@174
    const/16 v27, 0x400

    #@176
    move-object/from16 v0, v16

    #@178
    move/from16 v1, v26

    #@17a
    move/from16 v2, v27

    #@17c
    invoke-direct {v13, v0, v1, v2}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    #@17f
    .line 8828
    .local v13, "pw":Ljava/io/PrintWriter;
    const-string/jumbo v26, ""

    #@182
    const/16 v27, 0x1

    #@184
    move-object/from16 v0, v24

    #@186
    move-object/from16 v1, v26

    #@188
    move/from16 v2, v27

    #@18a
    invoke-virtual {v0, v13, v1, v2}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@18d
    .line 8829
    invoke-virtual {v13}, Ljava/io/PrintWriter;->flush()V

    #@190
    .line 8830
    const-string/jumbo v26, "WindowManager"

    #@193
    new-instance v27, Ljava/lang/StringBuilder;

    #@195
    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    #@198
    const-string/jumbo v28, "This window was lost: "

    #@19b
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19e
    move-result-object v27

    #@19f
    move-object/from16 v0, v27

    #@1a1
    move-object/from16 v1, v24

    #@1a3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1a6
    move-result-object v27

    #@1a7
    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1aa
    move-result-object v27

    #@1ab
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1ae
    .line 8831
    const-string/jumbo v26, "WindowManager"

    #@1b1
    invoke-virtual/range {v16 .. v16}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    #@1b4
    move-result-object v27

    #@1b5
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1b8
    .line 8832
    move-object/from16 v0, v24

    #@1ba
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1bc
    move-object/from16 v26, v0

    #@1be
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    #@1c1
    .line 8823
    .end local v13    # "pw":Ljava/io/PrintWriter;
    .end local v16    # "sw":Ljava/io/StringWriter;
    :cond_a
    add-int/lit8 v6, v6, 0x1

    #@1c3
    goto :goto_7

    #@1c4
    .line 8835
    .end local v24    # "ws":Lcom/android/server/wm/WindowState;
    :cond_b
    const-string/jumbo v26, "WindowManager"

    #@1c7
    const-string/jumbo v27, "Current app token list:"

    #@1ca
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1cd
    .line 8836
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpAppTokensLocked()V

    #@1d0
    .line 8837
    const-string/jumbo v26, "WindowManager"

    #@1d3
    const-string/jumbo v27, "Final window list:"

    #@1d6
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1d9
    .line 8838
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked()V

    #@1dc
    .line 8840
    :cond_c
    move-object/from16 v0, p0

    #@1de
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@1e0
    move-object/from16 v26, v0

    #@1e2
    const/16 v27, 0x0

    #@1e4
    invoke-static/range {v26 .. v27}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    #@1e7
    .line 8749
    return-void
.end method

.method private reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 8638
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@4
    if-nez v1, :cond_0

    #@6
    .line 8639
    return-void

    #@7
    .line 8641
    :cond_0
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    #@a
    .line 8642
    iput-boolean v2, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@c
    .line 8644
    invoke-virtual {p0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@f
    move-result v0

    #@10
    .line 8645
    .local v0, "configChanged":Z
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@12
    invoke-virtual {v1}, Landroid/content/res/Configuration;->setToDefaults()V

    #@15
    .line 8646
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@17
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@19
    iget v4, v4, Landroid/content/res/Configuration;->fontScale:F

    #@1b
    iput v4, v1, Landroid/content/res/Configuration;->fontScale:F

    #@1d
    .line 8647
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@1f
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@22
    .line 8648
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@24
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@26
    invoke-virtual {v1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    #@29
    move-result v1

    #@2a
    if-eqz v1, :cond_2

    #@2c
    move v1, v2

    #@2d
    :goto_0
    or-int/2addr v0, v1

    #@2e
    .line 8650
    if-eqz v0, :cond_1

    #@30
    .line 8651
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@32
    .line 8652
    invoke-direct {p0, v3, v3, v3}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@35
    .line 8653
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@37
    const/16 v2, 0x12

    #@39
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@3c
    .line 8656
    :cond_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@3f
    .line 8636
    return-void

    #@40
    :cond_2
    move v1, v3

    #@41
    .line 8648
    goto :goto_0
.end method

.method private reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I
    .locals 4
    .param p1, "curSize"    # I
    .param p2, "rotation"    # I
    .param p3, "dm"    # Landroid/util/DisplayMetrics;
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    #@0
    .prologue
    .line 7254
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v2, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    #@5
    move-result v2

    #@6
    iput v2, p3, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    #@8
    .line 7255
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a
    invoke-interface {v2, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    #@d
    move-result v2

    #@e
    iput v2, p3, Landroid/util/DisplayMetrics;->noncompatHeightPixels:I

    #@10
    .line 7256
    const/4 v2, 0x0

    #@11
    invoke-static {p3, v2}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    #@14
    move-result v0

    #@15
    .line 7257
    .local v0, "scale":F
    iget v2, p3, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    #@17
    int-to-float v2, v2

    #@18
    div-float/2addr v2, v0

    #@19
    iget v3, p3, Landroid/util/DisplayMetrics;->density:F

    #@1b
    div-float/2addr v2, v3

    #@1c
    const/high16 v3, 0x3f000000    # 0.5f

    #@1e
    add-float/2addr v2, v3

    #@1f
    float-to-int v1, v2

    #@20
    .line 7258
    .local v1, "size":I
    if-eqz p1, :cond_0

    #@22
    if-ge v1, p1, :cond_1

    #@24
    .line 7259
    :cond_0
    move p1, v1

    #@25
    .line 7261
    :cond_1
    return p1
.end method

.method private reduceConfigLayout(IIFII)I
    .locals 6
    .param p1, "curLayout"    # I
    .param p2, "rotation"    # I
    .param p3, "density"    # F
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    #@0
    .prologue
    .line 7202
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v5, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    #@5
    move-result v4

    #@6
    .line 7203
    .local v4, "w":I
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@8
    invoke-interface {v5, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    #@b
    move-result v0

    #@c
    .line 7206
    .local v0, "h":I
    move v1, v4

    #@d
    .line 7207
    .local v1, "longSize":I
    move v2, v0

    #@e
    .line 7208
    .local v2, "shortSize":I
    if-ge v1, v2, :cond_0

    #@10
    .line 7209
    move v3, v1

    #@11
    .line 7210
    .local v3, "tmp":I
    move v1, v2

    #@12
    .line 7211
    move v2, v3

    #@13
    .line 7213
    .end local v3    # "tmp":I
    :cond_0
    int-to-float v5, v1

    #@14
    div-float/2addr v5, p3

    #@15
    float-to-int v1, v5

    #@16
    .line 7214
    int-to-float v5, v2

    #@17
    div-float/2addr v5, p3

    #@18
    float-to-int v2, v5

    #@19
    .line 7215
    invoke-static {p1, v1, v2}, Landroid/content/res/Configuration;->reduceScreenLayout(III)I

    #@1c
    move-result v5

    #@1d
    return v5
.end method

.method private setAnimatorDurationScale(F)V
    .locals 0
    .param p1, "scale"    # F

    #@0
    .prologue
    .line 5564
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@2
    .line 5565
    invoke-static {p1}, Landroid/animation/ValueAnimator;->setDurationScale(F)V

    #@5
    .line 5563
    return-void
.end method

.method private setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    .locals 3
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "density"    # I

    #@0
    .prologue
    .line 8600
    const-string/jumbo v0, "WindowManager"

    #@3
    new-instance v1, Ljava/lang/StringBuilder;

    #@5
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@8
    const-string/jumbo v2, "Using new display density: "

    #@b
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e
    move-result-object v1

    #@f
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@12
    move-result-object v1

    #@13
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@16
    move-result-object v1

    #@17
    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@1a
    .line 8602
    iget-object v0, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@1c
    monitor-enter v0

    #@1d
    .line 8603
    :try_start_0
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1f
    monitor-exit v0

    #@20
    .line 8605
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@23
    .line 8599
    return-void

    #@24
    .line 8602
    :catchall_0
    move-exception v1

    #@25
    monitor-exit v0

    #@26
    throw v1
.end method

.method private setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V
    .locals 4
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "mode"    # I

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 8442
    const-string/jumbo v2, "WindowManager"

    #@4
    new-instance v0, Ljava/lang/StringBuilder;

    #@6
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@9
    const-string/jumbo v3, "Using display scaling mode: "

    #@c
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v3

    #@10
    if-nez p2, :cond_0

    #@12
    const-string/jumbo v0, "auto"

    #@15
    :goto_0
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v0

    #@19
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1c
    move-result-object v0

    #@1d
    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@20
    .line 8444
    iget-object v2, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@22
    monitor-enter v2

    #@23
    .line 8445
    if-eqz p2, :cond_1

    #@25
    const/4 v0, 0x1

    #@26
    :goto_1
    :try_start_0
    iput-boolean v0, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@28
    monitor-exit v2

    #@29
    .line 8447
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@2c
    .line 8441
    return-void

    #@2d
    .line 8442
    :cond_0
    const-string/jumbo v0, "off"

    #@30
    goto :goto_0

    #@31
    :cond_1
    move v0, v1

    #@32
    .line 8445
    goto :goto_1

    #@33
    .line 8444
    :catchall_0
    move-exception v0

    #@34
    monitor-exit v2

    #@35
    throw v0
.end method

.method private setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V
    .locals 3
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "width"    # I
    .param p3, "height"    # I

    #@0
    .prologue
    .line 8510
    const-string/jumbo v0, "WindowManager"

    #@3
    new-instance v1, Ljava/lang/StringBuilder;

    #@5
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@8
    const-string/jumbo v2, "Using new display size: "

    #@b
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e
    move-result-object v1

    #@f
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@12
    move-result-object v1

    #@13
    const-string/jumbo v2, "x"

    #@16
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v1

    #@1a
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v1

    #@1e
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21
    move-result-object v1

    #@22
    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@25
    .line 8512
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@27
    monitor-enter v1

    #@28
    .line 8513
    :try_start_0
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@2a
    .line 8514
    iput p3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2c
    monitor-exit v1

    #@2d
    .line 8516
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@30
    .line 8509
    return-void

    #@31
    .line 8512
    :catchall_0
    move-exception v0

    #@32
    monitor-exit v1

    #@33
    throw v0
.end method

.method private setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    .locals 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    #@0
    .prologue
    .line 8694
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@3
    move-result-object v6

    #@4
    .line 8695
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@6
    monitor-enter v1

    #@7
    .line 8696
    :try_start_0
    iput p2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    #@9
    .line 8697
    iput p3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    #@b
    .line 8698
    iput p4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    #@d
    .line 8699
    iput p5, v6, Landroid/view/DisplayInfo;->overscanBottom:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    monitor-exit v1

    #@10
    .line 8702
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@12
    iget-object v1, v6, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    #@14
    move v2, p2

    #@15
    move v3, p3

    #@16
    move v4, p4

    #@17
    move v5, p5

    #@18
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/DisplaySettings;->setOverscanLocked(Ljava/lang/String;IIII)V

    #@1b
    .line 8703
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@1d
    invoke-virtual {v0}, Lcom/android/server/wm/DisplaySettings;->writeSettingsLocked()V

    #@20
    .line 8705
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@23
    .line 8693
    return-void

    #@24
    .line 8695
    :catchall_0
    move-exception v0

    #@25
    monitor-exit v1

    #@26
    throw v0
.end method

.method private showStrictModeViolation(II)V
    .locals 12
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    #@0
    .prologue
    .line 6040
    if-eqz p1, :cond_1

    #@2
    const/4 v4, 0x1

    #@3
    .line 6041
    .local v4, "on":Z
    :goto_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@5
    monitor-enter v9

    #@6
    .line 6045
    if-eqz v4, :cond_4

    #@8
    .line 6046
    const/4 v1, 0x0

    #@9
    .line 6047
    .local v1, "isVisible":Z
    :try_start_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    #@e
    move-result v2

    #@f
    .line 6048
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@10
    .local v0, "displayNdx":I
    :goto_1
    if-ge v0, v2, :cond_3

    #@12
    .line 6049
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@14
    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@17
    move-result-object v8

    #@18
    check-cast v8, Lcom/android/server/wm/DisplayContent;

    #@1a
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1d
    move-result-object v6

    #@1e
    .line 6050
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@21
    move-result v3

    #@22
    .line 6051
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@23
    .local v5, "winNdx":I
    :goto_2
    if-ge v5, v3, :cond_0

    #@25
    .line 6052
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@28
    move-result-object v7

    #@29
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@2b
    .line 6053
    .local v7, "ws":Lcom/android/server/wm/WindowState;
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@2d
    iget v8, v8, Lcom/android/server/wm/Session;->mPid:I

    #@2f
    if-ne v8, p2, :cond_2

    #@31
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@34
    move-result v8

    #@35
    if-eqz v8, :cond_2

    #@37
    .line 6054
    const/4 v1, 0x1

    #@38
    .line 6048
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_0
    add-int/lit8 v0, v0, 0x1

    #@3a
    goto :goto_1

    #@3b
    .line 6040
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    .end local v3    # "numWindows":I
    .end local v4    # "on":Z
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    const/4 v4, 0x0

    #@3c
    .restart local v4    # "on":Z
    goto :goto_0

    #@3d
    .line 6051
    .restart local v0    # "displayNdx":I
    .restart local v1    # "isVisible":Z
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v5, v5, 0x1

    #@3f
    goto :goto_2

    #@40
    .line 6059
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3
    if-nez v1, :cond_4

    #@42
    monitor-exit v9

    #@43
    .line 6060
    return-void

    #@44
    .line 6066
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    :cond_4
    :try_start_1
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@47
    .line 6069
    :try_start_2
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@49
    if-nez v8, :cond_5

    #@4b
    .line 6070
    new-instance v8, Lcom/android/server/wm/StrictModeFlash;

    #@4d
    .line 6071
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@50
    move-result-object v10

    #@51
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@54
    move-result-object v10

    #@55
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@57
    .line 6070
    invoke-direct {v8, v10, v11}, Lcom/android/server/wm/StrictModeFlash;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;)V

    #@5a
    iput-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@5c
    .line 6073
    :cond_5
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@5e
    invoke-virtual {v8, v4}, Lcom/android/server/wm/StrictModeFlash;->setVisibility(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@61
    .line 6075
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@64
    monitor-exit v9

    #@65
    .line 6039
    return-void

    #@66
    .line 6074
    :catchall_0
    move-exception v8

    #@67
    .line 6075
    :try_start_4
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@6a
    .line 6074
    throw v8
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@6b
    .line 6041
    :catchall_1
    move-exception v8

    #@6c
    monitor-exit v9

    #@6d
    throw v8
.end method

.method private startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V
    .locals 8
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/16 v7, 0x11

    #@2
    const/4 v6, 0x1

    #@3
    const/4 v4, 0x0

    #@4
    .line 4814
    iget-boolean v3, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@6
    if-nez v3, :cond_1

    #@8
    .line 4815
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@a
    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@c
    if-nez v3, :cond_0

    #@e
    .line 4816
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@10
    iput-boolean v6, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@12
    .line 4817
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@14
    iput v4, v3, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    #@16
    .line 4818
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@18
    add-int/lit8 v3, v3, 0x1

    #@1a
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@1c
    .line 4819
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@1e
    if-ne v3, v6, :cond_0

    #@20
    .line 4820
    invoke-direct {p0, v4, v4, v4}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@23
    .line 4821
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@25
    invoke-virtual {v3, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@28
    .line 4822
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2a
    const-wide/16 v4, 0x7d0

    #@2c
    invoke-virtual {v3, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@2f
    .line 4825
    :cond_0
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@31
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    #@34
    move-result v0

    #@35
    .line 4826
    .local v0, "N":I
    const/4 v1, 0x0

    #@36
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@38
    .line 4827
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@3a
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v2

    #@3e
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@40
    .line 4828
    .local v2, "w":Lcom/android/server/wm/WindowState;
    iput-boolean v6, v2, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@42
    .line 4826
    add-int/lit8 v1, v1, 0x1

    #@44
    goto :goto_0

    #@45
    .line 4803
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    return-void
.end method

.method private startFreezingDisplayLocked(ZII)V
    .locals 12
    .param p1, "inTransaction"    # Z
    .param p2, "exitAnim"    # I
    .param p3, "enterAnim"    # I

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 10769
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@3
    if-eqz v1, :cond_0

    #@5
    .line 10770
    return-void

    #@6
    .line 10773
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@8
    if-eqz v1, :cond_4

    #@a
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@c
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->isScreenOn()Z

    #@f
    move-result v1

    #@10
    if-eqz v1, :cond_4

    #@12
    .line 10779
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@14
    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    #@17
    .line 10781
    const/4 v1, 0x1

    #@18
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@1a
    .line 10782
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@1d
    move-result-wide v4

    #@1e
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@20
    .line 10783
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@22
    .line 10785
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1}, Lcom/android/server/wm/InputMonitor;->freezeInputDispatchingLw()V

    #@27
    .line 10790
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@29
    invoke-interface {v1, v3, v3}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    #@2c
    .line 10792
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2e
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@31
    move-result v1

    #@32
    if-eqz v1, :cond_1

    #@34
    .line 10793
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@36
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->freeze()V

    #@39
    .line 10802
    :cond_1
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@3b
    .line 10803
    iput p3, p0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@3d
    .line 10804
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@40
    move-result-object v2

    #@41
    .line 10805
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@44
    move-result v8

    #@45
    .line 10807
    .local v8, "displayId":I
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@47
    invoke-virtual {v1, v8}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@4a
    move-result-object v0

    #@4b
    .line 10808
    .local v0, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v0, :cond_2

    #@4d
    .line 10809
    invoke-virtual {v0}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@50
    .line 10813
    :cond_2
    const/4 v6, 0x0

    #@51
    .line 10814
    .local v6, "isSecure":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@54
    move-result-object v10

    #@55
    .line 10815
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    #@58
    move-result v7

    #@59
    .line 10816
    .local v7, "N":I
    const/4 v9, 0x0

    #@5a
    .local v9, "i":I
    :goto_0
    if-ge v9, v7, :cond_3

    #@5c
    .line 10817
    invoke-virtual {v10, v9}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@5f
    move-result-object v11

    #@60
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@62
    .line 10818
    .local v11, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual {v11}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    #@65
    move-result v1

    #@66
    if-eqz v1, :cond_5

    #@68
    iget-object v1, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6a
    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@6c
    and-int/lit16 v1, v1, 0x2000

    #@6e
    if-eqz v1, :cond_5

    #@70
    .line 10819
    const/4 v6, 0x1

    #@71
    .line 10825
    .end local v11    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    #@74
    .line 10826
    new-instance v0, Lcom/android/server/wm/ScreenRotationAnimation;

    #@76
    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@78
    .line 10827
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@7a
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@7c
    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->isDefaultOrientationForced()Z

    #@7f
    move-result v5

    #@80
    move v4, p1

    #@81
    .line 10826
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/ScreenRotationAnimation;-><init>(Landroid/content/Context;Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceSession;ZZZ)V

    #@84
    .line 10828
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@86
    invoke-virtual {v1, v8, v0}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@89
    .line 10768
    return-void

    #@8a
    .line 10776
    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "isSecure":Z
    .end local v7    # "N":I
    .end local v8    # "displayId":I
    .end local v9    # "i":I
    .end local v10    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    return-void

    #@8b
    .line 10816
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "isSecure":Z
    .restart local v7    # "N":I
    .restart local v8    # "displayId":I
    .restart local v9    # "i":I
    .restart local v10    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v11    # "ws":Lcom/android/server/wm/WindowState;
    :cond_5
    add-int/lit8 v9, v9, 0x1

    #@8d
    goto :goto_0
.end method

.method private stopFreezingDisplayLocked()V
    .locals 18

    #@0
    .prologue
    .line 10833
    move-object/from16 v0, p0

    #@2
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@4
    if-nez v3, :cond_0

    #@6
    .line 10834
    return-void

    #@7
    .line 10837
    :cond_0
    move-object/from16 v0, p0

    #@9
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@b
    if-nez v3, :cond_1

    #@d
    move-object/from16 v0, p0

    #@f
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@11
    if-lez v3, :cond_2

    #@13
    .line 10846
    :cond_1
    return-void

    #@14
    .line 10838
    :cond_2
    move-object/from16 v0, p0

    #@16
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@18
    const/4 v4, 0x1

    #@19
    if-eq v3, v4, :cond_1

    #@1b
    .line 10839
    move-object/from16 v0, p0

    #@1d
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 10837
    if-nez v3, :cond_1

    #@21
    .line 10839
    move-object/from16 v0, p0

    #@23
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@25
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@28
    move-result v3

    #@29
    if-eqz v3, :cond_1

    #@2b
    .line 10849
    const/4 v3, 0x0

    #@2c
    move-object/from16 v0, p0

    #@2e
    iput-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@30
    .line 10850
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@33
    move-result-wide v4

    #@34
    move-object/from16 v0, p0

    #@36
    iget-wide v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@38
    sub-long/2addr v4, v6

    #@39
    long-to-int v3, v4

    #@3a
    move-object/from16 v0, p0

    #@3c
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@3e
    .line 10851
    new-instance v16, Ljava/lang/StringBuilder;

    #@40
    const/16 v3, 0x80

    #@42
    move-object/from16 v0, v16

    #@44
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    #@47
    .line 10852
    .local v16, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v3, "Screen frozen for "

    #@4a
    move-object/from16 v0, v16

    #@4c
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4f
    .line 10853
    move-object/from16 v0, p0

    #@51
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@53
    int-to-long v4, v3

    #@54
    move-object/from16 v0, v16

    #@56
    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    #@59
    .line 10854
    move-object/from16 v0, p0

    #@5b
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@5d
    if-eqz v3, :cond_3

    #@5f
    .line 10855
    const-string/jumbo v3, " due to "

    #@62
    move-object/from16 v0, v16

    #@64
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@67
    .line 10856
    move-object/from16 v0, p0

    #@69
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@6b
    move-object/from16 v0, v16

    #@6d
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@70
    .line 10858
    :cond_3
    const-string/jumbo v3, "WindowManager"

    #@73
    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@76
    move-result-object v4

    #@77
    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@7a
    .line 10859
    move-object/from16 v0, p0

    #@7c
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@7e
    const/16 v4, 0x11

    #@80
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@83
    .line 10860
    move-object/from16 v0, p0

    #@85
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@87
    const/16 v4, 0x1e

    #@89
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@8c
    .line 10865
    const/16 v17, 0x0

    #@8e
    .line 10867
    .local v17, "updateRotation":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@91
    move-result-object v12

    #@92
    .line 10868
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@95
    move-result v13

    #@96
    .line 10870
    .local v13, "displayId":I
    move-object/from16 v0, p0

    #@98
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@9a
    invoke-virtual {v3, v13}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@9d
    move-result-object v2

    #@9e
    .line 10871
    .local v2, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v2, :cond_8

    #@a0
    .line 10872
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    #@a3
    move-result v3

    #@a4
    .line 10871
    if-eqz v3, :cond_8

    #@a6
    .line 10875
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@a9
    move-result-object v14

    #@aa
    .line 10877
    .local v14, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@ad
    move-result v15

    #@ae
    .line 10878
    .local v15, "isDimming":Z
    move-object/from16 v0, p0

    #@b0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@b2
    move-object/from16 v0, p0

    #@b4
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@b6
    move-object/from16 v0, p0

    #@b8
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@ba
    invoke-interface {v3, v4, v5, v15}, Landroid/view/WindowManagerPolicy;->validateRotationAnimationLw(IIZ)Z

    #@bd
    move-result v3

    #@be
    if-nez v3, :cond_4

    #@c0
    .line 10879
    const/4 v3, 0x0

    #@c1
    move-object/from16 v0, p0

    #@c3
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@c5
    const/4 v3, 0x0

    #@c6
    move-object/from16 v0, p0

    #@c8
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@ca
    .line 10881
    :cond_4
    move-object/from16 v0, p0

    #@cc
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@ce
    const-wide/16 v4, 0x2710

    #@d0
    .line 10882
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    #@d3
    move-result v6

    #@d4
    iget v7, v14, Landroid/view/DisplayInfo;->logicalWidth:I

    #@d6
    .line 10883
    iget v8, v14, Landroid/view/DisplayInfo;->logicalHeight:I

    #@d8
    move-object/from16 v0, p0

    #@da
    iget v9, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@dc
    move-object/from16 v0, p0

    #@de
    iget v10, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@e0
    .line 10881
    invoke-virtual/range {v2 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    #@e3
    move-result v3

    #@e4
    if-eqz v3, :cond_7

    #@e6
    .line 10884
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    #@e9
    .line 10898
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "isDimming":Z
    :goto_0
    move-object/from16 v0, p0

    #@eb
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@ed
    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->thawInputDispatchingLw()V

    #@f0
    .line 10906
    const/4 v3, 0x0

    #@f1
    move-object/from16 v0, p0

    #@f3
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@f6
    move-result v11

    #@f7
    .line 10913
    .local v11, "configChanged":Z
    move-object/from16 v0, p0

    #@f9
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@fb
    const/16 v4, 0xf

    #@fd
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@100
    .line 10914
    move-object/from16 v0, p0

    #@102
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@104
    const-wide/16 v4, 0x7d0

    #@106
    const/16 v6, 0xf

    #@108
    invoke-virtual {v3, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@10b
    .line 10916
    move-object/from16 v0, p0

    #@10d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@10f
    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->release()V

    #@112
    .line 10918
    if-eqz v17, :cond_5

    #@114
    .line 10920
    const/4 v3, 0x0

    #@115
    move-object/from16 v0, p0

    #@117
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@11a
    move-result v3

    #@11b
    or-int/2addr v11, v3

    #@11c
    .line 10923
    :cond_5
    if-eqz v11, :cond_6

    #@11e
    .line 10924
    move-object/from16 v0, p0

    #@120
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@122
    const/16 v4, 0x12

    #@124
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@127
    .line 10832
    :cond_6
    return-void

    #@128
    .line 10886
    .end local v11    # "configChanged":Z
    .restart local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v15    # "isDimming":Z
    :cond_7
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@12b
    .line 10887
    move-object/from16 v0, p0

    #@12d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@12f
    const/4 v4, 0x0

    #@130
    invoke-virtual {v3, v13, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@133
    .line 10888
    const/16 v17, 0x1

    #@135
    goto :goto_0

    #@136
    .line 10891
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "isDimming":Z
    :cond_8
    if-eqz v2, :cond_9

    #@138
    .line 10892
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@13b
    .line 10893
    move-object/from16 v0, p0

    #@13d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@13f
    const/4 v4, 0x0

    #@140
    invoke-virtual {v3, v13, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@143
    .line 10895
    :cond_9
    const/16 v17, 0x1

    #@145
    goto :goto_0
.end method

.method private tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I
    .locals 6
    .param p1, "interestingPos"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1577
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v3

    #@4
    .line 1578
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3, p2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v4

    #@8
    .line 1579
    .local v4, "wpos":I
    if-ltz v4, :cond_3

    #@a
    .line 1580
    if-ge v4, p1, :cond_0

    #@c
    add-int/lit8 p1, p1, -0x1

    #@e
    .line 1582
    :cond_0
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@11
    .line 1583
    const/4 v5, 0x1

    #@12
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@14
    .line 1584
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@16
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@19
    move-result v0

    #@1a
    .line 1585
    .local v0, "NC":I
    :cond_1
    :goto_0
    if-lez v0, :cond_3

    #@1c
    .line 1586
    add-int/lit8 v0, v0, -0x1

    #@1e
    .line 1587
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@20
    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@23
    move-result-object v2

    #@24
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@26
    .line 1588
    .local v2, "cw":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@29
    move-result v1

    #@2a
    .line 1589
    .local v1, "cpos":I
    if-ltz v1, :cond_1

    #@2c
    .line 1590
    if-ge v1, p1, :cond_2

    #@2e
    add-int/lit8 p1, p1, -0x1

    #@30
    .line 1593
    :cond_2
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@33
    goto :goto_0

    #@34
    .line 1597
    .end local v0    # "NC":I
    .end local v1    # "cpos":I
    .end local v2    # "cw":Lcom/android/server/wm/WindowState;
    :cond_3
    return p1
.end method

.method private toBrightnessOverride(F)I
    .locals 1
    .param p1, "value"    # F

    #@0
    .prologue
    .line 10398
    const/high16 v0, 0x437f0000    # 255.0f

    #@2
    mul-float/2addr v0, p1

    #@3
    float-to-int v0, v0

    #@4
    return v0
.end method

.method private updateAllDrawnLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v11, 0x1

    #@1
    .line 9797
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@4
    move-result-object v2

    #@5
    .line 9798
    .local v2, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@8
    move-result v8

    #@9
    add-int/lit8 v1, v8, -0x1

    #@b
    .local v1, "stackNdx":I
    :goto_0
    if-ltz v1, :cond_3

    #@d
    .line 9799
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@10
    move-result-object v8

    #@11
    check-cast v8, Lcom/android/server/wm/TaskStack;

    #@13
    invoke-virtual {v8}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@16
    move-result-object v4

    #@17
    .line 9800
    .local v4, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@1a
    move-result v8

    #@1b
    add-int/lit8 v3, v8, -0x1

    #@1d
    .local v3, "taskNdx":I
    :goto_1
    if-ltz v3, :cond_2

    #@1f
    .line 9801
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@22
    move-result-object v8

    #@23
    check-cast v8, Lcom/android/server/wm/Task;

    #@25
    iget-object v6, v8, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@27
    .line 9802
    .local v6, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    #@2a
    move-result v8

    #@2b
    add-int/lit8 v5, v8, -0x1

    #@2d
    .local v5, "tokenNdx":I
    :goto_2
    if-ltz v5, :cond_1

    #@2f
    .line 9803
    invoke-virtual {v6, v5}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@32
    move-result-object v7

    #@33
    check-cast v7, Lcom/android/server/wm/AppWindowToken;

    #@35
    .line 9804
    .local v7, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v8, v7, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@37
    if-nez v8, :cond_0

    #@39
    .line 9805
    iget v0, v7, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    #@3b
    .line 9806
    .local v0, "numInteresting":I
    if-lez v0, :cond_0

    #@3d
    iget v8, v7, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    #@3f
    if-lt v8, v0, :cond_0

    #@41
    .line 9811
    iput-boolean v11, v7, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@43
    .line 9814
    iput-boolean v11, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@45
    .line 9815
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@47
    iget-object v9, v7, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@49
    const/16 v10, 0x20

    #@4b
    invoke-virtual {v8, v10, v9}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@4e
    move-result-object v8

    #@4f
    invoke-virtual {v8}, Landroid/os/Message;->sendToTarget()V

    #@52
    .line 9802
    .end local v0    # "numInteresting":I
    :cond_0
    add-int/lit8 v5, v5, -0x1

    #@54
    goto :goto_2

    #@55
    .line 9800
    .end local v7    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1
    add-int/lit8 v3, v3, -0x1

    #@57
    goto :goto_1

    #@58
    .line 9798
    .end local v5    # "tokenNdx":I
    .end local v6    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_2
    add-int/lit8 v1, v1, -0x1

    #@5a
    goto :goto_0

    #@5b
    .line 9794
    .end local v3    # "taskNdx":I
    .end local v4    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_3
    return-void
.end method

.method private updateFocusedWindowLocked(IZ)Z
    .locals 12
    .param p1, "mode"    # I
    .param p2, "updateInputWindows"    # Z

    #@0
    .prologue
    const-wide/16 v10, 0x20

    #@2
    const/4 v9, 0x3

    #@3
    const/4 v8, 0x2

    #@4
    const/4 v5, 0x0

    #@5
    const/4 v6, 0x1

    #@6
    .line 10639
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@9
    move-result-object v3

    #@a
    .line 10640
    .local v3, "newFocus":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@c
    if-eq v7, v3, :cond_6

    #@e
    .line 10641
    const-string/jumbo v7, "wmUpdateFocus"

    #@11
    invoke-static {v10, v11, v7}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@14
    .line 10644
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@16
    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@19
    .line 10645
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1b
    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@1e
    .line 10647
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@21
    move-result-object v0

    #@22
    .line 10649
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eq p1, v6, :cond_0

    #@24
    .line 10650
    if-eq p1, v9, :cond_0

    #@26
    move v5, v6

    #@27
    .line 10648
    :cond_0
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@2a
    move-result v2

    #@2b
    .line 10651
    .local v2, "imWindowChanged":Z
    if-eqz v2, :cond_1

    #@2d
    .line 10652
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@2f
    .line 10653
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@32
    move-result-object v3

    #@33
    .line 10658
    :cond_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@35
    .line 10659
    .local v4, "oldFocus":Lcom/android/server/wm/WindowState;
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@37
    .line 10660
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@39
    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@3c
    .line 10662
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3e
    invoke-interface {v5, v4, v3}, Landroid/view/WindowManagerPolicy;->focusChangedLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)I

    #@41
    move-result v1

    #@42
    .line 10664
    .local v1, "focusChanged":I
    if-eqz v2, :cond_2

    #@44
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@46
    if-eq v4, v5, :cond_2

    #@48
    .line 10666
    if-ne p1, v8, :cond_5

    #@4a
    .line 10667
    invoke-direct {p0, v0, v6, p2}, Lcom/android/server/wm/WindowManagerService;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    #@4d
    .line 10668
    and-int/lit8 v1, v1, -0x2

    #@4f
    .line 10676
    :cond_2
    :goto_0
    and-int/lit8 v5, v1, 0x1

    #@51
    if-eqz v5, :cond_3

    #@53
    .line 10678
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@55
    .line 10679
    if-ne p1, v8, :cond_3

    #@57
    .line 10680
    invoke-direct {p0, v0, v6, p2}, Lcom/android/server/wm/WindowManagerService;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    #@5a
    .line 10684
    :cond_3
    if-eq p1, v6, :cond_4

    #@5c
    .line 10687
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@5e
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@60
    invoke-virtual {v5, v7, p2}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    #@63
    .line 10690
    :cond_4
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    #@66
    .line 10691
    return v6

    #@67
    .line 10669
    :cond_5
    if-ne p1, v9, :cond_2

    #@69
    .line 10672
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@6c
    move-result-object v5

    #@6d
    invoke-direct {p0, v5}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@70
    goto :goto_0

    #@71
    .line 10693
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "focusChanged":I
    .end local v2    # "imWindowChanged":Z
    .end local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :cond_6
    return v5
.end method

.method private updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .locals 8
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v7, 0x1

    #@2
    const/4 v6, 0x0

    #@3
    .line 3955
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@5
    if-nez v4, :cond_0

    #@7
    .line 3956
    return-object v5

    #@8
    .line 3958
    :cond_0
    const/4 v2, 0x0

    #@9
    .line 3960
    .local v2, "config":Landroid/content/res/Configuration;
    invoke-virtual {p0, v6}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@c
    move-result v4

    #@d
    if-eqz v4, :cond_3

    #@f
    .line 3961
    if-eqz p2, :cond_1

    #@11
    .line 3962
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@14
    move-result-object v1

    #@15
    .line 3963
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_1

    #@17
    .line 3964
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@1a
    .line 3967
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;

    #@1d
    move-result-object v2

    #@1e
    .line 3992
    .end local v2    # "config":Landroid/content/res/Configuration;
    :cond_2
    :goto_0
    return-object v2

    #@1f
    .line 3969
    .restart local v2    # "config":Landroid/content/res/Configuration;
    :cond_3
    if-eqz p1, :cond_2

    #@21
    .line 3974
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@23
    invoke-virtual {v4}, Landroid/content/res/Configuration;->setToDefaults()V

    #@26
    .line 3975
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@28
    iget v5, p1, Landroid/content/res/Configuration;->fontScale:F

    #@2a
    iput v5, v4, Landroid/content/res/Configuration;->fontScale:F

    #@2c
    .line 3976
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@2e
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@31
    .line 3977
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@33
    invoke-virtual {p1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    #@36
    move-result v4

    #@37
    if-eqz v4, :cond_2

    #@39
    .line 3978
    iput-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@3b
    .line 3979
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3e
    move-result-object v3

    #@3f
    .line 3980
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iput-boolean v7, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@41
    .line 3981
    const/4 v4, 0x2

    #@42
    new-array v0, v4, [I

    #@44
    .line 3982
    .local v0, "anim":[I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@47
    move-result v4

    #@48
    if-eqz v4, :cond_4

    #@4a
    .line 3983
    aput v6, v0, v7

    #@4c
    aput v6, v0, v6

    #@4e
    .line 3987
    :goto_1
    aget v4, v0, v6

    #@50
    aget v5, v0, v7

    #@52
    invoke-direct {p0, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@55
    .line 3988
    new-instance v2, Landroid/content/res/Configuration;

    #@57
    .end local v2    # "config":Landroid/content/res/Configuration;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@59
    invoke-direct {v2, v4}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    #@5c
    .local v2, "config":Landroid/content/res/Configuration;
    goto :goto_0

    #@5d
    .line 3985
    .local v2, "config":Landroid/content/res/Configuration;
    :cond_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5f
    invoke-interface {v4, v0}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    #@62
    goto :goto_1
.end method

.method private updateResizingWindows(Lcom/android/server/wm/WindowState;)V
    .locals 6
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 9629
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@3
    .line 9630
    .local v1, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v2, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@5
    if-eqz v2, :cond_2

    #@7
    iget v2, p1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    #@9
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@b
    if-ne v2, v3, :cond_2

    #@d
    .line 9631
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setInsetsChanged()Z

    #@10
    .line 9632
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    #@13
    move-result v0

    #@14
    .line 9640
    .local v0, "configChanged":Z
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    #@16
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@18
    invoke-virtual {v2, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@1b
    .line 9641
    iget-boolean v2, p1, Lcom/android/server/wm/WindowState;->mContentInsetsChanged:Z

    #@1d
    if-nez v2, :cond_0

    #@1f
    .line 9642
    iget-boolean v2, p1, Lcom/android/server/wm/WindowState;->mVisibleInsetsChanged:Z

    #@21
    .line 9641
    if-nez v2, :cond_0

    #@23
    .line 9643
    iget-boolean v2, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z

    #@25
    .line 9641
    if-nez v2, :cond_0

    #@27
    .line 9644
    iget-boolean v2, p1, Lcom/android/server/wm/WindowState;->mOutsetsChanged:Z

    #@29
    .line 9641
    if-nez v2, :cond_0

    #@2b
    if-eqz v0, :cond_3

    #@2d
    .line 9660
    :cond_0
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mLastOverscanInsets:Landroid/graphics/Rect;

    #@2f
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    #@31
    invoke-virtual {v2, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@34
    .line 9661
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    #@36
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@38
    invoke-virtual {v2, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@3b
    .line 9662
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mLastVisibleInsets:Landroid/graphics/Rect;

    #@3d
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    #@3f
    invoke-virtual {v2, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@42
    .line 9663
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mLastStableInsets:Landroid/graphics/Rect;

    #@44
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    #@46
    invoke-virtual {v2, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@49
    .line 9664
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mLastOutsets:Landroid/graphics/Rect;

    #@4b
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    #@4d
    invoke-virtual {v2, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@50
    .line 9665
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V

    #@53
    .line 9671
    iget-boolean v2, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@55
    if-eqz v2, :cond_1

    #@57
    .line 9675
    const/4 v2, 0x1

    #@58
    iput v2, v1, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    #@5a
    .line 9676
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@5c
    if-eqz v2, :cond_1

    #@5e
    .line 9677
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@60
    iput-boolean v4, v2, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@62
    .line 9678
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@64
    iput-boolean v4, v2, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@66
    .line 9681
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@68
    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@6b
    move-result v2

    #@6c
    if-nez v2, :cond_2

    #@6e
    .line 9685
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@70
    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@73
    .line 9628
    .end local v0    # "configChanged":Z
    :cond_2
    :goto_0
    return-void

    #@74
    .line 9687
    .restart local v0    # "configChanged":Z
    :cond_3
    iget-boolean v2, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@76
    if-eqz v2, :cond_2

    #@78
    .line 9688
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@7b
    move-result v2

    #@7c
    if-eqz v2, :cond_2

    #@7e
    .line 9692
    iput-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@80
    .line 9693
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@83
    move-result-wide v2

    #@84
    .line 9694
    iget-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@86
    .line 9693
    sub-long/2addr v2, v4

    #@87
    long-to-int v2, v2

    #@88
    iput v2, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@8a
    goto :goto_0
.end method

.method private updateWallpaperVisibilityLocked()V
    .locals 13

    #@0
    .prologue
    const/4 v12, 0x1

    #@1
    const/4 v11, 0x0

    #@2
    .line 2322
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@4
    invoke-direct {p0, v10}, Lcom/android/server/wm/WindowManagerService;->isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z

    #@7
    move-result v6

    #@8
    .line 2323
    .local v6, "visible":Z
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@a
    invoke-virtual {v10}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@d
    move-result-object v2

    #@e
    .line 2324
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v2, :cond_0

    #@10
    .line 2325
    return-void

    #@11
    .line 2327
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@14
    move-result-object v3

    #@15
    .line 2328
    .local v3, "displayInfo":Landroid/view/DisplayInfo;
    iget v4, v3, Landroid/view/DisplayInfo;->logicalWidth:I

    #@17
    .line 2329
    .local v4, "dw":I
    iget v1, v3, Landroid/view/DisplayInfo;->logicalHeight:I

    #@19
    .line 2331
    .local v1, "dh":I
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@1b
    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    #@1e
    move-result v10

    #@1f
    add-int/lit8 v0, v10, -0x1

    #@21
    .local v0, "curTokenNdx":I
    :goto_0
    if-ltz v0, :cond_5

    #@23
    .line 2332
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@25
    invoke-virtual {v10, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@28
    move-result-object v5

    #@29
    check-cast v5, Lcom/android/server/wm/WindowToken;

    #@2b
    .line 2333
    .local v5, "token":Lcom/android/server/wm/WindowToken;
    iget-boolean v10, v5, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@2d
    if-ne v10, v6, :cond_1

    #@2f
    .line 2334
    if-eqz v6, :cond_3

    #@31
    move v10, v11

    #@32
    :goto_1
    iput-boolean v10, v5, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@34
    .line 2337
    iput-boolean v12, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@36
    .line 2340
    :cond_1
    iget-object v9, v5, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@38
    .line 2341
    .local v9, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@3b
    move-result v10

    #@3c
    add-int/lit8 v8, v10, -0x1

    #@3e
    .local v8, "wallpaperNdx":I
    :goto_2
    if-ltz v8, :cond_4

    #@40
    .line 2342
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@43
    move-result-object v7

    #@44
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@46
    .line 2343
    .local v7, "wallpaper":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_2

    #@48
    .line 2344
    invoke-virtual {p0, v7, v4, v1, v11}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    #@4b
    .line 2347
    :cond_2
    invoke-virtual {p0, v7, v6}, Lcom/android/server/wm/WindowManagerService;->dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V

    #@4e
    .line 2341
    add-int/lit8 v8, v8, -0x1

    #@50
    goto :goto_2

    #@51
    .end local v7    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v8    # "wallpaperNdx":I
    .end local v9    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    move v10, v12

    #@52
    .line 2334
    goto :goto_1

    #@53
    .line 2331
    .restart local v8    # "wallpaperNdx":I
    .restart local v9    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    add-int/lit8 v0, v0, -0x1

    #@55
    goto :goto_0

    #@56
    .line 2321
    .end local v5    # "token":Lcom/android/server/wm/WindowToken;
    .end local v8    # "wallpaperNdx":I
    .end local v9    # "windows":Lcom/android/server/wm/WindowList;
    :cond_5
    return-void
.end method


# virtual methods
.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZ)V
    .locals 12
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showForAllUsers"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I
    .param p10, "voiceInteraction"    # Z
    .param p11, "launchTaskBehind"    # Z

    #@0
    .prologue
    .line 3718
    const-string/jumbo v7, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3719
    const-string/jumbo v8, "addAppToken()"

    #@6
    .line 3718
    invoke-virtual {p0, v7, v8}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v7

    #@a
    if-nez v7, :cond_0

    #@c
    .line 3720
    new-instance v7, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v8, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v7

    #@15
    .line 3731
    :cond_0
    :try_start_0
    invoke-interface {p2}, Landroid/view/IApplicationToken;->getKeyDispatchingTimeout()J
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@18
    move-result-wide v8

    #@19
    const-wide/32 v10, 0xf4240

    #@1c
    mul-long v4, v8, v10

    #@1e
    .line 3737
    .local v4, "inputDispatchingTimeoutNanos":J
    :goto_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@20
    monitor-enter v8

    #@21
    .line 3738
    :try_start_1
    invoke-interface {p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@24
    move-result-object v7

    #@25
    invoke-virtual {p0, v7}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@28
    move-result-object v2

    #@29
    .line 3739
    .local v2, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_1

    #@2b
    .line 3740
    const-string/jumbo v7, "WindowManager"

    #@2e
    new-instance v9, Ljava/lang/StringBuilder;

    #@30
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@33
    const-string/jumbo v10, "Attempted to add existing app token: "

    #@36
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@39
    move-result-object v9

    #@3a
    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3d
    move-result-object v9

    #@3e
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@41
    move-result-object v9

    #@42
    invoke-static {v7, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@45
    monitor-exit v8

    #@46
    .line 3741
    return-void

    #@47
    .line 3732
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "inputDispatchingTimeoutNanos":J
    :catch_0
    move-exception v3

    #@48
    .line 3733
    .local v3, "ex":Landroid/os/RemoteException;
    const-string/jumbo v7, "WindowManager"

    #@4b
    const-string/jumbo v8, "Could not get dispatching timeout."

    #@4e
    invoke-static {v7, v8, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@51
    .line 3734
    const-wide v4, 0x12a05f200L

    #@56
    .restart local v4    # "inputDispatchingTimeoutNanos":J
    goto :goto_0

    #@57
    .line 3743
    .end local v3    # "ex":Landroid/os/RemoteException;
    .restart local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1
    :try_start_2
    new-instance v2, Lcom/android/server/wm/AppWindowToken;

    #@59
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    move/from16 v0, p10

    #@5b
    invoke-direct {v2, p0, p2, v0}, Lcom/android/server/wm/AppWindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IApplicationToken;Z)V

    #@5e
    .line 3744
    .restart local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    iput-wide v4, v2, Lcom/android/server/wm/AppWindowToken;->inputDispatchingTimeoutNanos:J

    #@60
    .line 3745
    move/from16 v0, p6

    #@62
    iput-boolean v0, v2, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@64
    .line 3746
    move/from16 v0, p7

    #@66
    iput-boolean v0, v2, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    #@68
    .line 3747
    move/from16 v0, p5

    #@6a
    iput v0, v2, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@6c
    .line 3748
    move/from16 v0, p9

    #@6e
    and-int/lit16 v7, v0, 0x480

    #@70
    if-eqz v7, :cond_3

    #@72
    const/4 v7, 0x1

    #@73
    :goto_1
    iput-boolean v7, v2, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    #@75
    .line 3750
    move/from16 v0, p11

    #@77
    iput-boolean v0, v2, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@79
    .line 3754
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@7b
    invoke-virtual {v7, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@7e
    move-result-object v6

    #@7f
    check-cast v6, Lcom/android/server/wm/Task;

    #@81
    .line 3755
    .local v6, "task":Lcom/android/server/wm/Task;
    if-nez v6, :cond_2

    #@83
    .line 3756
    move/from16 v0, p4

    #@85
    move/from16 v1, p8

    #@87
    invoke-direct {p0, p3, v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->createTaskLocked(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;

    #@8a
    move-result-object v6

    #@8b
    .line 3758
    :cond_2
    invoke-virtual {v6, p1, v2}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;)V

    #@8e
    .line 3760
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@90
    invoke-interface {p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@93
    move-result-object v9

    #@94
    invoke-virtual {v7, v9, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@97
    .line 3763
    const/4 v7, 0x1

    #@98
    iput-boolean v7, v2, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@9a
    .line 3764
    const/4 v7, 0x1

    #@9b
    iput-boolean v7, v2, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@9d
    monitor-exit v8

    #@9e
    .line 3717
    return-void

    #@9f
    .line 3748
    .end local v6    # "task":Lcom/android/server/wm/Task;
    :cond_3
    const/4 v7, 0x0

    #@a0
    goto :goto_1

    #@a1
    .line 3737
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v7

    #@a2
    monitor-exit v8

    #@a3
    throw v7
.end method

.method public bridge synthetic addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Landroid/view/WindowManagerPolicy$InputConsumer;
    .locals 1
    .param p1, "looper"    # Landroid/os/Looper;
    .param p2, "inputEventReceiverFactory"    # Landroid/view/InputEventReceiver$Factory;

    #@0
    .prologue
    .line 11044
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Lcom/android/server/wm/InputConsumerImpl;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method public addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Lcom/android/server/wm/InputConsumerImpl;
    .locals 3
    .param p1, "looper"    # Landroid/os/Looper;
    .param p2, "inputEventReceiverFactory"    # Landroid/view/InputEventReceiver$Factory;

    #@0
    .prologue
    .line 11046
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 11047
    :try_start_0
    new-instance v0, Lcom/android/server/wm/InputConsumerImpl;

    #@5
    invoke-direct {v0, p0, p1, p2}, Lcom/android/server/wm/InputConsumerImpl;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)V

    #@8
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@a
    .line 11048
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@c
    const/4 v2, 0x1

    #@d
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@10
    .line 11049
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@12
    monitor-exit v1

    #@13
    return-object v0

    #@14
    .line 11046
    :catchall_0
    move-exception v0

    #@15
    monitor-exit v1

    #@16
    throw v0
.end method

.method addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    .line 1533
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@4
    move-result v0

    #@5
    .line 1534
    .local v0, "pos":I
    if-ltz v0, :cond_0

    #@7
    .line 1535
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@9
    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@b
    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@d
    .line 1539
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@10
    move-result-object v1

    #@11
    invoke-virtual {v1, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@14
    .line 1540
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@16
    .line 1541
    add-int/lit8 v1, v0, 0x1

    #@18
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@1b
    .line 1542
    return-void

    #@1c
    .line 1544
    :cond_0
    const/4 v1, 0x0

    #@1d
    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1f
    .line 1545
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@22
    .line 1546
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@25
    .line 1532
    return-void
.end method

.method public addTask(IIZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    #@0
    .prologue
    .line 5211
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5214
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v2

    #@9
    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5215
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_0

    #@d
    monitor-exit v4

    #@e
    .line 5217
    return-void

    #@f
    .line 5219
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@17
    .line 5220
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v1, v2, p3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;Z)V

    #@1a
    .line 5221
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@1d
    move-result-object v0

    #@1e
    .line 5222
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    #@1f
    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@21
    .line 5223
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@24
    monitor-exit v4

    #@25
    .line 5210
    return-void

    #@26
    .line 5211
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@27
    monitor-exit v4

    #@28
    throw v3
.end method

.method public addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/InputChannel;)I
    .locals 34
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "viewVisibility"    # I
    .param p6, "displayId"    # I
    .param p7, "outContentInsets"    # Landroid/graphics/Rect;
    .param p8, "outStableInsets"    # Landroid/graphics/Rect;
    .param p9, "outOutsets"    # Landroid/graphics/Rect;
    .param p10, "outInputChannel"    # Landroid/view/InputChannel;

    #@0
    .prologue
    .line 2356
    const/4 v3, 0x1

    #@1
    new-array v0, v3, [I

    #@3
    move-object/from16 v20, v0

    #@5
    .line 2357
    .local v20, "appOp":[I
    move-object/from16 v0, p0

    #@7
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    move-object/from16 v0, p4

    #@b
    move-object/from16 v1, v20

    #@d
    invoke-interface {v3, v0, v1}, Landroid/view/WindowManagerPolicy;->checkAddPermission(Landroid/view/WindowManager$LayoutParams;[I)I

    #@10
    move-result v29

    #@11
    .line 2358
    .local v29, "res":I
    if-eqz v29, :cond_0

    #@13
    .line 2359
    return v29

    #@14
    .line 2362
    :cond_0
    const/16 v28, 0x0

    #@16
    .line 2363
    .local v28, "reportNewConfig":Z
    const/4 v7, 0x0

    #@17
    .line 2365
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p4

    #@19
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@1b
    move/from16 v31, v0

    #@1d
    .line 2367
    .local v31, "type":I
    move-object/from16 v0, p0

    #@1f
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@21
    move-object/from16 v33, v0

    #@23
    monitor-enter v33

    #@24
    .line 2368
    :try_start_0
    move-object/from16 v0, p0

    #@26
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@28
    if-nez v3, :cond_1

    #@2a
    .line 2369
    new-instance v3, Ljava/lang/IllegalStateException;

    #@2c
    const-string/jumbo v4, "Display has not been initialialized"

    #@2f
    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    #@32
    throw v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@33
    .line 2367
    .end local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@34
    monitor-exit v33

    #@35
    throw v3

    #@36
    .line 2372
    .restart local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :cond_1
    :try_start_1
    move-object/from16 v0, p0

    #@38
    move/from16 v1, p6

    #@3a
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3d
    move-result-object v12

    #@3e
    .line 2373
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v12, :cond_2

    #@40
    .line 2374
    const-string/jumbo v3, "WindowManager"

    #@43
    new-instance v4, Ljava/lang/StringBuilder;

    #@45
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@48
    const-string/jumbo v5, "Attempted to add window to a display that does not exist: "

    #@4b
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v4

    #@4f
    move/from16 v0, p6

    #@51
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@54
    move-result-object v4

    #@55
    .line 2375
    const-string/jumbo v5, ".  Aborting."

    #@58
    .line 2374
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5b
    move-result-object v4

    #@5c
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@5f
    move-result-object v4

    #@60
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@63
    .line 2376
    const/16 v3, -0x9

    #@65
    monitor-exit v33

    #@66
    return v3

    #@67
    .line 2378
    :cond_2
    :try_start_2
    move-object/from16 v0, p1

    #@69
    iget v3, v0, Lcom/android/server/wm/Session;->mUid:I

    #@6b
    invoke-virtual {v12, v3}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@6e
    move-result v3

    #@6f
    if-nez v3, :cond_3

    #@71
    .line 2379
    const-string/jumbo v3, "WindowManager"

    #@74
    new-instance v4, Ljava/lang/StringBuilder;

    #@76
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@79
    const-string/jumbo v5, "Attempted to add window to a display for which the application does not have access: "

    #@7c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v4

    #@80
    move/from16 v0, p6

    #@82
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@85
    move-result-object v4

    #@86
    .line 2380
    const-string/jumbo v5, ".  Aborting."

    #@89
    .line 2379
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8c
    move-result-object v4

    #@8d
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@90
    move-result-object v4

    #@91
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@94
    .line 2381
    const/16 v3, -0x9

    #@96
    monitor-exit v33

    #@97
    return v3

    #@98
    .line 2384
    :cond_3
    :try_start_3
    move-object/from16 v0, p0

    #@9a
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@9c
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@9f
    move-result-object v4

    #@a0
    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    #@a3
    move-result v3

    #@a4
    if-eqz v3, :cond_4

    #@a6
    .line 2385
    const-string/jumbo v3, "WindowManager"

    #@a9
    new-instance v4, Ljava/lang/StringBuilder;

    #@ab
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@ae
    const-string/jumbo v5, "Window "

    #@b1
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b4
    move-result-object v4

    #@b5
    move-object/from16 v0, p2

    #@b7
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@ba
    move-result-object v4

    #@bb
    const-string/jumbo v5, " is already added"

    #@be
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c1
    move-result-object v4

    #@c2
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c5
    move-result-object v4

    #@c6
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@c9
    .line 2386
    const/4 v3, -0x5

    #@ca
    monitor-exit v33

    #@cb
    return v3

    #@cc
    .line 2389
    :cond_4
    const/16 v3, 0x3e8

    #@ce
    move/from16 v0, v31

    #@d0
    if-lt v0, v3, :cond_6

    #@d2
    const/16 v3, 0x7cf

    #@d4
    move/from16 v0, v31

    #@d6
    if-gt v0, v3, :cond_6

    #@d8
    .line 2390
    :try_start_4
    move-object/from16 v0, p4

    #@da
    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@dc
    const/4 v4, 0x0

    #@dd
    const/4 v5, 0x0

    #@de
    move-object/from16 v0, p0

    #@e0
    invoke-virtual {v0, v4, v3, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@e3
    move-result-object v7

    #@e4
    .line 2391
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    if-nez v7, :cond_5

    #@e6
    .line 2392
    const-string/jumbo v3, "WindowManager"

    #@e9
    new-instance v4, Ljava/lang/StringBuilder;

    #@eb
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@ee
    const-string/jumbo v5, "Attempted to add window with token that is not a window: "

    #@f1
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f4
    move-result-object v4

    #@f5
    .line 2393
    move-object/from16 v0, p4

    #@f7
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@f9
    .line 2392
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@fc
    move-result-object v4

    #@fd
    .line 2393
    const-string/jumbo v5, ".  Aborting."

    #@100
    .line 2392
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@103
    move-result-object v4

    #@104
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@107
    move-result-object v4

    #@108
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@10b
    .line 2394
    const/4 v3, -0x2

    #@10c
    monitor-exit v33

    #@10d
    return v3

    #@10e
    .line 2396
    :cond_5
    :try_start_5
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@110
    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    #@112
    const/16 v4, 0x3e8

    #@114
    if-lt v3, v4, :cond_6

    #@116
    .line 2397
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@118
    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    #@11a
    const/16 v4, 0x7cf

    #@11c
    if-gt v3, v4, :cond_6

    #@11e
    .line 2398
    const-string/jumbo v3, "WindowManager"

    #@121
    new-instance v4, Ljava/lang/StringBuilder;

    #@123
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@126
    const-string/jumbo v5, "Attempted to add window with token that is a sub-window: "

    #@129
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12c
    move-result-object v4

    #@12d
    .line 2399
    move-object/from16 v0, p4

    #@12f
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@131
    .line 2398
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@134
    move-result-object v4

    #@135
    .line 2399
    const-string/jumbo v5, ".  Aborting."

    #@138
    .line 2398
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13b
    move-result-object v4

    #@13c
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@13f
    move-result-object v4

    #@140
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@143
    .line 2400
    const/4 v3, -0x2

    #@144
    monitor-exit v33

    #@145
    return v3

    #@146
    .line 2404
    .end local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :cond_6
    const/16 v3, 0x7ee

    #@148
    move/from16 v0, v31

    #@14a
    if-ne v0, v3, :cond_7

    #@14c
    :try_start_6
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isPrivate()Z

    #@14f
    move-result v3

    #@150
    if-eqz v3, :cond_8

    #@152
    .line 2409
    :cond_7
    const/16 v19, 0x0

    #@154
    .line 2410
    .local v19, "addToken":Z
    move-object/from16 v0, p0

    #@156
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@158
    move-object/from16 v0, p4

    #@15a
    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@15c
    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@15f
    move-result-object v6

    #@160
    check-cast v6, Lcom/android/server/wm/WindowToken;

    #@162
    .line 2411
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    if-nez v6, :cond_10

    #@164
    .line 2412
    const/4 v3, 0x1

    #@165
    move/from16 v0, v31

    #@167
    if-lt v0, v3, :cond_9

    #@169
    const/16 v3, 0x63

    #@16b
    move/from16 v0, v31

    #@16d
    if-gt v0, v3, :cond_9

    #@16f
    .line 2413
    const-string/jumbo v3, "WindowManager"

    #@172
    new-instance v4, Ljava/lang/StringBuilder;

    #@174
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@177
    const-string/jumbo v5, "Attempted to add application window with unknown token "

    #@17a
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17d
    move-result-object v4

    #@17e
    .line 2414
    move-object/from16 v0, p4

    #@180
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@182
    .line 2413
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@185
    move-result-object v4

    #@186
    .line 2414
    const-string/jumbo v5, ".  Aborting."

    #@189
    .line 2413
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18c
    move-result-object v4

    #@18d
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@190
    move-result-object v4

    #@191
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@194
    .line 2415
    const/4 v3, -0x1

    #@195
    monitor-exit v33

    #@196
    return v3

    #@197
    .line 2405
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v19    # "addToken":Z
    :cond_8
    :try_start_7
    const-string/jumbo v3, "WindowManager"

    #@19a
    const-string/jumbo v4, "Attempted to add private presentation window to a non-private display.  Aborting."

    #@19d
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    #@1a0
    .line 2406
    const/4 v3, -0x8

    #@1a1
    monitor-exit v33

    #@1a2
    return v3

    #@1a3
    .line 2417
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v19    # "addToken":Z
    :cond_9
    const/16 v3, 0x7db

    #@1a5
    move/from16 v0, v31

    #@1a7
    if-ne v0, v3, :cond_a

    #@1a9
    .line 2418
    :try_start_8
    const-string/jumbo v3, "WindowManager"

    #@1ac
    new-instance v4, Ljava/lang/StringBuilder;

    #@1ae
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@1b1
    const-string/jumbo v5, "Attempted to add input method window with unknown token "

    #@1b4
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1b7
    move-result-object v4

    #@1b8
    .line 2419
    move-object/from16 v0, p4

    #@1ba
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@1bc
    .line 2418
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1bf
    move-result-object v4

    #@1c0
    .line 2419
    const-string/jumbo v5, ".  Aborting."

    #@1c3
    .line 2418
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c6
    move-result-object v4

    #@1c7
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1ca
    move-result-object v4

    #@1cb
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    #@1ce
    .line 2420
    const/4 v3, -0x1

    #@1cf
    monitor-exit v33

    #@1d0
    return v3

    #@1d1
    .line 2422
    :cond_a
    const/16 v3, 0x7ef

    #@1d3
    move/from16 v0, v31

    #@1d5
    if-ne v0, v3, :cond_b

    #@1d7
    .line 2423
    :try_start_9
    const-string/jumbo v3, "WindowManager"

    #@1da
    new-instance v4, Ljava/lang/StringBuilder;

    #@1dc
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@1df
    const-string/jumbo v5, "Attempted to add voice interaction window with unknown token "

    #@1e2
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1e5
    move-result-object v4

    #@1e6
    .line 2424
    move-object/from16 v0, p4

    #@1e8
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@1ea
    .line 2423
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1ed
    move-result-object v4

    #@1ee
    .line 2424
    const-string/jumbo v5, ".  Aborting."

    #@1f1
    .line 2423
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f4
    move-result-object v4

    #@1f5
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1f8
    move-result-object v4

    #@1f9
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    #@1fc
    .line 2425
    const/4 v3, -0x1

    #@1fd
    monitor-exit v33

    #@1fe
    return v3

    #@1ff
    .line 2427
    :cond_b
    const/16 v3, 0x7dd

    #@201
    move/from16 v0, v31

    #@203
    if-ne v0, v3, :cond_c

    #@205
    .line 2428
    :try_start_a
    const-string/jumbo v3, "WindowManager"

    #@208
    new-instance v4, Ljava/lang/StringBuilder;

    #@20a
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@20d
    const-string/jumbo v5, "Attempted to add wallpaper window with unknown token "

    #@210
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@213
    move-result-object v4

    #@214
    .line 2429
    move-object/from16 v0, p4

    #@216
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@218
    .line 2428
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@21b
    move-result-object v4

    #@21c
    .line 2429
    const-string/jumbo v5, ".  Aborting."

    #@21f
    .line 2428
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@222
    move-result-object v4

    #@223
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@226
    move-result-object v4

    #@227
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    #@22a
    .line 2430
    const/4 v3, -0x1

    #@22b
    monitor-exit v33

    #@22c
    return v3

    #@22d
    .line 2432
    :cond_c
    const/16 v3, 0x7e7

    #@22f
    move/from16 v0, v31

    #@231
    if-ne v0, v3, :cond_d

    #@233
    .line 2433
    :try_start_b
    const-string/jumbo v3, "WindowManager"

    #@236
    new-instance v4, Ljava/lang/StringBuilder;

    #@238
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@23b
    const-string/jumbo v5, "Attempted to add Dream window with unknown token "

    #@23e
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@241
    move-result-object v4

    #@242
    .line 2434
    move-object/from16 v0, p4

    #@244
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@246
    .line 2433
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@249
    move-result-object v4

    #@24a
    .line 2434
    const-string/jumbo v5, ".  Aborting."

    #@24d
    .line 2433
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@250
    move-result-object v4

    #@251
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@254
    move-result-object v4

    #@255
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    #@258
    .line 2435
    const/4 v3, -0x1

    #@259
    monitor-exit v33

    #@25a
    return v3

    #@25b
    .line 2437
    :cond_d
    const/16 v3, 0x7f0

    #@25d
    move/from16 v0, v31

    #@25f
    if-ne v0, v3, :cond_e

    #@261
    .line 2438
    :try_start_c
    const-string/jumbo v3, "WindowManager"

    #@264
    new-instance v4, Ljava/lang/StringBuilder;

    #@266
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@269
    const-string/jumbo v5, "Attempted to add Accessibility overlay window with unknown token "

    #@26c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@26f
    move-result-object v4

    #@270
    .line 2439
    move-object/from16 v0, p4

    #@272
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@274
    .line 2438
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@277
    move-result-object v4

    #@278
    .line 2439
    const-string/jumbo v5, ".  Aborting."

    #@27b
    .line 2438
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@27e
    move-result-object v4

    #@27f
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@282
    move-result-object v4

    #@283
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    #@286
    .line 2440
    const/4 v3, -0x1

    #@287
    monitor-exit v33

    #@288
    return v3

    #@289
    .line 2442
    :cond_e
    :try_start_d
    new-instance v6, Lcom/android/server/wm/WindowToken;

    #@28b
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p4

    #@28d
    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@28f
    const/4 v4, -0x1

    #@290
    const/4 v5, 0x0

    #@291
    move-object/from16 v0, p0

    #@293
    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@296
    .line 2443
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v19, 0x1

    #@298
    .line 2500
    :cond_f
    :goto_0
    new-instance v2, Lcom/android/server/wm/WindowState;

    #@29a
    .line 2501
    const/4 v3, 0x0

    #@29b
    aget v8, v20, v3

    #@29d
    move-object/from16 v3, p0

    #@29f
    move-object/from16 v4, p1

    #@2a1
    move-object/from16 v5, p2

    #@2a3
    move/from16 v9, p3

    #@2a5
    move-object/from16 v10, p4

    #@2a7
    move/from16 v11, p5

    #@2a9
    .line 2500
    invoke-direct/range {v2 .. v12}, Lcom/android/server/wm/WindowState;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/Session;Landroid/view/IWindow;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowState;IILandroid/view/WindowManager$LayoutParams;ILcom/android/server/wm/DisplayContent;)V

    #@2ac
    .line 2502
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDeathRecipient:Lcom/android/server/wm/WindowState$DeathRecipient;

    #@2ae
    if-nez v3, :cond_19

    #@2b0
    .line 2505
    const-string/jumbo v3, "WindowManager"

    #@2b3
    new-instance v4, Ljava/lang/StringBuilder;

    #@2b5
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@2b8
    const-string/jumbo v5, "Adding window client "

    #@2bb
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2be
    move-result-object v4

    #@2bf
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@2c2
    move-result-object v5

    #@2c3
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2c6
    move-result-object v4

    #@2c7
    .line 2506
    const-string/jumbo v5, " that is dead, aborting."

    #@2ca
    .line 2505
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2cd
    move-result-object v4

    #@2ce
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2d1
    move-result-object v4

    #@2d2
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_0

    #@2d5
    .line 2507
    const/4 v3, -0x4

    #@2d6
    monitor-exit v33

    #@2d7
    return v3

    #@2d8
    .line 2444
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_10
    const/4 v3, 0x1

    #@2d9
    move/from16 v0, v31

    #@2db
    if-lt v0, v3, :cond_13

    #@2dd
    const/16 v3, 0x63

    #@2df
    move/from16 v0, v31

    #@2e1
    if-gt v0, v3, :cond_13

    #@2e3
    .line 2445
    :try_start_e
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@2e5
    move-object/from16 v21, v0

    #@2e7
    .line 2446
    .local v21, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v21, :cond_11

    #@2e9
    .line 2447
    const-string/jumbo v3, "WindowManager"

    #@2ec
    new-instance v4, Ljava/lang/StringBuilder;

    #@2ee
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@2f1
    const-string/jumbo v5, "Attempted to add window with non-application token "

    #@2f4
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2f7
    move-result-object v4

    #@2f8
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2fb
    move-result-object v4

    #@2fc
    .line 2448
    const-string/jumbo v5, ".  Aborting."

    #@2ff
    .line 2447
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@302
    move-result-object v4

    #@303
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@306
    move-result-object v4

    #@307
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_0

    #@30a
    .line 2449
    const/4 v3, -0x3

    #@30b
    monitor-exit v33

    #@30c
    return v3

    #@30d
    .line 2450
    :cond_11
    :try_start_f
    move-object/from16 v0, v21

    #@30f
    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@311
    if-eqz v3, :cond_12

    #@313
    .line 2451
    const-string/jumbo v3, "WindowManager"

    #@316
    new-instance v4, Ljava/lang/StringBuilder;

    #@318
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@31b
    const-string/jumbo v5, "Attempted to add window with exiting application token "

    #@31e
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@321
    move-result-object v4

    #@322
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@325
    move-result-object v4

    #@326
    .line 2452
    const-string/jumbo v5, ".  Aborting."

    #@329
    .line 2451
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32c
    move-result-object v4

    #@32d
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@330
    move-result-object v4

    #@331
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_0

    #@334
    .line 2453
    const/4 v3, -0x4

    #@335
    monitor-exit v33

    #@336
    return v3

    #@337
    .line 2455
    :cond_12
    const/4 v3, 0x3

    #@338
    move/from16 v0, v31

    #@33a
    if-ne v0, v3, :cond_f

    #@33c
    :try_start_10
    move-object/from16 v0, v21

    #@33e
    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_0

    #@340
    if-eqz v3, :cond_f

    #@342
    .line 2459
    const/4 v3, -0x6

    #@343
    monitor-exit v33

    #@344
    return v3

    #@345
    .line 2461
    .end local v21    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_13
    const/16 v3, 0x7db

    #@347
    move/from16 v0, v31

    #@349
    if-ne v0, v3, :cond_14

    #@34b
    .line 2462
    :try_start_11
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@34d
    const/16 v4, 0x7db

    #@34f
    if-eq v3, v4, :cond_f

    #@351
    .line 2463
    const-string/jumbo v3, "WindowManager"

    #@354
    new-instance v4, Ljava/lang/StringBuilder;

    #@356
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@359
    const-string/jumbo v5, "Attempted to add input method window with bad token "

    #@35c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@35f
    move-result-object v4

    #@360
    .line 2464
    move-object/from16 v0, p4

    #@362
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@364
    .line 2463
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@367
    move-result-object v4

    #@368
    .line 2464
    const-string/jumbo v5, ".  Aborting."

    #@36b
    .line 2463
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@36e
    move-result-object v4

    #@36f
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@372
    move-result-object v4

    #@373
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_0

    #@376
    .line 2465
    const/4 v3, -0x1

    #@377
    monitor-exit v33

    #@378
    return v3

    #@379
    .line 2467
    :cond_14
    const/16 v3, 0x7ef

    #@37b
    move/from16 v0, v31

    #@37d
    if-ne v0, v3, :cond_15

    #@37f
    .line 2468
    :try_start_12
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@381
    const/16 v4, 0x7ef

    #@383
    if-eq v3, v4, :cond_f

    #@385
    .line 2469
    const-string/jumbo v3, "WindowManager"

    #@388
    new-instance v4, Ljava/lang/StringBuilder;

    #@38a
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@38d
    const-string/jumbo v5, "Attempted to add voice interaction window with bad token "

    #@390
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@393
    move-result-object v4

    #@394
    .line 2470
    move-object/from16 v0, p4

    #@396
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@398
    .line 2469
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@39b
    move-result-object v4

    #@39c
    .line 2470
    const-string/jumbo v5, ".  Aborting."

    #@39f
    .line 2469
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3a2
    move-result-object v4

    #@3a3
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3a6
    move-result-object v4

    #@3a7
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_0

    #@3aa
    .line 2471
    const/4 v3, -0x1

    #@3ab
    monitor-exit v33

    #@3ac
    return v3

    #@3ad
    .line 2473
    :cond_15
    const/16 v3, 0x7dd

    #@3af
    move/from16 v0, v31

    #@3b1
    if-ne v0, v3, :cond_16

    #@3b3
    .line 2474
    :try_start_13
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@3b5
    const/16 v4, 0x7dd

    #@3b7
    if-eq v3, v4, :cond_f

    #@3b9
    .line 2475
    const-string/jumbo v3, "WindowManager"

    #@3bc
    new-instance v4, Ljava/lang/StringBuilder;

    #@3be
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@3c1
    const-string/jumbo v5, "Attempted to add wallpaper window with bad token "

    #@3c4
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3c7
    move-result-object v4

    #@3c8
    .line 2476
    move-object/from16 v0, p4

    #@3ca
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@3cc
    .line 2475
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3cf
    move-result-object v4

    #@3d0
    .line 2476
    const-string/jumbo v5, ".  Aborting."

    #@3d3
    .line 2475
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d6
    move-result-object v4

    #@3d7
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3da
    move-result-object v4

    #@3db
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_0

    #@3de
    .line 2477
    const/4 v3, -0x1

    #@3df
    monitor-exit v33

    #@3e0
    return v3

    #@3e1
    .line 2479
    :cond_16
    const/16 v3, 0x7e7

    #@3e3
    move/from16 v0, v31

    #@3e5
    if-ne v0, v3, :cond_17

    #@3e7
    .line 2480
    :try_start_14
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@3e9
    const/16 v4, 0x7e7

    #@3eb
    if-eq v3, v4, :cond_f

    #@3ed
    .line 2481
    const-string/jumbo v3, "WindowManager"

    #@3f0
    new-instance v4, Ljava/lang/StringBuilder;

    #@3f2
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@3f5
    const-string/jumbo v5, "Attempted to add Dream window with bad token "

    #@3f8
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3fb
    move-result-object v4

    #@3fc
    .line 2482
    move-object/from16 v0, p4

    #@3fe
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@400
    .line 2481
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@403
    move-result-object v4

    #@404
    .line 2482
    const-string/jumbo v5, ".  Aborting."

    #@407
    .line 2481
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@40a
    move-result-object v4

    #@40b
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@40e
    move-result-object v4

    #@40f
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_0

    #@412
    .line 2483
    const/4 v3, -0x1

    #@413
    monitor-exit v33

    #@414
    return v3

    #@415
    .line 2485
    :cond_17
    const/16 v3, 0x7f0

    #@417
    move/from16 v0, v31

    #@419
    if-ne v0, v3, :cond_18

    #@41b
    .line 2486
    :try_start_15
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@41d
    const/16 v4, 0x7f0

    #@41f
    if-eq v3, v4, :cond_f

    #@421
    .line 2487
    const-string/jumbo v3, "WindowManager"

    #@424
    new-instance v4, Ljava/lang/StringBuilder;

    #@426
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@429
    const-string/jumbo v5, "Attempted to add Accessibility overlay window with bad token "

    #@42c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42f
    move-result-object v4

    #@430
    .line 2488
    move-object/from16 v0, p4

    #@432
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@434
    .line 2487
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@437
    move-result-object v4

    #@438
    .line 2488
    const-string/jumbo v5, ".  Aborting."

    #@43b
    .line 2487
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@43e
    move-result-object v4

    #@43f
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@442
    move-result-object v4

    #@443
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_0

    #@446
    .line 2489
    const/4 v3, -0x1

    #@447
    monitor-exit v33

    #@448
    return v3

    #@449
    .line 2491
    :cond_18
    :try_start_16
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@44b
    if-eqz v3, :cond_f

    #@44d
    .line 2492
    const-string/jumbo v3, "WindowManager"

    #@450
    new-instance v4, Ljava/lang/StringBuilder;

    #@452
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@455
    const-string/jumbo v5, "Non-null appWindowToken for system window of type="

    #@458
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@45b
    move-result-object v4

    #@45c
    move/from16 v0, v31

    #@45e
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@461
    move-result-object v4

    #@462
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@465
    move-result-object v4

    #@466
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@469
    .line 2495
    const/4 v3, 0x0

    #@46a
    move-object/from16 v0, p4

    #@46c
    iput-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@46e
    .line 2496
    new-instance v6, Lcom/android/server/wm/WindowToken;

    #@470
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/4 v3, 0x0

    #@471
    const/4 v4, -0x1

    #@472
    const/4 v5, 0x0

    #@473
    move-object/from16 v0, p0

    #@475
    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@478
    .line 2497
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v19, 0x1

    #@47a
    goto/16 :goto_0

    #@47c
    .line 2510
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_19
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@47f
    move-result-object v3

    #@480
    if-nez v3, :cond_1a

    #@482
    .line 2511
    const-string/jumbo v3, "WindowManager"

    #@485
    const-string/jumbo v4, "Adding window to Display that has been removed."

    #@488
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_0

    #@48b
    .line 2512
    const/16 v3, -0x9

    #@48d
    monitor-exit v33

    #@48e
    return v3

    #@48f
    .line 2515
    :cond_1a
    :try_start_17
    move-object/from16 v0, p0

    #@491
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@493
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@495
    invoke-interface {v3, v4}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    #@498
    .line 2516
    move-object/from16 v0, p0

    #@49a
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@49c
    move-object/from16 v0, p4

    #@49e
    invoke-interface {v3, v0}, Landroid/view/WindowManagerPolicy;->checkShowToOwnerOnly(Landroid/view/WindowManager$LayoutParams;)Z

    #@4a1
    move-result v3

    #@4a2
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setShowToOwnerOnlyLocked(Z)V

    #@4a5
    .line 2518
    move-object/from16 v0, p0

    #@4a7
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@4a9
    move-object/from16 v0, p4

    #@4ab
    invoke-interface {v3, v2, v0}, Landroid/view/WindowManagerPolicy;->prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_0

    #@4ae
    move-result v29

    #@4af
    .line 2519
    if-eqz v29, :cond_1b

    #@4b1
    monitor-exit v33

    #@4b2
    .line 2520
    return v29

    #@4b3
    .line 2523
    :cond_1b
    if-eqz p10, :cond_1c

    #@4b5
    :try_start_18
    move-object/from16 v0, p4

    #@4b7
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    #@4b9
    and-int/lit8 v3, v3, 0x2

    #@4bb
    if-nez v3, :cond_1c

    #@4bd
    .line 2525
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->makeInputChannelName()Ljava/lang/String;

    #@4c0
    move-result-object v25

    #@4c1
    .line 2526
    .local v25, "name":Ljava/lang/String;
    invoke-static/range {v25 .. v25}, Landroid/view/InputChannel;->openInputChannelPair(Ljava/lang/String;)[Landroid/view/InputChannel;

    #@4c4
    move-result-object v24

    #@4c5
    .line 2527
    .local v24, "inputChannels":[Landroid/view/InputChannel;
    const/4 v3, 0x0

    #@4c6
    aget-object v3, v24, v3

    #@4c8
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setInputChannel(Landroid/view/InputChannel;)V

    #@4cb
    .line 2528
    const/4 v3, 0x1

    #@4cc
    aget-object v3, v24, v3

    #@4ce
    move-object/from16 v0, p10

    #@4d0
    invoke-virtual {v3, v0}, Landroid/view/InputChannel;->transferTo(Landroid/view/InputChannel;)V

    #@4d3
    .line 2530
    move-object/from16 v0, p0

    #@4d5
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@4d7
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    #@4d9
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mInputWindowHandle:Lcom/android/server/input/InputWindowHandle;

    #@4db
    invoke-virtual {v3, v4, v5}, Lcom/android/server/input/InputManagerService;->registerInputChannel(Landroid/view/InputChannel;Lcom/android/server/input/InputWindowHandle;)V

    #@4de
    .line 2535
    .end local v24    # "inputChannels":[Landroid/view/InputChannel;
    .end local v25    # "name":Ljava/lang/String;
    :cond_1c
    const/16 v29, 0x0

    #@4e0
    .line 2537
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4e3
    move-result-wide v26

    #@4e4
    .line 2539
    .local v26, "origId":J
    if-eqz v19, :cond_1d

    #@4e6
    .line 2540
    move-object/from16 v0, p0

    #@4e8
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@4ea
    move-object/from16 v0, p4

    #@4ec
    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@4ee
    invoke-virtual {v3, v4, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@4f1
    .line 2542
    :cond_1d
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->attach()V

    #@4f4
    .line 2543
    move-object/from16 v0, p0

    #@4f6
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4f8
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@4fb
    move-result-object v4

    #@4fc
    invoke-virtual {v3, v4, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@4ff
    .line 2544
    iget v3, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@501
    const/4 v4, -0x1

    #@502
    if-eq v3, v4, :cond_1e

    #@504
    .line 2545
    move-object/from16 v0, p0

    #@506
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@508
    iget v4, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@50a
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@50d
    move-result v5

    #@50e
    .line 2546
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@511
    move-result-object v8

    #@512
    .line 2545
    invoke-virtual {v3, v4, v5, v8}, Landroid/app/AppOpsManager;->startOpNoThrow(IILjava/lang/String;)I

    #@515
    move-result v30

    #@516
    .line 2547
    .local v30, "startOpResult":I
    if-eqz v30, :cond_1e

    #@518
    .line 2548
    const/4 v3, 0x3

    #@519
    move/from16 v0, v30

    #@51b
    if-eq v0, v3, :cond_1e

    #@51d
    .line 2549
    const/4 v3, 0x0

    #@51e
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V

    #@521
    .line 2553
    .end local v30    # "startOpResult":I
    :cond_1e
    const/4 v3, 0x3

    #@522
    move/from16 v0, v31

    #@524
    if-ne v0, v3, :cond_1f

    #@526
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@528
    if-eqz v3, :cond_1f

    #@52a
    .line 2554
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@52c
    iput-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@52e
    .line 2559
    :cond_1f
    const/16 v23, 0x1

    #@530
    .line 2561
    .local v23, "imMayMove":Z
    const/16 v3, 0x7db

    #@532
    move/from16 v0, v31

    #@534
    if-ne v0, v3, :cond_27

    #@536
    .line 2562
    const/4 v3, 0x1

    #@537
    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@539
    .line 2563
    move-object/from16 v0, p0

    #@53b
    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@53d
    .line 2564
    move-object/from16 v0, p0

    #@53f
    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    #@542
    .line 2565
    const/16 v23, 0x0

    #@544
    .line 2589
    :cond_20
    :goto_1
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@546
    move-object/from16 v32, v0

    #@548
    .line 2590
    .local v32, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v3, 0x1

    #@549
    move-object/from16 v0, v32

    #@54b
    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@54d
    .line 2591
    const/4 v3, 0x1

    #@54e
    move-object/from16 v0, v32

    #@550
    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@552
    .line 2593
    iget-boolean v3, v12, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    #@554
    if-eqz v3, :cond_2b

    #@556
    .line 2594
    move-object/from16 v0, p0

    #@558
    iget-object v13, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@55a
    iget-object v14, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@55c
    move-object/from16 v0, p0

    #@55e
    iget v15, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@560
    move-object/from16 v16, p7

    #@562
    move-object/from16 v17, p8

    #@564
    move-object/from16 v18, p9

    #@566
    invoke-interface/range {v13 .. v18}, Landroid/view/WindowManagerPolicy;->getInsetHintLw(Landroid/view/WindowManager$LayoutParams;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    #@569
    .line 2601
    :goto_2
    move-object/from16 v0, p0

    #@56b
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@56d
    if-eqz v3, :cond_21

    #@56f
    .line 2602
    const/16 v29, 0x1

    #@571
    .line 2604
    :cond_21
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@573
    if-eqz v3, :cond_2c

    #@575
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@577
    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@579
    if-eqz v3, :cond_2c

    #@57b
    .line 2608
    :goto_3
    move-object/from16 v0, p0

    #@57d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@57f
    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@582
    .line 2610
    const/16 v22, 0x0

    #@584
    .line 2611
    .local v22, "focusChanged":Z
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    #@587
    move-result v3

    #@588
    if-eqz v3, :cond_22

    #@58a
    .line 2612
    const/4 v3, 0x1

    #@58b
    .line 2613
    const/4 v4, 0x0

    #@58c
    .line 2612
    move-object/from16 v0, p0

    #@58e
    invoke-direct {v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@591
    move-result v22

    #@592
    .line 2614
    .local v22, "focusChanged":Z
    if-eqz v22, :cond_22

    #@594
    .line 2615
    const/16 v23, 0x0

    #@596
    .line 2619
    .end local v22    # "focusChanged":Z
    :cond_22
    if-eqz v23, :cond_23

    #@598
    .line 2620
    const/4 v3, 0x0

    #@599
    move-object/from16 v0, p0

    #@59b
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@59e
    .line 2623
    :cond_23
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@5a1
    move-result-object v3

    #@5a2
    move-object/from16 v0, p0

    #@5a4
    invoke-direct {v0, v3}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@5a7
    .line 2627
    if-eqz v22, :cond_24

    #@5a9
    .line 2628
    move-object/from16 v0, p0

    #@5ab
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@5ad
    move-object/from16 v0, p0

    #@5af
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@5b1
    const/4 v5, 0x0

    #@5b2
    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    #@5b5
    .line 2630
    :cond_24
    move-object/from16 v0, p0

    #@5b7
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@5b9
    const/4 v4, 0x0

    #@5ba
    invoke-virtual {v3, v4}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@5bd
    .line 2635
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    #@5c0
    move-result v3

    #@5c1
    if-eqz v3, :cond_25

    #@5c3
    const/4 v3, 0x0

    #@5c4
    move-object/from16 v0, p0

    #@5c6
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_0

    #@5c9
    move-result v3

    #@5ca
    if-eqz v3, :cond_25

    #@5cc
    .line 2636
    const/16 v28, 0x1

    #@5ce
    :cond_25
    monitor-exit v33

    #@5cf
    .line 2640
    if-eqz v28, :cond_26

    #@5d1
    .line 2641
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@5d4
    .line 2644
    :cond_26
    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@5d7
    .line 2646
    return v29

    #@5d8
    .line 2566
    .end local v32    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_27
    const/16 v3, 0x7dc

    #@5da
    move/from16 v0, v31

    #@5dc
    if-ne v0, v3, :cond_28

    #@5de
    .line 2567
    :try_start_19
    move-object/from16 v0, p0

    #@5e0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@5e2
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@5e5
    .line 2568
    const/4 v3, 0x1

    #@5e6
    move-object/from16 v0, p0

    #@5e8
    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@5eb
    .line 2569
    const/4 v3, 0x1

    #@5ec
    move-object/from16 v0, p0

    #@5ee
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@5f1
    move-result v3

    #@5f2
    move-object/from16 v0, p0

    #@5f4
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@5f7
    .line 2570
    const/16 v23, 0x0

    #@5f9
    goto/16 :goto_1

    #@5fb
    .line 2572
    :cond_28
    const/4 v3, 0x1

    #@5fc
    move-object/from16 v0, p0

    #@5fe
    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@601
    .line 2573
    const/16 v3, 0x7dd

    #@603
    move/from16 v0, v31

    #@605
    if-ne v0, v3, :cond_29

    #@607
    .line 2574
    const-wide/16 v4, 0x0

    #@609
    move-object/from16 v0, p0

    #@60b
    iput-wide v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperTimeoutTime:J

    #@60d
    .line 2575
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@60f
    or-int/lit8 v3, v3, 0x4

    #@611
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@613
    goto/16 :goto_1

    #@615
    .line 2576
    :cond_29
    move-object/from16 v0, p4

    #@617
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@619
    const/high16 v4, 0x100000

    #@61b
    and-int/2addr v3, v4

    #@61c
    if-eqz v3, :cond_2a

    #@61e
    .line 2577
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@620
    or-int/lit8 v3, v3, 0x4

    #@622
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@624
    goto/16 :goto_1

    #@626
    .line 2578
    :cond_2a
    move-object/from16 v0, p0

    #@628
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@62a
    if-eqz v3, :cond_20

    #@62c
    .line 2579
    move-object/from16 v0, p0

    #@62e
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@630
    iget v3, v3, Lcom/android/server/wm/WindowState;->mLayer:I

    #@632
    iget v4, v2, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@634
    if-lt v3, v4, :cond_20

    #@636
    .line 2585
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@638
    or-int/lit8 v3, v3, 0x4

    #@63a
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@63c
    goto/16 :goto_1

    #@63e
    .line 2597
    .restart local v32    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_2b
    invoke-virtual/range {p7 .. p7}, Landroid/graphics/Rect;->setEmpty()V

    #@641
    .line 2598
    invoke-virtual/range {p8 .. p8}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_0

    #@644
    goto/16 :goto_2

    #@646
    .line 2605
    :cond_2c
    or-int/lit8 v29, v29, 0x2

    #@648
    goto/16 :goto_3
.end method

.method public addWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@0
    .prologue
    .line 7089
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 7090
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 7088
    return-void

    #@a
    .line 7089
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public addWindowToken(Landroid/os/IBinder;I)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I

    #@0
    .prologue
    .line 3616
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3617
    const-string/jumbo v2, "addWindowToken()"

    #@6
    .line 3616
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3618
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3621
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 3622
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 3623
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 3624
    const-string/jumbo v1, "WindowManager"

    #@25
    new-instance v3, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    const-string/jumbo v4, "Attempted to add existing input method token: "

    #@2d
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@34
    move-result-object v3

    #@35
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@38
    move-result-object v3

    #@39
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3c
    monitor-exit v2

    #@3d
    .line 3625
    return-void

    #@3e
    .line 3627
    :cond_1
    :try_start_1
    new-instance v0, Lcom/android/server/wm/WindowToken;

    #@40
    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    const/4 v1, 0x1

    #@41
    invoke-direct {v0, p0, p1, p2, v1}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@44
    .line 3628
    .restart local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@46
    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@49
    .line 3629
    const/16 v1, 0x7dd

    #@4b
    if-ne p2, v1, :cond_2

    #@4d
    .line 3630
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@4f
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@52
    :cond_2
    monitor-exit v2

    #@53
    .line 3615
    return-void

    #@54
    .line 3621
    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@55
    monitor-exit v2

    #@56
    throw v1
.end method

.method adjustAnimationBackground(Lcom/android/server/wm/WindowStateAnimator;)I
    .locals 4
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    #@0
    .prologue
    .line 10519
    iget-object v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@2
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@5
    move-result-object v2

    #@6
    .line 10520
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@9
    move-result v3

    #@a
    add-int/lit8 v0, v3, -0x1

    #@c
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    #@e
    .line 10521
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v1

    #@12
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@14
    .line 10522
    .local v1, "testWin":Lcom/android/server/wm/WindowState;
    iget-boolean v3, v1, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@16
    if-eqz v3, :cond_0

    #@18
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@1b
    move-result v3

    #@1c
    if-eqz v3, :cond_0

    #@1e
    .line 10523
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@20
    iget v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@22
    return v3

    #@23
    .line 10520
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@25
    goto :goto_0

    #@26
    .line 10526
    .end local v1    # "testWin":Lcom/android/server/wm/WindowState;
    :cond_1
    iget v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@28
    return v3
.end method

.method adjustWallpaperWindowsLocked()Z
    .locals 37

    #@0
    .prologue
    .line 1830
    move-object/from16 v0, p0

    #@2
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@4
    move-object/from16 v34, v0

    #@6
    const/16 v35, 0x0

    #@8
    move/from16 v0, v35

    #@a
    move-object/from16 v1, v34

    #@c
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    #@e
    .line 1831
    const/16 v21, 0x0

    #@10
    .line 1834
    .local v21, "targetChanged":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@13
    move-result-object v34

    #@14
    invoke-virtual/range {v34 .. v34}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@17
    move-result-object v7

    #@18
    .line 1835
    .local v7, "displayInfo":Landroid/view/DisplayInfo;
    iget v8, v7, Landroid/view/DisplayInfo;->logicalWidth:I

    #@1a
    .line 1836
    .local v8, "dw":I
    iget v6, v7, Landroid/view/DisplayInfo;->logicalHeight:I

    #@1c
    .line 1840
    .local v6, "dh":I
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@1f
    move-result-object v33

    #@20
    .line 1841
    .local v33, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v33 .. v33}, Lcom/android/server/wm/WindowList;->size()I

    #@23
    move-result v3

    #@24
    .line 1842
    .local v3, "N":I
    const/16 v28, 0x0

    #@26
    .line 1843
    .local v28, "w":Lcom/android/server/wm/WindowState;
    const/4 v11, 0x0

    #@27
    .line 1844
    .local v11, "foundW":Lcom/android/server/wm/WindowState;
    const/4 v10, 0x0

    #@28
    .line 1845
    .local v10, "foundI":I
    const/16 v25, 0x0

    #@2a
    .line 1846
    .local v25, "topCurW":Lcom/android/server/wm/WindowState;
    const/16 v24, 0x0

    #@2c
    .line 1847
    .local v24, "topCurI":I
    const/16 v32, -0x1

    #@2e
    .line 1848
    .local v32, "windowDetachedI":I
    move v13, v3

    #@2f
    .line 1849
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    .end local v25    # "topCurW":Lcom/android/server/wm/WindowState;
    .end local v28    # "w":Lcom/android/server/wm/WindowState;
    .local v13, "i":I
    :cond_0
    :goto_0
    if-lez v13, :cond_4

    #@31
    .line 1850
    add-int/lit8 v13, v13, -0x1

    #@33
    .line 1851
    move-object/from16 v0, v33

    #@35
    invoke-virtual {v0, v13}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@38
    move-result-object v28

    #@39
    check-cast v28, Lcom/android/server/wm/WindowState;

    #@3b
    .line 1852
    .local v28, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v28

    #@3d
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@3f
    move-object/from16 v34, v0

    #@41
    move-object/from16 v0, v34

    #@43
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@45
    move/from16 v34, v0

    #@47
    const/16 v35, 0x7dd

    #@49
    move/from16 v0, v34

    #@4b
    move/from16 v1, v35

    #@4d
    if-ne v0, v1, :cond_1

    #@4f
    .line 1853
    if-nez v25, :cond_0

    #@51
    .line 1854
    move-object/from16 v25, v28

    #@53
    .line 1855
    .local v25, "topCurW":Lcom/android/server/wm/WindowState;
    move/from16 v24, v13

    #@55
    goto :goto_0

    #@56
    .line 1859
    .end local v25    # "topCurW":Lcom/android/server/wm/WindowState;
    :cond_1
    const/16 v25, 0x0

    #@58
    .line 1860
    .local v25, "topCurW":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@5a
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@5c
    move-object/from16 v34, v0

    #@5e
    move-object/from16 v0, v34

    #@60
    iget-object v0, v0, Lcom/android/server/wm/WindowAnimator;->mWindowDetachedWallpaper:Lcom/android/server/wm/WindowState;

    #@62
    move-object/from16 v34, v0

    #@64
    move-object/from16 v0, v28

    #@66
    move-object/from16 v1, v34

    #@68
    if-eq v0, v1, :cond_2

    #@6a
    move-object/from16 v0, v28

    #@6c
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@6e
    move-object/from16 v34, v0

    #@70
    if-eqz v34, :cond_2

    #@72
    .line 1863
    move-object/from16 v0, v28

    #@74
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@76
    move-object/from16 v34, v0

    #@78
    move-object/from16 v0, v34

    #@7a
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@7c
    move/from16 v34, v0

    #@7e
    if-eqz v34, :cond_2

    #@80
    move-object/from16 v0, v28

    #@82
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@84
    move-object/from16 v34, v0

    #@86
    move-object/from16 v0, v34

    #@88
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@8a
    move-object/from16 v34, v0

    #@8c
    move-object/from16 v0, v34

    #@8e
    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@90
    move-object/from16 v34, v0

    #@92
    if-eqz v34, :cond_0

    #@94
    .line 1874
    :cond_2
    move-object/from16 v0, v28

    #@96
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@98
    move-object/from16 v34, v0

    #@9a
    move-object/from16 v0, v34

    #@9c
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@9e
    move/from16 v34, v0

    #@a0
    const/high16 v35, 0x100000

    #@a2
    and-int v34, v34, v35

    #@a4
    if-nez v34, :cond_10

    #@a6
    .line 1875
    move-object/from16 v0, v28

    #@a8
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@aa
    move-object/from16 v34, v0

    #@ac
    if-eqz v34, :cond_11

    #@ae
    .line 1876
    move-object/from16 v0, v28

    #@b0
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@b2
    move-object/from16 v34, v0

    #@b4
    move-object/from16 v0, v34

    #@b6
    iget-boolean v12, v0, Lcom/android/server/wm/WindowStateAnimator;->mKeyguardGoingAwayAnimation:Z

    #@b8
    .line 1877
    :goto_1
    if-eqz v12, :cond_12

    #@ba
    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    #@bd
    move-result v34

    #@be
    if-eqz v34, :cond_12

    #@c0
    .line 1878
    move-object/from16 v0, p0

    #@c2
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@c4
    move-object/from16 v34, v0

    #@c6
    move-object/from16 v0, v34

    #@c8
    move-object/from16 v1, v28

    #@ca
    if-eq v0, v1, :cond_3

    #@cc
    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/WindowState;->isDrawFinishedLw()Z

    #@cf
    move-result v34

    #@d0
    .line 1877
    if-eqz v34, :cond_12

    #@d2
    .line 1881
    :cond_3
    move-object/from16 v11, v28

    #@d4
    .line 1882
    .local v11, "foundW":Lcom/android/server/wm/WindowState;
    move v10, v13

    #@d5
    .line 1883
    move-object/from16 v0, p0

    #@d7
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@d9
    move-object/from16 v34, v0

    #@db
    move-object/from16 v0, v28

    #@dd
    move-object/from16 v1, v34

    #@df
    if-ne v0, v1, :cond_4

    #@e1
    move-object/from16 v0, v28

    #@e3
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@e5
    move-object/from16 v34, v0

    #@e7
    invoke-virtual/range {v34 .. v34}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    #@ea
    move-result v34

    #@eb
    if-nez v34, :cond_0

    #@ed
    .line 1897
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    .end local v25    # "topCurW":Lcom/android/server/wm/WindowState;
    .end local v28    # "w":Lcom/android/server/wm/WindowState;
    :cond_4
    if-nez v11, :cond_5

    #@ef
    if-ltz v32, :cond_5

    #@f1
    .line 1900
    move-object/from16 v11, v28

    #@f3
    .line 1901
    .restart local v11    # "foundW":Lcom/android/server/wm/WindowState;
    move/from16 v10, v32

    #@f5
    .line 1904
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    :cond_5
    move-object/from16 v0, p0

    #@f7
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@f9
    move-object/from16 v34, v0

    #@fb
    move-object/from16 v0, v34

    #@fd
    if-eq v0, v11, :cond_15

    #@ff
    .line 1905
    move-object/from16 v0, p0

    #@101
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@103
    move-object/from16 v34, v0

    #@105
    if-eqz v34, :cond_6

    #@107
    move-object/from16 v0, p0

    #@109
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@10b
    move-object/from16 v34, v0

    #@10d
    move-object/from16 v0, v34

    #@10f
    if-eq v0, v11, :cond_15

    #@111
    .line 1911
    :cond_6
    const/16 v34, 0x0

    #@113
    move-object/from16 v0, v34

    #@115
    move-object/from16 v1, p0

    #@117
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@119
    .line 1912
    const/16 v34, 0x0

    #@11b
    move-object/from16 v0, v34

    #@11d
    move-object/from16 v1, p0

    #@11f
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@121
    .line 1914
    move-object/from16 v0, p0

    #@123
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@125
    move-object/from16 v19, v0

    #@127
    .line 1915
    .local v19, "oldW":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@129
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@12b
    .line 1916
    const/16 v21, 0x1

    #@12d
    .line 1920
    if-eqz v11, :cond_7

    #@12f
    if-eqz v19, :cond_7

    #@131
    .line 1921
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    #@134
    move-result v16

    #@135
    .line 1922
    .local v16, "oldAnim":Z
    invoke-virtual {v11}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    #@138
    move-result v9

    #@139
    .line 1927
    .local v9, "foundAnim":Z
    if-eqz v9, :cond_7

    #@13b
    if-eqz v16, :cond_7

    #@13d
    .line 1928
    move-object/from16 v0, v33

    #@13f
    move-object/from16 v1, v19

    #@141
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@144
    move-result v17

    #@145
    .line 1932
    .local v17, "oldI":I
    if-ltz v17, :cond_7

    #@147
    .line 1940
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@149
    move-object/from16 v34, v0

    #@14b
    if-eqz v34, :cond_13

    #@14d
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@14f
    move-object/from16 v34, v0

    #@151
    move-object/from16 v0, v34

    #@153
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@155
    move/from16 v34, v0

    #@157
    if-eqz v34, :cond_13

    #@159
    .line 1944
    move-object/from16 v0, v19

    #@15b
    move-object/from16 v1, p0

    #@15d
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@15f
    .line 1945
    move-object/from16 v11, v19

    #@161
    .line 1946
    .restart local v11    # "foundW":Lcom/android/server/wm/WindowState;
    move/from16 v10, v17

    #@163
    .line 1985
    .end local v9    # "foundAnim":Z
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    .end local v16    # "oldAnim":Z
    .end local v17    # "oldI":I
    .end local v19    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_7
    :goto_2
    if-eqz v11, :cond_17

    #@165
    const/16 v27, 0x1

    #@167
    .line 1986
    .local v27, "visible":Z
    :goto_3
    if-eqz v27, :cond_9

    #@169
    .line 1989
    move-object/from16 v0, p0

    #@16b
    invoke-direct {v0, v11}, Lcom/android/server/wm/WindowManagerService;->isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z

    #@16e
    move-result v27

    #@16f
    .line 1996
    .local v27, "visible":Z
    move-object/from16 v0, p0

    #@171
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@173
    move-object/from16 v34, v0

    #@175
    if-nez v34, :cond_18

    #@177
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@179
    move-object/from16 v34, v0

    #@17b
    if-eqz v34, :cond_18

    #@17d
    .line 1997
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@17f
    move-object/from16 v34, v0

    #@181
    move-object/from16 v0, v34

    #@183
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@185
    move-object/from16 v34, v0

    #@187
    move-object/from16 v0, v34

    #@189
    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    #@18b
    move/from16 v34, v0

    #@18d
    .line 1995
    :goto_4
    move/from16 v0, v34

    #@18f
    move-object/from16 v1, p0

    #@191
    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    #@193
    .line 1999
    move-object/from16 v0, p0

    #@195
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@197
    move-object/from16 v34, v0

    #@199
    invoke-interface/range {v34 .. v34}, Landroid/view/WindowManagerPolicy;->getMaxWallpaperLayer()I

    #@19c
    move-result v34

    #@19d
    move/from16 v0, v34

    #@19f
    mul-int/lit16 v0, v0, 0x2710

    #@1a1
    move/from16 v34, v0

    #@1a3
    move/from16 v0, v34

    #@1a5
    add-int/lit16 v15, v0, 0x3e8

    #@1a7
    .line 2007
    .local v15, "maxLayer":I
    :goto_5
    if-lez v10, :cond_9

    #@1a9
    .line 2008
    add-int/lit8 v34, v10, -0x1

    #@1ab
    invoke-virtual/range {v33 .. v34}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1ae
    move-result-object v31

    #@1af
    check-cast v31, Lcom/android/server/wm/WindowState;

    #@1b1
    .line 2009
    .local v31, "wb":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v31

    #@1b3
    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@1b5
    move/from16 v34, v0

    #@1b7
    move/from16 v0, v34

    #@1b9
    if-ge v0, v15, :cond_1a

    #@1bb
    .line 2010
    move-object/from16 v0, v31

    #@1bd
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@1bf
    move-object/from16 v34, v0

    #@1c1
    move-object/from16 v0, v34

    #@1c3
    if-eq v0, v11, :cond_1a

    #@1c5
    .line 2011
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@1c7
    move-object/from16 v34, v0

    #@1c9
    if-eqz v34, :cond_8

    #@1cb
    .line 2012
    move-object/from16 v0, v31

    #@1cd
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@1cf
    move-object/from16 v34, v0

    #@1d1
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@1d3
    move-object/from16 v35, v0

    #@1d5
    move-object/from16 v0, v34

    #@1d7
    move-object/from16 v1, v35

    #@1d9
    if-eq v0, v1, :cond_1a

    #@1db
    .line 2013
    :cond_8
    move-object/from16 v0, v31

    #@1dd
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1df
    move-object/from16 v34, v0

    #@1e1
    move-object/from16 v0, v34

    #@1e3
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@1e5
    move/from16 v34, v0

    #@1e7
    const/16 v35, 0x3

    #@1e9
    move/from16 v0, v34

    #@1eb
    move/from16 v1, v35

    #@1ed
    if-ne v0, v1, :cond_9

    #@1ef
    .line 2014
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@1f1
    move-object/from16 v34, v0

    #@1f3
    if-nez v34, :cond_19

    #@1f5
    .line 2026
    .end local v15    # "maxLayer":I
    .end local v27    # "visible":Z
    .end local v31    # "wb":Lcom/android/server/wm/WindowState;
    :cond_9
    if-nez v11, :cond_1b

    #@1f7
    if-eqz v25, :cond_1b

    #@1f9
    .line 2029
    move-object/from16 v11, v25

    #@1fb
    .line 2030
    .restart local v11    # "foundW":Lcom/android/server/wm/WindowState;
    add-int/lit8 v10, v24, 0x1

    #@1fd
    .line 2037
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    :goto_6
    if-eqz v27, :cond_d

    #@1ff
    .line 2038
    move-object/from16 v0, p0

    #@201
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@203
    move-object/from16 v34, v0

    #@205
    move-object/from16 v0, v34

    #@207
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@209
    move/from16 v34, v0

    #@20b
    const/16 v35, 0x0

    #@20d
    cmpl-float v34, v34, v35

    #@20f
    if-ltz v34, :cond_a

    #@211
    .line 2039
    move-object/from16 v0, p0

    #@213
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@215
    move-object/from16 v34, v0

    #@217
    move-object/from16 v0, v34

    #@219
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@21b
    move/from16 v34, v0

    #@21d
    move/from16 v0, v34

    #@21f
    move-object/from16 v1, p0

    #@221
    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    #@223
    .line 2040
    move-object/from16 v0, p0

    #@225
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@227
    move-object/from16 v34, v0

    #@229
    move-object/from16 v0, v34

    #@22b
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@22d
    move/from16 v34, v0

    #@22f
    move/from16 v0, v34

    #@231
    move-object/from16 v1, p0

    #@233
    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    #@235
    .line 2042
    :cond_a
    move-object/from16 v0, p0

    #@237
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@239
    move-object/from16 v34, v0

    #@23b
    move-object/from16 v0, v34

    #@23d
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@23f
    move/from16 v34, v0

    #@241
    const/16 v35, 0x0

    #@243
    cmpl-float v34, v34, v35

    #@245
    if-ltz v34, :cond_b

    #@247
    .line 2043
    move-object/from16 v0, p0

    #@249
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@24b
    move-object/from16 v34, v0

    #@24d
    move-object/from16 v0, v34

    #@24f
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@251
    move/from16 v34, v0

    #@253
    move/from16 v0, v34

    #@255
    move-object/from16 v1, p0

    #@257
    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    #@259
    .line 2044
    move-object/from16 v0, p0

    #@25b
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@25d
    move-object/from16 v34, v0

    #@25f
    move-object/from16 v0, v34

    #@261
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@263
    move/from16 v34, v0

    #@265
    move/from16 v0, v34

    #@267
    move-object/from16 v1, p0

    #@269
    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    #@26b
    .line 2046
    :cond_b
    move-object/from16 v0, p0

    #@26d
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@26f
    move-object/from16 v34, v0

    #@271
    move-object/from16 v0, v34

    #@273
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    #@275
    move/from16 v34, v0

    #@277
    const/high16 v35, -0x80000000

    #@279
    move/from16 v0, v34

    #@27b
    move/from16 v1, v35

    #@27d
    if-eq v0, v1, :cond_c

    #@27f
    .line 2047
    move-object/from16 v0, p0

    #@281
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@283
    move-object/from16 v34, v0

    #@285
    move-object/from16 v0, v34

    #@287
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    #@289
    move/from16 v34, v0

    #@28b
    move/from16 v0, v34

    #@28d
    move-object/from16 v1, p0

    #@28f
    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetX:I

    #@291
    .line 2049
    :cond_c
    move-object/from16 v0, p0

    #@293
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@295
    move-object/from16 v34, v0

    #@297
    move-object/from16 v0, v34

    #@299
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    #@29b
    move/from16 v34, v0

    #@29d
    const/high16 v35, -0x80000000

    #@29f
    move/from16 v0, v34

    #@2a1
    move/from16 v1, v35

    #@2a3
    if-eq v0, v1, :cond_d

    #@2a5
    .line 2050
    move-object/from16 v0, p0

    #@2a7
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@2a9
    move-object/from16 v34, v0

    #@2ab
    move-object/from16 v0, v34

    #@2ad
    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    #@2af
    move/from16 v34, v0

    #@2b1
    move/from16 v0, v34

    #@2b3
    move-object/from16 v1, p0

    #@2b5
    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetY:I

    #@2b7
    .line 2056
    :cond_d
    const/4 v4, 0x0

    #@2b8
    .line 2057
    .local v4, "changed":Z
    move-object/from16 v0, p0

    #@2ba
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@2bc
    move-object/from16 v34, v0

    #@2be
    invoke-virtual/range {v34 .. v34}, Ljava/util/ArrayList;->size()I

    #@2c1
    move-result v34

    #@2c2
    add-int/lit8 v5, v34, -0x1

    #@2c4
    .local v5, "curTokenNdx":I
    :goto_7
    if-ltz v5, :cond_24

    #@2c6
    .line 2058
    move-object/from16 v0, p0

    #@2c8
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@2ca
    move-object/from16 v34, v0

    #@2cc
    move-object/from16 v0, v34

    #@2ce
    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@2d1
    move-result-object v22

    #@2d2
    check-cast v22, Lcom/android/server/wm/WindowToken;

    #@2d4
    .line 2059
    .local v22, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, v22

    #@2d6
    iget-boolean v0, v0, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@2d8
    move/from16 v34, v0

    #@2da
    move/from16 v0, v34

    #@2dc
    move/from16 v1, v27

    #@2de
    if-ne v0, v1, :cond_e

    #@2e0
    .line 2062
    if-eqz v27, :cond_1d

    #@2e2
    const/16 v34, 0x0

    #@2e4
    :goto_8
    move/from16 v0, v34

    #@2e6
    move-object/from16 v1, v22

    #@2e8
    iput-boolean v0, v1, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@2ea
    .line 2064
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2ed
    move-result-object v34

    #@2ee
    const/16 v35, 0x1

    #@2f0
    move/from16 v0, v35

    #@2f2
    move-object/from16 v1, v34

    #@2f4
    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@2f6
    .line 2067
    :cond_e
    move-object/from16 v0, v22

    #@2f8
    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2fa
    move-object/from16 v23, v0

    #@2fc
    .line 2068
    .local v23, "tokenWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    #@2ff
    move-result v34

    #@300
    add-int/lit8 v30, v34, -0x1

    #@302
    .local v30, "wallpaperNdx":I
    :goto_9
    if-ltz v30, :cond_23

    #@304
    .line 2069
    move-object/from16 v0, v23

    #@306
    move/from16 v1, v30

    #@308
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@30b
    move-result-object v29

    #@30c
    check-cast v29, Lcom/android/server/wm/WindowState;

    #@30e
    .line 2071
    .local v29, "wallpaper":Lcom/android/server/wm/WindowState;
    if-eqz v27, :cond_f

    #@310
    .line 2072
    const/16 v34, 0x0

    #@312
    move-object/from16 v0, p0

    #@314
    move-object/from16 v1, v29

    #@316
    move/from16 v2, v34

    #@318
    invoke-virtual {v0, v1, v8, v6, v2}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    #@31b
    .line 2076
    :cond_f
    move-object/from16 v0, p0

    #@31d
    move-object/from16 v1, v29

    #@31f
    move/from16 v2, v27

    #@321
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V

    #@324
    .line 2078
    move-object/from16 v0, v29

    #@326
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@328
    move-object/from16 v34, v0

    #@32a
    .line 2079
    move-object/from16 v0, v29

    #@32c
    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    #@32e
    move/from16 v35, v0

    #@330
    move-object/from16 v0, p0

    #@332
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    #@334
    move/from16 v36, v0

    #@336
    add-int v35, v35, v36

    #@338
    .line 2078
    move/from16 v0, v35

    #@33a
    move-object/from16 v1, v34

    #@33c
    iput v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@33e
    .line 2084
    move-object/from16 v0, v29

    #@340
    if-ne v0, v11, :cond_1f

    #@342
    .line 2085
    add-int/lit8 v10, v10, -0x1

    #@344
    .line 2086
    if-lez v10, :cond_1e

    #@346
    add-int/lit8 v34, v10, -0x1

    #@348
    invoke-virtual/range {v33 .. v34}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@34b
    move-result-object v11

    #@34c
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@34e
    .line 2068
    :goto_a
    add-int/lit8 v30, v30, -0x1

    #@350
    goto :goto_9

    #@351
    .line 1874
    .end local v4    # "changed":Z
    .end local v5    # "curTokenNdx":I
    .end local v22    # "token":Lcom/android/server/wm/WindowToken;
    .end local v23    # "tokenWindows":Lcom/android/server/wm/WindowList;
    .end local v29    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v30    # "wallpaperNdx":I
    .restart local v25    # "topCurW":Lcom/android/server/wm/WindowState;
    .restart local v28    # "w":Lcom/android/server/wm/WindowState;
    :cond_10
    const/4 v12, 0x1

    #@352
    .local v12, "hasWallpaper":Z
    goto/16 :goto_1

    #@354
    .line 1875
    .end local v12    # "hasWallpaper":Z
    :cond_11
    const/4 v12, 0x0

    #@355
    .restart local v12    # "hasWallpaper":Z
    goto/16 :goto_1

    #@357
    .line 1892
    .end local v12    # "hasWallpaper":Z
    :cond_12
    move-object/from16 v0, p0

    #@359
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@35b
    move-object/from16 v34, v0

    #@35d
    move-object/from16 v0, v34

    #@35f
    iget-object v0, v0, Lcom/android/server/wm/WindowAnimator;->mWindowDetachedWallpaper:Lcom/android/server/wm/WindowState;

    #@361
    move-object/from16 v34, v0

    #@363
    move-object/from16 v0, v28

    #@365
    move-object/from16 v1, v34

    #@367
    if-ne v0, v1, :cond_0

    #@369
    .line 1893
    move/from16 v32, v13

    #@36b
    goto/16 :goto_0

    #@36d
    .line 1951
    .end local v25    # "topCurW":Lcom/android/server/wm/WindowState;
    .end local v28    # "w":Lcom/android/server/wm/WindowState;
    .restart local v9    # "foundAnim":Z
    .restart local v16    # "oldAnim":Z
    .restart local v17    # "oldI":I
    .restart local v19    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_13
    move/from16 v0, v17

    #@36f
    if-le v10, v0, :cond_14

    #@371
    .line 1956
    move-object/from16 v0, p0

    #@373
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@375
    .line 1957
    move-object/from16 v0, v19

    #@377
    move-object/from16 v1, p0

    #@379
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@37b
    .line 1958
    move-object/from16 v11, v19

    #@37d
    .line 1959
    .restart local v11    # "foundW":Lcom/android/server/wm/WindowState;
    move/from16 v10, v17

    #@37f
    goto/16 :goto_2

    #@381
    .line 1965
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    :cond_14
    move-object/from16 v0, v19

    #@383
    move-object/from16 v1, p0

    #@385
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@387
    .line 1966
    move-object/from16 v0, p0

    #@389
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@38b
    goto/16 :goto_2

    #@38d
    .line 1972
    .end local v9    # "foundAnim":Z
    .end local v16    # "oldAnim":Z
    .end local v17    # "oldI":I
    .end local v19    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_15
    move-object/from16 v0, p0

    #@38f
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@391
    move-object/from16 v34, v0

    #@393
    if-eqz v34, :cond_7

    #@395
    .line 1974
    move-object/from16 v0, p0

    #@397
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@399
    move-object/from16 v34, v0

    #@39b
    invoke-virtual/range {v34 .. v34}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    #@39e
    move-result v34

    #@39f
    if-eqz v34, :cond_16

    #@3a1
    move-object/from16 v0, p0

    #@3a3
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@3a5
    move-object/from16 v34, v0

    #@3a7
    invoke-virtual/range {v34 .. v34}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    #@3aa
    move-result v34

    #@3ab
    if-nez v34, :cond_7

    #@3ad
    .line 1978
    :cond_16
    const/16 v34, 0x0

    #@3af
    move-object/from16 v0, v34

    #@3b1
    move-object/from16 v1, p0

    #@3b3
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@3b5
    .line 1979
    const/16 v34, 0x0

    #@3b7
    move-object/from16 v0, v34

    #@3b9
    move-object/from16 v1, p0

    #@3bb
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@3bd
    .line 1980
    move-object/from16 v0, p0

    #@3bf
    iput-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@3c1
    .line 1981
    const/16 v21, 0x1

    #@3c3
    goto/16 :goto_2

    #@3c5
    .line 1985
    :cond_17
    const/16 v27, 0x0

    #@3c7
    .local v27, "visible":Z
    goto/16 :goto_3

    #@3c9
    .line 1997
    .local v27, "visible":Z
    :cond_18
    const/16 v34, 0x0

    #@3cb
    goto/16 :goto_4

    #@3cd
    .line 2014
    .restart local v15    # "maxLayer":I
    .restart local v31    # "wb":Lcom/android/server/wm/WindowState;
    :cond_19
    move-object/from16 v0, v31

    #@3cf
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@3d1
    move-object/from16 v34, v0

    #@3d3
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@3d5
    move-object/from16 v35, v0

    #@3d7
    move-object/from16 v0, v34

    #@3d9
    move-object/from16 v1, v35

    #@3db
    if-ne v0, v1, :cond_9

    #@3dd
    .line 2019
    :cond_1a
    move-object/from16 v11, v31

    #@3df
    .line 2020
    .restart local v11    # "foundW":Lcom/android/server/wm/WindowState;
    add-int/lit8 v10, v10, -0x1

    #@3e1
    goto/16 :goto_5

    #@3e3
    .line 2034
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    .end local v15    # "maxLayer":I
    .end local v27    # "visible":Z
    .end local v31    # "wb":Lcom/android/server/wm/WindowState;
    :cond_1b
    if-lez v10, :cond_1c

    #@3e5
    add-int/lit8 v34, v10, -0x1

    #@3e7
    invoke-virtual/range {v33 .. v34}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3ea
    move-result-object v11

    #@3eb
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@3ed
    .restart local v11    # "foundW":Lcom/android/server/wm/WindowState;
    goto/16 :goto_6

    #@3ef
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    :cond_1c
    const/4 v11, 0x0

    #@3f0
    .local v11, "foundW":Lcom/android/server/wm/WindowState;
    goto/16 :goto_6

    #@3f2
    .line 2062
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    .restart local v4    # "changed":Z
    .restart local v5    # "curTokenNdx":I
    .restart local v22    # "token":Lcom/android/server/wm/WindowToken;
    :cond_1d
    const/16 v34, 0x1

    #@3f4
    goto/16 :goto_8

    #@3f6
    .line 2086
    .restart local v23    # "tokenWindows":Lcom/android/server/wm/WindowList;
    .restart local v29    # "wallpaper":Lcom/android/server/wm/WindowState;
    .restart local v30    # "wallpaperNdx":I
    :cond_1e
    const/4 v11, 0x0

    #@3f7
    .restart local v11    # "foundW":Lcom/android/server/wm/WindowState;
    goto/16 :goto_a

    #@3f9
    .line 2093
    .end local v11    # "foundW":Lcom/android/server/wm/WindowState;
    :cond_1f
    move-object/from16 v0, v33

    #@3fb
    move-object/from16 v1, v29

    #@3fd
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@400
    move-result v18

    #@401
    .line 2094
    .local v18, "oldIndex":I
    if-ltz v18, :cond_20

    #@403
    .line 2097
    move-object/from16 v0, v33

    #@405
    move/from16 v1, v18

    #@407
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@40a
    .line 2098
    const/16 v34, 0x1

    #@40c
    move/from16 v0, v34

    #@40e
    move-object/from16 v1, p0

    #@410
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@412
    .line 2099
    move/from16 v0, v18

    #@414
    if-ge v0, v10, :cond_20

    #@416
    .line 2100
    add-int/lit8 v10, v10, -0x1

    #@418
    .line 2106
    :cond_20
    const/4 v14, 0x0

    #@419
    .line 2107
    .local v14, "insertionIndex":I
    if-eqz v27, :cond_22

    #@41b
    if-eqz v11, :cond_22

    #@41d
    .line 2108
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@41f
    move-object/from16 v34, v0

    #@421
    move-object/from16 v0, v34

    #@423
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@425
    move/from16 v26, v0

    #@427
    .line 2109
    .local v26, "type":I
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@429
    move-object/from16 v34, v0

    #@42b
    move-object/from16 v0, v34

    #@42d
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@42f
    move/from16 v20, v0

    #@431
    .line 2110
    .local v20, "privateFlags":I
    move/from16 v0, v20

    #@433
    and-int/lit16 v0, v0, 0x400

    #@435
    move/from16 v34, v0

    #@437
    if-nez v34, :cond_21

    #@439
    .line 2111
    const/16 v34, 0x7ed

    #@43b
    move/from16 v0, v26

    #@43d
    move/from16 v1, v34

    #@43f
    if-ne v0, v1, :cond_22

    #@441
    .line 2112
    :cond_21
    move-object/from16 v0, v33

    #@443
    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@446
    move-result v14

    #@447
    .line 2120
    .end local v20    # "privateFlags":I
    .end local v26    # "type":I
    :cond_22
    move-object/from16 v0, v33

    #@449
    move-object/from16 v1, v29

    #@44b
    invoke-virtual {v0, v14, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@44e
    .line 2121
    const/16 v34, 0x1

    #@450
    move/from16 v0, v34

    #@452
    move-object/from16 v1, p0

    #@454
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@456
    .line 2122
    const/4 v4, 0x1

    #@457
    goto/16 :goto_a

    #@459
    .line 2057
    .end local v14    # "insertionIndex":I
    .end local v18    # "oldIndex":I
    .end local v29    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_23
    add-int/lit8 v5, v5, -0x1

    #@45b
    goto/16 :goto_7

    #@45d
    .line 2126
    .end local v22    # "token":Lcom/android/server/wm/WindowToken;
    .end local v23    # "tokenWindows":Lcom/android/server/wm/WindowList;
    .end local v30    # "wallpaperNdx":I
    :cond_24
    if-eqz v21, :cond_25

    #@45f
    .line 2130
    :cond_25
    return v4
.end method

.method public attachStack(II)V
    .locals 8
    .param p1, "stackId"    # I
    .param p2, "displayId"    # I

    #@0
    .prologue
    .line 5149
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 5151
    .local v2, "origId":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 5152
    :try_start_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@9
    invoke-virtual {v6, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@c
    move-result-object v0

    #@d
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@f
    .line 5153
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@11
    .line 5154
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@13
    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@16
    move-result-object v1

    #@17
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@19
    .line 5155
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_0

    #@1b
    .line 5157
    new-instance v1, Lcom/android/server/wm/TaskStack;

    #@1d
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/TaskStack;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    #@20
    .line 5158
    .restart local v1    # "stack":Lcom/android/server/wm/TaskStack;
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@22
    invoke-virtual {v6, p1, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@25
    .line 5160
    :cond_0
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TaskStack;->attachDisplayContent(Lcom/android/server/wm/DisplayContent;)V

    #@28
    .line 5161
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->attachStack(Lcom/android/server/wm/TaskStack;)V

    #@2b
    .line 5162
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V

    #@2e
    .line 5163
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@31
    move-result-object v5

    #@32
    .line 5164
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@35
    move-result v6

    #@36
    add-int/lit8 v4, v6, -0x1

    #@38
    .local v4, "winNdx":I
    :goto_0
    if-ltz v4, :cond_1

    #@3a
    .line 5165
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v6

    #@3e
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@40
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->reportResized()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@43
    .line 5164
    add-int/lit8 v4, v4, -0x1

    #@45
    goto :goto_0

    #@46
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@47
    .line 5170
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4a
    .line 5148
    return-void

    #@4b
    .line 5151
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v6

    #@4c
    :try_start_3
    monitor-exit v7

    #@4d
    throw v6
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@4e
    .line 5169
    :catchall_1
    move-exception v6

    #@4f
    .line 5170
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@52
    .line 5169
    throw v6
.end method

.method checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 5
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v4, 0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 3586
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@5
    move-result v1

    #@6
    invoke-static {}, Landroid/os/Process;->myPid()I

    #@9
    move-result v2

    #@a
    if-ne v1, v2, :cond_0

    #@c
    .line 3587
    return v4

    #@d
    .line 3590
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@f
    invoke-virtual {v1, p1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    #@12
    move-result v1

    #@13
    if-nez v1, :cond_1

    #@15
    .line 3592
    return v4

    #@16
    .line 3594
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    #@18
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@1b
    const-string/jumbo v2, "Permission Denial: "

    #@1e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@21
    move-result-object v1

    #@22
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v1

    #@26
    const-string/jumbo v2, " from pid="

    #@29
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v1

    #@2d
    .line 3595
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@30
    move-result v2

    #@31
    .line 3594
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@34
    move-result-object v1

    #@35
    .line 3596
    const-string/jumbo v2, ", uid="

    #@38
    .line 3594
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3b
    move-result-object v1

    #@3c
    .line 3596
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@3f
    move-result v2

    #@40
    .line 3594
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@43
    move-result-object v1

    #@44
    .line 3597
    const-string/jumbo v2, " requires "

    #@47
    .line 3594
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v1

    #@4b
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v1

    #@4f
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52
    move-result-object v0

    #@53
    .line 3598
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "WindowManager"

    #@56
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@59
    .line 3599
    return v3
.end method

.method checkDrawnWindowsLocked()V
    .locals 4

    #@0
    .prologue
    .line 10402
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@2
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    #@5
    move-result v2

    #@6
    if-nez v2, :cond_0

    #@8
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallback:Ljava/lang/Runnable;

    #@a
    if-nez v2, :cond_1

    #@c
    .line 10403
    :cond_0
    return-void

    #@d
    .line 10405
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v2

    #@13
    add-int/lit8 v0, v2, -0x1

    #@15
    .local v0, "j":I
    :goto_0
    if-ltz v0, :cond_4

    #@17
    .line 10406
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@19
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1c
    move-result-object v1

    #@1d
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@1f
    .line 10411
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@21
    if-nez v2, :cond_3

    #@23
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@25
    if-eqz v2, :cond_3

    #@27
    .line 10415
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->hasDrawnLw()Z

    #@2a
    move-result v2

    #@2b
    if-eqz v2, :cond_2

    #@2d
    .line 10418
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@2f
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@32
    .line 10405
    :cond_2
    :goto_1
    add-int/lit8 v0, v0, -0x1

    #@34
    goto :goto_0

    #@35
    .line 10414
    :cond_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@37
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@3a
    goto :goto_1

    #@3b
    .line 10421
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@3d
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    #@40
    move-result v2

    #@41
    if-eqz v2, :cond_5

    #@43
    .line 10423
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@45
    const/16 v3, 0x18

    #@47
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@4a
    .line 10424
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4c
    const/16 v3, 0x21

    #@4e
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@51
    .line 10401
    :cond_5
    return-void
.end method

.method public clearForcedDisplayDensity(I)V
    .locals 7
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8610
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8611
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8610
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8613
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 8616
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8617
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 8619
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 8621
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8622
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 8623
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_2

    #@2c
    .line 8625
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    #@2e
    .line 8624
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@31
    .line 8626
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@33
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@36
    move-result-object v1

    #@37
    .line 8627
    const-string/jumbo v5, "display_density_forced"

    #@3a
    const-string/jumbo v6, ""

    #@3d
    .line 8626
    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@40
    :cond_2
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@41
    .line 8631
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@44
    .line 8609
    return-void

    #@45
    .line 8621
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@46
    :try_start_3
    monitor-exit v4

    #@47
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@48
    .line 8630
    :catchall_1
    move-exception v1

    #@49
    .line 8631
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4c
    .line 8630
    throw v1
.end method

.method public clearForcedDisplaySize(I)V
    .locals 7
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8521
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8522
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8521
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8524
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 8527
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8528
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 8530
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 8532
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8533
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 8534
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_2

    #@2c
    .line 8535
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@2e
    .line 8536
    iget v5, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@30
    .line 8535
    invoke-direct {p0, v0, v1, v5}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    #@33
    .line 8537
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@35
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@38
    move-result-object v1

    #@39
    .line 8538
    const-string/jumbo v5, "display_size_forced"

    #@3c
    const-string/jumbo v6, ""

    #@3f
    .line 8537
    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@42
    :cond_2
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@43
    .line 8542
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@46
    .line 8520
    return-void

    #@47
    .line 8532
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@48
    :try_start_3
    monitor-exit v4

    #@49
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@4a
    .line 8541
    :catchall_1
    move-exception v1

    #@4b
    .line 8542
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4e
    .line 8541
    throw v1
.end method

.method public clearWindowContentFrameStats(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 11102
    const-string/jumbo v2, "android.permission.FRAME_STATS"

    #@4
    .line 11103
    const-string/jumbo v3, "clearWindowContentFrameStats()"

    #@7
    .line 11102
    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v2

    #@b
    if-nez v2, :cond_0

    #@d
    .line 11104
    new-instance v2, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v3, "Requires FRAME_STATS permission"

    #@12
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v2

    #@16
    .line 11106
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@18
    monitor-enter v3

    #@19
    .line 11107
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    invoke-virtual {v2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1e
    move-result-object v1

    #@1f
    check-cast v1, Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@21
    .line 11108
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_1

    #@23
    monitor-exit v3

    #@24
    .line 11109
    return v4

    #@25
    .line 11111
    :cond_1
    :try_start_1
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@27
    iget-object v0, v2, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    .line 11112
    .local v0, "surfaceControl":Landroid/view/SurfaceControl;
    if-nez v0, :cond_2

    #@2b
    monitor-exit v3

    #@2c
    .line 11113
    return v4

    #@2d
    .line 11115
    :cond_2
    :try_start_2
    invoke-virtual {v0}, Landroid/view/SurfaceControl;->clearContentFrameStats()Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@30
    move-result v2

    #@31
    monitor-exit v3

    #@32
    return v2

    #@33
    .line 11106
    .end local v0    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v2

    #@34
    monitor-exit v3

    #@35
    throw v2
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 9
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    .line 5497
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v8

    #@3
    .line 5498
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    #@8
    move-result v2

    #@9
    .line 5499
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@a
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v2, :cond_2

    #@c
    .line 5500
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@e
    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@11
    move-result-object v7

    #@12
    check-cast v7, Lcom/android/server/wm/DisplayContent;

    #@14
    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@17
    move-result-object v6

    #@18
    .line 5501
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@1b
    move-result v3

    #@1c
    .line 5502
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@1d
    .local v5, "winNdx":I
    :goto_1
    if-ge v5, v3, :cond_1

    #@1f
    .line 5503
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@22
    move-result-object v4

    #@23
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@25
    .line 5504
    .local v4, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v7, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    if-eqz v7, :cond_0

    #@29
    .line 5506
    :try_start_1
    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@2b
    invoke-interface {v7, p1}, Landroid/view/IWindow;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2e
    .line 5502
    :cond_0
    :goto_2
    add-int/lit8 v5, v5, 0x1

    #@30
    goto :goto_1

    #@31
    .line 5499
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@33
    goto :goto_0

    #@34
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_2
    monitor-exit v8

    #@35
    .line 5496
    return-void

    #@36
    .line 5497
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_0
    move-exception v7

    #@37
    monitor-exit v8

    #@38
    throw v7

    #@39
    .line 5507
    .restart local v0    # "displayNdx":I
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    :catch_0
    move-exception v1

    #@3a
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_2
.end method

.method public computeNewConfiguration()Landroid/content/res/Configuration;
    .locals 2

    #@0
    .prologue
    .line 7165
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 7166
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    move-result-object v1

    #@7
    monitor-exit v0

    #@8
    return-object v1

    #@9
    .line 7165
    :catchall_0
    move-exception v1

    #@a
    monitor-exit v0

    #@b
    throw v1
.end method

.method computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V
    .locals 17
    .param p1, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 7350
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->updateDisplayAndOrientationLocked()Landroid/view/DisplayInfo;

    #@3
    move-result-object v2

    #@4
    .line 7352
    .local v2, "displayInfo":Landroid/view/DisplayInfo;
    iget v4, v2, Landroid/view/DisplayInfo;->logicalWidth:I

    #@6
    .line 7353
    .local v4, "dw":I
    iget v5, v2, Landroid/view/DisplayInfo;->logicalHeight:I

    #@8
    .line 7354
    .local v5, "dh":I
    if-gt v4, v5, :cond_3

    #@a
    const/4 v1, 0x1

    #@b
    :goto_0
    move-object/from16 v0, p1

    #@d
    iput v1, v0, Landroid/content/res/Configuration;->orientation:I

    #@f
    .line 7357
    move-object/from16 v0, p0

    #@11
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@13
    move-object/from16 v0, p0

    #@15
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@17
    invoke-interface {v1, v4, v5, v6}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(III)I

    #@1a
    move-result v1

    #@1b
    int-to-float v1, v1

    #@1c
    move-object/from16 v0, p0

    #@1e
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@20
    iget v6, v6, Landroid/util/DisplayMetrics;->density:F

    #@22
    div-float/2addr v1, v6

    #@23
    float-to-int v1, v1

    #@24
    .line 7356
    move-object/from16 v0, p1

    #@26
    iput v1, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    #@28
    .line 7359
    move-object/from16 v0, p0

    #@2a
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2c
    move-object/from16 v0, p0

    #@2e
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@30
    invoke-interface {v1, v4, v5, v6}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(III)I

    #@33
    move-result v1

    #@34
    int-to-float v1, v1

    #@35
    move-object/from16 v0, p0

    #@37
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@39
    iget v6, v6, Landroid/util/DisplayMetrics;->density:F

    #@3b
    div-float/2addr v1, v6

    #@3c
    float-to-int v1, v1

    #@3d
    .line 7358
    move-object/from16 v0, p1

    #@3f
    iput v1, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    #@41
    .line 7360
    move-object/from16 v0, p0

    #@43
    iget v1, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@45
    const/4 v6, 0x1

    #@46
    if-eq v1, v6, :cond_4

    #@48
    .line 7361
    move-object/from16 v0, p0

    #@4a
    iget v1, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@4c
    const/4 v6, 0x3

    #@4d
    if-ne v1, v6, :cond_5

    #@4f
    const/4 v3, 0x1

    #@50
    .line 7362
    .local v3, "rotated":Z
    :goto_1
    move-object/from16 v0, p0

    #@52
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@54
    iget v6, v1, Landroid/util/DisplayMetrics;->density:F

    #@56
    move-object/from16 v1, p0

    #@58
    move-object/from16 v7, p1

    #@5a
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIFLandroid/content/res/Configuration;)V

    #@5d
    .line 7365
    move-object/from16 v0, p1

    #@5f
    iget v1, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@61
    and-int/lit16 v6, v1, -0x301

    #@63
    .line 7366
    iget v1, v2, Landroid/view/DisplayInfo;->flags:I

    #@65
    and-int/lit8 v1, v1, 0x10

    #@67
    if-eqz v1, :cond_6

    #@69
    .line 7367
    const/16 v1, 0x200

    #@6b
    .line 7365
    :goto_2
    or-int/2addr v1, v6

    #@6c
    move-object/from16 v0, p1

    #@6e
    iput v1, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@70
    .line 7370
    move-object/from16 v0, p1

    #@72
    iget v1, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    #@74
    int-to-float v1, v1

    #@75
    move-object/from16 v0, p0

    #@77
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@79
    div-float/2addr v1, v6

    #@7a
    float-to-int v1, v1

    #@7b
    move-object/from16 v0, p1

    #@7d
    iput v1, v0, Landroid/content/res/Configuration;->compatScreenWidthDp:I

    #@7f
    .line 7371
    move-object/from16 v0, p1

    #@81
    iget v1, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    #@83
    int-to-float v1, v1

    #@84
    move-object/from16 v0, p0

    #@86
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@88
    div-float/2addr v1, v6

    #@89
    float-to-int v1, v1

    #@8a
    move-object/from16 v0, p1

    #@8c
    iput v1, v0, Landroid/content/res/Configuration;->compatScreenHeightDp:I

    #@8e
    .line 7373
    move-object/from16 v0, p0

    #@90
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@92
    .line 7372
    move-object/from16 v0, p0

    #@94
    invoke-direct {v0, v3, v1, v4, v5}, Lcom/android/server/wm/WindowManagerService;->computeCompatSmallestWidth(ZLandroid/util/DisplayMetrics;II)I

    #@97
    move-result v1

    #@98
    move-object/from16 v0, p1

    #@9a
    iput v1, v0, Landroid/content/res/Configuration;->compatSmallestScreenWidthDp:I

    #@9c
    .line 7374
    iget v1, v2, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    #@9e
    move-object/from16 v0, p1

    #@a0
    iput v1, v0, Landroid/content/res/Configuration;->densityDpi:I

    #@a2
    .line 7378
    const/4 v1, 0x1

    #@a3
    move-object/from16 v0, p1

    #@a5
    iput v1, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@a7
    .line 7379
    const/4 v1, 0x1

    #@a8
    move-object/from16 v0, p1

    #@aa
    iput v1, v0, Landroid/content/res/Configuration;->keyboard:I

    #@ac
    .line 7380
    const/4 v1, 0x1

    #@ad
    move-object/from16 v0, p1

    #@af
    iput v1, v0, Landroid/content/res/Configuration;->navigation:I

    #@b1
    .line 7382
    const/4 v12, 0x0

    #@b2
    .line 7383
    .local v12, "keyboardPresence":I
    const/4 v14, 0x0

    #@b3
    .line 7384
    .local v14, "navigationPresence":I
    move-object/from16 v0, p0

    #@b5
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@b7
    invoke-virtual {v1}, Lcom/android/server/input/InputManagerService;->getInputDevices()[Landroid/view/InputDevice;

    #@ba
    move-result-object v9

    #@bb
    .line 7385
    .local v9, "devices":[Landroid/view/InputDevice;
    array-length v13, v9

    #@bc
    .line 7386
    .local v13, "len":I
    const/4 v11, 0x0

    #@bd
    .local v11, "i":I
    :goto_3
    if-ge v11, v13, :cond_a

    #@bf
    .line 7387
    aget-object v8, v9, v11

    #@c1
    .line 7388
    .local v8, "device":Landroid/view/InputDevice;
    invoke-virtual {v8}, Landroid/view/InputDevice;->isVirtual()Z

    #@c4
    move-result v1

    #@c5
    if-nez v1, :cond_2

    #@c7
    .line 7389
    invoke-virtual {v8}, Landroid/view/InputDevice;->getSources()I

    #@ca
    move-result v16

    #@cb
    .line 7390
    .local v16, "sources":I
    invoke-virtual {v8}, Landroid/view/InputDevice;->isExternal()Z

    #@ce
    move-result v1

    #@cf
    if-eqz v1, :cond_7

    #@d1
    .line 7391
    const/4 v15, 0x2

    #@d2
    .line 7394
    .local v15, "presenceFlag":I
    :goto_4
    move-object/from16 v0, p0

    #@d4
    iget-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    #@d6
    if-eqz v1, :cond_8

    #@d8
    .line 7395
    move/from16 v0, v16

    #@da
    and-int/lit16 v1, v0, 0x1002

    #@dc
    .line 7396
    const/16 v6, 0x1002

    #@de
    .line 7395
    if-ne v1, v6, :cond_0

    #@e0
    .line 7397
    const/4 v1, 0x3

    #@e1
    move-object/from16 v0, p1

    #@e3
    iput v1, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@e5
    .line 7403
    :cond_0
    :goto_5
    const v1, 0x10004

    #@e8
    and-int v1, v1, v16

    #@ea
    const v6, 0x10004

    #@ed
    if-ne v1, v6, :cond_9

    #@ef
    .line 7404
    const/4 v1, 0x3

    #@f0
    move-object/from16 v0, p1

    #@f2
    iput v1, v0, Landroid/content/res/Configuration;->navigation:I

    #@f4
    .line 7405
    or-int/2addr v14, v15

    #@f5
    .line 7412
    :cond_1
    :goto_6
    invoke-virtual {v8}, Landroid/view/InputDevice;->getKeyboardType()I

    #@f8
    move-result v1

    #@f9
    const/4 v6, 0x2

    #@fa
    if-ne v1, v6, :cond_2

    #@fc
    .line 7413
    const/4 v1, 0x2

    #@fd
    move-object/from16 v0, p1

    #@ff
    iput v1, v0, Landroid/content/res/Configuration;->keyboard:I

    #@101
    .line 7414
    or-int/2addr v12, v15

    #@102
    .line 7386
    .end local v15    # "presenceFlag":I
    .end local v16    # "sources":I
    :cond_2
    add-int/lit8 v11, v11, 0x1

    #@104
    goto :goto_3

    #@105
    .line 7355
    .end local v3    # "rotated":Z
    .end local v8    # "device":Landroid/view/InputDevice;
    .end local v9    # "devices":[Landroid/view/InputDevice;
    .end local v11    # "i":I
    .end local v12    # "keyboardPresence":I
    .end local v13    # "len":I
    .end local v14    # "navigationPresence":I
    :cond_3
    const/4 v1, 0x2

    #@106
    goto/16 :goto_0

    #@108
    .line 7360
    :cond_4
    const/4 v3, 0x1

    #@109
    .restart local v3    # "rotated":Z
    goto/16 :goto_1

    #@10b
    .line 7361
    .end local v3    # "rotated":Z
    :cond_5
    const/4 v3, 0x0

    #@10c
    .restart local v3    # "rotated":Z
    goto/16 :goto_1

    #@10e
    .line 7368
    :cond_6
    const/16 v1, 0x100

    #@110
    goto/16 :goto_2

    #@112
    .line 7392
    .restart local v8    # "device":Landroid/view/InputDevice;
    .restart local v9    # "devices":[Landroid/view/InputDevice;
    .restart local v11    # "i":I
    .restart local v12    # "keyboardPresence":I
    .restart local v13    # "len":I
    .restart local v14    # "navigationPresence":I
    .restart local v16    # "sources":I
    :cond_7
    const/4 v15, 0x1

    #@113
    .restart local v15    # "presenceFlag":I
    goto :goto_4

    #@114
    .line 7400
    :cond_8
    const/4 v1, 0x1

    #@115
    move-object/from16 v0, p1

    #@117
    iput v1, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@119
    goto :goto_5

    #@11a
    .line 7406
    :cond_9
    move/from16 v0, v16

    #@11c
    and-int/lit16 v1, v0, 0x201

    #@11e
    const/16 v6, 0x201

    #@120
    if-ne v1, v6, :cond_1

    #@122
    .line 7407
    move-object/from16 v0, p1

    #@124
    iget v1, v0, Landroid/content/res/Configuration;->navigation:I

    #@126
    const/4 v6, 0x1

    #@127
    if-ne v1, v6, :cond_1

    #@129
    .line 7408
    const/4 v1, 0x2

    #@12a
    move-object/from16 v0, p1

    #@12c
    iput v1, v0, Landroid/content/res/Configuration;->navigation:I

    #@12e
    .line 7409
    or-int/2addr v14, v15

    #@12f
    goto :goto_6

    #@130
    .line 7419
    .end local v8    # "device":Landroid/view/InputDevice;
    .end local v15    # "presenceFlag":I
    .end local v16    # "sources":I
    :cond_a
    move-object/from16 v0, p1

    #@132
    iget v1, v0, Landroid/content/res/Configuration;->navigation:I

    #@134
    const/4 v6, 0x1

    #@135
    if-ne v1, v6, :cond_b

    #@137
    move-object/from16 v0, p0

    #@139
    iget-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@13b
    if-eqz v1, :cond_b

    #@13d
    .line 7420
    const/4 v1, 0x2

    #@13e
    move-object/from16 v0, p1

    #@140
    iput v1, v0, Landroid/content/res/Configuration;->navigation:I

    #@142
    .line 7421
    or-int/lit8 v14, v14, 0x1

    #@144
    .line 7425
    :cond_b
    move-object/from16 v0, p1

    #@146
    iget v1, v0, Landroid/content/res/Configuration;->keyboard:I

    #@148
    const/4 v6, 0x1

    #@149
    if-eq v1, v6, :cond_e

    #@14b
    const/4 v10, 0x1

    #@14c
    .line 7426
    .local v10, "hardKeyboardAvailable":Z
    :goto_7
    move-object/from16 v0, p0

    #@14e
    iget-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    #@150
    if-eq v10, v1, :cond_c

    #@152
    .line 7427
    move-object/from16 v0, p0

    #@154
    iput-boolean v10, v0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    #@156
    .line 7428
    move-object/from16 v0, p0

    #@158
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@15a
    const/16 v6, 0x16

    #@15c
    invoke-virtual {v1, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@15f
    .line 7429
    move-object/from16 v0, p0

    #@161
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@163
    const/16 v6, 0x16

    #@165
    invoke-virtual {v1, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@168
    .line 7431
    :cond_c
    move-object/from16 v0, p0

    #@16a
    iget-boolean v1, v0, Lcom/android/server/wm/WindowManagerService;->mShowImeWithHardKeyboard:Z

    #@16c
    if-eqz v1, :cond_d

    #@16e
    .line 7432
    const/4 v1, 0x1

    #@16f
    move-object/from16 v0, p1

    #@171
    iput v1, v0, Landroid/content/res/Configuration;->keyboard:I

    #@173
    .line 7436
    :cond_d
    const/4 v1, 0x1

    #@174
    move-object/from16 v0, p1

    #@176
    iput v1, v0, Landroid/content/res/Configuration;->keyboardHidden:I

    #@178
    .line 7437
    const/4 v1, 0x1

    #@179
    move-object/from16 v0, p1

    #@17b
    iput v1, v0, Landroid/content/res/Configuration;->hardKeyboardHidden:I

    #@17d
    .line 7438
    const/4 v1, 0x1

    #@17e
    move-object/from16 v0, p1

    #@180
    iput v1, v0, Landroid/content/res/Configuration;->navigationHidden:I

    #@182
    .line 7439
    move-object/from16 v0, p0

    #@184
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@186
    move-object/from16 v0, p1

    #@188
    invoke-interface {v1, v0, v12, v14}, Landroid/view/WindowManagerPolicy;->adjustConfigurationLw(Landroid/content/res/Configuration;II)V

    #@18b
    .line 7349
    return-void

    #@18c
    .line 7425
    .end local v10    # "hardKeyboardAvailable":Z
    :cond_e
    const/4 v10, 0x0

    #@18d
    .restart local v10    # "hardKeyboardAvailable":Z
    goto :goto_7
.end method

.method copyAnimToLayoutParamsLocked()Z
    .locals 5

    #@0
    .prologue
    const/4 v4, 0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 10481
    const/4 v1, 0x0

    #@3
    .line 10483
    .local v1, "doRequest":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@5
    iget v0, v2, Lcom/android/server/wm/WindowAnimator;->mBulkUpdateParams:I

    #@7
    .line 10484
    .local v0, "bulkUpdateParams":I
    and-int/lit8 v2, v0, 0x1

    #@9
    if-eqz v2, :cond_0

    #@b
    .line 10485
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@d
    invoke-static {v2, v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->-set5(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    #@10
    .line 10486
    const/4 v1, 0x1

    #@11
    .line 10488
    :cond_0
    and-int/lit8 v2, v0, 0x2

    #@13
    if-eqz v2, :cond_1

    #@15
    .line 10489
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@17
    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    #@19
    .line 10490
    const/4 v1, 0x1

    #@1a
    .line 10492
    :cond_1
    and-int/lit8 v2, v0, 0x4

    #@1c
    if-eqz v2, :cond_2

    #@1e
    .line 10493
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@20
    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    #@22
    .line 10494
    const/4 v1, 0x1

    #@23
    .line 10496
    :cond_2
    and-int/lit8 v2, v0, 0x8

    #@25
    if-nez v2, :cond_6

    #@27
    .line 10497
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@29
    iput-boolean v3, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    #@2b
    .line 10505
    :cond_3
    :goto_0
    and-int/lit8 v2, v0, 0x10

    #@2d
    if-eqz v2, :cond_4

    #@2f
    .line 10506
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mTurnOnScreen:Z

    #@31
    .line 10508
    :cond_4
    and-int/lit8 v2, v0, 0x20

    #@33
    if-eqz v2, :cond_5

    #@35
    .line 10509
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@37
    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperActionPending:Z

    #@39
    .line 10512
    :cond_5
    return v1

    #@3a
    .line 10499
    :cond_6
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@3c
    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    #@3e
    .line 10500
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@40
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@42
    iget-object v3, v3, Lcom/android/server/wm/WindowAnimator;->mLastWindowFreezeSource:Ljava/lang/Object;

    #@44
    iput-object v3, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mLastWindowFreezeSource:Ljava/lang/Object;

    #@46
    .line 10501
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@48
    if-eqz v2, :cond_3

    #@4a
    .line 10502
    const/4 v1, 0x1

    #@4b
    goto :goto_0
.end method

.method public createDisplayContentLocked(Landroid/view/Display;)V
    .locals 2
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 11733
    if-nez p1, :cond_0

    #@2
    .line 11734
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@4
    const-string/jumbo v1, "getDisplayContent: display must not be null"

    #@7
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@a
    throw v0

    #@b
    .line 11736
    :cond_0
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@e
    move-result v0

    #@f
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@12
    .line 11732
    return-void
.end method

.method createWatermarkInTransaction()V
    .locals 13

    #@0
    .prologue
    .line 10948
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    #@2
    if-eqz v9, :cond_0

    #@4
    .line 10949
    return-void

    #@5
    .line 10952
    :cond_0
    new-instance v2, Ljava/io/File;

    #@7
    const-string/jumbo v9, "/system/etc/setup.conf"

    #@a
    invoke-direct {v2, v9}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    #@d
    .line 10953
    .local v2, "file":Ljava/io/File;
    const/4 v3, 0x0

    #@e
    .line 10954
    .local v3, "in":Ljava/io/FileInputStream;
    const/4 v5, 0x0

    #@f
    .line 10956
    .local v5, "ind":Ljava/io/DataInputStream;
    :try_start_0
    new-instance v4, Ljava/io/FileInputStream;

    #@11
    invoke-direct {v4, v2}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@14
    .line 10957
    .end local v3    # "in":Ljava/io/FileInputStream;
    .local v4, "in":Ljava/io/FileInputStream;
    :try_start_1
    new-instance v6, Ljava/io/DataInputStream;

    #@16
    invoke-direct {v6, v4}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_a
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_c
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@19
    .line 10958
    .local v6, "ind":Ljava/io/DataInputStream;
    :try_start_2
    invoke-virtual {v6}, Ljava/io/DataInputStream;->readLine()Ljava/lang/String;

    #@1c
    .end local v5    # "ind":Ljava/io/DataInputStream;
    move-result-object v7

    #@1d
    .line 10959
    .local v7, "line":Ljava/lang/String;
    if-eqz v7, :cond_1

    #@1f
    .line 10960
    const-string/jumbo v9, "%"

    #@22
    invoke-virtual {v7, v9}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@25
    move-result-object v8

    #@26
    .line 10961
    .local v8, "toks":[Ljava/lang/String;
    if-eqz v8, :cond_1

    #@28
    array-length v9, v8

    #@29
    if-lez v9, :cond_1

    #@2b
    .line 10962
    new-instance v9, Lcom/android/server/wm/Watermark;

    #@2d
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@30
    move-result-object v10

    #@31
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@34
    move-result-object v10

    #@35
    .line 10963
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@37
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@39
    .line 10962
    invoke-direct {v9, v10, v11, v12, v8}, Lcom/android/server/wm/Watermark;-><init>(Landroid/view/Display;Landroid/util/DisplayMetrics;Landroid/view/SurfaceSession;[Ljava/lang/String;)V

    #@3c
    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_b
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_d
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@3e
    .line 10969
    .end local v8    # "toks":[Ljava/lang/String;
    :cond_1
    if-eqz v6, :cond_4

    #@40
    .line 10971
    :try_start_3
    invoke-virtual {v6}, Ljava/io/DataInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    #@43
    :cond_2
    :goto_0
    move-object v5, v6

    #@44
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@45
    .line 10947
    .end local v4    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .end local v7    # "line":Ljava/lang/String;
    :cond_3
    :goto_1
    return-void

    #@46
    .line 10972
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    .restart local v7    # "line":Ljava/lang/String;
    :catch_0
    move-exception v1

    #@47
    .local v1, "e":Ljava/io/IOException;
    goto :goto_0

    #@48
    .line 10974
    .end local v1    # "e":Ljava/io/IOException;
    :cond_4
    if-eqz v4, :cond_2

    #@4a
    .line 10976
    :try_start_4
    invoke-virtual {v4}, Ljava/io/FileInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1

    #@4d
    goto :goto_0

    #@4e
    .line 10977
    :catch_1
    move-exception v1

    #@4f
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_0

    #@50
    .line 10967
    .end local v1    # "e":Ljava/io/IOException;
    .end local v4    # "in":Ljava/io/FileInputStream;
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .end local v7    # "line":Ljava/lang/String;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_2
    move-exception v1

    #@51
    .line 10969
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v1    # "e":Ljava/io/IOException;
    :goto_2
    if-eqz v5, :cond_5

    #@53
    .line 10971
    :try_start_5
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    #@56
    goto :goto_1

    #@57
    .line 10972
    :catch_3
    move-exception v1

    #@58
    goto :goto_1

    #@59
    .line 10974
    :cond_5
    if-eqz v3, :cond_3

    #@5b
    .line 10976
    :try_start_6
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_4

    #@5e
    goto :goto_1

    #@5f
    .line 10977
    :catch_4
    move-exception v1

    #@60
    goto :goto_1

    #@61
    .line 10966
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catch_5
    move-exception v0

    #@62
    .line 10969
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .local v0, "e":Ljava/io/FileNotFoundException;
    :goto_3
    if-eqz v5, :cond_6

    #@64
    .line 10971
    :try_start_7
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_6

    #@67
    goto :goto_1

    #@68
    .line 10972
    :catch_6
    move-exception v1

    #@69
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_1

    #@6a
    .line 10974
    .end local v1    # "e":Ljava/io/IOException;
    :cond_6
    if-eqz v3, :cond_3

    #@6c
    .line 10976
    :try_start_8
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_7

    #@6f
    goto :goto_1

    #@70
    .line 10977
    :catch_7
    move-exception v1

    #@71
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_1

    #@72
    .line 10968
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catchall_0
    move-exception v9

    #@73
    .line 10969
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    :goto_4
    if-eqz v5, :cond_8

    #@75
    .line 10971
    :try_start_9
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_9
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_8

    #@78
    .line 10968
    :cond_7
    :goto_5
    throw v9

    #@79
    .line 10972
    :catch_8
    move-exception v1

    #@7a
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_5

    #@7b
    .line 10974
    .end local v1    # "e":Ljava/io/IOException;
    :cond_8
    if-eqz v3, :cond_7

    #@7d
    .line 10976
    :try_start_a
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_9

    #@80
    goto :goto_5

    #@81
    .line 10977
    :catch_9
    move-exception v1

    #@82
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_5

    #@83
    .line 10968
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catchall_1
    move-exception v9

    #@84
    move-object v3, v4

    #@85
    .end local v4    # "in":Ljava/io/FileInputStream;
    .local v3, "in":Ljava/io/FileInputStream;
    goto :goto_4

    #@86
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catchall_2
    move-exception v9

    #@87
    move-object v5, v6

    #@88
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@89
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    #@8a
    .line 10966
    .end local v3    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_a
    move-exception v0

    #@8b
    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v3, v4

    #@8c
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_3

    #@8d
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catch_b
    move-exception v0

    #@8e
    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v5, v6

    #@8f
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@90
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_3

    #@91
    .line 10967
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_c
    move-exception v1

    #@92
    .restart local v1    # "e":Ljava/io/IOException;
    move-object v3, v4

    #@93
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_2

    #@94
    .end local v1    # "e":Ljava/io/IOException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catch_d
    move-exception v1

    #@95
    .restart local v1    # "e":Ljava/io/IOException;
    move-object v5, v6

    #@96
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@97
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_2
.end method

.method debugLayoutRepeats(Ljava/lang/String;I)V
    .locals 3
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "pendingLayoutChanges"    # I

    #@0
    .prologue
    .line 11698
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I

    #@2
    const/4 v1, 0x4

    #@3
    if-lt v0, v1, :cond_0

    #@5
    .line 11699
    const-string/jumbo v0, "WindowManager"

    #@8
    new-instance v1, Ljava/lang/StringBuilder;

    #@a
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@d
    const-string/jumbo v2, "Layouts looping: "

    #@10
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13
    move-result-object v1

    #@14
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17
    move-result-object v1

    #@18
    const-string/jumbo v2, ", mPendingLayoutChanges = 0x"

    #@1b
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v1

    #@1f
    .line 11700
    invoke-static {p2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@22
    move-result-object v2

    #@23
    .line 11699
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@26
    move-result-object v1

    #@27
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2a
    move-result-object v1

    #@2b
    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@2e
    .line 11697
    :cond_0
    return-void
.end method

.method public detachStack(I)V
    .locals 4
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5180
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v3

    #@3
    .line 5181
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v1

    #@9
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5182
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_1

    #@d
    .line 5183
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@10
    move-result-object v0

    #@11
    .line 5184
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@13
    .line 5185
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->isAnimating()Z

    #@16
    move-result v2

    #@17
    if-eqz v2, :cond_0

    #@19
    .line 5186
    const/4 v2, 0x1

    #@1a
    iput-boolean v2, v1, Lcom/android/server/wm/TaskStack;->mDeferDetach:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    monitor-exit v3

    #@1d
    .line 5187
    return-void

    #@1e
    .line 5189
    :cond_0
    :try_start_1
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@21
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    monitor-exit v3

    #@22
    .line 5179
    return-void

    #@23
    .line 5180
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v2

    #@24
    monitor-exit v3

    #@25
    throw v2
.end method

.method detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    .locals 0
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "stack"    # Lcom/android/server/wm/TaskStack;

    #@0
    .prologue
    .line 5175
    invoke-virtual {p1, p2}, Lcom/android/server/wm/DisplayContent;->detachStack(Lcom/android/server/wm/TaskStack;)V

    #@3
    .line 5176
    invoke-virtual {p2}, Lcom/android/server/wm/TaskStack;->detachDisplay()V

    #@6
    .line 5174
    return-void
.end method

.method public detectSafeMode()Z
    .locals 14

    #@0
    .prologue
    const/4 v6, 0x1

    #@1
    const/16 v13, -0x100

    #@3
    const/4 v12, -0x1

    #@4
    const/4 v7, 0x0

    #@5
    .line 7598
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@7
    .line 7599
    const-wide/16 v10, 0x3e8

    #@9
    .line 7598
    invoke-virtual {v8, v10, v11}, Lcom/android/server/wm/InputMonitor;->waitForInputDevicesReady(J)Z

    #@c
    move-result v8

    #@d
    if-nez v8, :cond_0

    #@f
    .line 7600
    const-string/jumbo v8, "WindowManager"

    #@12
    const-string/jumbo v9, "Devices still not ready after waiting 1000 milliseconds before attempting to detect safe mode."

    #@15
    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@18
    .line 7605
    :cond_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@1a
    .line 7606
    const/16 v9, 0x52

    #@1c
    .line 7605
    invoke-virtual {v8, v12, v13, v9}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@1f
    move-result v2

    #@20
    .line 7607
    .local v2, "menuState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@22
    const/16 v9, 0x2f

    #@24
    invoke-virtual {v8, v12, v13, v9}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@27
    move-result v3

    #@28
    .line 7608
    .local v3, "sState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@2a
    const/16 v9, 0x201

    #@2c
    .line 7609
    const/16 v10, 0x17

    #@2e
    .line 7608
    invoke-virtual {v8, v12, v9, v10}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@31
    move-result v0

    #@32
    .line 7610
    .local v0, "dpadState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@34
    const v9, 0x10004

    #@37
    .line 7611
    const/16 v10, 0x110

    #@39
    .line 7610
    invoke-virtual {v8, v12, v9, v10}, Lcom/android/server/input/InputManagerService;->getScanCodeState(III)I

    #@3c
    move-result v4

    #@3d
    .line 7612
    .local v4, "trackballState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@3f
    .line 7613
    const/16 v9, 0x19

    #@41
    .line 7612
    invoke-virtual {v8, v12, v13, v9}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@44
    move-result v5

    #@45
    .line 7614
    .local v5, "volumeDownState":I
    if-gtz v2, :cond_1

    #@47
    if-lez v3, :cond_3

    #@49
    :cond_1
    :goto_0
    iput-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@4b
    .line 7617
    :try_start_0
    const-string/jumbo v6, "persist.sys.safemode"

    #@4e
    const/4 v7, 0x0

    #@4f
    invoke-static {v6, v7}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@52
    move-result v6

    #@53
    if-eqz v6, :cond_2

    #@55
    .line 7618
    const/4 v6, 0x1

    #@56
    iput-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@58
    .line 7619
    const-string/jumbo v6, "persist.sys.safemode"

    #@5b
    const-string/jumbo v7, ""

    #@5e
    invoke-static {v6, v7}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    #@61
    .line 7623
    :cond_2
    :goto_1
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@63
    if-eqz v6, :cond_4

    #@65
    .line 7624
    const-string/jumbo v6, "WindowManager"

    #@68
    new-instance v7, Ljava/lang/StringBuilder;

    #@6a
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    #@6d
    const-string/jumbo v8, "SAFE MODE ENABLED (menu="

    #@70
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@73
    move-result-object v7

    #@74
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@77
    move-result-object v7

    #@78
    const-string/jumbo v8, " s="

    #@7b
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7e
    move-result-object v7

    #@7f
    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@82
    move-result-object v7

    #@83
    .line 7625
    const-string/jumbo v8, " dpad="

    #@86
    .line 7624
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@89
    move-result-object v7

    #@8a
    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@8d
    move-result-object v7

    #@8e
    .line 7625
    const-string/jumbo v8, " trackball="

    #@91
    .line 7624
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@94
    move-result-object v7

    #@95
    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@98
    move-result-object v7

    #@99
    .line 7625
    const-string/jumbo v8, ")"

    #@9c
    .line 7624
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9f
    move-result-object v7

    #@a0
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@a3
    move-result-object v7

    #@a4
    invoke-static {v6, v7}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@a7
    .line 7629
    :goto_2
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a9
    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@ab
    invoke-interface {v6, v7}, Landroid/view/WindowManagerPolicy;->setSafeMode(Z)V

    #@ae
    .line 7630
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@b0
    return v6

    #@b1
    .line 7614
    :cond_3
    if-gtz v0, :cond_1

    #@b3
    if-gtz v4, :cond_1

    #@b5
    .line 7615
    if-gtz v5, :cond_1

    #@b7
    move v6, v7

    #@b8
    goto :goto_0

    #@b9
    .line 7627
    :cond_4
    const-string/jumbo v6, "WindowManager"

    #@bc
    const-string/jumbo v7, "SAFE MODE not enabled"

    #@bf
    invoke-static {v6, v7}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@c2
    goto :goto_2

    #@c3
    .line 7621
    :catch_0
    move-exception v1

    #@c4
    .local v1, "e":Ljava/lang/IllegalArgumentException;
    goto :goto_1
.end method

.method public disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;

    #@0
    .prologue
    .line 5365
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5367
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5371
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@17
    move-result v0

    #@18
    const/16 v1, 0x3e8

    #@1a
    if-eq v0, v1, :cond_1

    #@1c
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->isKeyguardSecure()Z

    #@1f
    move-result v0

    #@20
    if-eqz v0, :cond_1

    #@22
    .line 5372
    const-string/jumbo v0, "WindowManager"

    #@25
    const-string/jumbo v1, "current mode is SecurityMode, ignore hide keyguard"

    #@28
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@2b
    .line 5373
    return-void

    #@2c
    .line 5376
    :cond_1
    if-nez p1, :cond_2

    #@2e
    .line 5377
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@30
    const-string/jumbo v1, "token == null"

    #@33
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@36
    throw v0

    #@37
    .line 5380
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@39
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@3b
    .line 5381
    new-instance v2, Landroid/util/Pair;

    #@3d
    invoke-direct {v2, p1, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    #@40
    const/4 v3, 0x1

    #@41
    .line 5380
    invoke-virtual {v1, v3, v2}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@44
    move-result-object v1

    #@45
    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    #@48
    .line 5364
    return-void
.end method

.method public dismissKeyguard()V
    .locals 2

    #@0
    .prologue
    .line 5447
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5449
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5451
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 5452
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@19
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->dismissKeyguardLw()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    monitor-exit v1

    #@1d
    .line 5446
    return-void

    #@1e
    .line 5451
    :catchall_0
    move-exception v0

    #@1f
    monitor-exit v1

    #@20
    throw v0
.end method

.method dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V
    .locals 2
    .param p1, "session"    # Lcom/android/server/wm/Session;

    #@0
    .prologue
    .line 5600
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    const/16 v1, 0x22

    #@4
    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@7
    move-result-object v0

    #@8
    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    #@b
    .line 5599
    return-void
.end method

.method dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V
    .locals 2
    .param p1, "wallpaper"    # Lcom/android/server/wm/WindowState;
    .param p2, "visible"    # Z

    #@0
    .prologue
    .line 2308
    iget-boolean v1, p1, Lcom/android/server/wm/WindowState;->mWallpaperVisible:Z

    #@2
    if-eq v1, p2, :cond_1

    #@4
    .line 2309
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    #@6
    if-eqz v1, :cond_0

    #@8
    .line 2308
    if-eqz p2, :cond_1

    #@a
    .line 2310
    :cond_0
    iput-boolean p2, p1, Lcom/android/server/wm/WindowState;->mWallpaperVisible:Z

    #@c
    .line 2315
    :try_start_0
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@e
    invoke-interface {v1, p2}, Landroid/view/IWindow;->dispatchAppVisibility(Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@11
    .line 2305
    :cond_1
    :goto_0
    return-void

    #@12
    .line 2316
    :catch_0
    move-exception v0

    #@13
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public displayReady()V
    .locals 5

    #@0
    .prologue
    .line 7634
    const/4 v2, 0x0

    #@1
    invoke-direct {p0, v2}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    #@4
    .line 7636
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v3

    #@7
    .line 7637
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@a
    move-result-object v0

    #@b
    .line 7638
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V

    #@e
    .line 7639
    const/4 v2, 0x1

    #@f
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v3

    #@12
    .line 7643
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@14
    const/4 v3, 0x0

    #@15
    invoke-interface {v2, v3}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    #@18
    .line 7647
    :goto_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1a
    monitor-enter v3

    #@1b
    .line 7648
    :try_start_2
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1d
    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    #@20
    move-result-object v2

    #@21
    .line 7649
    const-string/jumbo v4, "android.hardware.touchscreen"

    #@24
    .line 7648
    invoke-virtual {v2, v4}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    #@27
    move-result v2

    #@28
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    #@2a
    .line 7650
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2d
    move-result-object v2

    #@2e
    invoke-direct {p0, v2}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@31
    monitor-exit v3

    #@32
    .line 7654
    :try_start_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@34
    const/4 v3, 0x0

    #@35
    invoke-interface {v2, v3}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    #@38
    .line 7633
    :goto_1
    return-void

    #@39
    .line 7636
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v2

    #@3a
    monitor-exit v3

    #@3b
    throw v2

    #@3c
    .line 7647
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v2

    #@3d
    monitor-exit v3

    #@3e
    throw v2

    #@3f
    .line 7655
    :catch_0
    move-exception v1

    #@40
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_1

    #@41
    .line 7644
    .end local v1    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v1

    #@42
    .restart local v1    # "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    const/4 v0, 0x0

    #@2
    .line 11539
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4
    const-string/jumbo v3, "android.permission.DUMP"

    #@7
    invoke-virtual {v1, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@a
    move-result v1

    #@b
    if-eqz v1, :cond_0

    #@d
    .line 11541
    new-instance v0, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v1, "Permission Denial: can\'t dump WindowManager from from pid="

    #@15
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v0

    #@19
    .line 11542
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@1c
    move-result v1

    #@1d
    .line 11541
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@20
    move-result-object v0

    #@21
    .line 11543
    const-string/jumbo v1, ", uid="

    #@24
    .line 11541
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v0

    #@28
    .line 11543
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@2b
    move-result v1

    #@2c
    .line 11541
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2f
    move-result-object v0

    #@30
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@33
    move-result-object v0

    #@34
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@37
    .line 11544
    return-void

    #@38
    .line 11547
    :cond_0
    const/4 v5, 0x0

    #@39
    .line 11549
    .local v5, "dumpAll":Z
    const/4 v4, 0x0

    #@3a
    .line 11550
    .local v4, "opti":I
    :goto_0
    array-length v1, p3

    #@3b
    if-ge v4, v1, :cond_1

    #@3d
    .line 11551
    aget-object v6, p3, v4

    #@3f
    .line 11552
    .local v6, "opt":Ljava/lang/String;
    if-eqz v6, :cond_1

    #@41
    invoke-virtual {v6}, Ljava/lang/String;->length()I

    #@44
    move-result v1

    #@45
    if-gtz v1, :cond_3

    #@47
    .line 11583
    .end local v6    # "opt":Ljava/lang/String;
    :cond_1
    array-length v1, p3

    #@48
    if-ge v4, v1, :cond_17

    #@4a
    .line 11584
    aget-object v2, p3, v4

    #@4c
    .line 11585
    .local v2, "cmd":Ljava/lang/String;
    add-int/lit8 v4, v4, 0x1

    #@4e
    .line 11586
    const-string/jumbo v0, "lastanr"

    #@51
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@54
    move-result v0

    #@55
    if-nez v0, :cond_2

    #@57
    const-string/jumbo v0, "l"

    #@5a
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@5d
    move-result v0

    #@5e
    if-eqz v0, :cond_6

    #@60
    .line 11587
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@62
    monitor-enter v0

    #@63
    .line 11588
    :try_start_0
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@66
    monitor-exit v0

    #@67
    .line 11590
    return-void

    #@68
    .line 11552
    .end local v2    # "cmd":Ljava/lang/String;
    .restart local v6    # "opt":Ljava/lang/String;
    :cond_3
    invoke-virtual {v6, v7}, Ljava/lang/String;->charAt(I)C

    #@6b
    move-result v1

    #@6c
    const/16 v3, 0x2d

    #@6e
    if-ne v1, v3, :cond_1

    #@70
    .line 11555
    add-int/lit8 v4, v4, 0x1

    #@72
    .line 11556
    const-string/jumbo v1, "-a"

    #@75
    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@78
    move-result v1

    #@79
    if-eqz v1, :cond_4

    #@7b
    .line 11557
    const/4 v5, 0x1

    #@7c
    goto :goto_0

    #@7d
    .line 11558
    :cond_4
    const-string/jumbo v1, "-h"

    #@80
    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@83
    move-result v1

    #@84
    if-eqz v1, :cond_5

    #@86
    .line 11559
    const-string/jumbo v0, "Window manager dump options:"

    #@89
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@8c
    .line 11560
    const-string/jumbo v0, "  [-a] [-h] [cmd] ..."

    #@8f
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@92
    .line 11561
    const-string/jumbo v0, "  cmd may be one of:"

    #@95
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@98
    .line 11562
    const-string/jumbo v0, "    l[astanr]: last ANR information"

    #@9b
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@9e
    .line 11563
    const-string/jumbo v0, "    p[policy]: policy state"

    #@a1
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@a4
    .line 11564
    const-string/jumbo v0, "    a[animator]: animator state"

    #@a7
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@aa
    .line 11565
    const-string/jumbo v0, "    s[essions]: active sessions"

    #@ad
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@b0
    .line 11566
    const-string/jumbo v0, "    surfaces: active surfaces (debugging enabled only)"

    #@b3
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@b6
    .line 11567
    const-string/jumbo v0, "    d[isplays]: active display contents"

    #@b9
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@bc
    .line 11568
    const-string/jumbo v0, "    t[okens]: token list"

    #@bf
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@c2
    .line 11569
    const-string/jumbo v0, "    w[indows]: window list"

    #@c5
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@c8
    .line 11570
    const-string/jumbo v0, "  cmd may also be a NAME to dump windows.  NAME may"

    #@cb
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@ce
    .line 11571
    const-string/jumbo v0, "    be a partial substring in a window name, a"

    #@d1
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@d4
    .line 11572
    const-string/jumbo v0, "    Window hex object identifier, or"

    #@d7
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@da
    .line 11573
    const-string/jumbo v0, "    \"all\" for all windows, or"

    #@dd
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@e0
    .line 11574
    const-string/jumbo v0, "    \"visible\" for the visible windows."

    #@e3
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@e6
    .line 11575
    const-string/jumbo v0, "  -a: include all available server state."

    #@e9
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@ec
    .line 11576
    return-void

    #@ed
    .line 11578
    :cond_5
    new-instance v1, Ljava/lang/StringBuilder;

    #@ef
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@f2
    const-string/jumbo v3, "Unknown argument: "

    #@f5
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f8
    move-result-object v1

    #@f9
    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fc
    move-result-object v1

    #@fd
    const-string/jumbo v3, "; use -h for help"

    #@100
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@103
    move-result-object v1

    #@104
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@107
    move-result-object v1

    #@108
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@10b
    goto/16 :goto_0

    #@10d
    .line 11587
    .end local v6    # "opt":Ljava/lang/String;
    .restart local v2    # "cmd":Ljava/lang/String;
    :catchall_0
    move-exception v1

    #@10e
    monitor-exit v0

    #@10f
    throw v1

    #@110
    .line 11591
    :cond_6
    const-string/jumbo v0, "policy"

    #@113
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@116
    move-result v0

    #@117
    if-nez v0, :cond_7

    #@119
    const-string/jumbo v0, "p"

    #@11c
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@11f
    move-result v0

    #@120
    if-eqz v0, :cond_8

    #@122
    .line 11592
    :cond_7
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@124
    monitor-enter v0

    #@125
    .line 11593
    const/4 v1, 0x1

    #@126
    :try_start_1
    invoke-virtual {p0, p2, p3, v1}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@129
    monitor-exit v0

    #@12a
    .line 11595
    return-void

    #@12b
    .line 11592
    :catchall_1
    move-exception v1

    #@12c
    monitor-exit v0

    #@12d
    throw v1

    #@12e
    .line 11596
    :cond_8
    const-string/jumbo v0, "animator"

    #@131
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@134
    move-result v0

    #@135
    if-nez v0, :cond_9

    #@137
    const-string/jumbo v0, "a"

    #@13a
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@13d
    move-result v0

    #@13e
    if-eqz v0, :cond_a

    #@140
    .line 11597
    :cond_9
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@142
    monitor-enter v0

    #@143
    .line 11598
    const/4 v1, 0x1

    #@144
    :try_start_2
    invoke-virtual {p0, p2, p3, v1}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@147
    monitor-exit v0

    #@148
    .line 11600
    return-void

    #@149
    .line 11597
    :catchall_2
    move-exception v1

    #@14a
    monitor-exit v0

    #@14b
    throw v1

    #@14c
    .line 11601
    :cond_a
    const-string/jumbo v0, "sessions"

    #@14f
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@152
    move-result v0

    #@153
    if-nez v0, :cond_b

    #@155
    const-string/jumbo v0, "s"

    #@158
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@15b
    move-result v0

    #@15c
    if-eqz v0, :cond_c

    #@15e
    .line 11602
    :cond_b
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@160
    monitor-enter v0

    #@161
    .line 11603
    const/4 v1, 0x1

    #@162
    :try_start_3
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    #@165
    monitor-exit v0

    #@166
    .line 11605
    return-void

    #@167
    .line 11602
    :catchall_3
    move-exception v1

    #@168
    monitor-exit v0

    #@169
    throw v1

    #@16a
    .line 11606
    :cond_c
    const-string/jumbo v0, "surfaces"

    #@16d
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@170
    move-result v0

    #@171
    if-eqz v0, :cond_d

    #@173
    .line 11607
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@175
    monitor-enter v0

    #@176
    .line 11608
    const/4 v1, 0x0

    #@177
    :try_start_4
    invoke-static {p2, v1}, Lcom/android/server/wm/WindowStateAnimator$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    #@17a
    monitor-exit v0

    #@17b
    .line 11610
    return-void

    #@17c
    .line 11607
    :catchall_4
    move-exception v1

    #@17d
    monitor-exit v0

    #@17e
    throw v1

    #@17f
    .line 11611
    :cond_d
    const-string/jumbo v0, "displays"

    #@182
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@185
    move-result v0

    #@186
    if-nez v0, :cond_e

    #@188
    const-string/jumbo v0, "d"

    #@18b
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@18e
    move-result v0

    #@18f
    if-eqz v0, :cond_f

    #@191
    .line 11612
    :cond_e
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@193
    monitor-enter v0

    #@194
    .line 11613
    const/4 v1, 0x1

    #@195
    :try_start_5
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    #@198
    monitor-exit v0

    #@199
    .line 11615
    return-void

    #@19a
    .line 11612
    :catchall_5
    move-exception v1

    #@19b
    monitor-exit v0

    #@19c
    throw v1

    #@19d
    .line 11616
    :cond_f
    const-string/jumbo v0, "tokens"

    #@1a0
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1a3
    move-result v0

    #@1a4
    if-nez v0, :cond_10

    #@1a6
    const-string/jumbo v0, "t"

    #@1a9
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1ac
    move-result v0

    #@1ad
    if-eqz v0, :cond_11

    #@1af
    .line 11617
    :cond_10
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b1
    monitor-enter v0

    #@1b2
    .line 11618
    const/4 v1, 0x1

    #@1b3
    :try_start_6
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    #@1b6
    monitor-exit v0

    #@1b7
    .line 11620
    return-void

    #@1b8
    .line 11617
    :catchall_6
    move-exception v1

    #@1b9
    monitor-exit v0

    #@1ba
    throw v1

    #@1bb
    .line 11621
    :cond_11
    const-string/jumbo v0, "windows"

    #@1be
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1c1
    move-result v0

    #@1c2
    if-nez v0, :cond_12

    #@1c4
    const-string/jumbo v0, "w"

    #@1c7
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1ca
    move-result v0

    #@1cb
    if-eqz v0, :cond_13

    #@1cd
    .line 11622
    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1cf
    monitor-enter v0

    #@1d0
    .line 11623
    const/4 v1, 0x1

    #@1d1
    const/4 v3, 0x0

    #@1d2
    :try_start_7
    invoke-virtual {p0, p2, v1, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    #@1d5
    monitor-exit v0

    #@1d6
    .line 11625
    return-void

    #@1d7
    .line 11622
    :catchall_7
    move-exception v1

    #@1d8
    monitor-exit v0

    #@1d9
    throw v1

    #@1da
    .line 11626
    :cond_13
    const-string/jumbo v0, "all"

    #@1dd
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1e0
    move-result v0

    #@1e1
    if-nez v0, :cond_14

    #@1e3
    const-string/jumbo v0, "a"

    #@1e6
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1e9
    move-result v0

    #@1ea
    if-eqz v0, :cond_15

    #@1ec
    .line 11627
    :cond_14
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1ee
    monitor-enter v0

    #@1ef
    .line 11628
    const/4 v1, 0x1

    #@1f0
    const/4 v3, 0x0

    #@1f1
    :try_start_8
    invoke-virtual {p0, p2, v1, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_8

    #@1f4
    monitor-exit v0

    #@1f5
    .line 11630
    return-void

    #@1f6
    .line 11627
    :catchall_8
    move-exception v1

    #@1f7
    monitor-exit v0

    #@1f8
    throw v1

    #@1f9
    :cond_15
    move-object v0, p0

    #@1fa
    move-object v1, p2

    #@1fb
    move-object v3, p3

    #@1fc
    .line 11633
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    #@1ff
    move-result v0

    #@200
    if-nez v0, :cond_16

    #@202
    .line 11634
    new-instance v0, Ljava/lang/StringBuilder;

    #@204
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@207
    const-string/jumbo v1, "Bad window command, or no windows match: "

    #@20a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@20d
    move-result-object v0

    #@20e
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@211
    move-result-object v0

    #@212
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@215
    move-result-object v0

    #@216
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@219
    .line 11635
    const-string/jumbo v0, "Use -h for help."

    #@21c
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@21f
    .line 11637
    :cond_16
    return-void

    #@220
    .line 11641
    .end local v2    # "cmd":Ljava/lang/String;
    :cond_17
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@222
    monitor-enter v1

    #@223
    .line 11642
    :try_start_9
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@226
    .line 11643
    if-eqz v5, :cond_18

    #@228
    .line 11644
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@22b
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@22e
    .line 11646
    :cond_18
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    #@231
    .line 11647
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@234
    .line 11648
    if-eqz v5, :cond_19

    #@236
    .line 11649
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@239
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@23c
    .line 11651
    :cond_19
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    #@23f
    .line 11652
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@242
    .line 11653
    if-eqz v5, :cond_1a

    #@244
    .line 11654
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@247
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@24a
    .line 11656
    :cond_1a
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    #@24d
    .line 11657
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@250
    .line 11658
    if-eqz v5, :cond_1b

    #@252
    .line 11659
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@255
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@258
    .line 11661
    :cond_1b
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    #@25b
    .line 11662
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@25e
    .line 11663
    if-eqz v5, :cond_1c

    #@260
    .line 11664
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@263
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@266
    .line 11666
    :cond_1c
    if-eqz v5, :cond_1d

    #@268
    .line 11667
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@26b
    .line 11666
    :cond_1d
    invoke-static {p2, v0}, Lcom/android/server/wm/WindowStateAnimator$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@26e
    .line 11669
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@271
    .line 11670
    if-eqz v5, :cond_1e

    #@273
    .line 11671
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@276
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@279
    .line 11673
    :cond_1e
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    #@27c
    .line 11674
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@27f
    .line 11675
    if-eqz v5, :cond_1f

    #@281
    .line 11676
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@284
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@287
    .line 11678
    :cond_1f
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    #@28a
    .line 11679
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@28d
    .line 11680
    if-eqz v5, :cond_20

    #@28f
    .line 11681
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@292
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@295
    .line 11683
    :cond_20
    const/4 v0, 0x0

    #@296
    invoke-virtual {p0, p2, v5, v0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_9

    #@299
    monitor-exit v1

    #@29a
    .line 11538
    return-void

    #@29b
    .line 11641
    :catchall_9
    move-exception v0

    #@29c
    monitor-exit v1

    #@29d
    throw v0
.end method

.method dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    #@0
    .prologue
    .line 11151
    const-string/jumbo v0, "WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 11152
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@8
    const-string/jumbo v1, "    "

    #@b
    invoke-virtual {v0, p1, v1, p3}, Lcom/android/server/wm/WindowAnimator;->dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@e
    .line 11150
    return-void
.end method

.method dumpAppTokensLocked()V
    .locals 13

    #@0
    .prologue
    .line 4967
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v0

    #@6
    .line 4968
    .local v0, "numStacks":I
    const/4 v4, 0x0

    #@7
    .local v4, "stackNdx":I
    :goto_0
    if-ge v4, v0, :cond_2

    #@9
    .line 4969
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v10, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v3

    #@f
    check-cast v3, Lcom/android/server/wm/TaskStack;

    #@11
    .line 4970
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    const-string/jumbo v10, "WindowManager"

    #@14
    new-instance v11, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v12, "  Stack #"

    #@1c
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v11

    #@20
    iget v12, v3, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@22
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@25
    move-result-object v11

    #@26
    const-string/jumbo v12, " tasks from bottom to top:"

    #@29
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v11

    #@2d
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@30
    move-result-object v11

    #@31
    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@34
    .line 4971
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@37
    move-result-object v7

    #@38
    .line 4972
    .local v7, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    #@3b
    move-result v1

    #@3c
    .line 4973
    .local v1, "numTasks":I
    const/4 v6, 0x0

    #@3d
    .local v6, "taskNdx":I
    :goto_1
    if-ge v6, v1, :cond_1

    #@3f
    .line 4974
    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@42
    move-result-object v5

    #@43
    check-cast v5, Lcom/android/server/wm/Task;

    #@45
    .line 4975
    .local v5, "task":Lcom/android/server/wm/Task;
    const-string/jumbo v10, "WindowManager"

    #@48
    new-instance v11, Ljava/lang/StringBuilder;

    #@4a
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@4d
    const-string/jumbo v12, "    Task #"

    #@50
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@53
    move-result-object v11

    #@54
    iget v12, v5, Lcom/android/server/wm/Task;->mTaskId:I

    #@56
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@59
    move-result-object v11

    #@5a
    const-string/jumbo v12, " activities from bottom to top:"

    #@5d
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@60
    move-result-object v11

    #@61
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@64
    move-result-object v11

    #@65
    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@68
    .line 4976
    iget-object v9, v5, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@6a
    .line 4977
    .local v9, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v9}, Lcom/android/server/wm/AppTokenList;->size()I

    #@6d
    move-result v2

    #@6e
    .line 4978
    .local v2, "numTokens":I
    const/4 v8, 0x0

    #@6f
    .local v8, "tokenNdx":I
    :goto_2
    if-ge v8, v2, :cond_0

    #@71
    .line 4979
    const-string/jumbo v11, "WindowManager"

    #@74
    new-instance v10, Ljava/lang/StringBuilder;

    #@76
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@79
    const-string/jumbo v12, "      activity #"

    #@7c
    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v10

    #@80
    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@83
    move-result-object v10

    #@84
    const-string/jumbo v12, ": "

    #@87
    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8a
    move-result-object v12

    #@8b
    invoke-virtual {v9, v8}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@8e
    move-result-object v10

    #@8f
    check-cast v10, Lcom/android/server/wm/AppWindowToken;

    #@91
    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@93
    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@96
    move-result-object v10

    #@97
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9a
    move-result-object v10

    #@9b
    invoke-static {v11, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@9e
    .line 4978
    add-int/lit8 v8, v8, 0x1

    #@a0
    goto :goto_2

    #@a1
    .line 4973
    :cond_0
    add-int/lit8 v6, v6, 0x1

    #@a3
    goto :goto_1

    #@a4
    .line 4968
    .end local v2    # "numTokens":I
    .end local v5    # "task":Lcom/android/server/wm/Task;
    .end local v8    # "tokenNdx":I
    .end local v9    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_1
    add-int/lit8 v4, v4, 0x1

    #@a6
    goto/16 :goto_0

    #@a8
    .line 4966
    .end local v1    # "numTasks":I
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v6    # "taskNdx":I
    .end local v7    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_2
    return-void
.end method

.method dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    .locals 4
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    .line 11222
    const-string/jumbo v3, "WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)"

    #@3
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 11223
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@8
    if-eqz v3, :cond_0

    #@a
    .line 11224
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@f
    move-result v2

    #@10
    .line 11225
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@11
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@13
    .line 11226
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@15
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@18
    move-result-object v0

    #@19
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@1b
    .line 11227
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v3, "  "

    #@1e
    invoke-virtual {v0, v3, p1}, Lcom/android/server/wm/DisplayContent;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    #@21
    .line 11225
    add-int/lit8 v1, v1, 0x1

    #@23
    goto :goto_0

    #@24
    .line 11230
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :cond_0
    const-string/jumbo v3, "  NO DISPLAY"

    #@27
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@2a
    .line 11221
    :cond_1
    return-void
.end method

.method dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    #@0
    .prologue
    .line 11494
    const-string/jumbo v0, "WINDOW MANAGER LAST ANR (dumpsys window lastanr)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 11495
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@8
    if-nez v0, :cond_0

    #@a
    .line 11496
    const-string/jumbo v0, "  <no ANR has occurred since boot>"

    #@d
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@10
    .line 11493
    :goto_0
    return-void

    #@11
    .line 11498
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@13
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@16
    goto :goto_0
.end method

.method dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    #@0
    .prologue
    .line 11146
    const-string/jumbo v0, "WINDOW MANAGER POLICY STATE (dumpsys window policy)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 11147
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@8
    const-string/jumbo v1, "    "

    #@b
    invoke-interface {v0, v1, p1, p2}, Landroid/view/WindowManagerPolicy;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@e
    .line 11145
    return-void
.end method

.method dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    .locals 3
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    .line 11213
    const-string/jumbo v2, "WINDOW MANAGER SESSIONS (dumpsys window sessions)"

    #@3
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 11214
    const/4 v0, 0x0

    #@7
    .local v0, "i":I
    :goto_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@9
    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    #@c
    move-result v2

    #@d
    if-ge v0, v2, :cond_0

    #@f
    .line 11215
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@11
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/Session;

    #@17
    .line 11216
    .local v1, "s":Lcom/android/server/wm/Session;
    const-string/jumbo v2, "  Session "

    #@1a
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@1d
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@20
    const/16 v2, 0x3a

    #@22
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(C)V

    #@25
    .line 11217
    const-string/jumbo v2, "    "

    #@28
    invoke-virtual {v1, p1, v2}, Lcom/android/server/wm/Session;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@2b
    .line 11214
    add-int/lit8 v0, v0, 0x1

    #@2d
    goto :goto_0

    #@2e
    .line 11212
    .end local v1    # "s":Lcom/android/server/wm/Session;
    :cond_0
    return-void
.end method

.method dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    .locals 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    const/16 v5, 0x20

    #@2
    const/16 v4, 0x3a

    #@4
    .line 11156
    const-string/jumbo v3, "WINDOW MANAGER TOKENS (dumpsys window tokens)"

    #@7
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@a
    .line 11157
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@c
    invoke-virtual {v3}, Ljava/util/HashMap;->isEmpty()Z

    #@f
    move-result v3

    #@10
    if-nez v3, :cond_1

    #@12
    .line 11158
    const-string/jumbo v3, "  All tokens:"

    #@15
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@18
    .line 11159
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@1d
    move-result-object v3

    #@1e
    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    #@21
    move-result-object v1

    #@22
    .line 11160
    .local v1, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@25
    move-result v3

    #@26
    if-eqz v3, :cond_1

    #@28
    .line 11161
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@2b
    move-result-object v2

    #@2c
    check-cast v2, Lcom/android/server/wm/WindowToken;

    #@2e
    .line 11162
    .local v2, "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  "

    #@31
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@34
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@37
    .line 11163
    if-eqz p2, :cond_0

    #@39
    .line 11164
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    #@3c
    .line 11165
    const-string/jumbo v3, "    "

    #@3f
    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@42
    goto :goto_0

    #@43
    .line 11167
    :cond_0
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@46
    goto :goto_0

    #@47
    .line 11171
    .end local v1    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@49
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    #@4c
    move-result v3

    #@4d
    if-nez v3, :cond_3

    #@4f
    .line 11172
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@52
    .line 11173
    const-string/jumbo v3, "  Wallpaper tokens:"

    #@55
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@58
    .line 11174
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@5a
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@5d
    move-result v3

    #@5e
    add-int/lit8 v0, v3, -0x1

    #@60
    .local v0, "i":I
    :goto_1
    if-ltz v0, :cond_3

    #@62
    .line 11175
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@64
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@67
    move-result-object v2

    #@68
    check-cast v2, Lcom/android/server/wm/WindowToken;

    #@6a
    .line 11176
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  Wallpaper #"

    #@6d
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@70
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    #@73
    .line 11177
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(C)V

    #@76
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@79
    .line 11178
    if-eqz p2, :cond_2

    #@7b
    .line 11179
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    #@7e
    .line 11180
    const-string/jumbo v3, "    "

    #@81
    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@84
    .line 11174
    :goto_2
    add-int/lit8 v0, v0, -0x1

    #@86
    goto :goto_1

    #@87
    .line 11182
    :cond_2
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@8a
    goto :goto_2

    #@8b
    .line 11186
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@8d
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    #@90
    move-result v3

    #@91
    if-nez v3, :cond_5

    #@93
    .line 11187
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@96
    .line 11188
    const-string/jumbo v3, "  Finishing start of application tokens:"

    #@99
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@9c
    .line 11189
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@9e
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@a1
    move-result v3

    #@a2
    add-int/lit8 v0, v3, -0x1

    #@a4
    .restart local v0    # "i":I
    :goto_3
    if-ltz v0, :cond_5

    #@a6
    .line 11190
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@a8
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@ab
    move-result-object v2

    #@ac
    check-cast v2, Lcom/android/server/wm/WindowToken;

    #@ae
    .line 11191
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  Finished Starting #"

    #@b1
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@b4
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    #@b7
    .line 11192
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(C)V

    #@ba
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@bd
    .line 11193
    if-eqz p2, :cond_4

    #@bf
    .line 11194
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    #@c2
    .line 11195
    const-string/jumbo v3, "    "

    #@c5
    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@c8
    .line 11189
    :goto_4
    add-int/lit8 v0, v0, -0x1

    #@ca
    goto :goto_3

    #@cb
    .line 11197
    :cond_4
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@ce
    goto :goto_4

    #@cf
    .line 11201
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_5
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@d1
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@d4
    move-result v3

    #@d5
    if-eqz v3, :cond_7

    #@d7
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@d9
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@dc
    move-result v3

    #@dd
    if-eqz v3, :cond_7

    #@df
    .line 11155
    :cond_6
    :goto_5
    return-void

    #@e0
    .line 11202
    :cond_7
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@e3
    .line 11203
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@e5
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    #@e8
    move-result v3

    #@e9
    if-lez v3, :cond_8

    #@eb
    .line 11204
    const-string/jumbo v3, "  mOpeningApps="

    #@ee
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@f1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@f3
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@f6
    .line 11206
    :cond_8
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@f8
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    #@fb
    move-result v3

    #@fc
    if-lez v3, :cond_6

    #@fe
    .line 11207
    const-string/jumbo v3, "  mClosingApps="

    #@101
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@104
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@106
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@109
    goto :goto_5
.end method

.method dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 10
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    #@0
    .prologue
    .line 11441
    new-instance v7, Lcom/android/server/wm/WindowList;

    #@2
    invoke-direct {v7}, Lcom/android/server/wm/WindowList;-><init>()V

    #@5
    .line 11442
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    const-string/jumbo v8, "visible"

    #@8
    invoke-virtual {v8, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@b
    move-result v8

    #@c
    if-eqz v8, :cond_3

    #@e
    .line 11443
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@10
    monitor-enter v9

    #@11
    .line 11444
    :try_start_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@13
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    #@16
    move-result v2

    #@17
    .line 11445
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@18
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v2, :cond_2

    #@1a
    .line 11447
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1c
    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@1f
    move-result-object v8

    #@20
    check-cast v8, Lcom/android/server/wm/DisplayContent;

    #@22
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@25
    move-result-object v6

    #@26
    .line 11448
    .local v6, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@29
    move-result v8

    #@2a
    add-int/lit8 v5, v8, -0x1

    #@2c
    .local v5, "winNdx":I
    :goto_1
    if-ltz v5, :cond_1

    #@2e
    .line 11449
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@31
    move-result-object v4

    #@32
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@34
    .line 11450
    .local v4, "w":Lcom/android/server/wm/WindowState;
    iget-object v8, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@36
    iget-boolean v8, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    #@38
    if-eqz v8, :cond_0

    #@3a
    .line 11451
    invoke-virtual {v7, v4}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3d
    .line 11448
    :cond_0
    add-int/lit8 v5, v5, -0x1

    #@3f
    goto :goto_1

    #@40
    .line 11445
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@42
    goto :goto_0

    #@43
    .end local v5    # "winNdx":I
    .end local v6    # "windowList":Lcom/android/server/wm/WindowList;
    .end local p2    # "name":Ljava/lang/String;
    :cond_2
    monitor-exit v9

    #@44
    .line 11483
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@47
    move-result v8

    #@48
    if-gtz v8, :cond_7

    #@4a
    .line 11484
    const/4 v8, 0x0

    #@4b
    return v8

    #@4c
    .line 11443
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    .restart local p2    # "name":Ljava/lang/String;
    :catchall_0
    move-exception v8

    #@4d
    monitor-exit v9

    #@4e
    throw v8

    #@4f
    .line 11457
    :cond_3
    const/4 v3, 0x0

    #@50
    .line 11460
    .local v3, "objectId":I
    const/16 v8, 0x10

    #@52
    :try_start_1
    invoke-static {p2, v8}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I
    :try_end_1
    .catch Ljava/lang/RuntimeException; {:try_start_1 .. :try_end_1} :catch_0

    #@55
    move-result v3

    #@56
    .line 11461
    const/4 p2, 0x0

    #@57
    .line 11464
    .end local p2    # "name":Ljava/lang/String;
    :goto_2
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@59
    monitor-enter v9

    #@5a
    .line 11465
    :try_start_2
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@5c
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    #@5f
    move-result v2

    #@60
    .line 11466
    .restart local v2    # "numDisplays":I
    const/4 v0, 0x0

    #@61
    .restart local v0    # "displayNdx":I
    :goto_3
    if-ge v0, v2, :cond_2

    #@63
    .line 11468
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@65
    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@68
    move-result-object v8

    #@69
    check-cast v8, Lcom/android/server/wm/DisplayContent;

    #@6b
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@6e
    move-result-object v6

    #@6f
    .line 11469
    .restart local v6    # "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@72
    move-result v8

    #@73
    add-int/lit8 v5, v8, -0x1

    #@75
    .restart local v5    # "winNdx":I
    :goto_4
    if-ltz v5, :cond_6

    #@77
    .line 11470
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@7a
    move-result-object v4

    #@7b
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@7d
    .line 11471
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p2, :cond_5

    #@7f
    .line 11472
    iget-object v8, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@81
    invoke-virtual {v8}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@84
    move-result-object v8

    #@85
    invoke-interface {v8}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    #@88
    move-result-object v8

    #@89
    invoke-virtual {v8, p2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@8c
    move-result v8

    #@8d
    if-eqz v8, :cond_4

    #@8f
    .line 11473
    invoke-virtual {v7, v4}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@92
    .line 11469
    :cond_4
    :goto_5
    add-int/lit8 v5, v5, -0x1

    #@94
    goto :goto_4

    #@95
    .line 11462
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    .end local v5    # "winNdx":I
    .end local v6    # "windowList":Lcom/android/server/wm/WindowList;
    .restart local p2    # "name":Ljava/lang/String;
    :catch_0
    move-exception v1

    #@96
    .local v1, "e":Ljava/lang/RuntimeException;
    goto :goto_2

    #@97
    .line 11475
    .end local v1    # "e":Ljava/lang/RuntimeException;
    .end local p2    # "name":Ljava/lang/String;
    .restart local v0    # "displayNdx":I
    .restart local v2    # "numDisplays":I
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    .restart local v5    # "winNdx":I
    .restart local v6    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_5
    invoke-static {v4}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@9a
    move-result v8

    #@9b
    if-ne v8, v3, :cond_4

    #@9d
    .line 11476
    invoke-virtual {v7, v4}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@a0
    goto :goto_5

    #@a1
    .line 11464
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    .end local v5    # "winNdx":I
    .end local v6    # "windowList":Lcom/android/server/wm/WindowList;
    :catchall_1
    move-exception v8

    #@a2
    monitor-exit v9

    #@a3
    throw v8

    #@a4
    .line 11466
    .restart local v0    # "displayNdx":I
    .restart local v2    # "numDisplays":I
    .restart local v5    # "winNdx":I
    .restart local v6    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_6
    add-int/lit8 v0, v0, 0x1

    #@a6
    goto :goto_3

    #@a7
    .line 11487
    .end local v3    # "objectId":I
    .end local v5    # "winNdx":I
    .end local v6    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_7
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@a9
    monitor-enter v8

    #@aa
    .line 11488
    :try_start_3
    invoke-virtual {p0, p1, p5, v7}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    #@ad
    monitor-exit v8

    #@ae
    .line 11490
    const/4 v8, 0x1

    #@af
    return v8

    #@b0
    .line 11487
    :catchall_2
    move-exception v9

    #@b1
    monitor-exit v8

    #@b2
    throw v9
.end method

.method dumpWindowsLocked()V
    .locals 8

    #@0
    .prologue
    .line 4986
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v2

    #@6
    .line 4987
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@9
    .line 4988
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v0

    #@f
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@11
    .line 4989
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v5, "WindowManager"

    #@14
    new-instance v6, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v7, " Display #"

    #@1c
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v6

    #@20
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@23
    move-result v7

    #@24
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@27
    move-result-object v6

    #@28
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b
    move-result-object v6

    #@2c
    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@2f
    .line 4990
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@32
    move-result-object v4

    #@33
    .line 4991
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@36
    move-result v5

    #@37
    add-int/lit8 v3, v5, -0x1

    #@39
    .local v3, "winNdx":I
    :goto_1
    if-ltz v3, :cond_0

    #@3b
    .line 4992
    const-string/jumbo v5, "WindowManager"

    #@3e
    new-instance v6, Ljava/lang/StringBuilder;

    #@40
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@43
    const-string/jumbo v7, "  #"

    #@46
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@49
    move-result-object v6

    #@4a
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4d
    move-result-object v6

    #@4e
    const-string/jumbo v7, ": "

    #@51
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@54
    move-result-object v6

    #@55
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@58
    move-result-object v7

    #@59
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5c
    move-result-object v6

    #@5d
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@60
    move-result-object v6

    #@61
    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@64
    .line 4991
    add-int/lit8 v3, v3, -0x1

    #@66
    goto :goto_1

    #@67
    .line 4987
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@69
    goto :goto_0

    #@6a
    .line 4985
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    return-void
.end method

.method dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 11236
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string/jumbo v0, "WINDOW MANAGER WINDOWS (dumpsys window windows)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 11237
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    #@9
    .line 11235
    return-void
.end method

.method dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .locals 10
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 11242
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v3

    #@6
    .line 11243
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v3, :cond_5

    #@9
    .line 11244
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v8

    #@f
    check-cast v8, Lcom/android/server/wm/DisplayContent;

    #@11
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@14
    move-result-object v7

    #@15
    .line 11245
    .local v7, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@18
    move-result v8

    #@19
    add-int/lit8 v6, v8, -0x1

    #@1b
    .local v6, "winNdx":I
    :goto_1
    if-ltz v6, :cond_4

    #@1d
    .line 11246
    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@20
    move-result-object v4

    #@21
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@23
    .line 11247
    .local v4, "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_0

    #@25
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@28
    move-result v8

    #@29
    if-eqz v8, :cond_2

    #@2b
    .line 11248
    :cond_0
    const-string/jumbo v8, "  Window #"

    #@2e
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@31
    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(I)V

    #@34
    const/16 v8, 0x20

    #@36
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@39
    .line 11249
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@3c
    const-string/jumbo v8, ":"

    #@3f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@42
    .line 11250
    const-string/jumbo v9, "    "

    #@45
    if-nez p2, :cond_1

    #@47
    if-eqz p3, :cond_3

    #@49
    :cond_1
    const/4 v8, 0x1

    #@4a
    :goto_2
    invoke-virtual {v4, p1, v9, v8}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@4d
    .line 11245
    :cond_2
    add-int/lit8 v6, v6, -0x1

    #@4f
    goto :goto_1

    #@50
    .line 11250
    :cond_3
    const/4 v8, 0x0

    #@51
    goto :goto_2

    #@52
    .line 11243
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_4
    add-int/lit8 v1, v1, 0x1

    #@54
    goto :goto_0

    #@55
    .line 11254
    .end local v6    # "winNdx":I
    .end local v7    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_5
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@57
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@5a
    move-result v8

    #@5b
    if-lez v8, :cond_8

    #@5d
    .line 11255
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@60
    .line 11256
    const-string/jumbo v8, "  Input method dialogs:"

    #@63
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@66
    .line 11257
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@68
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@6b
    move-result v8

    #@6c
    add-int/lit8 v2, v8, -0x1

    #@6e
    .local v2, "i":I
    :goto_3
    if-ltz v2, :cond_8

    #@70
    .line 11258
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@72
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@75
    move-result-object v4

    #@76
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@78
    .line 11259
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_6

    #@7a
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@7d
    move-result v8

    #@7e
    if-eqz v8, :cond_7

    #@80
    .line 11260
    :cond_6
    const-string/jumbo v8, "  IM Dialog #"

    #@83
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@86
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@89
    const-string/jumbo v8, ": "

    #@8c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@8f
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@92
    .line 11257
    :cond_7
    add-int/lit8 v2, v2, -0x1

    #@94
    goto :goto_3

    #@95
    .line 11264
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_8
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@97
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@9a
    move-result v8

    #@9b
    if-lez v8, :cond_c

    #@9d
    .line 11265
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@a0
    .line 11266
    const-string/jumbo v8, "  Remove pending for:"

    #@a3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@a6
    .line 11267
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@a8
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@ab
    move-result v8

    #@ac
    add-int/lit8 v2, v8, -0x1

    #@ae
    .restart local v2    # "i":I
    :goto_4
    if-ltz v2, :cond_c

    #@b0
    .line 11268
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@b2
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@b5
    move-result-object v4

    #@b6
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@b8
    .line 11269
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_9

    #@ba
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@bd
    move-result v8

    #@be
    if-eqz v8, :cond_a

    #@c0
    .line 11270
    :cond_9
    const-string/jumbo v8, "  Remove #"

    #@c3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@c6
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@c9
    const/16 v8, 0x20

    #@cb
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@ce
    .line 11271
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@d1
    .line 11272
    if-eqz p2, :cond_b

    #@d3
    .line 11273
    const-string/jumbo v8, ":"

    #@d6
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@d9
    .line 11274
    const-string/jumbo v8, "    "

    #@dc
    const/4 v9, 0x1

    #@dd
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@e0
    .line 11267
    :cond_a
    :goto_5
    add-int/lit8 v2, v2, -0x1

    #@e2
    goto :goto_4

    #@e3
    .line 11276
    :cond_b
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@e6
    goto :goto_5

    #@e7
    .line 11281
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_c
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@e9
    if-eqz v8, :cond_e

    #@eb
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@ed
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@f0
    move-result v8

    #@f1
    if-lez v8, :cond_e

    #@f3
    .line 11282
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@f6
    .line 11283
    const-string/jumbo v8, "  Windows force removing:"

    #@f9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@fc
    .line 11284
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@fe
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@101
    move-result v8

    #@102
    add-int/lit8 v2, v8, -0x1

    #@104
    .restart local v2    # "i":I
    :goto_6
    if-ltz v2, :cond_e

    #@106
    .line 11285
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@108
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@10b
    move-result-object v4

    #@10c
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@10e
    .line 11286
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    const-string/jumbo v8, "  Removing #"

    #@111
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@114
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@117
    const/16 v8, 0x20

    #@119
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@11c
    .line 11287
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@11f
    .line 11288
    if-eqz p2, :cond_d

    #@121
    .line 11289
    const-string/jumbo v8, ":"

    #@124
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@127
    .line 11290
    const-string/jumbo v8, "    "

    #@12a
    const/4 v9, 0x1

    #@12b
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@12e
    .line 11284
    :goto_7
    add-int/lit8 v2, v2, -0x1

    #@130
    goto :goto_6

    #@131
    .line 11292
    :cond_d
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@134
    goto :goto_7

    #@135
    .line 11296
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_e
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@137
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@13a
    move-result v8

    #@13b
    if-lez v8, :cond_12

    #@13d
    .line 11297
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@140
    .line 11298
    const-string/jumbo v8, "  Windows waiting to destroy their surface:"

    #@143
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@146
    .line 11299
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@148
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@14b
    move-result v8

    #@14c
    add-int/lit8 v2, v8, -0x1

    #@14e
    .restart local v2    # "i":I
    :goto_8
    if-ltz v2, :cond_12

    #@150
    .line 11300
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@152
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@155
    move-result-object v4

    #@156
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@158
    .line 11301
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_f

    #@15a
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@15d
    move-result v8

    #@15e
    if-eqz v8, :cond_10

    #@160
    .line 11302
    :cond_f
    const-string/jumbo v8, "  Destroy #"

    #@163
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@166
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@169
    const/16 v8, 0x20

    #@16b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@16e
    .line 11303
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@171
    .line 11304
    if-eqz p2, :cond_11

    #@173
    .line 11305
    const-string/jumbo v8, ":"

    #@176
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@179
    .line 11306
    const-string/jumbo v8, "    "

    #@17c
    const/4 v9, 0x1

    #@17d
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@180
    .line 11299
    :cond_10
    :goto_9
    add-int/lit8 v2, v2, -0x1

    #@182
    goto :goto_8

    #@183
    .line 11308
    :cond_11
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@186
    goto :goto_9

    #@187
    .line 11313
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_12
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@189
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@18c
    move-result v8

    #@18d
    if-lez v8, :cond_16

    #@18f
    .line 11314
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@192
    .line 11315
    const-string/jumbo v8, "  Windows losing focus:"

    #@195
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@198
    .line 11316
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@19a
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@19d
    move-result v8

    #@19e
    add-int/lit8 v2, v8, -0x1

    #@1a0
    .restart local v2    # "i":I
    :goto_a
    if-ltz v2, :cond_16

    #@1a2
    .line 11317
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@1a4
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1a7
    move-result-object v4

    #@1a8
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@1aa
    .line 11318
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_13

    #@1ac
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@1af
    move-result v8

    #@1b0
    if-eqz v8, :cond_14

    #@1b2
    .line 11319
    :cond_13
    const-string/jumbo v8, "  Losing #"

    #@1b5
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@1b8
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@1bb
    const/16 v8, 0x20

    #@1bd
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@1c0
    .line 11320
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@1c3
    .line 11321
    if-eqz p2, :cond_15

    #@1c5
    .line 11322
    const-string/jumbo v8, ":"

    #@1c8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@1cb
    .line 11323
    const-string/jumbo v8, "    "

    #@1ce
    const/4 v9, 0x1

    #@1cf
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@1d2
    .line 11316
    :cond_14
    :goto_b
    add-int/lit8 v2, v2, -0x1

    #@1d4
    goto :goto_a

    #@1d5
    .line 11325
    :cond_15
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@1d8
    goto :goto_b

    #@1d9
    .line 11330
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_16
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1db
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@1de
    move-result v8

    #@1df
    if-lez v8, :cond_1a

    #@1e1
    .line 11331
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@1e4
    .line 11332
    const-string/jumbo v8, "  Windows waiting to resize:"

    #@1e7
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@1ea
    .line 11333
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1ec
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@1ef
    move-result v8

    #@1f0
    add-int/lit8 v2, v8, -0x1

    #@1f2
    .restart local v2    # "i":I
    :goto_c
    if-ltz v2, :cond_1a

    #@1f4
    .line 11334
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1f6
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1f9
    move-result-object v4

    #@1fa
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@1fc
    .line 11335
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_17

    #@1fe
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@201
    move-result v8

    #@202
    if-eqz v8, :cond_18

    #@204
    .line 11336
    :cond_17
    const-string/jumbo v8, "  Resizing #"

    #@207
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@20a
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@20d
    const/16 v8, 0x20

    #@20f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@212
    .line 11337
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@215
    .line 11338
    if-eqz p2, :cond_19

    #@217
    .line 11339
    const-string/jumbo v8, ":"

    #@21a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@21d
    .line 11340
    const-string/jumbo v8, "    "

    #@220
    const/4 v9, 0x1

    #@221
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@224
    .line 11333
    :cond_18
    :goto_d
    add-int/lit8 v2, v2, -0x1

    #@226
    goto :goto_c

    #@227
    .line 11342
    :cond_19
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@22a
    goto :goto_d

    #@22b
    .line 11347
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1a
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@22d
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@230
    move-result v8

    #@231
    if-lez v8, :cond_1b

    #@233
    .line 11348
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@236
    .line 11349
    const-string/jumbo v8, "  Clients waiting for these windows to be drawn:"

    #@239
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@23c
    .line 11350
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@23e
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@241
    move-result v8

    #@242
    add-int/lit8 v2, v8, -0x1

    #@244
    .restart local v2    # "i":I
    :goto_e
    if-ltz v2, :cond_1b

    #@246
    .line 11351
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@248
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@24b
    move-result-object v5

    #@24c
    check-cast v5, Lcom/android/server/wm/WindowState;

    #@24e
    .line 11352
    .local v5, "win":Lcom/android/server/wm/WindowState;
    const-string/jumbo v8, "  Waiting #"

    #@251
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@254
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@257
    const/16 v8, 0x20

    #@259
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@25c
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@25f
    .line 11350
    add-int/lit8 v2, v2, -0x1

    #@261
    goto :goto_e

    #@262
    .line 11355
    .end local v2    # "i":I
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_1b
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@265
    .line 11356
    const-string/jumbo v8, "  mCurConfiguration="

    #@268
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@26b
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@26d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@270
    .line 11357
    const-string/jumbo v8, "  mHasPermanentDpad="

    #@273
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@276
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@278
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@27b
    .line 11358
    const-string/jumbo v8, "  mCurrentFocus="

    #@27e
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@281
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@283
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@286
    .line 11359
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@288
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@28a
    if-eq v8, v9, :cond_1c

    #@28c
    .line 11360
    const-string/jumbo v8, "  mLastFocus="

    #@28f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@292
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@294
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@297
    .line 11362
    :cond_1c
    const-string/jumbo v8, "  mFocusedApp="

    #@29a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@29d
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@29f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@2a2
    .line 11363
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@2a4
    if-eqz v8, :cond_1d

    #@2a6
    .line 11364
    const-string/jumbo v8, "  mInputMethodTarget="

    #@2a9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2ac
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@2ae
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@2b1
    .line 11366
    :cond_1d
    const-string/jumbo v8, "  mInTouchMode="

    #@2b4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2b7
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@2b9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@2bc
    .line 11367
    const-string/jumbo v8, " mLayoutSeq="

    #@2bf
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2c2
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@2c4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@2c7
    .line 11368
    const-string/jumbo v8, "  mLastDisplayFreezeDuration="

    #@2ca
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2cd
    .line 11369
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@2cf
    int-to-long v8, v8

    #@2d0
    invoke-static {v8, v9, p1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    #@2d3
    .line 11370
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@2d5
    if-eqz v8, :cond_1e

    #@2d7
    .line 11371
    const-string/jumbo v8, " due to "

    #@2da
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2dd
    .line 11372
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@2df
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@2e2
    .line 11374
    :cond_1e
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@2e5
    .line 11375
    if-eqz p2, :cond_2a

    #@2e7
    .line 11376
    const-string/jumbo v8, "  mSystemDecorLayer="

    #@2ea
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2ed
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    #@2ef
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@2f2
    .line 11377
    const-string/jumbo v8, " mScreenRect="

    #@2f5
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2f8
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    #@2fa
    invoke-virtual {v8}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    #@2fd
    move-result-object v8

    #@2fe
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@301
    .line 11378
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@303
    if-eqz v8, :cond_1f

    #@305
    .line 11379
    const-string/jumbo v8, "  mLastStatusBarVisibility=0x"

    #@308
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@30b
    .line 11380
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@30d
    invoke-static {v8}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@310
    move-result-object v8

    #@311
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@314
    .line 11382
    :cond_1f
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@316
    if-eqz v8, :cond_20

    #@318
    .line 11383
    const-string/jumbo v8, "  mInputMethodWindow="

    #@31b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@31e
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@320
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@323
    .line 11385
    :cond_20
    const-string/jumbo v8, "  mWallpaperTarget="

    #@326
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@329
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@32b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@32e
    .line 11386
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@330
    if-nez v8, :cond_21

    #@332
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@334
    if-eqz v8, :cond_22

    #@336
    .line 11387
    :cond_21
    const-string/jumbo v8, "  mLowerWallpaperTarget="

    #@339
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@33c
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@33e
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@341
    .line 11388
    const-string/jumbo v8, "  mUpperWallpaperTarget="

    #@344
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@347
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@349
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@34c
    .line 11390
    :cond_22
    const-string/jumbo v8, "  mLastWallpaperX="

    #@34f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@352
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    #@354
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    #@357
    .line 11391
    const-string/jumbo v8, " mLastWallpaperY="

    #@35a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@35d
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    #@35f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    #@362
    .line 11392
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetX:I

    #@364
    const/high16 v9, -0x80000000

    #@366
    if-ne v8, v9, :cond_23

    #@368
    .line 11393
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetY:I

    #@36a
    const/high16 v9, -0x80000000

    #@36c
    if-eq v8, v9, :cond_24

    #@36e
    .line 11394
    :cond_23
    const-string/jumbo v8, "  mLastWallpaperDisplayOffsetX="

    #@371
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@374
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetX:I

    #@376
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@379
    .line 11395
    const-string/jumbo v8, " mLastWallpaperDisplayOffsetY="

    #@37c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@37f
    .line 11396
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetY:I

    #@381
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@384
    .line 11398
    :cond_24
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodAnimLayerAdjustment:I

    #@386
    if-nez v8, :cond_25

    #@388
    .line 11399
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    #@38a
    if-eqz v8, :cond_26

    #@38c
    .line 11400
    :cond_25
    const-string/jumbo v8, "  mInputMethodAnimLayerAdjustment="

    #@38f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@392
    .line 11401
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodAnimLayerAdjustment:I

    #@394
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@397
    .line 11402
    const-string/jumbo v8, "  mWallpaperAnimLayerAdjustment="

    #@39a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@39d
    .line 11403
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    #@39f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@3a2
    .line 11405
    :cond_26
    const-string/jumbo v8, "  mSystemBooted="

    #@3a5
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3a8
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@3aa
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@3ad
    .line 11406
    const-string/jumbo v8, " mDisplayEnabled="

    #@3b0
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3b3
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@3b5
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@3b8
    .line 11407
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    #@3bb
    move-result v8

    #@3bc
    if-eqz v8, :cond_29

    #@3be
    .line 11408
    const-string/jumbo v8, "  layoutNeeded on displays="

    #@3c1
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3c4
    .line 11409
    const/4 v1, 0x0

    #@3c5
    :goto_f
    if-ge v1, v3, :cond_28

    #@3c7
    .line 11410
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@3c9
    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@3cc
    move-result-object v0

    #@3cd
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@3cf
    .line 11411
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v8, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@3d1
    if-eqz v8, :cond_27

    #@3d3
    .line 11412
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@3d6
    move-result v8

    #@3d7
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3da
    .line 11409
    :cond_27
    add-int/lit8 v1, v1, 0x1

    #@3dc
    goto :goto_f

    #@3dd
    .line 11415
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_28
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@3e0
    .line 11417
    :cond_29
    const-string/jumbo v8, "  mTransactionSequence="

    #@3e3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3e6
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    #@3e8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@3eb
    .line 11418
    const-string/jumbo v8, "  mDisplayFrozen="

    #@3ee
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3f1
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@3f3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@3f6
    .line 11419
    const-string/jumbo v8, " windows="

    #@3f9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3fc
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@3fe
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@401
    .line 11420
    const-string/jumbo v8, " client="

    #@404
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@407
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@409
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@40c
    .line 11421
    const-string/jumbo v8, " apps="

    #@40f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@412
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@414
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@417
    .line 11422
    const-string/jumbo v8, " waitingForConfig="

    #@41a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@41d
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@41f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@422
    .line 11423
    const-string/jumbo v8, "  mRotation="

    #@425
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@428
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@42a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@42d
    .line 11424
    const-string/jumbo v8, " mAltOrientation="

    #@430
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@433
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@435
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@438
    .line 11425
    const-string/jumbo v8, "  mLastWindowForcedOrientation="

    #@43b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@43e
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@440
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@443
    .line 11426
    const-string/jumbo v8, " mForcedAppOrientation="

    #@446
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@449
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@44b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@44e
    .line 11427
    const-string/jumbo v8, "  mDeferredRotationPauseCount="

    #@451
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@454
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@456
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@459
    .line 11428
    const-string/jumbo v8, "  Animation settings: disabled="

    #@45c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@45f
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@461
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@464
    .line 11429
    const-string/jumbo v8, " window="

    #@467
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@46a
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@46c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    #@46f
    .line 11430
    const-string/jumbo v8, " transition="

    #@472
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@475
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@477
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    #@47a
    .line 11431
    const-string/jumbo v8, " animator="

    #@47d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@480
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@482
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    #@485
    .line 11432
    const-string/jumbo v8, "  mTraversalScheduled="

    #@488
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@48b
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    #@48d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@490
    .line 11433
    const-string/jumbo v8, " mSkipAppTransitionAnimation="

    #@493
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@496
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@498
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@49b
    .line 11434
    const-string/jumbo v8, "  mLayoutToAnim:"

    #@49e
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@4a1
    .line 11435
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@4a3
    const-string/jumbo v9, "    "

    #@4a6
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/AppTransition;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@4a9
    .line 11241
    :cond_2a
    return-void
.end method

.method public enableScreenAfterBoot()V
    .locals 5

    #@0
    .prologue
    .line 5699
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5708
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    monitor-exit v1

    #@8
    .line 5709
    return-void

    #@9
    .line 5711
    :cond_0
    const/4 v0, 0x1

    #@a
    :try_start_1
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@c
    .line 5712
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hideBootMessagesLocked()V

    #@f
    .line 5715
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@11
    const-wide/16 v2, 0x7530

    #@13
    const/16 v4, 0x17

    #@15
    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@18
    monitor-exit v1

    #@19
    .line 5718
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1b
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemBooted()V

    #@1e
    .line 5720
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@21
    .line 5698
    return-void

    #@22
    .line 5699
    :catchall_0
    move-exception v0

    #@23
    monitor-exit v1

    #@24
    throw v0
.end method

.method public enableScreenIfNeeded()V
    .locals 2

    #@0
    .prologue
    .line 5725
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5726
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->enableScreenIfNeededLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 5724
    return-void

    #@8
    .line 5725
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method enableScreenIfNeededLocked()V
    .locals 2

    #@0
    .prologue
    .line 5739
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 5740
    return-void

    #@5
    .line 5742
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@7
    if-nez v0, :cond_1

    #@9
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@b
    if-eqz v0, :cond_2

    #@d
    .line 5745
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@f
    const/16 v1, 0x10

    #@11
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@14
    .line 5730
    return-void

    #@15
    .line 5743
    :cond_2
    return-void
.end method

.method public executeAppTransition()V
    .locals 4

    #@0
    .prologue
    .line 4253
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4254
    const-string/jumbo v3, "executeAppTransition()"

    #@6
    .line 4253
    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 4255
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 4258
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 4261
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1a
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@1d
    move-result v2

    #@1e
    if-eqz v2, :cond_1

    #@20
    .line 4262
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@22
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->setReady()V

    #@25
    .line 4263
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@28
    move-result-wide v0

    #@29
    .line 4265
    .local v0, "origId":J
    :try_start_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2c
    .line 4267
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@2f
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@30
    .line 4252
    return-void

    #@31
    .line 4266
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@32
    .line 4267
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@35
    .line 4266
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@36
    .line 4258
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@37
    monitor-exit v3

    #@38
    throw v2
.end method

.method public exitKeyguardSecurely(Landroid/view/IOnKeyguardExitResult;)V
    .locals 2
    .param p1, "callback"    # Landroid/view/IOnKeyguardExitResult;

    #@0
    .prologue
    .line 5404
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5406
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5409
    :cond_0
    if-nez p1, :cond_1

    #@16
    .line 5410
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v1, "callback == null"

    #@1b
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v0

    #@1f
    .line 5413
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@21
    new-instance v1, Lcom/android/server/wm/WindowManagerService$7;

    #@23
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$7;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IOnKeyguardExitResult;)V

    #@26
    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->exitKeyguardSecurely(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V

    #@29
    .line 5403
    return-void
.end method

.method findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 3607
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@3
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@6
    move-result-object v0

    #@7
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@9
    .line 3608
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-nez v0, :cond_0

    #@b
    .line 3609
    return-object v2

    #@c
    .line 3611
    :cond_0
    iget-object v1, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@e
    return-object v1
.end method

.method findDesiredInputMethodWindowIndexLocked(Z)I
    .locals 13
    .param p1, "willMove"    # Z

    #@0
    .prologue
    .line 1401
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v10

    #@4
    .line 1402
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    const/4 v7, 0x0

    #@5
    .line 1404
    .local v7, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    #@8
    move-result v11

    #@9
    add-int/lit8 v4, v11, -0x1

    #@b
    .local v4, "i":I
    :goto_0
    if-ltz v4, :cond_0

    #@d
    .line 1405
    invoke-virtual {v10, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@10
    move-result-object v9

    #@11
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@13
    .line 1409
    .local v9, "win":Lcom/android/server/wm/WindowState;
    invoke-static {v9}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    #@16
    move-result v11

    #@17
    if-eqz v11, :cond_2

    #@19
    .line 1410
    move-object v7, v9

    #@1a
    .line 1418
    .local v7, "w":Lcom/android/server/wm/WindowState;
    if-nez p1, :cond_0

    #@1c
    .line 1419
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1e
    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->type:I

    #@20
    const/4 v12, 0x3

    #@21
    if-ne v11, v12, :cond_0

    #@23
    .line 1420
    if-lez v4, :cond_0

    #@25
    .line 1421
    add-int/lit8 v11, v4, -0x1

    #@27
    invoke-virtual {v10, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2a
    move-result-object v8

    #@2b
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@2d
    .line 1422
    .local v8, "wb":Lcom/android/server/wm/WindowState;
    iget-object v11, v8, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2f
    iget-object v12, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@31
    if-ne v11, v12, :cond_0

    #@33
    invoke-static {v8}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    #@36
    move-result v11

    #@37
    if-eqz v11, :cond_0

    #@39
    .line 1423
    add-int/lit8 v4, v4, -0x1

    #@3b
    .line 1424
    move-object v7, v8

    #@3c
    .line 1441
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "wb":Lcom/android/server/wm/WindowState;
    .end local v9    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@3e
    .line 1442
    .local v0, "curTarget":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_3

    #@40
    .line 1443
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@43
    move-result v11

    #@44
    .line 1442
    if-eqz v11, :cond_3

    #@46
    .line 1444
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isClosing()Z

    #@49
    move-result v11

    #@4a
    .line 1442
    if-eqz v11, :cond_3

    #@4c
    .line 1445
    if-eqz v7, :cond_1

    #@4e
    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@50
    iget v11, v11, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@52
    iget-object v12, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@54
    iget v12, v12, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@56
    if-le v11, v12, :cond_3

    #@58
    .line 1447
    :cond_1
    invoke-virtual {v10, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@5b
    move-result v11

    #@5c
    add-int/lit8 v11, v11, 0x1

    #@5e
    return v11

    #@5f
    .line 1404
    .end local v0    # "curTarget":Lcom/android/server/wm/WindowState;
    .local v7, "w":Lcom/android/server/wm/WindowState;
    .restart local v9    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v4, v4, -0x1

    #@61
    goto :goto_0

    #@62
    .line 1453
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "win":Lcom/android/server/wm/WindowState;
    .restart local v0    # "curTarget":Lcom/android/server/wm/WindowState;
    :cond_3
    if-eqz p1, :cond_b

    #@64
    if-eqz v7, :cond_b

    #@66
    .line 1454
    if-nez v0, :cond_6

    #@68
    const/4 v6, 0x0

    #@69
    .line 1455
    :goto_1
    if-eqz v6, :cond_b

    #@6b
    .line 1461
    const/4 v3, 0x0

    #@6c
    .line 1462
    .local v3, "highestTarget":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    #@6d
    .line 1463
    .local v2, "highestPos":I
    iget-object v11, v6, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6f
    iget-boolean v11, v11, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    #@71
    if-nez v11, :cond_4

    #@73
    iget-object v11, v6, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@75
    iget-object v11, v11, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@77
    if-eqz v11, :cond_5

    #@79
    .line 1464
    :cond_4
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7c
    move-result-object v1

    #@7d
    .line 1465
    .local v1, "curWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@80
    move-result v5

    #@81
    .line 1466
    .end local v3    # "highestTarget":Lcom/android/server/wm/WindowState;
    .local v5, "pos":I
    :goto_2
    if-ltz v5, :cond_5

    #@83
    .line 1467
    invoke-virtual {v1, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@86
    move-result-object v9

    #@87
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@89
    .line 1468
    .restart local v9    # "win":Lcom/android/server/wm/WindowState;
    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@8b
    if-eq v11, v6, :cond_7

    #@8d
    .line 1482
    .end local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v5    # "pos":I
    .end local v9    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    if-eqz v3, :cond_b

    #@8f
    .line 1488
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@91
    invoke-virtual {v11}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@94
    move-result v11

    #@95
    if-eqz v11, :cond_a

    #@97
    .line 1491
    const/4 v11, 0x1

    #@98
    iput-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@9a
    .line 1492
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@9c
    .line 1493
    add-int/lit8 v11, v2, 0x1

    #@9e
    return v11

    #@9f
    .line 1454
    .end local v2    # "highestPos":I
    :cond_6
    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@a1
    .local v6, "token":Lcom/android/server/wm/AppWindowToken;
    goto :goto_1

    #@a2
    .line 1471
    .end local v6    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .restart local v2    # "highestPos":I
    .restart local v5    # "pos":I
    .restart local v9    # "win":Lcom/android/server/wm/WindowState;
    :cond_7
    iget-boolean v11, v9, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@a4
    if-nez v11, :cond_9

    #@a6
    .line 1472
    if-eqz v3, :cond_8

    #@a8
    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@aa
    iget v11, v11, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@ac
    .line 1473
    iget-object v12, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@ae
    iget v12, v12, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@b0
    .line 1472
    if-le v11, v12, :cond_9

    #@b2
    .line 1474
    :cond_8
    move-object v3, v9

    #@b3
    .line 1475
    .local v3, "highestTarget":Lcom/android/server/wm/WindowState;
    move v2, v5

    #@b4
    .line 1478
    .end local v3    # "highestTarget":Lcom/android/server/wm/WindowState;
    :cond_9
    add-int/lit8 v5, v5, -0x1

    #@b6
    goto :goto_2

    #@b7
    .line 1494
    .end local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v5    # "pos":I
    .end local v9    # "win":Lcom/android/server/wm/WindowState;
    :cond_a
    iget-object v11, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@b9
    invoke-virtual {v11}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    #@bc
    move-result v11

    #@bd
    if-eqz v11, :cond_b

    #@bf
    .line 1495
    iget-object v11, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@c1
    iget v11, v11, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@c3
    iget-object v12, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@c5
    iget v12, v12, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@c7
    if-le v11, v12, :cond_b

    #@c9
    .line 1500
    const/4 v11, 0x1

    #@ca
    iput-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@cc
    .line 1501
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@ce
    .line 1502
    add-int/lit8 v11, v2, 0x1

    #@d0
    return v11

    #@d1
    .line 1509
    .end local v2    # "highestPos":I
    :cond_b
    if-eqz v7, :cond_e

    #@d3
    .line 1510
    if-eqz p1, :cond_c

    #@d5
    .line 1513
    iput-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@d7
    .line 1514
    const/4 v11, 0x0

    #@d8
    iput-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@da
    .line 1515
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@dc
    if-eqz v11, :cond_d

    #@de
    .line 1516
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@e0
    iget-object v11, v11, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@e2
    iget v11, v11, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    #@e4
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->setInputMethodAnimLayerAdjustment(I)V

    #@e7
    .line 1521
    :cond_c
    :goto_3
    add-int/lit8 v11, v4, 0x1

    #@e9
    return v11

    #@ea
    .line 1518
    :cond_d
    const/4 v11, 0x0

    #@eb
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->setInputMethodAnimLayerAdjustment(I)V

    #@ee
    goto :goto_3

    #@ef
    .line 1523
    :cond_e
    if-eqz p1, :cond_f

    #@f1
    .line 1526
    const/4 v11, 0x0

    #@f2
    iput-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@f4
    .line 1527
    const/4 v11, 0x0

    #@f5
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->setInputMethodAnimLayerAdjustment(I)V

    #@f8
    .line 1529
    :cond_f
    const/4 v11, -0x1

    #@f9
    return v11
.end method

.method public finishDrawingWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 3440
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 3442
    .local v2, "origId":J
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 3443
    const/4 v4, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v1

    #@c
    .line 3444
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_2

    #@e
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@10
    invoke-virtual {v4}, Lcom/android/server/wm/WindowStateAnimator;->finishDrawingLocked()Z

    #@13
    move-result v4

    #@14
    if-eqz v4, :cond_2

    #@16
    .line 3445
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@18
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@1a
    const/high16 v6, 0x100000

    #@1c
    and-int/2addr v4, v6

    #@1d
    if-eqz v4, :cond_0

    #@1f
    .line 3446
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@22
    move-result-object v4

    #@23
    iget v6, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@25
    or-int/lit8 v6, v6, 0x4

    #@27
    iput v6, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@29
    .line 3449
    :cond_0
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@2c
    move-result-object v0

    #@2d
    .line 3450
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@2f
    .line 3451
    const/4 v4, 0x1

    #@30
    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@32
    .line 3453
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@35
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@36
    .line 3457
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@39
    .line 3439
    return-void

    #@3a
    .line 3442
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v4

    #@3b
    :try_start_3
    monitor-exit v5

    #@3c
    throw v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@3d
    .line 3456
    :catchall_1
    move-exception v4

    #@3e
    .line 3457
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@41
    .line 3456
    throw v4
.end method

.method public forceStackToFullscreen(IZ)Landroid/content/res/Configuration;
    .locals 5
    .param p1, "stackId"    # I
    .param p2, "forceFullscreen"    # Z

    #@0
    .prologue
    .line 5301
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5302
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5303
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@d
    .line 5304
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "resizeStack: stackId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5305
    const-string/jumbo v4, " not found."

    #@22
    .line 5304
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5301
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5307
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->forceFullscreen(Z)Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_1

    #@37
    .line 5308
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->resizeWindows()V

    #@3a
    .line 5309
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@3d
    move-result-object v1

    #@3e
    const/4 v3, 0x1

    #@3f
    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@41
    .line 5310
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@44
    .line 5312
    :cond_1
    new-instance v1, Landroid/content/res/Configuration;

    #@46
    iget-object v3, v0, Lcom/android/server/wm/TaskStack;->mOverrideConfig:Landroid/content/res/Configuration;

    #@48
    invoke-direct {v1, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@4b
    monitor-exit v2

    #@4c
    return-object v1
.end method

.method public freezeRotation(I)V
    .locals 6
    .param p1, "rotation"    # I

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v4, -0x1

    #@2
    .line 6425
    const-string/jumbo v2, "android.permission.SET_ORIENTATION"

    #@5
    .line 6426
    const-string/jumbo v3, "freezeRotation()"

    #@8
    .line 6425
    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v2

    #@c
    if-nez v2, :cond_0

    #@e
    .line 6427
    new-instance v2, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v3, "Requires SET_ORIENTATION permission"

    #@13
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v2

    #@17
    .line 6429
    :cond_0
    if-lt p1, v4, :cond_1

    #@19
    const/4 v2, 0x3

    #@1a
    if-le p1, v2, :cond_2

    #@1c
    .line 6430
    :cond_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    #@1e
    const-string/jumbo v3, "Rotation argument must be -1 or a valid rotation constant."

    #@21
    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@24
    throw v2

    #@25
    .line 6436
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@28
    move-result-wide v0

    #@29
    .line 6438
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2b
    .line 6439
    if-ne p1, v4, :cond_3

    #@2d
    iget p1, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2f
    .line 6438
    .end local p1    # "rotation":I
    :cond_3
    const/4 v3, 0x1

    #@30
    invoke-interface {v2, v3, p1}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@33
    .line 6441
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@36
    .line 6444
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@39
    .line 6424
    return-void

    #@3a
    .line 6440
    :catchall_0
    move-exception v2

    #@3b
    .line 6441
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@3e
    .line 6440
    throw v2
.end method

.method public getAnimationScale(I)F
    .locals 1
    .param p1, "which"    # I

    #@0
    .prologue
    .line 5578
    packed-switch p1, :pswitch_data_0

    #@3
    .line 5583
    const/4 v0, 0x0

    #@4
    return v0

    #@5
    .line 5579
    :pswitch_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@7
    return v0

    #@8
    .line 5580
    :pswitch_1
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@a
    return v0

    #@b
    .line 5581
    :pswitch_2
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@d
    return v0

    #@e
    .line 5578
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public getAnimationScales()[F
    .locals 3

    #@0
    .prologue
    .line 5588
    const/4 v0, 0x3

    #@1
    new-array v0, v0, [F

    #@3
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@5
    const/4 v2, 0x0

    #@6
    aput v1, v0, v2

    #@8
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@a
    const/4 v2, 0x1

    #@b
    aput v1, v0, v2

    #@d
    .line 5589
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@f
    const/4 v2, 0x2

    #@10
    aput v1, v0, v2

    #@12
    .line 5588
    return-object v0
.end method

.method public getAppOrientation(Landroid/view/IApplicationToken;)I
    .locals 3
    .param p1, "token"    # Landroid/view/IApplicationToken;

    #@0
    .prologue
    .line 4067
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 4068
    :try_start_0
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@6
    move-result-object v1

    #@7
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@a
    move-result-object v0

    #@b
    .line 4069
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_0

    #@d
    .line 4070
    const/4 v1, -0x1

    #@e
    monitor-exit v2

    #@f
    return v1

    #@10
    .line 4073
    :cond_0
    :try_start_1
    iget v1, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@12
    monitor-exit v2

    #@13
    return v1

    #@14
    .line 4067
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@15
    monitor-exit v2

    #@16
    throw v1
.end method

.method public getBaseDisplayDensity(I)I
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8561
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8562
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8563
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 8564
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@15
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@16
    .line 8565
    :try_start_1
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@18
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@19
    monitor-exit v2

    #@1a
    return v3

    #@1b
    .line 8564
    :catchall_0
    move-exception v3

    #@1c
    :try_start_3
    monitor-exit v1

    #@1d
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@1e
    .line 8561
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v1

    #@1f
    monitor-exit v2

    #@20
    throw v1

    #@21
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v2

    #@22
    .line 8569
    const/4 v1, -0x1

    #@23
    return v1
.end method

.method public getBaseDisplaySize(ILandroid/graphics/Point;)V
    .locals 4
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    #@0
    .prologue
    .line 8365
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8366
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8367
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 8368
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@15
    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@16
    .line 8369
    :try_start_1
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@18
    iput v1, p2, Landroid/graphics/Point;->x:I

    #@1a
    .line 8370
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@1c
    iput v1, p2, Landroid/graphics/Point;->y:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1e
    :try_start_2
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@1f
    :cond_0
    monitor-exit v2

    #@20
    .line 8364
    return-void

    #@21
    .line 8368
    :catchall_0
    move-exception v1

    #@22
    :try_start_3
    monitor-exit v3

    #@23
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@24
    .line 8365
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v1

    #@25
    monitor-exit v2

    #@26
    throw v1
.end method

.method public getCameraLensCoverState()I
    .locals 6

    #@0
    .prologue
    const/4 v5, -0x1

    #@1
    const/4 v4, 0x0

    #@2
    .line 5633
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@4
    const/16 v2, -0x100

    #@6
    .line 5634
    const/16 v3, 0x9

    #@8
    .line 5633
    invoke-virtual {v1, v5, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    #@b
    move-result v0

    #@c
    .line 5635
    .local v0, "sw":I
    if-lez v0, :cond_0

    #@e
    .line 5637
    const/4 v1, 0x1

    #@f
    return v1

    #@10
    .line 5638
    :cond_0
    if-nez v0, :cond_1

    #@12
    .line 5640
    return v4

    #@13
    .line 5643
    :cond_1
    return v5
.end method

.method public getCurrentAnimatorScale()F
    .locals 2

    #@0
    .prologue
    .line 5594
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5595
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    const/4 v0, 0x0

    #@8
    :goto_0
    monitor-exit v1

    #@9
    return v0

    #@a
    :cond_0
    :try_start_1
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    goto :goto_0

    #@d
    .line 5594
    :catchall_0
    move-exception v0

    #@e
    monitor-exit v1

    #@f
    throw v0
.end method

.method public getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;
    .locals 1

    #@0
    .prologue
    .line 11758
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@4
    move-result-object v0

    #@5
    return-object v0
.end method

.method public getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;
    .locals 1

    #@0
    .prologue
    .line 11766
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;
    .locals 1

    #@0
    .prologue
    .line 11762
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11746
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v1

    #@6
    check-cast v1, Lcom/android/server/wm/DisplayContent;

    #@8
    .line 11747
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    #@a
    .line 11748
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@c
    invoke-virtual {v2, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    #@f
    move-result-object v0

    #@10
    .line 11749
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_0

    #@12
    .line 11750
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;

    #@15
    move-result-object v1

    #@16
    .line 11753
    .end local v0    # "display":Landroid/view/Display;
    :cond_0
    return-object v1
.end method

.method public getInitialDisplayDensity(I)I
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8548
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8549
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8550
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 8551
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@15
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@16
    .line 8552
    :try_start_1
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@18
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@19
    monitor-exit v2

    #@1a
    return v3

    #@1b
    .line 8551
    :catchall_0
    move-exception v3

    #@1c
    :try_start_3
    monitor-exit v1

    #@1d
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@1e
    .line 8548
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v1

    #@1f
    monitor-exit v2

    #@20
    throw v1

    #@21
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    monitor-exit v2

    #@22
    .line 8556
    const/4 v1, -0x1

    #@23
    return v1
.end method

.method public getInitialDisplaySize(ILandroid/graphics/Point;)V
    .locals 4
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    #@0
    .prologue
    .line 8352
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8353
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8354
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 8355
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@15
    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@16
    .line 8356
    :try_start_1
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@18
    iput v1, p2, Landroid/graphics/Point;->x:I

    #@1a
    .line 8357
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@1c
    iput v1, p2, Landroid/graphics/Point;->y:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1e
    :try_start_2
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@1f
    :cond_0
    monitor-exit v2

    #@20
    .line 8351
    return-void

    #@21
    .line 8355
    :catchall_0
    move-exception v1

    #@22
    :try_start_3
    monitor-exit v3

    #@23
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@24
    .line 8352
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v1

    #@25
    monitor-exit v2

    #@26
    throw v1
.end method

.method public getInputMethodWindowVisibleHeight()I
    .locals 2

    #@0
    .prologue
    .line 11076
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 11077
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->getInputMethodWindowVisibleHeightLw()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v0

    #@9
    monitor-exit v1

    #@a
    return v0

    #@b
    .line 11076
    :catchall_0
    move-exception v0

    #@c
    monitor-exit v1

    #@d
    throw v0
.end method

.method public getInputMonitor()Lcom/android/server/wm/InputMonitor;
    .locals 1

    #@0
    .prologue
    .line 1004
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@2
    return-object v0
.end method

.method public getLidState()I
    .locals 5

    #@0
    .prologue
    const/4 v4, -0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 5616
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@4
    const/16 v2, -0x100

    #@6
    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    #@9
    move-result v0

    #@a
    .line 5618
    .local v0, "sw":I
    if-lez v0, :cond_0

    #@c
    .line 5620
    return v3

    #@d
    .line 5621
    :cond_0
    if-nez v0, :cond_1

    #@f
    .line 5623
    const/4 v1, 0x1

    #@10
    return v1

    #@11
    .line 5626
    :cond_1
    return v4
.end method

.method public getOrientationLocked()I
    .locals 21

    #@0
    .prologue
    .line 3796
    move-object/from16 v0, p0

    #@2
    iget-boolean v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@4
    move/from16 v19, v0

    #@6
    if-eqz v19, :cond_0

    #@8
    .line 3797
    move-object/from16 v0, p0

    #@a
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@c
    move/from16 v19, v0

    #@e
    const/16 v20, -0x1

    #@10
    move/from16 v0, v19

    #@12
    move/from16 v1, v20

    #@14
    if-eq v0, v1, :cond_9

    #@16
    .line 3805
    move-object/from16 v0, p0

    #@18
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@1a
    move/from16 v19, v0

    #@1c
    return v19

    #@1d
    .line 3809
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@20
    move-result-object v18

    #@21
    .line 3810
    .local v18, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowList;->size()I

    #@24
    move-result v19

    #@25
    add-int/lit8 v10, v19, -0x1

    #@27
    .local v10, "pos":I
    :goto_0
    if-ltz v10, :cond_1

    #@29
    .line 3811
    move-object/from16 v0, v18

    #@2b
    invoke-virtual {v0, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2e
    move-result-object v16

    #@2f
    check-cast v16, Lcom/android/server/wm/WindowState;

    #@31
    .line 3812
    .local v16, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v16

    #@33
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@35
    move-object/from16 v19, v0

    #@37
    if-eqz v19, :cond_3

    #@39
    .line 3832
    .end local v16    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    const/16 v19, -0x1

    #@3b
    move/from16 v0, v19

    #@3d
    move-object/from16 v1, p0

    #@3f
    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@41
    .line 3834
    move-object/from16 v0, p0

    #@43
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@45
    move-object/from16 v19, v0

    #@47
    invoke-interface/range {v19 .. v19}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    #@4a
    move-result v19

    #@4b
    if-eqz v19, :cond_9

    #@4d
    .line 3838
    move-object/from16 v0, p0

    #@4f
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@51
    move-object/from16 v19, v0

    #@53
    invoke-interface/range {v19 .. v19}, Landroid/view/WindowManagerPolicy;->getWinShowWhenLockedLw()Landroid/view/WindowManagerPolicy$WindowState;

    #@56
    move-result-object v17

    #@57
    check-cast v17, Lcom/android/server/wm/WindowState;

    #@59
    .line 3839
    .local v17, "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    if-nez v17, :cond_7

    #@5b
    .line 3840
    const/4 v2, 0x0

    #@5c
    .line 3841
    :goto_1
    if-eqz v2, :cond_8

    #@5e
    .line 3842
    iget v11, v2, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@60
    .line 3843
    .local v11, "req":I
    const/16 v19, 0x3

    #@62
    move/from16 v0, v19

    #@64
    if-ne v11, v0, :cond_2

    #@66
    .line 3844
    move-object/from16 v0, p0

    #@68
    iget v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@6a
    .line 3848
    :cond_2
    return v11

    #@6b
    .line 3817
    .end local v11    # "req":I
    .end local v17    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .restart local v16    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@6e
    move-result v19

    #@6f
    if-eqz v19, :cond_4

    #@71
    move-object/from16 v0, v16

    #@73
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    #@75
    move/from16 v19, v0

    #@77
    if-eqz v19, :cond_4

    #@79
    .line 3820
    move-object/from16 v0, v16

    #@7b
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@7d
    move-object/from16 v19, v0

    #@7f
    move-object/from16 v0, v19

    #@81
    iget v11, v0, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    #@83
    .line 3821
    .restart local v11    # "req":I
    const/16 v19, -0x1

    #@85
    move/from16 v0, v19

    #@87
    if-eq v11, v0, :cond_4

    #@89
    .line 3822
    const/16 v19, 0x3

    #@8b
    move/from16 v0, v19

    #@8d
    if-ne v11, v0, :cond_5

    #@8f
    .line 3810
    .end local v11    # "req":I
    :cond_4
    add-int/lit8 v10, v10, -0x1

    #@91
    goto :goto_0

    #@92
    .line 3827
    .restart local v11    # "req":I
    :cond_5
    move-object/from16 v0, p0

    #@94
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@96
    move-object/from16 v19, v0

    #@98
    move-object/from16 v0, v16

    #@9a
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@9c
    move-object/from16 v20, v0

    #@9e
    invoke-interface/range {v19 .. v20}, Landroid/view/WindowManagerPolicy;->isKeyguardHostWindow(Landroid/view/WindowManager$LayoutParams;)Z

    #@a1
    move-result v19

    #@a2
    if-eqz v19, :cond_6

    #@a4
    .line 3828
    move-object/from16 v0, p0

    #@a6
    iput v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@a8
    .line 3830
    :cond_6
    move-object/from16 v0, p0

    #@aa
    iput v11, v0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@ac
    return v11

    #@ad
    .line 3840
    .end local v11    # "req":I
    .end local v16    # "win":Lcom/android/server/wm/WindowState;
    .restart local v17    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    :cond_7
    move-object/from16 v0, v17

    #@af
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@b1
    .local v2, "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    goto :goto_1

    #@b2
    .line 3852
    .end local v2    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    move-object/from16 v0, p0

    #@b4
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@b6
    move/from16 v19, v0

    #@b8
    return v19

    #@b9
    .line 3857
    .end local v10    # "pos":I
    .end local v17    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .end local v18    # "windows":Lcom/android/server/wm/WindowList;
    :cond_9
    const/4 v8, -0x1

    #@ba
    .line 3858
    .local v8, "lastOrientation":I
    const/4 v5, 0x0

    #@bb
    .line 3859
    .local v5, "findingBehind":Z
    const/4 v7, 0x0

    #@bc
    .line 3861
    .local v7, "lastFullscreen":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@bf
    move-result-object v4

    #@c0
    .line 3862
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@c3
    move-result-object v13

    #@c4
    .line 3863
    .local v13, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    #@c7
    move-result v19

    #@c8
    add-int/lit8 v12, v19, -0x1

    #@ca
    .end local v5    # "findingBehind":Z
    .end local v7    # "lastFullscreen":Z
    .local v12, "taskNdx":I
    :goto_2
    if-ltz v12, :cond_12

    #@cc
    .line 3864
    invoke-virtual {v13, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@cf
    move-result-object v19

    #@d0
    check-cast v19, Lcom/android/server/wm/Task;

    #@d2
    move-object/from16 v0, v19

    #@d4
    iget-object v15, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@d6
    .line 3865
    .local v15, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v15}, Lcom/android/server/wm/AppTokenList;->size()I

    #@d9
    move-result v19

    #@da
    add-int/lit8 v6, v19, -0x1

    #@dc
    .line 3866
    .local v6, "firstToken":I
    move v14, v6

    #@dd
    .local v14, "tokenNdx":I
    :goto_3
    if-ltz v14, :cond_11

    #@df
    .line 3867
    invoke-virtual {v15, v14}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@e2
    move-result-object v3

    #@e3
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@e5
    .line 3873
    .local v3, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v5, :cond_b

    #@e7
    .line 3874
    iget-boolean v0, v3, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@e9
    move/from16 v19, v0

    #@eb
    if-nez v19, :cond_b

    #@ed
    iget-boolean v0, v3, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@ef
    move/from16 v19, v0

    #@f1
    .line 3873
    if-eqz v19, :cond_b

    #@f3
    .line 3866
    :cond_a
    :goto_4
    add-int/lit8 v14, v14, -0x1

    #@f5
    goto :goto_3

    #@f6
    .line 3880
    :cond_b
    if-ne v14, v6, :cond_c

    #@f8
    .line 3886
    const/16 v19, 0x3

    #@fa
    move/from16 v0, v19

    #@fc
    if-eq v8, v0, :cond_c

    #@fe
    if-eqz v7, :cond_c

    #@100
    .line 3890
    return v8

    #@101
    .line 3895
    :cond_c
    iget-boolean v0, v3, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@103
    move/from16 v19, v0

    #@105
    if-nez v19, :cond_a

    #@107
    iget-boolean v0, v3, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    #@109
    move/from16 v19, v0

    #@10b
    if-nez v19, :cond_a

    #@10d
    .line 3901
    if-nez v14, :cond_d

    #@10f
    .line 3903
    iget v8, v3, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@111
    .line 3906
    :cond_d
    iget v9, v3, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@113
    .line 3910
    .local v9, "or":I
    iget-boolean v7, v3, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@115
    .line 3911
    .local v7, "lastFullscreen":Z
    if-eqz v7, :cond_e

    #@117
    const/16 v19, 0x3

    #@119
    move/from16 v0, v19

    #@11b
    if-eq v9, v0, :cond_e

    #@11d
    .line 3914
    return v9

    #@11e
    .line 3917
    :cond_e
    const/16 v19, -0x1

    #@120
    move/from16 v0, v19

    #@122
    if-eq v9, v0, :cond_f

    #@124
    .line 3918
    const/16 v19, 0x3

    #@126
    move/from16 v0, v19

    #@128
    if-eq v9, v0, :cond_f

    #@12a
    .line 3921
    return v9

    #@12b
    .line 3923
    :cond_f
    const/16 v19, 0x3

    #@12d
    move/from16 v0, v19

    #@12f
    if-ne v9, v0, :cond_10

    #@131
    const/16 v19, 0x1

    #@133
    :goto_5
    or-int v5, v5, v19

    #@135
    .local v5, "findingBehind":Z
    goto :goto_4

    #@136
    .end local v5    # "findingBehind":Z
    :cond_10
    const/16 v19, 0x0

    #@138
    goto :goto_5

    #@139
    .line 3863
    .end local v3    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v7    # "lastFullscreen":Z
    .end local v9    # "or":I
    :cond_11
    add-int/lit8 v12, v12, -0x1

    #@13b
    goto :goto_2

    #@13c
    .line 3930
    .end local v6    # "firstToken":I
    .end local v14    # "tokenNdx":I
    .end local v15    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_12
    move-object/from16 v0, p0

    #@13e
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@140
    move/from16 v19, v0

    #@142
    return v19
.end method

.method public getPendingAppTransition()I
    .locals 1

    #@0
    .prologue
    .line 4195
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public getPreferredOptionsPanelGravity()I
    .locals 8

    #@0
    .prologue
    const v7, 0x800053

    #@3
    const/16 v6, 0x55

    #@5
    const/16 v5, 0x51

    #@7
    .line 6759
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@9
    monitor-enter v3

    #@a
    .line 6760
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getRotation()I

    #@d
    move-result v1

    #@e
    .line 6763
    .local v1, "rotation":I
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@11
    move-result-object v0

    #@12
    .line 6764
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v2, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@14
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    if-ge v2, v4, :cond_0

    #@18
    .line 6766
    packed-switch v1, :pswitch_data_0

    #@1b
    :pswitch_0
    monitor-exit v3

    #@1c
    .line 6769
    return v5

    #@1d
    :pswitch_1
    monitor-exit v3

    #@1e
    .line 6771
    return v6

    #@1f
    :pswitch_2
    monitor-exit v3

    #@20
    .line 6773
    return v5

    #@21
    :pswitch_3
    monitor-exit v3

    #@22
    .line 6775
    return v7

    #@23
    .line 6780
    :cond_0
    packed-switch v1, :pswitch_data_1

    #@26
    :pswitch_4
    monitor-exit v3

    #@27
    .line 6783
    return v6

    #@28
    :pswitch_5
    monitor-exit v3

    #@29
    .line 6785
    return v5

    #@2a
    :pswitch_6
    monitor-exit v3

    #@2b
    .line 6787
    return v7

    #@2c
    :pswitch_7
    monitor-exit v3

    #@2d
    .line 6789
    return v5

    #@2e
    .line 6759
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "rotation":I
    :catchall_0
    move-exception v2

    #@2f
    monitor-exit v3

    #@30
    throw v2

    #@31
    .line 6766
    nop

    #@32
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch

    #@3e
    .line 6780
    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_7
    .end packed-switch
.end method

.method public getRotation()I
    .locals 1

    #@0
    .prologue
    .line 6681
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2
    return v0
.end method

.method public getStackBounds(ILandroid/graphics/Rect;)V
    .locals 2
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5270
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@8
    .line 5271
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_0

    #@a
    .line 5272
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    #@d
    .line 5273
    return-void

    #@e
    .line 5275
    :cond_0
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V

    #@11
    .line 5269
    return-void
.end method

.method public getStackIdWithBounds(Landroid/graphics/Rect;)I
    .locals 5
    .param p1, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5281
    new-instance v2, Landroid/graphics/Rect;

    #@2
    invoke-direct {v2}, Landroid/graphics/Rect;-><init>()V

    #@5
    .line 5282
    .local v2, "stackBounds":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@7
    monitor-enter v4

    #@8
    .line 5283
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@a
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@d
    move-result v3

    #@e
    add-int/lit8 v0, v3, -0x1

    #@10
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    #@12
    .line 5284
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@14
    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@17
    move-result-object v1

    #@18
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@1a
    .line 5285
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    iget v3, v1, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@1c
    if-eqz v3, :cond_0

    #@1e
    .line 5286
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    #@21
    .line 5287
    invoke-virtual {v2, p1}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    #@24
    move-result v3

    #@25
    if-eqz v3, :cond_0

    #@27
    .line 5288
    iget v3, v1, Lcom/android/server/wm/TaskStack;->mStackId:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@29
    monitor-exit v4

    #@2a
    return v3

    #@2b
    .line 5283
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@2d
    goto :goto_0

    #@2e
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_1
    monitor-exit v4

    #@2f
    .line 5293
    const/4 v3, -0x1

    #@30
    return v3

    #@31
    .line 5282
    .end local v0    # "i":I
    :catchall_0
    move-exception v3

    #@32
    monitor-exit v4

    #@33
    throw v3
.end method

.method getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;
    .locals 5
    .param p1, "token"    # Lcom/android/server/wm/WindowToken;
    .param p2, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 1066
    new-instance v3, Lcom/android/server/wm/WindowList;

    #@2
    invoke-direct {v3}, Lcom/android/server/wm/WindowList;-><init>()V

    #@5
    .line 1067
    .local v3, "windowList":Lcom/android/server/wm/WindowList;
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@7
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@a
    move-result v0

    #@b
    .line 1068
    .local v0, "count":I
    const/4 v1, 0x0

    #@c
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@e
    .line 1069
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@10
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@13
    move-result-object v2

    #@14
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@16
    .line 1070
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@19
    move-result-object v4

    #@1a
    if-ne v4, p2, :cond_0

    #@1c
    .line 1071
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@1f
    .line 1068
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@21
    goto :goto_0

    #@22
    .line 1074
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    return-object v3
.end method

.method public getTransitionAnimationScaleLocked()F
    .locals 1

    #@0
    .prologue
    .line 5573
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    const/4 v0, 0x0

    #@5
    :goto_0
    return v0

    #@6
    :cond_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@8
    goto :goto_0
.end method

.method public getWindowAnimationScaleLocked()F
    .locals 1

    #@0
    .prologue
    .line 5569
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    const/4 v0, 0x0

    #@5
    :goto_0
    return v0

    #@6
    :cond_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@8
    goto :goto_0
.end method

.method public getWindowContentFrameStats(Landroid/os/IBinder;)Landroid/view/WindowContentFrameStats;
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 11121
    const-string/jumbo v3, "android.permission.FRAME_STATS"

    #@4
    .line 11122
    const-string/jumbo v4, "getWindowContentFrameStats()"

    #@7
    .line 11121
    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v3

    #@b
    if-nez v3, :cond_0

    #@d
    .line 11123
    new-instance v3, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v4, "Requires FRAME_STATS permission"

    #@12
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v3

    #@16
    .line 11125
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@18
    monitor-enter v4

    #@19
    .line 11126
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1e
    move-result-object v2

    #@1f
    check-cast v2, Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@21
    .line 11127
    .local v2, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_1

    #@23
    monitor-exit v4

    #@24
    .line 11128
    return-object v5

    #@25
    .line 11130
    :cond_1
    :try_start_1
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@27
    iget-object v1, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    .line 11131
    .local v1, "surfaceControl":Landroid/view/SurfaceControl;
    if-nez v1, :cond_2

    #@2b
    monitor-exit v4

    #@2c
    .line 11132
    return-object v5

    #@2d
    .line 11134
    :cond_2
    :try_start_2
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@2f
    if-nez v3, :cond_3

    #@31
    .line 11135
    new-instance v3, Landroid/view/WindowContentFrameStats;

    #@33
    invoke-direct {v3}, Landroid/view/WindowContentFrameStats;-><init>()V

    #@36
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@38
    .line 11137
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@3a
    .line 11138
    .local v0, "stats":Landroid/view/WindowContentFrameStats;
    invoke-virtual {v1, v0}, Landroid/view/SurfaceControl;->getContentFrameStats(Landroid/view/WindowContentFrameStats;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@3d
    move-result v3

    #@3e
    if-nez v3, :cond_4

    #@40
    monitor-exit v4

    #@41
    .line 11139
    return-object v5

    #@42
    :cond_4
    monitor-exit v4

    #@43
    .line 11141
    return-object v0

    #@44
    .line 11125
    .end local v0    # "stats":Landroid/view/WindowContentFrameStats;
    .end local v1    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v2    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@45
    monitor-exit v4

    #@46
    throw v3
.end method

.method public getWindowDisplayFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .locals 3
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outDisplayFrame"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 2986
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2987
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    .line 2988
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_0

    #@a
    .line 2989
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@d
    monitor-exit v2

    #@e
    .line 2990
    return-void

    #@f
    .line 2992
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    #@11
    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@14
    monitor-exit v2

    #@15
    .line 2985
    return-void

    #@16
    .line 2986
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@17
    monitor-exit v2

    #@18
    throw v1
.end method

.method public getWindowId(Landroid/os/IBinder;)Landroid/view/IWindowId;
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 3065
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 3066
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@9
    move-result-object v0

    #@a
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@c
    .line 3067
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@e
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mWindowId:Landroid/view/IWindowId;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    return-object v1

    #@12
    .line 3065
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method public getWindowListLocked(I)Lcom/android/server/wm/WindowList;
    .locals 2
    .param p1, "displayId"    # I

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 11784
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@4
    move-result-object v0

    #@5
    .line 11785
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@a
    move-result-object v1

    #@b
    :cond_0
    return-object v1
.end method

.method public getWindowListLocked(Landroid/view/Display;)Lcom/android/server/wm/WindowList;
    .locals 1
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 11775
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@3
    move-result v0

    #@4
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getWindowListLocked(I)Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getWindowManagerLock()Ljava/lang/Object;
    .locals 1

    #@0
    .prologue
    .line 11839
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    return-object v0
.end method

.method public handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;)I
    .locals 55
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;

    #@0
    .prologue
    .line 9186
    const/16 v22, 0x0

    #@2
    .line 9188
    .local v22, "changes":I
    move-object/from16 v0, p0

    #@4
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@6
    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    #@9
    move-result v19

    #@a
    .line 9189
    .local v19, "appsCount":I
    const/16 v35, 0x1

    #@c
    .line 9194
    .local v35, "goodToGo":Z
    move-object/from16 v0, p0

    #@e
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@10
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isTimeout()Z

    #@13
    move-result v2

    #@14
    if-nez v2, :cond_8

    #@16
    .line 9195
    const/16 v36, 0x0

    #@18
    .local v36, "i":I
    :goto_0
    move/from16 v0, v36

    #@1a
    move/from16 v1, v19

    #@1c
    if-ge v0, v1, :cond_2

    #@1e
    if-eqz v35, :cond_2

    #@20
    .line 9196
    move-object/from16 v0, p0

    #@22
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@24
    move/from16 v0, v36

    #@26
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    #@29
    move-result-object v3

    #@2a
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@2c
    .line 9202
    .local v3, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@2e
    if-nez v2, :cond_0

    #@30
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@32
    if-eqz v2, :cond_1

    #@34
    .line 9195
    :cond_0
    :goto_1
    add-int/lit8 v36, v36, 0x1

    #@36
    goto :goto_0

    #@37
    .line 9203
    :cond_1
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@39
    if-nez v2, :cond_0

    #@3b
    .line 9204
    const/16 v35, 0x0

    #@3d
    goto :goto_1

    #@3e
    .line 9208
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_2
    if-eqz v35, :cond_8

    #@40
    move-object/from16 v0, p0

    #@42
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@44
    move-object/from16 v0, p0

    #@46
    invoke-direct {v0, v2}, Lcom/android/server/wm/WindowManagerService;->isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z

    #@49
    move-result v2

    #@4a
    if-eqz v2, :cond_8

    #@4c
    .line 9209
    const/16 v51, 0x1

    #@4e
    .line 9210
    .local v51, "wallpaperGoodToGo":Z
    move-object/from16 v0, p0

    #@50
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@52
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@55
    move-result v2

    #@56
    add-int/lit8 v26, v2, -0x1

    #@58
    .line 9211
    .local v26, "curTokenIndex":I
    :goto_2
    if-ltz v26, :cond_7

    #@5a
    .line 9210
    if-eqz v51, :cond_7

    #@5c
    .line 9212
    move-object/from16 v0, p0

    #@5e
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@60
    move/from16 v0, v26

    #@62
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@65
    move-result-object v44

    #@66
    check-cast v44, Lcom/android/server/wm/WindowToken;

    #@68
    .line 9213
    .local v44, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, v44

    #@6a
    iget-object v2, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@6c
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@6f
    move-result v2

    #@70
    add-int/lit8 v27, v2, -0x1

    #@72
    .local v27, "curWallpaperIndex":I
    :goto_3
    if-ltz v27, :cond_6

    #@74
    .line 9215
    move-object/from16 v0, v44

    #@76
    iget-object v2, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@78
    move/from16 v0, v27

    #@7a
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@7d
    move-result-object v50

    #@7e
    check-cast v50, Lcom/android/server/wm/WindowState;

    #@80
    .line 9216
    .local v50, "wallpaper":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v50

    #@82
    iget-boolean v2, v0, Lcom/android/server/wm/WindowState;->mWallpaperVisible:Z

    #@84
    if-eqz v2, :cond_3

    #@86
    invoke-virtual/range {v50 .. v50}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@89
    move-result v2

    #@8a
    if-eqz v2, :cond_4

    #@8c
    .line 9214
    :cond_3
    add-int/lit8 v27, v27, -0x1

    #@8e
    goto :goto_3

    #@8f
    .line 9218
    :cond_4
    const/16 v51, 0x0

    #@91
    .line 9219
    move-object/from16 v0, p0

    #@93
    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperDrawState:I

    #@95
    const/4 v5, 0x2

    #@96
    if-eq v2, v5, :cond_5

    #@98
    .line 9221
    const/16 v35, 0x0

    #@9a
    .line 9223
    :cond_5
    move-object/from16 v0, p0

    #@9c
    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperDrawState:I

    #@9e
    if-nez v2, :cond_6

    #@a0
    .line 9224
    const/4 v2, 0x1

    #@a1
    move-object/from16 v0, p0

    #@a3
    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperDrawState:I

    #@a5
    .line 9225
    move-object/from16 v0, p0

    #@a7
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@a9
    const/16 v5, 0x27

    #@ab
    invoke-virtual {v2, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@ae
    .line 9226
    move-object/from16 v0, p0

    #@b0
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@b2
    const/16 v5, 0x27

    #@b4
    .line 9227
    const-wide/16 v10, 0x1f4

    #@b6
    .line 9226
    invoke-virtual {v2, v5, v10, v11}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@b9
    .line 9211
    .end local v50    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_6
    add-int/lit8 v26, v26, -0x1

    #@bb
    goto :goto_2

    #@bc
    .line 9236
    .end local v27    # "curWallpaperIndex":I
    .end local v44    # "token":Lcom/android/server/wm/WindowToken;
    :cond_7
    if-eqz v51, :cond_8

    #@be
    .line 9237
    const/4 v2, 0x0

    #@bf
    move-object/from16 v0, p0

    #@c1
    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperDrawState:I

    #@c3
    .line 9238
    move-object/from16 v0, p0

    #@c5
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@c7
    const/16 v5, 0x27

    #@c9
    invoke-virtual {v2, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@cc
    .line 9242
    .end local v26    # "curTokenIndex":I
    .end local v36    # "i":I
    .end local v51    # "wallpaperGoodToGo":Z
    :cond_8
    if-eqz v35, :cond_2c

    #@ce
    .line 9244
    move-object/from16 v0, p0

    #@d0
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@d2
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    #@d5
    move-result v6

    #@d6
    .line 9245
    .local v6, "transit":I
    move-object/from16 v0, p0

    #@d8
    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@da
    if-eqz v2, :cond_9

    #@dc
    .line 9246
    const/4 v6, -0x1

    #@dd
    .line 9248
    :cond_9
    const/4 v2, 0x0

    #@de
    move-object/from16 v0, p0

    #@e0
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@e2
    .line 9249
    move-object/from16 v0, p0

    #@e4
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@e6
    invoke-interface {v2}, Ljava/util/List;->clear()V

    #@e9
    .line 9251
    move-object/from16 v0, p0

    #@eb
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@ed
    const/16 v5, 0xd

    #@ef
    invoke-virtual {v2, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@f2
    .line 9253
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked()V

    #@f5
    .line 9257
    move-object/from16 v0, p0

    #@f7
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@f9
    if-eqz v2, :cond_a

    #@fb
    move-object/from16 v0, p0

    #@fd
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@ff
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@101
    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    #@104
    move-result v2

    #@105
    if-eqz v2, :cond_a

    #@107
    .line 9258
    move-object/from16 v0, p0

    #@109
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@10b
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@10d
    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isDummyAnimation()Z

    #@110
    move-result v2

    #@111
    if-eqz v2, :cond_e

    #@113
    .line 9259
    :cond_a
    move-object/from16 v0, p0

    #@115
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@117
    move-object/from16 v41, v0

    #@119
    .line 9261
    :goto_4
    move-object/from16 v0, p0

    #@11b
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@11d
    const/4 v5, 0x0

    #@11e
    iput-boolean v5, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    #@120
    .line 9265
    const/4 v4, 0x0

    #@121
    .line 9266
    .local v4, "animLp":Landroid/view/WindowManager$LayoutParams;
    const/16 v20, -0x1

    #@123
    .line 9267
    .local v20, "bestAnimLayer":I
    const/16 v34, 0x0

    #@125
    .line 9268
    .local v34, "fullscreenAnim":Z
    const/4 v8, 0x0

    #@126
    .line 9276
    .local v8, "voiceInteraction":Z
    const/16 v43, 0x0

    #@128
    .line 9277
    .local v43, "openingAppHasWallpaper":Z
    const/16 v24, 0x0

    #@12a
    .line 9280
    .local v24, "closingAppHasWallpaper":Z
    move-object/from16 v0, p0

    #@12c
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@12e
    if-nez v2, :cond_f

    #@130
    .line 9281
    const/16 v49, 0x0

    #@132
    .local v49, "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    const/16 v39, 0x0

    #@134
    .line 9297
    .end local v49    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    :goto_5
    move-object/from16 v0, p0

    #@136
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@138
    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    #@13b
    move-result v25

    #@13c
    .line 9298
    .local v25, "closingAppsCount":I
    move-object/from16 v0, p0

    #@13e
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@140
    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    #@143
    move-result v2

    #@144
    add-int v19, v25, v2

    #@146
    .line 9299
    const/16 v36, 0x0

    #@148
    .end local v4    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "voiceInteraction":Z
    .restart local v36    # "i":I
    :goto_6
    move/from16 v0, v36

    #@14a
    move/from16 v1, v19

    #@14c
    if-ge v0, v1, :cond_13

    #@14e
    .line 9301
    move/from16 v0, v36

    #@150
    move/from16 v1, v25

    #@152
    if-ge v0, v1, :cond_10

    #@154
    .line 9302
    move-object/from16 v0, p0

    #@156
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@158
    move/from16 v0, v36

    #@15a
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    #@15d
    move-result-object v3

    #@15e
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@160
    .line 9303
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v39

    #@162
    if-eq v3, v0, :cond_b

    #@164
    move-object/from16 v0, v49

    #@166
    if-ne v3, v0, :cond_c

    #@168
    .line 9304
    :cond_b
    const/16 v24, 0x1

    #@16a
    .line 9313
    :cond_c
    :goto_7
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    #@16c
    or-int/2addr v8, v2

    #@16d
    .line 9315
    .local v8, "voiceInteraction":Z
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@16f
    if-eqz v2, :cond_12

    #@171
    .line 9316
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@174
    move-result-object v54

    #@175
    .line 9317
    .local v54, "ws":Lcom/android/server/wm/WindowState;
    if-eqz v54, :cond_d

    #@177
    .line 9318
    move-object/from16 v0, v54

    #@179
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@17b
    .line 9319
    .local v4, "animLp":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v0, v54

    #@17d
    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    #@17f
    move/from16 v20, v0

    #@181
    .line 9320
    const/16 v34, 0x1

    #@183
    .line 9299
    .end local v4    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .end local v54    # "ws":Lcom/android/server/wm/WindowState;
    :cond_d
    :goto_8
    add-int/lit8 v36, v36, 0x1

    #@185
    goto :goto_6

    #@186
    .line 9259
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v8    # "voiceInteraction":Z
    .end local v20    # "bestAnimLayer":I
    .end local v24    # "closingAppHasWallpaper":Z
    .end local v25    # "closingAppsCount":I
    .end local v34    # "fullscreenAnim":Z
    .end local v36    # "i":I
    .end local v43    # "openingAppHasWallpaper":Z
    :cond_e
    const/16 v41, 0x0

    #@188
    .local v41, "oldWallpaper":Lcom/android/server/wm/WindowState;
    goto :goto_4

    #@189
    .line 9283
    .end local v41    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .local v4, "animLp":Landroid/view/WindowManager$LayoutParams;
    .local v8, "voiceInteraction":Z
    .restart local v20    # "bestAnimLayer":I
    .restart local v24    # "closingAppHasWallpaper":Z
    .restart local v34    # "fullscreenAnim":Z
    .restart local v43    # "openingAppHasWallpaper":Z
    :cond_f
    move-object/from16 v0, p0

    #@18b
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@18d
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@18f
    move-object/from16 v39, v0

    #@191
    .line 9284
    .local v39, "lowerWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    #@193
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@195
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@197
    move-object/from16 v49, v0

    #@199
    .local v49, "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    goto :goto_5

    #@19a
    .line 9307
    .end local v4    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "voiceInteraction":Z
    .end local v39    # "lowerWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    .end local v49    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v25    # "closingAppsCount":I
    .restart local v36    # "i":I
    :cond_10
    move-object/from16 v0, p0

    #@19c
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@19e
    sub-int v5, v36, v25

    #@1a0
    invoke-virtual {v2, v5}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    #@1a3
    move-result-object v3

    #@1a4
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@1a6
    .line 9308
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v39

    #@1a8
    if-eq v3, v0, :cond_11

    #@1aa
    move-object/from16 v0, v49

    #@1ac
    if-ne v3, v0, :cond_c

    #@1ae
    .line 9309
    :cond_11
    const/16 v43, 0x1

    #@1b0
    goto :goto_7

    #@1b1
    .line 9322
    .local v8, "voiceInteraction":Z
    :cond_12
    if-nez v34, :cond_d

    #@1b3
    .line 9323
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@1b6
    move-result-object v54

    #@1b7
    .line 9324
    .restart local v54    # "ws":Lcom/android/server/wm/WindowState;
    if-eqz v54, :cond_d

    #@1b9
    .line 9325
    move-object/from16 v0, v54

    #@1bb
    iget v2, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    #@1bd
    move/from16 v0, v20

    #@1bf
    if-le v2, v0, :cond_d

    #@1c1
    .line 9326
    move-object/from16 v0, v54

    #@1c3
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1c5
    .line 9327
    .local v4, "animLp":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v0, v54

    #@1c7
    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    #@1c9
    move/from16 v20, v0

    #@1cb
    goto :goto_8

    #@1cc
    .line 9333
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "voiceInteraction":Z
    .end local v54    # "ws":Lcom/android/server/wm/WindowState;
    :cond_13
    const/4 v2, 0x0

    #@1cd
    move-object/from16 v0, p0

    #@1cf
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimateWallpaperWithTarget:Z

    #@1d1
    .line 9334
    if-eqz v24, :cond_15

    #@1d3
    if-eqz v43, :cond_15

    #@1d5
    .line 9336
    packed-switch v6, :pswitch_data_0

    #@1d8
    .line 9373
    :goto_9
    move-object/from16 v0, p0

    #@1da
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1dc
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->allowAppAnimationsLw()Z

    #@1df
    move-result v2

    #@1e0
    if-nez v2, :cond_14

    #@1e2
    .line 9376
    const/4 v4, 0x0

    #@1e3
    .line 9379
    :cond_14
    const/16 v47, 0x0

    #@1e5
    .line 9380
    .local v47, "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    const/16 v45, 0x0

    #@1e7
    .line 9381
    .local v45, "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    const/16 v48, 0x0

    #@1e9
    .line 9382
    .local v48, "topOpeningLayer":I
    const/16 v46, 0x0

    #@1eb
    .line 9385
    .local v46, "topClosingLayer":I
    const/16 v2, 0x11

    #@1ed
    if-ne v6, v2, :cond_1a

    #@1ef
    .line 9388
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1f2
    move-result-object v2

    #@1f3
    move-object/from16 v0, p0

    #@1f5
    invoke-direct {v0, v2}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    #@1f8
    move-result-object v52

    #@1f9
    .line 9389
    .local v52, "win":Lcom/android/server/wm/WindowState;
    if-eqz v52, :cond_1a

    #@1fb
    .line 9390
    move-object/from16 v0, v52

    #@1fd
    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1ff
    .line 9391
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@201
    move-object/from16 v18, v0

    #@203
    .line 9393
    .local v18, "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    #@206
    .line 9394
    const/4 v2, 0x0

    #@207
    move-object/from16 v0, v18

    #@209
    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@20b
    .line 9395
    move-object/from16 v0, p0

    #@20d
    invoke-virtual {v0, v3, v6}, Lcom/android/server/wm/WindowManagerService;->updateTokenInPlaceLocked(Lcom/android/server/wm/AppWindowToken;I)V

    #@210
    .line 9396
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@213
    .line 9398
    move-object/from16 v0, v18

    #@215
    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    #@217
    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    #@21a
    .line 9399
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@21c
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@21f
    move-result v16

    #@220
    .line 9400
    .local v16, "N":I
    const/16 v37, 0x0

    #@222
    .local v37, "j":I
    :goto_a
    move/from16 v0, v37

    #@224
    move/from16 v1, v16

    #@226
    if-ge v0, v1, :cond_19

    #@228
    .line 9401
    move-object/from16 v0, v18

    #@22a
    iget-object v5, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    #@22c
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@22e
    move/from16 v0, v37

    #@230
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@233
    move-result-object v2

    #@234
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@236
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@238
    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@23b
    .line 9400
    add-int/lit8 v37, v37, 0x1

    #@23d
    goto :goto_a

    #@23e
    .line 9340
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v16    # "N":I
    .end local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v37    # "j":I
    .end local v45    # "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    .end local v46    # "topClosingLayer":I
    .end local v47    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .end local v48    # "topOpeningLayer":I
    .end local v52    # "win":Lcom/android/server/wm/WindowState;
    :pswitch_0
    const/16 v6, 0xe

    #@240
    .line 9341
    goto :goto_9

    #@241
    .line 9345
    :pswitch_1
    const/16 v6, 0xf

    #@243
    .line 9346
    goto :goto_9

    #@244
    .line 9350
    :cond_15
    if-eqz v41, :cond_16

    #@246
    move-object/from16 v0, p0

    #@248
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@24a
    invoke-virtual {v2}, Landroid/util/ArraySet;->isEmpty()Z

    #@24d
    move-result v2

    #@24e
    if-eqz v2, :cond_17

    #@250
    .line 9358
    :cond_16
    move-object/from16 v0, p0

    #@252
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@254
    if-eqz v2, :cond_18

    #@256
    move-object/from16 v0, p0

    #@258
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@25a
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@25d
    move-result v2

    #@25e
    if-eqz v2, :cond_18

    #@260
    .line 9361
    const/16 v6, 0xd

    #@262
    goto/16 :goto_9

    #@264
    .line 9351
    :cond_17
    move-object/from16 v0, p0

    #@266
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@268
    move-object/from16 v0, v41

    #@26a
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@26c
    invoke-virtual {v2, v5}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@26f
    move-result v2

    #@270
    if-nez v2, :cond_16

    #@272
    .line 9354
    const/16 v6, 0xc

    #@274
    .line 9351
    goto/16 :goto_9

    #@276
    .line 9366
    :cond_18
    const/4 v2, 0x1

    #@277
    move-object/from16 v0, p0

    #@279
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimateWallpaperWithTarget:Z

    #@27b
    goto/16 :goto_9

    #@27d
    .line 9403
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v16    # "N":I
    .restart local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .restart local v37    # "j":I
    .restart local v45    # "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    .restart local v46    # "topClosingLayer":I
    .restart local v47    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .restart local v48    # "topOpeningLayer":I
    .restart local v52    # "win":Lcom/android/server/wm/WindowState;
    :cond_19
    move-object/from16 v0, p0

    #@27f
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@281
    iget-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    #@283
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    #@286
    move-result v7

    #@287
    or-int/2addr v5, v7

    #@288
    iput-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    #@28a
    .line 9404
    move-object/from16 v0, p0

    #@28c
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@28e
    iget-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    #@290
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->showAllWindowsLocked()Z

    #@293
    move-result v7

    #@294
    or-int/2addr v5, v7

    #@295
    iput-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    #@297
    .line 9408
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v16    # "N":I
    .end local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v37    # "j":I
    .end local v52    # "win":Lcom/android/server/wm/WindowState;
    :cond_1a
    move-object/from16 v0, p0

    #@299
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@29b
    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    #@29e
    move-result v19

    #@29f
    .line 9409
    const/16 v36, 0x0

    #@2a1
    .end local v47    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    :goto_b
    move/from16 v0, v36

    #@2a3
    move/from16 v1, v19

    #@2a5
    if-ge v0, v1, :cond_22

    #@2a7
    .line 9410
    move-object/from16 v0, p0

    #@2a9
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@2ab
    move/from16 v0, v36

    #@2ad
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    #@2b0
    move-result-object v3

    #@2b1
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@2b3
    .line 9411
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@2b5
    move-object/from16 v18, v0

    #@2b7
    .line 9414
    .restart local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v18

    #@2b9
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    #@2bb
    if-nez v2, :cond_1b

    #@2bd
    .line 9415
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    #@2c0
    .line 9416
    const/4 v2, 0x0

    #@2c1
    move-object/from16 v0, v18

    #@2c3
    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@2c5
    .line 9418
    :cond_1b
    const/4 v2, 0x0

    #@2c6
    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@2c8
    .line 9420
    const/4 v5, 0x1

    #@2c9
    const/4 v7, 0x0

    #@2ca
    move-object/from16 v2, p0

    #@2cc
    .line 9419
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    #@2cf
    move-result v2

    #@2d0
    if-nez v2, :cond_1c

    #@2d2
    .line 9424
    move-object/from16 v0, p0

    #@2d4
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@2d6
    iget-object v5, v3, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@2d8
    invoke-interface {v2, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    #@2db
    .line 9426
    :cond_1c
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@2de
    .line 9427
    const/4 v2, 0x0

    #@2df
    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@2e1
    .line 9429
    move-object/from16 v0, v18

    #@2e3
    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    #@2e5
    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    #@2e8
    .line 9430
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@2ea
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@2ed
    move-result v53

    #@2ee
    .line 9431
    .local v53, "windowsCount":I
    const/16 v37, 0x0

    #@2f0
    .restart local v37    # "j":I
    :goto_c
    move/from16 v0, v37

    #@2f2
    move/from16 v1, v53

    #@2f4
    if-ge v0, v1, :cond_1d

    #@2f6
    .line 9432
    move-object/from16 v0, v18

    #@2f8
    iget-object v5, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    #@2fa
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@2fc
    move/from16 v0, v37

    #@2fe
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@301
    move-result-object v2

    #@302
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@304
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@306
    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@309
    .line 9431
    add-int/lit8 v37, v37, 0x1

    #@30b
    goto :goto_c

    #@30c
    .line 9434
    :cond_1d
    move-object/from16 v0, p0

    #@30e
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@310
    iget-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    #@312
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->showAllWindowsLocked()Z

    #@315
    move-result v7

    #@316
    or-int/2addr v5, v7

    #@317
    iput-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    #@319
    .line 9435
    move-object/from16 v0, p0

    #@31b
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@31d
    iget-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    #@31f
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    #@322
    move-result v7

    #@323
    or-int/2addr v5, v7

    #@324
    iput-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    #@326
    .line 9437
    if-eqz v4, :cond_21

    #@328
    .line 9438
    const/16 v38, -0x1

    #@32a
    .line 9439
    .local v38, "layer":I
    const/16 v37, 0x0

    #@32c
    :goto_d
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@32e
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@331
    move-result v2

    #@332
    move/from16 v0, v37

    #@334
    if-ge v0, v2, :cond_1f

    #@336
    .line 9440
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@338
    move/from16 v0, v37

    #@33a
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@33d
    move-result-object v52

    #@33e
    check-cast v52, Lcom/android/server/wm/WindowState;

    #@340
    .line 9441
    .restart local v52    # "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v52

    #@342
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@344
    iget v2, v2, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@346
    move/from16 v0, v38

    #@348
    if-le v2, v0, :cond_1e

    #@34a
    .line 9442
    move-object/from16 v0, v52

    #@34c
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@34e
    iget v0, v2, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@350
    move/from16 v38, v0

    #@352
    .line 9439
    :cond_1e
    add-int/lit8 v37, v37, 0x1

    #@354
    goto :goto_d

    #@355
    .line 9445
    .end local v52    # "win":Lcom/android/server/wm/WindowState;
    :cond_1f
    if-eqz v47, :cond_20

    #@357
    move/from16 v0, v38

    #@359
    move/from16 v1, v48

    #@35b
    if-le v0, v1, :cond_21

    #@35d
    .line 9446
    :cond_20
    move-object/from16 v47, v3

    #@35f
    .line 9447
    .local v47, "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    move/from16 v48, v38

    #@361
    .line 9409
    .end local v38    # "layer":I
    .end local v47    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    :cond_21
    add-int/lit8 v36, v36, 0x1

    #@363
    goto/16 :goto_b

    #@365
    .line 9451
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v37    # "j":I
    .end local v53    # "windowsCount":I
    :cond_22
    move-object/from16 v0, p0

    #@367
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@369
    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    #@36c
    move-result v19

    #@36d
    .line 9452
    const/16 v36, 0x0

    #@36f
    .end local v45    # "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    :goto_e
    move/from16 v0, v36

    #@371
    move/from16 v1, v19

    #@373
    if-ge v0, v1, :cond_29

    #@375
    .line 9453
    move-object/from16 v0, p0

    #@377
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@379
    move/from16 v0, v36

    #@37b
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    #@37e
    move-result-object v3

    #@37f
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@381
    .line 9454
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@383
    move-object/from16 v18, v0

    #@385
    .line 9456
    .restart local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    #@388
    .line 9457
    const/4 v2, 0x0

    #@389
    move-object/from16 v0, v18

    #@38b
    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@38d
    .line 9458
    const/4 v2, 0x0

    #@38e
    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@390
    .line 9459
    const/4 v5, 0x0

    #@391
    const/4 v7, 0x0

    #@392
    move-object/from16 v2, p0

    #@394
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    #@397
    .line 9460
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@39a
    .line 9464
    const/4 v2, 0x1

    #@39b
    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@39d
    .line 9465
    const/4 v2, 0x0

    #@39e
    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@3a0
    .line 9468
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@3a2
    if-eqz v2, :cond_23

    #@3a4
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@3a6
    iget-boolean v2, v2, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@3a8
    if-eqz v2, :cond_25

    #@3aa
    .line 9471
    :cond_23
    :goto_f
    move-object/from16 v0, p0

    #@3ac
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@3ae
    iget-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    #@3b0
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    #@3b3
    move-result v7

    #@3b4
    or-int/2addr v5, v7

    #@3b5
    iput-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    #@3b7
    .line 9473
    if-eqz v4, :cond_28

    #@3b9
    .line 9474
    const/16 v38, -0x1

    #@3bb
    .line 9475
    .restart local v38    # "layer":I
    const/16 v37, 0x0

    #@3bd
    .restart local v37    # "j":I
    :goto_10
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3bf
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@3c2
    move-result v2

    #@3c3
    move/from16 v0, v37

    #@3c5
    if-ge v0, v2, :cond_26

    #@3c7
    .line 9476
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3c9
    move/from16 v0, v37

    #@3cb
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3ce
    move-result-object v52

    #@3cf
    check-cast v52, Lcom/android/server/wm/WindowState;

    #@3d1
    .line 9477
    .restart local v52    # "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v52

    #@3d3
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@3d5
    iget v2, v2, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@3d7
    move/from16 v0, v38

    #@3d9
    if-le v2, v0, :cond_24

    #@3db
    .line 9478
    move-object/from16 v0, v52

    #@3dd
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@3df
    iget v0, v2, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@3e1
    move/from16 v38, v0

    #@3e3
    .line 9475
    :cond_24
    add-int/lit8 v37, v37, 0x1

    #@3e5
    goto :goto_10

    #@3e6
    .line 9469
    .end local v37    # "j":I
    .end local v38    # "layer":I
    .end local v52    # "win":Lcom/android/server/wm/WindowState;
    :cond_25
    move-object/from16 v0, p0

    #@3e8
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@3eb
    goto :goto_f

    #@3ec
    .line 9481
    .restart local v37    # "j":I
    .restart local v38    # "layer":I
    :cond_26
    if-eqz v45, :cond_27

    #@3ee
    move/from16 v0, v38

    #@3f0
    move/from16 v1, v46

    #@3f2
    if-le v0, v1, :cond_28

    #@3f4
    .line 9482
    :cond_27
    move-object/from16 v45, v3

    #@3f6
    .line 9483
    .local v45, "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    move/from16 v46, v38

    #@3f8
    .line 9452
    .end local v37    # "j":I
    .end local v38    # "layer":I
    .end local v45    # "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    :cond_28
    add-int/lit8 v36, v36, 0x1

    #@3fa
    goto/16 :goto_e

    #@3fc
    .line 9488
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :cond_29
    if-nez v47, :cond_2d

    #@3fe
    const/16 v42, 0x0

    #@400
    .line 9490
    :goto_11
    if-nez v45, :cond_2e

    #@402
    const/16 v23, 0x0

    #@404
    .line 9492
    :goto_12
    move-object/from16 v0, p0

    #@406
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@408
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->getNextAppTransitionThumbnail()Landroid/graphics/Bitmap;

    #@40b
    move-result-object v40

    #@40c
    .line 9493
    .local v40, "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    if-eqz v40, :cond_2a

    #@40e
    .line 9494
    if-eqz v42, :cond_2a

    #@410
    move-object/from16 v0, v42

    #@412
    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@414
    if-eqz v2, :cond_2a

    #@416
    .line 9495
    invoke-virtual/range {v40 .. v40}, Landroid/graphics/Bitmap;->getConfig()Landroid/graphics/Bitmap$Config;

    #@419
    move-result-object v2

    #@41a
    sget-object v5, Landroid/graphics/Bitmap$Config;->ALPHA_8:Landroid/graphics/Bitmap$Config;

    #@41c
    if-eq v2, v5, :cond_2a

    #@41e
    .line 9498
    new-instance v28, Landroid/graphics/Rect;

    #@420
    invoke-virtual/range {v40 .. v40}, Landroid/graphics/Bitmap;->getWidth()I

    #@423
    move-result v2

    #@424
    .line 9499
    invoke-virtual/range {v40 .. v40}, Landroid/graphics/Bitmap;->getHeight()I

    #@427
    move-result v5

    #@428
    .line 9498
    const/4 v7, 0x0

    #@429
    const/4 v10, 0x0

    #@42a
    move-object/from16 v0, v28

    #@42c
    invoke-direct {v0, v7, v10, v2, v5}, Landroid/graphics/Rect;-><init>(IIII)V

    #@42f
    .line 9502
    .local v28, "dirty":Landroid/graphics/Rect;
    :try_start_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@432
    move-result-object v30

    #@433
    .line 9503
    .local v30, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@436
    move-result-object v29

    #@437
    .line 9504
    .local v29, "display":Landroid/view/Display;
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@43a
    move-result-object v31

    #@43b
    .line 9507
    .local v31, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v9, Landroid/view/SurfaceControl;

    #@43d
    move-object/from16 v0, p0

    #@43f
    iget-object v10, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@441
    .line 9508
    const-string/jumbo v11, "thumbnail anim"

    #@444
    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->width()I

    #@447
    move-result v12

    #@448
    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->height()I

    #@44b
    move-result v13

    #@44c
    .line 9509
    const/4 v14, -0x3

    #@44d
    const/4 v15, 0x4

    #@44e
    .line 9507
    invoke-direct/range {v9 .. v15}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    #@451
    .line 9510
    .local v9, "surfaceControl":Landroid/view/SurfaceControl;
    invoke-virtual/range {v29 .. v29}, Landroid/view/Display;->getLayerStack()I

    #@454
    move-result v2

    #@455
    invoke-virtual {v9, v2}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    #@458
    .line 9516
    new-instance v32, Landroid/view/Surface;

    #@45a
    invoke-direct/range {v32 .. v32}, Landroid/view/Surface;-><init>()V

    #@45d
    .line 9517
    .local v32, "drawSurface":Landroid/view/Surface;
    move-object/from16 v0, v32

    #@45f
    invoke-virtual {v0, v9}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    #@462
    .line 9518
    move-object/from16 v0, v32

    #@464
    move-object/from16 v1, v28

    #@466
    invoke-virtual {v0, v1}, Landroid/view/Surface;->lockCanvas(Landroid/graphics/Rect;)Landroid/graphics/Canvas;

    #@469
    move-result-object v21

    #@46a
    .line 9519
    .local v21, "c":Landroid/graphics/Canvas;
    const/4 v2, 0x0

    #@46b
    const/4 v5, 0x0

    #@46c
    const/4 v7, 0x0

    #@46d
    move-object/from16 v0, v21

    #@46f
    move-object/from16 v1, v40

    #@471
    invoke-virtual {v0, v1, v2, v5, v7}, Landroid/graphics/Canvas;->drawBitmap(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V

    #@474
    .line 9520
    move-object/from16 v0, v32

    #@476
    move-object/from16 v1, v21

    #@478
    invoke-virtual {v0, v1}, Landroid/view/Surface;->unlockCanvasAndPost(Landroid/graphics/Canvas;)V

    #@47b
    .line 9521
    invoke-virtual/range {v32 .. v32}, Landroid/view/Surface;->release()V

    #@47e
    .line 9525
    move-object/from16 v0, p0

    #@480
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@482
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isNextThumbnailTransitionAspectScaled()Z

    #@485
    move-result v2

    #@486
    if-eqz v2, :cond_30

    #@488
    .line 9530
    move-object/from16 v0, p0

    #@48a
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@48c
    .line 9531
    move-object/from16 v0, v31

    #@48e
    iget v5, v0, Landroid/view/DisplayInfo;->appWidth:I

    #@490
    move-object/from16 v0, v31

    #@492
    iget v7, v0, Landroid/view/DisplayInfo;->appHeight:I

    #@494
    .line 9532
    move-object/from16 v0, v31

    #@496
    iget v10, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@498
    .line 9530
    invoke-virtual {v2, v5, v7, v10, v6}, Lcom/android/server/wm/AppTransition;->createThumbnailAspectScaleAnimationLocked(IIII)Landroid/view/animation/Animation;

    #@49b
    move-result-object v17

    #@49c
    .line 9533
    .local v17, "anim":Landroid/view/animation/Animation;
    move/from16 v0, v48

    #@49e
    move/from16 v1, v46

    #@4a0
    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    #@4a3
    move-result v2

    #@4a4
    move-object/from16 v0, v42

    #@4a6
    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailForceAboveLayer:I

    #@4a8
    .line 9536
    move-object/from16 v0, p0

    #@4aa
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@4ac
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isNextThumbnailTransitionScaleUp()Z

    #@4af
    move-result v2

    #@4b0
    if-eqz v2, :cond_2f

    #@4b2
    const/4 v2, 0x0

    #@4b3
    .line 9535
    :goto_13
    move-object/from16 v0, v42

    #@4b5
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->deferThumbnailDestruction:Z

    #@4b7
    .line 9541
    :goto_14
    const-wide/16 v10, 0x2710

    #@4b9
    move-object/from16 v0, v17

    #@4bb
    invoke-virtual {v0, v10, v11}, Landroid/view/animation/Animation;->restrictDuration(J)V

    #@4be
    .line 9542
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    #@4c1
    move-result v2

    #@4c2
    move-object/from16 v0, v17

    #@4c4
    invoke-virtual {v0, v2}, Landroid/view/animation/Animation;->scaleCurrentDuration(F)V

    #@4c7
    .line 9544
    move-object/from16 v0, v42

    #@4c9
    iput-object v9, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@4cb
    .line 9545
    move/from16 v0, v48

    #@4cd
    move-object/from16 v1, v42

    #@4cf
    iput v0, v1, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    #@4d1
    .line 9546
    move-object/from16 v0, v17

    #@4d3
    move-object/from16 v1, v42

    #@4d5
    iput-object v0, v1, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    #@4d7
    .line 9547
    move-object/from16 v0, p0

    #@4d9
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@4db
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->getStartingX()I

    #@4de
    move-result v2

    #@4df
    move-object/from16 v0, v42

    #@4e1
    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    #@4e3
    .line 9548
    move-object/from16 v0, p0

    #@4e5
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@4e7
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->getStartingY()I

    #@4ea
    move-result v2

    #@4eb
    move-object/from16 v0, v42

    #@4ed
    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I
    :try_end_0
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_0 .. :try_end_0} :catch_0

    #@4ef
    .line 9556
    .end local v9    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v17    # "anim":Landroid/view/animation/Animation;
    .end local v21    # "c":Landroid/graphics/Canvas;
    .end local v28    # "dirty":Landroid/graphics/Rect;
    .end local v29    # "display":Landroid/view/Display;
    .end local v30    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v32    # "drawSurface":Landroid/view/Surface;
    :cond_2a
    :goto_15
    move-object/from16 v0, p0

    #@4f1
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@4f3
    move-object/from16 v0, v42

    #@4f5
    move-object/from16 v1, v23

    #@4f7
    invoke-virtual {v2, v0, v1}, Lcom/android/server/wm/AppTransition;->goodToGo(Lcom/android/server/wm/AppWindowAnimator;Lcom/android/server/wm/AppWindowAnimator;)V

    #@4fa
    .line 9557
    move-object/from16 v0, p0

    #@4fc
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@4fe
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->postAnimationCallback()V

    #@501
    .line 9558
    move-object/from16 v0, p0

    #@503
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@505
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->clear()V

    #@508
    .line 9560
    move-object/from16 v0, p0

    #@50a
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@50c
    invoke-virtual {v2}, Landroid/util/ArraySet;->clear()V

    #@50f
    .line 9561
    move-object/from16 v0, p0

    #@511
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@513
    invoke-virtual {v2}, Landroid/util/ArraySet;->clear()V

    #@516
    .line 9565
    const/16 v22, 0x3

    #@518
    .line 9567
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@51b
    move-result-object v2

    #@51c
    const/4 v5, 0x1

    #@51d
    iput-boolean v5, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@51f
    .line 9570
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@522
    move-result-object v2

    #@523
    move-object/from16 v0, p1

    #@525
    if-ne v0, v2, :cond_2b

    #@527
    .line 9571
    const/4 v2, 0x1

    #@528
    move-object/from16 v0, p0

    #@52a
    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@52d
    move-result v2

    #@52e
    if-eqz v2, :cond_31

    #@530
    .line 9574
    :cond_2b
    :goto_16
    const/4 v2, 0x2

    #@531
    const/4 v5, 0x1

    #@532
    move-object/from16 v0, p0

    #@534
    invoke-direct {v0, v2, v5}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@537
    .line 9575
    const/4 v2, 0x0

    #@538
    move-object/from16 v0, p0

    #@53a
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    #@53c
    .line 9576
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->notifyActivityDrawnForKeyguard()V

    #@53f
    .line 9579
    .end local v6    # "transit":I
    .end local v20    # "bestAnimLayer":I
    .end local v24    # "closingAppHasWallpaper":Z
    .end local v25    # "closingAppsCount":I
    .end local v34    # "fullscreenAnim":Z
    .end local v36    # "i":I
    .end local v40    # "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    .end local v43    # "openingAppHasWallpaper":Z
    .end local v46    # "topClosingLayer":I
    .end local v48    # "topOpeningLayer":I
    :cond_2c
    return v22

    #@540
    .line 9489
    .restart local v6    # "transit":I
    .restart local v20    # "bestAnimLayer":I
    .restart local v24    # "closingAppHasWallpaper":Z
    .restart local v25    # "closingAppsCount":I
    .restart local v34    # "fullscreenAnim":Z
    .restart local v36    # "i":I
    .restart local v43    # "openingAppHasWallpaper":Z
    .restart local v46    # "topClosingLayer":I
    .restart local v48    # "topOpeningLayer":I
    :cond_2d
    move-object/from16 v0, v47

    #@542
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@544
    move-object/from16 v42, v0

    #@546
    .local v42, "openingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    goto/16 :goto_11

    #@548
    .line 9491
    .end local v42    # "openingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :cond_2e
    move-object/from16 v0, v45

    #@54a
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@54c
    move-object/from16 v23, v0

    #@54e
    .local v23, "closingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    goto/16 :goto_12

    #@550
    .line 9536
    .end local v23    # "closingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .restart local v9    # "surfaceControl":Landroid/view/SurfaceControl;
    .restart local v17    # "anim":Landroid/view/animation/Animation;
    .restart local v21    # "c":Landroid/graphics/Canvas;
    .restart local v28    # "dirty":Landroid/graphics/Rect;
    .restart local v29    # "display":Landroid/view/Display;
    .restart local v30    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v32    # "drawSurface":Landroid/view/Surface;
    .restart local v40    # "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    :cond_2f
    const/4 v2, 0x1

    #@551
    goto/16 :goto_13

    #@553
    .line 9538
    .end local v17    # "anim":Landroid/view/animation/Animation;
    :cond_30
    :try_start_1
    move-object/from16 v0, p0

    #@555
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@557
    .line 9539
    move-object/from16 v0, v31

    #@559
    iget v5, v0, Landroid/view/DisplayInfo;->appWidth:I

    #@55b
    move-object/from16 v0, v31

    #@55d
    iget v7, v0, Landroid/view/DisplayInfo;->appHeight:I

    #@55f
    .line 9538
    invoke-virtual {v2, v5, v7, v6}, Lcom/android/server/wm/AppTransition;->createThumbnailScaleAnimationLocked(III)Landroid/view/animation/Animation;
    :try_end_1
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_1 .. :try_end_1} :catch_0

    #@562
    move-result-object v17

    #@563
    .restart local v17    # "anim":Landroid/view/animation/Animation;
    goto/16 :goto_14

    #@565
    .line 9549
    .end local v9    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v17    # "anim":Landroid/view/animation/Animation;
    .end local v21    # "c":Landroid/graphics/Canvas;
    .end local v29    # "display":Landroid/view/Display;
    .end local v30    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v32    # "drawSurface":Landroid/view/Surface;
    :catch_0
    move-exception v33

    #@566
    .line 9550
    .local v33, "e":Landroid/view/Surface$OutOfResourcesException;
    const-string/jumbo v2, "WindowManager"

    #@569
    new-instance v5, Ljava/lang/StringBuilder;

    #@56b
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@56e
    const-string/jumbo v7, "Can\'t allocate thumbnail/Canvas surface w="

    #@571
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@574
    move-result-object v5

    #@575
    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->width()I

    #@578
    move-result v7

    #@579
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@57c
    move-result-object v5

    #@57d
    .line 9551
    const-string/jumbo v7, " h="

    #@580
    .line 9550
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@583
    move-result-object v5

    #@584
    .line 9551
    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->height()I

    #@587
    move-result v7

    #@588
    .line 9550
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@58b
    move-result-object v5

    #@58c
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@58f
    move-result-object v5

    #@590
    move-object/from16 v0, v33

    #@592
    invoke-static {v2, v5, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@595
    .line 9552
    invoke-virtual/range {v42 .. v42}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    #@598
    goto/16 :goto_15

    #@59a
    .line 9572
    .end local v28    # "dirty":Landroid/graphics/Rect;
    .end local v33    # "e":Landroid/view/Surface$OutOfResourcesException;
    :cond_31
    invoke-direct/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@59d
    goto :goto_16

    #@59e
    .line 9336
    :pswitch_data_0
    .packed-switch 0x6
        :pswitch_0
        :pswitch_1
        :pswitch_0
        :pswitch_1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public handleDisplayAdded(I)V
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11793
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11794
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@5
    invoke-virtual {v1, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    #@8
    move-result-object v0

    #@9
    .line 11795
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_0

    #@b
    .line 11796
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    #@e
    .line 11797
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    #@11
    .line 11799
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@14
    monitor-exit v2

    #@15
    .line 11792
    return-void

    #@16
    .line 11793
    .end local v0    # "display":Landroid/view/Display;
    :catchall_0
    move-exception v1

    #@17
    monitor-exit v2

    #@18
    throw v1
.end method

.method public hasNavigationBar()Z
    .locals 1

    #@0
    .prologue
    .line 11083
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hasNavigationBar()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public hideBootMessagesLocked()V
    .locals 1

    #@0
    .prologue
    .line 5928
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 5929
    const/4 v0, 0x0

    #@5
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@7
    .line 5930
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hideBootMessages()V

    #@c
    .line 5919
    :cond_0
    return-void
.end method

.method hideWallpapersLocked(Lcom/android/server/wm/WindowState;)V
    .locals 9
    .param p1, "winGoingAway"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    .line 1795
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@3
    if-eqz v7, :cond_1

    #@5
    .line 1796
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@7
    if-ne v7, p1, :cond_0

    #@9
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@b
    if-eqz v7, :cond_1

    #@d
    .line 1797
    :cond_0
    return-void

    #@e
    .line 1799
    :cond_1
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@10
    invoke-virtual {v7}, Lcom/android/server/wm/AppTransition;->isRunning()Z

    #@13
    move-result v7

    #@14
    if-eqz v7, :cond_2

    #@16
    .line 1802
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    #@18
    .line 1803
    return-void

    #@19
    .line 1806
    :cond_2
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    #@1b
    if-ne v7, p1, :cond_5

    #@1d
    const/4 v5, 0x1

    #@1e
    .line 1807
    .local v5, "wasDeferred":Z
    :goto_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@20
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    #@23
    move-result v7

    #@24
    add-int/lit8 v1, v7, -0x1

    #@26
    .local v1, "i":I
    :goto_1
    if-ltz v1, :cond_7

    #@28
    .line 1808
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@2a
    invoke-virtual {v7, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@2d
    move-result-object v3

    #@2e
    check-cast v3, Lcom/android/server/wm/WindowToken;

    #@30
    .line 1809
    .local v3, "token":Lcom/android/server/wm/WindowToken;
    iget-object v7, v3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@32
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@35
    move-result v7

    #@36
    add-int/lit8 v2, v7, -0x1

    #@38
    .local v2, "j":I
    :goto_2
    if-ltz v2, :cond_6

    #@3a
    .line 1810
    iget-object v7, v3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3c
    invoke-virtual {v7, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3f
    move-result-object v4

    #@40
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@42
    .line 1811
    .local v4, "wallpaper":Lcom/android/server/wm/WindowState;
    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@44
    .line 1812
    .local v6, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v7, v6, Lcom/android/server/wm/WindowStateAnimator;->mLastHidden:Z

    #@46
    if-eqz v7, :cond_3

    #@48
    if-eqz v5, :cond_4

    #@4a
    .line 1813
    :cond_3
    invoke-virtual {v6}, Lcom/android/server/wm/WindowStateAnimator;->hide()V

    #@4d
    .line 1814
    invoke-virtual {p0, v4, v8}, Lcom/android/server/wm/WindowManagerService;->dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V

    #@50
    .line 1815
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@53
    move-result-object v0

    #@54
    .line 1816
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_4

    #@56
    .line 1817
    iget v7, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@58
    or-int/lit8 v7, v7, 0x4

    #@5a
    iput v7, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@5c
    .line 1809
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_4
    add-int/lit8 v2, v2, -0x1

    #@5e
    goto :goto_2

    #@5f
    .line 1806
    .end local v1    # "i":I
    .end local v2    # "j":I
    .end local v3    # "token":Lcom/android/server/wm/WindowToken;
    .end local v4    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v5    # "wasDeferred":Z
    .end local v6    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_5
    const/4 v5, 0x0

    #@60
    .restart local v5    # "wasDeferred":Z
    goto :goto_0

    #@61
    .line 1825
    .restart local v1    # "i":I
    .restart local v2    # "j":I
    .restart local v3    # "token":Lcom/android/server/wm/WindowToken;
    :cond_6
    const/4 v7, 0x1

    #@62
    iput-boolean v7, v3, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@64
    .line 1807
    add-int/lit8 v1, v1, -0x1

    #@66
    goto :goto_1

    #@67
    .line 1794
    .end local v2    # "j":I
    .end local v3    # "token":Lcom/android/server/wm/WindowToken;
    :cond_7
    return-void
.end method

.method public inKeyguardRestrictedInputMode()Z
    .locals 1

    #@0
    .prologue
    .line 5427
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->inKeyguardRestrictedKeyInputMode()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public inputMethodClientHasFocus(Lcom/android/internal/view/IInputMethodClient;)Z
    .locals 10
    .param p1, "client"    # Lcom/android/internal/view/IInputMethodClient;

    #@0
    .prologue
    const/4 v9, 0x1

    #@1
    const/4 v8, 0x0

    #@2
    .line 8291
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v5

    #@5
    .line 8294
    const/4 v4, 0x0

    #@6
    :try_start_0
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@9
    move-result v1

    #@a
    .line 8295
    .local v1, "idx":I
    if-lez v1, :cond_2

    #@c
    .line 8297
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@f
    move-result-object v4

    #@10
    add-int/lit8 v6, v1, -0x1

    #@12
    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@15
    move-result-object v2

    #@16
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@18
    .line 8303
    .local v2, "imFocus":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_2

    #@1a
    .line 8306
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1c
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@1e
    const/4 v6, 0x3

    #@1f
    if-ne v4, v6, :cond_0

    #@21
    .line 8307
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@23
    if-eqz v4, :cond_0

    #@25
    .line 8310
    const/4 v0, 0x0

    #@26
    .local v0, "i":I
    :goto_0
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@28
    iget-object v4, v4, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2a
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@2d
    move-result v4

    #@2e
    if-ge v0, v4, :cond_0

    #@30
    .line 8311
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@32
    iget-object v4, v4, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@34
    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@37
    move-result-object v3

    #@38
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@3a
    .line 8312
    .local v3, "w":Lcom/android/server/wm/WindowState;
    if-eq v3, v2, :cond_1

    #@3c
    .line 8313
    const-string/jumbo v4, "WindowManager"

    #@3f
    new-instance v6, Ljava/lang/StringBuilder;

    #@41
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@44
    const-string/jumbo v7, "Switching to real app window: "

    #@47
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v6

    #@4b
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v6

    #@4f
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52
    move-result-object v6

    #@53
    invoke-static {v4, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@56
    .line 8314
    move-object v2, v3

    #@57
    .line 8327
    .end local v0    # "i":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_0
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@59
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@5b
    if-eqz v4, :cond_2

    #@5d
    .line 8328
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@5f
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@61
    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    #@64
    move-result-object v4

    #@65
    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@68
    move-result-object v6

    #@69
    if-ne v4, v6, :cond_2

    #@6b
    monitor-exit v5

    #@6c
    .line 8329
    return v9

    #@6d
    .line 8310
    .restart local v0    # "i":I
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@6f
    goto :goto_0

    #@70
    .line 8342
    .end local v0    # "i":I
    .end local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@72
    if-eqz v4, :cond_3

    #@74
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@76
    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@78
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@7a
    if-eqz v4, :cond_3

    #@7c
    .line 8343
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@7e
    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@80
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@82
    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    #@85
    move-result-object v4

    #@86
    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@89
    move-result-object v6

    #@8a
    if-ne v4, v6, :cond_3

    #@8c
    monitor-exit v5

    #@8d
    .line 8344
    return v9

    #@8e
    :cond_3
    monitor-exit v5

    #@8f
    .line 8347
    return v8

    #@90
    .line 8291
    .end local v1    # "idx":I
    :catchall_0
    move-exception v4

    #@91
    monitor-exit v5

    #@92
    throw v4
.end method

.method isCurrentProfileLocked(I)Z
    .locals 3
    .param p1, "userId"    # I

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    .line 5691
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@3
    if-ne p1, v1, :cond_0

    #@5
    return v2

    #@6
    .line 5692
    :cond_0
    const/4 v0, 0x0

    #@7
    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@9
    array-length v1, v1

    #@a
    if-ge v0, v1, :cond_2

    #@c
    .line 5693
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@e
    aget v1, v1, v0

    #@10
    if-ne v1, p1, :cond_1

    #@12
    return v2

    #@13
    .line 5692
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@15
    goto :goto_0

    #@16
    .line 5695
    :cond_2
    const/4 v1, 0x0

    #@17
    return v1
.end method

.method public isHardKeyboardAvailable()Z
    .locals 2

    #@0
    .prologue
    .line 7443
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 7444
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    return v1

    #@7
    .line 7443
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method public isKeyguardLocked()Z
    .locals 1

    #@0
    .prologue
    .line 5432
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public isKeyguardSecure()Z
    .locals 3

    #@0
    .prologue
    .line 5437
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 5439
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->isKeyguardSecure()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@9
    move-result v2

    #@a
    .line 5441
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@d
    .line 5439
    return v2

    #@e
    .line 5440
    :catchall_0
    move-exception v2

    #@f
    .line 5441
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@12
    .line 5440
    throw v2
.end method

.method public isRotationFrozen()Z
    .locals 2

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    .line 6686
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getUserRotationMode()I

    #@6
    move-result v1

    #@7
    if-ne v1, v0, :cond_0

    #@9
    :goto_0
    return v0

    #@a
    :cond_0
    const/4 v0, 0x0

    #@b
    goto :goto_0
.end method

.method public isSafeModeEnabled()Z
    .locals 1

    #@0
    .prologue
    .line 11097
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@2
    return v0
.end method

.method isScreenCaptureDisabledLocked(I)Z
    .locals 2
    .param p1, "userId"    # I

    #@0
    .prologue
    .line 2653
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Ljava/lang/Boolean;

    #@8
    .line 2654
    .local v0, "disabled":Ljava/lang/Boolean;
    if-nez v0, :cond_0

    #@a
    .line 2655
    const/4 v1, 0x0

    #@b
    return v1

    #@c
    .line 2657
    :cond_0
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    #@f
    move-result v1

    #@10
    return v1
.end method

.method isSecureLocked(Lcom/android/server/wm/WindowState;)Z
    .locals 3
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v1, 0x0

    #@2
    .line 2661
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@6
    and-int/lit16 v0, v0, 0x2000

    #@8
    if-eqz v0, :cond_0

    #@a
    .line 2662
    return v2

    #@b
    .line 2664
    :cond_0
    iget v0, p1, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    #@d
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    #@10
    move-result v0

    #@11
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->isScreenCaptureDisabledLocked(I)Z

    #@14
    move-result v0

    #@15
    if-eqz v0, :cond_1

    #@17
    .line 2665
    return v2

    #@18
    .line 2667
    :cond_1
    return v1
.end method

.method public isViewServerRunning()Z
    .locals 3

    #@0
    .prologue
    const/4 v0, 0x0

    #@1
    .line 6876
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v1

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 6877
    return v0

    #@8
    .line 6880
    :cond_0
    const-string/jumbo v1, "android.permission.DUMP"

    #@b
    const-string/jumbo v2, "isViewServerRunning"

    #@e
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v1

    #@12
    if-nez v1, :cond_1

    #@14
    .line 6881
    return v0

    #@15
    .line 6884
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@17
    if-eqz v1, :cond_2

    #@19
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1b
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    #@1e
    move-result v0

    #@1f
    :cond_2
    return v0
.end method

.method public keyguardGoingAway(ZZ)V
    .locals 3
    .param p1, "disableWindowAnimations"    # Z
    .param p2, "keyguardGoingToNotificationShade"    # Z

    #@0
    .prologue
    .line 5459
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5461
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5465
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 5466
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@19
    const/4 v2, 0x1

    #@1a
    iput-boolean v2, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAway:Z

    #@1c
    .line 5467
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@1e
    iput-boolean p2, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAwayToNotificationShade:Z

    #@20
    .line 5468
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@22
    iput-boolean p1, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAwayDisableWindowAnimations:Z

    #@24
    .line 5469
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    monitor-exit v1

    #@28
    .line 5458
    return-void

    #@29
    .line 5465
    :catchall_0
    move-exception v0

    #@2a
    monitor-exit v1

    #@2b
    throw v0
.end method

.method public keyguardWaitingForActivityDrawn()V
    .locals 2

    #@0
    .prologue
    .line 5475
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5476
    const/4 v1, 0x1

    #@4
    :try_start_0
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 5473
    return-void

    #@8
    .line 5475
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .locals 1
    .param p1, "options"    # Landroid/os/Bundle;

    #@0
    .prologue
    .line 11088
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->lockNow(Landroid/os/Bundle;)V

    #@5
    .line 11087
    return-void
.end method

.method logWindowList(Lcom/android/server/wm/WindowList;Ljava/lang/String;)V
    .locals 4
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;
    .param p2, "prefix"    # Ljava/lang/String;

    #@0
    .prologue
    .line 1616
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    #@3
    move-result v0

    #@4
    .line 1617
    .local v0, "N":I
    :goto_0
    if-lez v0, :cond_0

    #@6
    .line 1618
    add-int/lit8 v0, v0, -0x1

    #@8
    .line 1619
    const-string/jumbo v1, "WindowManager"

    #@b
    new-instance v2, Ljava/lang/StringBuilder;

    #@d
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@10
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13
    move-result-object v2

    #@14
    const-string/jumbo v3, "#"

    #@17
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v2

    #@1b
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v2

    #@1f
    const-string/jumbo v3, ": "

    #@22
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v2

    #@26
    invoke-virtual {p1, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@29
    move-result-object v3

    #@2a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v2

    #@2e
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@31
    move-result-object v2

    #@32
    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@35
    goto :goto_0

    #@36
    .line 1615
    :cond_0
    return-void
.end method

.method makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V
    .locals 5
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/16 v4, 0xb

    #@2
    const/4 v3, 0x1

    #@3
    const/4 v2, 0x0

    #@4
    .line 9164
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@7
    move-result v0

    #@8
    if-nez v0, :cond_0

    #@a
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@c
    const/4 v1, 0x2

    #@d
    if-eq v0, v1, :cond_0

    #@f
    .line 9166
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@11
    .line 9167
    iput v2, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@13
    .line 9168
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@15
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    #@17
    .line 9169
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@19
    if-nez v0, :cond_0

    #@1b
    .line 9170
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@1d
    .line 9173
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1f
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@22
    .line 9174
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@24
    .line 9175
    const-wide/16 v2, 0x7d0

    #@26
    .line 9174
    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@29
    .line 9160
    :cond_0
    return-void
.end method

.method public monitor()V
    .locals 1

    #@0
    .prologue
    .line 11690
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    monitor-exit v0

    #@4
    .line 11689
    return-void
.end method

.method moveInputMethodDialogsLocked(I)V
    .locals 9
    .param p1, "pos"    # I

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    .line 1624
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@3
    .line 1627
    .local v1, "dialogs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@6
    move-result-object v5

    #@7
    .line 1628
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    #@a
    move-result v0

    #@b
    .line 1630
    .local v0, "N":I
    const/4 v2, 0x0

    #@c
    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    #@e
    .line 1631
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v7

    #@12
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@14
    invoke-direct {p0, p1, v7}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@17
    move-result p1

    #@18
    .line 1630
    add-int/lit8 v2, v2, 0x1

    #@1a
    goto :goto_0

    #@1b
    .line 1638
    :cond_0
    if-ltz p1, :cond_4

    #@1d
    .line 1639
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@1f
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@21
    .line 1641
    .local v3, "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@23
    if-eqz v7, :cond_2

    #@25
    .line 1642
    :goto_1
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@28
    move-result v7

    #@29
    if-ge p1, v7, :cond_2

    #@2b
    .line 1643
    invoke-virtual {v5, p1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2e
    move-result-object v6

    #@2f
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@31
    .line 1644
    .local v6, "wp":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@33
    if-eq v6, v7, :cond_1

    #@35
    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@37
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@39
    if-ne v7, v8, :cond_2

    #@3b
    .line 1645
    :cond_1
    add-int/lit8 p1, p1, 0x1

    #@3d
    .line 1646
    goto :goto_1

    #@3e
    .line 1652
    .end local v6    # "wp":Lcom/android/server/wm/WindowState;
    :cond_2
    const/4 v2, 0x0

    #@3f
    :goto_2
    if-ge v2, v0, :cond_3

    #@41
    .line 1653
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v4

    #@45
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@47
    .line 1654
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iput-object v3, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@49
    .line 1655
    invoke-direct {p0, p1, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@4c
    move-result p1

    #@4d
    .line 1652
    add-int/lit8 v2, v2, 0x1

    #@4f
    goto :goto_2

    #@50
    .line 1661
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    return-void

    #@51
    .line 1663
    .end local v3    # "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_4
    const/4 v2, 0x0

    #@52
    :goto_3
    if-ge v2, v0, :cond_5

    #@54
    .line 1664
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@57
    move-result-object v4

    #@58
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@5a
    .line 1665
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    iput-object v8, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@5c
    .line 1666
    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    #@5f
    .line 1663
    add-int/lit8 v2, v2, 0x1

    #@61
    goto :goto_3

    #@62
    .line 1623
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    return-void
.end method

.method moveInputMethodWindowsIfNeededLocked(Z)Z
    .locals 14
    .param p1, "needAssignLayers"    # Z

    #@0
    .prologue
    const/4 v13, 0x1

    #@1
    const/4 v12, -0x1

    #@2
    const/4 v11, 0x0

    #@3
    const/4 v10, 0x0

    #@4
    .line 1675
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@6
    .line 1676
    .local v6, "imWin":Lcom/android/server/wm/WindowState;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@8
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    #@b
    move-result v0

    #@c
    .line 1677
    .local v0, "DN":I
    if-nez v6, :cond_0

    #@e
    if-nez v0, :cond_0

    #@10
    .line 1678
    return v10

    #@11
    .line 1682
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@14
    move-result-object v8

    #@15
    .line 1684
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@18
    move-result v5

    #@19
    .line 1685
    .local v5, "imPos":I
    if-ltz v5, :cond_d

    #@1b
    .line 1691
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@1e
    move-result v1

    #@1f
    .line 1692
    .local v1, "N":I
    if-ge v5, v1, :cond_5

    #@21
    .line 1693
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@24
    move-result-object v4

    #@25
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@27
    .line 1697
    :goto_0
    if-eqz v6, :cond_6

    #@29
    .line 1698
    move-object v2, v6

    #@2a
    .line 1699
    .local v2, "baseImWin":Lcom/android/server/wm/WindowState;
    :goto_1
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@2c
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@2f
    move-result v9

    #@30
    if-lez v9, :cond_1

    #@32
    .line 1700
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@34
    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@37
    move-result-object v3

    #@38
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@3a
    .line 1701
    .local v3, "cw":Lcom/android/server/wm/WindowState;
    iget v9, v3, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@3c
    if-gez v9, :cond_1

    #@3e
    move-object v2, v3

    #@3f
    .line 1704
    .end local v3    # "cw":Lcom/android/server/wm/WindowState;
    :cond_1
    if-ne v4, v2, :cond_9

    #@41
    .line 1707
    add-int/lit8 v7, v5, 0x1

    #@43
    .line 1708
    .local v7, "pos":I
    :goto_2
    if-ge v7, v1, :cond_2

    #@45
    .line 1709
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@48
    move-result-object v9

    #@49
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@4b
    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@4d
    if-nez v9, :cond_7

    #@4f
    .line 1714
    :cond_2
    add-int/lit8 v7, v7, 0x1

    #@51
    .line 1716
    :goto_3
    if-ge v7, v1, :cond_3

    #@53
    .line 1717
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@56
    move-result-object v9

    #@57
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@59
    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@5b
    if-eqz v9, :cond_8

    #@5d
    .line 1722
    :cond_3
    if-lt v7, v1, :cond_9

    #@5f
    .line 1725
    if-eqz v6, :cond_4

    #@61
    .line 1726
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@63
    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@65
    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@67
    .line 1728
    :cond_4
    return v10

    #@68
    .line 1693
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v7    # "pos":I
    :cond_5
    const/4 v4, 0x0

    #@69
    .local v4, "firstImWin":Lcom/android/server/wm/WindowState;
    goto :goto_0

    #@6a
    .line 1698
    .end local v4    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_6
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@6c
    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@6f
    move-result-object v2

    #@70
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@72
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    goto :goto_1

    #@73
    .line 1712
    .restart local v7    # "pos":I
    :cond_7
    add-int/lit8 v7, v7, 0x1

    #@75
    goto :goto_2

    #@76
    .line 1720
    :cond_8
    add-int/lit8 v7, v7, 0x1

    #@78
    goto :goto_3

    #@79
    .line 1732
    .end local v7    # "pos":I
    :cond_9
    if-eqz v6, :cond_c

    #@7b
    .line 1737
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@7e
    move-result v5

    #@7f
    .line 1742
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@81
    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@83
    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@85
    .line 1743
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@88
    .line 1748
    if-lez v0, :cond_a

    #@8a
    add-int/lit8 v9, v5, 0x1

    #@8c
    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@8f
    .line 1773
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_a
    :goto_4
    if-eqz p1, :cond_b

    #@91
    .line 1774
    invoke-direct {p0, v8}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@94
    .line 1777
    :cond_b
    return v13

    #@95
    .line 1750
    .restart local v1    # "N":I
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_c
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@98
    goto :goto_4

    #@99
    .line 1757
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_d
    if-eqz v6, :cond_e

    #@9b
    .line 1759
    invoke-direct {p0, v10, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@9e
    .line 1760
    iput-object v11, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@a0
    .line 1761
    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    #@a3
    .line 1766
    if-lez v0, :cond_a

    #@a5
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@a8
    goto :goto_4

    #@a9
    .line 1768
    :cond_e
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@ac
    goto :goto_4
.end method

.method moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v11, 0x1

    #@1
    const/4 v10, 0x0

    #@2
    .line 5045
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@5
    move-result-object v8

    #@6
    .line 5046
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@8
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    #@b
    .line 5048
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@e
    .line 5051
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@10
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    #@13
    move-result v3

    #@14
    .line 5052
    .local v3, "tmpSize":I
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@17
    move-result v7

    #@18
    .line 5053
    .local v7, "winSize":I
    const/4 v1, 0x0

    #@19
    .local v1, "tmpNdx":I
    const/4 v5, 0x0

    #@1a
    .line 5054
    .local v5, "winNdx":I
    :goto_0
    if-ge v1, v3, :cond_2

    #@1c
    if-ge v5, v7, :cond_2

    #@1e
    .line 5058
    :goto_1
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@20
    add-int/lit8 v2, v1, 0x1

    #@22
    .end local v1    # "tmpNdx":I
    .local v2, "tmpNdx":I
    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@25
    move-result-object v0

    #@26
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@28
    .line 5059
    .local v0, "tmp":Lcom/android/server/wm/WindowState;
    if-ge v2, v3, :cond_0

    #@2a
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2c
    if-eqz v9, :cond_0

    #@2e
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@30
    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@32
    if-eqz v9, :cond_0

    #@34
    move v1, v2

    #@35
    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_1

    #@36
    .line 5063
    .end local v1    # "tmpNdx":I
    .restart local v2    # "tmpNdx":I
    :cond_0
    :goto_2
    add-int/lit8 v6, v5, 0x1

    #@38
    .end local v5    # "winNdx":I
    .local v6, "winNdx":I
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3b
    move-result-object v4

    #@3c
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@3e
    .line 5064
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-ge v6, v7, :cond_1

    #@40
    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@42
    if-eqz v9, :cond_1

    #@44
    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@46
    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@48
    if-eqz v9, :cond_1

    #@4a
    move v5, v6

    #@4b
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    goto :goto_2

    #@4c
    .line 5066
    .end local v5    # "winNdx":I
    .restart local v6    # "winNdx":I
    :cond_1
    if-eq v0, v4, :cond_5

    #@4e
    .line 5068
    iput-boolean v11, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@50
    move v5, v6

    #@51
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    #@52
    .line 5072
    .end local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .end local v2    # "tmpNdx":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v1    # "tmpNdx":I
    :cond_2
    if-eq v1, v5, :cond_3

    #@54
    .line 5074
    iput-boolean v11, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@56
    .line 5076
    :cond_3
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@58
    invoke-virtual {v9}, Ljava/util/ArrayList;->clear()V

    #@5b
    .line 5078
    const/4 v9, 0x3

    #@5c
    invoke-direct {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@5f
    move-result v9

    #@60
    if-nez v9, :cond_4

    #@62
    .line 5080
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@65
    move-result-object v9

    #@66
    invoke-direct {p0, v9}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@69
    .line 5083
    :cond_4
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@6b
    invoke-virtual {v9}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@6e
    .line 5084
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@71
    .line 5085
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@73
    invoke-virtual {v9, v10}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@76
    .line 5044
    return-void

    #@77
    .end local v1    # "tmpNdx":I
    .end local v5    # "winNdx":I
    .restart local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .restart local v2    # "tmpNdx":I
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "winNdx":I
    :cond_5
    move v5, v6

    #@78
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    #@79
    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_0
.end method

.method public moveTaskToBottom(I)V
    .locals 8
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5122
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 5124
    .local v0, "origId":J
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 5125
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@9
    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@c
    move-result-object v3

    #@d
    check-cast v3, Lcom/android/server/wm/Task;

    #@f
    .line 5126
    .local v3, "task":Lcom/android/server/wm/Task;
    if-nez v3, :cond_0

    #@11
    .line 5127
    const-string/jumbo v4, "WindowManager"

    #@14
    new-instance v6, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v7, "moveTaskToBottom: taskId="

    #@1c
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v6

    #@20
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@23
    move-result-object v6

    #@24
    .line 5128
    const-string/jumbo v7, " not found in mTaskIdToTask"

    #@27
    .line 5127
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2a
    move-result-object v6

    #@2b
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2e
    move-result-object v6

    #@2f
    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@32
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@33
    .line 5139
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@36
    .line 5129
    return-void

    #@37
    .line 5131
    :cond_0
    :try_start_3
    iget-object v2, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@39
    .line 5132
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->moveTaskToBottom(Lcom/android/server/wm/Task;)V

    #@3c
    .line 5133
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@3e
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@41
    move-result v4

    #@42
    if-eqz v4, :cond_1

    #@44
    .line 5134
    const/4 v4, 0x1

    #@45
    invoke-virtual {v3, v4}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    #@48
    .line 5136
    :cond_1
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@4b
    move-result-object v4

    #@4c
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@4f
    :try_start_4
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@50
    .line 5139
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@53
    .line 5121
    return-void

    #@54
    .line 5124
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v4

    #@55
    :try_start_5
    monitor-exit v5

    #@56
    throw v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@57
    .line 5138
    :catchall_1
    move-exception v4

    #@58
    .line 5139
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@5b
    .line 5138
    throw v4
.end method

.method public moveTaskToStack(IIZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    #@0
    .prologue
    .line 5228
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5231
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v2

    #@9
    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5232
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_0

    #@d
    monitor-exit v4

    #@e
    .line 5234
    return-void

    #@f
    .line 5236
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/TaskStack;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@17
    .line 5237
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_1

    #@19
    monitor-exit v4

    #@1a
    .line 5239
    return-void

    #@1b
    .line 5241
    :cond_1
    :try_start_2
    invoke-virtual {v2, v1, p3}, Lcom/android/server/wm/Task;->moveTaskToStack(Lcom/android/server/wm/TaskStack;Z)V

    #@1e
    .line 5242
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@21
    move-result-object v0

    #@22
    .line 5243
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    #@23
    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@25
    .line 5244
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@28
    monitor-exit v4

    #@29
    .line 5227
    return-void

    #@2a
    .line 5228
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@2b
    monitor-exit v4

    #@2c
    throw v3
.end method

.method public moveTaskToTop(I)V
    .locals 8
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5091
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 5093
    .local v2, "origId":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 5094
    :try_start_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@9
    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@c
    move-result-object v5

    #@d
    check-cast v5, Lcom/android/server/wm/Task;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@f
    .line 5095
    .local v5, "task":Lcom/android/server/wm/Task;
    if-nez v5, :cond_0

    #@11
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@12
    .line 5117
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@15
    .line 5097
    return-void

    #@16
    .line 5099
    :cond_0
    :try_start_3
    iget-object v4, v5, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@18
    .line 5100
    .local v4, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v5}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@1b
    move-result-object v0

    #@1c
    .line 5101
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v6, 0x1

    #@1d
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    #@20
    .line 5102
    iget-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    #@22
    if-eqz v6, :cond_1

    #@24
    .line 5103
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getHomeStack()Lcom/android/server/wm/TaskStack;

    #@27
    move-result-object v1

    #@28
    .line 5104
    .local v1, "homeStack":Lcom/android/server/wm/TaskStack;
    if-eq v1, v4, :cond_1

    #@2a
    .line 5107
    const/4 v6, 0x0

    #@2b
    invoke-virtual {v0, v1, v6}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    #@2e
    .line 5110
    .end local v1    # "homeStack":Lcom/android/server/wm/TaskStack;
    :cond_1
    invoke-virtual {v4, v5}, Lcom/android/server/wm/TaskStack;->moveTaskToTop(Lcom/android/server/wm/Task;)V

    #@31
    .line 5111
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@33
    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@36
    move-result v6

    #@37
    if-eqz v6, :cond_2

    #@39
    .line 5112
    const/4 v6, 0x0

    #@3a
    invoke-virtual {v5, v6}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    #@3d
    .line 5114
    :cond_2
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@40
    :try_start_4
    monitor-exit v7
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@41
    .line 5117
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@44
    .line 5090
    return-void

    #@45
    .line 5093
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v5    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v6

    #@46
    :try_start_5
    monitor-exit v7

    #@47
    throw v6
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@48
    .line 5116
    :catchall_1
    move-exception v6

    #@49
    .line 5117
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4c
    .line 5116
    throw v6
.end method

.method public notifyActivityDrawnForKeyguard()V
    .locals 2

    #@0
    .prologue
    .line 5483
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5484
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 5485
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->notifyActivityDrawnForKeyguardLw()V

    #@c
    .line 5486
    const/4 v0, 0x0

    #@d
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    :cond_0
    monitor-exit v1

    #@10
    .line 5480
    return-void

    #@11
    .line 5483
    :catchall_0
    move-exception v0

    #@12
    monitor-exit v1

    #@13
    throw v0
.end method

.method notifyHardKeyboardStatusChange()V
    .locals 4

    #@0
    .prologue
    .line 7470
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v3

    #@3
    .line 7471
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

    #@5
    .line 7472
    .local v1, "listener":Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@7
    .local v0, "available":Z
    monitor-exit v3

    #@8
    .line 7474
    if-eqz v1, :cond_0

    #@a
    .line 7475
    invoke-interface {v1, v0}, Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;->onHardKeyboardStatusChange(Z)V

    #@d
    .line 7467
    :cond_0
    return-void

    #@e
    .line 7470
    .end local v0    # "available":Z
    .end local v1    # "listener":Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;
    :catchall_0
    move-exception v2

    #@f
    monitor-exit v3

    #@10
    throw v2
.end method

.method okToDisplay()Z
    .locals 1

    #@0
    .prologue
    .line 3603
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@2
    if-nez v0, :cond_0

    #@4
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@6
    if-eqz v0, :cond_0

    #@8
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isScreenOn()Z

    #@d
    move-result v0

    #@e
    :goto_0
    return v0

    #@f
    :cond_0
    const/4 v0, 0x0

    #@10
    goto :goto_0
.end method

.method public onDisplayAdded(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11789
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1b

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 11788
    return-void
.end method

.method public onDisplayChanged(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11826
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1d

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 11825
    return-void
.end method

.method public onDisplayRemoved(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11804
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1c

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 11803
    return-void
.end method

.method public onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "rectangle"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 3053
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 3054
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 3055
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@9
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@c
    move-result-object v0

    #@d
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@f
    .line 3057
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@11
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@14
    move-result v1

    #@15
    if-nez v1, :cond_0

    #@17
    .line 3058
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@19
    invoke-virtual {v1, p2}, Lcom/android/server/wm/AccessibilityController;->onRectangleOnScreenRequestedLocked(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :cond_0
    monitor-exit v2

    #@1d
    .line 3052
    return-void

    #@1e
    .line 3053
    :catchall_0
    move-exception v1

    #@1f
    monitor-exit v2

    #@20
    throw v1
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 3
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    #@0
    .prologue
    .line 1011
    :try_start_0
    invoke-super {p0, p1, p2, p3, p4}, Landroid/view/IWindowManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    #@3
    move-result v1

    #@4
    return v1

    #@5
    .line 1012
    :catch_0
    move-exception v0

    #@6
    .line 1015
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v1, v0, Ljava/lang/SecurityException;

    #@8
    if-nez v1, :cond_0

    #@a
    .line 1016
    const-string/jumbo v1, "WindowManager"

    #@d
    const-string/jumbo v2, "Window Manager Crash"

    #@10
    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@13
    .line 1018
    :cond_0
    throw v0
.end method

.method public openSession(Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)Landroid/view/IWindowSession;
    .locals 3
    .param p1, "callback"    # Landroid/view/IWindowSessionCallback;
    .param p2, "client"    # Lcom/android/internal/view/IInputMethodClient;
    .param p3, "inputContext"    # Lcom/android/internal/view/IInputContext;

    #@0
    .prologue
    .line 8283
    if-nez p2, :cond_0

    #@2
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@4
    const-string/jumbo v2, "null client"

    #@7
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@a
    throw v1

    #@b
    .line 8284
    :cond_0
    if-nez p3, :cond_1

    #@d
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    const-string/jumbo v2, "null inputContext"

    #@12
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@15
    throw v1

    #@16
    .line 8285
    :cond_1
    new-instance v0, Lcom/android/server/wm/Session;

    #@18
    invoke-direct {v0, p0, p1, p2, p3}, Lcom/android/server/wm/Session;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)V

    #@1b
    .line 8286
    .local v0, "session":Lcom/android/server/wm/Session;
    return-object v0
.end method

.method public outOfMemoryWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)Z
    .locals 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 3424
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4
    move-result-wide v0

    #@5
    .line 3427
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@7
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@8
    .line 3428
    const/4 v3, 0x0

    #@9
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    move-result-object v2

    #@d
    .line 3429
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_0

    #@f
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@10
    .line 3435
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@13
    .line 3430
    return v5

    #@14
    .line 3432
    :cond_0
    :try_start_3
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@16
    const-string/jumbo v5, "from-client"

    #@19
    const/4 v6, 0x0

    #@1a
    invoke-virtual {p0, v3, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@1d
    move-result v3

    #@1e
    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@1f
    .line 3435
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@22
    .line 3432
    return v3

    #@23
    .line 3427
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@24
    :try_start_5
    monitor-exit v4

    #@25
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@26
    .line 3434
    :catchall_1
    move-exception v3

    #@27
    .line 3435
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2a
    .line 3434
    throw v3
.end method

.method public overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "enterAnim"    # I
    .param p3, "exitAnim"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;

    #@0
    .prologue
    .line 4201
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4202
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4200
    return-void

    #@a
    .line 4201
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Z)V
    .locals 9
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "targetWidth"    # I
    .param p5, "targetHeight"    # I
    .param p6, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p7, "scaleUp"    # Z

    #@0
    .prologue
    .line 4238
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v8

    #@3
    .line 4239
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    move-object v1, p1

    #@6
    move v2, p2

    #@7
    move v3, p3

    #@8
    move v4, p4

    #@9
    move v5, p5

    #@a
    move-object v6, p6

    #@b
    move/from16 v7, p7

    #@d
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v8

    #@11
    .line 4237
    return-void

    #@12
    .line 4238
    :catchall_0
    move-exception v0

    #@13
    monitor-exit v8

    #@14
    throw v0
.end method

.method public overridePendingAppTransitionClipReveal(IIII)V
    .locals 2
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    #@0
    .prologue
    .line 4219
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4220
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4218
    return-void

    #@a
    .line 4219
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionInPlace(Ljava/lang/String;I)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "anim"    # I

    #@0
    .prologue
    .line 4246
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4247
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/AppTransition;->overrideInPlaceAppTransition(Ljava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4245
    return-void

    #@a
    .line 4246
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionScaleUp(IIII)V
    .locals 2
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    #@0
    .prologue
    .line 4210
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4211
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionScaleUp(IIII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4209
    return-void

    #@a
    .line 4210
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    .locals 7
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p5, "scaleUp"    # Z

    #@0
    .prologue
    .line 4228
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 4229
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    move-object v1, p1

    #@6
    move v2, p2

    #@7
    move v3, p3

    #@8
    move-object v4, p4

    #@9
    move v5, p5

    #@a
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@d
    monitor-exit v6

    #@e
    .line 4227
    return-void

    #@f
    .line 4228
    :catchall_0
    move-exception v0

    #@10
    monitor-exit v6

    #@11
    throw v0
.end method

.method public pauseKeyDispatching(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "_token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 7544
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 7545
    const-string/jumbo v2, "pauseKeyDispatching()"

    #@6
    .line 7544
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 7546
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 7549
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 7550
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 7551
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 7552
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->pauseDispatchingLw(Lcom/android/server/wm/WindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    :cond_1
    monitor-exit v2

    #@28
    .line 7543
    return-void

    #@29
    .line 7549
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@2a
    monitor-exit v2

    #@2b
    throw v1
.end method

.method pauseRotationLocked()V
    .locals 1

    #@0
    .prologue
    .line 6493
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@2
    add-int/lit8 v0, v0, 0x1

    #@4
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@6
    .line 6492
    return-void
.end method

.method public performBootTimeout()V
    .locals 3

    #@0
    .prologue
    .line 5749
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5750
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    monitor-exit v1

    #@8
    .line 5751
    return-void

    #@9
    .line 5753
    :cond_0
    :try_start_1
    const-string/jumbo v0, "WindowManager"

    #@c
    const-string/jumbo v2, "***** BOOT TIMEOUT: forcing display enabled"

    #@f
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@12
    .line 5754
    const/4 v0, 0x1

    #@13
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v1

    #@16
    .line 5756
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@19
    .line 5748
    return-void

    #@1a
    .line 5749
    :catchall_0
    move-exception v0

    #@1b
    monitor-exit v1

    #@1c
    throw v0
.end method

.method public performDeferredDestroyWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 3408
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 3411
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 3412
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@b
    move-result-object v2

    #@c
    .line 3413
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_0

    #@e
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@f
    .line 3419
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@12
    .line 3414
    return-void

    #@13
    .line 3416
    :cond_0
    :try_start_3
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@15
    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->destroyDeferredSurfaceLocked()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@18
    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@19
    .line 3419
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1c
    .line 3407
    return-void

    #@1d
    .line 3411
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@1e
    :try_start_5
    monitor-exit v4

    #@1f
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@20
    .line 3418
    :catchall_1
    move-exception v3

    #@21
    .line 3419
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@24
    .line 3418
    throw v3
.end method

.method public performEnableScreen()V
    .locals 9

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    .line 5816
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v5

    #@4
    .line 5823
    :try_start_0
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    if-eqz v4, :cond_0

    #@8
    monitor-exit v5

    #@9
    .line 5824
    return-void

    #@a
    .line 5826
    :cond_0
    :try_start_1
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@c
    if-nez v4, :cond_1

    #@e
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@10
    if-eqz v4, :cond_2

    #@12
    .line 5831
    :cond_1
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@14
    if-nez v4, :cond_3

    #@16
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkWaitingForWindowsLocked()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@19
    move-result v4

    #@1a
    if-eqz v4, :cond_3

    #@1c
    monitor-exit v5

    #@1d
    .line 5832
    return-void

    #@1e
    :cond_2
    monitor-exit v5

    #@1f
    .line 5827
    return-void

    #@20
    .line 5835
    :cond_3
    :try_start_2
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@22
    if-nez v4, :cond_5

    #@24
    .line 5838
    :try_start_3
    const-string/jumbo v4, "SurfaceFlinger"

    #@27
    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    #@2a
    move-result-object v3

    #@2b
    .line 5839
    .local v3, "surfaceFlinger":Landroid/os/IBinder;
    if-eqz v3, :cond_4

    #@2d
    .line 5841
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@30
    move-result-object v0

    #@31
    .line 5842
    .local v0, "data":Landroid/os/Parcel;
    const-string/jumbo v4, "android.ui.ISurfaceComposer"

    #@34
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    #@37
    .line 5843
    const/4 v4, 0x1

    #@38
    .line 5844
    const/4 v6, 0x0

    #@39
    const/4 v7, 0x0

    #@3a
    .line 5843
    invoke-interface {v3, v4, v0, v6, v7}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    #@3d
    .line 5845
    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@40
    .line 5850
    .end local v0    # "data":Landroid/os/Parcel;
    .end local v3    # "surfaceFlinger":Landroid/os/IBinder;
    :cond_4
    :goto_0
    const/4 v4, 0x1

    #@41
    :try_start_4
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    #@43
    .line 5853
    :cond_5
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@45
    if-nez v4, :cond_6

    #@47
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    #@4a
    move-result v4

    #@4b
    if-eqz v4, :cond_7

    #@4d
    .line 5858
    :cond_6
    const/4 v4, 0x1

    #@4e
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@50
    .line 5862
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@52
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    #@54
    invoke-virtual {v4, v6}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@57
    monitor-exit v5

    #@58
    .line 5866
    :try_start_5
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@5a
    invoke-interface {v4}, Landroid/app/IActivityManager;->bootAnimationComplete()V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    #@5d
    .line 5870
    :goto_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5f
    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->enableScreenAfterBoot()V

    #@62
    .line 5873
    invoke-virtual {p0, v8, v8}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@65
    .line 5815
    return-void

    #@66
    .line 5847
    :catch_0
    move-exception v2

    #@67
    .line 5848
    .local v2, "ex":Landroid/os/RemoteException;
    :try_start_6
    const-string/jumbo v4, "WindowManager"

    #@6a
    const-string/jumbo v6, "Boot completed: SurfaceFlinger is dead!"

    #@6d
    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@70
    goto :goto_0

    #@71
    .line 5816
    .end local v2    # "ex":Landroid/os/RemoteException;
    :catchall_0
    move-exception v4

    #@72
    monitor-exit v5

    #@73
    throw v4

    #@74
    :cond_7
    monitor-exit v5

    #@75
    .line 5855
    return-void

    #@76
    .line 5867
    :catch_1
    move-exception v1

    #@77
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method public pokeDrawLock(Lcom/android/server/wm/Session;Landroid/os/IBinder;)V
    .locals 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 3072
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 3073
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    .line 3074
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@a
    .line 3075
    iget-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    #@c
    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowState;->pokeDrawLockLw(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    :cond_0
    monitor-exit v2

    #@10
    .line 3071
    return-void

    #@11
    .line 3072
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@12
    monitor-exit v2

    #@13
    throw v1
.end method

.method public prepareAppTransition(IZ)V
    .locals 5
    .param p1, "transit"    # I
    .param p2, "alwaysKeepCurrent"    # Z

    #@0
    .prologue
    .line 4157
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4158
    const-string/jumbo v1, "prepareAppTransition()"

    #@6
    .line 4157
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 4159
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 4162
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v1

    #@18
    .line 4168
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1a
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@1d
    move-result v0

    #@1e
    if-eqz v0, :cond_1

    #@20
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@22
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionNone()Z

    #@25
    move-result v0

    #@26
    if-eqz v0, :cond_5

    #@28
    .line 4169
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2a
    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    #@2d
    .line 4183
    :cond_2
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@30
    move-result v0

    #@31
    if-eqz v0, :cond_3

    #@33
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@35
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->prepare()Z

    #@38
    move-result v0

    #@39
    if-eqz v0, :cond_3

    #@3b
    .line 4184
    const/4 v0, 0x0

    #@3c
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@3e
    .line 4186
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@40
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@43
    move-result v0

    #@44
    if-eqz v0, :cond_4

    #@46
    .line 4187
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@48
    const/16 v2, 0xd

    #@4a
    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@4d
    .line 4188
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4f
    const-wide/16 v2, 0x1388

    #@51
    const/16 v4, 0xd

    #@53
    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@56
    :cond_4
    monitor-exit v1

    #@57
    .line 4156
    return-void

    #@58
    .line 4170
    :cond_5
    if-nez p2, :cond_2

    #@5a
    .line 4171
    const/16 v0, 0x8

    #@5c
    if-ne p1, v0, :cond_6

    #@5e
    .line 4172
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@60
    .line 4173
    const/16 v2, 0x9

    #@62
    .line 4172
    invoke-virtual {v0, v2}, Lcom/android/server/wm/AppTransition;->isTransitionEqual(I)Z

    #@65
    move-result v0

    #@66
    .line 4171
    if-eqz v0, :cond_6

    #@68
    .line 4175
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@6a
    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@6d
    goto :goto_0

    #@6e
    .line 4162
    :catchall_0
    move-exception v0

    #@6f
    monitor-exit v1

    #@70
    throw v0

    #@71
    .line 4176
    :cond_6
    const/4 v0, 0x6

    #@72
    if-ne p1, v0, :cond_2

    #@74
    .line 4177
    :try_start_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@76
    .line 4178
    const/4 v2, 0x7

    #@77
    .line 4177
    invoke-virtual {v0, v2}, Lcom/android/server/wm/AppTransition;->isTransitionEqual(I)Z

    #@7a
    move-result v0

    #@7b
    .line 4176
    if-eqz v0, :cond_2

    #@7d
    .line 4180
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@7f
    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@82
    goto :goto_0
.end method

.method prepareDragSurface(Landroid/view/IWindow;Landroid/view/SurfaceSession;IIILandroid/view/Surface;)Landroid/os/IBinder;
    .locals 18
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "session"    # Landroid/view/SurfaceSession;
    .param p3, "flags"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "outSurface"    # Landroid/view/Surface;

    #@0
    .prologue
    .line 7491
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@3
    move-result v9

    #@4
    .line 7492
    .local v9, "callerPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@7
    move-result-wide v14

    #@8
    .line 7493
    .local v14, "origId":J
    const/16 v16, 0x0

    #@a
    .line 7496
    .local v16, "token":Landroid/os/IBinder;
    :try_start_0
    move-object/from16 v0, p0

    #@c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@e
    move-object/from16 v17, v0

    #@10
    monitor-enter v17
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    #@11
    .line 7498
    :try_start_1
    move-object/from16 v0, p0

    #@13
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@15
    if-nez v3, :cond_1

    #@17
    .line 7500
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1a
    move-result-object v11

    #@1b
    .line 7501
    .local v11, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@1e
    move-result-object v10

    #@1f
    .line 7502
    .local v10, "display":Landroid/view/Display;
    new-instance v2, Landroid/view/SurfaceControl;

    #@21
    const-string/jumbo v4, "drag surface"

    #@24
    .line 7503
    const/4 v7, -0x3

    #@25
    const/4 v8, 0x4

    #@26
    move-object/from16 v3, p2

    #@28
    move/from16 v5, p4

    #@2a
    move/from16 v6, p5

    #@2c
    .line 7502
    invoke-direct/range {v2 .. v8}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    #@2f
    .line 7504
    .local v2, "surface":Landroid/view/SurfaceControl;
    invoke-virtual {v10}, Landroid/view/Display;->getLayerStack()I

    #@32
    move-result v3

    #@33
    invoke-virtual {v2, v3}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    #@36
    .line 7507
    move-object/from16 v0, p6

    #@38
    invoke-virtual {v0, v2}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    #@3b
    .line 7508
    invoke-interface/range {p1 .. p1}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@3e
    move-result-object v8

    #@3f
    .line 7509
    .local v8, "winBinder":Landroid/os/IBinder;
    new-instance v5, Landroid/os/Binder;

    #@41
    invoke-direct {v5}, Landroid/os/Binder;-><init>()V
    :try_end_1
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    #@44
    .line 7510
    .local v5, "token":Landroid/os/IBinder;
    :try_start_2
    new-instance v3, Lcom/android/server/wm/DragState;

    #@46
    .end local v16    # "token":Landroid/os/IBinder;
    move-object/from16 v4, p0

    #@48
    move-object v6, v2

    #@49
    move/from16 v7, p3

    #@4b
    invoke-direct/range {v3 .. v8}, Lcom/android/server/wm/DragState;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;Landroid/view/SurfaceControl;ILandroid/os/IBinder;)V

    #@4e
    move-object/from16 v0, p0

    #@50
    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@52
    .line 7511
    new-instance v16, Landroid/os/Binder;

    #@54
    invoke-direct/range {v16 .. v16}, Landroid/os/Binder;-><init>()V

    #@57
    move-object/from16 v0, p0

    #@59
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@5b
    move-object/from16 v0, v16

    #@5d
    iput-object v0, v3, Lcom/android/server/wm/DragState;->mToken:Landroid/os/IBinder;
    :try_end_2
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@5f
    .line 7514
    .end local v5    # "token":Landroid/os/IBinder;
    .local v16, "token":Landroid/os/IBinder;
    :try_start_3
    move-object/from16 v0, p0

    #@61
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@63
    const/16 v4, 0x14

    #@65
    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    #@68
    .line 7515
    move-object/from16 v0, p0

    #@6a
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@6c
    const/16 v4, 0x14

    #@6e
    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@71
    move-result-object v13

    #@72
    .line 7516
    .local v13, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    #@74
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@76
    const-wide/16 v6, 0x1388

    #@78
    invoke-virtual {v3, v13, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_3
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    #@7b
    move-object/from16 v5, v16

    #@7d
    .end local v2    # "surface":Landroid/view/SurfaceControl;
    .end local v8    # "winBinder":Landroid/os/IBinder;
    .end local v10    # "display":Landroid/view/Display;
    .end local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "msg":Landroid/os/Message;
    .end local v16    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    :cond_0
    :goto_0
    :try_start_4
    monitor-exit v17
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@7e
    .line 7529
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@81
    .line 7532
    return-object v5

    #@82
    .line 7518
    .end local v5    # "token":Landroid/os/IBinder;
    .local v16, "token":Landroid/os/IBinder;
    :cond_1
    :try_start_5
    const-string/jumbo v3, "WindowManager"

    #@85
    const-string/jumbo v4, "Drag already in progress"

    #@88
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    #@8b
    move-object/from16 v5, v16

    #@8d
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_0

    #@8e
    .line 7520
    .end local v5    # "token":Landroid/os/IBinder;
    .end local v16    # "token":Landroid/os/IBinder;
    :catch_0
    move-exception v12

    #@8f
    .local v12, "e":Landroid/view/Surface$OutOfResourcesException;
    move-object/from16 v5, v16

    #@91
    .line 7521
    .restart local v5    # "token":Landroid/os/IBinder;
    :goto_1
    :try_start_6
    const-string/jumbo v3, "WindowManager"

    #@94
    new-instance v4, Ljava/lang/StringBuilder;

    #@96
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@99
    const-string/jumbo v6, "Can\'t allocate drag surface w="

    #@9c
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9f
    move-result-object v4

    #@a0
    move/from16 v0, p4

    #@a2
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@a5
    move-result-object v4

    #@a6
    const-string/jumbo v6, " h="

    #@a9
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ac
    move-result-object v4

    #@ad
    move/from16 v0, p5

    #@af
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@b2
    move-result-object v4

    #@b3
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@b6
    move-result-object v4

    #@b7
    invoke-static {v3, v4, v12}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@ba
    .line 7522
    move-object/from16 v0, p0

    #@bc
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@be
    if-eqz v3, :cond_0

    #@c0
    .line 7523
    move-object/from16 v0, p0

    #@c2
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@c4
    invoke-virtual {v3}, Lcom/android/server/wm/DragState;->reset()V

    #@c7
    .line 7524
    const/4 v3, 0x0

    #@c8
    move-object/from16 v0, p0

    #@ca
    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@cc
    goto :goto_0

    #@cd
    .line 7496
    .end local v12    # "e":Landroid/view/Surface$OutOfResourcesException;
    :catchall_0
    move-exception v3

    #@ce
    :goto_2
    :try_start_7
    monitor-exit v17

    #@cf
    throw v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    #@d0
    .line 7528
    :catchall_1
    move-exception v3

    #@d1
    .line 7529
    :goto_3
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@d4
    .line 7528
    throw v3

    #@d5
    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v16    # "token":Landroid/os/IBinder;
    :catchall_2
    move-exception v3

    #@d6
    move-object/from16 v5, v16

    #@d8
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_3

    #@d9
    .line 7496
    .end local v5    # "token":Landroid/os/IBinder;
    .end local v16    # "token":Landroid/os/IBinder;
    :catchall_3
    move-exception v3

    #@da
    move-object/from16 v5, v16

    #@dc
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_2

    #@dd
    .line 7520
    .restart local v2    # "surface":Landroid/view/SurfaceControl;
    .restart local v8    # "winBinder":Landroid/os/IBinder;
    .restart local v10    # "display":Landroid/view/Display;
    .restart local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catch_1
    move-exception v12

    #@de
    .restart local v12    # "e":Landroid/view/Surface$OutOfResourcesException;
    goto :goto_1
.end method

.method public rebootSafeMode(Z)V
    .locals 1
    .param p1, "confirm"    # Z

    #@0
    .prologue
    .line 5662
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->rebootSafeMode(Landroid/content/Context;Z)V

    #@5
    .line 5661
    return-void
.end method

.method final rebuildAppWindowListLocked()V
    .locals 1

    #@0
    .prologue
    .line 8746
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@7
    .line 8745
    return-void
.end method

.method reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    .locals 23
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p2, "operation"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    #@0
    .prologue
    .line 10531
    move-object/from16 v0, p1

    #@2
    iget-object v15, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@4
    .line 10532
    .local v15, "surface":Landroid/view/SurfaceControl;
    const/4 v10, 0x0

    #@5
    .line 10533
    .local v10, "leakedSurface":Z
    const/4 v9, 0x0

    #@6
    .line 10535
    .local v9, "killedApps":Z
    const/16 v20, 0x3

    #@8
    move/from16 v0, v20

    #@a
    new-array v0, v0, [Ljava/lang/Object;

    #@c
    move-object/from16 v20, v0

    #@e
    move-object/from16 v0, p1

    #@10
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@12
    move-object/from16 v21, v0

    #@14
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->toString()Ljava/lang/String;

    #@17
    move-result-object v21

    #@18
    const/16 v22, 0x0

    #@1a
    aput-object v21, v20, v22

    #@1c
    .line 10536
    move-object/from16 v0, p1

    #@1e
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@20
    move-object/from16 v21, v0

    #@22
    move-object/from16 v0, v21

    #@24
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@26
    move/from16 v21, v0

    #@28
    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@2b
    move-result-object v21

    #@2c
    const/16 v22, 0x1

    #@2e
    aput-object v21, v20, v22

    #@30
    const/16 v21, 0x2

    #@32
    aput-object p2, v20, v21

    #@34
    .line 10535
    const/16 v21, 0x7918

    #@36
    move/from16 v0, v21

    #@38
    move-object/from16 v1, v20

    #@3a
    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    #@3d
    .line 10538
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@40
    move-result-wide v4

    #@41
    .line 10544
    .local v4, "callingIdentity":J
    :try_start_0
    const-string/jumbo v20, "WindowManager"

    #@44
    const-string/jumbo v21, "Out of memory for surface!  Looking for leaks..."

    #@47
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@4a
    .line 10545
    move-object/from16 v0, p0

    #@4c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@4e
    move-object/from16 v20, v0

    #@50
    invoke-virtual/range {v20 .. v20}, Landroid/util/SparseArray;->size()I

    #@53
    move-result v11

    #@54
    .line 10546
    .local v11, "numDisplays":I
    const/4 v6, 0x0

    #@55
    .local v6, "displayNdx":I
    :goto_0
    if-ge v6, v11, :cond_3

    #@57
    .line 10547
    move-object/from16 v0, p0

    #@59
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@5b
    move-object/from16 v20, v0

    #@5d
    move-object/from16 v0, v20

    #@5f
    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@62
    move-result-object v20

    #@63
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@65
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@68
    move-result-object v17

    #@69
    .line 10548
    .local v17, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    #@6c
    move-result v12

    #@6d
    .line 10549
    .local v12, "numWindows":I
    const/16 v16, 0x0

    #@6f
    .local v16, "winNdx":I
    :goto_1
    move/from16 v0, v16

    #@71
    if-ge v0, v12, :cond_2

    #@73
    .line 10550
    move-object/from16 v0, v17

    #@75
    move/from16 v1, v16

    #@77
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@7a
    move-result-object v18

    #@7b
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@7d
    .line 10551
    .local v18, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    #@7f
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@81
    move-object/from16 v19, v0

    #@83
    .line 10552
    .local v19, "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v19

    #@85
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@87
    move-object/from16 v20, v0

    #@89
    if-eqz v20, :cond_0

    #@8b
    .line 10553
    move-object/from16 v0, p0

    #@8d
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@8f
    move-object/from16 v20, v0

    #@91
    move-object/from16 v0, v19

    #@93
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@95
    move-object/from16 v21, v0

    #@97
    invoke-virtual/range {v20 .. v21}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@9a
    move-result v20

    #@9b
    if-nez v20, :cond_1

    #@9d
    .line 10554
    const-string/jumbo v20, "WindowManager"

    #@a0
    new-instance v21, Ljava/lang/StringBuilder;

    #@a2
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@a5
    const-string/jumbo v22, "LEAKED SURFACE (session doesn\'t exist): "

    #@a8
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ab
    move-result-object v21

    #@ac
    move-object/from16 v0, v21

    #@ae
    move-object/from16 v1, v18

    #@b0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@b3
    move-result-object v21

    #@b4
    .line 10555
    const-string/jumbo v22, " surface="

    #@b7
    .line 10554
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ba
    move-result-object v21

    #@bb
    .line 10555
    move-object/from16 v0, v19

    #@bd
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@bf
    move-object/from16 v22, v0

    #@c1
    .line 10554
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@c4
    move-result-object v21

    #@c5
    .line 10556
    const-string/jumbo v22, " token="

    #@c8
    .line 10554
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cb
    move-result-object v21

    #@cc
    .line 10556
    move-object/from16 v0, v18

    #@ce
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@d0
    move-object/from16 v22, v0

    #@d2
    .line 10554
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@d5
    move-result-object v21

    #@d6
    .line 10557
    const-string/jumbo v22, " pid="

    #@d9
    .line 10554
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@dc
    move-result-object v21

    #@dd
    .line 10557
    move-object/from16 v0, v18

    #@df
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@e1
    move-object/from16 v22, v0

    #@e3
    move-object/from16 v0, v22

    #@e5
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@e7
    move/from16 v22, v0

    #@e9
    .line 10554
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@ec
    move-result-object v21

    #@ed
    .line 10558
    const-string/jumbo v22, " uid="

    #@f0
    .line 10554
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f3
    move-result-object v21

    #@f4
    .line 10558
    move-object/from16 v0, v18

    #@f6
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@f8
    move-object/from16 v22, v0

    #@fa
    move-object/from16 v0, v22

    #@fc
    iget v0, v0, Lcom/android/server/wm/Session;->mUid:I

    #@fe
    move/from16 v22, v0

    #@100
    .line 10554
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@103
    move-result-object v21

    #@104
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@107
    move-result-object v21

    #@108
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@10b
    .line 10560
    move-object/from16 v0, v19

    #@10d
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@10f
    move-object/from16 v20, v0

    #@111
    invoke-virtual/range {v20 .. v20}, Landroid/view/SurfaceControl;->destroy()V

    #@114
    .line 10561
    const/16 v20, 0x0

    #@116
    move/from16 v0, v20

    #@118
    move-object/from16 v1, v19

    #@11a
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    #@11c
    .line 10562
    const/16 v20, 0x0

    #@11e
    move-object/from16 v0, v20

    #@120
    move-object/from16 v1, v19

    #@122
    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@124
    .line 10563
    const/16 v20, 0x0

    #@126
    move/from16 v0, v20

    #@128
    move-object/from16 v1, v18

    #@12a
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@12c
    .line 10564
    move-object/from16 v0, p0

    #@12e
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@130
    move-object/from16 v20, v0

    #@132
    move-object/from16 v0, v20

    #@134
    move-object/from16 v1, v18

    #@136
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@139
    .line 10565
    const/4 v10, 0x1

    #@13a
    .line 10549
    :cond_0
    :goto_2
    add-int/lit8 v16, v16, 0x1

    #@13c
    goto/16 :goto_1

    #@13e
    .line 10566
    :cond_1
    move-object/from16 v0, v18

    #@140
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@142
    move-object/from16 v20, v0

    #@144
    if-eqz v20, :cond_0

    #@146
    move-object/from16 v0, v18

    #@148
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@14a
    move-object/from16 v20, v0

    #@14c
    move-object/from16 v0, v20

    #@14e
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@150
    move/from16 v20, v0

    #@152
    if-eqz v20, :cond_0

    #@154
    .line 10567
    const-string/jumbo v20, "WindowManager"

    #@157
    new-instance v21, Ljava/lang/StringBuilder;

    #@159
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@15c
    const-string/jumbo v22, "LEAKED SURFACE (app token hidden): "

    #@15f
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@162
    move-result-object v21

    #@163
    move-object/from16 v0, v21

    #@165
    move-object/from16 v1, v18

    #@167
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@16a
    move-result-object v21

    #@16b
    .line 10568
    const-string/jumbo v22, " surface="

    #@16e
    .line 10567
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@171
    move-result-object v21

    #@172
    .line 10568
    move-object/from16 v0, v19

    #@174
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@176
    move-object/from16 v22, v0

    #@178
    .line 10567
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@17b
    move-result-object v21

    #@17c
    .line 10569
    const-string/jumbo v22, " token="

    #@17f
    .line 10567
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@182
    move-result-object v21

    #@183
    .line 10569
    move-object/from16 v0, v18

    #@185
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@187
    move-object/from16 v22, v0

    #@189
    .line 10567
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@18c
    move-result-object v21

    #@18d
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@190
    move-result-object v21

    #@191
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@194
    .line 10571
    move-object/from16 v0, v19

    #@196
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@198
    move-object/from16 v20, v0

    #@19a
    invoke-virtual/range {v20 .. v20}, Landroid/view/SurfaceControl;->destroy()V

    #@19d
    .line 10572
    const/16 v20, 0x0

    #@19f
    move/from16 v0, v20

    #@1a1
    move-object/from16 v1, v19

    #@1a3
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    #@1a5
    .line 10573
    const/16 v20, 0x0

    #@1a7
    move-object/from16 v0, v20

    #@1a9
    move-object/from16 v1, v19

    #@1ab
    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@1ad
    .line 10574
    const/16 v20, 0x0

    #@1af
    move/from16 v0, v20

    #@1b1
    move-object/from16 v1, v18

    #@1b3
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@1b5
    .line 10575
    const/4 v10, 0x1

    #@1b6
    goto :goto_2

    #@1b7
    .line 10546
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    .end local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :cond_2
    add-int/lit8 v6, v6, 0x1

    #@1b9
    goto/16 :goto_0

    #@1bb
    .line 10581
    .end local v12    # "numWindows":I
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    if-nez v10, :cond_9

    #@1bd
    .line 10582
    const-string/jumbo v20, "WindowManager"

    #@1c0
    const-string/jumbo v21, "No leaked surfaces; killing applicatons!"

    #@1c3
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1c6
    .line 10583
    new-instance v13, Landroid/util/SparseIntArray;

    #@1c8
    invoke-direct {v13}, Landroid/util/SparseIntArray;-><init>()V

    #@1cb
    .line 10584
    .local v13, "pidCandidates":Landroid/util/SparseIntArray;
    const/4 v6, 0x0

    #@1cc
    :goto_3
    if-ge v6, v11, :cond_9

    #@1ce
    .line 10585
    move-object/from16 v0, p0

    #@1d0
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1d2
    move-object/from16 v20, v0

    #@1d4
    move-object/from16 v0, v20

    #@1d6
    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@1d9
    move-result-object v20

    #@1da
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@1dc
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1df
    move-result-object v17

    #@1e0
    .line 10586
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    #@1e3
    move-result v12

    #@1e4
    .line 10587
    .restart local v12    # "numWindows":I
    const/16 v16, 0x0

    #@1e6
    .restart local v16    # "winNdx":I
    :goto_4
    move/from16 v0, v16

    #@1e8
    if-ge v0, v12, :cond_6

    #@1ea
    .line 10588
    move-object/from16 v0, v17

    #@1ec
    move/from16 v1, v16

    #@1ee
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1f1
    move-result-object v18

    #@1f2
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@1f4
    .line 10589
    .restart local v18    # "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@1f6
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@1f8
    move-object/from16 v20, v0

    #@1fa
    move-object/from16 v0, v20

    #@1fc
    move-object/from16 v1, v18

    #@1fe
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@201
    move-result v20

    #@202
    if-eqz v20, :cond_5

    #@204
    .line 10587
    :cond_4
    :goto_5
    add-int/lit8 v16, v16, 0x1

    #@206
    goto :goto_4

    #@207
    .line 10592
    :cond_5
    move-object/from16 v0, v18

    #@209
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@20b
    move-object/from16 v19, v0

    #@20d
    .line 10593
    .restart local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v19

    #@20f
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@211
    move-object/from16 v20, v0

    #@213
    if-eqz v20, :cond_4

    #@215
    .line 10594
    move-object/from16 v0, v19

    #@217
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@219
    move-object/from16 v20, v0

    #@21b
    move-object/from16 v0, v20

    #@21d
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@21f
    move/from16 v20, v0

    #@221
    move-object/from16 v0, v19

    #@223
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@225
    move-object/from16 v21, v0

    #@227
    move-object/from16 v0, v21

    #@229
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@22b
    move/from16 v21, v0

    #@22d
    move/from16 v0, v20

    #@22f
    move/from16 v1, v21

    #@231
    invoke-virtual {v13, v0, v1}, Landroid/util/SparseIntArray;->append(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@234
    goto :goto_5

    #@235
    .line 10631
    .end local v6    # "displayNdx":I
    .end local v11    # "numDisplays":I
    .end local v12    # "numWindows":I
    .end local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    .end local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_0
    move-exception v20

    #@236
    .line 10632
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@239
    .line 10631
    throw v20

    #@23a
    .line 10597
    .restart local v6    # "displayNdx":I
    .restart local v11    # "numDisplays":I
    .restart local v12    # "numWindows":I
    .restart local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v16    # "winNdx":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_6
    :try_start_1
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    #@23d
    move-result v20

    #@23e
    if-lez v20, :cond_8

    #@240
    .line 10598
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    #@243
    move-result v20

    #@244
    move/from16 v0, v20

    #@246
    new-array v14, v0, [I

    #@248
    .line 10599
    .local v14, "pids":[I
    const/4 v8, 0x0

    #@249
    .local v8, "i":I
    :goto_6
    array-length v0, v14

    #@24a
    move/from16 v20, v0

    #@24c
    move/from16 v0, v20

    #@24e
    if-ge v8, v0, :cond_7

    #@250
    .line 10600
    invoke-virtual {v13, v8}, Landroid/util/SparseIntArray;->keyAt(I)I

    #@253
    move-result v20

    #@254
    aput v20, v14, v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@256
    .line 10599
    add-int/lit8 v8, v8, 0x1

    #@258
    goto :goto_6

    #@259
    .line 10603
    :cond_7
    :try_start_2
    move-object/from16 v0, p0

    #@25b
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@25d
    move-object/from16 v20, v0

    #@25f
    const-string/jumbo v21, "Free memory"

    #@262
    move-object/from16 v0, v20

    #@264
    move-object/from16 v1, v21

    #@266
    move/from16 v2, p3

    #@268
    invoke-interface {v0, v14, v1, v2}, Landroid/app/IActivityManager;->killPids([ILjava/lang/String;Z)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@26b
    move-result v20

    #@26c
    if-eqz v20, :cond_8

    #@26e
    .line 10604
    const/4 v9, 0x1

    #@26f
    .line 10584
    .end local v8    # "i":I
    .end local v14    # "pids":[I
    :cond_8
    :goto_7
    add-int/lit8 v6, v6, 0x1

    #@271
    goto/16 :goto_3

    #@273
    .line 10612
    .end local v12    # "numWindows":I
    .end local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_9
    if-nez v10, :cond_a

    #@275
    if-eqz v9, :cond_c

    #@277
    .line 10615
    :cond_a
    :try_start_3
    const-string/jumbo v20, "WindowManager"

    #@27a
    const-string/jumbo v21, "Looks like we have reclaimed some memory, clearing surface for retry."

    #@27d
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@280
    .line 10616
    if-eqz v15, :cond_b

    #@282
    .line 10619
    invoke-virtual {v15}, Landroid/view/SurfaceControl;->destroy()V

    #@285
    .line 10620
    const/16 v20, 0x0

    #@287
    move/from16 v0, v20

    #@289
    move-object/from16 v1, p1

    #@28b
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    #@28d
    .line 10621
    const/16 v20, 0x0

    #@28f
    move-object/from16 v0, v20

    #@291
    move-object/from16 v1, p1

    #@293
    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@295
    .line 10622
    move-object/from16 v0, p1

    #@297
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@299
    move-object/from16 v20, v0

    #@29b
    const/16 v21, 0x0

    #@29d
    move/from16 v0, v21

    #@29f
    move-object/from16 v1, v20

    #@2a1
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@2a3
    .line 10623
    move-object/from16 v0, p1

    #@2a5
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@2a7
    move-object/from16 v20, v0

    #@2a9
    move-object/from16 v0, v20

    #@2ab
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2ad
    move-object/from16 v20, v0

    #@2af
    move-object/from16 v0, p0

    #@2b1
    move-object/from16 v1, v20

    #@2b3
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@2b6
    .line 10627
    :cond_b
    :try_start_4
    move-object/from16 v0, p1

    #@2b8
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@2ba
    move-object/from16 v20, v0

    #@2bc
    move-object/from16 v0, v20

    #@2be
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@2c0
    move-object/from16 v20, v0

    #@2c2
    invoke-interface/range {v20 .. v20}, Landroid/view/IWindow;->dispatchGetNewSurface()V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@2c5
    .line 10632
    :cond_c
    :goto_8
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2c8
    .line 10635
    if-nez v10, :cond_d

    #@2ca
    .end local v9    # "killedApps":Z
    :goto_9
    return v9

    #@2cb
    .restart local v9    # "killedApps":Z
    :cond_d
    const/4 v9, 0x1

    #@2cc
    goto :goto_9

    #@2cd
    .line 10628
    :catch_0
    move-exception v7

    #@2ce
    .local v7, "e":Landroid/os/RemoteException;
    goto :goto_8

    #@2cf
    .line 10606
    .end local v7    # "e":Landroid/os/RemoteException;
    .restart local v8    # "i":I
    .restart local v12    # "numWindows":I
    .restart local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v14    # "pids":[I
    .restart local v16    # "winNdx":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :catch_1
    move-exception v7

    #@2d0
    .restart local v7    # "e":Landroid/os/RemoteException;
    goto :goto_7
.end method

.method public reenableKeyguard(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 5386
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5388
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5391
    :cond_0
    if-nez p1, :cond_1

    #@16
    .line 5392
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v1, "token == null"

    #@1b
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v0

    #@1f
    .line 5395
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@21
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@23
    .line 5396
    const/4 v2, 0x2

    #@24
    .line 5395
    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@27
    move-result-object v1

    #@28
    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    #@2b
    .line 5385
    return-void
.end method

.method public reevaluateStatusBarVisibility()V
    .locals 4

    #@0
    .prologue
    .line 11036
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11037
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@7
    invoke-interface {v1, v3}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    #@a
    move-result v0

    #@b
    .line 11038
    .local v0, "visibility":I
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)V

    #@e
    .line 11039
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v2

    #@12
    .line 11035
    return-void

    #@13
    .line 11036
    .end local v0    # "visibility":I
    :catchall_0
    move-exception v1

    #@14
    monitor-exit v2

    #@15
    throw v1
.end method

.method public registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    #@0
    .prologue
    .line 5605
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->registerInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@5
    .line 5604
    return-void
.end method

.method public relayoutWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/content/res/Configuration;Landroid/view/Surface;)I
    .locals 35
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "requestedWidth"    # I
    .param p6, "requestedHeight"    # I
    .param p7, "viewVisibility"    # I
    .param p8, "flags"    # I
    .param p9, "outFrame"    # Landroid/graphics/Rect;
    .param p10, "outOverscanInsets"    # Landroid/graphics/Rect;
    .param p11, "outContentInsets"    # Landroid/graphics/Rect;
    .param p12, "outVisibleInsets"    # Landroid/graphics/Rect;
    .param p13, "outStableInsets"    # Landroid/graphics/Rect;
    .param p14, "outOutsets"    # Landroid/graphics/Rect;
    .param p15, "outConfig"    # Landroid/content/res/Configuration;
    .param p16, "outSurface"    # Landroid/view/Surface;

    #@0
    .prologue
    .line 3086
    const/16 v26, 0x0

    #@2
    .line 3089
    .local v26, "toBeDisplayed":Z
    const/16 v23, 0x0

    #@4
    .line 3092
    .local v23, "surfaceChanged":Z
    move-object/from16 v0, p0

    #@6
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@8
    move-object/from16 v31, v0

    #@a
    const-string/jumbo v32, "android.permission.STATUS_BAR"

    #@d
    invoke-virtual/range {v31 .. v32}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@10
    move-result v31

    #@11
    if-nez v31, :cond_0

    #@13
    const/4 v13, 0x1

    #@14
    .line 3095
    .local v13, "hasStatusBarPermission":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@17
    move-result-wide v20

    #@18
    .line 3097
    .local v20, "origId":J
    move-object/from16 v0, p0

    #@1a
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1c
    move-object/from16 v32, v0

    #@1e
    monitor-enter v32

    #@1f
    .line 3098
    const/16 v31, 0x0

    #@21
    :try_start_0
    move-object/from16 v0, p0

    #@23
    move-object/from16 v1, p1

    #@25
    move-object/from16 v2, p2

    #@27
    move/from16 v3, v31

    #@29
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2c
    move-result-object v29

    #@2d
    .line 3099
    .local v29, "win":Lcom/android/server/wm/WindowState;
    if-nez v29, :cond_1

    #@2f
    .line 3100
    const/16 v31, 0x0

    #@31
    monitor-exit v32

    #@32
    return v31

    #@33
    .line 3092
    .end local v13    # "hasStatusBarPermission":Z
    .end local v20    # "origId":J
    .end local v29    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    const/4 v13, 0x0

    #@34
    .restart local v13    # "hasStatusBarPermission":Z
    goto :goto_0

    #@35
    .line 3102
    .restart local v20    # "origId":J
    .restart local v29    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    :try_start_1
    move-object/from16 v0, v29

    #@37
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@39
    move-object/from16 v30, v0

    #@3b
    .line 3103
    .local v30, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/16 v31, 0x8

    #@3d
    move/from16 v0, p7

    #@3f
    move/from16 v1, v31

    #@41
    if-eq v0, v1, :cond_3

    #@43
    move-object/from16 v0, v29

    #@45
    iget v0, v0, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    #@47
    move/from16 v31, v0

    #@49
    move/from16 v0, v31

    #@4b
    move/from16 v1, p5

    #@4d
    if-ne v0, v1, :cond_2

    #@4f
    .line 3104
    move-object/from16 v0, v29

    #@51
    iget v0, v0, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    #@53
    move/from16 v31, v0

    #@55
    move/from16 v0, v31

    #@57
    move/from16 v1, p6

    #@59
    if-eq v0, v1, :cond_3

    #@5b
    .line 3105
    :cond_2
    const/16 v31, 0x1

    #@5d
    move/from16 v0, v31

    #@5f
    move-object/from16 v1, v29

    #@61
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@63
    .line 3106
    move/from16 v0, p5

    #@65
    move-object/from16 v1, v29

    #@67
    iput v0, v1, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    #@69
    .line 3107
    move/from16 v0, p6

    #@6b
    move-object/from16 v1, v29

    #@6d
    iput v0, v1, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    #@6f
    .line 3110
    :cond_3
    if-eqz p4, :cond_4

    #@71
    .line 3111
    move-object/from16 v0, p0

    #@73
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@75
    move-object/from16 v31, v0

    #@77
    move-object/from16 v0, v31

    #@79
    move-object/from16 v1, p4

    #@7b
    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    #@7e
    .line 3115
    :cond_4
    const/16 v25, 0x0

    #@80
    .line 3116
    .local v25, "systemUiVisibility":I
    if-eqz p4, :cond_5

    #@82
    .line 3117
    move-object/from16 v0, p4

    #@84
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->systemUiVisibility:I

    #@86
    move/from16 v31, v0

    #@88
    move-object/from16 v0, p4

    #@8a
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    #@8c
    move/from16 v33, v0

    #@8e
    or-int v25, v31, v33

    #@90
    .line 3118
    const/high16 v31, 0x3ff0000

    #@92
    and-int v31, v31, v25

    #@94
    if-eqz v31, :cond_5

    #@96
    .line 3119
    if-nez v13, :cond_5

    #@98
    .line 3120
    const v31, -0x3ff0001

    #@9b
    and-int v25, v25, v31

    #@9d
    .line 3125
    :cond_5
    if-eqz p4, :cond_6

    #@9f
    move-object/from16 v0, v29

    #@a1
    iget v0, v0, Lcom/android/server/wm/WindowState;->mSeq:I

    #@a3
    move/from16 v31, v0

    #@a5
    move/from16 v0, p3

    #@a7
    move/from16 v1, v31

    #@a9
    if-ne v0, v1, :cond_6

    #@ab
    .line 3126
    move/from16 v0, v25

    #@ad
    move-object/from16 v1, v29

    #@af
    iput v0, v1, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@b1
    .line 3130
    :cond_6
    and-int/lit8 v31, p8, 0x2

    #@b3
    if-eqz v31, :cond_7

    #@b5
    const/16 v31, 0x1

    #@b7
    .line 3129
    :goto_1
    move/from16 v0, v31

    #@b9
    move-object/from16 v1, v30

    #@bb
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceDestroyDeferred:Z

    #@bd
    .line 3132
    const/4 v6, 0x0

    #@be
    .line 3133
    .local v6, "attrChanges":I
    const/4 v11, 0x0

    #@bf
    .line 3134
    .local v11, "flagChanges":I
    if-eqz p4, :cond_9

    #@c1
    .line 3135
    move-object/from16 v0, v29

    #@c3
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@c5
    move-object/from16 v31, v0

    #@c7
    move-object/from16 v0, v31

    #@c9
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@cb
    move/from16 v31, v0

    #@cd
    move-object/from16 v0, p4

    #@cf
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@d1
    move/from16 v33, v0

    #@d3
    move/from16 v0, v31

    #@d5
    move/from16 v1, v33

    #@d7
    if-eq v0, v1, :cond_8

    #@d9
    .line 3136
    new-instance v31, Ljava/lang/IllegalArgumentException;

    #@db
    .line 3137
    const-string/jumbo v33, "Window type can not be changed after the window is added."

    #@de
    .line 3136
    move-object/from16 v0, v31

    #@e0
    move-object/from16 v1, v33

    #@e2
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@e5
    throw v31
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@e6
    .line 3097
    .end local v6    # "attrChanges":I
    .end local v11    # "flagChanges":I
    .end local v25    # "systemUiVisibility":I
    .end local v29    # "win":Lcom/android/server/wm/WindowState;
    .end local v30    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_0
    move-exception v31

    #@e7
    monitor-exit v32

    #@e8
    throw v31

    #@e9
    .line 3130
    .restart local v25    # "systemUiVisibility":I
    .restart local v29    # "win":Lcom/android/server/wm/WindowState;
    .restart local v30    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_7
    const/16 v31, 0x0

    #@eb
    goto :goto_1

    #@ec
    .line 3139
    .restart local v6    # "attrChanges":I
    .restart local v11    # "flagChanges":I
    :cond_8
    :try_start_2
    move-object/from16 v0, v29

    #@ee
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@f0
    move-object/from16 v31, v0

    #@f2
    move-object/from16 v0, v31

    #@f4
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@f6
    move/from16 v33, v0

    #@f8
    move-object/from16 v0, p4

    #@fa
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@fc
    move/from16 v34, v0

    #@fe
    xor-int v11, v33, v34

    #@100
    move-object/from16 v0, v31

    #@102
    iput v11, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@104
    .line 3140
    move-object/from16 v0, v29

    #@106
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@108
    move-object/from16 v31, v0

    #@10a
    move-object/from16 v0, v31

    #@10c
    move-object/from16 v1, p4

    #@10e
    invoke-virtual {v0, v1}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    #@111
    move-result v6

    #@112
    .line 3141
    and-int/lit16 v0, v6, 0x4001

    #@114
    move/from16 v31, v0

    #@116
    if-eqz v31, :cond_9

    #@118
    .line 3143
    const/16 v31, 0x1

    #@11a
    move/from16 v0, v31

    #@11c
    move-object/from16 v1, v29

    #@11e
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@120
    .line 3151
    :cond_9
    move-object/from16 v0, v29

    #@122
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@124
    move-object/from16 v31, v0

    #@126
    move-object/from16 v0, v31

    #@128
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@12a
    move/from16 v31, v0

    #@12c
    move/from16 v0, v31

    #@12e
    and-int/lit16 v0, v0, 0x80

    #@130
    move/from16 v31, v0

    #@132
    if-eqz v31, :cond_19

    #@134
    const/16 v31, 0x1

    #@136
    .line 3150
    :goto_2
    move/from16 v0, v31

    #@138
    move-object/from16 v1, v29

    #@13a
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mEnforceSizeCompat:Z

    #@13c
    .line 3153
    and-int/lit16 v0, v6, 0x80

    #@13e
    move/from16 v31, v0

    #@140
    if-eqz v31, :cond_a

    #@142
    .line 3154
    move-object/from16 v0, p4

    #@144
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->alpha:F

    #@146
    move/from16 v31, v0

    #@148
    move/from16 v0, v31

    #@14a
    move-object/from16 v1, v30

    #@14c
    iput v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAlpha:F

    #@14e
    .line 3158
    :cond_a
    move-object/from16 v0, v29

    #@150
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@152
    move-object/from16 v31, v0

    #@154
    move-object/from16 v0, v31

    #@156
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@158
    move/from16 v31, v0

    #@15a
    move/from16 v0, v31

    #@15c
    and-int/lit16 v0, v0, 0x4000

    #@15e
    move/from16 v31, v0

    #@160
    if-eqz v31, :cond_1a

    #@162
    const/16 v22, 0x1

    #@164
    .line 3160
    .local v22, "scaledWindow":Z
    :goto_3
    if-eqz v22, :cond_1d

    #@166
    .line 3163
    move-object/from16 v0, p4

    #@168
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    #@16a
    move/from16 v31, v0

    #@16c
    move/from16 v0, v31

    #@16e
    move/from16 v1, p5

    #@170
    if-eq v0, v1, :cond_1b

    #@172
    .line 3164
    move-object/from16 v0, p4

    #@174
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    #@176
    move/from16 v31, v0

    #@178
    move/from16 v0, v31

    #@17a
    int-to-float v0, v0

    #@17b
    move/from16 v31, v0

    #@17d
    move/from16 v0, p5

    #@17f
    int-to-float v0, v0

    #@180
    move/from16 v33, v0

    #@182
    div-float v31, v31, v33

    #@184
    .line 3163
    :goto_4
    move/from16 v0, v31

    #@186
    move-object/from16 v1, v29

    #@188
    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    #@18a
    .line 3165
    move-object/from16 v0, p4

    #@18c
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    #@18e
    move/from16 v31, v0

    #@190
    move/from16 v0, v31

    #@192
    move/from16 v1, p6

    #@194
    if-eq v0, v1, :cond_1c

    #@196
    .line 3166
    move-object/from16 v0, p4

    #@198
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    #@19a
    move/from16 v31, v0

    #@19c
    move/from16 v0, v31

    #@19e
    int-to-float v0, v0

    #@19f
    move/from16 v31, v0

    #@1a1
    move/from16 v0, p6

    #@1a3
    int-to-float v0, v0

    #@1a4
    move/from16 v33, v0

    #@1a6
    div-float v31, v31, v33

    #@1a8
    .line 3165
    :goto_5
    move/from16 v0, v31

    #@1aa
    move-object/from16 v1, v29

    #@1ac
    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    #@1ae
    .line 3171
    :goto_6
    const v31, 0x20008

    #@1b1
    and-int v31, v31, v11

    #@1b3
    if-eqz v31, :cond_1e

    #@1b5
    const/4 v14, 0x1

    #@1b6
    .line 3173
    .local v14, "imMayMove":Z
    :goto_7
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    #@1b9
    move-result v16

    #@1ba
    .line 3174
    .local v16, "isDefaultDisplay":Z
    if-eqz v16, :cond_21

    #@1bc
    move-object/from16 v0, v29

    #@1be
    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@1c0
    move/from16 v31, v0

    #@1c2
    move/from16 v0, v31

    #@1c4
    move/from16 v1, p7

    #@1c6
    if-ne v0, v1, :cond_b

    #@1c8
    .line 3175
    and-int/lit8 v31, v11, 0x8

    #@1ca
    if-eqz v31, :cond_1f

    #@1cc
    .line 3174
    :cond_b
    const/4 v12, 0x1

    #@1cd
    .line 3178
    .local v12, "focusMayChange":Z
    :goto_8
    move-object/from16 v0, v29

    #@1cf
    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@1d1
    move/from16 v31, v0

    #@1d3
    move/from16 v0, v31

    #@1d5
    move/from16 v1, p7

    #@1d7
    if-eq v0, v1, :cond_23

    #@1d9
    .line 3179
    move-object/from16 v0, v29

    #@1db
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1dd
    move-object/from16 v31, v0

    #@1df
    move-object/from16 v0, v31

    #@1e1
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@1e3
    move/from16 v31, v0

    #@1e5
    const/high16 v33, 0x100000

    #@1e7
    and-int v31, v31, v33

    #@1e9
    if-eqz v31, :cond_22

    #@1eb
    const/16 v28, 0x1

    #@1ed
    .line 3180
    .local v28, "wallpaperMayMove":Z
    :goto_9
    const/high16 v31, 0x100000

    #@1ef
    and-int v31, v31, v11

    #@1f1
    if-eqz v31, :cond_24

    #@1f3
    const/16 v31, 0x1

    #@1f5
    :goto_a
    or-int v28, v28, v31

    #@1f7
    .line 3181
    .local v28, "wallpaperMayMove":Z
    and-int/lit16 v0, v11, 0x2000

    #@1f9
    move/from16 v31, v0

    #@1fb
    if-eqz v31, :cond_c

    #@1fd
    move-object/from16 v0, v30

    #@1ff
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@201
    move-object/from16 v31, v0

    #@203
    if-eqz v31, :cond_c

    #@205
    .line 3182
    move-object/from16 v0, v30

    #@207
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@209
    move-object/from16 v31, v0

    #@20b
    move-object/from16 v0, p0

    #@20d
    move-object/from16 v1, v29

    #@20f
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->isSecureLocked(Lcom/android/server/wm/WindowState;)Z

    #@212
    move-result v33

    #@213
    move-object/from16 v0, v31

    #@215
    move/from16 v1, v33

    #@217
    invoke-virtual {v0, v1}, Landroid/view/SurfaceControl;->setSecure(Z)V

    #@21a
    .line 3185
    :cond_c
    const/16 v31, 0x1

    #@21c
    move/from16 v0, v31

    #@21e
    move-object/from16 v1, v29

    #@220
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    #@222
    .line 3186
    move-object/from16 v0, v29

    #@224
    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@226
    move/from16 v18, v0

    #@228
    .line 3187
    .local v18, "oldVisibility":I
    move/from16 v0, p7

    #@22a
    move-object/from16 v1, v29

    #@22c
    iput v0, v1, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@22e
    .line 3194
    if-nez p7, :cond_d

    #@230
    .line 3195
    move-object/from16 v0, v29

    #@232
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@234
    move-object/from16 v31, v0

    #@236
    if-eqz v31, :cond_25

    #@238
    move-object/from16 v0, v29

    #@23a
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@23c
    move-object/from16 v31, v0

    #@23e
    move-object/from16 v0, v31

    #@240
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@242
    move/from16 v31, v0

    #@244
    if-eqz v31, :cond_25

    #@246
    .line 3283
    :cond_d
    const/16 v31, 0x0

    #@248
    move/from16 v0, v31

    #@24a
    move-object/from16 v1, v30

    #@24c
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@24e
    .line 3284
    const/16 v31, 0x0

    #@250
    move/from16 v0, v31

    #@252
    move-object/from16 v1, v30

    #@254
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@256
    .line 3285
    move-object/from16 v0, v30

    #@258
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    #@25a
    move-object/from16 v31, v0

    #@25c
    if-eqz v31, :cond_f

    #@25e
    .line 3290
    move-object/from16 v0, v29

    #@260
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@262
    move/from16 v31, v0

    #@264
    if-nez v31, :cond_f

    #@266
    .line 3291
    const/16 v23, 0x1

    #@268
    .line 3294
    const/16 v27, 0x2

    #@26a
    .line 3295
    .local v27, "transit":I
    move-object/from16 v0, v29

    #@26c
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@26e
    move-object/from16 v31, v0

    #@270
    move-object/from16 v0, v31

    #@272
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@274
    move/from16 v31, v0

    #@276
    const/16 v33, 0x3

    #@278
    move/from16 v0, v31

    #@27a
    move/from16 v1, v33

    #@27c
    if-ne v0, v1, :cond_e

    #@27e
    .line 3296
    const/16 v27, 0x5

    #@280
    .line 3298
    :cond_e
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    #@283
    move-result v31

    #@284
    if-eqz v31, :cond_33

    #@286
    .line 3299
    const/16 v31, 0x0

    #@288
    move-object/from16 v0, v30

    #@28a
    move/from16 v1, v27

    #@28c
    move/from16 v2, v31

    #@28e
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@291
    move-result v31

    #@292
    .line 3298
    if-eqz v31, :cond_33

    #@294
    .line 3300
    move/from16 v12, v16

    #@296
    .line 3301
    .local v12, "focusMayChange":Z
    const/16 v31, 0x1

    #@298
    move/from16 v0, v31

    #@29a
    move-object/from16 v1, v29

    #@29c
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@29e
    .line 3319
    .end local v12    # "focusMayChange":Z
    :goto_b
    move-object/from16 v0, p0

    #@2a0
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@2a2
    move-object/from16 v31, v0

    #@2a4
    if-eqz v31, :cond_f

    #@2a6
    .line 3320
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@2a9
    move-result v31

    #@2aa
    if-nez v31, :cond_f

    #@2ac
    .line 3321
    move-object/from16 v0, p0

    #@2ae
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@2b0
    move-object/from16 v31, v0

    #@2b2
    move-object/from16 v0, v31

    #@2b4
    move-object/from16 v1, v29

    #@2b6
    move/from16 v2, v27

    #@2b8
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@2bb
    .line 3326
    .end local v27    # "transit":I
    :cond_f
    invoke-virtual/range {p16 .. p16}, Landroid/view/Surface;->release()V

    #@2be
    .line 3330
    :cond_10
    :goto_c
    if-eqz v12, :cond_11

    #@2c0
    .line 3332
    const/16 v31, 0x3

    #@2c2
    .line 3333
    const/16 v33, 0x0

    #@2c4
    .line 3332
    move-object/from16 v0, p0

    #@2c6
    move/from16 v1, v31

    #@2c8
    move/from16 v2, v33

    #@2ca
    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@2cd
    move-result v31

    #@2ce
    if-eqz v31, :cond_11

    #@2d0
    .line 3334
    const/4 v14, 0x0

    #@2d1
    .line 3341
    :cond_11
    if-eqz v14, :cond_13

    #@2d3
    const/16 v31, 0x0

    #@2d5
    move-object/from16 v0, p0

    #@2d7
    move/from16 v1, v31

    #@2d9
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@2dc
    move-result v31

    #@2dd
    if-nez v31, :cond_12

    #@2df
    if-eqz v26, :cond_13

    #@2e1
    .line 3347
    :cond_12
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@2e4
    move-result-object v31

    #@2e5
    move-object/from16 v0, p0

    #@2e7
    move-object/from16 v1, v31

    #@2e9
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@2ec
    .line 3350
    :cond_13
    if-eqz v28, :cond_14

    #@2ee
    .line 3351
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2f1
    move-result-object v31

    #@2f2
    move-object/from16 v0, v31

    #@2f4
    iget v0, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@2f6
    move/from16 v33, v0

    #@2f8
    or-int/lit8 v33, v33, 0x4

    #@2fa
    move/from16 v0, v33

    #@2fc
    move-object/from16 v1, v31

    #@2fe
    iput v0, v1, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@300
    .line 3355
    :cond_14
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@303
    move-result-object v8

    #@304
    .line 3356
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v8, :cond_15

    #@306
    .line 3357
    const/16 v31, 0x1

    #@308
    move/from16 v0, v31

    #@30a
    iput-boolean v0, v8, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@30c
    .line 3359
    :cond_15
    and-int/lit8 v31, p8, 0x1

    #@30e
    if-eqz v31, :cond_37

    #@310
    const/16 v31, 0x1

    #@312
    :goto_d
    move/from16 v0, v31

    #@314
    move-object/from16 v1, v29

    #@316
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@318
    .line 3360
    const/16 v31, 0x0

    #@31a
    move-object/from16 v0, p0

    #@31c
    move/from16 v1, v31

    #@31e
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@321
    move-result v7

    #@322
    .line 3361
    .local v7, "configChanged":Z
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@325
    .line 3362
    if-eqz v26, :cond_16

    #@327
    move-object/from16 v0, v29

    #@329
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@32b
    move/from16 v31, v0

    #@32d
    if-eqz v31, :cond_16

    #@32f
    .line 3363
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@332
    move-result-object v9

    #@333
    .line 3365
    .local v9, "displayInfo":Landroid/view/DisplayInfo;
    iget v0, v9, Landroid/view/DisplayInfo;->logicalWidth:I

    #@335
    move/from16 v31, v0

    #@337
    iget v0, v9, Landroid/view/DisplayInfo;->logicalHeight:I

    #@339
    move/from16 v33, v0

    #@33b
    const/16 v34, 0x0

    #@33d
    .line 3364
    move-object/from16 v0, p0

    #@33f
    move-object/from16 v1, v29

    #@341
    move/from16 v2, v31

    #@343
    move/from16 v3, v33

    #@345
    move/from16 v4, v34

    #@347
    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    #@34a
    .line 3367
    .end local v9    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_16
    move-object/from16 v0, v29

    #@34c
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@34e
    move-object/from16 v31, v0

    #@350
    if-eqz v31, :cond_17

    #@352
    .line 3368
    move-object/from16 v0, v29

    #@354
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@356
    move-object/from16 v31, v0

    #@358
    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@35b
    .line 3370
    :cond_17
    move-object/from16 v0, v29

    #@35d
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    #@35f
    move-object/from16 v31, v0

    #@361
    move-object/from16 v0, p9

    #@363
    move-object/from16 v1, v31

    #@365
    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@368
    .line 3371
    move-object/from16 v0, v29

    #@36a
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    #@36c
    move-object/from16 v31, v0

    #@36e
    move-object/from16 v0, p10

    #@370
    move-object/from16 v1, v31

    #@372
    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@375
    .line 3372
    move-object/from16 v0, v29

    #@377
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@379
    move-object/from16 v31, v0

    #@37b
    move-object/from16 v0, p11

    #@37d
    move-object/from16 v1, v31

    #@37f
    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@382
    .line 3373
    move-object/from16 v0, v29

    #@384
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    #@386
    move-object/from16 v31, v0

    #@388
    move-object/from16 v0, p12

    #@38a
    move-object/from16 v1, v31

    #@38c
    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@38f
    .line 3374
    move-object/from16 v0, v29

    #@391
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    #@393
    move-object/from16 v31, v0

    #@395
    move-object/from16 v0, p13

    #@397
    move-object/from16 v1, v31

    #@399
    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@39c
    .line 3375
    move-object/from16 v0, v29

    #@39e
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    #@3a0
    move-object/from16 v31, v0

    #@3a2
    move-object/from16 v0, p14

    #@3a4
    move-object/from16 v1, v31

    #@3a6
    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@3a9
    .line 3387
    move-object/from16 v0, p0

    #@3ab
    iget-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@3ad
    .line 3389
    .local v15, "inTouchMode":Z
    move-object/from16 v0, p0

    #@3af
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@3b1
    move-object/from16 v31, v0

    #@3b3
    const/16 v33, 0x1

    #@3b5
    move-object/from16 v0, v31

    #@3b7
    move/from16 v1, v33

    #@3b9
    invoke-virtual {v0, v1}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@3bc
    monitor-exit v32

    #@3bd
    .line 3396
    if-eqz v7, :cond_18

    #@3bf
    .line 3397
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@3c2
    .line 3400
    :cond_18
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@3c5
    .line 3402
    if-eqz v15, :cond_38

    #@3c7
    const/16 v31, 0x1

    #@3c9
    move/from16 v32, v31

    #@3cb
    .line 3403
    :goto_e
    if-eqz v26, :cond_39

    #@3cd
    const/16 v31, 0x2

    #@3cf
    .line 3402
    :goto_f
    or-int v32, v32, v31

    #@3d1
    .line 3404
    if-eqz v23, :cond_3a

    #@3d3
    const/16 v31, 0x4

    #@3d5
    .line 3402
    :goto_10
    or-int v31, v31, v32

    #@3d7
    return v31

    #@3d8
    .line 3151
    .end local v7    # "configChanged":Z
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v14    # "imMayMove":Z
    .end local v15    # "inTouchMode":Z
    .end local v16    # "isDefaultDisplay":Z
    .end local v18    # "oldVisibility":I
    .end local v22    # "scaledWindow":Z
    .end local v28    # "wallpaperMayMove":Z
    :cond_19
    const/16 v31, 0x0

    #@3da
    goto/16 :goto_2

    #@3dc
    .line 3158
    :cond_1a
    const/16 v22, 0x0

    #@3de
    .restart local v22    # "scaledWindow":Z
    goto/16 :goto_3

    #@3e0
    .line 3164
    :cond_1b
    const/high16 v31, 0x3f800000    # 1.0f

    #@3e2
    goto/16 :goto_4

    #@3e4
    .line 3166
    :cond_1c
    const/high16 v31, 0x3f800000    # 1.0f

    #@3e6
    goto/16 :goto_5

    #@3e8
    .line 3168
    :cond_1d
    const/high16 v31, 0x3f800000    # 1.0f

    #@3ea
    :try_start_3
    move/from16 v0, v31

    #@3ec
    move-object/from16 v1, v29

    #@3ee
    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    #@3f0
    const/high16 v31, 0x3f800000    # 1.0f

    #@3f2
    move/from16 v0, v31

    #@3f4
    move-object/from16 v1, v29

    #@3f6
    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    #@3f8
    goto/16 :goto_6

    #@3fa
    .line 3171
    :cond_1e
    const/4 v14, 0x0

    #@3fb
    .restart local v14    # "imMayMove":Z
    goto/16 :goto_7

    #@3fd
    .line 3176
    .restart local v16    # "isDefaultDisplay":Z
    :cond_1f
    move-object/from16 v0, v29

    #@3ff
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    #@401
    move/from16 v31, v0

    #@403
    if-eqz v31, :cond_20

    #@405
    const/4 v12, 0x0

    #@406
    .local v12, "focusMayChange":Z
    goto/16 :goto_8

    #@408
    .end local v12    # "focusMayChange":Z
    :cond_20
    const/4 v12, 0x1

    #@409
    .restart local v12    # "focusMayChange":Z
    goto/16 :goto_8

    #@40b
    .line 3174
    .end local v12    # "focusMayChange":Z
    :cond_21
    const/4 v12, 0x0

    #@40c
    .restart local v12    # "focusMayChange":Z
    goto/16 :goto_8

    #@40e
    .line 3179
    :cond_22
    const/16 v28, 0x0

    #@410
    .local v28, "wallpaperMayMove":Z
    goto/16 :goto_9

    #@412
    .line 3178
    .end local v28    # "wallpaperMayMove":Z
    :cond_23
    const/16 v28, 0x0

    #@414
    .restart local v28    # "wallpaperMayMove":Z
    goto/16 :goto_9

    #@416
    .line 3180
    :cond_24
    const/16 v31, 0x0

    #@418
    goto/16 :goto_a

    #@41a
    .line 3196
    .restart local v18    # "oldVisibility":I
    .local v28, "wallpaperMayMove":Z
    :cond_25
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@41d
    move-result v31

    #@41e
    if-eqz v31, :cond_31

    #@420
    const/16 v26, 0x0

    #@422
    .line 3197
    :goto_11
    move-object/from16 v0, v29

    #@424
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@426
    move/from16 v31, v0

    #@428
    if-eqz v31, :cond_26

    #@42a
    .line 3198
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowStateAnimator;->cancelExitAnimationForNextAnimationLocked()V

    #@42d
    .line 3199
    const/16 v31, 0x0

    #@42f
    move/from16 v0, v31

    #@431
    move-object/from16 v1, v29

    #@433
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@435
    .line 3201
    :cond_26
    move-object/from16 v0, v29

    #@437
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@439
    move/from16 v31, v0

    #@43b
    if-eqz v31, :cond_27

    #@43d
    .line 3202
    const/16 v31, 0x0

    #@43f
    move/from16 v0, v31

    #@441
    move-object/from16 v1, v29

    #@443
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@445
    .line 3203
    move-object/from16 v0, p0

    #@447
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@449
    move-object/from16 v31, v0

    #@44b
    move-object/from16 v0, v31

    #@44d
    move-object/from16 v1, v29

    #@44f
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@452
    .line 3205
    :cond_27
    const/16 v31, 0x8

    #@454
    move/from16 v0, v18

    #@456
    move/from16 v1, v31

    #@458
    if-ne v0, v1, :cond_28

    #@45a
    .line 3206
    const/16 v31, 0x1

    #@45c
    move/from16 v0, v31

    #@45e
    move-object/from16 v1, v30

    #@460
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@462
    .line 3208
    :cond_28
    const/16 v31, 0x1

    #@464
    move/from16 v0, v31

    #@466
    move-object/from16 v1, v30

    #@468
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@46a
    .line 3209
    if-eqz v26, :cond_2c

    #@46c
    .line 3210
    move-object/from16 v0, v29

    #@46e
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@470
    move-object/from16 v31, v0

    #@472
    move-object/from16 v0, v31

    #@474
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->softInputMode:I

    #@476
    move/from16 v31, v0

    #@478
    move/from16 v0, v31

    #@47a
    and-int/lit16 v0, v0, 0xf0

    #@47c
    move/from16 v31, v0

    #@47e
    .line 3211
    const/16 v33, 0x10

    #@480
    .line 3210
    move/from16 v0, v31

    #@482
    move/from16 v1, v33

    #@484
    if-ne v0, v1, :cond_29

    #@486
    .line 3212
    const/16 v31, 0x1

    #@488
    move/from16 v0, v31

    #@48a
    move-object/from16 v1, v29

    #@48c
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@48e
    .line 3214
    :cond_29
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@491
    move-result v31

    #@492
    if-eqz v31, :cond_2a

    #@494
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@497
    move-result v31

    #@498
    if-eqz v31, :cond_2a

    #@49a
    .line 3215
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowStateAnimator;->applyEnterAnimationLocked()V

    #@49d
    .line 3217
    :cond_2a
    move-object/from16 v0, v29

    #@49f
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4a1
    move-object/from16 v31, v0

    #@4a3
    move-object/from16 v0, v31

    #@4a5
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@4a7
    move/from16 v31, v0

    #@4a9
    .line 3218
    const/high16 v33, 0x200000

    #@4ab
    .line 3217
    and-int v31, v31, v33

    #@4ad
    if-eqz v31, :cond_2b

    #@4af
    .line 3221
    const/16 v31, 0x1

    #@4b1
    move/from16 v0, v31

    #@4b3
    move-object/from16 v1, v29

    #@4b5
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mTurnOnScreen:Z

    #@4b7
    .line 3223
    :cond_2b
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    #@4ba
    move-result v31

    #@4bb
    if-eqz v31, :cond_2c

    #@4bd
    .line 3226
    move-object/from16 v0, p0

    #@4bf
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@4c1
    move-object/from16 v31, v0

    #@4c3
    move-object/from16 v0, p15

    #@4c5
    move-object/from16 v1, v31

    #@4c7
    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->setTo(Landroid/content/res/Configuration;)V

    #@4ca
    .line 3229
    :cond_2c
    and-int/lit8 v31, v6, 0x8

    #@4cc
    if-eqz v31, :cond_2d

    #@4ce
    .line 3232
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowStateAnimator;->tryChangeFormatInPlaceLocked()Z

    #@4d1
    move-result v31

    #@4d2
    if-nez v31, :cond_2d

    #@4d4
    .line 3233
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@4d7
    .line 3234
    const/16 v26, 0x1

    #@4d9
    .line 3235
    const/16 v23, 0x1

    #@4db
    .line 3239
    :cond_2d
    :try_start_4
    move-object/from16 v0, v29

    #@4dd
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@4df
    move/from16 v31, v0

    #@4e1
    if-nez v31, :cond_2e

    #@4e3
    .line 3240
    const/16 v23, 0x1

    #@4e5
    .line 3242
    :cond_2e
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowStateAnimator;->createSurfaceLocked()Landroid/view/SurfaceControl;

    #@4e8
    move-result-object v24

    #@4e9
    .line 3243
    .local v24, "surfaceControl":Landroid/view/SurfaceControl;
    if-eqz v24, :cond_32

    #@4eb
    .line 3244
    move-object/from16 v0, p16

    #@4ed
    move-object/from16 v1, v24

    #@4ef
    invoke-virtual {v0, v1}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@4f2
    .line 3261
    :goto_12
    if-eqz v26, :cond_2f

    #@4f4
    .line 3262
    move/from16 v12, v16

    #@4f6
    .line 3264
    .end local v12    # "focusMayChange":Z
    :cond_2f
    :try_start_5
    move-object/from16 v0, v29

    #@4f8
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4fa
    move-object/from16 v31, v0

    #@4fc
    move-object/from16 v0, v31

    #@4fe
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@500
    move/from16 v31, v0

    #@502
    const/16 v33, 0x7db

    #@504
    move/from16 v0, v31

    #@506
    move/from16 v1, v33

    #@508
    if-ne v0, v1, :cond_30

    #@50a
    .line 3265
    move-object/from16 v0, p0

    #@50c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@50e
    move-object/from16 v31, v0

    #@510
    if-nez v31, :cond_30

    #@512
    .line 3266
    move-object/from16 v0, v29

    #@514
    move-object/from16 v1, p0

    #@516
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@518
    .line 3267
    const/4 v14, 0x1

    #@519
    .line 3269
    :cond_30
    move-object/from16 v0, v29

    #@51b
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@51d
    move-object/from16 v31, v0

    #@51f
    move-object/from16 v0, v31

    #@521
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@523
    move/from16 v31, v0

    #@525
    const/16 v33, 0x1

    #@527
    move/from16 v0, v31

    #@529
    move/from16 v1, v33

    #@52b
    if-ne v0, v1, :cond_10

    #@52d
    .line 3270
    move-object/from16 v0, v29

    #@52f
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@531
    move-object/from16 v31, v0

    #@533
    if-eqz v31, :cond_10

    #@535
    .line 3271
    move-object/from16 v0, v29

    #@537
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@539
    move-object/from16 v31, v0

    #@53b
    move-object/from16 v0, v31

    #@53d
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@53f
    move-object/from16 v31, v0

    #@541
    if-eqz v31, :cond_10

    #@543
    .line 3276
    const v17, 0x480001

    #@546
    .line 3279
    .local v17, "mask":I
    move-object/from16 v0, v29

    #@548
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@54a
    move-object/from16 v31, v0

    #@54c
    move-object/from16 v0, v31

    #@54e
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@550
    move-object/from16 v31, v0

    #@552
    move-object/from16 v0, v31

    #@554
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@556
    move-object/from16 v19, v0

    #@558
    .line 3280
    .local v19, "sa":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v0, v19

    #@55a
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@55c
    move/from16 v31, v0

    #@55e
    const v33, -0x480002

    #@561
    and-int v31, v31, v33

    #@563
    move-object/from16 v0, v29

    #@565
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@567
    move-object/from16 v33, v0

    #@569
    move-object/from16 v0, v33

    #@56b
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@56d
    move/from16 v33, v0

    #@56f
    const v34, 0x480001

    #@572
    and-int v33, v33, v34

    #@574
    or-int v31, v31, v33

    #@576
    move/from16 v0, v31

    #@578
    move-object/from16 v1, v19

    #@57a
    iput v0, v1, Landroid/view/WindowManager$LayoutParams;->flags:I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@57c
    goto/16 :goto_c

    #@57e
    .line 3196
    .end local v17    # "mask":I
    .end local v19    # "sa":Landroid/view/WindowManager$LayoutParams;
    .end local v24    # "surfaceControl":Landroid/view/SurfaceControl;
    .restart local v12    # "focusMayChange":Z
    :cond_31
    const/16 v26, 0x1

    #@580
    goto/16 :goto_11

    #@582
    .line 3250
    .restart local v24    # "surfaceControl":Landroid/view/SurfaceControl;
    :cond_32
    :try_start_6
    invoke-virtual/range {p16 .. p16}, Landroid/view/Surface;->release()V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@585
    goto/16 :goto_12

    #@587
    .line 3252
    .end local v24    # "surfaceControl":Landroid/view/SurfaceControl;
    :catch_0
    move-exception v10

    #@588
    .line 3253
    .local v10, "e":Ljava/lang/Exception;
    :try_start_7
    move-object/from16 v0, p0

    #@58a
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@58c
    move-object/from16 v31, v0

    #@58e
    const/16 v33, 0x1

    #@590
    move-object/from16 v0, v31

    #@592
    move/from16 v1, v33

    #@594
    invoke-virtual {v0, v1}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@597
    .line 3255
    const-string/jumbo v31, "WindowManager"

    #@59a
    new-instance v33, Ljava/lang/StringBuilder;

    #@59c
    invoke-direct/range {v33 .. v33}, Ljava/lang/StringBuilder;-><init>()V

    #@59f
    const-string/jumbo v34, "Exception thrown when creating surface for client "

    #@5a2
    invoke-virtual/range {v33 .. v34}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5a5
    move-result-object v33

    #@5a6
    move-object/from16 v0, v33

    #@5a8
    move-object/from16 v1, p2

    #@5aa
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5ad
    move-result-object v33

    #@5ae
    .line 3256
    const-string/jumbo v34, " ("

    #@5b1
    .line 3255
    invoke-virtual/range {v33 .. v34}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5b4
    move-result-object v33

    #@5b5
    .line 3256
    move-object/from16 v0, v29

    #@5b7
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5b9
    move-object/from16 v34, v0

    #@5bb
    invoke-virtual/range {v34 .. v34}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@5be
    move-result-object v34

    #@5bf
    .line 3255
    invoke-virtual/range {v33 .. v34}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    #@5c2
    move-result-object v33

    #@5c3
    .line 3256
    const-string/jumbo v34, ")"

    #@5c6
    .line 3255
    invoke-virtual/range {v33 .. v34}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5c9
    move-result-object v33

    #@5ca
    invoke-virtual/range {v33 .. v33}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@5cd
    move-result-object v33

    #@5ce
    move-object/from16 v0, v31

    #@5d0
    move-object/from16 v1, v33

    #@5d2
    invoke-static {v0, v1, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@5d5
    .line 3258
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    #@5d8
    .line 3259
    const/16 v31, 0x0

    #@5da
    monitor-exit v32

    #@5db
    return v31

    #@5dc
    .line 3302
    .end local v10    # "e":Ljava/lang/Exception;
    .restart local v27    # "transit":I
    :cond_33
    :try_start_8
    move-object/from16 v0, v29

    #@5de
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@5e0
    move-object/from16 v31, v0

    #@5e2
    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    #@5e5
    move-result v31

    #@5e6
    if-eqz v31, :cond_34

    #@5e8
    .line 3305
    const/16 v31, 0x1

    #@5ea
    move/from16 v0, v31

    #@5ec
    move-object/from16 v1, v29

    #@5ee
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@5f0
    goto/16 :goto_b

    #@5f2
    .line 3306
    :cond_34
    move-object/from16 v0, p0

    #@5f4
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@5f6
    move-object/from16 v31, v0

    #@5f8
    move-object/from16 v0, v29

    #@5fa
    move-object/from16 v1, v31

    #@5fc
    if-ne v0, v1, :cond_35

    #@5fe
    .line 3310
    const/16 v31, 0x1

    #@600
    move/from16 v0, v31

    #@602
    move-object/from16 v1, v29

    #@604
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@606
    .line 3311
    move-object/from16 v0, v29

    #@608
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@60a
    move-object/from16 v31, v0

    #@60c
    const/16 v33, 0x1

    #@60e
    move/from16 v0, v33

    #@610
    move-object/from16 v1, v31

    #@612
    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    #@614
    goto/16 :goto_b

    #@616
    .line 3313
    :cond_35
    move-object/from16 v0, p0

    #@618
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@61a
    move-object/from16 v31, v0

    #@61c
    move-object/from16 v0, v31

    #@61e
    move-object/from16 v1, v29

    #@620
    if-ne v0, v1, :cond_36

    #@622
    .line 3314
    const/16 v31, 0x0

    #@624
    move-object/from16 v0, v31

    #@626
    move-object/from16 v1, p0

    #@628
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@62a
    .line 3316
    :cond_36
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    #@62d
    goto/16 :goto_b

    #@62f
    .line 3359
    .end local v12    # "focusMayChange":Z
    .end local v27    # "transit":I
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_37
    const/16 v31, 0x0

    #@631
    goto/16 :goto_d

    #@633
    .line 3402
    .restart local v7    # "configChanged":Z
    .restart local v15    # "inTouchMode":Z
    :cond_38
    const/16 v31, 0x0

    #@635
    move/from16 v32, v31

    #@637
    goto/16 :goto_e

    #@639
    .line 3403
    :cond_39
    const/16 v31, 0x0

    #@63b
    goto/16 :goto_f

    #@63d
    .line 3404
    :cond_3a
    const/16 v31, 0x0

    #@63f
    goto/16 :goto_10
.end method

.method public removeAppStartingWindow(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 4479
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 4480
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@5
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@8
    move-result-object v1

    #@9
    check-cast v1, Lcom/android/server/wm/WindowToken;

    #@b
    iget-object v0, v1, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@d
    .line 4481
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v1, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@f
    if-eqz v1, :cond_0

    #@11
    .line 4482
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@14
    :cond_0
    monitor-exit v2

    #@15
    .line 4478
    return-void

    #@16
    .line 4479
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@17
    monitor-exit v2

    #@18
    throw v1
.end method

.method public removeAppToken(Landroid/os/IBinder;)V
    .locals 14
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 4879
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4880
    const-string/jumbo v2, "removeAppToken()"

    #@6
    .line 4879
    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 4881
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 4884
    :cond_0
    const/4 v1, 0x0

    #@16
    .line 4885
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    const/4 v12, 0x0

    #@17
    .line 4886
    .local v12, "startingToken":Lcom/android/server/wm/AppWindowToken;
    const/4 v8, 0x0

    #@18
    .line 4888
    .local v8, "delayed":Z
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@1b
    move-result-wide v10

    #@1c
    .line 4889
    .local v10, "origId":J
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1e
    monitor-enter v13

    #@1f
    .line 4890
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@21
    invoke-virtual {v0, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@24
    move-result-object v7

    #@25
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@27
    .line 4891
    .local v7, "basewtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_8

    #@29
    iget-object v1, v7, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@2b
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_8

    #@2d
    .line 4894
    iget-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    #@2f
    .line 4893
    const/4 v2, 0x0

    #@30
    const/4 v3, 0x0

    #@31
    .line 4894
    const/4 v4, -0x1

    #@32
    const/4 v5, 0x1

    #@33
    move-object v0, p0

    #@34
    .line 4893
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    #@37
    move-result v8

    #@38
    .line 4895
    .local v8, "delayed":Z
    const/4 v0, 0x0

    #@39
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@3b
    .line 4896
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@3d
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@40
    .line 4897
    const/4 v0, 0x0

    #@41
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@43
    .line 4898
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@45
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@48
    move-result v0

    #@49
    if-eqz v0, :cond_6

    #@4b
    .line 4899
    const/4 v8, 0x1

    #@4c
    .line 4910
    .end local v8    # "delayed":Z
    :cond_1
    :goto_0
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@4e
    iget-object v9, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@50
    .line 4911
    .local v9, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v8, :cond_2

    #@52
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@54
    invoke-virtual {v0}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@57
    move-result v0

    #@58
    if-eqz v0, :cond_7

    #@5a
    .line 4921
    :cond_2
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@5c
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    #@5f
    .line 4922
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@61
    const/4 v2, 0x0

    #@62
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    #@64
    .line 4923
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->removeAppFromTaskLocked()V

    #@67
    .line 4926
    :goto_1
    const/4 v0, 0x1

    #@68
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@6a
    .line 4927
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@6c
    if-eqz v0, :cond_3

    #@6e
    .line 4928
    move-object v12, v1

    #@6f
    .line 4930
    .end local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_3
    const/4 v0, 0x1

    #@70
    const/4 v2, 0x1

    #@71
    invoke-virtual {p0, v1, v0, v2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@74
    .line 4931
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@76
    if-ne v0, v1, :cond_4

    #@78
    .line 4933
    const/4 v0, 0x0

    #@79
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@7b
    .line 4934
    const/4 v0, 0x0

    #@7c
    const/4 v2, 0x1

    #@7d
    invoke-direct {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@80
    .line 4935
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@82
    const/4 v2, 0x0

    #@83
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    #@86
    .line 4941
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_4
    :goto_2
    if-nez v8, :cond_5

    #@88
    if-eqz v1, :cond_5

    #@8a
    .line 4942
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@8d
    .line 4946
    :cond_5
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@90
    monitor-exit v13

    #@91
    .line 4948
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@94
    .line 4878
    return-void

    #@95
    .line 4900
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v8    # "delayed":Z
    .restart local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_6
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@97
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@9a
    move-result v0

    #@9b
    if-eqz v0, :cond_1

    #@9d
    .line 4901
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@9f
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@a2
    .line 4902
    const/4 v8, 0x1

    #@a3
    .local v8, "delayed":Z
    goto :goto_0

    #@a4
    .line 4915
    .end local v8    # "delayed":Z
    .restart local v9    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_7
    iget-object v0, v9, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    #@a6
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->add(Ljava/lang/Object;)Z

    #@a9
    .line 4916
    const/4 v0, 0x1

    #@aa
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@ac
    goto :goto_1

    #@ad
    .line 4889
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v7    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v0

    #@ae
    monitor-exit v13

    #@af
    throw v0

    #@b0
    .line 4938
    .restart local v7    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .restart local v8    # "delayed":Z
    .restart local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    :try_start_2
    const-string/jumbo v0, "WindowManager"

    #@b3
    new-instance v2, Ljava/lang/StringBuilder;

    #@b5
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@b8
    const-string/jumbo v3, "Attempted to remove non-existing app token: "

    #@bb
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@be
    move-result-object v2

    #@bf
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@c2
    move-result-object v2

    #@c3
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c6
    move-result-object v2

    #@c7
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@ca
    goto :goto_2
.end method

.method removeInputConsumer()Z
    .locals 4

    #@0
    .prologue
    const/4 v3, 0x1

    #@1
    .line 11054
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v1

    #@4
    .line 11055
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@6
    if-eqz v0, :cond_0

    #@8
    .line 11056
    const/4 v0, 0x0

    #@9
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@b
    .line 11057
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@d
    const/4 v2, 0x1

    #@e
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v1

    #@12
    .line 11058
    return v3

    #@13
    .line 11060
    :cond_0
    const/4 v0, 0x0

    #@14
    monitor-exit v1

    #@15
    return v0

    #@16
    .line 11054
    :catchall_0
    move-exception v0

    #@17
    monitor-exit v1

    #@18
    throw v0
.end method

.method public removeRotationWatcher(Landroid/view/IRotationWatcher;)V
    .locals 8
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    #@0
    .prologue
    .line 6724
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v4

    #@4
    .line 6725
    .local v4, "watcherBinder":Landroid/os/IBinder;
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v6

    #@7
    .line 6726
    const/4 v1, 0x0

    #@8
    .local v1, "i":I
    :goto_0
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@a
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@d
    move-result v5

    #@e
    if-ge v1, v5, :cond_2

    #@10
    .line 6727
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@12
    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@15
    move-result-object v3

    #@16
    check-cast v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@18
    .line 6728
    .local v3, "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@1a
    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@1d
    move-result-object v5

    #@1e
    if-ne v4, v5, :cond_1

    #@20
    .line 6729
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@22
    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    #@25
    move-result-object v2

    #@26
    check-cast v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@28
    .line 6730
    .local v2, "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@2a
    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@2d
    move-result-object v0

    #@2e
    .line 6731
    .local v0, "binder":Landroid/os/IBinder;
    if-eqz v0, :cond_0

    #@30
    .line 6732
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->deathRecipient:Landroid/os/IBinder$DeathRecipient;

    #@32
    const/4 v7, 0x0

    #@33
    invoke-interface {v0, v5, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@36
    .line 6734
    :cond_0
    add-int/lit8 v1, v1, -0x1

    #@38
    .line 6726
    .end local v0    # "binder":Landroid/os/IBinder;
    .end local v2    # "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_1
    add-int/lit8 v1, v1, 0x1

    #@3a
    goto :goto_0

    #@3b
    .end local v3    # "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_2
    monitor-exit v6

    #@3c
    .line 6723
    return-void

    #@3d
    .line 6725
    :catchall_0
    move-exception v5

    #@3e
    monitor-exit v6

    #@3f
    throw v5
.end method

.method public removeStack(I)V
    .locals 1
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5196
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    #@5
    .line 5195
    return-void
.end method

.method public removeTask(I)V
    .locals 3
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5200
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5201
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5202
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    monitor-exit v2

    #@e
    .line 5204
    return-void

    #@f
    .line 5206
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->removeLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@12
    monitor-exit v2

    #@13
    .line 5199
    return-void

    #@14
    .line 5200
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@15
    monitor-exit v2

    #@16
    throw v1
.end method

.method public removeWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 3
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 2696
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2697
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@7
    move-result-object v0

    #@8
    .line 2698
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_0

    #@a
    monitor-exit v2

    #@b
    .line 2699
    return-void

    #@c
    .line 2701
    :cond_0
    :try_start_1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@f
    monitor-exit v2

    #@10
    .line 2695
    return-void

    #@11
    .line 2696
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@12
    monitor-exit v2

    #@13
    throw v1
.end method

.method public removeWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@0
    .prologue
    .line 7095
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 7096
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 7094
    return-void

    #@a
    .line 7095
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V
    .locals 13
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v12, 0x1

    #@1
    const/4 v11, 0x0

    #@2
    const/4 v10, 0x0

    #@3
    .line 2796
    iget-boolean v6, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@5
    if-eqz v6, :cond_0

    #@7
    .line 2798
    return-void

    #@8
    .line 2801
    :cond_0
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@a
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@d
    move-result v6

    #@e
    add-int/lit8 v3, v6, -0x1

    #@10
    .local v3, "i":I
    :goto_0
    if-ltz v3, :cond_1

    #@12
    .line 2802
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@14
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@17
    move-result-object v1

    #@18
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@1a
    .line 2803
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    const-string/jumbo v6, "WindowManager"

    #@1d
    new-instance v7, Ljava/lang/StringBuilder;

    #@1f
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    #@22
    const-string/jumbo v8, "Force-removing child win "

    #@25
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@28
    move-result-object v7

    #@29
    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v7

    #@2d
    const-string/jumbo v8, " from container "

    #@30
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@33
    move-result-object v7

    #@34
    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@37
    move-result-object v7

    #@38
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3b
    move-result-object v7

    #@3c
    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@3f
    .line 2805
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    #@42
    .line 2801
    add-int/lit8 v3, v3, -0x1

    #@44
    goto :goto_0

    #@45
    .line 2808
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_1
    iput-boolean v12, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@47
    .line 2810
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@49
    if-ne v6, p1, :cond_2

    #@4b
    .line 2811
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@4e
    .line 2820
    :cond_2
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@50
    invoke-interface {v6, p1}, Landroid/view/WindowManagerPolicy;->removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    #@53
    .line 2821
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->removeLocked()V

    #@56
    .line 2824
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@58
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@5a
    invoke-interface {v7}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@5d
    move-result-object v7

    #@5e
    invoke-virtual {v6, v7}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@61
    .line 2825
    iget v6, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@63
    const/4 v7, -0x1

    #@64
    if-eq v6, v7, :cond_3

    #@66
    .line 2826
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@68
    iget v7, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@6a
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@6d
    move-result v8

    #@6e
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@71
    move-result-object v9

    #@72
    invoke-virtual {v6, v7, v8, v9}, Landroid/app/AppOpsManager;->finishOp(IILjava/lang/String;)V

    #@75
    .line 2829
    :cond_3
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@77
    invoke-virtual {v6, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@7a
    .line 2830
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@7c
    invoke-virtual {v6, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@7f
    .line 2831
    iput-boolean v12, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@81
    .line 2834
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@83
    if-ne v6, p1, :cond_b

    #@85
    .line 2835
    iput-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@87
    .line 2840
    :cond_4
    :goto_1
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@89
    .line 2841
    .local v4, "token":Lcom/android/server/wm/WindowToken;
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@8b
    .line 2843
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v6, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@8d
    invoke-virtual {v6, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@90
    .line 2844
    if-eqz v0, :cond_5

    #@92
    .line 2845
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@94
    invoke-virtual {v6, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@97
    .line 2850
    :cond_5
    iget-object v6, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@99
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@9c
    move-result v6

    #@9d
    if-nez v6, :cond_6

    #@9f
    .line 2851
    iget-boolean v6, v4, Lcom/android/server/wm/WindowToken;->explicit:Z

    #@a1
    if-nez v6, :cond_c

    #@a3
    .line 2852
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@a5
    iget-object v7, v4, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    #@a7
    invoke-virtual {v6, v7}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@aa
    .line 2858
    :cond_6
    :goto_2
    if-eqz v0, :cond_7

    #@ac
    .line 2859
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@ae
    if-ne v6, p1, :cond_d

    #@b0
    .line 2861
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@b3
    .line 2875
    :cond_7
    :goto_3
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@b5
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    #@b7
    const/16 v7, 0x7dd

    #@b9
    if-ne v6, v7, :cond_f

    #@bb
    .line 2876
    const-wide/16 v6, 0x0

    #@bd
    iput-wide v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperTimeoutTime:J

    #@bf
    .line 2877
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@c2
    move-result-object v6

    #@c3
    iget v7, v6, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@c5
    or-int/lit8 v7, v7, 0x4

    #@c7
    iput v7, v6, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@c9
    .line 2884
    :cond_8
    :goto_4
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@cc
    move-result-object v5

    #@cd
    .line 2885
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    if-eqz v5, :cond_a

    #@cf
    .line 2886
    invoke-virtual {v5, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@d2
    .line 2887
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    #@d4
    if-nez v6, :cond_a

    #@d6
    .line 2888
    invoke-direct {p0, v5}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@d9
    .line 2889
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@dc
    move-result-object v2

    #@dd
    .line 2890
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v2, :cond_9

    #@df
    .line 2891
    iput-boolean v12, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@e1
    .line 2893
    :cond_9
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@e4
    .line 2894
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@e6
    if-eqz v6, :cond_a

    #@e8
    .line 2895
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@ea
    invoke-virtual {v6}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@ed
    .line 2900
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_a
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@ef
    invoke-virtual {v6, v12}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@f2
    .line 2795
    return-void

    #@f3
    .line 2836
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "token":Lcom/android/server/wm/WindowToken;
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_b
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@f5
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    #@f7
    const/16 v7, 0x7dc

    #@f9
    if-ne v6, v7, :cond_4

    #@fb
    .line 2837
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@fd
    invoke-virtual {v6, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@100
    goto :goto_1

    #@101
    .line 2853
    .restart local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "token":Lcom/android/server/wm/WindowToken;
    :cond_c
    if-eqz v0, :cond_6

    #@103
    .line 2854
    iput-boolean v11, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@105
    goto :goto_2

    #@106
    .line 2863
    :cond_d
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@108
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@10b
    move-result v6

    #@10c
    if-nez v6, :cond_e

    #@10e
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@110
    if-eqz v6, :cond_e

    #@112
    .line 2867
    iput-object v10, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@114
    goto :goto_3

    #@115
    .line 2868
    :cond_e
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@117
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@11a
    move-result v6

    #@11b
    if-ne v6, v12, :cond_7

    #@11d
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@11f
    if-eqz v6, :cond_7

    #@121
    .line 2871
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@124
    goto :goto_3

    #@125
    .line 2879
    :cond_f
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@127
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@129
    const/high16 v7, 0x100000

    #@12b
    and-int/2addr v6, v7

    #@12c
    if-eqz v6, :cond_8

    #@12e
    .line 2880
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@131
    move-result-object v6

    #@132
    iget v7, v6, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@134
    or-int/lit8 v7, v7, 0x4

    #@136
    iput v7, v6, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@138
    goto :goto_4
.end method

.method removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    .locals 14
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v11, 0x3

    #@1
    const/4 v13, 0x1

    #@2
    const/4 v12, 0x0

    #@3
    .line 2706
    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5
    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    #@7
    if-ne v10, v11, :cond_7

    #@9
    const/4 v5, 0x1

    #@a
    .line 2707
    .local v5, "startingWindow":Z
    :goto_0
    if-eqz v5, :cond_0

    #@c
    .line 2717
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@f
    move-result-wide v6

    #@10
    .line 2719
    .local v6, "origId":J
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->disposeInputChannel()V

    #@13
    .line 2731
    const/4 v9, 0x0

    #@14
    .line 2736
    .local v9, "wasVisible":Z
    iget-boolean v10, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@16
    if-eqz v10, :cond_b

    #@18
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@1b
    move-result v10

    #@1c
    if-eqz v10, :cond_b

    #@1e
    .line 2739
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    #@21
    move-result v9

    #@22
    .line 2740
    .local v9, "wasVisible":Z
    if-eqz v9, :cond_2

    #@24
    .line 2742
    if-nez v5, :cond_8

    #@26
    .line 2743
    const/4 v8, 0x2

    #@27
    .line 2747
    .local v8, "transit":I
    :goto_1
    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@29
    invoke-virtual {v10, v8, v12}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@2c
    move-result v10

    #@2d
    if-eqz v10, :cond_1

    #@2f
    .line 2748
    iput-boolean v13, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@31
    .line 2751
    :cond_1
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@33
    if-eqz v10, :cond_2

    #@35
    .line 2752
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@38
    move-result v10

    #@39
    if-nez v10, :cond_2

    #@3b
    .line 2753
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@3d
    invoke-virtual {v10, p1, v8}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@40
    .line 2756
    .end local v8    # "transit":I
    :cond_2
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@42
    .line 2757
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@44
    invoke-virtual {v10}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    #@47
    move-result v3

    #@48
    .line 2761
    .local v3, "isAnimating":Z
    if-eqz v5, :cond_a

    #@4a
    if-eqz v0, :cond_a

    #@4c
    .line 2762
    iget-object v10, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@4e
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    #@51
    move-result v10

    #@52
    if-ne v10, v13, :cond_a

    #@54
    if-eqz v3, :cond_9

    #@56
    const/4 v4, 0x0

    #@57
    .line 2763
    .local v4, "lastWinStartingNotAnimating":Z
    :goto_2
    if-nez v4, :cond_b

    #@59
    iget-boolean v10, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@5b
    if-nez v10, :cond_3

    #@5d
    if-eqz v3, :cond_b

    #@5f
    .line 2765
    :cond_3
    iput-boolean v13, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    #@61
    .line 2766
    iput-boolean v13, p1, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    #@63
    .line 2767
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@66
    move-result-object v1

    #@67
    .line 2768
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_4

    #@69
    .line 2769
    iput-boolean v13, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@6b
    .line 2771
    :cond_4
    invoke-direct {p0, v11, v12}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@6e
    move-result v2

    #@6f
    .line 2773
    .local v2, "focusChanged":Z
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@72
    .line 2774
    if-eqz v0, :cond_5

    #@74
    .line 2775
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@77
    .line 2777
    :cond_5
    if-eqz v2, :cond_6

    #@79
    .line 2778
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@7b
    invoke-virtual {v10, v12}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@7e
    .line 2780
    :cond_6
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@81
    .line 2781
    return-void

    #@82
    .line 2706
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "focusChanged":Z
    .end local v3    # "isAnimating":Z
    .end local v4    # "lastWinStartingNotAnimating":Z
    .end local v5    # "startingWindow":Z
    .end local v6    # "origId":J
    .end local v9    # "wasVisible":Z
    :cond_7
    const/4 v5, 0x0

    #@83
    .restart local v5    # "startingWindow":Z
    goto :goto_0

    #@84
    .line 2744
    .restart local v6    # "origId":J
    .restart local v9    # "wasVisible":Z
    :cond_8
    const/4 v8, 0x5

    #@85
    .restart local v8    # "transit":I
    goto :goto_1

    #@86
    .line 2762
    .end local v8    # "transit":I
    .restart local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v3    # "isAnimating":Z
    :cond_9
    const/4 v4, 0x1

    #@87
    .restart local v4    # "lastWinStartingNotAnimating":Z
    goto :goto_2

    #@88
    .line 2761
    .end local v4    # "lastWinStartingNotAnimating":Z
    :cond_a
    const/4 v4, 0x0

    #@89
    .restart local v4    # "lastWinStartingNotAnimating":Z
    goto :goto_2

    #@8a
    .line 2785
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v3    # "isAnimating":Z
    .end local v4    # "lastWinStartingNotAnimating":Z
    .end local v9    # "wasVisible":Z
    :cond_b
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    #@8d
    .line 2788
    if-eqz v9, :cond_c

    #@8f
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@92
    move-result v10

    #@93
    if-eqz v10, :cond_c

    #@95
    .line 2789
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@97
    const/16 v11, 0x12

    #@99
    invoke-virtual {v10, v11}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@9c
    .line 2791
    :cond_c
    invoke-direct {p0, v12, v13}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@9f
    .line 2792
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@a2
    .line 2705
    return-void
.end method

.method public removeWindowToken(Landroid/os/IBinder;)V
    .locals 14
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/16 v13, 0x7dd

    #@2
    .line 3637
    const-string/jumbo v9, "android.permission.MANAGE_APP_TOKENS"

    #@5
    .line 3638
    const-string/jumbo v10, "removeWindowToken()"

    #@8
    .line 3637
    invoke-virtual {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v9

    #@c
    if-nez v9, :cond_0

    #@e
    .line 3639
    new-instance v9, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v10, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v9, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v9

    #@17
    .line 3642
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@1a
    move-result-wide v6

    #@1b
    .line 3643
    .local v6, "origId":J
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1d
    monitor-enter v10

    #@1e
    .line 3644
    const/4 v3, 0x0

    #@1f
    .line 3645
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    :try_start_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@21
    invoke-virtual {v9, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@24
    move-result-object v8

    #@25
    check-cast v8, Lcom/android/server/wm/WindowToken;

    #@27
    .line 3646
    .local v8, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v8, :cond_9

    #@29
    .line 3647
    const/4 v2, 0x0

    #@2a
    .line 3648
    .local v2, "delayed":Z
    iget-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@2c
    if-nez v9, :cond_8

    #@2e
    .line 3649
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@30
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@33
    move-result v0

    #@34
    .line 3650
    .local v0, "N":I
    const/4 v1, 0x0

    #@35
    .line 3652
    .local v1, "changed":Z
    const/4 v4, 0x0

    #@36
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v4, "i":I
    :goto_0
    if-ge v4, v0, :cond_4

    #@38
    .line 3653
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3a
    invoke-virtual {v9, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v5

    #@3e
    check-cast v5, Lcom/android/server/wm/WindowState;

    #@40
    .line 3654
    .local v5, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@43
    move-result-object v3

    #@44
    .line 3656
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@46
    invoke-virtual {v9}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    #@49
    move-result v9

    #@4a
    if-eqz v9, :cond_1

    #@4c
    .line 3657
    const/4 v2, 0x1

    #@4d
    .line 3660
    :cond_1
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@50
    move-result v9

    #@51
    if-eqz v9, :cond_3

    #@53
    .line 3661
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@55
    const/4 v11, 0x2

    #@56
    .line 3662
    const/4 v12, 0x0

    #@57
    .line 3661
    invoke-virtual {v9, v11, v12}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@5a
    .line 3664
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@5c
    if-eqz v9, :cond_2

    #@5e
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    #@61
    move-result v9

    #@62
    if-eqz v9, :cond_2

    #@64
    .line 3665
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@66
    .line 3666
    const/4 v11, 0x2

    #@67
    .line 3665
    invoke-virtual {v9, v5, v11}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@6a
    .line 3668
    :cond_2
    const/4 v1, 0x1

    #@6b
    .line 3669
    if-eqz v3, :cond_3

    #@6d
    .line 3670
    const/4 v9, 0x1

    #@6e
    iput-boolean v9, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@70
    .line 3652
    :cond_3
    add-int/lit8 v4, v4, 0x1

    #@72
    goto :goto_0

    #@73
    .line 3675
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_4
    const/4 v9, 0x1

    #@74
    iput-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@76
    .line 3677
    if-eqz v1, :cond_5

    #@78
    .line 3678
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@7b
    .line 3679
    const/4 v9, 0x0

    #@7c
    .line 3680
    const/4 v11, 0x0

    #@7d
    .line 3679
    invoke-direct {p0, v9, v11}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@80
    .line 3683
    :cond_5
    if-eqz v2, :cond_7

    #@82
    if-eqz v3, :cond_7

    #@84
    .line 3684
    iget-object v9, v3, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    #@86
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@89
    .line 3692
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v4    # "i":I
    :cond_6
    :goto_1
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@8b
    const/4 v11, 0x1

    #@8c
    invoke-virtual {v9, v11}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8f
    .end local v2    # "delayed":Z
    :goto_2
    monitor-exit v10

    #@90
    .line 3697
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@93
    .line 3636
    return-void

    #@94
    .line 3685
    .restart local v0    # "N":I
    .restart local v1    # "changed":Z
    .restart local v2    # "delayed":Z
    .restart local v4    # "i":I
    :cond_7
    :try_start_1
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    #@96
    if-ne v9, v13, :cond_6

    #@98
    .line 3686
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@9a
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@9d
    goto :goto_1

    #@9e
    .line 3643
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v2    # "delayed":Z
    .end local v4    # "i":I
    .end local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v9

    #@9f
    monitor-exit v10

    #@a0
    throw v9

    #@a1
    .line 3688
    .restart local v2    # "delayed":Z
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :cond_8
    :try_start_2
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    #@a3
    if-ne v9, v13, :cond_6

    #@a5
    .line 3689
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@a7
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@aa
    goto :goto_1

    #@ab
    .line 3694
    .end local v2    # "delayed":Z
    :cond_9
    const-string/jumbo v9, "WindowManager"

    #@ae
    new-instance v11, Ljava/lang/StringBuilder;

    #@b0
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@b3
    const-string/jumbo v12, "Attempted to remove non-existing token: "

    #@b6
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b9
    move-result-object v11

    #@ba
    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@bd
    move-result-object v11

    #@be
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c1
    move-result-object v11

    #@c2
    invoke-static {v9, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@c5
    goto :goto_2
.end method

.method public requestAssistScreenshot(Lcom/android/internal/app/IAssistScreenshotReceiver;)Z
    .locals 2
    .param p1, "receiver"    # Lcom/android/internal/app/IAssistScreenshotReceiver;

    #@0
    .prologue
    .line 6117
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    #@3
    .line 6118
    const-string/jumbo v1, "requestAssistScreenshot()"

    #@6
    .line 6117
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 6119
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 6122
    :cond_0
    invoke-static {}, Lcom/android/server/FgThread;->getHandler()Landroid/os/Handler;

    #@18
    move-result-object v0

    #@19
    new-instance v1, Lcom/android/server/wm/WindowManagerService$8;

    #@1b
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$8;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/internal/app/IAssistScreenshotReceiver;)V

    #@1e
    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    #@21
    .line 6134
    const/4 v0, 0x1

    #@22
    return v0
.end method

.method requestTraversal()V
    .locals 2

    #@0
    .prologue
    .line 10449
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 10450
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 10448
    return-void

    #@8
    .line 10449
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method requestTraversalLocked()V
    .locals 2

    #@0
    .prologue
    .line 10455
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    #@2
    if-nez v0, :cond_0

    #@4
    .line 10456
    const/4 v0, 0x1

    #@5
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    #@7
    .line 10457
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@9
    const/4 v1, 0x4

    #@a
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@d
    .line 10454
    :cond_0
    return-void
.end method

.method public resizeStack(ILandroid/graphics/Rect;)Landroid/content/res/Configuration;
    .locals 5
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5254
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5255
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5256
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@d
    .line 5257
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "resizeStack: stackId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5258
    const-string/jumbo v4, " not found."

    #@22
    .line 5257
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5254
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5260
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->setBounds(Landroid/graphics/Rect;)Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_1

    #@37
    .line 5261
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->resizeWindows()V

    #@3a
    .line 5262
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@3d
    move-result-object v1

    #@3e
    const/4 v3, 0x1

    #@3f
    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@41
    .line 5263
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@44
    .line 5265
    :cond_1
    new-instance v1, Landroid/content/res/Configuration;

    #@46
    iget-object v3, v0, Lcom/android/server/wm/TaskStack;->mOverrideConfig:Landroid/content/res/Configuration;

    #@48
    invoke-direct {v1, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@4b
    monitor-exit v2

    #@4c
    return-object v1
.end method

.method public resumeKeyDispatching(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "_token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 7559
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 7560
    const-string/jumbo v2, "resumeKeyDispatching()"

    #@6
    .line 7559
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 7561
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 7564
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 7565
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 7566
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 7567
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->resumeDispatchingLw(Lcom/android/server/wm/WindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    :cond_1
    monitor-exit v2

    #@28
    .line 7558
    return-void

    #@29
    .line 7564
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@2a
    monitor-exit v2

    #@2b
    throw v1
.end method

.method resumeRotationLocked()V
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 6500
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@3
    if-lez v1, :cond_0

    #@5
    .line 6501
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@7
    add-int/lit8 v1, v1, -0x1

    #@9
    iput v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@b
    .line 6502
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@d
    if-nez v1, :cond_0

    #@f
    .line 6503
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@12
    move-result v0

    #@13
    .line 6504
    .local v0, "changed":Z
    if-eqz v0, :cond_0

    #@15
    .line 6505
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@17
    const/16 v2, 0x12

    #@19
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@1c
    .line 6499
    .end local v0    # "changed":Z
    :cond_0
    return-void
.end method

.method public saveANRStateLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/WindowState;Ljava/lang/String;)V
    .locals 8
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "windowState"    # Lcom/android/server/wm/WindowState;
    .param p3, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    const/16 v7, 0x26

    #@2
    const/4 v6, 0x1

    #@3
    const/4 v5, 0x0

    #@4
    .line 11513
    new-instance v1, Ljava/io/StringWriter;

    #@6
    invoke-direct {v1}, Ljava/io/StringWriter;-><init>()V

    #@9
    .line 11514
    .local v1, "sw":Ljava/io/StringWriter;
    new-instance v0, Lcom/android/internal/util/FastPrintWriter;

    #@b
    const/4 v2, 0x0

    #@c
    const/16 v3, 0x400

    #@e
    invoke-direct {v0, v1, v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    #@11
    .line 11515
    .local v0, "pw":Ljava/io/PrintWriter;
    new-instance v2, Ljava/lang/StringBuilder;

    #@13
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@16
    const-string/jumbo v3, "  ANR time: "

    #@19
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v2

    #@1d
    invoke-static {}, Ljava/text/DateFormat;->getInstance()Ljava/text/DateFormat;

    #@20
    move-result-object v3

    #@21
    new-instance v4, Ljava/util/Date;

    #@23
    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    #@26
    invoke-virtual {v3, v4}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v2

    #@2e
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@31
    move-result-object v2

    #@32
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@35
    .line 11516
    if-eqz p1, :cond_0

    #@37
    .line 11517
    new-instance v2, Ljava/lang/StringBuilder;

    #@39
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@3c
    const-string/jumbo v3, "  Application at fault: "

    #@3f
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42
    move-result-object v2

    #@43
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->stringName:Ljava/lang/String;

    #@45
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@48
    move-result-object v2

    #@49
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4c
    move-result-object v2

    #@4d
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@50
    .line 11519
    :cond_0
    if-eqz p2, :cond_1

    #@52
    .line 11520
    new-instance v2, Ljava/lang/StringBuilder;

    #@54
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@57
    const-string/jumbo v3, "  Window at fault: "

    #@5a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d
    move-result-object v2

    #@5e
    iget-object v3, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@60
    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@63
    move-result-object v3

    #@64
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v2

    #@68
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6b
    move-result-object v2

    #@6c
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6f
    .line 11522
    :cond_1
    if-eqz p3, :cond_2

    #@71
    .line 11523
    new-instance v2, Ljava/lang/StringBuilder;

    #@73
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@76
    const-string/jumbo v3, "  Reason: "

    #@79
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7c
    move-result-object v2

    #@7d
    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@80
    move-result-object v2

    #@81
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@84
    move-result-object v2

    #@85
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@88
    .line 11525
    :cond_2
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    #@8b
    .line 11526
    invoke-virtual {p0, v0, v6, v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    #@8e
    .line 11527
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    #@91
    .line 11528
    const-string/jumbo v2, "Last ANR continued"

    #@94
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@97
    .line 11529
    invoke-virtual {p0, v0, v6}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    #@9a
    .line 11530
    invoke-virtual {v0}, Ljava/io/PrintWriter;->close()V

    #@9d
    .line 11531
    invoke-virtual {v1}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    #@a0
    move-result-object v2

    #@a1
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@a3
    .line 11533
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@a5
    invoke-virtual {v2, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@a8
    .line 11534
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@aa
    const-wide/32 v4, 0x6ddd00

    #@ad
    invoke-virtual {v2, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@b0
    .line 11512
    return-void
.end method

.method public saveLastInputMethodWindowForTransition()V
    .locals 5

    #@0
    .prologue
    .line 11066
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11068
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 11069
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 11070
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@d
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@f
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@11
    invoke-interface {v1, v3, v4}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@14
    :cond_0
    monitor-exit v2

    #@15
    .line 11065
    return-void

    #@16
    .line 11066
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@17
    monitor-exit v2

    #@18
    throw v1
.end method

.method scheduleAnimationLocked()V
    .locals 2

    #@0
    .prologue
    .line 10463
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    #@2
    if-nez v0, :cond_0

    #@4
    .line 10464
    const/4 v0, 0x1

    #@5
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    #@7
    .line 10465
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    #@9
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@b
    iget-object v1, v1, Lcom/android/server/wm/WindowAnimator;->mAnimationFrameCallback:Landroid/view/Choreographer$FrameCallback;

    #@d
    invoke-virtual {v0, v1}, Landroid/view/Choreographer;->postFrameCallback(Landroid/view/Choreographer$FrameCallback;)V

    #@10
    .line 10462
    :cond_0
    return-void
.end method

.method scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    .locals 3
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v2, 0x6

    #@1
    .line 4953
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@3
    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/WindowManagerService$H;->hasMessages(ILjava/lang/Object;)Z

    #@6
    move-result v1

    #@7
    if-eqz v1, :cond_0

    #@9
    .line 4955
    return-void

    #@a
    .line 4957
    :cond_0
    if-eqz p1, :cond_1

    #@c
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@e
    if-eqz v1, :cond_1

    #@10
    .line 4961
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@12
    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@15
    move-result-object v0

    #@16
    .line 4962
    .local v0, "m":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@18
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@1b
    .line 4952
    .end local v0    # "m":Landroid/os/Message;
    :cond_1
    return-void
.end method

.method public screenshotApplications(Landroid/os/IBinder;III)Landroid/graphics/Bitmap;
    .locals 6
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I

    #@0
    .prologue
    .line 6148
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    #@3
    .line 6149
    const-string/jumbo v1, "screenshotApplications()"

    #@6
    .line 6148
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 6150
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 6152
    :cond_0
    const/4 v5, 0x0

    #@16
    move-object v0, p0

    #@17
    move-object v1, p1

    #@18
    move v2, p2

    #@19
    move v3, p3

    #@1a
    move v4, p4

    #@1b
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->screenshotApplicationsInner(Landroid/os/IBinder;IIIZ)Landroid/graphics/Bitmap;

    #@1e
    move-result-object v0

    #@1f
    return-object v0
.end method

.method screenshotApplicationsInner(Landroid/os/IBinder;IIIZ)Landroid/graphics/Bitmap;
    .locals 42
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "includeFullDisplay"    # Z

    #@0
    .prologue
    .line 6158
    move-object/from16 v0, p0

    #@2
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v5

    #@5
    .line 6159
    :try_start_0
    move-object/from16 v0, p0

    #@7
    move/from16 v1, p2

    #@9
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    move-result-object v20

    #@d
    .line 6160
    .local v20, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v20, :cond_0

    #@f
    .line 6163
    const/4 v6, 0x0

    #@10
    monitor-exit v5

    #@11
    return-object v6

    #@12
    :cond_0
    monitor-exit v5

    #@13
    .line 6166
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@16
    move-result-object v21

    #@17
    .line 6167
    .local v21, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v21

    #@19
    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@1b
    move/from16 v22, v0

    #@1d
    .line 6168
    .local v22, "dw":I
    move-object/from16 v0, v21

    #@1f
    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@21
    move/from16 v19, v0

    #@23
    .line 6169
    .local v19, "dh":I
    if-eqz v22, :cond_1

    #@25
    if-nez v19, :cond_2

    #@27
    .line 6172
    :cond_1
    const/4 v5, 0x0

    #@28
    return-object v5

    #@29
    .line 6158
    .end local v19    # "dh":I
    .end local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v21    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v22    # "dw":I
    :catchall_0
    move-exception v6

    #@2a
    monitor-exit v5

    #@2b
    throw v6

    #@2c
    .line 6175
    .restart local v19    # "dh":I
    .restart local v20    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v21    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v22    # "dw":I
    :cond_2
    const/4 v14, 0x0

    #@2d
    .line 6177
    .local v14, "bm":Landroid/graphics/Bitmap;
    const/4 v8, 0x0

    #@2e
    .line 6178
    .local v8, "maxLayer":I
    new-instance v24, Landroid/graphics/Rect;

    #@30
    invoke-direct/range {v24 .. v24}, Landroid/graphics/Rect;-><init>()V

    #@33
    .line 6179
    .local v24, "frame":Landroid/graphics/Rect;
    new-instance v33, Landroid/graphics/Rect;

    #@35
    invoke-direct/range {v33 .. v33}, Landroid/graphics/Rect;-><init>()V

    #@38
    .line 6183
    .local v33, "stackBounds":Landroid/graphics/Rect;
    if-nez p1, :cond_5

    #@3a
    .line 6184
    const/16 v32, 0x1

    #@3c
    .line 6185
    .local v32, "screenshotReady":Z
    const/4 v7, 0x0

    #@3d
    .line 6191
    .local v7, "minLayer":I
    :goto_0
    const/16 v28, 0x0

    #@3f
    .line 6192
    .local v28, "retryCount":I
    const/4 v13, 0x0

    #@40
    .line 6194
    .local v13, "appWin":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@42
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@44
    if-eqz v5, :cond_7

    #@46
    .line 6195
    move-object/from16 v0, p0

    #@48
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@4a
    iget-object v5, v5, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@4c
    if-eqz v5, :cond_7

    #@4e
    .line 6196
    move-object/from16 v0, p0

    #@50
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@52
    iget-object v5, v5, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@54
    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@56
    if-eqz v5, :cond_7

    #@58
    .line 6197
    move-object/from16 v0, p0

    #@5a
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@5c
    iget-object v5, v5, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@5e
    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@60
    invoke-interface {v5}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@63
    move-result-object v5

    #@64
    move-object/from16 v0, p1

    #@66
    if-ne v5, v0, :cond_6

    #@68
    const/4 v12, 0x1

    #@69
    .line 6199
    .local v12, "appIsImTarget":Z
    :goto_1
    move-object/from16 v0, p0

    #@6b
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6d
    const/4 v6, 0x2

    #@6e
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@71
    move-result v5

    #@72
    add-int/lit8 v5, v5, 0x1

    #@74
    mul-int/lit16 v5, v5, 0x2710

    #@76
    add-int/lit16 v11, v5, 0x3e8

    #@78
    .local v11, "aboveAppLayer":I
    move/from16 v29, v28

    #@7a
    .line 6203
    .end local v13    # "appWin":Lcom/android/server/wm/WindowState;
    .end local v28    # "retryCount":I
    .local v29, "retryCount":I
    :goto_2
    add-int/lit8 v28, v29, 0x1

    #@7c
    .end local v29    # "retryCount":I
    .restart local v28    # "retryCount":I
    if-lez v29, :cond_3

    #@7e
    .line 6206
    const/4 v8, 0x0

    #@7f
    .line 6207
    const v7, 0x7fffffff

    #@82
    .line 6209
    const-wide/16 v40, 0x64

    #@84
    :try_start_1
    invoke-static/range {v40 .. v41}, Ljava/lang/Thread;->sleep(J)V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0

    #@87
    .line 6213
    :cond_3
    :goto_3
    move-object/from16 v0, p0

    #@89
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@8b
    move-object/from16 v39, v0

    #@8d
    monitor-enter v39

    #@8e
    .line 6215
    const/4 v13, 0x0

    #@8f
    .line 6216
    .restart local v13    # "appWin":Lcom/android/server/wm/WindowState;
    :try_start_2
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@92
    move-result-object v37

    #@93
    .line 6217
    .local v37, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v37 .. v37}, Lcom/android/server/wm/WindowList;->size()I

    #@96
    move-result v5

    #@97
    add-int/lit8 v25, v5, -0x1

    #@99
    .end local v13    # "appWin":Lcom/android/server/wm/WindowState;
    .local v25, "i":I
    :goto_4
    if-ltz v25, :cond_e

    #@9b
    .line 6218
    move-object/from16 v0, v37

    #@9d
    move/from16 v1, v25

    #@9f
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@a2
    move-result-object v38

    #@a3
    check-cast v38, Lcom/android/server/wm/WindowState;

    #@a5
    .line 6219
    .local v38, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v38

    #@a7
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@a9
    if-nez v5, :cond_8

    #@ab
    .line 6217
    :cond_4
    :goto_5
    add-int/lit8 v25, v25, -0x1

    #@ad
    goto :goto_4

    #@ae
    .line 6187
    .end local v7    # "minLayer":I
    .end local v11    # "aboveAppLayer":I
    .end local v12    # "appIsImTarget":Z
    .end local v25    # "i":I
    .end local v28    # "retryCount":I
    .end local v32    # "screenshotReady":Z
    .end local v37    # "windows":Lcom/android/server/wm/WindowList;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_5
    const/16 v32, 0x0

    #@b0
    .line 6188
    .restart local v32    # "screenshotReady":Z
    const v7, 0x7fffffff

    #@b3
    .restart local v7    # "minLayer":I
    goto :goto_0

    #@b4
    .line 6197
    .restart local v13    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v28    # "retryCount":I
    :cond_6
    const/4 v12, 0x0

    #@b5
    .restart local v12    # "appIsImTarget":Z
    goto :goto_1

    #@b6
    .line 6194
    .end local v12    # "appIsImTarget":Z
    :cond_7
    const/4 v12, 0x0

    #@b7
    .restart local v12    # "appIsImTarget":Z
    goto :goto_1

    #@b8
    .line 6210
    .end local v13    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v11    # "aboveAppLayer":I
    :catch_0
    move-exception v23

    #@b9
    .local v23, "e":Ljava/lang/InterruptedException;
    goto :goto_3

    #@ba
    .line 6222
    .end local v23    # "e":Ljava/lang/InterruptedException;
    .restart local v25    # "i":I
    .restart local v37    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_8
    move-object/from16 v0, v38

    #@bc
    iget v5, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    #@be
    if-ge v5, v11, :cond_4

    #@c0
    .line 6225
    move-object/from16 v0, v38

    #@c2
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@c4
    if-eqz v5, :cond_f

    #@c6
    .line 6226
    if-eqz v12, :cond_4

    #@c8
    .line 6252
    :cond_9
    :goto_6
    move-object/from16 v0, v38

    #@ca
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@cc
    move-object/from16 v36, v0

    #@ce
    .line 6253
    .local v36, "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v36

    #@d0
    iget v5, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    #@d2
    if-ge v8, v5, :cond_a

    #@d4
    .line 6254
    move-object/from16 v0, v36

    #@d6
    iget v8, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    #@d8
    .line 6256
    :cond_a
    move-object/from16 v0, v36

    #@da
    iget v5, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    #@dc
    if-le v7, v5, :cond_b

    #@de
    .line 6257
    move-object/from16 v0, v36

    #@e0
    iget v7, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    #@e2
    .line 6261
    :cond_b
    if-nez p5, :cond_c

    #@e4
    move-object/from16 v0, v38

    #@e6
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@e8
    if-eqz v5, :cond_11

    #@ea
    .line 6276
    :cond_c
    :goto_7
    move-object/from16 v0, v38

    #@ec
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@ee
    if-eqz v5, :cond_d

    #@f0
    move-object/from16 v0, v38

    #@f2
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@f4
    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@f6
    move-object/from16 v0, p1

    #@f8
    if-ne v5, v0, :cond_d

    #@fa
    .line 6277
    invoke-virtual/range {v38 .. v38}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@fd
    move-result v5

    #@fe
    .line 6276
    if-eqz v5, :cond_d

    #@100
    .line 6277
    move-object/from16 v0, v36

    #@102
    iget-boolean v5, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    #@104
    .line 6276
    if-eqz v5, :cond_d

    #@106
    .line 6278
    const/16 v32, 0x1

    #@108
    .line 6281
    :cond_d
    move-object/from16 v0, v38

    #@10a
    move/from16 v1, v22

    #@10c
    move/from16 v2, v19

    #@10e
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    #@111
    move-result v5

    #@112
    if-eqz v5, :cond_4

    #@114
    invoke-virtual/range {v38 .. v38}, Lcom/android/server/wm/WindowState;->isOpaqueDrawn()Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@117
    move-result v5

    #@118
    if-eqz v5, :cond_4

    #@11a
    .line 6286
    .end local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_e
    if-eqz p1, :cond_12

    #@11c
    if-nez v13, :cond_12

    #@11e
    .line 6290
    const/4 v5, 0x0

    #@11f
    monitor-exit v39

    #@120
    return-object v5

    #@121
    .line 6229
    .restart local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_f
    :try_start_3
    move-object/from16 v0, v38

    #@123
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@125
    if-eqz v5, :cond_10

    #@127
    .line 6230
    if-nez v13, :cond_9

    #@129
    goto :goto_5

    #@12a
    .line 6241
    :cond_10
    if-eqz p1, :cond_9

    #@12c
    .line 6242
    move-object/from16 v0, v38

    #@12e
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@130
    if-eqz v5, :cond_4

    #@132
    move-object/from16 v0, v38

    #@134
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@136
    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@138
    move-object/from16 v0, p1

    #@13a
    if-ne v5, v0, :cond_4

    #@13c
    .line 6247
    move-object/from16 v13, v38

    #@13e
    .local v13, "appWin":Lcom/android/server/wm/WindowState;
    goto :goto_6

    #@13f
    .line 6262
    .end local v13    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    :cond_11
    move-object/from16 v0, v38

    #@141
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@143
    move-object/from16 v35, v0

    #@145
    .line 6263
    .local v35, "wf":Landroid/graphics/Rect;
    move-object/from16 v0, v38

    #@147
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@149
    move-object/from16 v16, v0

    #@14b
    .line 6264
    .local v16, "cr":Landroid/graphics/Rect;
    move-object/from16 v0, v35

    #@14d
    iget v5, v0, Landroid/graphics/Rect;->left:I

    #@14f
    move-object/from16 v0, v16

    #@151
    iget v6, v0, Landroid/graphics/Rect;->left:I

    #@153
    add-int v26, v5, v6

    #@155
    .line 6265
    .local v26, "left":I
    move-object/from16 v0, v35

    #@157
    iget v5, v0, Landroid/graphics/Rect;->top:I

    #@159
    move-object/from16 v0, v16

    #@15b
    iget v6, v0, Landroid/graphics/Rect;->top:I

    #@15d
    add-int v34, v5, v6

    #@15f
    .line 6266
    .local v34, "top":I
    move-object/from16 v0, v35

    #@161
    iget v5, v0, Landroid/graphics/Rect;->right:I

    #@163
    move-object/from16 v0, v16

    #@165
    iget v6, v0, Landroid/graphics/Rect;->right:I

    #@167
    sub-int v30, v5, v6

    #@169
    .line 6267
    .local v30, "right":I
    move-object/from16 v0, v35

    #@16b
    iget v5, v0, Landroid/graphics/Rect;->bottom:I

    #@16d
    move-object/from16 v0, v16

    #@16f
    iget v6, v0, Landroid/graphics/Rect;->bottom:I

    #@171
    sub-int v15, v5, v6

    #@173
    .line 6268
    .local v15, "bottom":I
    move-object/from16 v0, v24

    #@175
    move/from16 v1, v26

    #@177
    move/from16 v2, v34

    #@179
    move/from16 v3, v30

    #@17b
    invoke-virtual {v0, v1, v2, v3, v15}, Landroid/graphics/Rect;->union(IIII)V

    #@17e
    .line 6269
    move-object/from16 v0, v38

    #@180
    move-object/from16 v1, v33

    #@182
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->getStackBounds(Landroid/graphics/Rect;)V

    #@185
    .line 6270
    move-object/from16 v0, v24

    #@187
    move-object/from16 v1, v33

    #@189
    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->intersect(Landroid/graphics/Rect;)Z

    #@18c
    move-result v5

    #@18d
    if-nez v5, :cond_c

    #@18f
    .line 6272
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@192
    goto/16 :goto_7

    #@194
    .line 6213
    .end local v14    # "bm":Landroid/graphics/Bitmap;
    .end local v15    # "bottom":I
    .end local v16    # "cr":Landroid/graphics/Rect;
    .end local v25    # "i":I
    .end local v26    # "left":I
    .end local v30    # "right":I
    .end local v34    # "top":I
    .end local v35    # "wf":Landroid/graphics/Rect;
    .end local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v37    # "windows":Lcom/android/server/wm/WindowList;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :catchall_1
    move-exception v5

    #@195
    monitor-exit v39

    #@196
    throw v5

    #@197
    .line 6293
    .restart local v14    # "bm":Landroid/graphics/Bitmap;
    .restart local v25    # "i":I
    .restart local v37    # "windows":Lcom/android/server/wm/WindowList;
    :cond_12
    if-nez v32, :cond_15

    #@199
    .line 6294
    const/4 v5, 0x3

    #@19a
    move/from16 v0, v28

    #@19c
    if-le v0, v5, :cond_14

    #@19e
    .line 6295
    :try_start_4
    const-string/jumbo v6, "WindowManager"

    #@1a1
    new-instance v5, Ljava/lang/StringBuilder;

    #@1a3
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@1a6
    const-string/jumbo v40, "Screenshot max retries "

    #@1a9
    move-object/from16 v0, v40

    #@1ab
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1ae
    move-result-object v5

    #@1af
    move/from16 v0, v28

    #@1b1
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1b4
    move-result-object v5

    #@1b5
    const-string/jumbo v40, " of "

    #@1b8
    move-object/from16 v0, v40

    #@1ba
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1bd
    move-result-object v5

    #@1be
    move-object/from16 v0, p1

    #@1c0
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c3
    move-result-object v5

    #@1c4
    .line 6296
    const-string/jumbo v40, " appWin="

    #@1c7
    .line 6295
    move-object/from16 v0, v40

    #@1c9
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1cc
    move-result-object v40

    #@1cd
    .line 6296
    if-nez v13, :cond_13

    #@1cf
    const-string/jumbo v5, "null"

    #@1d2
    .line 6295
    :goto_8
    move-object/from16 v0, v40

    #@1d4
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1d7
    move-result-object v5

    #@1d8
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1db
    move-result-object v5

    #@1dc
    invoke-static {v6, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@1df
    .line 6298
    const/4 v5, 0x0

    #@1e0
    monitor-exit v39

    #@1e1
    return-object v5

    #@1e2
    .line 6296
    :cond_13
    :try_start_5
    new-instance v5, Ljava/lang/StringBuilder;

    #@1e4
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@1e7
    invoke-virtual {v5, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1ea
    move-result-object v5

    #@1eb
    const-string/jumbo v41, " drawState="

    #@1ee
    move-object/from16 v0, v41

    #@1f0
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f3
    move-result-object v5

    #@1f4
    .line 6297
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1f6
    move-object/from16 v41, v0

    #@1f8
    move-object/from16 v0, v41

    #@1fa
    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    #@1fc
    move/from16 v41, v0

    #@1fe
    .line 6296
    move/from16 v0, v41

    #@200
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@203
    move-result-object v5

    #@204
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@207
    move-result-object v5

    #@208
    goto :goto_8

    #@209
    :cond_14
    monitor-exit v39

    #@20a
    move/from16 v29, v28

    #@20c
    .line 6304
    .end local v28    # "retryCount":I
    .restart local v29    # "retryCount":I
    goto/16 :goto_2

    #@20e
    .line 6312
    .end local v29    # "retryCount":I
    .restart local v28    # "retryCount":I
    :cond_15
    if-nez v8, :cond_16

    #@210
    .line 6315
    const/4 v5, 0x0

    #@211
    monitor-exit v39

    #@212
    return-object v5

    #@213
    .line 6318
    :cond_16
    if-nez p5, :cond_18

    #@215
    .line 6320
    const/4 v5, 0x0

    #@216
    const/4 v6, 0x0

    #@217
    :try_start_6
    move-object/from16 v0, v24

    #@219
    move/from16 v1, v22

    #@21b
    move/from16 v2, v19

    #@21d
    invoke-virtual {v0, v5, v6, v1, v2}, Landroid/graphics/Rect;->intersect(IIII)Z

    #@220
    move-result v5

    #@221
    if-nez v5, :cond_17

    #@223
    .line 6321
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->setEmpty()V

    #@226
    .line 6327
    :cond_17
    :goto_9
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->isEmpty()Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    #@229
    move-result v5

    #@22a
    if-eqz v5, :cond_19

    #@22c
    .line 6328
    const/4 v5, 0x0

    #@22d
    monitor-exit v39

    #@22e
    return-object v5

    #@22f
    .line 6325
    :cond_18
    const/4 v5, 0x0

    #@230
    const/4 v6, 0x0

    #@231
    :try_start_7
    move-object/from16 v0, v24

    #@233
    move/from16 v1, v22

    #@235
    move/from16 v2, v19

    #@237
    invoke-virtual {v0, v5, v6, v1, v2}, Landroid/graphics/Rect;->set(IIII)V

    #@23a
    goto :goto_9

    #@23b
    .line 6331
    :cond_19
    if-gez p3, :cond_1a

    #@23d
    .line 6332
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->width()I

    #@240
    move-result p3

    #@241
    .line 6334
    :cond_1a
    if-gez p4, :cond_1b

    #@243
    .line 6335
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->height()I

    #@246
    move-result p4

    #@247
    .line 6340
    :cond_1b
    new-instance v4, Landroid/graphics/Rect;

    #@249
    move-object/from16 v0, v24

    #@24b
    invoke-direct {v4, v0}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    #@24e
    .line 6341
    .local v4, "crop":Landroid/graphics/Rect;
    move/from16 v0, p3

    #@250
    int-to-float v5, v0

    #@251
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->width()I

    #@254
    move-result v6

    #@255
    int-to-float v6, v6

    #@256
    div-float/2addr v5, v6

    #@257
    move/from16 v0, p4

    #@259
    int-to-float v6, v0

    #@25a
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->height()I

    #@25d
    move-result v40

    #@25e
    move/from16 v0, v40

    #@260
    int-to-float v0, v0

    #@261
    move/from16 v40, v0

    #@263
    div-float v6, v6, v40

    #@265
    cmpg-float v5, v5, v6

    #@267
    if-gez v5, :cond_1e

    #@269
    .line 6342
    move/from16 v0, p3

    #@26b
    int-to-float v5, v0

    #@26c
    move/from16 v0, p4

    #@26e
    int-to-float v6, v0

    #@26f
    div-float/2addr v5, v6

    #@270
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->height()I

    #@273
    move-result v6

    #@274
    int-to-float v6, v6

    #@275
    mul-float/2addr v5, v6

    #@276
    float-to-int v0, v5

    #@277
    move/from16 v18, v0

    #@279
    .line 6343
    .local v18, "cropWidth":I
    iget v5, v4, Landroid/graphics/Rect;->left:I

    #@27b
    add-int v5, v5, v18

    #@27d
    iput v5, v4, Landroid/graphics/Rect;->right:I

    #@27f
    .line 6350
    .end local v18    # "cropWidth":I
    :goto_a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@282
    move-result-object v5

    #@283
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@286
    move-result-object v5

    #@287
    invoke-virtual {v5}, Landroid/view/Display;->getRotation()I

    #@28a
    move-result v10

    #@28b
    .line 6352
    .local v10, "rot":I
    const/4 v5, 0x1

    #@28c
    if-eq v10, v5, :cond_1c

    #@28e
    const/4 v5, 0x3

    #@28f
    if-ne v10, v5, :cond_1d

    #@291
    .line 6353
    :cond_1c
    const/4 v5, 0x1

    #@292
    if-ne v10, v5, :cond_1f

    #@294
    const/4 v10, 0x3

    #@295
    .line 6358
    :cond_1d
    :goto_b
    move/from16 v0, v22

    #@297
    move/from16 v1, v19

    #@299
    invoke-static {v4, v10, v0, v1}, Lcom/android/server/wm/WindowManagerService;->convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V

    #@29c
    .line 6372
    move-object/from16 v0, p0

    #@29e
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@2a0
    const/4 v6, 0x0

    #@2a1
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@2a4
    move-result-object v31

    #@2a5
    .line 6373
    .local v31, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v31, :cond_20

    #@2a7
    .line 6374
    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    #@2aa
    move-result v9

    #@2ab
    :goto_c
    move/from16 v5, p3

    #@2ad
    move/from16 v6, p4

    #@2af
    .line 6378
    invoke-static/range {v4 .. v10}, Landroid/view/SurfaceControl;->screenshot(Landroid/graphics/Rect;IIIIZI)Landroid/graphics/Bitmap;

    #@2b2
    move-result-object v14

    #@2b3
    .line 6380
    .local v14, "bm":Landroid/graphics/Bitmap;
    if-nez v14, :cond_21

    #@2b5
    .line 6381
    const-string/jumbo v5, "WindowManager"

    #@2b8
    new-instance v6, Ljava/lang/StringBuilder;

    #@2ba
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@2bd
    const-string/jumbo v40, "Screenshot failure taking screenshot for ("

    #@2c0
    move-object/from16 v0, v40

    #@2c2
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c5
    move-result-object v6

    #@2c6
    move/from16 v0, v22

    #@2c8
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2cb
    move-result-object v6

    #@2cc
    const-string/jumbo v40, "x"

    #@2cf
    move-object/from16 v0, v40

    #@2d1
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d4
    move-result-object v6

    #@2d5
    move/from16 v0, v19

    #@2d7
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2da
    move-result-object v6

    #@2db
    .line 6382
    const-string/jumbo v40, ") to layer "

    #@2de
    .line 6381
    move-object/from16 v0, v40

    #@2e0
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e3
    move-result-object v6

    #@2e4
    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2e7
    move-result-object v6

    #@2e8
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2eb
    move-result-object v6

    #@2ec
    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    #@2ef
    .line 6383
    const/4 v5, 0x0

    #@2f0
    monitor-exit v39

    #@2f1
    return-object v5

    #@2f2
    .line 6345
    .end local v10    # "rot":I
    .end local v31    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .local v14, "bm":Landroid/graphics/Bitmap;
    :cond_1e
    move/from16 v0, p4

    #@2f4
    int-to-float v5, v0

    #@2f5
    move/from16 v0, p3

    #@2f7
    int-to-float v6, v0

    #@2f8
    div-float/2addr v5, v6

    #@2f9
    :try_start_8
    invoke-virtual/range {v24 .. v24}, Landroid/graphics/Rect;->width()I

    #@2fc
    move-result v6

    #@2fd
    int-to-float v6, v6

    #@2fe
    mul-float/2addr v5, v6

    #@2ff
    float-to-int v0, v5

    #@300
    move/from16 v17, v0

    #@302
    .line 6346
    .local v17, "cropHeight":I
    iget v5, v4, Landroid/graphics/Rect;->top:I

    #@304
    add-int v5, v5, v17

    #@306
    iput v5, v4, Landroid/graphics/Rect;->bottom:I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    #@308
    goto/16 :goto_a

    #@30a
    .line 6353
    .end local v17    # "cropHeight":I
    .restart local v10    # "rot":I
    :cond_1f
    const/4 v10, 0x1

    #@30b
    goto :goto_b

    #@30c
    .line 6373
    .restart local v31    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_20
    const/4 v9, 0x0

    #@30d
    .local v9, "inRotation":Z
    goto :goto_c

    #@30e
    .end local v9    # "inRotation":Z
    .local v14, "bm":Landroid/graphics/Bitmap;
    :cond_21
    monitor-exit v39

    #@30f
    .line 6412
    invoke-virtual {v14}, Landroid/graphics/Bitmap;->createAshmemBitmap()Landroid/graphics/Bitmap;

    #@312
    move-result-object v27

    #@313
    .line 6413
    .local v27, "ret":Landroid/graphics/Bitmap;
    invoke-virtual {v14}, Landroid/graphics/Bitmap;->recycle()V

    #@316
    .line 6414
    return-object v27
.end method

.method sendNewConfiguration()V
    .locals 3

    #@0
    .prologue
    .line 7159
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@2
    const/4 v2, 0x0

    #@3
    invoke-interface {v1, v2}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@6
    .line 7157
    :goto_0
    return-void

    #@7
    .line 7160
    :catch_0
    move-exception v0

    #@8
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public sendWindowWallpaperCommandLocked(Lcom/android/server/wm/WindowState;Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;
    .locals 13
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "action"    # Ljava/lang/String;
    .param p3, "x"    # I
    .param p4, "y"    # I
    .param p5, "z"    # I
    .param p6, "extras"    # Landroid/os/Bundle;
    .param p7, "sync"    # Z

    #@0
    .prologue
    .line 3027
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@2
    if-eq p1, v0, :cond_0

    #@4
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@6
    if-ne p1, v0, :cond_1

    #@8
    .line 3029
    :cond_0
    move/from16 v8, p7

    #@a
    .line 3030
    .local v8, "doWait":Z
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@c
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    #@f
    move-result v0

    #@10
    add-int/lit8 v7, v0, -0x1

    #@12
    .end local p7    # "sync":Z
    .local v7, "curTokenNdx":I
    :goto_0
    if-ltz v7, :cond_4

    #@14
    .line 3031
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@16
    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@19
    move-result-object v0

    #@1a
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@1c
    iget-object v12, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@1e
    .line 3032
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    #@21
    move-result v0

    #@22
    add-int/lit8 v11, v0, -0x1

    #@24
    .local v11, "wallpaperNdx":I
    :goto_1
    if-ltz v11, :cond_3

    #@26
    .line 3033
    invoke-virtual {v12, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@29
    move-result-object v10

    #@2a
    check-cast v10, Lcom/android/server/wm/WindowState;

    #@2c
    .line 3035
    .local v10, "wallpaper":Lcom/android/server/wm/WindowState;
    :try_start_0
    iget-object v0, v10, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@2e
    move-object v1, p2

    #@2f
    move/from16 v2, p3

    #@31
    move/from16 v3, p4

    #@33
    move/from16 v4, p5

    #@35
    move-object/from16 v5, p6

    #@37
    move/from16 v6, p7

    #@39
    invoke-interface/range {v0 .. v6}, Landroid/view/IWindow;->dispatchWallpaperCommand(Ljava/lang/String;IIILandroid/os/Bundle;Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@3c
    .line 3038
    const/16 p7, 0x0

    #@3e
    .line 3032
    :goto_2
    add-int/lit8 v11, v11, -0x1

    #@40
    goto :goto_1

    #@41
    .line 3028
    .end local v7    # "curTokenNdx":I
    .end local v8    # "doWait":Z
    .end local v10    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v11    # "wallpaperNdx":I
    .end local v12    # "windows":Lcom/android/server/wm/WindowList;
    .restart local p7    # "sync":Z
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@43
    if-eq p1, v0, :cond_0

    #@45
    .line 3049
    .end local p7    # "sync":Z
    :cond_2
    :goto_3
    const/4 v0, 0x0

    #@46
    return-object v0

    #@47
    .line 3030
    .restart local v7    # "curTokenNdx":I
    .restart local v8    # "doWait":Z
    .restart local v11    # "wallpaperNdx":I
    .restart local v12    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    add-int/lit8 v7, v7, -0x1

    #@49
    goto :goto_0

    #@4a
    .line 3044
    .end local v11    # "wallpaperNdx":I
    .end local v12    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    if-eqz v8, :cond_2

    #@4c
    goto :goto_3

    #@4d
    .line 3039
    .restart local v10    # "wallpaper":Lcom/android/server/wm/WindowState;
    .restart local v11    # "wallpaperNdx":I
    .restart local v12    # "windows":Lcom/android/server/wm/WindowList;
    :catch_0
    move-exception v9

    #@4e
    .local v9, "e":Landroid/os/RemoteException;
    goto :goto_2
.end method

.method public setAnimationScale(IF)V
    .locals 2
    .param p1, "which"    # I
    .param p2, "scale"    # F

    #@0
    .prologue
    .line 5523
    const-string/jumbo v0, "android.permission.SET_ANIMATION_SCALE"

    #@3
    .line 5524
    const-string/jumbo v1, "setAnimationScale()"

    #@6
    .line 5523
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 5525
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires SET_ANIMATION_SCALE permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 5528
    :cond_0
    invoke-static {p2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@18
    move-result p2

    #@19
    .line 5529
    packed-switch p1, :pswitch_data_0

    #@1c
    .line 5536
    :goto_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1e
    const/16 v1, 0xe

    #@20
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@23
    .line 5522
    return-void

    #@24
    .line 5530
    :pswitch_0
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@26
    goto :goto_0

    #@27
    .line 5531
    :pswitch_1
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@29
    goto :goto_0

    #@2a
    .line 5532
    :pswitch_2
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@2c
    goto :goto_0

    #@2d
    .line 5529
    nop

    #@2e
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public setAnimationScales([F)V
    .locals 5
    .param p1, "scales"    # [F

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    const/4 v3, 0x2

    #@2
    const/4 v2, 0x1

    #@3
    .line 5541
    const-string/jumbo v0, "android.permission.SET_ANIMATION_SCALE"

    #@6
    .line 5542
    const-string/jumbo v1, "setAnimationScale()"

    #@9
    .line 5541
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@c
    move-result v0

    #@d
    if-nez v0, :cond_0

    #@f
    .line 5543
    new-instance v0, Ljava/lang/SecurityException;

    #@11
    const-string/jumbo v1, "Requires SET_ANIMATION_SCALE permission"

    #@14
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@17
    throw v0

    #@18
    .line 5546
    :cond_0
    if-eqz p1, :cond_3

    #@1a
    .line 5547
    array-length v0, p1

    #@1b
    if-lt v0, v2, :cond_1

    #@1d
    .line 5548
    const/4 v0, 0x0

    #@1e
    aget v0, p1, v0

    #@20
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@23
    move-result v0

    #@24
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@26
    .line 5550
    :cond_1
    array-length v0, p1

    #@27
    if-lt v0, v3, :cond_2

    #@29
    .line 5551
    aget v0, p1, v2

    #@2b
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@2e
    move-result v0

    #@2f
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@31
    .line 5553
    :cond_2
    array-length v0, p1

    #@32
    const/4 v1, 0x3

    #@33
    if-lt v0, v1, :cond_3

    #@35
    .line 5554
    aget v0, p1, v3

    #@37
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@3a
    move-result v0

    #@3b
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@3d
    .line 5555
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V

    #@40
    .line 5560
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@42
    const/16 v1, 0xe

    #@44
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@47
    .line 5540
    return-void
.end method

.method public setAppFullscreen(Landroid/os/IBinder;Z)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "toOpaque"    # Z

    #@0
    .prologue
    .line 4507
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 4508
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@6
    move-result-object v0

    #@7
    .line 4509
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@9
    .line 4510
    iput-boolean p2, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@b
    .line 4511
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setWindowOpaqueLocked(Landroid/os/IBinder;Z)V

    #@e
    .line 4512
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    :cond_0
    monitor-exit v2

    #@12
    .line 4506
    return-void

    #@13
    .line 4507
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@14
    monitor-exit v2

    #@15
    throw v1
.end method

.method public setAppOrientation(Landroid/view/IApplicationToken;I)V
    .locals 5
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "requestedOrientation"    # I

    #@0
    .prologue
    .line 4049
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4050
    const-string/jumbo v2, "setAppOrientation()"

    #@6
    .line 4049
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 4051
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 4054
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 4055
    :try_start_0
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@1b
    move-result-object v1

    #@1c
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1f
    move-result-object v0

    #@20
    .line 4056
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_1

    #@22
    .line 4057
    const-string/jumbo v1, "WindowManager"

    #@25
    new-instance v3, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    const-string/jumbo v4, "Attempted to set orientation of non-existing app token: "

    #@2d
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@34
    move-result-object v3

    #@35
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@38
    move-result-object v3

    #@39
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3c
    monitor-exit v2

    #@3d
    .line 4058
    return-void

    #@3e
    .line 4061
    :cond_1
    :try_start_1
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@40
    monitor-exit v2

    #@41
    .line 4048
    return-void

    #@42
    .line 4054
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@43
    monitor-exit v2

    #@44
    throw v1
.end method

.method public setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;Z)V
    .locals 24
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "transferFrom"    # Landroid/os/IBinder;
    .param p11, "createIfNeeded"    # Z

    #@0
    .prologue
    .line 4278
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4279
    const-string/jumbo v3, "setAppStartingWindow()"

    #@6
    .line 4278
    move-object/from16 v0, p0

    #@8
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v2

    #@c
    if-nez v2, :cond_0

    #@e
    .line 4280
    new-instance v2, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v2

    #@17
    .line 4283
    :cond_0
    move-object/from16 v0, p0

    #@19
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    move-object/from16 v23, v0

    #@1d
    monitor-enter v23

    #@1e
    .line 4288
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@21
    move-result-object v22

    #@22
    .line 4289
    .local v22, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v22, :cond_1

    #@24
    .line 4290
    const-string/jumbo v2, "WindowManager"

    #@27
    new-instance v3, Ljava/lang/StringBuilder;

    #@29
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2c
    const-string/jumbo v4, "Attempted to set icon of non-existing app token: "

    #@2f
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v3

    #@33
    move-object/from16 v0, p1

    #@35
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@38
    move-result-object v3

    #@39
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3c
    move-result-object v3

    #@3d
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@40
    monitor-exit v23

    #@41
    .line 4291
    return-void

    #@42
    .line 4297
    :cond_1
    :try_start_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@45
    move-result v2

    #@46
    if-nez v2, :cond_2

    #@48
    monitor-exit v23

    #@49
    .line 4298
    return-void

    #@4a
    .line 4301
    :cond_2
    :try_start_2
    move-object/from16 v0, v22

    #@4c
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@4e
    if-eqz v2, :cond_3

    #@50
    monitor-exit v23

    #@51
    .line 4302
    return-void

    #@52
    .line 4305
    :cond_3
    if-eqz p10, :cond_b

    #@54
    .line 4306
    :try_start_3
    move-object/from16 v0, p0

    #@56
    move-object/from16 v1, p10

    #@58
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@5b
    move-result-object v17

    #@5c
    .line 4307
    .local v17, "ttoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v17, :cond_b

    #@5e
    .line 4308
    move-object/from16 v0, v17

    #@60
    iget-object v13, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@62
    .line 4309
    .local v13, "startingWindow":Lcom/android/server/wm/WindowState;
    if-eqz v13, :cond_8

    #@64
    .line 4312
    const/4 v2, 0x1

    #@65
    move-object/from16 v0, p0

    #@67
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@69
    .line 4317
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@6c
    move-result-wide v14

    #@6d
    .line 4320
    .local v14, "origId":J
    move-object/from16 v0, v17

    #@6f
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@71
    move-object/from16 v0, v22

    #@73
    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@75
    .line 4321
    move-object/from16 v0, v17

    #@77
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@79
    move-object/from16 v0, v22

    #@7b
    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@7d
    .line 4322
    move-object/from16 v0, v17

    #@7f
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@81
    move-object/from16 v0, v22

    #@83
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@85
    .line 4323
    const/4 v2, 0x0

    #@86
    move-object/from16 v0, v17

    #@88
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@8a
    .line 4324
    move-object/from16 v0, v22

    #@8c
    iput-object v13, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@8e
    .line 4325
    move-object/from16 v0, v17

    #@90
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    #@92
    move-object/from16 v0, v22

    #@94
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    #@96
    .line 4326
    const/4 v2, 0x0

    #@97
    move-object/from16 v0, v17

    #@99
    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@9b
    .line 4327
    const/4 v2, 0x0

    #@9c
    move-object/from16 v0, v17

    #@9e
    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@a0
    .line 4328
    const/4 v2, 0x0

    #@a1
    move-object/from16 v0, v17

    #@a3
    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@a5
    .line 4329
    const/4 v2, 0x1

    #@a6
    move-object/from16 v0, v17

    #@a8
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@aa
    .line 4330
    move-object/from16 v0, v22

    #@ac
    iput-object v0, v13, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@ae
    .line 4331
    move-object/from16 v0, v22

    #@b0
    iput-object v0, v13, Lcom/android/server/wm/WindowState;->mRootToken:Lcom/android/server/wm/WindowToken;

    #@b2
    .line 4332
    move-object/from16 v0, v22

    #@b4
    iput-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@b6
    .line 4337
    invoke-virtual {v13}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@b9
    move-result-object v2

    #@ba
    invoke-virtual {v2, v13}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@bd
    .line 4338
    const/4 v2, 0x1

    #@be
    move-object/from16 v0, p0

    #@c0
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@c2
    .line 4341
    move-object/from16 v0, v17

    #@c4
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@c6
    invoke-virtual {v2, v13}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@c9
    .line 4342
    move-object/from16 v0, v17

    #@cb
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@cd
    invoke-virtual {v2, v13}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@d0
    .line 4343
    const/4 v2, 0x1

    #@d1
    move-object/from16 v0, p0

    #@d3
    invoke-direct {v0, v13, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@d6
    .line 4350
    move-object/from16 v0, v17

    #@d8
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@da
    if-eqz v2, :cond_4

    #@dc
    .line 4351
    const/4 v2, 0x1

    #@dd
    move-object/from16 v0, v22

    #@df
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@e1
    .line 4352
    move-object/from16 v0, v17

    #@e3
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@e5
    move-object/from16 v0, v22

    #@e7
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@e9
    .line 4354
    :cond_4
    move-object/from16 v0, v17

    #@eb
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@ed
    if-eqz v2, :cond_5

    #@ef
    .line 4355
    const/4 v2, 0x1

    #@f0
    move-object/from16 v0, v22

    #@f2
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@f4
    .line 4357
    :cond_5
    move-object/from16 v0, v17

    #@f6
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@f8
    if-nez v2, :cond_6

    #@fa
    .line 4358
    const/4 v2, 0x0

    #@fb
    move-object/from16 v0, v22

    #@fd
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@ff
    .line 4359
    const/4 v2, 0x0

    #@100
    move-object/from16 v0, v22

    #@102
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@104
    .line 4360
    const/4 v2, 0x0

    #@105
    move-object/from16 v0, v22

    #@107
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    #@109
    .line 4362
    :cond_6
    move-object/from16 v0, v22

    #@10b
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@10d
    move-object/from16 v0, v17

    #@10f
    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@111
    if-eq v2, v3, :cond_7

    #@113
    .line 4363
    move-object/from16 v0, v17

    #@115
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@117
    move-object/from16 v0, v22

    #@119
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@11b
    .line 4364
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@11e
    .line 4366
    :cond_7
    move-object/from16 v0, v17

    #@120
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@122
    .line 4367
    move-object/from16 v0, v22

    #@124
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@126
    iget-object v4, v13, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@128
    .line 4366
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/AppWindowAnimator;->transferCurrentAnimation(Lcom/android/server/wm/AppWindowAnimator;Lcom/android/server/wm/WindowStateAnimator;)V

    #@12b
    .line 4369
    const/4 v2, 0x3

    #@12c
    .line 4370
    const/4 v3, 0x1

    #@12d
    .line 4369
    move-object/from16 v0, p0

    #@12f
    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@132
    .line 4371
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@135
    move-result-object v2

    #@136
    const/4 v3, 0x1

    #@137
    iput-boolean v3, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@139
    .line 4372
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@13c
    .line 4373
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@13f
    monitor-exit v23

    #@140
    .line 4374
    return-void

    #@141
    .line 4375
    .end local v14    # "origId":J
    :cond_8
    :try_start_4
    move-object/from16 v0, v17

    #@143
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@145
    if-eqz v2, :cond_9

    #@147
    .line 4381
    move-object/from16 v0, v17

    #@149
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@14b
    move-object/from16 v0, v22

    #@14d
    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@14f
    .line 4382
    const/4 v2, 0x0

    #@150
    move-object/from16 v0, v17

    #@152
    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@154
    .line 4383
    const/4 v2, 0x1

    #@155
    move-object/from16 v0, v17

    #@157
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@159
    .line 4384
    move-object/from16 v0, p0

    #@15b
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@15d
    const/4 v3, 0x5

    #@15e
    move-object/from16 v0, v22

    #@160
    invoke-virtual {v2, v3, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@163
    move-result-object v12

    #@164
    .line 4388
    .local v12, "m":Landroid/os/Message;
    move-object/from16 v0, p0

    #@166
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@168
    invoke-virtual {v2, v12}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@16b
    monitor-exit v23

    #@16c
    .line 4389
    return-void

    #@16d
    .line 4391
    .end local v12    # "m":Landroid/os/Message;
    :cond_9
    :try_start_5
    move-object/from16 v0, v17

    #@16f
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@171
    move-object/from16 v16, v0

    #@173
    .line 4392
    .local v16, "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v22

    #@175
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@177
    move-object/from16 v18, v0

    #@179
    .line 4393
    .local v18, "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v16

    #@17b
    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@17d
    if-eqz v2, :cond_b

    #@17f
    .line 4396
    move-object/from16 v0, v18

    #@181
    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@183
    if-eqz v2, :cond_a

    #@185
    .line 4397
    move-object/from16 v0, v18

    #@187
    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@189
    invoke-virtual {v2}, Landroid/view/SurfaceControl;->destroy()V

    #@18c
    .line 4399
    :cond_a
    move-object/from16 v0, v16

    #@18e
    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@190
    move-object/from16 v0, v18

    #@192
    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@194
    .line 4400
    move-object/from16 v0, v16

    #@196
    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    #@198
    move-object/from16 v0, v18

    #@19a
    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    #@19c
    .line 4401
    move-object/from16 v0, v16

    #@19e
    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I

    #@1a0
    move-object/from16 v0, v18

    #@1a2
    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I

    #@1a4
    .line 4402
    move-object/from16 v0, v16

    #@1a6
    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    #@1a8
    move-object/from16 v0, v18

    #@1aa
    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    #@1ac
    .line 4403
    move-object/from16 v0, v16

    #@1ae
    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    #@1b0
    move-object/from16 v0, v18

    #@1b2
    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    #@1b4
    .line 4404
    const/4 v2, 0x0

    #@1b5
    move-object/from16 v0, v16

    #@1b7
    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@1b9
    .line 4411
    .end local v13    # "startingWindow":Lcom/android/server/wm/WindowState;
    .end local v16    # "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v17    # "ttoken":Lcom/android/server/wm/AppWindowToken;
    .end local v18    # "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :cond_b
    if-nez p11, :cond_c

    #@1bb
    monitor-exit v23

    #@1bc
    .line 4412
    return-void

    #@1bd
    .line 4421
    :cond_c
    if-eqz p3, :cond_11

    #@1bf
    .line 4422
    :try_start_6
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    #@1c2
    move-result-object v2

    #@1c3
    .line 4423
    sget-object v3, Lcom/android/internal/R$styleable;->Window:[I

    #@1c5
    move-object/from16 v0, p0

    #@1c7
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@1c9
    .line 4422
    move-object/from16 v0, p2

    #@1cb
    move/from16 v1, p3

    #@1cd
    invoke-virtual {v2, v0, v1, v3, v4}, Lcom/android/server/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/server/AttributeCache$Entry;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@1d0
    move-result-object v11

    #@1d1
    .line 4424
    .local v11, "ent":Lcom/android/server/AttributeCache$Entry;
    if-nez v11, :cond_d

    #@1d3
    monitor-exit v23

    #@1d4
    .line 4427
    return-void

    #@1d5
    .line 4438
    :cond_d
    :try_start_7
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@1d7
    .line 4439
    const/4 v3, 0x5

    #@1d8
    .line 4438
    invoke-virtual {v2, v3}, Landroid/content/res/TypedArray;->hasValue(I)Z

    #@1db
    move-result v20

    #@1dc
    .line 4440
    .local v20, "windowIsTranslucentDefined":Z
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@1de
    .line 4441
    const/4 v3, 0x5

    #@1df
    const/4 v4, 0x0

    #@1e0
    .line 4440
    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    #@1e3
    move-result v19

    #@1e4
    .line 4442
    .local v19, "windowIsTranslucent":Z
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@1e6
    .line 4443
    const/16 v3, 0x19

    #@1e8
    const/4 v4, 0x0

    #@1e9
    .line 4442
    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    #@1ec
    move-result v21

    #@1ed
    .line 4444
    .local v21, "windowSwipeToDismiss":Z
    if-nez v19, :cond_e

    #@1ef
    if-nez v20, :cond_f

    #@1f1
    if-eqz v21, :cond_f

    #@1f3
    :cond_e
    monitor-exit v23

    #@1f4
    .line 4445
    return-void

    #@1f5
    .line 4447
    :cond_f
    :try_start_8
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@1f7
    .line 4448
    const/4 v3, 0x4

    #@1f8
    const/4 v4, 0x0

    #@1f9
    .line 4447
    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    #@1fc
    move-result v2

    #@1fd
    if-eqz v2, :cond_10

    #@1ff
    monitor-exit v23

    #@200
    .line 4449
    return-void

    #@201
    .line 4451
    :cond_10
    :try_start_9
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@203
    .line 4452
    const/16 v3, 0xe

    #@205
    const/4 v4, 0x0

    #@206
    .line 4451
    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    #@209
    move-result v2

    #@20a
    if-eqz v2, :cond_11

    #@20c
    .line 4453
    move-object/from16 v0, p0

    #@20e
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@210
    if-nez v2, :cond_12

    #@212
    .line 4459
    const/high16 v2, 0x100000

    #@214
    or-int p9, p9, v2

    #@216
    .line 4467
    .end local v11    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v19    # "windowIsTranslucent":Z
    .end local v20    # "windowIsTranslucentDefined":Z
    .end local v21    # "windowSwipeToDismiss":Z
    :cond_11
    new-instance v2, Lcom/android/server/wm/StartingData;

    #@218
    move-object/from16 v3, p2

    #@21a
    move/from16 v4, p3

    #@21c
    move-object/from16 v5, p4

    #@21e
    move-object/from16 v6, p5

    #@220
    move/from16 v7, p6

    #@222
    move/from16 v8, p7

    #@224
    move/from16 v9, p8

    #@226
    move/from16 v10, p9

    #@228
    invoke-direct/range {v2 .. v10}, Lcom/android/server/wm/StartingData;-><init>(Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIII)V

    #@22b
    move-object/from16 v0, v22

    #@22d
    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@22f
    .line 4469
    move-object/from16 v0, p0

    #@231
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@233
    const/4 v3, 0x5

    #@234
    move-object/from16 v0, v22

    #@236
    invoke-virtual {v2, v3, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@239
    move-result-object v12

    #@23a
    .line 4474
    .restart local v12    # "m":Landroid/os/Message;
    move-object/from16 v0, p0

    #@23c
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@23e
    invoke-virtual {v2, v12}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    #@241
    monitor-exit v23

    #@242
    .line 4277
    return-void

    #@243
    .end local v12    # "m":Landroid/os/Message;
    .restart local v11    # "ent":Lcom/android/server/AttributeCache$Entry;
    .restart local v19    # "windowIsTranslucent":Z
    .restart local v20    # "windowIsTranslucentDefined":Z
    .restart local v21    # "windowSwipeToDismiss":Z
    :cond_12
    monitor-exit v23

    #@244
    .line 4461
    return-void

    #@245
    .line 4283
    .end local v11    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v19    # "windowIsTranslucent":Z
    .end local v20    # "windowIsTranslucentDefined":Z
    .end local v21    # "windowSwipeToDismiss":Z
    .end local v22    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v2

    #@246
    monitor-exit v23

    #@247
    throw v2
.end method

.method public setAppTask(Landroid/os/IBinder;I)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "taskId"    # I

    #@0
    .prologue
    .line 3772
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3773
    const-string/jumbo v4, "setAppTask()"

    #@6
    .line 3772
    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v3

    #@a
    if-nez v3, :cond_0

    #@c
    .line 3774
    new-instance v3, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v3

    #@15
    .line 3777
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v4

    #@18
    .line 3778
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v0

    #@1c
    .line 3779
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_1

    #@1e
    .line 3780
    const-string/jumbo v3, "WindowManager"

    #@21
    new-instance v5, Ljava/lang/StringBuilder;

    #@23
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@26
    const-string/jumbo v6, "Attempted to set task id of non-existing app token: "

    #@29
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v5

    #@2d
    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v5

    #@31
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@34
    move-result-object v5

    #@35
    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    monitor-exit v4

    #@39
    .line 3781
    return-void

    #@3a
    .line 3783
    :cond_1
    :try_start_1
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@3c
    .line 3784
    .local v2, "oldTask":Lcom/android/server/wm/Task;
    invoke-virtual {v2, v0}, Lcom/android/server/wm/Task;->removeAppToken(Lcom/android/server/wm/AppWindowToken;)Z

    #@3f
    .line 3786
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@41
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v1

    #@45
    check-cast v1, Lcom/android/server/wm/Task;

    #@47
    .line 3787
    .local v1, "newTask":Lcom/android/server/wm/Task;
    if-nez v1, :cond_2

    #@49
    .line 3789
    iget-object v3, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@4b
    iget v3, v3, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@4d
    iget v5, v2, Lcom/android/server/wm/Task;->mUserId:I

    #@4f
    invoke-direct {p0, p2, v3, v5, v0}, Lcom/android/server/wm/WindowManagerService;->createTaskLocked(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;

    #@52
    move-result-object v1

    #@53
    .line 3791
    :cond_2
    const v3, 0x7fffffff

    #@56
    invoke-virtual {v1, v3, v0}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@59
    monitor-exit v4

    #@5a
    .line 3771
    return-void

    #@5b
    .line 3777
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "newTask":Lcom/android/server/wm/Task;
    .end local v2    # "oldTask":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@5c
    monitor-exit v4

    #@5d
    throw v3
.end method

.method public setAppVisibility(Landroid/os/IBinder;Z)V
    .locals 12
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v0, 0x0

    #@2
    .line 4668
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@5
    .line 4669
    const-string/jumbo v4, "setAppVisibility()"

    #@8
    .line 4668
    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v3

    #@c
    if-nez v3, :cond_0

    #@e
    .line 4670
    new-instance v0, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v0

    #@17
    .line 4675
    :cond_0
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@19
    monitor-enter v11

    #@1a
    .line 4676
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1d
    move-result-object v1

    #@1e
    .line 4677
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_1

    #@20
    .line 4678
    const-string/jumbo v0, "WindowManager"

    #@23
    new-instance v2, Ljava/lang/StringBuilder;

    #@25
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@28
    const-string/jumbo v3, "Attempted to set visibility of non-existing app token: "

    #@2b
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e
    move-result-object v2

    #@2f
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v2

    #@33
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@36
    move-result-object v2

    #@37
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3a
    monitor-exit v11

    #@3b
    .line 4679
    return-void

    #@3c
    .line 4687
    :cond_1
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@3e
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@41
    .line 4688
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@43
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@46
    .line 4689
    const/4 v3, 0x0

    #@47
    iput-boolean v3, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@49
    .line 4690
    if-eqz p2, :cond_6

    #@4b
    :goto_0
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@4d
    .line 4694
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@50
    move-result v0

    #@51
    if-eqz v0, :cond_8

    #@53
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@55
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@58
    move-result v0

    #@59
    if-eqz v0, :cond_8

    #@5b
    .line 4699
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@5d
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    #@5f
    if-nez v0, :cond_3

    #@61
    .line 4700
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@63
    if-eqz v0, :cond_2

    #@65
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@67
    .line 4699
    if-eqz v0, :cond_3

    #@69
    .line 4703
    :cond_2
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6b
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->setDummyAnimation()V

    #@6e
    .line 4705
    :cond_3
    const/4 v0, 0x1

    #@6f
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@71
    .line 4706
    if-eqz p2, :cond_7

    #@73
    .line 4707
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@75
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@78
    .line 4708
    const/4 v0, 0x0

    #@79
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@7b
    .line 4709
    const/4 v0, 0x1

    #@7c
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    #@7e
    .line 4714
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@80
    if-eqz v0, :cond_4

    #@82
    .line 4715
    const/4 v0, 0x0

    #@83
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@85
    .line 4716
    const/4 v0, 0x0

    #@86
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@88
    .line 4717
    const/4 v0, 0x1

    #@89
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@8b
    .line 4719
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@8d
    if-eqz v0, :cond_4

    #@8f
    .line 4726
    const/4 v0, 0x0

    #@90
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@92
    .line 4727
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@95
    .line 4734
    :cond_4
    :goto_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@97
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    #@9a
    move-result v0

    #@9b
    const/16 v2, 0x10

    #@9d
    if-ne v0, v2, :cond_5

    #@9f
    .line 4737
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@a2
    move-result-object v0

    #@a3
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    #@a6
    move-result-object v10

    #@a7
    .line 4738
    .local v10, "win":Lcom/android/server/wm/WindowState;
    if-eqz v10, :cond_5

    #@a9
    .line 4739
    iget-object v7, v10, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@ab
    .line 4740
    .local v7, "focusedToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v7, :cond_5

    #@ad
    .line 4744
    const/4 v0, 0x1

    #@ae
    iput-boolean v0, v7, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@b0
    .line 4745
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@b2
    invoke-virtual {v0, v7}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@b5
    .end local v7    # "focusedToken":Lcom/android/server/wm/AppWindowToken;
    .end local v10    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    monitor-exit v11

    #@b6
    .line 4749
    return-void

    #@b7
    :cond_6
    move v0, v2

    #@b8
    .line 4690
    goto :goto_0

    #@b9
    .line 4731
    :cond_7
    :try_start_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@bb
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@be
    .line 4732
    const/4 v0, 0x0

    #@bf
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@c1
    goto :goto_1

    #@c2
    .line 4675
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v0

    #@c3
    monitor-exit v11

    #@c4
    throw v0

    #@c5
    .line 4752
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    :try_start_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@c8
    move-result-wide v8

    #@c9
    .line 4753
    .local v8, "origId":J
    const/4 v0, 0x0

    #@ca
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@cc
    .line 4755
    iget-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    #@ce
    .line 4754
    const/4 v2, 0x0

    #@cf
    const/4 v4, -0x1

    #@d0
    .line 4755
    const/4 v5, 0x1

    #@d1
    move-object v0, p0

    #@d2
    move v3, p2

    #@d3
    .line 4754
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    #@d6
    .line 4756
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@d9
    .line 4757
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@dc
    monitor-exit v11

    #@dd
    .line 4667
    return-void
.end method

.method public setAppWillBeHidden(Landroid/os/IBinder;)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 4489
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4490
    const-string/jumbo v2, "setAppWillBeHidden()"

    #@6
    .line 4489
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 4491
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 4496
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 4497
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v0

    #@1c
    .line 4498
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_1

    #@1e
    .line 4499
    const-string/jumbo v1, "WindowManager"

    #@21
    new-instance v3, Ljava/lang/StringBuilder;

    #@23
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@26
    const-string/jumbo v4, "Attempted to set will be hidden of non-existing app token: "

    #@29
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v3

    #@2d
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@34
    move-result-object v3

    #@35
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    monitor-exit v2

    #@39
    .line 4500
    return-void

    #@3a
    .line 4502
    :cond_1
    const/4 v1, 0x1

    #@3b
    :try_start_1
    iput-boolean v1, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@3d
    monitor-exit v2

    #@3e
    .line 4488
    return-void

    #@3f
    .line 4496
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@40
    monitor-exit v2

    #@41
    throw v1
.end method

.method public setCurrentProfileIds([I)V
    .locals 2
    .param p1, "currentProfileIds"    # [I

    #@0
    .prologue
    .line 5666
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5667
    :try_start_0
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 5665
    return-void

    #@7
    .line 5666
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method public setCurrentUser(I[I)V
    .locals 5
    .param p1, "newUserId"    # I
    .param p2, "currentProfileIds"    # [I

    #@0
    .prologue
    .line 5672
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5673
    :try_start_0
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@5
    .line 5674
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@7
    .line 5675
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@9
    invoke-virtual {v3, p1}, Lcom/android/server/wm/AppTransition;->setCurrentUser(I)V

    #@c
    .line 5676
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@e
    invoke-interface {v3, p1}, Landroid/view/WindowManagerPolicy;->setCurrentUserLw(I)V

    #@11
    .line 5679
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@13
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@16
    move-result v2

    #@17
    .line 5680
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@18
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_0

    #@1a
    .line 5681
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1c
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@1f
    move-result-object v0

    #@20
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@22
    .line 5682
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->switchUserStacks()V

    #@25
    .line 5683
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@28
    .line 5680
    add-int/lit8 v1, v1, 0x1

    #@2a
    goto :goto_0

    #@2b
    .line 5685
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    monitor-exit v4

    #@2f
    .line 5671
    return-void

    #@30
    .line 5672
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_0
    move-exception v3

    #@31
    monitor-exit v4

    #@32
    throw v3
.end method

.method public setEventDispatching(Z)V
    .locals 2
    .param p1, "enabled"    # Z

    #@0
    .prologue
    .line 7574
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 7575
    const-string/jumbo v1, "setEventDispatching()"

    #@6
    .line 7574
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 7576
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 7579
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v1

    #@18
    .line 7580
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    #@1a
    .line 7581
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@1c
    if-eqz v0, :cond_1

    #@1e
    .line 7582
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@20
    invoke-virtual {v0, p1}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@23
    :cond_1
    monitor-exit v1

    #@24
    .line 7573
    return-void

    #@25
    .line 7579
    :catchall_0
    move-exception v0

    #@26
    monitor-exit v1

    #@27
    throw v0
.end method

.method public setFocusedApp(Landroid/os/IBinder;Z)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "moveFocusNow"    # Z

    #@0
    .prologue
    .line 4113
    const-string/jumbo v4, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4114
    const-string/jumbo v5, "setFocusedApp()"

    #@6
    .line 4113
    invoke-virtual {p0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v4

    #@a
    if-nez v4, :cond_0

    #@c
    .line 4115
    new-instance v4, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v5, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v4

    #@15
    .line 4118
    :cond_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v5

    #@18
    .line 4120
    if-nez p1, :cond_4

    #@1a
    .line 4122
    const/4 v1, 0x0

    #@1b
    .line 4132
    :cond_1
    :goto_0
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@1d
    if-eq v4, v1, :cond_5

    #@1f
    const/4 v0, 0x1

    #@20
    .line 4133
    .local v0, "changed":Z
    :goto_1
    if-eqz v0, :cond_2

    #@22
    .line 4134
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@24
    .line 4135
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@26
    invoke-virtual {v4, v1}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    #@29
    .line 4136
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusedStackFrame()V

    #@2c
    .line 4138
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2f
    .line 4140
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusedStackLayer()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@32
    .line 4142
    :try_start_2
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@35
    .line 4147
    :cond_2
    if-eqz p2, :cond_3

    #@37
    if-eqz v0, :cond_3

    #@39
    .line 4148
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3c
    move-result-wide v2

    #@3d
    .line 4149
    .local v2, "origId":J
    const/4 v4, 0x0

    #@3e
    const/4 v6, 0x1

    #@3f
    invoke-direct {p0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@42
    .line 4150
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@45
    .end local v2    # "origId":J
    :cond_3
    monitor-exit v5

    #@46
    .line 4112
    return-void

    #@47
    .line 4124
    .end local v0    # "changed":Z
    :cond_4
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@4a
    move-result-object v1

    #@4b
    .line 4125
    .local v1, "newFocus":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_1

    #@4d
    .line 4126
    const-string/jumbo v4, "WindowManager"

    #@50
    new-instance v6, Ljava/lang/StringBuilder;

    #@52
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@55
    const-string/jumbo v7, "Attempted to set focus to non-existing app token: "

    #@58
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5b
    move-result-object v6

    #@5c
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5f
    move-result-object v6

    #@60
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@63
    move-result-object v6

    #@64
    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@67
    goto :goto_0

    #@68
    .line 4118
    .end local v1    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v4

    #@69
    monitor-exit v5

    #@6a
    throw v4

    #@6b
    .line 4132
    :cond_5
    const/4 v0, 0x0

    #@6c
    .restart local v0    # "changed":Z
    goto :goto_1

    #@6d
    .line 4141
    :catchall_1
    move-exception v4

    #@6e
    .line 4142
    :try_start_4
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@71
    .line 4141
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0
.end method

.method setFocusedStackFrame()V
    .locals 4

    #@0
    .prologue
    .line 4098
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@2
    if-eqz v3, :cond_1

    #@4
    .line 4099
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@6
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@8
    .line 4100
    .local v2, "task":Lcom/android/server/wm/Task;
    iget-object v1, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@a
    .line 4101
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@d
    move-result-object v0

    #@e
    .line 4102
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@10
    .line 4103
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->setTouchExcludeRegion(Lcom/android/server/wm/TaskStack;)V

    #@13
    .line 4108
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :cond_0
    :goto_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    #@15
    invoke-virtual {v3, v1}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(Lcom/android/server/wm/TaskStack;)V

    #@18
    .line 4096
    return-void

    #@19
    .line 4106
    :cond_1
    const/4 v1, 0x0

    #@1a
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    goto :goto_0
.end method

.method setFocusedStackLayer()V
    .locals 6

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 4079
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    #@3
    .line 4080
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@5
    if-eqz v4, :cond_1

    #@7
    .line 4081
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@9
    iget-object v3, v4, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@b
    .line 4082
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    #@e
    move-result v4

    #@f
    add-int/lit8 v1, v4, -0x1

    #@11
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    #@13
    .line 4083
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@16
    move-result-object v2

    #@17
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@19
    .line 4084
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1b
    iget v0, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@1d
    .line 4085
    .local v0, "animLayer":I
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@1f
    if-nez v4, :cond_0

    #@21
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@24
    move-result v4

    #@25
    if-eqz v4, :cond_0

    #@27
    .line 4086
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    #@29
    if-le v0, v4, :cond_0

    #@2b
    .line 4087
    add-int/lit8 v4, v0, 0x1

    #@2d
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    #@2f
    .line 4082
    :cond_0
    add-int/lit8 v1, v1, -0x1

    #@31
    goto :goto_0

    #@32
    .line 4093
    .end local v0    # "animLayer":I
    .end local v1    # "i":I
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .end local v3    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    #@34
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    #@36
    invoke-virtual {v4, v5}, Lcom/android/server/wm/FocusedStackFrame;->setLayer(I)V

    #@39
    .line 4078
    return-void
.end method

.method public setForcedDisplayDensity(II)V
    .locals 7
    .param p1, "displayId"    # I
    .param p2, "density"    # I

    #@0
    .prologue
    .line 8574
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8575
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8574
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8577
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 8580
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8581
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 8583
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 8585
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8586
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 8587
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_2

    #@2c
    .line 8588
    invoke-direct {p0, v0, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@2f
    .line 8589
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@31
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@34
    move-result-object v1

    #@35
    .line 8590
    const-string/jumbo v5, "display_density_forced"

    #@38
    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@3b
    move-result-object v6

    #@3c
    .line 8589
    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@3f
    :cond_2
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@40
    .line 8594
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@43
    .line 8573
    return-void

    #@44
    .line 8585
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@45
    :try_start_3
    monitor-exit v4

    #@46
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@47
    .line 8593
    :catchall_1
    move-exception v1

    #@48
    .line 8594
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4b
    .line 8593
    throw v1
.end method

.method public setForcedDisplayScalingMode(II)V
    .locals 6
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    #@0
    .prologue
    .line 8413
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8414
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8413
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8416
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 8419
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8420
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 8422
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 8424
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8425
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 8426
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_4

    #@2c
    .line 8427
    if-ltz p2, :cond_2

    #@2e
    const/4 v1, 0x1

    #@2f
    if-le p2, v1, :cond_3

    #@31
    .line 8428
    :cond_2
    const/4 p2, 0x0

    #@32
    .line 8430
    :cond_3
    invoke-direct {p0, v0, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@35
    .line 8431
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@37
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@3a
    move-result-object v1

    #@3b
    .line 8432
    const-string/jumbo v5, "display_scaling_force"

    #@3e
    .line 8431
    invoke-static {v1, v5, p2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@41
    :cond_4
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@42
    .line 8436
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@45
    .line 8412
    return-void

    #@46
    .line 8424
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@47
    :try_start_3
    monitor-exit v4

    #@48
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@49
    .line 8435
    :catchall_1
    move-exception v1

    #@4a
    .line 8436
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4d
    .line 8435
    throw v1
.end method

.method public setForcedDisplaySize(III)V
    .locals 11
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I

    #@0
    .prologue
    .line 8378
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8379
    const-string/jumbo v7, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8378
    invoke-virtual {v6, v7}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v6

    #@9
    if-eqz v6, :cond_0

    #@b
    .line 8381
    new-instance v6, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v7, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v6

    #@14
    .line 8384
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8385
    new-instance v6, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v7, "Can only set the default display"

    #@1b
    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v6

    #@1f
    .line 8387
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v4

    #@23
    .line 8389
    .local v4, "ident":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8392
    const/16 v2, 0xc8

    #@28
    .line 8393
    .local v2, "MIN_WIDTH":I
    const/16 v1, 0xc8

    #@2a
    .line 8394
    .local v1, "MIN_HEIGHT":I
    const/4 v0, 0x2

    #@2b
    .line 8395
    .local v0, "MAX_SCALE":I
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@2e
    move-result-object v3

    #@2f
    .line 8396
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_2

    #@31
    .line 8397
    const/16 v6, 0xc8

    #@33
    invoke-static {p2, v6}, Ljava/lang/Math;->max(II)I

    #@36
    move-result v6

    #@37
    .line 8398
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@39
    mul-int/lit8 v8, v8, 0x2

    #@3b
    .line 8397
    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    #@3e
    move-result p2

    #@3f
    .line 8399
    const/16 v6, 0xc8

    #@41
    invoke-static {p3, v6}, Ljava/lang/Math;->max(II)I

    #@44
    move-result v6

    #@45
    .line 8400
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@47
    mul-int/lit8 v8, v8, 0x2

    #@49
    .line 8399
    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    #@4c
    move-result p3

    #@4d
    .line 8401
    invoke-direct {p0, v3, p2, p3}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    #@50
    .line 8402
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@52
    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@55
    move-result-object v6

    #@56
    .line 8403
    const-string/jumbo v8, "display_size_forced"

    #@59
    new-instance v9, Ljava/lang/StringBuilder;

    #@5b
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@5e
    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@61
    move-result-object v9

    #@62
    const-string/jumbo v10, ","

    #@65
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@68
    move-result-object v9

    #@69
    invoke-virtual {v9, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@6c
    move-result-object v9

    #@6d
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@70
    move-result-object v9

    #@71
    .line 8402
    invoke-static {v6, v8, v9}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@74
    :cond_2
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@75
    .line 8407
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@78
    .line 8377
    return-void

    #@79
    .line 8389
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v6

    #@7a
    :try_start_3
    monitor-exit v7

    #@7b
    throw v6
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@7c
    .line 8406
    .end local v0    # "MAX_SCALE":I
    .end local v1    # "MIN_HEIGHT":I
    .end local v2    # "MIN_WIDTH":I
    :catchall_1
    move-exception v6

    #@7d
    .line 8407
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@80
    .line 8406
    throw v6
.end method

.method setHoldScreenLocked(Lcom/android/server/wm/Session;)V
    .locals 5
    .param p1, "newHoldScreen"    # Lcom/android/server/wm/Session;

    #@0
    .prologue
    .line 10429
    if-eqz p1, :cond_2

    #@2
    const/4 v0, 0x1

    #@3
    .line 10431
    .local v0, "hold":Z
    :goto_0
    if-eqz v0, :cond_0

    #@5
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    #@7
    if-eq v2, p1, :cond_0

    #@9
    .line 10432
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@b
    new-instance v3, Landroid/os/WorkSource;

    #@d
    iget v4, p1, Lcom/android/server/wm/Session;->mUid:I

    #@f
    invoke-direct {v3, v4}, Landroid/os/WorkSource;-><init>(I)V

    #@12
    invoke-virtual {v2, v3}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    #@15
    .line 10434
    :cond_0
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    #@17
    .line 10436
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@19
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    #@1c
    move-result v1

    #@1d
    .line 10437
    .local v1, "state":Z
    if-eq v0, v1, :cond_1

    #@1f
    .line 10438
    if-eqz v0, :cond_3

    #@21
    .line 10439
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@23
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->acquire()V

    #@26
    .line 10440
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@28
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStartedLw()V

    #@2b
    .line 10428
    :cond_1
    :goto_1
    return-void

    #@2c
    .line 10429
    .end local v0    # "hold":Z
    .end local v1    # "state":Z
    :cond_2
    const/4 v0, 0x0

    #@2d
    .restart local v0    # "hold":Z
    goto :goto_0

    #@2e
    .line 10442
    .restart local v1    # "state":Z
    :cond_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@30
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStoppedLw()V

    #@33
    .line 10443
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@35
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    #@38
    goto :goto_1
.end method

.method public setInTouchMode(Z)V
    .locals 2
    .param p1, "mode"    # Z

    #@0
    .prologue
    .line 5936
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5937
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 5935
    return-void

    #@7
    .line 5936
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method setInputMethodAnimLayerAdjustment(I)V
    .locals 6
    .param p1, "adj"    # I

    #@0
    .prologue
    .line 1551
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodAnimLayerAdjustment:I

    #@2
    .line 1552
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@4
    .line 1553
    .local v2, "imw":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_0

    #@6
    .line 1554
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@8
    iget v5, v2, Lcom/android/server/wm/WindowState;->mLayer:I

    #@a
    add-int/2addr v5, p1

    #@b
    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@d
    .line 1557
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@f
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@12
    move-result v3

    #@13
    .line 1558
    .local v3, "wi":I
    :goto_0
    if-lez v3, :cond_0

    #@15
    .line 1559
    add-int/lit8 v3, v3, -0x1

    #@17
    .line 1560
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@19
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1c
    move-result-object v0

    #@1d
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@1f
    .line 1561
    .local v0, "cw":Lcom/android/server/wm/WindowState;
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@21
    iget v5, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    #@23
    add-int/2addr v5, p1

    #@24
    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@26
    goto :goto_0

    #@27
    .line 1566
    .end local v0    # "cw":Lcom/android/server/wm/WindowState;
    .end local v3    # "wi":I
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@29
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@2c
    move-result v1

    #@2d
    .line 1567
    .local v1, "di":I
    :goto_1
    if-lez v1, :cond_1

    #@2f
    .line 1568
    add-int/lit8 v1, v1, -0x1

    #@31
    .line 1569
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@33
    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@36
    move-result-object v2

    #@37
    .end local v2    # "imw":Lcom/android/server/wm/WindowState;
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@39
    .line 1570
    .restart local v2    # "imw":Lcom/android/server/wm/WindowState;
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@3b
    iget v5, v2, Lcom/android/server/wm/WindowState;->mLayer:I

    #@3d
    add-int/2addr v5, p1

    #@3e
    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@40
    goto :goto_1

    #@41
    .line 1549
    :cond_1
    return-void
.end method

.method setInsetsWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
    .locals 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "touchableInsets"    # I
    .param p4, "contentInsets"    # Landroid/graphics/Rect;
    .param p5, "visibleInsets"    # Landroid/graphics/Rect;
    .param p6, "touchableRegion"    # Landroid/graphics/Region;

    #@0
    .prologue
    .line 2957
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 2959
    .local v2, "origId":J
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 2960
    const/4 v4, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v1

    #@c
    .line 2961
    .local v1, "w":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_2

    #@e
    .line 2962
    const/4 v4, 0x0

    #@f
    iput-boolean v4, v1, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@11
    .line 2963
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    #@13
    invoke-virtual {v4, p4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@16
    .line 2964
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    #@18
    invoke-virtual {v4, p5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@1b
    .line 2965
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    #@1d
    invoke-virtual {v4, p6}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    #@20
    .line 2966
    iput p3, v1, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    #@22
    .line 2967
    iget v4, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@24
    const/high16 v6, 0x3f800000    # 1.0f

    #@26
    cmpl-float v4, v4, v6

    #@28
    if-eqz v4, :cond_0

    #@2a
    .line 2968
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    #@2c
    iget v6, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@2e
    invoke-virtual {v4, v6}, Landroid/graphics/Rect;->scale(F)V

    #@31
    .line 2969
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    #@33
    iget v6, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@35
    invoke-virtual {v4, v6}, Landroid/graphics/Rect;->scale(F)V

    #@38
    .line 2970
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    #@3a
    iget v6, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@3c
    invoke-virtual {v4, v6}, Landroid/graphics/Region;->scale(F)V

    #@3f
    .line 2972
    :cond_0
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@42
    move-result-object v0

    #@43
    .line 2973
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@45
    .line 2974
    const/4 v4, 0x1

    #@46
    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@48
    .line 2976
    :cond_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@4b
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@4c
    .line 2980
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4f
    .line 2956
    return-void

    #@50
    .line 2959
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v4

    #@51
    :try_start_3
    monitor-exit v5

    #@52
    throw v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@53
    .line 2979
    :catchall_1
    move-exception v4

    #@54
    .line 2980
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@57
    .line 2979
    throw v4
.end method

.method public setNewConfiguration(Landroid/content/res/Configuration;)V
    .locals 2
    .param p1, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 4032
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4033
    const-string/jumbo v1, "setNewConfiguration()"

    #@6
    .line 4032
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 4034
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 4037
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v1

    #@18
    .line 4038
    :try_start_0
    new-instance v0, Landroid/content/res/Configuration;

    #@1a
    invoke-direct {v0, p1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    #@1d
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@1f
    .line 4039
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@21
    if-eqz v0, :cond_1

    #@23
    .line 4040
    const/4 v0, 0x0

    #@24
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@26
    .line 4041
    const-string/jumbo v0, "new-config"

    #@29
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@2b
    .line 4043
    :cond_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    monitor-exit v1

    #@2f
    .line 4031
    return-void

    #@30
    .line 4037
    :catchall_0
    move-exception v0

    #@31
    monitor-exit v1

    #@32
    throw v0
.end method

.method public setOnHardKeyboardStatusChangeListener(Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

    #@0
    .prologue
    .line 7462
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 7463
    :try_start_0
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 7461
    return-void

    #@7
    .line 7462
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method public setOverscan(IIIII)V
    .locals 9
    .param p1, "displayId"    # I
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    #@0
    .prologue
    .line 8673
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8674
    const-string/jumbo v2, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8673
    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 8676
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v2, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 8679
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@17
    move-result-wide v6

    #@18
    .line 8681
    .local v6, "ident":J
    :try_start_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1a
    monitor-enter v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@1b
    .line 8682
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@1e
    move-result-object v1

    #@1f
    .line 8683
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1

    #@21
    move-object v0, p0

    #@22
    move v2, p2

    #@23
    move v3, p3

    #@24
    move v4, p4

    #@25
    move v5, p5

    #@26
    .line 8684
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    :cond_1
    :try_start_2
    monitor-exit v8
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@2a
    .line 8688
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2d
    .line 8672
    return-void

    #@2e
    .line 8681
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v0

    #@2f
    :try_start_3
    monitor-exit v8

    #@30
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@31
    .line 8687
    :catchall_1
    move-exception v0

    #@32
    .line 8688
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@35
    .line 8687
    throw v0
.end method

.method public setScreenCaptureDisabled(IZ)V
    .locals 8
    .param p1, "userId"    # I
    .param p2, "disabled"    # Z

    #@0
    .prologue
    .line 2675
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@3
    move-result v0

    #@4
    .line 2676
    .local v0, "callingUid":I
    const/16 v5, 0x3e8

    #@6
    if-eq v0, v5, :cond_0

    #@8
    .line 2677
    new-instance v5, Ljava/lang/SecurityException;

    #@a
    const-string/jumbo v6, "Only system can call setScreenCaptureDisabled."

    #@d
    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@10
    throw v5

    #@11
    .line 2680
    :cond_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@13
    monitor-enter v6

    #@14
    .line 2681
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@16
    invoke-static {p2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    #@19
    move-result-object v7

    #@1a
    invoke-virtual {v5, p1, v7}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@1d
    .line 2683
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1f
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@22
    move-result v5

    #@23
    add-int/lit8 v1, v5, -0x1

    #@25
    .local v1, "displayNdx":I
    :goto_0
    if-ltz v1, :cond_3

    #@27
    .line 2684
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@29
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@2c
    move-result-object v5

    #@2d
    check-cast v5, Lcom/android/server/wm/DisplayContent;

    #@2f
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@32
    move-result-object v4

    #@33
    .line 2685
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@36
    move-result v5

    #@37
    add-int/lit8 v3, v5, -0x1

    #@39
    .local v3, "winNdx":I
    :goto_1
    if-ltz v3, :cond_2

    #@3b
    .line 2686
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3e
    move-result-object v2

    #@3f
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@41
    .line 2687
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v5, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@43
    if-eqz v5, :cond_1

    #@45
    iget v5, v2, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    #@47
    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    #@4a
    move-result v5

    #@4b
    if-ne p1, v5, :cond_1

    #@4d
    .line 2688
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@4f
    invoke-virtual {v5, p2}, Lcom/android/server/wm/WindowStateAnimator;->setSecureLocked(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@52
    .line 2685
    :cond_1
    add-int/lit8 v3, v3, -0x1

    #@54
    goto :goto_1

    #@55
    .line 2683
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v1, v1, -0x1

    #@57
    goto :goto_0

    #@58
    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    monitor-exit v6

    #@59
    .line 2674
    return-void

    #@5a
    .line 2680
    .end local v1    # "displayNdx":I
    :catchall_0
    move-exception v5

    #@5b
    monitor-exit v6

    #@5c
    throw v5
.end method

.method public setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
    .locals 1
    .param p1, "value"    # Ljava/lang/String;

    #@0
    .prologue
    .line 6084
    const-string/jumbo v0, "persist.sys.strictmode.visual"

    #@3
    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    #@6
    .line 6083
    return-void
.end method

.method setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z
    .locals 17
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "visible"    # Z
    .param p4, "transit"    # I
    .param p5, "performLayout"    # Z
    .param p6, "isVoiceInteraction"    # Z

    #@0
    .prologue
    .line 4535
    const/4 v9, 0x0

    #@1
    .line 4537
    .local v9, "delayed":Z
    move-object/from16 v0, p1

    #@3
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@5
    move/from16 v0, p3

    #@7
    if-ne v2, v0, :cond_0

    #@9
    .line 4538
    if-eqz p3, :cond_7

    #@b
    const/4 v2, 0x0

    #@c
    :goto_0
    move-object/from16 v0, p1

    #@e
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@10
    .line 4539
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@13
    .line 4542
    :cond_0
    const/4 v2, 0x0

    #@14
    move-object/from16 v0, p1

    #@16
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    #@18
    .line 4546
    move-object/from16 v0, p1

    #@1a
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@1c
    move/from16 v0, p3

    #@1e
    if-eq v2, v0, :cond_1

    #@20
    move-object/from16 v0, p1

    #@22
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@24
    if-eqz v2, :cond_f

    #@26
    move-object/from16 v0, p1

    #@28
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@2a
    if-eqz v2, :cond_f

    #@2c
    .line 4547
    :cond_1
    const/4 v8, 0x0

    #@2d
    .line 4552
    .local v8, "changed":Z
    const/4 v12, 0x0

    #@2e
    .line 4554
    .local v12, "runningAppAnimation":Z
    const/4 v2, -0x1

    #@2f
    move/from16 v0, p4

    #@31
    if-eq v0, v2, :cond_5

    #@33
    .line 4555
    move-object/from16 v0, p1

    #@35
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@37
    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@39
    sget-object v3, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    #@3b
    if-ne v2, v3, :cond_2

    #@3d
    .line 4556
    move-object/from16 v0, p1

    #@3f
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@41
    const/4 v3, 0x0

    #@42
    iput-object v3, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@44
    :cond_2
    move-object/from16 v2, p0

    #@46
    move-object/from16 v3, p1

    #@48
    move-object/from16 v4, p2

    #@4a
    move/from16 v5, p4

    #@4c
    move/from16 v6, p3

    #@4e
    move/from16 v7, p6

    #@50
    .line 4558
    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    #@53
    move-result v2

    #@54
    if-eqz v2, :cond_3

    #@56
    .line 4559
    const/4 v12, 0x1

    #@57
    const/4 v9, 0x1

    #@58
    .line 4561
    :cond_3
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@5b
    move-result-object v15

    #@5c
    .line 4563
    .local v15, "window":Lcom/android/server/wm/WindowState;
    if-eqz v15, :cond_4

    #@5e
    move-object/from16 v0, p0

    #@60
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@62
    if-eqz v2, :cond_4

    #@64
    .line 4564
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@67
    move-result v2

    #@68
    if-nez v2, :cond_4

    #@6a
    .line 4565
    move-object/from16 v0, p0

    #@6c
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@6e
    move/from16 v0, p4

    #@70
    invoke-virtual {v2, v15, v0}, Lcom/android/server/wm/AccessibilityController;->onAppWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@73
    .line 4567
    :cond_4
    const/4 v8, 0x1

    #@74
    .line 4570
    .end local v15    # "window":Lcom/android/server/wm/WindowState;
    :cond_5
    move-object/from16 v0, p1

    #@76
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@78
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@7b
    move-result v16

    #@7c
    .line 4571
    .local v16, "windowsCount":I
    const/4 v11, 0x0

    #@7d
    .local v11, "i":I
    :goto_1
    move/from16 v0, v16

    #@7f
    if-ge v11, v0, :cond_c

    #@81
    .line 4572
    move-object/from16 v0, p1

    #@83
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@85
    invoke-virtual {v2, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@88
    move-result-object v14

    #@89
    check-cast v14, Lcom/android/server/wm/WindowState;

    #@8b
    .line 4573
    .local v14, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p1

    #@8d
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@8f
    if-ne v14, v2, :cond_8

    #@91
    .line 4571
    :cond_6
    :goto_2
    add-int/lit8 v11, v11, 0x1

    #@93
    goto :goto_1

    #@94
    .line 4538
    .end local v8    # "changed":Z
    .end local v11    # "i":I
    .end local v12    # "runningAppAnimation":Z
    .end local v14    # "win":Lcom/android/server/wm/WindowState;
    .end local v16    # "windowsCount":I
    :cond_7
    const/4 v2, 0x1

    #@95
    goto/16 :goto_0

    #@97
    .line 4579
    .restart local v8    # "changed":Z
    .restart local v11    # "i":I
    .restart local v12    # "runningAppAnimation":Z
    .restart local v14    # "win":Lcom/android/server/wm/WindowState;
    .restart local v16    # "windowsCount":I
    :cond_8
    if-eqz p3, :cond_a

    #@99
    .line 4580
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@9c
    move-result v2

    #@9d
    if-nez v2, :cond_6

    #@9f
    .line 4581
    if-nez v12, :cond_9

    #@a1
    .line 4582
    iget-object v2, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@a3
    .line 4583
    const/4 v3, 0x1

    #@a4
    const/4 v4, 0x1

    #@a5
    .line 4582
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@a8
    .line 4585
    move-object/from16 v0, p0

    #@aa
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@ac
    if-eqz v2, :cond_9

    #@ae
    .line 4586
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@b1
    move-result v2

    #@b2
    if-nez v2, :cond_9

    #@b4
    .line 4587
    move-object/from16 v0, p0

    #@b6
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@b8
    .line 4588
    const/4 v3, 0x1

    #@b9
    .line 4587
    invoke-virtual {v2, v14, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@bc
    .line 4591
    :cond_9
    const/4 v8, 0x1

    #@bd
    .line 4592
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@c0
    move-result-object v10

    #@c1
    .line 4593
    .local v10, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v10, :cond_6

    #@c3
    .line 4594
    const/4 v2, 0x1

    #@c4
    iput-boolean v2, v10, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@c6
    goto :goto_2

    #@c7
    .line 4597
    .end local v10    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_a
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@ca
    move-result v2

    #@cb
    if-eqz v2, :cond_6

    #@cd
    .line 4598
    if-nez v12, :cond_b

    #@cf
    .line 4599
    iget-object v2, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@d1
    .line 4600
    const/4 v3, 0x2

    #@d2
    const/4 v4, 0x0

    #@d3
    .line 4599
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@d6
    .line 4602
    move-object/from16 v0, p0

    #@d8
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@da
    if-eqz v2, :cond_b

    #@dc
    .line 4603
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@df
    move-result v2

    #@e0
    if-nez v2, :cond_b

    #@e2
    .line 4604
    move-object/from16 v0, p0

    #@e4
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@e6
    .line 4605
    const/4 v3, 0x2

    #@e7
    .line 4604
    invoke-virtual {v2, v14, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@ea
    .line 4608
    :cond_b
    const/4 v8, 0x1

    #@eb
    .line 4609
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@ee
    move-result-object v10

    #@ef
    .line 4610
    .restart local v10    # "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v10, :cond_6

    #@f1
    .line 4611
    const/4 v2, 0x1

    #@f2
    iput-boolean v2, v10, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@f4
    goto :goto_2

    #@f5
    .line 4616
    .end local v10    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v14    # "win":Lcom/android/server/wm/WindowState;
    :cond_c
    if-eqz p3, :cond_12

    #@f7
    const/4 v2, 0x0

    #@f8
    :goto_3
    move-object/from16 v0, p1

    #@fa
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@fc
    move-object/from16 v0, p1

    #@fe
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@100
    .line 4617
    if-nez p3, :cond_13

    #@102
    .line 4618
    const/4 v2, 0x1

    #@103
    const/4 v3, 0x1

    #@104
    move-object/from16 v0, p0

    #@106
    move-object/from16 v1, p1

    #@108
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@10b
    .line 4633
    :cond_d
    :goto_4
    if-eqz v8, :cond_f

    #@10d
    .line 4634
    move-object/from16 v0, p0

    #@10f
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@111
    invoke-virtual {v2}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@114
    .line 4635
    if-eqz p5, :cond_e

    #@116
    .line 4636
    const/4 v2, 0x3

    #@117
    .line 4637
    const/4 v3, 0x0

    #@118
    .line 4636
    move-object/from16 v0, p0

    #@11a
    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@11d
    .line 4638
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@120
    .line 4640
    :cond_e
    move-object/from16 v0, p0

    #@122
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@124
    const/4 v3, 0x0

    #@125
    invoke-virtual {v2, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@128
    .line 4644
    .end local v8    # "changed":Z
    .end local v11    # "i":I
    .end local v12    # "runningAppAnimation":Z
    .end local v16    # "windowsCount":I
    :cond_f
    move-object/from16 v0, p1

    #@12a
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@12c
    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@12e
    if-eqz v2, :cond_10

    #@130
    .line 4645
    const/4 v9, 0x1

    #@131
    .line 4648
    :cond_10
    move-object/from16 v0, p1

    #@133
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@135
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@138
    move-result v2

    #@139
    add-int/lit8 v11, v2, -0x1

    #@13b
    .restart local v11    # "i":I
    :goto_5
    if-ltz v11, :cond_11

    #@13d
    if-eqz v9, :cond_14

    #@13f
    .line 4654
    :cond_11
    return v9

    #@140
    .line 4616
    .restart local v8    # "changed":Z
    .restart local v12    # "runningAppAnimation":Z
    .restart local v16    # "windowsCount":I
    :cond_12
    const/4 v2, 0x1

    #@141
    goto :goto_3

    #@142
    .line 4622
    :cond_13
    move-object/from16 v0, p1

    #@144
    iget-object v13, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@146
    .line 4623
    .local v13, "swin":Lcom/android/server/wm/WindowState;
    if-eqz v13, :cond_d

    #@148
    invoke-virtual {v13}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@14b
    move-result v2

    #@14c
    if-nez v2, :cond_d

    #@14e
    .line 4624
    const/4 v2, 0x0

    #@14f
    iput-boolean v2, v13, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    #@151
    .line 4625
    const/4 v2, 0x0

    #@152
    iput-boolean v2, v13, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    #@154
    goto :goto_4

    #@155
    .line 4649
    .end local v8    # "changed":Z
    .end local v12    # "runningAppAnimation":Z
    .end local v13    # "swin":Lcom/android/server/wm/WindowState;
    .end local v16    # "windowsCount":I
    :cond_14
    move-object/from16 v0, p1

    #@157
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@159
    invoke-virtual {v2, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@15c
    move-result-object v2

    #@15d
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@15f
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@161
    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isWindowAnimating()Z

    #@164
    move-result v2

    #@165
    if-eqz v2, :cond_15

    #@167
    .line 4650
    const/4 v9, 0x1

    #@168
    .line 4648
    :cond_15
    add-int/lit8 v11, v11, -0x1

    #@16a
    goto :goto_5
.end method

.method setTransparentRegionWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Region;)V
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "region"    # Landroid/graphics/Region;

    #@0
    .prologue
    .line 2941
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 2943
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 2944
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 2945
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_0

    #@e
    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@10
    if-eqz v3, :cond_0

    #@12
    .line 2946
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@14
    invoke-virtual {v3, p3}, Lcom/android/server/wm/WindowStateAnimator;->setTransparentRegionHintLocked(Landroid/graphics/Region;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@17
    :cond_0
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@18
    .line 2950
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1b
    .line 2940
    return-void

    #@1c
    .line 2943
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@1d
    :try_start_3
    monitor-exit v4

    #@1e
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@1f
    .line 2949
    :catchall_1
    move-exception v3

    #@20
    .line 2950
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@23
    .line 2949
    throw v3
.end method

.method setWallpaperAnimLayerAdjustmentLocked(I)V
    .locals 6
    .param p1, "adj"    # I

    #@0
    .prologue
    .line 2135
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    #@2
    .line 2136
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@4
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@7
    move-result v4

    #@8
    add-int/lit8 v0, v4, -0x1

    #@a
    .local v0, "curTokenNdx":I
    :goto_0
    if-ltz v0, :cond_1

    #@c
    .line 2137
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@e
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v4

    #@12
    check-cast v4, Lcom/android/server/wm/WindowToken;

    #@14
    iget-object v3, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@16
    .line 2138
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    #@19
    move-result v4

    #@1a
    add-int/lit8 v2, v4, -0x1

    #@1c
    .local v2, "wallpaperNdx":I
    :goto_1
    if-ltz v2, :cond_0

    #@1e
    .line 2139
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@21
    move-result-object v1

    #@22
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@24
    .line 2140
    .local v1, "wallpaper":Lcom/android/server/wm/WindowState;
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@26
    iget v5, v1, Lcom/android/server/wm/WindowState;->mLayer:I

    #@28
    add-int/2addr v5, p1

    #@29
    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@2b
    .line 2138
    add-int/lit8 v2, v2, -0x1

    #@2d
    goto :goto_1

    #@2e
    .line 2136
    .end local v1    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@30
    goto :goto_0

    #@31
    .line 2133
    .end local v2    # "wallpaperNdx":I
    .end local v3    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    return-void
.end method

.method public setWindowOpaque(Landroid/os/IBinder;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    #@0
    .prologue
    .line 4518
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 4519
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 4517
    return-void

    #@8
    .line 4518
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method public setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    #@0
    .prologue
    .line 4524
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@3
    move-result-object v1

    #@4
    .line 4525
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_0

    #@6
    .line 4526
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@9
    move-result-object v0

    #@a
    .line 4527
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@c
    .line 4528
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@e
    invoke-virtual {v2, p2}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    #@11
    .line 4523
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    return-void
.end method

.method public setWindowWallpaperDisplayOffsetLocked(Lcom/android/server/wm/WindowState;II)V
    .locals 1
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "x"    # I
    .param p3, "y"    # I

    #@0
    .prologue
    .line 3018
    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    #@2
    if-ne v0, p2, :cond_0

    #@4
    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    #@6
    if-eq v0, p3, :cond_1

    #@8
    .line 3019
    :cond_0
    iput p2, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    #@a
    .line 3020
    iput p3, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    #@c
    .line 3021
    const/4 v0, 0x1

    #@d
    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V

    #@10
    .line 3017
    :cond_1
    return-void
.end method

.method public setWindowWallpaperPositionLocked(Lcom/android/server/wm/WindowState;FFFF)V
    .locals 1
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "x"    # F
    .param p3, "y"    # F
    .param p4, "xStep"    # F
    .param p5, "yStep"    # F

    #@0
    .prologue
    .line 2998
    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@2
    cmpl-float v0, v0, p2

    #@4
    if-nez v0, :cond_0

    #@6
    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@8
    cmpl-float v0, v0, p3

    #@a
    if-eqz v0, :cond_1

    #@c
    .line 2999
    :cond_0
    iput p2, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@e
    .line 3000
    iput p3, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@10
    .line 3001
    iput p4, p1, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@12
    .line 3002
    iput p5, p1, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@14
    .line 3003
    const/4 v0, 0x1

    #@15
    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V

    #@18
    .line 2997
    :cond_1
    return-void
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 3
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    #@0
    .prologue
    .line 5889
    const/4 v0, 0x0

    #@1
    .line 5890
    .local v0, "first":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 5899
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    if-nez v1, :cond_0

    #@8
    monitor-exit v2

    #@9
    .line 5900
    return-void

    #@a
    .line 5902
    :cond_0
    :try_start_1
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    if-nez v1, :cond_2

    #@e
    .line 5903
    if-nez p2, :cond_1

    #@10
    monitor-exit v2

    #@11
    .line 5904
    return-void

    #@12
    .line 5906
    :cond_1
    const/4 v0, 0x1

    #@13
    .line 5908
    :cond_2
    :try_start_2
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@15
    if-eqz v1, :cond_3

    #@17
    monitor-exit v2

    #@18
    .line 5909
    return-void

    #@19
    .line 5911
    :cond_3
    const/4 v1, 0x1

    #@1a
    :try_start_3
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@1c
    .line 5912
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1e
    invoke-interface {v1, p1, p2}, Landroid/view/WindowManagerPolicy;->showBootMessage(Ljava/lang/CharSequence;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@21
    monitor-exit v2

    #@22
    .line 5914
    if-eqz v0, :cond_4

    #@24
    .line 5915
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@27
    .line 5888
    :cond_4
    return-void

    #@28
    .line 5890
    :catchall_0
    move-exception v1

    #@29
    monitor-exit v2

    #@2a
    throw v1
.end method

.method public showCircularMask(Z)V
    .locals 8
    .param p1, "visible"    # Z

    #@0
    .prologue
    .line 5972
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 5976
    :try_start_0
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@6
    .line 5978
    if-eqz p1, :cond_2

    #@8
    .line 5980
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@a
    if-nez v0, :cond_0

    #@c
    .line 5981
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@e
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@11
    move-result-object v0

    #@12
    .line 5982
    const v1, 0x105008a

    #@15
    .line 5981
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    #@18
    move-result v4

    #@19
    .line 5983
    .local v4, "screenOffset":I
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1b
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1e
    move-result-object v0

    #@1f
    .line 5984
    const v1, 0x105008b

    #@22
    .line 5983
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    #@25
    move-result v5

    #@26
    .line 5986
    .local v5, "maskThickness":I
    new-instance v0, Lcom/android/server/wm/CircularDisplayMask;

    #@28
    .line 5987
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2b
    move-result-object v1

    #@2c
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@2f
    move-result-object v1

    #@30
    .line 5988
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@32
    .line 5989
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@34
    .line 5990
    const/16 v7, 0x7e2

    #@36
    .line 5989
    invoke-interface {v3, v7}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@39
    move-result v3

    #@3a
    mul-int/lit16 v3, v3, 0x2710

    #@3c
    add-int/lit8 v3, v3, 0xa

    #@3e
    .line 5986
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/CircularDisplayMask;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;III)V

    #@41
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@43
    .line 5993
    .end local v4    # "screenOffset":I
    .end local v5    # "maskThickness":I
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@45
    const/4 v1, 0x1

    #@46
    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@49
    .line 5999
    :cond_1
    :goto_0
    :try_start_2
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@4c
    monitor-exit v6

    #@4d
    .line 5971
    return-void

    #@4e
    .line 5994
    :cond_2
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@50
    if-eqz v0, :cond_1

    #@52
    .line 5995
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@54
    const/4 v1, 0x0

    #@55
    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V

    #@58
    .line 5996
    const/4 v0, 0x0

    #@59
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@5b
    goto :goto_0

    #@5c
    .line 5998
    :catchall_0
    move-exception v0

    #@5d
    .line 5999
    :try_start_4
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@60
    .line 5998
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@61
    .line 5972
    :catchall_1
    move-exception v0

    #@62
    monitor-exit v6

    #@63
    throw v0
.end method

.method public showEmulatorDisplayOverlay()V
    .locals 7

    #@0
    .prologue
    .line 6007
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 6011
    :try_start_0
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@6
    .line 6013
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@8
    if-nez v0, :cond_0

    #@a
    .line 6014
    new-instance v0, Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@c
    .line 6015
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@e
    .line 6016
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@11
    move-result-object v3

    #@12
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@15
    move-result-object v3

    #@16
    .line 6017
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@18
    .line 6018
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1a
    .line 6019
    const/16 v6, 0x7e2

    #@1c
    .line 6018
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@1f
    move-result v5

    #@20
    mul-int/lit16 v5, v5, 0x2710

    #@22
    add-int/lit8 v5, v5, 0xa

    #@24
    .line 6014
    invoke-direct {v0, v2, v3, v4, v5}, Lcom/android/server/wm/EmulatorDisplayOverlay;-><init>(Landroid/content/Context;Landroid/view/Display;Landroid/view/SurfaceSession;I)V

    #@27
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@29
    .line 6022
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@2b
    const/4 v2, 0x1

    #@2c
    invoke-virtual {v0, v2}, Lcom/android/server/wm/EmulatorDisplayOverlay;->setVisibility(Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    .line 6024
    :try_start_2
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@32
    monitor-exit v1

    #@33
    .line 6006
    return-void

    #@34
    .line 6023
    :catchall_0
    move-exception v0

    #@35
    .line 6024
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@38
    .line 6023
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@39
    .line 6007
    :catchall_1
    move-exception v0

    #@3a
    monitor-exit v1

    #@3b
    throw v0
.end method

.method public showEmulatorDisplayOverlayIfNeeded()V
    .locals 3

    #@0
    .prologue
    .line 5963
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@5
    move-result-object v0

    #@6
    .line 5964
    const v1, 0x1120080

    #@9
    .line 5963
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@c
    move-result v0

    #@d
    if-eqz v0, :cond_0

    #@f
    .line 5965
    const-string/jumbo v0, "ro.emulator.circular"

    #@12
    const/4 v1, 0x0

    #@13
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    #@16
    move-result v0

    #@17
    .line 5963
    if-eqz v0, :cond_0

    #@19
    .line 5966
    sget-object v0, Landroid/os/Build;->HARDWARE:Ljava/lang/String;

    #@1b
    const-string/jumbo v1, "goldfish"

    #@1e
    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@21
    move-result v0

    #@22
    .line 5963
    if-eqz v0, :cond_0

    #@24
    .line 5967
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@26
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@28
    const/16 v2, 0x24

    #@2a
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    #@2d
    move-result-object v1

    #@2e
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@31
    .line 5962
    :cond_0
    return-void
.end method

.method showGlobalActions()V
    .locals 1

    #@0
    .prologue
    .line 5492
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->showGlobalActions()V

    #@5
    .line 5491
    return-void
.end method

.method public showRecentApps()V
    .locals 1

    #@0
    .prologue
    .line 11092
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->showRecentApps()V

    #@5
    .line 11091
    return-void
.end method

.method public showStrictModeViolation(Z)V
    .locals 5
    .param p1, "on"    # Z

    #@0
    .prologue
    .line 6035
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@3
    move-result v0

    #@4
    .line 6036
    .local v0, "pid":I
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@6
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@8
    if-eqz p1, :cond_0

    #@a
    const/4 v1, 0x1

    #@b
    :goto_0
    const/16 v4, 0x19

    #@d
    invoke-virtual {v3, v4, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@10
    move-result-object v1

    #@11
    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@14
    .line 6034
    return-void

    #@15
    .line 6036
    :cond_0
    const/4 v1, 0x0

    #@16
    goto :goto_0
.end method

.method public shutdown(Z)V
    .locals 1
    .param p1, "confirm"    # Z

    #@0
    .prologue
    .line 5656
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Z)V

    #@5
    .line 5655
    return-void
.end method

.method public startAppFreezingScreen(Landroid/os/IBinder;I)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "configChanges"    # I

    #@0
    .prologue
    .line 4835
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4836
    const-string/jumbo v4, "setAppFreezingScreen()"

    #@6
    .line 4835
    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v3

    #@a
    if-nez v3, :cond_0

    #@c
    .line 4837
    new-instance v3, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v3

    #@15
    .line 4840
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v4

    #@18
    .line 4841
    if-nez p2, :cond_1

    #@1a
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1d
    move-result v3

    #@1e
    if-eqz v3, :cond_1

    #@20
    monitor-exit v4

    #@21
    .line 4843
    return-void

    #@22
    .line 4846
    :cond_1
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@25
    move-result-object v2

    #@26
    .line 4847
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_2

    #@28
    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@2a
    if-nez v3, :cond_3

    #@2c
    .line 4848
    :cond_2
    const-string/jumbo v3, "WindowManager"

    #@2f
    new-instance v5, Ljava/lang/StringBuilder;

    #@31
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@34
    const-string/jumbo v6, "Attempted to freeze screen with non-existing app token: "

    #@37
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3a
    move-result-object v5

    #@3b
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3e
    move-result-object v5

    #@3f
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@42
    move-result-object v5

    #@43
    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@46
    monitor-exit v4

    #@47
    .line 4849
    return-void

    #@48
    .line 4851
    :cond_3
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4b
    move-result-wide v0

    #@4c
    .line 4852
    .local v0, "origId":J
    invoke-direct {p0, v2}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@4f
    .line 4853
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@52
    monitor-exit v4

    #@53
    .line 4834
    return-void

    #@54
    .line 4840
    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v3

    #@55
    monitor-exit v4

    #@56
    throw v3
.end method

.method public startFreezingScreen(II)V
    .locals 7
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    #@0
    .prologue
    .line 5322
    const-string/jumbo v2, "android.permission.FREEZE_SCREEN"

    #@3
    .line 5323
    const-string/jumbo v3, "startFreezingScreen()"

    #@6
    .line 5322
    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 5324
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires FREEZE_SCREEN permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 5327
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 5328
    :try_start_0
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1a
    if-nez v2, :cond_1

    #@1c
    .line 5329
    const/4 v2, 0x1

    #@1d
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 5330
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@22
    move-result-wide v0

    #@23
    .line 5332
    .local v0, "origId":J
    const/4 v2, 0x0

    #@24
    :try_start_1
    invoke-direct {p0, v2, p1, p2}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@27
    .line 5333
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@29
    const/16 v4, 0x1e

    #@2b
    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@2e
    .line 5334
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@30
    const-wide/16 v4, 0x1388

    #@32
    const/16 v6, 0x1e

    #@34
    invoke-virtual {v2, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@37
    .line 5336
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@3a
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@3b
    .line 5321
    return-void

    #@3c
    .line 5335
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@3d
    .line 5336
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@40
    .line 5335
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@41
    .line 5327
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@42
    monitor-exit v3

    #@43
    throw v2
.end method

.method public startViewServer(I)Z
    .locals 4
    .param p1, "port"    # I

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 6806
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v1

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 6807
    return v3

    #@8
    .line 6810
    :cond_0
    const-string/jumbo v1, "android.permission.DUMP"

    #@b
    const-string/jumbo v2, "startViewServer"

    #@e
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v1

    #@12
    if-nez v1, :cond_1

    #@14
    .line 6811
    return v3

    #@15
    .line 6814
    :cond_1
    const/16 v1, 0x400

    #@17
    if-ge p1, v1, :cond_2

    #@19
    .line 6815
    return v3

    #@1a
    .line 6818
    :cond_2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1c
    if-eqz v1, :cond_4

    #@1e
    .line 6819
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@20
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    #@23
    move-result v1

    #@24
    if-nez v1, :cond_3

    #@26
    .line 6821
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@28
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    #@2b
    move-result v1

    #@2c
    return v1

    #@2d
    .line 6822
    :catch_0
    move-exception v0

    #@2e
    .line 6823
    .local v0, "e":Ljava/io/IOException;
    const-string/jumbo v1, "WindowManager"

    #@31
    const-string/jumbo v2, "View server did not start"

    #@34
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@37
    .line 6826
    .end local v0    # "e":Ljava/io/IOException;
    :cond_3
    return v3

    #@38
    .line 6830
    :cond_4
    :try_start_1
    new-instance v1, Lcom/android/server/wm/ViewServer;

    #@3a
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/ViewServer;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    #@3d
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@3f
    .line 6831
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@41
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    #@44
    move-result v1

    #@45
    return v1

    #@46
    .line 6832
    :catch_1
    move-exception v0

    #@47
    .line 6833
    .restart local v0    # "e":Ljava/io/IOException;
    const-string/jumbo v1, "WindowManager"

    #@4a
    const-string/jumbo v2, "View server did not start"

    #@4d
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@50
    .line 6835
    return v3
.end method

.method public statusBarVisibilityChanged(I)V
    .locals 2
    .param p1, "visibility"    # I

    #@0
    .prologue
    .line 10985
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.STATUS_BAR"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 10987
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Caller does not hold permission android.permission.STATUS_BAR"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 10991
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 10992
    :try_start_0
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@19
    .line 10993
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1b
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    #@1e
    move-result p1

    #@1f
    .line 10994
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@22
    monitor-exit v1

    #@23
    .line 10984
    return-void

    #@24
    .line 10991
    :catchall_0
    move-exception v0

    #@25
    monitor-exit v1

    #@26
    throw v0
.end method

.method public stopAppFreezingScreen(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "force"    # Z

    #@0
    .prologue
    .line 4859
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4860
    const-string/jumbo v4, "setAppFreezingScreen()"

    #@6
    .line 4859
    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v3

    #@a
    if-nez v3, :cond_0

    #@c
    .line 4861
    new-instance v3, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v3

    #@15
    .line 4864
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v4

    #@18
    .line 4865
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v2

    #@1c
    .line 4866
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_1

    #@1e
    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@20
    if-nez v3, :cond_2

    #@22
    :cond_1
    monitor-exit v4

    #@23
    .line 4867
    return-void

    #@24
    .line 4869
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@27
    move-result-wide v0

    #@28
    .line 4872
    .local v0, "origId":J
    const/4 v3, 0x1

    #@29
    invoke-virtual {p0, v2, v3, p2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@2c
    .line 4873
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v4

    #@30
    .line 4858
    return-void

    #@31
    .line 4864
    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v3

    #@32
    monitor-exit v4

    #@33
    throw v3
.end method

.method public stopFreezingScreen()V
    .locals 4

    #@0
    .prologue
    .line 5344
    const-string/jumbo v2, "android.permission.FREEZE_SCREEN"

    #@3
    .line 5345
    const-string/jumbo v3, "stopFreezingScreen()"

    #@6
    .line 5344
    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 5346
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires FREEZE_SCREEN permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 5349
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 5350
    :try_start_0
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1a
    if-eqz v2, :cond_1

    #@1c
    .line 5351
    const/4 v2, 0x0

    #@1d
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 5352
    const-string/jumbo v2, "client"

    #@22
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@24
    .line 5353
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@27
    move-result-wide v0

    #@28
    .line 5355
    .local v0, "origId":J
    :try_start_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2b
    .line 5357
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@2e
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@2f
    .line 5343
    return-void

    #@30
    .line 5356
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@31
    .line 5357
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@34
    .line 5356
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@35
    .line 5349
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@36
    monitor-exit v3

    #@37
    throw v2
.end method

.method public stopViewServer()Z
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 6853
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v0

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 6854
    return v2

    #@8
    .line 6857
    :cond_0
    const-string/jumbo v0, "android.permission.DUMP"

    #@b
    const-string/jumbo v1, "stopViewServer"

    #@e
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v0

    #@12
    if-nez v0, :cond_1

    #@14
    .line 6858
    return v2

    #@15
    .line 6861
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@17
    if-eqz v0, :cond_2

    #@19
    .line 6862
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1b
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->stop()Z

    #@1e
    move-result v0

    #@1f
    return v0

    #@20
    .line 6864
    :cond_2
    return v2
.end method

.method public switchKeyboardLayout(II)V
    .locals 1
    .param p1, "deviceId"    # I
    .param p2, "direction"    # I

    #@0
    .prologue
    .line 5650
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@2
    invoke-virtual {v0, p1, p2}, Lcom/android/server/input/InputManagerService;->switchKeyboardLayout(II)V

    #@5
    .line 5649
    return-void
.end method

.method public systemReady()V
    .locals 1

    #@0
    .prologue
    .line 7685
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemReady()V

    #@5
    .line 7684
    return-void
.end method

.method public thawRotation()V
    .locals 6

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 6453
    const-string/jumbo v2, "android.permission.SET_ORIENTATION"

    #@4
    .line 6454
    const-string/jumbo v3, "thawRotation()"

    #@7
    .line 6453
    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v2

    #@b
    if-nez v2, :cond_0

    #@d
    .line 6455
    new-instance v2, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v3, "Requires SET_ORIENTATION permission"

    #@12
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v2

    #@16
    .line 6460
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@19
    move-result-wide v0

    #@1a
    .line 6462
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1c
    const/4 v3, 0x0

    #@1d
    .line 6463
    const/16 v4, 0x309

    #@1f
    .line 6462
    invoke-interface {v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@22
    .line 6465
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@25
    .line 6468
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@28
    .line 6452
    return-void

    #@29
    .line 6464
    :catchall_0
    move-exception v2

    #@2a
    .line 6465
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2d
    .line 6464
    throw v2
.end method

.method public unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    #@0
    .prologue
    .line 5610
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->unregisterInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@5
    .line 5609
    return-void
.end method

.method unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V
    .locals 10
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "unfreezeSurfaceNow"    # Z
    .param p3, "force"    # Z

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v7, 0x0

    #@2
    .line 4763
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@4
    iget-boolean v5, v5, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@6
    if-eqz v5, :cond_7

    #@8
    .line 4766
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@a
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@d
    move-result v0

    #@e
    .line 4767
    .local v0, "N":I
    const/4 v3, 0x0

    #@f
    .line 4768
    .local v3, "unfrozeWindows":Z
    const/4 v2, 0x0

    #@10
    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_3

    #@12
    .line 4769
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@14
    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@17
    move-result-object v4

    #@18
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@1a
    .line 4770
    .local v4, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@1c
    if-eqz v5, :cond_1

    #@1e
    .line 4771
    iput-boolean v7, v4, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@20
    .line 4772
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@22
    if-eqz v5, :cond_0

    #@24
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@26
    if-eqz v5, :cond_2

    #@28
    .line 4778
    :cond_0
    :goto_1
    iput v7, v4, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@2a
    .line 4779
    const/4 v3, 0x1

    #@2b
    .line 4780
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@2e
    move-result-object v1

    #@2f
    .line 4781
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1

    #@31
    .line 4782
    iput-boolean v8, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@33
    .line 4768
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    add-int/lit8 v2, v2, 0x1

    #@35
    goto :goto_0

    #@36
    .line 4773
    :cond_2
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@38
    const/4 v6, 0x2

    #@39
    if-eq v5, v6, :cond_0

    #@3b
    .line 4775
    iput-boolean v8, v4, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@3d
    .line 4776
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@3f
    iput-boolean v7, v5, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    #@41
    goto :goto_1

    #@42
    .line 4786
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    if-nez p3, :cond_4

    #@44
    if-eqz v3, :cond_5

    #@46
    .line 4788
    :cond_4
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@48
    iput-boolean v7, v5, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@4a
    .line 4789
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@4c
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@4f
    move-result-wide v6

    #@50
    .line 4790
    iget-wide v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@52
    .line 4789
    sub-long/2addr v6, v8

    #@53
    long-to-int v6, v6

    #@54
    iput v6, v5, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    #@56
    .line 4791
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@58
    add-int/lit8 v5, v5, -0x1

    #@5a
    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@5c
    .line 4792
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@5e
    .line 4794
    :cond_5
    if-eqz p2, :cond_7

    #@60
    .line 4795
    if-eqz v3, :cond_6

    #@62
    .line 4796
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    #@65
    .line 4798
    :cond_6
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    #@68
    .line 4762
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v3    # "unfrozeWindows":Z
    :cond_7
    return-void
.end method

.method public updateAppOpsState()V
    .locals 14

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v9, 0x0

    #@2
    .line 2904
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v10

    #@5
    .line 2905
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@7
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    #@a
    move-result v2

    #@b
    .line 2906
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@c
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v2, :cond_4

    #@e
    .line 2907
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@10
    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@13
    move-result-object v7

    #@14
    check-cast v7, Lcom/android/server/wm/DisplayContent;

    #@16
    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@19
    move-result-object v6

    #@1a
    .line 2908
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@1d
    move-result v3

    #@1e
    .line 2909
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@1f
    .local v5, "winNdx":I
    :goto_1
    if-ge v5, v3, :cond_3

    #@21
    .line 2910
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@24
    move-result-object v4

    #@25
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@27
    .line 2911
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iget v7, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@29
    const/4 v11, -0x1

    #@2a
    if-eq v7, v11, :cond_0

    #@2c
    .line 2912
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@2e
    iget v11, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@30
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@33
    move-result v12

    #@34
    .line 2913
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@37
    move-result-object v13

    #@38
    .line 2912
    invoke-virtual {v7, v11, v12, v13}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    #@3b
    move-result v1

    #@3c
    .line 2914
    .local v1, "mode":I
    if-eqz v1, :cond_1

    #@3e
    .line 2915
    const/4 v7, 0x3

    #@3f
    if-ne v1, v7, :cond_2

    #@41
    move v7, v8

    #@42
    .line 2914
    :goto_2
    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@45
    .line 2909
    .end local v1    # "mode":I
    :cond_0
    add-int/lit8 v5, v5, 0x1

    #@47
    goto :goto_1

    #@48
    .restart local v1    # "mode":I
    :cond_1
    move v7, v8

    #@49
    .line 2914
    goto :goto_2

    #@4a
    :cond_2
    move v7, v9

    #@4b
    .line 2915
    goto :goto_2

    #@4c
    .line 2906
    .end local v1    # "mode":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    add-int/lit8 v0, v0, 0x1

    #@4e
    goto :goto_0

    #@4f
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    monitor-exit v10

    #@50
    .line 2903
    return-void

    #@51
    .line 2904
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_0
    move-exception v7

    #@52
    monitor-exit v10

    #@53
    throw v7
.end method

.method public updateCircularDisplayMaskIfNeeded()V
    .locals 7

    #@0
    .prologue
    .line 5943
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@5
    move-result-object v4

    #@6
    invoke-virtual {v4}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    #@9
    move-result-object v4

    #@a
    invoke-virtual {v4}, Landroid/content/res/Configuration;->isScreenRound()Z

    #@d
    move-result v4

    #@e
    if-eqz v4, :cond_0

    #@10
    .line 5944
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@12
    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@15
    move-result-object v4

    #@16
    .line 5945
    const v5, 0x112007f

    #@19
    .line 5944
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1c
    move-result v4

    #@1d
    .line 5943
    if-eqz v4, :cond_0

    #@1f
    .line 5947
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@21
    monitor-enter v4

    #@22
    .line 5948
    :try_start_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@24
    .local v0, "currentUserId":I
    monitor-exit v4

    #@25
    .line 5953
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@27
    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@2a
    move-result-object v4

    #@2b
    .line 5954
    const-string/jumbo v5, "accessibility_display_inversion_enabled"

    #@2e
    const/4 v6, 0x0

    #@2f
    .line 5953
    invoke-static {v4, v5, v6, v0}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    #@32
    move-result v1

    #@33
    .line 5955
    .local v1, "inversionState":I
    const/4 v4, 0x1

    #@34
    if-ne v1, v4, :cond_1

    #@36
    const/4 v3, 0x0

    #@37
    .line 5956
    .local v3, "showMask":I
    :goto_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@39
    const/16 v5, 0x23

    #@3b
    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    #@3e
    move-result-object v2

    #@3f
    .line 5957
    .local v2, "m":Landroid/os/Message;
    iput v3, v2, Landroid/os/Message;->arg1:I

    #@41
    .line 5958
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@43
    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@46
    .line 5941
    .end local v0    # "currentUserId":I
    .end local v1    # "inversionState":I
    .end local v2    # "m":Landroid/os/Message;
    .end local v3    # "showMask":I
    :cond_0
    return-void

    #@47
    .line 5947
    :catchall_0
    move-exception v5

    #@48
    monitor-exit v4

    #@49
    throw v5

    #@4a
    .line 5955
    .restart local v0    # "currentUserId":I
    .restart local v1    # "inversionState":I
    :cond_1
    const/4 v3, 0x1

    #@4b
    .restart local v3    # "showMask":I
    goto :goto_0
.end method

.method updateDisplayAndOrientationLocked()Landroid/view/DisplayInfo;
    .locals 15

    #@0
    .prologue
    const v13, 0x3fa66666    # 1.3f

    #@3
    .line 7286
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v3

    #@7
    .line 7289
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@9
    const/4 v12, 0x1

    #@a
    if-eq v11, v12, :cond_1

    #@c
    .line 7290
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@e
    const/4 v12, 0x3

    #@f
    if-ne v11, v12, :cond_2

    #@11
    const/4 v10, 0x1

    #@12
    .line 7291
    .local v10, "rotated":Z
    :goto_0
    if-eqz v10, :cond_3

    #@14
    .line 7292
    iget v9, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@16
    .line 7293
    .local v9, "realdw":I
    :goto_1
    if-eqz v10, :cond_4

    #@18
    .line 7294
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@1a
    .line 7295
    .local v8, "realdh":I
    :goto_2
    move v5, v9

    #@1b
    .line 7296
    .local v5, "dw":I
    move v2, v8

    #@1c
    .line 7298
    .local v2, "dh":I
    iget-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@1e
    if-eqz v11, :cond_0

    #@20
    .line 7299
    if-le v9, v8, :cond_5

    #@22
    .line 7301
    int-to-float v11, v8

    #@23
    div-float/2addr v11, v13

    #@24
    float-to-int v7, v11

    #@25
    .line 7302
    .local v7, "maxw":I
    if-ge v7, v9, :cond_0

    #@27
    .line 7303
    move v5, v7

    #@28
    .line 7315
    .end local v7    # "maxw":I
    :cond_0
    :goto_3
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2a
    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2c
    invoke-interface {v11, v5, v2, v12}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    #@2f
    move-result v1

    #@30
    .line 7316
    .local v1, "appWidth":I
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@32
    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@34
    invoke-interface {v11, v5, v2, v12}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    #@37
    move-result v0

    #@38
    .line 7317
    .local v0, "appHeight":I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@3b
    move-result-object v4

    #@3c
    .line 7318
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v12, v3, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    #@3e
    monitor-enter v12

    #@3f
    .line 7319
    :try_start_0
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@41
    iput v11, v4, Landroid/view/DisplayInfo;->rotation:I

    #@43
    .line 7320
    iput v5, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    #@45
    .line 7321
    iput v2, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    #@47
    .line 7322
    iget v11, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@49
    iput v11, v4, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    #@4b
    .line 7323
    iput v1, v4, Landroid/view/DisplayInfo;->appWidth:I

    #@4d
    .line 7324
    iput v0, v4, Landroid/view/DisplayInfo;->appHeight:I

    #@4f
    .line 7325
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@51
    .line 7326
    sget-object v13, Landroid/content/res/CompatibilityInfo;->DEFAULT_COMPATIBILITY_INFO:Landroid/content/res/CompatibilityInfo;

    #@53
    const/4 v14, 0x0

    #@54
    .line 7325
    invoke-virtual {v4, v11, v13, v14}, Landroid/view/DisplayInfo;->getLogicalMetrics(Landroid/util/DisplayMetrics;Landroid/content/res/CompatibilityInfo;Landroid/content/res/Configuration;)V

    #@57
    .line 7327
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@59
    invoke-virtual {v4, v11}, Landroid/view/DisplayInfo;->getAppMetrics(Landroid/util/DisplayMetrics;)V

    #@5c
    .line 7328
    iget-boolean v11, v3, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    #@5e
    if-eqz v11, :cond_6

    #@60
    .line 7329
    iget v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@62
    const/high16 v13, 0x40000000    # 2.0f

    #@64
    or-int/2addr v11, v13

    #@65
    iput v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@67
    .line 7334
    :goto_4
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@69
    .line 7335
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@6c
    move-result v13

    #@6d
    .line 7334
    invoke-virtual {v11, v13, v4}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    #@70
    .line 7337
    iget-object v11, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayRect:Landroid/graphics/Rect;

    #@72
    const/4 v13, 0x0

    #@73
    const/4 v14, 0x0

    #@74
    invoke-virtual {v11, v13, v14, v5, v2}, Landroid/graphics/Rect;->set(IIII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@77
    monitor-exit v12

    #@78
    .line 7343
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@7a
    .line 7344
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    #@7c
    .line 7343
    invoke-static {v11, v12}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    #@7f
    move-result v11

    #@80
    iput v11, p0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@82
    .line 7345
    return-object v4

    #@83
    .line 7289
    .end local v0    # "appHeight":I
    .end local v1    # "appWidth":I
    .end local v2    # "dh":I
    .end local v4    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v5    # "dw":I
    .end local v8    # "realdh":I
    .end local v9    # "realdw":I
    .end local v10    # "rotated":Z
    :cond_1
    const/4 v10, 0x1

    #@84
    .restart local v10    # "rotated":Z
    goto :goto_0

    #@85
    .line 7290
    .end local v10    # "rotated":Z
    :cond_2
    const/4 v10, 0x0

    #@86
    .restart local v10    # "rotated":Z
    goto :goto_0

    #@87
    .line 7292
    :cond_3
    iget v9, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@89
    .restart local v9    # "realdw":I
    goto :goto_1

    #@8a
    .line 7294
    :cond_4
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@8c
    .restart local v8    # "realdh":I
    goto :goto_2

    #@8d
    .line 7307
    .restart local v2    # "dh":I
    .restart local v5    # "dw":I
    :cond_5
    int-to-float v11, v9

    #@8e
    div-float/2addr v11, v13

    #@8f
    float-to-int v6, v11

    #@90
    .line 7308
    .local v6, "maxh":I
    if-ge v6, v8, :cond_0

    #@92
    .line 7309
    move v2, v6

    #@93
    goto :goto_3

    #@94
    .line 7331
    .end local v6    # "maxh":I
    .restart local v0    # "appHeight":I
    .restart local v1    # "appWidth":I
    .restart local v4    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_6
    :try_start_1
    iget v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@96
    const v13, -0x40000001    # -1.9999999f

    #@99
    and-int/2addr v11, v13

    #@9a
    iput v11, v4, Landroid/view/DisplayInfo;->flags:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@9c
    goto :goto_4

    #@9d
    .line 7318
    :catchall_0
    move-exception v11

    #@9e
    monitor-exit v12

    #@9f
    throw v11
.end method

.method public updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .locals 5
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 3936
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3937
    const-string/jumbo v4, "updateOrientationFromAppTokens()"

    #@6
    .line 3936
    invoke-virtual {p0, v1, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3938
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3941
    :cond_0
    const/4 v0, 0x0

    #@16
    .line 3942
    .local v0, "config":Landroid/content/res/Configuration;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@19
    move-result-wide v2

    #@1a
    .line 3944
    .local v2, "ident":J
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1c
    monitor-enter v1

    #@1d
    .line 3945
    :try_start_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@20
    move-result-object v0

    #@21
    .local v0, "config":Landroid/content/res/Configuration;
    monitor-exit v1

    #@22
    .line 3949
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@25
    .line 3950
    return-object v0

    #@26
    .line 3944
    .local v0, "config":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v4

    #@27
    monitor-exit v1

    #@28
    throw v4
.end method

.method updateOrientationFromAppTokensLocked(Z)Z
    .locals 4
    .param p1, "inTransaction"    # Z

    #@0
    .prologue
    .line 4010
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 4012
    .local v0, "ident":J
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getOrientationLocked()I

    #@7
    move-result v2

    #@8
    .line 4013
    .local v2, "req":I
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@a
    if-eq v2, v3, :cond_0

    #@c
    .line 4014
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@e
    .line 4017
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@10
    invoke-interface {v3, v2}, Landroid/view/WindowManagerPolicy;->setCurrentOrientationLw(I)V

    #@13
    .line 4018
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    move-result v3

    #@17
    if-eqz v3, :cond_0

    #@19
    .line 4020
    const/4 v3, 0x1

    #@1a
    .line 4026
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1d
    .line 4020
    return v3

    #@1e
    .line 4024
    :cond_0
    const/4 v3, 0x0

    #@1f
    .line 4026
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@22
    .line 4024
    return v3

    #@23
    .line 4025
    .end local v2    # "req":I
    :catchall_0
    move-exception v3

    #@24
    .line 4026
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@27
    .line 4025
    throw v3
.end method

.method public updateRotation(ZZ)V
    .locals 0
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    #@0
    .prologue
    .line 6480
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@3
    .line 6479
    return-void
.end method

.method public updateRotationUnchecked(ZZ)V
    .locals 6
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    #@0
    .prologue
    .line 6515
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 6517
    .local v2, "origId":J
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4

    #@7
    .line 6518
    const/4 v1, 0x0

    #@8
    :try_start_0
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@b
    move-result v0

    #@c
    .line 6519
    .local v0, "changed":Z
    if-eqz v0, :cond_0

    #@e
    if-eqz p2, :cond_1

    #@10
    .line 6520
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@13
    move-result-object v1

    #@14
    const/4 v5, 0x1

    #@15
    iput-boolean v5, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@17
    .line 6521
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1a
    :cond_1
    monitor-exit v4

    #@1b
    .line 6525
    if-nez v0, :cond_2

    #@1d
    if-eqz p1, :cond_3

    #@1f
    .line 6526
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@22
    .line 6529
    :cond_3
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@25
    .line 6511
    return-void

    #@26
    .line 6517
    .end local v0    # "changed":Z
    :catchall_0
    move-exception v1

    #@27
    monitor-exit v4

    #@28
    throw v1
.end method

.method public updateRotationUncheckedLocked(Z)Z
    .locals 18
    .param p1, "inTransaction"    # Z

    #@0
    .prologue
    .line 6540
    move-object/from16 v0, p0

    #@2
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@4
    if-lez v5, :cond_0

    #@6
    .line 6544
    const/4 v5, 0x0

    #@7
    return v5

    #@8
    .line 6548
    :cond_0
    move-object/from16 v0, p0

    #@a
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@c
    const/4 v6, 0x0

    #@d
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@10
    move-result-object v3

    #@11
    .line 6549
    .local v3, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v3, :cond_1

    #@13
    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    #@16
    move-result v5

    #@17
    if-eqz v5, :cond_1

    #@19
    .line 6554
    const/4 v5, 0x0

    #@1a
    return v5

    #@1b
    .line 6557
    :cond_1
    move-object/from16 v0, p0

    #@1d
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@1f
    if-nez v5, :cond_2

    #@21
    .line 6560
    const/4 v5, 0x0

    #@22
    return v5

    #@23
    .line 6568
    :cond_2
    move-object/from16 v0, p0

    #@25
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@27
    move-object/from16 v0, p0

    #@29
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@2b
    move-object/from16 v0, p0

    #@2d
    iget v7, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2f
    invoke-interface {v5, v6, v7}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(II)I

    #@32
    move-result v4

    #@33
    .line 6569
    .local v4, "rotation":I
    move-object/from16 v0, p0

    #@35
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@37
    .line 6570
    move-object/from16 v0, p0

    #@39
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@3b
    .line 6569
    invoke-interface {v5, v6, v4}, Landroid/view/WindowManagerPolicy;->rotationHasCompatibleMetricsLw(II)Z

    #@3e
    move-result v5

    #@3f
    if-eqz v5, :cond_3

    #@41
    const/4 v2, 0x0

    #@42
    .line 6579
    .local v2, "altOrientation":Z
    :goto_0
    move-object/from16 v0, p0

    #@44
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@46
    if-ne v5, v4, :cond_4

    #@48
    move-object/from16 v0, p0

    #@4a
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@4c
    if-ne v5, v2, :cond_4

    #@4e
    .line 6581
    const/4 v5, 0x0

    #@4f
    return v5

    #@50
    .line 6569
    .end local v2    # "altOrientation":Z
    :cond_3
    const/4 v2, 0x1

    #@51
    .restart local v2    # "altOrientation":Z
    goto :goto_0

    #@52
    .line 6591
    :cond_4
    move-object/from16 v0, p0

    #@54
    iput v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@56
    .line 6592
    move-object/from16 v0, p0

    #@58
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@5a
    .line 6593
    move-object/from16 v0, p0

    #@5c
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5e
    move-object/from16 v0, p0

    #@60
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@62
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->setRotationLw(I)V

    #@65
    .line 6595
    const/4 v5, 0x1

    #@66
    move-object/from16 v0, p0

    #@68
    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@6a
    .line 6596
    move-object/from16 v0, p0

    #@6c
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@6e
    const/16 v6, 0xb

    #@70
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@73
    .line 6597
    move-object/from16 v0, p0

    #@75
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@77
    const-wide/16 v6, 0x7d0

    #@79
    const/16 v8, 0xb

    #@7b
    invoke-virtual {v5, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@7e
    .line 6598
    const/4 v5, 0x1

    #@7f
    move-object/from16 v0, p0

    #@81
    iput-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@83
    .line 6599
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@86
    move-result-object v12

    #@87
    .line 6600
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v5, 0x1

    #@88
    iput-boolean v5, v12, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@8a
    .line 6601
    const/4 v5, 0x2

    #@8b
    new-array v11, v5, [I

    #@8d
    .line 6602
    .local v11, "anim":[I
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@90
    move-result v5

    #@91
    if-eqz v5, :cond_9

    #@93
    .line 6603
    const/4 v5, 0x0

    #@94
    const/4 v6, 0x1

    #@95
    aput v5, v11, v6

    #@97
    const/4 v5, 0x0

    #@98
    const/4 v6, 0x0

    #@99
    aput v5, v11, v6

    #@9b
    .line 6607
    :goto_1
    const/4 v5, 0x0

    #@9c
    aget v5, v11, v5

    #@9e
    const/4 v6, 0x1

    #@9f
    aget v6, v11, v6

    #@a1
    move-object/from16 v0, p0

    #@a3
    move/from16 v1, p1

    #@a5
    invoke-direct {v0, v1, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@a8
    .line 6610
    move-object/from16 v0, p0

    #@aa
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@ac
    const/4 v6, 0x0

    #@ad
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@b0
    move-result-object v3

    #@b1
    .line 6617
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->updateDisplayAndOrientationLocked()Landroid/view/DisplayInfo;

    #@b4
    .line 6619
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@b7
    move-result-object v13

    #@b8
    .line 6620
    .local v13, "displayInfo":Landroid/view/DisplayInfo;
    if-nez p1, :cond_5

    #@ba
    .line 6624
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@bd
    .line 6629
    :cond_5
    if-eqz v3, :cond_6

    #@bf
    .line 6630
    :try_start_0
    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    #@c2
    move-result v5

    #@c3
    .line 6629
    if-eqz v5, :cond_6

    #@c5
    .line 6632
    move-object/from16 v0, p0

    #@c7
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@c9
    .line 6633
    const-wide/16 v6, 0x2710

    #@cb
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    #@ce
    move-result v8

    #@cf
    .line 6634
    iget v9, v13, Landroid/view/DisplayInfo;->logicalWidth:I

    #@d1
    iget v10, v13, Landroid/view/DisplayInfo;->logicalHeight:I

    #@d3
    .line 6631
    invoke-virtual/range {v3 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->setRotationInTransaction(ILandroid/view/SurfaceSession;JFII)Z

    #@d6
    move-result v5

    #@d7
    if-eqz v5, :cond_6

    #@d9
    .line 6635
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    #@dc
    .line 6639
    :cond_6
    move-object/from16 v0, p0

    #@de
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@e0
    invoke-virtual {v5}, Landroid/hardware/display/DisplayManagerInternal;->performTraversalInTransactionFromWindowManager()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@e3
    .line 6641
    if-nez p1, :cond_7

    #@e5
    .line 6642
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@e8
    .line 6649
    :cond_7
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@eb
    move-result-object v17

    #@ec
    .line 6650
    .local v17, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    #@ef
    move-result v5

    #@f0
    add-int/lit8 v15, v5, -0x1

    #@f2
    .local v15, "i":I
    :goto_2
    if-ltz v15, :cond_b

    #@f4
    .line 6651
    move-object/from16 v0, v17

    #@f6
    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@f9
    move-result-object v16

    #@fa
    check-cast v16, Lcom/android/server/wm/WindowState;

    #@fc
    .line 6652
    .local v16, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v16

    #@fe
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@100
    if-eqz v5, :cond_8

    #@102
    .line 6654
    const/4 v5, 0x1

    #@103
    move-object/from16 v0, v16

    #@105
    iput-boolean v5, v0, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@107
    .line 6655
    move-object/from16 v0, p0

    #@109
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    #@10b
    const/4 v6, 0x0

    #@10c
    iput-boolean v6, v5, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    #@10e
    .line 6657
    :cond_8
    const/4 v5, 0x0

    #@10f
    move-object/from16 v0, v16

    #@111
    iput v5, v0, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@113
    .line 6650
    add-int/lit8 v15, v15, -0x1

    #@115
    goto :goto_2

    #@116
    .line 6605
    .end local v13    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "i":I
    .end local v16    # "w":Lcom/android/server/wm/WindowState;
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_9
    move-object/from16 v0, p0

    #@118
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@11a
    invoke-interface {v5, v11}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    #@11d
    goto/16 :goto_1

    #@11f
    .line 6640
    .restart local v13    # "displayInfo":Landroid/view/DisplayInfo;
    :catchall_0
    move-exception v5

    #@120
    .line 6641
    if-nez p1, :cond_a

    #@122
    .line 6642
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@125
    .line 6640
    :cond_a
    throw v5

    #@126
    .line 6660
    .restart local v15    # "i":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_b
    move-object/from16 v0, p0

    #@128
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@12a
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@12d
    move-result v5

    #@12e
    add-int/lit8 v15, v5, -0x1

    #@130
    :goto_3
    if-ltz v15, :cond_c

    #@132
    .line 6662
    :try_start_1
    move-object/from16 v0, p0

    #@134
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@136
    invoke-virtual {v5, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@139
    move-result-object v5

    #@13a
    check-cast v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@13c
    iget-object v5, v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@13e
    invoke-interface {v5, v4}, Landroid/view/IRotationWatcher;->onRotationChanged(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@141
    .line 6660
    :goto_4
    add-int/lit8 v15, v15, -0x1

    #@143
    goto :goto_3

    #@144
    .line 6670
    :cond_c
    if-nez v3, :cond_d

    #@146
    move-object/from16 v0, p0

    #@148
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@14a
    if-eqz v5, :cond_d

    #@14c
    .line 6671
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@14f
    move-result v5

    #@150
    if-nez v5, :cond_d

    #@152
    .line 6672
    move-object/from16 v0, p0

    #@154
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@156
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@159
    move-result-object v6

    #@15a
    invoke-virtual {v5, v6, v4}, Lcom/android/server/wm/AccessibilityController;->onRotationChangedLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@15d
    .line 6676
    :cond_d
    const/4 v5, 0x1

    #@15e
    return v5

    #@15f
    .line 6663
    :catch_0
    move-exception v14

    #@160
    .local v14, "e":Landroid/os/RemoteException;
    goto :goto_4
.end method

.method public updateShowImeWithHardKeyboard()V
    .locals 6

    #@0
    .prologue
    .line 7449
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 7451
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@5
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@8
    move-result-object v1

    #@9
    const-string/jumbo v3, "show_ime_with_hard_keyboard"

    #@c
    .line 7452
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@e
    .line 7451
    const/4 v5, 0x0

    #@f
    .line 7450
    invoke-static {v1, v3, v5, v4}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    #@12
    move-result v1

    #@13
    .line 7452
    const/4 v3, 0x1

    #@14
    .line 7450
    if-ne v1, v3, :cond_1

    #@16
    const/4 v0, 0x1

    #@17
    .line 7453
    .local v0, "showImeWithHardKeyboard":Z
    :goto_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowImeWithHardKeyboard:Z

    #@19
    if-eq v1, v0, :cond_0

    #@1b
    .line 7454
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowImeWithHardKeyboard:Z

    #@1d
    .line 7455
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1f
    const/16 v3, 0x12

    #@21
    invoke-virtual {v1, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@24
    :cond_0
    monitor-exit v2

    #@25
    .line 7448
    return-void

    #@26
    .line 7450
    .end local v0    # "showImeWithHardKeyboard":Z
    :cond_1
    const/4 v0, 0x0

    #@27
    .restart local v0    # "showImeWithHardKeyboard":Z
    goto :goto_0

    #@28
    .line 7449
    .end local v0    # "showImeWithHardKeyboard":Z
    :catchall_0
    move-exception v1

    #@29
    monitor-exit v2

    #@2a
    throw v1
.end method

.method updateStatusBarVisibilityLocked(I)V
    .locals 11
    .param p1, "visibility"    # I

    #@0
    .prologue
    .line 11000
    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@2
    if-ne v9, p1, :cond_0

    #@4
    .line 11001
    return-void

    #@5
    .line 11003
    :cond_0
    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@7
    xor-int/2addr v9, p1

    #@8
    and-int/lit8 v9, v9, 0x7

    #@a
    .line 11008
    not-int v10, p1

    #@b
    .line 11003
    and-int v4, v9, v10

    #@d
    .line 11010
    .local v4, "globalDiff":I
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@f
    .line 11011
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@11
    invoke-virtual {v9, p1}, Lcom/android/server/input/InputManagerService;->setSystemUiVisibility(I)V

    #@14
    .line 11012
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@17
    move-result-object v7

    #@18
    .line 11013
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@1b
    move-result v0

    #@1c
    .line 11014
    .local v0, "N":I
    const/4 v5, 0x0

    #@1d
    .local v5, "i":I
    :goto_0
    if-ge v5, v0, :cond_4

    #@1f
    .line 11015
    invoke-virtual {v7, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@22
    move-result-object v8

    #@23
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@25
    .line 11017
    .local v8, "ws":Lcom/android/server/wm/WindowState;
    :try_start_0
    iget v1, v8, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@27
    .line 11018
    .local v1, "curValue":I
    xor-int v9, v1, p1

    #@29
    and-int v2, v9, v4

    #@2b
    .line 11019
    .local v2, "diff":I
    not-int v9, v2

    #@2c
    and-int/2addr v9, v1

    #@2d
    and-int v10, p1, v2

    #@2f
    or-int v6, v9, v10

    #@31
    .line 11020
    .local v6, "newValue":I
    if-eq v6, v1, :cond_1

    #@33
    .line 11021
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@35
    add-int/lit8 v9, v9, 0x1

    #@37
    iput v9, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@39
    .line 11022
    iput v6, v8, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@3b
    .line 11024
    :cond_1
    if-ne v6, v1, :cond_2

    #@3d
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@3f
    iget-boolean v9, v9, Landroid/view/WindowManager$LayoutParams;->hasSystemUiListeners:Z

    #@41
    if-eqz v9, :cond_3

    #@43
    .line 11025
    :cond_2
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@45
    iget v10, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@47
    invoke-interface {v9, v10, p1, v6, v2}, Landroid/view/IWindow;->dispatchSystemUiVisibilityChanged(IIII)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@4a
    .line 11014
    .end local v1    # "curValue":I
    .end local v2    # "diff":I
    .end local v6    # "newValue":I
    :cond_3
    :goto_1
    add-int/lit8 v5, v5, 0x1

    #@4c
    goto :goto_0

    #@4d
    .line 10999
    .end local v8    # "ws":Lcom/android/server/wm/WindowState;
    :cond_4
    return-void

    #@4e
    .line 11028
    .restart local v8    # "ws":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v3

    #@4f
    .local v3, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method updateTokenInPlaceLocked(Lcom/android/server/wm/AppWindowToken;I)V
    .locals 6
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "transit"    # I

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    const/4 v4, 0x0

    #@2
    .line 4658
    const/4 v0, -0x1

    #@3
    if-eq p2, v0, :cond_1

    #@5
    .line 4659
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@7
    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@9
    sget-object v1, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    #@b
    if-ne v0, v1, :cond_0

    #@d
    .line 4660
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@f
    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@11
    :cond_0
    move-object v0, p0

    #@12
    move-object v1, p1

    #@13
    move v3, p2

    #@14
    move v5, v4

    #@15
    .line 4662
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    #@18
    .line 4657
    :cond_1
    return-void
.end method

.method updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 13
    .param p1, "changingTarget"    # Lcom/android/server/wm/WindowState;
    .param p2, "sync"    # Z

    #@0
    .prologue
    const/high16 v12, -0x80000000

    #@2
    const/4 v11, 0x0

    #@3
    .line 2241
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v2

    #@7
    .line 2242
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v2, :cond_0

    #@9
    .line 2243
    return-void

    #@a
    .line 2245
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@d
    move-result-object v3

    #@e
    .line 2246
    .local v3, "displayInfo":Landroid/view/DisplayInfo;
    iget v4, v3, Landroid/view/DisplayInfo;->logicalWidth:I

    #@10
    .line 2247
    .local v4, "dw":I
    iget v1, v3, Landroid/view/DisplayInfo;->logicalHeight:I

    #@12
    .line 2249
    .local v1, "dh":I
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    #@14
    .line 2250
    .local v5, "target":Lcom/android/server/wm/WindowState;
    if-eqz v5, :cond_6

    #@16
    .line 2251
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@18
    cmpl-float v10, v10, v11

    #@1a
    if-ltz v10, :cond_8

    #@1c
    .line 2252
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@1e
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    #@20
    .line 2256
    :cond_1
    :goto_0
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@22
    cmpl-float v10, v10, v11

    #@24
    if-ltz v10, :cond_9

    #@26
    .line 2257
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@28
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    #@2a
    .line 2261
    :cond_2
    :goto_1
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    #@2c
    if-eq v10, v12, :cond_a

    #@2e
    .line 2262
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    #@30
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetX:I

    #@32
    .line 2266
    :cond_3
    :goto_2
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    #@34
    if-eq v10, v12, :cond_b

    #@36
    .line 2267
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    #@38
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetY:I

    #@3a
    .line 2271
    :cond_4
    :goto_3
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@3c
    cmpl-float v10, v10, v11

    #@3e
    if-ltz v10, :cond_c

    #@40
    .line 2272
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@42
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    #@44
    .line 2276
    :cond_5
    :goto_4
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@46
    cmpl-float v10, v10, v11

    #@48
    if-ltz v10, :cond_d

    #@4a
    .line 2277
    iget v10, v5, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@4c
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    #@4e
    .line 2283
    :cond_6
    :goto_5
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@50
    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    #@53
    move-result v10

    #@54
    add-int/lit8 v0, v10, -0x1

    #@56
    .end local p2    # "sync":Z
    .local v0, "curTokenNdx":I
    :goto_6
    if-ltz v0, :cond_f

    #@58
    .line 2284
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    #@5a
    invoke-virtual {v10, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@5d
    move-result-object v10

    #@5e
    check-cast v10, Lcom/android/server/wm/WindowToken;

    #@60
    iget-object v9, v10, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@62
    .line 2285
    .local v9, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@65
    move-result v10

    #@66
    add-int/lit8 v7, v10, -0x1

    #@68
    .local v7, "wallpaperNdx":I
    :goto_7
    if-ltz v7, :cond_e

    #@6a
    .line 2286
    invoke-virtual {v9, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@6d
    move-result-object v6

    #@6e
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@70
    .line 2287
    .local v6, "wallpaper":Lcom/android/server/wm/WindowState;
    invoke-virtual {p0, v6, v4, v1, p2}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    #@73
    move-result v10

    #@74
    if-eqz v10, :cond_7

    #@76
    .line 2288
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@78
    .line 2289
    .local v8, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->computeShownFrameLocked()V

    #@7b
    .line 2292
    iget-object v10, v6, Lcom/android/server/wm/WindowState;->mShownFrame:Landroid/graphics/RectF;

    #@7d
    invoke-virtual {v8, v10}, Lcom/android/server/wm/WindowStateAnimator;->setWallpaperOffset(Landroid/graphics/RectF;)V

    #@80
    .line 2294
    const/4 p2, 0x0

    #@81
    .line 2285
    .end local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_7
    add-int/lit8 v7, v7, -0x1

    #@83
    goto :goto_7

    #@84
    .line 2253
    .end local v0    # "curTokenNdx":I
    .end local v6    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v7    # "wallpaperNdx":I
    .end local v9    # "windows":Lcom/android/server/wm/WindowList;
    .restart local p2    # "sync":Z
    :cond_8
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@86
    cmpl-float v10, v10, v11

    #@88
    if-ltz v10, :cond_1

    #@8a
    .line 2254
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@8c
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    #@8e
    goto :goto_0

    #@8f
    .line 2258
    :cond_9
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@91
    cmpl-float v10, v10, v11

    #@93
    if-ltz v10, :cond_2

    #@95
    .line 2259
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@97
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    #@99
    goto :goto_1

    #@9a
    .line 2263
    :cond_a
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    #@9c
    if-eq v10, v12, :cond_3

    #@9e
    .line 2264
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    #@a0
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetX:I

    #@a2
    goto :goto_2

    #@a3
    .line 2268
    :cond_b
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    #@a5
    if-eq v10, v12, :cond_4

    #@a7
    .line 2269
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    #@a9
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetY:I

    #@ab
    goto :goto_3

    #@ac
    .line 2273
    :cond_c
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@ae
    cmpl-float v10, v10, v11

    #@b0
    if-ltz v10, :cond_5

    #@b2
    .line 2274
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@b4
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    #@b6
    goto :goto_4

    #@b7
    .line 2278
    :cond_d
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@b9
    cmpl-float v10, v10, v11

    #@bb
    if-ltz v10, :cond_6

    #@bd
    .line 2279
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@bf
    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    #@c1
    goto :goto_5

    #@c2
    .line 2283
    .end local p2    # "sync":Z
    .restart local v0    # "curTokenNdx":I
    .restart local v7    # "wallpaperNdx":I
    .restart local v9    # "windows":Lcom/android/server/wm/WindowList;
    :cond_e
    add-int/lit8 v0, v0, -0x1

    #@c4
    goto :goto_6

    #@c5
    .line 2240
    .end local v7    # "wallpaperNdx":I
    .end local v9    # "windows":Lcom/android/server/wm/WindowList;
    :cond_f
    return-void
.end method

.method updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z
    .locals 23
    .param p1, "wallpaperWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "dw"    # I
    .param p3, "dh"    # I
    .param p4, "sync"    # Z

    #@0
    .prologue
    .line 2149
    const/4 v12, 0x0

    #@1
    .line 2150
    .local v12, "changed":Z
    const/16 v16, 0x0

    #@3
    .line 2151
    .local v16, "rawChanged":Z
    move-object/from16 v0, p0

    #@5
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    #@7
    const/4 v5, 0x0

    #@8
    cmpl-float v4, v4, v5

    #@a
    if-ltz v4, :cond_b

    #@c
    move-object/from16 v0, p0

    #@e
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    #@10
    move/from16 v17, v0

    #@12
    .line 2152
    .local v17, "wpx":F
    :goto_0
    move-object/from16 v0, p0

    #@14
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    #@16
    const/4 v5, 0x0

    #@17
    cmpl-float v4, v4, v5

    #@19
    if-ltz v4, :cond_c

    #@1b
    move-object/from16 v0, p0

    #@1d
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    #@1f
    move/from16 v20, v0

    #@21
    .line 2153
    .local v20, "wpxs":F
    :goto_1
    move-object/from16 v0, p1

    #@23
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@25
    iget v4, v4, Landroid/graphics/Rect;->right:I

    #@27
    move-object/from16 v0, p1

    #@29
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@2b
    iget v5, v5, Landroid/graphics/Rect;->left:I

    #@2d
    sub-int/2addr v4, v5

    #@2e
    sub-int v11, v4, p2

    #@30
    .line 2154
    .local v11, "availw":I
    if-lez v11, :cond_d

    #@32
    int-to-float v4, v11

    #@33
    mul-float v4, v4, v17

    #@35
    const/high16 v5, 0x3f000000    # 0.5f

    #@37
    add-float/2addr v4, v5

    #@38
    float-to-int v4, v4

    #@39
    neg-int v15, v4

    #@3a
    .line 2155
    .local v15, "offset":I
    :goto_2
    move-object/from16 v0, p0

    #@3c
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetX:I

    #@3e
    const/high16 v5, -0x80000000

    #@40
    if-eq v4, v5, :cond_0

    #@42
    .line 2156
    move-object/from16 v0, p0

    #@44
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetX:I

    #@46
    add-int/2addr v15, v4

    #@47
    .line 2158
    :cond_0
    move-object/from16 v0, p1

    #@49
    iget v4, v0, Lcom/android/server/wm/WindowState;->mXOffset:I

    #@4b
    if-eq v4, v15, :cond_e

    #@4d
    const/4 v12, 0x1

    #@4e
    .line 2159
    :goto_3
    if-eqz v12, :cond_1

    #@50
    .line 2162
    move-object/from16 v0, p1

    #@52
    iput v15, v0, Lcom/android/server/wm/WindowState;->mXOffset:I

    #@54
    .line 2164
    :cond_1
    move-object/from16 v0, p1

    #@56
    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@58
    cmpl-float v4, v4, v17

    #@5a
    if-nez v4, :cond_2

    #@5c
    move-object/from16 v0, p1

    #@5e
    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@60
    cmpl-float v4, v4, v20

    #@62
    if-eqz v4, :cond_3

    #@64
    .line 2165
    :cond_2
    move/from16 v0, v17

    #@66
    move-object/from16 v1, p1

    #@68
    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@6a
    .line 2166
    move/from16 v0, v20

    #@6c
    move-object/from16 v1, p1

    #@6e
    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@70
    .line 2167
    const/16 v16, 0x1

    #@72
    .line 2170
    :cond_3
    move-object/from16 v0, p0

    #@74
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    #@76
    const/4 v5, 0x0

    #@77
    cmpl-float v4, v4, v5

    #@79
    if-ltz v4, :cond_f

    #@7b
    move-object/from16 v0, p0

    #@7d
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    #@7f
    move/from16 v21, v0

    #@81
    .line 2171
    .local v21, "wpy":F
    :goto_4
    move-object/from16 v0, p0

    #@83
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    #@85
    const/4 v5, 0x0

    #@86
    cmpl-float v4, v4, v5

    #@88
    if-ltz v4, :cond_10

    #@8a
    move-object/from16 v0, p0

    #@8c
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    #@8e
    move/from16 v22, v0

    #@90
    .line 2172
    .local v22, "wpys":F
    :goto_5
    move-object/from16 v0, p1

    #@92
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@94
    iget v4, v4, Landroid/graphics/Rect;->bottom:I

    #@96
    move-object/from16 v0, p1

    #@98
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@9a
    iget v5, v5, Landroid/graphics/Rect;->top:I

    #@9c
    sub-int/2addr v4, v5

    #@9d
    sub-int v10, v4, p3

    #@9f
    .line 2173
    .local v10, "availh":I
    if-lez v10, :cond_11

    #@a1
    int-to-float v4, v10

    #@a2
    mul-float v4, v4, v21

    #@a4
    const/high16 v5, 0x3f000000    # 0.5f

    #@a6
    add-float/2addr v4, v5

    #@a7
    float-to-int v4, v4

    #@a8
    neg-int v15, v4

    #@a9
    .line 2174
    :goto_6
    move-object/from16 v0, p0

    #@ab
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetY:I

    #@ad
    const/high16 v5, -0x80000000

    #@af
    if-eq v4, v5, :cond_4

    #@b1
    .line 2175
    move-object/from16 v0, p0

    #@b3
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperDisplayOffsetY:I

    #@b5
    add-int/2addr v15, v4

    #@b6
    .line 2177
    :cond_4
    move-object/from16 v0, p1

    #@b8
    iget v4, v0, Lcom/android/server/wm/WindowState;->mYOffset:I

    #@ba
    if-eq v4, v15, :cond_5

    #@bc
    .line 2180
    const/4 v12, 0x1

    #@bd
    .line 2181
    move-object/from16 v0, p1

    #@bf
    iput v15, v0, Lcom/android/server/wm/WindowState;->mYOffset:I

    #@c1
    .line 2183
    :cond_5
    move-object/from16 v0, p1

    #@c3
    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@c5
    cmpl-float v4, v4, v21

    #@c7
    if-nez v4, :cond_6

    #@c9
    move-object/from16 v0, p1

    #@cb
    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@cd
    cmpl-float v4, v4, v22

    #@cf
    if-eqz v4, :cond_7

    #@d1
    .line 2184
    :cond_6
    move/from16 v0, v21

    #@d3
    move-object/from16 v1, p1

    #@d5
    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@d7
    .line 2185
    move/from16 v0, v22

    #@d9
    move-object/from16 v1, p1

    #@db
    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@dd
    .line 2186
    const/16 v16, 0x1

    #@df
    .line 2189
    :cond_7
    if-eqz v16, :cond_a

    #@e1
    move-object/from16 v0, p1

    #@e3
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@e5
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@e7
    and-int/lit8 v4, v4, 0x4

    #@e9
    if-eqz v4, :cond_a

    #@eb
    .line 2195
    if-eqz p4, :cond_8

    #@ed
    .line 2196
    :try_start_0
    move-object/from16 v0, p1

    #@ef
    move-object/from16 v1, p0

    #@f1
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    #@f3
    .line 2198
    :cond_8
    move-object/from16 v0, p1

    #@f5
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@f7
    .line 2199
    move-object/from16 v0, p1

    #@f9
    iget v5, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    #@fb
    move-object/from16 v0, p1

    #@fd
    iget v6, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    #@ff
    .line 2200
    move-object/from16 v0, p1

    #@101
    iget v7, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    #@103
    move-object/from16 v0, p1

    #@105
    iget v8, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    #@107
    move/from16 v9, p4

    #@109
    .line 2198
    invoke-interface/range {v4 .. v9}, Landroid/view/IWindow;->dispatchWallpaperOffsets(FFFFZ)V

    #@10c
    .line 2201
    if-eqz p4, :cond_a

    #@10e
    .line 2202
    move-object/from16 v0, p0

    #@110
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    #@112
    if-eqz v4, :cond_a

    #@114
    .line 2203
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@117
    move-result-wide v18

    #@118
    .line 2204
    .local v18, "start":J
    move-object/from16 v0, p0

    #@11a
    iget-wide v4, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperTimeoutTime:J
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@11c
    const-wide/16 v6, 0x2710

    #@11e
    add-long/2addr v4, v6

    #@11f
    cmp-long v4, v4, v18

    #@121
    if-gez v4, :cond_9

    #@123
    .line 2209
    :try_start_1
    move-object/from16 v0, p0

    #@125
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@127
    const-wide/16 v6, 0x96

    #@129
    invoke-virtual {v4, v6, v7}, Ljava/util/HashMap;->wait(J)V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@12c
    .line 2213
    :goto_7
    const-wide/16 v4, 0x96

    #@12e
    add-long v4, v4, v18

    #@130
    .line 2214
    :try_start_2
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@133
    move-result-wide v6

    #@134
    .line 2213
    cmp-long v4, v4, v6

    #@136
    if-gez v4, :cond_9

    #@138
    .line 2215
    const-string/jumbo v4, "WindowManager"

    #@13b
    new-instance v5, Ljava/lang/StringBuilder;

    #@13d
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@140
    const-string/jumbo v6, "Timeout waiting for wallpaper to offset: "

    #@143
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@146
    move-result-object v5

    #@147
    move-object/from16 v0, p1

    #@149
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@14c
    move-result-object v5

    #@14d
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@150
    move-result-object v5

    #@151
    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@154
    .line 2217
    move-wide/from16 v0, v18

    #@156
    move-object/from16 v2, p0

    #@158
    iput-wide v0, v2, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperTimeoutTime:J

    #@15a
    .line 2220
    :cond_9
    const/4 v4, 0x0

    #@15b
    move-object/from16 v0, p0

    #@15d
    iput-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    #@15f
    .line 2227
    .end local v18    # "start":J
    :cond_a
    :goto_8
    return v12

    #@160
    .line 2151
    .end local v10    # "availh":I
    .end local v11    # "availw":I
    .end local v15    # "offset":I
    .end local v17    # "wpx":F
    .end local v20    # "wpxs":F
    .end local v21    # "wpy":F
    .end local v22    # "wpys":F
    :cond_b
    const/high16 v17, 0x3f000000    # 0.5f

    #@162
    .restart local v17    # "wpx":F
    goto/16 :goto_0

    #@164
    .line 2152
    :cond_c
    const/high16 v20, -0x40800000    # -1.0f

    #@166
    .restart local v20    # "wpxs":F
    goto/16 :goto_1

    #@168
    .line 2154
    .restart local v11    # "availw":I
    :cond_d
    const/4 v15, 0x0

    #@169
    .restart local v15    # "offset":I
    goto/16 :goto_2

    #@16b
    .line 2158
    :cond_e
    const/4 v12, 0x0

    #@16c
    goto/16 :goto_3

    #@16e
    .line 2170
    :cond_f
    const/high16 v21, 0x3f000000    # 0.5f

    #@170
    .restart local v21    # "wpy":F
    goto/16 :goto_4

    #@172
    .line 2171
    :cond_10
    const/high16 v22, -0x40800000    # -1.0f

    #@174
    .restart local v22    # "wpys":F
    goto/16 :goto_5

    #@176
    .line 2173
    .restart local v10    # "availh":I
    :cond_11
    const/4 v15, 0x0

    #@177
    goto/16 :goto_6

    #@179
    .line 2223
    :catch_0
    move-exception v13

    #@17a
    .local v13, "e":Landroid/os/RemoteException;
    goto :goto_8

    #@17b
    .line 2210
    .end local v13    # "e":Landroid/os/RemoteException;
    .restart local v18    # "start":J
    :catch_1
    move-exception v14

    #@17c
    .local v14, "e":Ljava/lang/InterruptedException;
    goto :goto_7
.end method

.method public validateAppTokens(ILjava/util/List;)V
    .locals 19
    .param p1, "stackId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/wm/TaskGroup;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 3521
    .local p2, "tasks":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/wm/TaskGroup;>;"
    move-object/from16 v0, p0

    #@2
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    move-object/from16 v16, v0

    #@6
    monitor-enter v16

    #@7
    .line 3522
    :try_start_0
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    #@a
    move-result v15

    #@b
    add-int/lit8 v7, v15, -0x1

    #@d
    .line 3523
    .local v7, "t":I
    if-gez v7, :cond_0

    #@f
    .line 3524
    const-string/jumbo v15, "WindowManager"

    #@12
    const-string/jumbo v17, "validateAppTokens: empty task list"

    #@15
    move-object/from16 v0, v17

    #@17
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1a
    monitor-exit v16

    #@1b
    .line 3525
    return-void

    #@1c
    .line 3528
    :cond_0
    const/4 v15, 0x0

    #@1d
    :try_start_1
    move-object/from16 v0, p2

    #@1f
    invoke-interface {v0, v15}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@22
    move-result-object v9

    #@23
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    #@25
    .line 3529
    .local v9, "task":Lcom/android/server/wm/TaskGroup;
    iget v10, v9, Lcom/android/server/wm/TaskGroup;->taskId:I

    #@27
    .line 3530
    .local v10, "taskId":I
    move-object/from16 v0, p0

    #@29
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@2b
    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@2e
    move-result-object v8

    #@2f
    check-cast v8, Lcom/android/server/wm/Task;

    #@31
    .line 3531
    .local v8, "targetTask":Lcom/android/server/wm/Task;
    invoke-virtual {v8}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@34
    move-result-object v3

    #@35
    .line 3532
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_1

    #@37
    .line 3533
    const-string/jumbo v15, "WindowManager"

    #@3a
    new-instance v17, Ljava/lang/StringBuilder;

    #@3c
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@3f
    const-string/jumbo v18, "validateAppTokens: no Display for taskId="

    #@42
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@45
    move-result-object v17

    #@46
    move-object/from16 v0, v17

    #@48
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v17

    #@4c
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4f
    move-result-object v17

    #@50
    move-object/from16 v0, v17

    #@52
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@55
    monitor-exit v16

    #@56
    .line 3534
    return-void

    #@57
    .line 3537
    :cond_1
    :try_start_2
    move-object/from16 v0, p0

    #@59
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5b
    move/from16 v0, p1

    #@5d
    invoke-virtual {v15, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@60
    move-result-object v15

    #@61
    check-cast v15, Lcom/android/server/wm/TaskStack;

    #@63
    invoke-virtual {v15}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@66
    move-result-object v5

    #@67
    .line 3539
    .local v5, "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@6a
    move-result v15

    #@6b
    add-int/lit8 v11, v15, -0x1

    #@6d
    .local v11, "taskNdx":I
    :goto_0
    if-ltz v11, :cond_5

    #@6f
    if-ltz v7, :cond_5

    #@71
    .line 3540
    invoke-virtual {v5, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@74
    move-result-object v15

    #@75
    check-cast v15, Lcom/android/server/wm/Task;

    #@77
    iget-object v6, v15, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@79
    .line 3541
    .local v6, "localTokens":Lcom/android/server/wm/AppTokenList;
    move-object/from16 v0, p2

    #@7b
    invoke-interface {v0, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@7e
    move-result-object v9

    #@7f
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    #@81
    .line 3542
    .restart local v9    # "task":Lcom/android/server/wm/TaskGroup;
    iget-object v13, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    #@83
    .line 3544
    .local v13, "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    move-object v4, v3

    #@84
    .line 3545
    .local v4, "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    #@86
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@88
    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8b
    move-result-object v15

    #@8c
    check-cast v15, Lcom/android/server/wm/Task;

    #@8e
    invoke-virtual {v15}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@91
    move-result-object v3

    #@92
    .line 3546
    if-eq v3, v4, :cond_2

    #@94
    .line 3547
    const-string/jumbo v15, "WindowManager"

    #@97
    const-string/jumbo v17, "validateAppTokens: displayContent changed in TaskGroup list!"

    #@9a
    move-object/from16 v0, v17

    #@9c
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@9f
    monitor-exit v16

    #@a0
    .line 3548
    return-void

    #@a1
    .line 3553
    :cond_2
    :try_start_3
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    #@a4
    move-result v15

    #@a5
    add-int/lit8 v12, v15, -0x1

    #@a7
    .local v12, "tokenNdx":I
    iget-object v15, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    #@a9
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    #@ac
    move-result v15

    #@ad
    add-int/lit8 v14, v15, -0x1

    #@af
    .line 3554
    .local v14, "v":I
    :goto_1
    if-ltz v12, :cond_4

    #@b1
    if-ltz v14, :cond_4

    #@b3
    .line 3555
    invoke-virtual {v6, v12}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@b6
    move-result-object v2

    #@b7
    check-cast v2, Lcom/android/server/wm/AppWindowToken;

    #@b9
    .line 3556
    .local v2, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v15, v2, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@bb
    if-eqz v15, :cond_3

    #@bd
    .line 3557
    add-int/lit8 v12, v12, -0x1

    #@bf
    .line 3558
    goto :goto_1

    #@c0
    .line 3560
    :cond_3
    invoke-interface {v13, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@c3
    move-result-object v15

    #@c4
    iget-object v0, v2, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@c6
    move-object/from16 v17, v0

    #@c8
    move-object/from16 v0, v17

    #@ca
    if-eq v15, v0, :cond_8

    #@cc
    .line 3567
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_4
    if-gez v12, :cond_5

    #@ce
    if-ltz v14, :cond_9

    #@d0
    .line 3572
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :cond_5
    if-gez v11, :cond_6

    #@d2
    if-ltz v7, :cond_7

    #@d4
    .line 3573
    :cond_6
    const-string/jumbo v15, "WindowManager"

    #@d7
    new-instance v17, Ljava/lang/StringBuilder;

    #@d9
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@dc
    const-string/jumbo v18, "validateAppTokens: Mismatch! ActivityManager="

    #@df
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e2
    move-result-object v17

    #@e3
    move-object/from16 v0, v17

    #@e5
    move-object/from16 v1, p2

    #@e7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@ea
    move-result-object v17

    #@eb
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@ee
    move-result-object v17

    #@ef
    move-object/from16 v0, v17

    #@f1
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@f4
    .line 3574
    const-string/jumbo v15, "WindowManager"

    #@f7
    new-instance v17, Ljava/lang/StringBuilder;

    #@f9
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@fc
    const-string/jumbo v18, "validateAppTokens: Mismatch! WindowManager="

    #@ff
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@102
    move-result-object v17

    #@103
    move-object/from16 v0, v17

    #@105
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@108
    move-result-object v17

    #@109
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10c
    move-result-object v17

    #@10d
    move-object/from16 v0, v17

    #@10f
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@112
    .line 3575
    const-string/jumbo v15, "WindowManager"

    #@115
    new-instance v17, Ljava/lang/StringBuilder;

    #@117
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@11a
    const-string/jumbo v18, "validateAppTokens: Mismatch! Callers="

    #@11d
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@120
    move-result-object v17

    #@121
    const/16 v18, 0x4

    #@123
    invoke-static/range {v18 .. v18}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    #@126
    move-result-object v18

    #@127
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12a
    move-result-object v17

    #@12b
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@12e
    move-result-object v17

    #@12f
    move-object/from16 v0, v17

    #@131
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@134
    :cond_7
    monitor-exit v16

    #@135
    .line 3520
    return-void

    #@136
    .line 3563
    .restart local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .restart local v12    # "tokenNdx":I
    .restart local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .restart local v14    # "v":I
    :cond_8
    add-int/lit8 v12, v12, -0x1

    #@138
    .line 3564
    add-int/lit8 v14, v14, -0x1

    #@13a
    goto/16 :goto_1

    #@13c
    .line 3539
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_9
    add-int/lit8 v11, v11, -0x1

    #@13e
    add-int/lit8 v7, v7, -0x1

    #@140
    goto/16 :goto_0

    #@142
    .line 3521
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "t":I
    .end local v8    # "targetTask":Lcom/android/server/wm/Task;
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    .end local v10    # "taskId":I
    .end local v11    # "taskNdx":I
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :catchall_0
    move-exception v15

    #@143
    monitor-exit v16

    #@144
    throw v15
.end method

.method public validateStackOrder([Ljava/lang/Integer;)V
    .locals 0
    .param p1, "remoteStackIds"    # [Ljava/lang/Integer;

    #@0
    .prologue
    .line 3580
    return-void
.end method

.method viewServerGetFocusedWindow(Ljava/net/Socket;)Z
    .locals 9
    .param p1, "client"    # Ljava/net/Socket;

    #@0
    .prologue
    .line 6955
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v7

    #@4
    if-eqz v7, :cond_0

    #@6
    .line 6956
    const/4 v7, 0x0

    #@7
    return v7

    #@8
    .line 6959
    :cond_0
    const/4 v6, 0x1

    #@9
    .line 6961
    .local v6, "result":Z
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@c
    move-result-object v3

    #@d
    .line 6963
    .local v3, "focusedWindow":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    #@e
    .line 6967
    .local v4, "out":Ljava/io/BufferedWriter;
    :try_start_0
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@11
    move-result-object v0

    #@12
    .line 6968
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v5, Ljava/io/BufferedWriter;

    #@14
    new-instance v7, Ljava/io/OutputStreamWriter;

    #@16
    invoke-direct {v7, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@19
    const/16 v8, 0x2000

    #@1b
    invoke-direct {v5, v7, v8}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    .line 6970
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .local v5, "out":Ljava/io/BufferedWriter;
    if-eqz v3, :cond_1

    #@20
    .line 6971
    :try_start_1
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@23
    move-result v7

    #@24
    invoke-static {v7}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@27
    move-result-object v7

    #@28
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@2b
    .line 6972
    const/16 v7, 0x20

    #@2d
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(I)V

    #@30
    .line 6973
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@32
    invoke-virtual {v7}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@35
    move-result-object v7

    #@36
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    #@39
    .line 6975
    :cond_1
    const/16 v7, 0xa

    #@3b
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(I)V

    #@3e
    .line 6976
    invoke-virtual {v5}, Ljava/io/BufferedWriter;->flush()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@41
    .line 6980
    if-eqz v5, :cond_2

    #@43
    .line 6982
    :try_start_2
    invoke-virtual {v5}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    #@46
    :cond_2
    :goto_0
    move-object v4, v5

    #@47
    .line 6989
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v5    # "out":Ljava/io/BufferedWriter;
    :cond_3
    :goto_1
    return v6

    #@48
    .line 6983
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catch_0
    move-exception v1

    #@49
    .line 6984
    .local v1, "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@4a
    goto :goto_0

    #@4b
    .line 6977
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "e":Ljava/io/IOException;
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v2

    #@4c
    .line 6978
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .local v2, "e":Ljava/lang/Exception;
    :goto_2
    const/4 v6, 0x0

    #@4d
    .line 6980
    if-eqz v4, :cond_3

    #@4f
    .line 6982
    :try_start_3
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2

    #@52
    goto :goto_1

    #@53
    .line 6983
    :catch_2
    move-exception v1

    #@54
    .line 6984
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@55
    goto :goto_1

    #@56
    .line 6979
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "e":Ljava/lang/Exception;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catchall_0
    move-exception v7

    #@57
    .line 6980
    .end local v4    # "out":Ljava/io/BufferedWriter;
    :goto_3
    if-eqz v4, :cond_4

    #@59
    .line 6982
    :try_start_4
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_3

    #@5c
    .line 6979
    :cond_4
    :goto_4
    throw v7

    #@5d
    .line 6983
    :catch_3
    move-exception v1

    #@5e
    .line 6984
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@5f
    goto :goto_4

    #@60
    .line 6979
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catchall_1
    move-exception v7

    #@61
    move-object v4, v5

    #@62
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .local v4, "out":Ljava/io/BufferedWriter;
    goto :goto_3

    #@63
    .line 6977
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v2

    #@64
    .restart local v2    # "e":Ljava/lang/Exception;
    move-object v4, v5

    #@65
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    goto :goto_2
.end method

.method viewServerListWindows(Ljava/net/Socket;)Z
    .locals 15
    .param p1, "client"    # Ljava/net/Socket;

    #@0
    .prologue
    .line 6897
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v13

    #@4
    if-eqz v13, :cond_0

    #@6
    .line 6898
    const/4 v13, 0x0

    #@7
    return v13

    #@8
    .line 6901
    :cond_0
    const/4 v10, 0x1

    #@9
    .line 6903
    .local v10, "result":Z
    new-instance v12, Lcom/android/server/wm/WindowList;

    #@b
    invoke-direct {v12}, Lcom/android/server/wm/WindowList;-><init>()V

    #@e
    .line 6904
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    iget-object v14, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@10
    monitor-enter v14

    #@11
    .line 6906
    :try_start_0
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@13
    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    #@16
    move-result v7

    #@17
    .line 6907
    .local v7, "numDisplays":I
    const/4 v3, 0x0

    #@18
    .local v3, "displayNdx":I
    :goto_0
    if-ge v3, v7, :cond_1

    #@1a
    .line 6908
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1c
    invoke-virtual {v13, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@1f
    move-result-object v2

    #@20
    check-cast v2, Lcom/android/server/wm/DisplayContent;

    #@22
    .line 6909
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@25
    move-result-object v13

    #@26
    invoke-virtual {v12, v13}, Lcom/android/server/wm/WindowList;->addAll(Ljava/util/Collection;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@29
    .line 6907
    add-int/lit8 v3, v3, 0x1

    #@2b
    goto :goto_0

    #@2c
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    monitor-exit v14

    #@2d
    .line 6913
    const/4 v8, 0x0

    #@2e
    .line 6917
    .local v8, "out":Ljava/io/BufferedWriter;
    :try_start_1
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@31
    move-result-object v0

    #@32
    .line 6918
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v9, Ljava/io/BufferedWriter;

    #@34
    new-instance v13, Ljava/io/OutputStreamWriter;

    #@36
    invoke-direct {v13, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@39
    const/16 v14, 0x2000

    #@3b
    invoke-direct {v9, v13, v14}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@3e
    .line 6920
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    :try_start_2
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    #@41
    move-result v1

    #@42
    .line 6921
    .local v1, "count":I
    const/4 v6, 0x0

    #@43
    .local v6, "i":I
    :goto_1
    if-ge v6, v1, :cond_2

    #@45
    .line 6922
    invoke-virtual {v12, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@48
    move-result-object v11

    #@49
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@4b
    .line 6923
    .local v11, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v11}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@4e
    move-result v13

    #@4f
    invoke-static {v13}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@52
    move-result-object v13

    #@53
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@56
    .line 6924
    const/16 v13, 0x20

    #@58
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(I)V

    #@5b
    .line 6925
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5d
    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@60
    move-result-object v13

    #@61
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    #@64
    .line 6926
    const/16 v13, 0xa

    #@66
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(I)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_4
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@69
    .line 6921
    add-int/lit8 v6, v6, 0x1

    #@6b
    goto :goto_1

    #@6c
    .line 6904
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v3    # "displayNdx":I
    .end local v6    # "i":I
    .end local v7    # "numDisplays":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .end local v11    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v13

    #@6d
    monitor-exit v14

    #@6e
    throw v13

    #@6f
    .line 6929
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v3    # "displayNdx":I
    .restart local v6    # "i":I
    .restart local v7    # "numDisplays":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :cond_2
    :try_start_3
    const-string/jumbo v13, "DONE.\n"

    #@72
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@75
    .line 6930
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->flush()V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_4
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    #@78
    .line 6934
    if-eqz v9, :cond_3

    #@7a
    .line 6936
    :try_start_4
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    #@7d
    :cond_3
    :goto_2
    move-object v8, v9

    #@7e
    .line 6943
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v6    # "i":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    :cond_4
    :goto_3
    return v10

    #@7f
    .line 6937
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v6    # "i":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_0
    move-exception v4

    #@80
    .line 6938
    .local v4, "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@81
    goto :goto_2

    #@82
    .line 6931
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v4    # "e":Ljava/io/IOException;
    .end local v6    # "i":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v5

    #@83
    .line 6932
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v5, "e":Ljava/lang/Exception;
    :goto_4
    const/4 v10, 0x0

    #@84
    .line 6934
    if-eqz v8, :cond_4

    #@86
    .line 6936
    :try_start_5
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2

    #@89
    goto :goto_3

    #@8a
    .line 6937
    :catch_2
    move-exception v4

    #@8b
    .line 6938
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@8c
    goto :goto_3

    #@8d
    .line 6933
    .end local v4    # "e":Ljava/io/IOException;
    .end local v5    # "e":Ljava/lang/Exception;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catchall_1
    move-exception v13

    #@8e
    .line 6934
    .end local v8    # "out":Ljava/io/BufferedWriter;
    :goto_5
    if-eqz v8, :cond_5

    #@90
    .line 6936
    :try_start_6
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_3

    #@93
    .line 6933
    :cond_5
    :goto_6
    throw v13

    #@94
    .line 6937
    :catch_3
    move-exception v4

    #@95
    .line 6938
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@96
    goto :goto_6

    #@97
    .line 6933
    .end local v4    # "e":Ljava/io/IOException;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catchall_2
    move-exception v13

    #@98
    move-object v8, v9

    #@99
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v8, "out":Ljava/io/BufferedWriter;
    goto :goto_5

    #@9a
    .line 6931
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v5

    #@9b
    .restart local v5    # "e":Ljava/lang/Exception;
    move-object v8, v9

    #@9c
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    goto :goto_4
.end method

.method viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 17
    .param p1, "client"    # Ljava/net/Socket;
    .param p2, "command"    # Ljava/lang/String;
    .param p3, "parameters"    # Ljava/lang/String;

    #@0
    .prologue
    .line 7013
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v14

    #@4
    if-eqz v14, :cond_0

    #@6
    .line 7014
    const/4 v14, 0x0

    #@7
    return v14

    #@8
    .line 7017
    :cond_0
    const/4 v12, 0x1

    #@9
    .line 7018
    .local v12, "success":Z
    const/4 v4, 0x0

    #@a
    .line 7019
    .local v4, "data":Landroid/os/Parcel;
    const/4 v11, 0x0

    #@b
    .line 7021
    .local v11, "reply":Landroid/os/Parcel;
    const/4 v9, 0x0

    #@c
    .line 7026
    .local v9, "out":Ljava/io/BufferedWriter;
    const/16 v14, 0x20

    #@e
    :try_start_0
    move-object/from16 v0, p3

    #@10
    invoke-virtual {v0, v14}, Ljava/lang/String;->indexOf(I)I

    #@13
    move-result v8

    #@14
    .line 7027
    .local v8, "index":I
    const/4 v14, -0x1

    #@15
    if-ne v8, v14, :cond_1

    #@17
    .line 7028
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    #@1a
    move-result v8

    #@1b
    .line 7030
    :cond_1
    const/4 v14, 0x0

    #@1c
    move-object/from16 v0, p3

    #@1e
    invoke-virtual {v0, v14, v8}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@21
    move-result-object v3

    #@22
    .line 7031
    .local v3, "code":Ljava/lang/String;
    const/16 v14, 0x10

    #@24
    invoke-static {v3, v14}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    #@27
    move-result-wide v14

    #@28
    long-to-int v7, v14

    #@29
    .line 7034
    .local v7, "hashCode":I
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    #@2c
    move-result v14

    #@2d
    if-ge v8, v14, :cond_2

    #@2f
    .line 7035
    add-int/lit8 v14, v8, 0x1

    #@31
    move-object/from16 v0, p3

    #@33
    invoke-virtual {v0, v14}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@36
    move-result-object p3

    #@37
    .line 7040
    :goto_0
    move-object/from16 v0, p0

    #@39
    invoke-direct {v0, v7}, Lcom/android/server/wm/WindowManagerService;->findWindow(I)Lcom/android/server/wm/WindowState;

    #@3c
    move-result-object v13

    #@3d
    .line 7041
    .local v13, "window":Lcom/android/server/wm/WindowState;
    if-nez v13, :cond_3

    #@3f
    .line 7042
    const/4 v14, 0x0

    #@40
    return v14

    #@41
    .line 7037
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_2
    const-string/jumbo p3, ""

    #@44
    goto :goto_0

    #@45
    .line 7045
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@48
    move-result-object v4

    #@49
    .line 7046
    .local v4, "data":Landroid/os/Parcel;
    const-string/jumbo v14, "android.view.IWindow"

    #@4c
    invoke-virtual {v4, v14}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    #@4f
    .line 7047
    move-object/from16 v0, p2

    #@51
    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@54
    .line 7048
    move-object/from16 v0, p3

    #@56
    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@59
    .line 7049
    const/4 v14, 0x1

    #@5a
    invoke-virtual {v4, v14}, Landroid/os/Parcel;->writeInt(I)V

    #@5d
    .line 7050
    invoke-static/range {p1 .. p1}, Landroid/os/ParcelFileDescriptor;->fromSocket(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;

    #@60
    move-result-object v14

    #@61
    const/4 v15, 0x0

    #@62
    invoke-virtual {v14, v4, v15}, Landroid/os/ParcelFileDescriptor;->writeToParcel(Landroid/os/Parcel;I)V

    #@65
    .line 7052
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@68
    move-result-object v11

    #@69
    .line 7054
    .local v11, "reply":Landroid/os/Parcel;
    iget-object v14, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@6b
    invoke-interface {v14}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@6e
    move-result-object v2

    #@6f
    .line 7056
    .local v2, "binder":Landroid/os/IBinder;
    const/4 v14, 0x1

    #@70
    const/4 v15, 0x0

    #@71
    invoke-interface {v2, v14, v4, v11, v15}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    #@74
    .line 7058
    invoke-virtual {v11}, Landroid/os/Parcel;->readException()V

    #@77
    .line 7060
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->isOutputShutdown()Z

    #@7a
    move-result v14

    #@7b
    if-nez v14, :cond_4

    #@7d
    .line 7061
    new-instance v10, Ljava/io/BufferedWriter;

    #@7f
    new-instance v14, Ljava/io/OutputStreamWriter;

    #@81
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@84
    move-result-object v15

    #@85
    invoke-direct {v14, v15}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@88
    invoke-direct {v10, v14}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8b
    .line 7062
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v10, "out":Ljava/io/BufferedWriter;
    :try_start_1
    const-string/jumbo v14, "DONE\n"

    #@8e
    invoke-virtual {v10, v14}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@91
    .line 7063
    invoke-virtual {v10}, Ljava/io/BufferedWriter;->flush()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@94
    move-object v9, v10

    #@95
    .line 7070
    .end local v10    # "out":Ljava/io/BufferedWriter;
    :cond_4
    if-eqz v4, :cond_5

    #@97
    .line 7071
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@9a
    .line 7073
    :cond_5
    if-eqz v11, :cond_6

    #@9c
    .line 7074
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@9f
    .line 7076
    :cond_6
    if-eqz v9, :cond_7

    #@a1
    .line 7078
    :try_start_2
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    #@a4
    .line 7085
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v4    # "data":Landroid/os/Parcel;
    .end local v7    # "hashCode":I
    .end local v8    # "index":I
    .end local v11    # "reply":Landroid/os/Parcel;
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_7
    :goto_1
    return v12

    #@a5
    .line 7079
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v4    # "data":Landroid/os/Parcel;
    .restart local v7    # "hashCode":I
    .restart local v8    # "index":I
    .restart local v11    # "reply":Landroid/os/Parcel;
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v5

    #@a6
    .local v5, "e":Ljava/io/IOException;
    goto :goto_1

    #@a7
    .line 7066
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v4    # "data":Landroid/os/Parcel;
    .end local v5    # "e":Ljava/io/IOException;
    .end local v7    # "hashCode":I
    .end local v8    # "index":I
    .end local v11    # "reply":Landroid/os/Parcel;
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v6

    #@a8
    .line 7067
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v6, "e":Ljava/lang/Exception;
    :goto_2
    :try_start_3
    const-string/jumbo v14, "WindowManager"

    #@ab
    new-instance v15, Ljava/lang/StringBuilder;

    #@ad
    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    #@b0
    const-string/jumbo v16, "Could not send command "

    #@b3
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b6
    move-result-object v15

    #@b7
    move-object/from16 v0, p2

    #@b9
    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bc
    move-result-object v15

    #@bd
    const-string/jumbo v16, " with parameters "

    #@c0
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c3
    move-result-object v15

    #@c4
    move-object/from16 v0, p3

    #@c6
    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c9
    move-result-object v15

    #@ca
    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@cd
    move-result-object v15

    #@ce
    invoke-static {v14, v15, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@d1
    .line 7068
    const/4 v12, 0x0

    #@d2
    .line 7070
    if-eqz v4, :cond_8

    #@d4
    .line 7071
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@d7
    .line 7073
    :cond_8
    if-eqz v11, :cond_9

    #@d9
    .line 7074
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@dc
    .line 7076
    :cond_9
    if-eqz v9, :cond_7

    #@de
    .line 7078
    :try_start_4
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    #@e1
    goto :goto_1

    #@e2
    .line 7079
    :catch_2
    move-exception v5

    #@e3
    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_1

    #@e4
    .line 7069
    .end local v5    # "e":Ljava/io/IOException;
    .end local v6    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v14

    #@e5
    .line 7070
    :goto_3
    if-eqz v4, :cond_a

    #@e7
    .line 7071
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@ea
    .line 7073
    :cond_a
    if-eqz v11, :cond_b

    #@ec
    .line 7074
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@ef
    .line 7076
    :cond_b
    if-eqz v9, :cond_c

    #@f1
    .line 7078
    :try_start_5
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    #@f4
    .line 7069
    :cond_c
    :goto_4
    throw v14

    #@f5
    .line 7079
    :catch_3
    move-exception v5

    #@f6
    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_4

    #@f7
    .line 7069
    .end local v5    # "e":Ljava/io/IOException;
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v4    # "data":Landroid/os/Parcel;
    .restart local v7    # "hashCode":I
    .restart local v8    # "index":I
    .restart local v10    # "out":Ljava/io/BufferedWriter;
    .restart local v11    # "reply":Landroid/os/Parcel;
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :catchall_1
    move-exception v14

    #@f8
    move-object v9, v10

    #@f9
    .end local v10    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    goto :goto_3

    #@fa
    .line 7066
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v10    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v6

    #@fb
    .restart local v6    # "e":Ljava/lang/Exception;
    move-object v9, v10

    #@fc
    .end local v10    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    goto :goto_2
.end method

.method wallpaperCommandComplete(Landroid/os/IBinder;Landroid/os/Bundle;)V
    .locals 2
    .param p1, "window"    # Landroid/os/IBinder;
    .param p2, "result"    # Landroid/os/Bundle;

    #@0
    .prologue
    .line 3008
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 3009
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 3010
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    #@9
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@b
    invoke-interface {v0}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@e
    move-result-object v0

    #@f
    if-ne v0, p1, :cond_0

    #@11
    .line 3011
    const/4 v0, 0x0

    #@12
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    #@14
    .line 3012
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    invoke-virtual {v0}, Ljava/util/HashMap;->notifyAll()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@19
    :cond_0
    monitor-exit v1

    #@1a
    .line 3007
    return-void

    #@1b
    .line 3008
    :catchall_0
    move-exception v0

    #@1c
    monitor-exit v1

    #@1d
    throw v0
.end method

.method wallpaperOffsetsComplete(Landroid/os/IBinder;)V
    .locals 2
    .param p1, "window"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 2231
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 2232
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 2233
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    #@9
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@b
    invoke-interface {v0}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@e
    move-result-object v0

    #@f
    if-ne v0, p1, :cond_0

    #@11
    .line 2234
    const/4 v0, 0x0

    #@12
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    #@14
    .line 2235
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    invoke-virtual {v0}, Ljava/util/HashMap;->notifyAll()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@19
    :cond_0
    monitor-exit v1

    #@1a
    .line 2230
    return-void

    #@1b
    .line 2231
    :catchall_0
    move-exception v0

    #@1c
    monitor-exit v1

    #@1d
    throw v0
.end method

.method public watchRotation(Landroid/view/IRotationWatcher;)I
    .locals 6
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    #@0
    .prologue
    .line 6691
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v2

    #@4
    .line 6692
    .local v2, "watcherBinder":Landroid/os/IBinder;
    new-instance v0, Lcom/android/server/wm/WindowManagerService$9;

    #@6
    invoke-direct {v0, p0, v2}, Lcom/android/server/wm/WindowManagerService$9;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V

    #@9
    .line 6710
    .local v0, "dr":Landroid/os/IBinder$DeathRecipient;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@b
    monitor-enter v4

    #@c
    .line 6712
    :try_start_0
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@f
    move-result-object v3

    #@10
    const/4 v5, 0x0

    #@11
    invoke-interface {v3, v0, v5}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    #@14
    .line 6713
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@16
    new-instance v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@18
    invoke-direct {v5, p0, p1, v0}, Lcom/android/server/wm/WindowManagerService$RotationWatcher;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRotationWatcher;Landroid/os/IBinder$DeathRecipient;)V

    #@1b
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    .line 6718
    :goto_0
    :try_start_1
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@20
    monitor-exit v4

    #@21
    return v3

    #@22
    .line 6710
    :catchall_0
    move-exception v3

    #@23
    monitor-exit v4

    #@24
    throw v3

    #@25
    .line 6714
    :catch_0
    move-exception v1

    #@26
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/os/IBinder;
    .param p3, "throwOnError"    # Z

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 8719
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    invoke-virtual {v2, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@6
    move-result-object v1

    #@7
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@9
    .line 8722
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_1

    #@b
    .line 8723
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@d
    .line 8724
    new-instance v2, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v3, "Requested window "

    #@15
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v2

    #@19
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v2

    #@1d
    const-string/jumbo v3, " does not exist"

    #@20
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v2

    #@24
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@27
    move-result-object v2

    #@28
    .line 8723
    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2b
    .line 8725
    .local v0, "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_0

    #@2d
    .line 8726
    throw v0

    #@2e
    .line 8728
    :cond_0
    const-string/jumbo v2, "WindowManager"

    #@31
    const-string/jumbo v3, "Failed looking up window"

    #@34
    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@37
    .line 8729
    return-object v4

    #@38
    .line 8731
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    :cond_1
    if-eqz p1, :cond_3

    #@3a
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@3c
    if-eq v2, p1, :cond_3

    #@3e
    .line 8732
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@40
    .line 8733
    new-instance v2, Ljava/lang/StringBuilder;

    #@42
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@45
    const-string/jumbo v3, "Requested window "

    #@48
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v2

    #@4c
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4f
    move-result-object v2

    #@50
    const-string/jumbo v3, " is in session "

    #@53
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@56
    move-result-object v2

    #@57
    .line 8734
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@59
    .line 8733
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5c
    move-result-object v2

    #@5d
    .line 8734
    const-string/jumbo v3, ", not "

    #@60
    .line 8733
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@63
    move-result-object v2

    #@64
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v2

    #@68
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6b
    move-result-object v2

    #@6c
    .line 8732
    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@6f
    .line 8735
    .restart local v0    # "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_2

    #@71
    .line 8736
    throw v0

    #@72
    .line 8738
    :cond_2
    const-string/jumbo v2, "WindowManager"

    #@75
    const-string/jumbo v3, "Failed looking up window"

    #@78
    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@7b
    .line 8739
    return-object v4

    #@7c
    .line 8742
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    :cond_3
    return-object v1
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    .locals 1
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "throwOnError"    # Z

    #@0
    .prologue
    .line 8714
    invoke-interface {p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {p0, p1, v0, p3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method
