.class public Lcom/android/server/wm/WindowManagerService;
.super Landroid/view/IWindowManager$Stub;
.source "WindowManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Landroid/view/WindowManagerPolicy$WindowManagerFuncs;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wm/WindowManagerService$1;,
        Lcom/android/server/wm/WindowManagerService$2;,
        Lcom/android/server/wm/WindowManagerService$DragInputEventReceiver;,
        Lcom/android/server/wm/WindowManagerService$H;,
        Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;,
        Lcom/android/server/wm/WindowManagerService$LocalService;,
        Lcom/android/server/wm/WindowManagerService$MousePositionTracker;,
        Lcom/android/server/wm/WindowManagerService$RotationWatcher;,
        Lcom/android/server/wm/WindowManagerService$SettingsObserver;,
        Lcom/android/server/wm/WindowManagerService$UpdateAnimationScaleMode;,
        Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    }
.end annotation


# static fields
.field private static final ALWAYS_KEEP_CURRENT:Z = true

.field private static final ANIMATION_DURATION_SCALE:I = 0x2

.field private static final BOOT_ANIMATION_POLL_INTERVAL:I = 0xc8

.field private static final BOOT_ANIMATION_SERVICE:Ljava/lang/String; = "bootanim"

.field static final CUSTOM_SCREEN_ROTATION:Z = true

.field static final DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS:J = 0x12a05f200L

.field private static final DENSITY_OVERRIDE:Ljava/lang/String; = "ro.config.density_override"

.field private static final DRAG_SHADOW_ALPHA_TRANSPARENT:F = 0.7071f

.field private static final INPUT_DEVICES_READY_FOR_SAFE_MODE_DETECTION_TIMEOUT_MILLIS:I = 0x3e8

.field static final LAST_ANR_LIFETIME_DURATION_MSECS:I = 0x6ddd00

.field static final LAYER_OFFSET_DIM:I = 0x1

.field static final LAYER_OFFSET_THUMBNAIL:I = 0x4

.field static final LAYOUT_REPEAT_THRESHOLD:I = 0x4

.field static final MAX_ANIMATION_DURATION:I = 0x2710

.field private static final MAX_SCREENSHOT_RETRIES:I = 0x3

.field static final PROFILE_ORIENTATION:Z = false

.field private static final PROPERTY_BUILD_DATE_UTC:Ljava/lang/String; = "ro.build.date.utc"

.field private static final PROPERTY_EMULATOR_CIRCULAR:Ljava/lang/String; = "ro.emulator.circular"

.field static final SEAMLESS_ROTATION_TIMEOUT_DURATION:I = 0x7d0

.field private static final SIZE_OVERRIDE:Ljava/lang/String; = "ro.config.size_override"

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSTEM_SECURE:Ljava/lang/String; = "ro.secure"

.field private static final TAG:Ljava/lang/String;

.field private static final TRANSITION_ANIMATION_SCALE:I = 0x1

.field static final TYPE_LAYER_MULTIPLIER:I = 0x2710

.field static final TYPE_LAYER_OFFSET:I = 0x3e8

.field static final UPDATE_FOCUS_NORMAL:I = 0x0

.field static final UPDATE_FOCUS_PLACING_SURFACES:I = 0x2

.field static final UPDATE_FOCUS_WILL_ASSIGN_LAYERS:I = 0x1

.field static final UPDATE_FOCUS_WILL_PLACE_SURFACES:I = 0x3

.field static final WINDOWS_FREEZING_SCREENS_ACTIVE:I = 0x1

.field static final WINDOWS_FREEZING_SCREENS_NONE:I = 0x0

.field static final WINDOWS_FREEZING_SCREENS_TIMEOUT:I = 0x2

.field private static final WINDOW_ANIMATION_SCALE:I = 0x0

.field static final WINDOW_FREEZE_TIMEOUT_DURATION:I = 0x7d0

.field static final WINDOW_LAYER_MULTIPLIER:I = 0x5

.field static final WINDOW_REPLACEMENT_TIMEOUT_DURATION:I = 0x7d0

.field static final localLOGV:Z


# instance fields
.field mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

.field final mActivityManager:Landroid/app/IActivityManager;

.field private final mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

.field final mAllowAnimationsInLowPowerMode:Z

.field final mAllowBootMessages:Z

.field mAllowTheaterModeWakeFromLayout:Z

.field mAltOrientation:Z

.field final mAmInternal:Landroid/app/ActivityManagerInternal;

.field mAnimateWallpaperWithTarget:Z

.field mAnimationScheduled:Z

.field mAnimationsDisabled:Z

.field final mAnimator:Lcom/android/server/wm/WindowAnimator;

.field mAnimatorDurationScaleSetting:F

.field final mAppOps:Landroid/app/AppOpsManager;

.field final mAppTransition:Lcom/android/server/wm/AppTransition;

.field mAppsFreezingScreen:I

.field mBootAnimationStopped:Z

.field private final mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

.field final mBroadcastReceiver:Landroid/content/BroadcastReceiver;

.field private final mChangedStackList:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field final mChoreographer:Landroid/view/Choreographer;

.field mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

.field mClientFreezingScreen:Z

.field final mClosingApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

.field mCompatibleScreenScale:F

.field final mContext:Landroid/content/Context;

.field mCurConfiguration:Landroid/content/res/Configuration;

.field mCurrentFocus:Lcom/android/server/wm/WindowState;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field mDeferredRotationPauseCount:I

.field final mDestroyPreservedSurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mDestroySurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayContents:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/DisplayContent;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayEnabled:Z

.field mDisplayFreezeTime:J

.field mDisplayFrozen:Z

.field final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field final mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

.field final mDisplayMetrics:Landroid/util/DisplayMetrics;

.field mDisplayReady:Z

.field final mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

.field final mDisplays:[Landroid/view/Display;

.field mDockedStackCreateBounds:Landroid/graphics/Rect;

.field mDockedStackCreateMode:I

.field mDragState:Lcom/android/server/wm/DragState;

.field final mDrawLockTimeoutMillis:J

.field mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

.field mEnterAnimId:I

.field private mEventDispatchingEnabled:Z

.field mExitAnimId:I

.field final mFinishedEarlyAnim:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mFinishedStarting:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mFocusMayChange:Z

.field mFocusedApp:Lcom/android/server/wm/AppWindowToken;

.field mForceDisplayEnabled:Z

.field final mForceRemoves:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mForceResizableTasks:Z

.field final mFxSession:Landroid/view/SurfaceSession;

.field final mH:Lcom/android/server/wm/WindowManagerService$H;

.field mHardKeyboardAvailable:Z

.field mHardKeyboardStatusChangeListener:Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

.field final mHasPermanentDpad:Z

.field final mHaveInputMethods:Z

.field mHoldingScreenOn:Lcom/android/server/wm/Session;

.field mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field mInTouchMode:Z

.field mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

.field final mInputManager:Lcom/android/server/input/InputManagerService;

.field final mInputMethodDialogs:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mInputMethodManager:Lcom/android/internal/view/IInputMethodManager;

.field mInputMethodTarget:Lcom/android/server/wm/WindowState;

.field mInputMethodTargetWaitingAnim:Z

.field mInputMethodWindow:Lcom/android/server/wm/WindowState;

.field final mInputMonitor:Lcom/android/server/wm/InputMonitor;

.field mIsTouchDevice:Z

.field private final mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

.field private mKeyguardWaitingForActivityDrawn:Z

.field mLastANRState:Ljava/lang/String;

.field mLastDispatchedSystemUiVisibility:I

.field mLastDisplayFreezeDuration:I

.field mLastFinishedFreezeSource:Ljava/lang/Object;

.field mLastFocus:Lcom/android/server/wm/WindowState;

.field mLastKeyguardForcedOrientation:I

.field mLastOrientation:I

.field mLastStatusBarVisibility:I

.field mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

.field mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

.field mLastWindowForcedOrientation:I

.field final mLayersController:Lcom/android/server/wm/WindowLayersController;

.field mLayoutSeq:I

.field final mLimitedAlphaCompositing:Z

.field mLosingFocus:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field private mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

.field final mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mOnlyCore:Z

.field final mOpeningApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingRemove:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

.field private final mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

.field final mPolicy:Landroid/view/WindowManagerPolicy;

.field mPowerManager:Landroid/os/PowerManager;

.field mPowerManagerInternal:Landroid/os/PowerManagerInternal;

.field final mRealDisplayMetrics:Landroid/util/DisplayMetrics;

.field mRebuildTmp:[Lcom/android/server/wm/WindowState;

.field private final mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

.field final mReplacingWindowTimeouts:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mResizingWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRotation:I

.field mRotationWatchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$RotationWatcher;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field mScreenCaptureDisabled:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field private final mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

.field final mScreenRect:Landroid/graphics/Rect;

.field mSeamlessRotationCount:I

.field final mSessions:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/Session;",
            ">;"
        }
    .end annotation
.end field

.field mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

.field mShowingBootMessages:Z

.field mSkipAppTransitionAnimation:Z

.field mStackIdToStack:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/TaskStack;",
            ">;"
        }
    .end annotation
.end field

.field mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

.field mSystemBooted:Z

.field mSystemDecorLayer:I

.field mTaskIdToTask:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/Task;",
            ">;"
        }
    .end annotation
.end field

.field mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

.field final mTempConfiguration:Landroid/content/res/Configuration;

.field private mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

.field final mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

.field final mTmpFloats:[F

.field final mTmpRect:Landroid/graphics/Rect;

.field final mTmpRect2:Landroid/graphics/Rect;

.field final mTmpRect3:Landroid/graphics/Rect;

.field final mTmpRectF:Landroid/graphics/RectF;

.field private final mTmpTaskIds:Landroid/util/SparseIntArray;

.field final mTmpTransform:Landroid/graphics/Matrix;

.field final mTmpWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mTokenMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mTransactionSequence:I

.field mTransitionAnimationScaleSetting:F

.field mTurnOnScreen:Z

.field private mViewServer:Lcom/android/server/wm/ViewServer;

.field mWaitingForConfig:Z

.field mWaitingForDrawn:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mWaitingForDrawnCallback:Ljava/lang/Runnable;

.field mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

.field mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

.field mWatermark:Lcom/android/server/wm/Watermark;

.field mWindowAnimationScaleSetting:F

.field final mWindowChangeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WindowChangeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

.field mWindowsChanged:Z

.field mWindowsFreezingScreen:I


# direct methods
.method static synthetic -get0(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/BoundsAnimationController;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

    #@2
    return-object v0
.end method

.method static synthetic -get1(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/KeyguardDisableHandler;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@2
    return-object v0
.end method

.method static synthetic -wrap0(Lcom/android/server/wm/WindowManagerService;)Z
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap1(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/WindowState;
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method static synthetic -wrap10(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateCircularDisplayMaskIfNeeded()V

    #@3
    return-void
.end method

.method static synthetic -wrap2(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->finishPositioning()V

    #@3
    return-void
.end method

.method static synthetic -wrap3(Lcom/android/server/wm/WindowManagerService;I)V
    .locals 0
    .param p1, "displayId"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayChangedLocked(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap4(Lcom/android/server/wm/WindowManagerService;I)V
    .locals 0
    .param p1, "displayId"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayRemovedLocked(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap5(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;II)V
    .locals 0
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "x"    # I
    .param p3, "y"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->handleTapOutsideTask(Lcom/android/server/wm/DisplayContent;II)V

    #@3
    return-void
.end method

.method static synthetic -wrap6(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyFocusChanged()V

    #@3
    return-void
.end method

.method static synthetic -wrap7(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyWindowsChanged()V

    #@3
    return-void
.end method

.method static synthetic -wrap8(Lcom/android/server/wm/WindowManagerService;II)V
    .locals 0
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showStrictModeViolation(II)V

    #@3
    return-void
.end method

.method static synthetic -wrap9(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;II)V
    .locals 0
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "startX"    # I
    .param p3, "startY"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->startScrollingTask(Lcom/android/server/wm/DisplayContent;II)V

    #@3
    return-void
.end method

.method static constructor <clinit>()V
    .locals 1

    #@0
    .prologue
    .line 260
    const-string/jumbo v0, "WindowManager"

    #@3
    sput-object v0, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@5
    .line 258
    return-void
.end method

.method private constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V
    .locals 6
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    #@0
    .prologue
    .line 955
    invoke-direct {p0}, Landroid/view/IWindowManager$Stub;-><init>()V

    #@3
    .line 361
    new-instance v3, Lcom/android/server/wm/WindowManagerService$1;

    #@5
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$1;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@8
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    #@a
    .line 382
    const/4 v3, 0x0

    #@b
    new-array v3, v3, [I

    #@d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@f
    .line 396
    new-instance v3, Lcom/android/server/policy/PhoneWindowManager;

    #@11
    invoke-direct {v3}, Lcom/android/server/policy/PhoneWindowManager;-><init>()V

    #@14
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@16
    .line 408
    new-instance v3, Landroid/util/ArraySet;

    #@18
    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    #@1b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@1d
    .line 415
    new-instance v3, Ljava/util/HashMap;

    #@1f
    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    #@22
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@24
    .line 420
    new-instance v3, Ljava/util/HashMap;

    #@26
    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    #@29
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@2b
    .line 426
    new-instance v3, Ljava/util/ArrayList;

    #@2d
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@30
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@32
    .line 433
    new-instance v3, Ljava/util/ArrayList;

    #@34
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@37
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    #@39
    .line 439
    new-instance v3, Ljava/util/ArrayList;

    #@3b
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@3e
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    #@40
    .line 457
    new-instance v3, Ljava/util/ArrayList;

    #@42
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@45
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@47
    .line 462
    new-instance v3, Ljava/util/ArrayList;

    #@49
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@4c
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@4e
    .line 467
    const/16 v3, 0x14

    #@50
    new-array v3, v3, [Lcom/android/server/wm/WindowState;

    #@52
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    #@54
    .line 472
    new-instance v3, Ljava/util/ArrayList;

    #@56
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@59
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@5b
    .line 479
    new-instance v3, Ljava/util/ArrayList;

    #@5d
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@60
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    #@62
    .line 485
    new-instance v3, Ljava/util/ArrayList;

    #@64
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@67
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@69
    .line 491
    new-instance v3, Ljava/util/ArrayList;

    #@6b
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@6e
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@70
    .line 496
    new-instance v3, Ljava/util/ArrayList;

    #@72
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@75
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@77
    .line 506
    const/16 v3, 0x14

    #@79
    new-array v3, v3, [Lcom/android/server/wm/WindowState;

    #@7b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@7d
    .line 513
    new-instance v3, Landroid/util/SparseArray;

    #@7f
    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    #@82
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@84
    .line 525
    const/16 v3, 0x9

    #@86
    new-array v3, v3, [F

    #@88
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    #@8a
    .line 526
    new-instance v3, Landroid/graphics/Rect;

    #@8c
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@8f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@91
    .line 527
    new-instance v3, Landroid/graphics/Rect;

    #@93
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@96
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@98
    .line 528
    new-instance v3, Landroid/graphics/Rect;

    #@9a
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@9d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    #@9f
    .line 529
    new-instance v3, Landroid/graphics/RectF;

    #@a1
    invoke-direct {v3}, Landroid/graphics/RectF;-><init>()V

    #@a4
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRectF:Landroid/graphics/RectF;

    #@a6
    .line 531
    new-instance v3, Landroid/graphics/Matrix;

    #@a8
    invoke-direct {v3}, Landroid/graphics/Matrix;-><init>()V

    #@ab
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTransform:Landroid/graphics/Matrix;

    #@ad
    .line 535
    const/4 v3, 0x0

    #@ae
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@b0
    .line 536
    const/4 v3, 0x0

    #@b1
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@b3
    .line 537
    const/4 v3, 0x0

    #@b4
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@b6
    .line 538
    const/4 v3, 0x0

    #@b7
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@b9
    .line 539
    const/4 v3, 0x0

    #@ba
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    #@bc
    .line 542
    const/4 v3, 0x0

    #@bd
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    #@bf
    .line 543
    const/4 v3, 0x0

    #@c0
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    #@c2
    .line 550
    new-instance v3, Landroid/util/SparseArray;

    #@c4
    const/4 v4, 0x2

    #@c5
    invoke-direct {v3, v4}, Landroid/util/SparseArray;-><init>(I)V

    #@c8
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@ca
    .line 552
    const/4 v3, 0x0

    #@cb
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@cd
    .line 553
    const/4 v3, -0x1

    #@ce
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@d0
    .line 554
    const/4 v3, 0x0

    #@d1
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@d3
    .line 558
    const/4 v3, 0x0

    #@d4
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateMode:I

    #@d6
    .line 561
    new-instance v3, Landroid/util/SparseIntArray;

    #@d8
    invoke-direct {v3}, Landroid/util/SparseIntArray;-><init>()V

    #@db
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    #@dd
    .line 563
    new-instance v3, Ljava/util/ArrayList;

    #@df
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@e2
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@e4
    .line 565
    const/4 v3, 0x0

    #@e5
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceResizableTasks:Z

    #@e7
    .line 580
    new-instance v3, Ljava/util/ArrayList;

    #@e9
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@ec
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@ee
    .line 583
    const/4 v3, 0x0

    #@ef
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    #@f1
    .line 584
    new-instance v3, Landroid/graphics/Rect;

    #@f3
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@f6
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    #@f8
    .line 586
    const/4 v3, 0x0

    #@f9
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@fb
    .line 587
    const-wide/16 v4, 0x0

    #@fd
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@ff
    .line 588
    const/4 v3, 0x0

    #@100
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@102
    .line 589
    const/4 v3, 0x0

    #@103
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@105
    .line 590
    const/4 v3, 0x0

    #@106
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@108
    .line 595
    const/4 v3, 0x0

    #@109
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@10b
    .line 597
    const/4 v3, 0x0

    #@10c
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@10e
    .line 598
    const/4 v3, 0x0

    #@10f
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@111
    .line 599
    const/4 v3, -0x1

    #@112
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@114
    .line 600
    const/4 v3, -0x1

    #@115
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@117
    .line 602
    const/4 v3, 0x0

    #@118
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@11a
    .line 605
    const/4 v3, 0x0

    #@11b
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@11d
    .line 607
    const/4 v3, 0x0

    #@11e
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@120
    .line 612
    new-instance v3, Landroid/content/res/Configuration;

    #@122
    invoke-direct {v3}, Landroid/content/res/Configuration;-><init>()V

    #@125
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@127
    .line 620
    const/4 v3, 0x0

    #@128
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@12a
    .line 622
    new-instance v3, Landroid/util/ArraySet;

    #@12c
    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    #@12f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@131
    .line 623
    new-instance v3, Landroid/util/ArraySet;

    #@133
    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    #@136
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@138
    .line 627
    new-instance v3, Landroid/util/DisplayMetrics;

    #@13a
    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    #@13d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@13f
    .line 628
    new-instance v3, Landroid/util/DisplayMetrics;

    #@141
    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    #@144
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@146
    .line 629
    new-instance v3, Landroid/util/DisplayMetrics;

    #@148
    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    #@14b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@14d
    .line 630
    new-instance v3, Landroid/util/DisplayMetrics;

    #@14f
    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    #@152
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    #@154
    .line 632
    new-instance v3, Lcom/android/server/wm/WindowManagerService$H;

    #@156
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$H;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@159
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@15b
    .line 634
    invoke-static {}, Landroid/view/Choreographer;->getInstance()Landroid/view/Choreographer;

    #@15e
    move-result-object v3

    #@15f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    #@161
    .line 636
    const/4 v3, 0x0

    #@162
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@164
    .line 637
    const/4 v3, 0x0

    #@165
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@167
    .line 641
    const/4 v3, 0x0

    #@168
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@16a
    .line 646
    const/4 v3, 0x0

    #@16b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@16d
    .line 647
    new-instance v3, Ljava/util/ArrayList;

    #@16f
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@172
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@174
    .line 651
    new-instance v3, Ljava/util/ArrayList;

    #@176
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@179
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@17b
    .line 661
    const/4 v3, 0x0

    #@17c
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    #@17e
    .line 719
    const/4 v3, 0x0

    #@17f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@181
    .line 724
    const/high16 v3, 0x3f800000    # 1.0f

    #@183
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@185
    .line 725
    const/high16 v3, 0x3f800000    # 1.0f

    #@187
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@189
    .line 726
    const/high16 v3, 0x3f800000    # 1.0f

    #@18b
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@18d
    .line 727
    const/4 v3, 0x0

    #@18e
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@190
    .line 744
    const/4 v3, 0x0

    #@191
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@193
    .line 759
    new-instance v3, Landroid/util/SparseArray;

    #@195
    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    #@198
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@19a
    .line 763
    new-instance v3, Landroid/util/SparseArray;

    #@19c
    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    #@19f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@1a1
    .line 865
    new-instance v3, Ljava/util/ArrayList;

    #@1a3
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@1a6
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@1a8
    .line 866
    const/4 v3, 0x0

    #@1a9
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@1ab
    .line 873
    new-instance v3, Landroid/content/res/Configuration;

    #@1ad
    invoke-direct {v3}, Landroid/content/res/Configuration;-><init>()V

    #@1b0
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@1b2
    .line 885
    new-instance v3, Ljava/util/ArrayList;

    #@1b4
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@1b7
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@1b9
    .line 892
    new-instance v3, Lcom/android/server/wm/DisplayContentList;

    #@1bb
    invoke-direct {v3}, Lcom/android/server/wm/DisplayContentList;-><init>()V

    #@1be
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@1c0
    .line 896
    new-instance v3, Lcom/android/server/wm/WindowManagerService$2;

    #@1c2
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$2;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@1c5
    .line 895
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    #@1c7
    .line 8013
    new-instance v3, Lcom/android/server/wm/InputMonitor;

    #@1c9
    invoke-direct {v3, p0}, Lcom/android/server/wm/InputMonitor;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@1cc
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@1ce
    .line 11426
    new-instance v3, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@1d0
    const/4 v4, 0x0

    #@1d1
    invoke-direct {v3, v4}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;-><init>(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)V

    #@1d4
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@1d6
    .line 957
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1d8
    .line 958
    iput-boolean p3, p0, Lcom/android/server/wm/WindowManagerService;->mHaveInputMethods:Z

    #@1da
    .line 959
    iput-boolean p4, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    #@1dc
    .line 960
    iput-boolean p5, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    #@1de
    .line 961
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1e1
    move-result-object v3

    #@1e2
    .line 962
    const v4, 0x112000b

    #@1e5
    .line 961
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1e8
    move-result v3

    #@1e9
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mLimitedAlphaCompositing:Z

    #@1eb
    .line 963
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1ee
    move-result-object v3

    #@1ef
    .line 964
    const v4, 0x1120084

    #@1f2
    .line 963
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1f5
    move-result v3

    #@1f6
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@1f8
    .line 965
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1fb
    move-result-object v3

    #@1fc
    .line 966
    const v4, 0x11200a0

    #@1ff
    .line 965
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@202
    move-result v3

    #@203
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@205
    .line 967
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@208
    move-result-object v3

    #@209
    .line 968
    const v4, 0x10e0095

    #@20c
    .line 967
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getInteger(I)I

    #@20f
    move-result v3

    #@210
    int-to-long v4, v3

    #@211
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    #@213
    .line 969
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@216
    move-result-object v3

    #@217
    .line 970
    const v4, 0x11200a2

    #@21a
    .line 969
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@21d
    move-result v3

    #@21e
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAllowAnimationsInLowPowerMode:Z

    #@220
    .line 971
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@222
    .line 972
    const-class v3, Landroid/hardware/display/DisplayManagerInternal;

    #@224
    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@227
    move-result-object v3

    #@228
    check-cast v3, Landroid/hardware/display/DisplayManagerInternal;

    #@22a
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@22c
    .line 973
    new-instance v3, Lcom/android/server/wm/DisplaySettings;

    #@22e
    invoke-direct {v3}, Lcom/android/server/wm/DisplaySettings;-><init>()V

    #@231
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@233
    .line 974
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@235
    invoke-virtual {v3}, Lcom/android/server/wm/DisplaySettings;->readSettingsLocked()V

    #@238
    .line 976
    new-instance v3, Lcom/android/server/wm/WallpaperController;

    #@23a
    invoke-direct {v3, p0}, Lcom/android/server/wm/WallpaperController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@23d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@23f
    .line 977
    new-instance v3, Lcom/android/server/wm/WindowSurfacePlacer;

    #@241
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowSurfacePlacer;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@244
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@246
    .line 978
    new-instance v3, Lcom/android/server/wm/WindowLayersController;

    #@248
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowLayersController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@24b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@24d
    .line 980
    const-class v3, Landroid/view/WindowManagerPolicy;

    #@24f
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@251
    invoke-static {v3, v4}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    #@254
    .line 982
    new-instance v3, Lcom/android/server/wm/PointerEventDispatcher;

    #@256
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@258
    const-string/jumbo v5, "WindowManager"

    #@25b
    invoke-virtual {v4, v5}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    #@25e
    move-result-object v4

    #@25f
    invoke-direct {v3, v4}, Lcom/android/server/wm/PointerEventDispatcher;-><init>(Landroid/view/InputChannel;)V

    #@262
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@264
    .line 984
    new-instance v3, Landroid/view/SurfaceSession;

    #@266
    invoke-direct {v3}, Landroid/view/SurfaceSession;-><init>()V

    #@269
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@26b
    .line 985
    const-string/jumbo v3, "display"

    #@26e
    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@271
    move-result-object v3

    #@272
    check-cast v3, Landroid/hardware/display/DisplayManager;

    #@274
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@276
    .line 986
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@278
    invoke-virtual {v3}, Landroid/hardware/display/DisplayManager;->getDisplays()[Landroid/view/Display;

    #@27b
    move-result-object v3

    #@27c
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    #@27e
    .line 987
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    #@280
    const/4 v3, 0x0

    #@281
    array-length v5, v4

    #@282
    :goto_0
    if-ge v3, v5, :cond_0

    #@284
    aget-object v0, v4, v3

    #@286
    .line 988
    .local v0, "display":Landroid/view/Display;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    #@289
    .line 987
    add-int/lit8 v3, v3, 0x1

    #@28b
    goto :goto_0

    #@28c
    .line 991
    .end local v0    # "display":Landroid/view/Display;
    :cond_0
    new-instance v3, Lcom/android/server/wm/KeyguardDisableHandler;

    #@28e
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@290
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@292
    invoke-direct {v3, v4, v5}, Lcom/android/server/wm/KeyguardDisableHandler;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy;)V

    #@295
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@297
    .line 993
    const-string/jumbo v3, "power"

    #@29a
    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@29d
    move-result-object v3

    #@29e
    check-cast v3, Landroid/os/PowerManager;

    #@2a0
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@2a2
    .line 994
    const-class v3, Landroid/os/PowerManagerInternal;

    #@2a4
    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@2a7
    move-result-object v3

    #@2a8
    check-cast v3, Landroid/os/PowerManagerInternal;

    #@2aa
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@2ac
    .line 995
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@2ae
    .line 996
    new-instance v4, Lcom/android/server/wm/WindowManagerService$5;

    #@2b0
    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowManagerService$5;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@2b3
    .line 995
    invoke-virtual {v3, v4}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(Landroid/os/PowerManagerInternal$LowPowerModeListener;)V

    #@2b6
    .line 1007
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@2b8
    invoke-virtual {v3}, Landroid/os/PowerManagerInternal;->getLowPowerModeEnabled()Z

    #@2bb
    move-result v3

    #@2bc
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@2be
    .line 1008
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@2c0
    .line 1009
    const-string/jumbo v4, "SCREEN_FROZEN"

    #@2c3
    const/4 v5, 0x1

    #@2c4
    .line 1008
    invoke-virtual {v3, v5, v4}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@2c7
    move-result-object v3

    #@2c8
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@2ca
    .line 1010
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@2cc
    const/4 v4, 0x0

    #@2cd
    invoke-virtual {v3, v4}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    #@2d0
    .line 1012
    new-instance v3, Lcom/android/server/wm/AppTransition;

    #@2d2
    invoke-direct {v3, p1, p0}, Lcom/android/server/wm/AppTransition;-><init>(Landroid/content/Context;Lcom/android/server/wm/WindowManagerService;)V

    #@2d5
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2d7
    .line 1013
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2d9
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    #@2db
    invoke-virtual {v3, v4}, Lcom/android/server/wm/AppTransition;->registerListenerLocked(Landroid/view/WindowManagerInternal$AppTransitionListener;)V

    #@2de
    .line 1016
    new-instance v3, Lcom/android/server/wm/BoundsAnimationController;

    #@2e0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2e2
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    #@2e5
    move-result-object v5

    #@2e6
    invoke-direct {v3, v4, v5}, Lcom/android/server/wm/BoundsAnimationController;-><init>(Lcom/android/server/wm/AppTransition;Landroid/os/Handler;)V

    #@2e9
    .line 1015
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

    #@2eb
    .line 1018
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    #@2ee
    move-result-object v3

    #@2ef
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@2f1
    .line 1019
    const-class v3, Landroid/app/ActivityManagerInternal;

    #@2f3
    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@2f6
    move-result-object v3

    #@2f7
    check-cast v3, Landroid/app/ActivityManagerInternal;

    #@2f9
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    #@2fb
    .line 1020
    const-string/jumbo v3, "appops"

    #@2fe
    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@301
    move-result-object v3

    #@302
    check-cast v3, Landroid/app/AppOpsManager;

    #@304
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@306
    .line 1022
    new-instance v2, Lcom/android/server/wm/WindowManagerService$6;

    #@308
    invoke-direct {v2, p0}, Lcom/android/server/wm/WindowManagerService$6;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@30b
    .line 1027
    .local v2, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@30d
    const/16 v4, 0x18

    #@30f
    const/4 v5, 0x0

    #@310
    invoke-virtual {v3, v4, v5, v2}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    #@313
    .line 1028
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@315
    const/16 v4, 0x2d

    #@317
    const/4 v5, 0x0

    #@318
    invoke-virtual {v3, v4, v5, v2}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    #@31b
    .line 1031
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@31e
    move-result-object v3

    #@31f
    .line 1032
    const-string/jumbo v4, "window_animation_scale"

    #@322
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@324
    .line 1031
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@327
    move-result v3

    #@328
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@32a
    .line 1033
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@32d
    move-result-object v3

    #@32e
    .line 1034
    const-string/jumbo v4, "transition_animation_scale"

    #@331
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@333
    .line 1033
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@336
    move-result v3

    #@337
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@339
    .line 1035
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@33c
    move-result-object v3

    #@33d
    .line 1036
    const-string/jumbo v4, "animator_duration_scale"

    #@340
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@342
    .line 1035
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@345
    move-result v3

    #@346
    invoke-direct {p0, v3}, Lcom/android/server/wm/WindowManagerService;->setAnimatorDurationScale(F)V

    #@349
    .line 1039
    new-instance v1, Landroid/content/IntentFilter;

    #@34b
    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    #@34e
    .line 1040
    .local v1, "filter":Landroid/content/IntentFilter;
    const-string/jumbo v3, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    #@351
    invoke-virtual {v1, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    #@354
    .line 1041
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@356
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    #@358
    invoke-virtual {v3, v4, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@35b
    .line 1043
    new-instance v3, Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    #@35d
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@360
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    #@362
    .line 1045
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@364
    .line 1046
    const-string/jumbo v4, "WindowManager"

    #@367
    const v5, 0x2000000a

    #@36a
    .line 1045
    invoke-virtual {v3, v5, v4}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@36d
    move-result-object v3

    #@36e
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@370
    .line 1047
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@372
    const/4 v4, 0x0

    #@373
    invoke-virtual {v3, v4}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    #@376
    .line 1049
    new-instance v3, Lcom/android/server/wm/WindowAnimator;

    #@378
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowAnimator;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@37b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@37d
    .line 1051
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@380
    move-result-object v3

    #@381
    .line 1052
    const v4, 0x1120031

    #@384
    .line 1051
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@387
    move-result v3

    #@388
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAllowTheaterModeWakeFromLayout:Z

    #@38a
    .line 1055
    const-class v3, Landroid/view/WindowManagerInternal;

    #@38c
    new-instance v4, Lcom/android/server/wm/WindowManagerService$LocalService;

    #@38e
    const/4 v5, 0x0

    #@38f
    invoke-direct {v4, p0, v5}, Lcom/android/server/wm/WindowManagerService$LocalService;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$LocalService;)V

    #@392
    invoke-static {v3, v4}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    #@395
    .line 1056
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->initPolicy()V

    #@398
    .line 1059
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    #@39b
    move-result-object v3

    #@39c
    invoke-virtual {v3, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    #@39f
    .line 1061
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@3a2
    .line 1063
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->createWatermarkInTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3a5
    .line 1065
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@3a8
    .line 1068
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->showEmulatorDisplayOverlayIfNeeded()V

    #@3ab
    .line 956
    return-void

    #@3ac
    .line 1064
    :catchall_0
    move-exception v3

    #@3ad
    .line 1065
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@3b0
    .line 1064
    throw v3
.end method

.method synthetic constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZLcom/android/server/wm/WindowManagerService;)V
    .locals 0
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    #@0
    .prologue
    invoke-direct/range {p0 .. p5}, Lcom/android/server/wm/WindowManagerService;-><init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    #@3
    return-void
.end method

.method private addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I
    .locals 27
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1167
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v10

    #@4
    .line 1168
    .local v10, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v10, :cond_0

    #@6
    .line 1170
    const/16 v25, 0x0

    #@8
    return v25

    #@9
    .line 1172
    :cond_0
    move-object/from16 v0, p1

    #@b
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@d
    .line 1173
    .local v9, "client":Landroid/view/IWindow;
    move-object/from16 v0, p1

    #@f
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@11
    move-object/from16 v17, v0

    #@13
    .line 1175
    .local v17, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@16
    move-result-object v24

    #@17
    .line 1176
    .local v24, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    #@19
    move-object/from16 v1, v17

    #@1b
    invoke-direct {v0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@1e
    move-result-object v19

    #@1f
    .line 1177
    .local v19, "tokenWindowList":Lcom/android/server/wm/WindowList;
    const/16 v20, 0x0

    #@21
    .line 1178
    .local v20, "tokenWindowsPos":I
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@24
    move-result v25

    #@25
    if-nez v25, :cond_1

    #@27
    .line 1179
    move-object/from16 v0, p0

    #@29
    move-object/from16 v1, p1

    #@2b
    move-object/from16 v2, v17

    #@2d
    move-object/from16 v3, v24

    #@2f
    move-object/from16 v4, v19

    #@31
    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService;->addAppWindowToTokenListLocked(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;Lcom/android/server/wm/WindowList;)I

    #@34
    move-result v25

    #@35
    return v25

    #@36
    .line 1187
    :cond_1
    const/4 v13, 0x0

    #@37
    .line 1189
    .local v13, "pos":Lcom/android/server/wm/WindowState;
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@3a
    move-result-object v16

    #@3b
    .line 1191
    .local v16, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/16 v18, -0x1

    #@3d
    .line 1192
    .local v18, "tokenNdx":I
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    #@40
    move-result v25

    #@41
    add-int/lit8 v15, v25, -0x1

    #@43
    .end local v13    # "pos":Lcom/android/server/wm/WindowState;
    .local v15, "taskNdx":I
    :goto_0
    if-ltz v15, :cond_3

    #@45
    .line 1193
    move-object/from16 v0, v16

    #@47
    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@4a
    move-result-object v25

    #@4b
    check-cast v25, Lcom/android/server/wm/Task;

    #@4d
    move-object/from16 v0, v25

    #@4f
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@51
    move-object/from16 v21, v0

    #@53
    .line 1194
    .local v21, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/AppTokenList;->size()I

    #@56
    move-result v25

    #@57
    add-int/lit8 v18, v25, -0x1

    #@59
    :goto_1
    if-ltz v18, :cond_2

    #@5b
    .line 1195
    move-object/from16 v0, v21

    #@5d
    move/from16 v1, v18

    #@5f
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@62
    move-result-object v14

    #@63
    check-cast v14, Lcom/android/server/wm/AppWindowToken;

    #@65
    .line 1196
    .local v14, "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v17

    #@67
    if-ne v14, v0, :cond_5

    #@69
    .line 1197
    add-int/lit8 v18, v18, -0x1

    #@6b
    .line 1198
    if-gez v18, :cond_2

    #@6d
    .line 1199
    add-int/lit8 v15, v15, -0x1

    #@6f
    .line 1200
    if-ltz v15, :cond_2

    #@71
    .line 1201
    move-object/from16 v0, v16

    #@73
    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@76
    move-result-object v25

    #@77
    check-cast v25, Lcom/android/server/wm/Task;

    #@79
    move-object/from16 v0, v25

    #@7b
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@7d
    move-object/from16 v25, v0

    #@7f
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/AppTokenList;->size()I

    #@82
    move-result v25

    #@83
    add-int/lit8 v18, v25, -0x1

    #@85
    .line 1215
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_2
    if-ltz v18, :cond_7

    #@87
    .line 1224
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_3
    if-eqz v13, :cond_9

    #@89
    .line 1226
    move-object/from16 v0, p0

    #@8b
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@8d
    move-object/from16 v25, v0

    #@8f
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@91
    move-object/from16 v26, v0

    #@93
    invoke-interface/range {v26 .. v26}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@96
    move-result-object v26

    #@97
    invoke-virtual/range {v25 .. v26}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@9a
    move-result-object v7

    #@9b
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@9d
    .line 1227
    .local v7, "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_4

    #@9f
    .line 1229
    move-object/from16 v0, p0

    #@a1
    invoke-direct {v0, v7, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@a4
    move-result-object v19

    #@a5
    .line 1230
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@a8
    move-result v5

    #@a9
    .line 1231
    .local v5, "NC":I
    if-lez v5, :cond_4

    #@ab
    .line 1232
    const/16 v25, 0x0

    #@ad
    move-object/from16 v0, v19

    #@af
    move/from16 v1, v25

    #@b1
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@b4
    move-result-object v8

    #@b5
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@b7
    .line 1233
    .local v8, "bottom":Lcom/android/server/wm/WindowState;
    iget v0, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@b9
    move/from16 v25, v0

    #@bb
    if-gez v25, :cond_4

    #@bd
    .line 1234
    move-object v13, v8

    #@be
    .line 1238
    .end local v5    # "NC":I
    .end local v8    # "bottom":Lcom/android/server/wm/WindowState;
    :cond_4
    move-object/from16 v0, p0

    #@c0
    move-object/from16 v1, p1

    #@c2
    invoke-direct {v0, v13, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@c5
    .line 1239
    return v20

    #@c6
    .line 1210
    .end local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5
    move-object/from16 v0, p0

    #@c8
    invoke-direct {v0, v14, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@cb
    move-result-object v19

    #@cc
    .line 1211
    iget-boolean v0, v14, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@ce
    move/from16 v25, v0

    #@d0
    if-nez v25, :cond_6

    #@d2
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@d5
    move-result v25

    #@d6
    if-lez v25, :cond_6

    #@d8
    .line 1212
    const/16 v25, 0x0

    #@da
    move-object/from16 v0, v19

    #@dc
    move/from16 v1, v25

    #@de
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@e1
    move-result-object v13

    #@e2
    check-cast v13, Lcom/android/server/wm/WindowState;

    #@e4
    .line 1194
    :cond_6
    add-int/lit8 v18, v18, -0x1

    #@e6
    goto/16 :goto_1

    #@e8
    .line 1192
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_7
    add-int/lit8 v15, v15, -0x1

    #@ea
    goto/16 :goto_0

    #@ec
    .line 1244
    :cond_8
    add-int/lit8 v15, v15, -0x1

    #@ee
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_9
    if-ltz v15, :cond_b

    #@f0
    .line 1245
    move-object/from16 v0, v16

    #@f2
    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@f5
    move-result-object v25

    #@f6
    check-cast v25, Lcom/android/server/wm/Task;

    #@f8
    move-object/from16 v0, v25

    #@fa
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@fc
    move-object/from16 v21, v0

    #@fe
    .line 1246
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :goto_2
    if-ltz v18, :cond_a

    #@100
    .line 1247
    move-object/from16 v0, v21

    #@102
    move/from16 v1, v18

    #@104
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@107
    move-result-object v14

    #@108
    check-cast v14, Lcom/android/server/wm/AppWindowToken;

    #@10a
    .line 1248
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    #@10c
    invoke-direct {v0, v14, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@10f
    move-result-object v19

    #@110
    .line 1249
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@113
    move-result v6

    #@114
    .line 1250
    .local v6, "NW":I
    if-lez v6, :cond_d

    #@116
    .line 1251
    add-int/lit8 v25, v6, -0x1

    #@118
    move-object/from16 v0, v19

    #@11a
    move/from16 v1, v25

    #@11c
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@11f
    move-result-object v13

    #@120
    check-cast v13, Lcom/android/server/wm/WindowState;

    #@122
    .line 1255
    .end local v6    # "NW":I
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_a
    if-ltz v18, :cond_8

    #@124
    .line 1261
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_b
    if-eqz v13, :cond_e

    #@126
    .line 1264
    move-object/from16 v0, p0

    #@128
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@12a
    move-object/from16 v25, v0

    #@12c
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@12e
    move-object/from16 v26, v0

    #@130
    invoke-interface/range {v26 .. v26}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@133
    move-result-object v26

    #@134
    invoke-virtual/range {v25 .. v26}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@137
    move-result-object v7

    #@138
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@13a
    .line 1265
    .restart local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_c

    #@13c
    .line 1266
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@13e
    move-object/from16 v25, v0

    #@140
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowList;->size()I

    #@143
    move-result v5

    #@144
    .line 1267
    .restart local v5    # "NC":I
    if-lez v5, :cond_c

    #@146
    .line 1268
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@148
    move-object/from16 v25, v0

    #@14a
    add-int/lit8 v26, v5, -0x1

    #@14c
    invoke-virtual/range {v25 .. v26}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@14f
    move-result-object v22

    #@150
    check-cast v22, Lcom/android/server/wm/WindowState;

    #@152
    .line 1269
    .local v22, "top":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v22

    #@154
    iget v0, v0, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@156
    move/from16 v25, v0

    #@158
    if-ltz v25, :cond_c

    #@15a
    .line 1270
    move-object/from16 v13, v22

    #@15c
    .line 1274
    .end local v5    # "NC":I
    .end local v22    # "top":Lcom/android/server/wm/WindowState;
    :cond_c
    move-object/from16 v0, p0

    #@15e
    move-object/from16 v1, p1

    #@160
    invoke-direct {v0, v13, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@163
    .line 1275
    return v20

    #@164
    .line 1246
    .end local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "NW":I
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_d
    add-int/lit8 v18, v18, -0x1

    #@166
    goto :goto_2

    #@167
    .line 1279
    .end local v6    # "NW":I
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_e
    move-object/from16 v0, p1

    #@169
    iget v12, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@16b
    .line 1281
    .local v12, "myLayer":I
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/WindowList;->size()I

    #@16e
    move-result v25

    #@16f
    add-int/lit8 v11, v25, -0x1

    #@171
    .local v11, "i":I
    :goto_3
    if-ltz v11, :cond_f

    #@173
    .line 1282
    move-object/from16 v0, v24

    #@175
    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@178
    move-result-object v23

    #@179
    check-cast v23, Lcom/android/server/wm/WindowState;

    #@17b
    .line 1287
    .local v23, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v23

    #@17d
    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@17f
    move/from16 v25, v0

    #@181
    move/from16 v0, v25

    #@183
    if-gt v0, v12, :cond_10

    #@185
    move-object/from16 v0, v23

    #@187
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@189
    move-object/from16 v25, v0

    #@18b
    move-object/from16 v0, v25

    #@18d
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@18f
    move/from16 v25, v0

    #@191
    const/16 v26, 0x7f2

    #@193
    move/from16 v0, v25

    #@195
    move/from16 v1, v26

    #@197
    if-eq v0, v1, :cond_10

    #@199
    .line 1294
    .end local v23    # "w":Lcom/android/server/wm/WindowState;
    :cond_f
    add-int/lit8 v25, v11, 0x1

    #@19b
    move-object/from16 v0, v24

    #@19d
    move/from16 v1, v25

    #@19f
    move-object/from16 v2, p1

    #@1a1
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@1a4
    .line 1295
    const/16 v25, 0x1

    #@1a6
    move/from16 v0, v25

    #@1a8
    move-object/from16 v1, p0

    #@1aa
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@1ac
    .line 1296
    return v20

    #@1ad
    .line 1281
    .restart local v23    # "w":Lcom/android/server/wm/WindowState;
    :cond_10
    add-int/lit8 v11, v11, -0x1

    #@1af
    goto :goto_3
.end method

.method private addAppWindowToTokenListLocked(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;Lcom/android/server/wm/WindowList;)I
    .locals 9
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "token"    # Lcom/android/server/wm/WindowToken;
    .param p3, "windows"    # Lcom/android/server/wm/WindowList;
    .param p4, "tokenWindowList"    # Lcom/android/server/wm/WindowList;

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v7, 0x0

    #@2
    .line 1305
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    #@6
    if-ne v6, v8, :cond_0

    #@8
    .line 1307
    invoke-virtual {p4, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@b
    move-result-object v2

    #@c
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@e
    .line 1308
    .local v2, "lowestWindow":Lcom/android/server/wm/WindowState;
    invoke-direct {p0, v2, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@11
    .line 1309
    iget-object v6, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-direct {p0, v2, v6}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@16
    move-result v4

    #@17
    .line 1337
    .end local v2    # "lowestWindow":Lcom/android/server/wm/WindowState;
    .local v4, "tokenWindowsPos":I
    :goto_0
    return v4

    #@18
    .line 1311
    .end local v4    # "tokenWindowsPos":I
    :cond_0
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1a
    .line 1312
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p4}, Lcom/android/server/wm/WindowList;->size()I

    #@1d
    move-result v5

    #@1e
    .line 1313
    .local v5, "windowListPos":I
    add-int/lit8 v6, v5, -0x1

    #@20
    invoke-virtual {p4, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@23
    move-result-object v1

    #@24
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@26
    .line 1314
    .local v1, "lastWindow":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_1

    #@28
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@2a
    if-ne v1, v6, :cond_1

    #@2c
    .line 1315
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@2f
    .line 1316
    iget-object v6, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@31
    invoke-direct {p0, v1, v6}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@34
    move-result v4

    #@35
    .restart local v4    # "tokenWindowsPos":I
    goto :goto_0

    #@36
    .line 1318
    .end local v4    # "tokenWindowsPos":I
    :cond_1
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I

    #@39
    move-result v3

    #@3a
    .line 1326
    .local v3, "newIdx":I
    add-int/lit8 v6, v3, 0x1

    #@3c
    invoke-virtual {p3, v6, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@3f
    .line 1327
    if-gez v3, :cond_2

    #@41
    .line 1329
    const/4 v4, 0x0

    #@42
    .line 1334
    .restart local v4    # "tokenWindowsPos":I
    :goto_1
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@44
    goto :goto_0

    #@45
    .line 1332
    .end local v4    # "tokenWindowsPos":I
    :cond_2
    invoke-virtual {p3, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@48
    move-result-object v6

    #@49
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@4b
    iget-object v7, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@4d
    .line 1331
    invoke-direct {p0, v6, v7}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@50
    move-result v6

    #@51
    add-int/lit8 v4, v6, 0x1

    #@53
    .restart local v4    # "tokenWindowsPos":I
    goto :goto_1
.end method

.method private addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 12
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    #@0
    .prologue
    .line 1368
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@2
    .line 1369
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@5
    move-result-object v2

    #@6
    .line 1370
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v2, :cond_0

    #@8
    .line 1371
    return-void

    #@9
    .line 1373
    :cond_0
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@b
    .line 1375
    .local v1, "attached":Lcom/android/server/wm/WindowState;
    invoke-direct {p0, v6, v2}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@e
    move-result-object v7

    #@f
    .line 1379
    .local v7, "tokenWindowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@12
    move-result v0

    #@13
    .line 1380
    .local v0, "NA":I
    iget v5, p1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@15
    .line 1381
    .local v5, "sublayer":I
    const/high16 v4, -0x80000000

    #@17
    .line 1382
    .local v4, "largestSublayer":I
    const/4 v10, 0x0

    #@18
    .line 1384
    .local v10, "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    const/4 v3, 0x0

    #@19
    .end local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    .local v3, "i":I
    :goto_0
    if-ge v3, v0, :cond_4

    #@1b
    .line 1385
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1e
    move-result-object v8

    #@1f
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@21
    .line 1386
    .local v8, "w":Lcom/android/server/wm/WindowState;
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@23
    .line 1387
    .local v9, "wSublayer":I
    if-lt v9, v4, :cond_1

    #@25
    .line 1388
    move v4, v9

    #@26
    .line 1389
    move-object v10, v8

    #@27
    .line 1391
    :cond_1
    if-gez v5, :cond_7

    #@29
    .line 1394
    if-lt v9, v5, :cond_9

    #@2b
    .line 1395
    if-eqz p2, :cond_2

    #@2d
    .line 1397
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2f
    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@32
    .line 1399
    :cond_2
    if-ltz v9, :cond_3

    #@34
    move-object v8, v1

    #@35
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@38
    .line 1415
    .end local v9    # "wSublayer":I
    :cond_4
    :goto_1
    if-lt v3, v0, :cond_6

    #@3a
    .line 1416
    if-eqz p2, :cond_5

    #@3c
    .line 1418
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3e
    invoke-virtual {v11, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@41
    .line 1420
    :cond_5
    if-gez v5, :cond_a

    #@43
    .line 1421
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@46
    .line 1367
    :cond_6
    :goto_2
    return-void

    #@47
    .line 1405
    .restart local v8    # "w":Lcom/android/server/wm/WindowState;
    .restart local v9    # "wSublayer":I
    :cond_7
    if-le v9, v5, :cond_9

    #@49
    .line 1406
    if-eqz p2, :cond_8

    #@4b
    .line 1408
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@4d
    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@50
    .line 1410
    :cond_8
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@53
    goto :goto_1

    #@54
    .line 1384
    :cond_9
    add-int/lit8 v3, v3, 0x1

    #@56
    goto :goto_0

    #@57
    .line 1423
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "wSublayer":I
    :cond_a
    if-ltz v4, :cond_b

    #@59
    :goto_3
    invoke-direct {p0, v10, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@5c
    goto :goto_2

    #@5d
    :cond_b
    move-object v10, v1

    #@5e
    .line 1425
    goto :goto_3
.end method

.method private addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .locals 6
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1341
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v3

    #@4
    .line 1344
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    iget v1, p1, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@6
    .line 1346
    .local v1, "myLayer":I
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    #@9
    move-result v4

    #@a
    add-int/lit8 v0, v4, -0x1

    #@c
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    #@e
    .line 1347
    invoke-virtual {v3, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v2

    #@12
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@14
    .line 1348
    .local v2, "otherWin":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getBaseType()I

    #@17
    move-result v4

    #@18
    const/16 v5, 0x7dd

    #@1a
    if-eq v4, v5, :cond_1

    #@1c
    iget v4, v2, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@1e
    if-gt v4, v1, :cond_1

    #@20
    .line 1360
    .end local v2    # "otherWin":Lcom/android/server/wm/WindowState;
    :cond_0
    add-int/lit8 v0, v0, 0x1

    #@22
    .line 1363
    invoke-virtual {v3, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@25
    .line 1364
    const/4 v4, 0x1

    #@26
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@28
    .line 1340
    return-void

    #@29
    .line 1346
    .restart local v2    # "otherWin":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, -0x1

    #@2b
    goto :goto_0
.end method

.method private addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 4
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    #@0
    .prologue
    .line 1434
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@2
    if-nez v3, :cond_3

    #@4
    .line 1435
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@6
    .line 1436
    .local v1, "token":Lcom/android/server/wm/WindowToken;
    const/4 v2, 0x0

    #@7
    .line 1437
    .local v2, "tokenWindowsPos":I
    iget-object v3, v1, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@9
    if-eqz v3, :cond_2

    #@b
    .line 1438
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I

    #@e
    move-result v2

    #@f
    .line 1442
    :goto_0
    if-eqz p2, :cond_0

    #@11
    .line 1444
    iget-object v3, v1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-virtual {v3, v2, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@16
    .line 1450
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v2    # "tokenWindowsPos":I
    :cond_0
    :goto_1
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@18
    .line 1451
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_1

    #@1a
    .line 1452
    if-eqz p2, :cond_1

    #@1c
    .line 1453
    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppWindowToken;->addWindow(Lcom/android/server/wm/WindowState;)V

    #@1f
    .line 1431
    :cond_1
    return-void

    #@20
    .line 1440
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v1    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v2    # "tokenWindowsPos":I
    :cond_2
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    #@23
    goto :goto_0

    #@24
    .line 1447
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v2    # "tokenWindowsPos":I
    :cond_3
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V

    #@27
    goto :goto_1
.end method

.method private adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V
    .locals 3
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotation"    # I
    .param p3, "uiMode"    # I
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    #@0
    .prologue
    .line 7508
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v2, p4, p5, p2, p3}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(IIII)I

    #@5
    move-result v1

    #@6
    .line 7509
    .local v1, "width":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@8
    if-ge v1, v2, :cond_0

    #@a
    .line 7510
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@c
    .line 7512
    :cond_0
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@e
    if-le v1, v2, :cond_1

    #@10
    .line 7513
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@12
    .line 7515
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@14
    invoke-interface {v2, p4, p5, p2, p3}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(IIII)I

    #@17
    move-result v0

    #@18
    .line 7516
    .local v0, "height":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@1a
    if-ge v0, v2, :cond_2

    #@1c
    .line 7517
    iput v0, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@1e
    .line 7519
    :cond_2
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@20
    if-le v0, v2, :cond_3

    #@22
    .line 7520
    iput v0, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@24
    .line 7506
    :cond_3
    return-void
.end method

.method private applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z
    .locals 19
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "transit"    # I
    .param p4, "enter"    # Z
    .param p5, "isVoiceInteraction"    # Z

    #@0
    .prologue
    .line 3272
    const-string/jumbo v2, "WM#applyAnimationLocked"

    #@3
    const-wide/16 v6, 0x20

    #@5
    invoke-static {v6, v7, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@8
    .line 3273
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@b
    move-result v2

    #@c
    if-eqz v2, :cond_5

    #@e
    .line 3274
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@11
    move-result-object v15

    #@12
    .line 3275
    .local v15, "displayInfo":Landroid/view/DisplayInfo;
    iget v0, v15, Landroid/view/DisplayInfo;->appWidth:I

    #@14
    move/from16 v17, v0

    #@16
    .line 3276
    .local v17, "width":I
    iget v0, v15, Landroid/view/DisplayInfo;->appHeight:I

    #@18
    move/from16 v16, v0

    #@1a
    .line 3281
    .local v16, "height":I
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@1d
    move-result-object v18

    #@1e
    .line 3282
    .local v18, "win":Lcom/android/server/wm/WindowState;
    new-instance v8, Landroid/graphics/Rect;

    #@20
    const/4 v2, 0x0

    #@21
    const/4 v6, 0x0

    #@22
    move/from16 v0, v17

    #@24
    move/from16 v1, v16

    #@26
    invoke-direct {v8, v2, v6, v0, v1}, Landroid/graphics/Rect;-><init>(IIII)V

    #@29
    .line 3283
    .local v8, "frame":Landroid/graphics/Rect;
    new-instance v9, Landroid/graphics/Rect;

    #@2b
    .line 3284
    iget v2, v15, Landroid/view/DisplayInfo;->logicalWidth:I

    #@2d
    iget v6, v15, Landroid/view/DisplayInfo;->logicalHeight:I

    #@2f
    .line 3283
    const/4 v7, 0x0

    #@30
    const/4 v12, 0x0

    #@31
    invoke-direct {v9, v7, v12, v2, v6}, Landroid/graphics/Rect;-><init>(IIII)V

    #@34
    .line 3285
    .local v9, "displayFrame":Landroid/graphics/Rect;
    new-instance v10, Landroid/graphics/Rect;

    #@36
    invoke-direct {v10}, Landroid/graphics/Rect;-><init>()V

    #@39
    .line 3286
    .local v10, "insets":Landroid/graphics/Rect;
    const/4 v11, 0x0

    #@3a
    .line 3287
    .local v11, "surfaceInsets":Landroid/graphics/Rect;
    if-eqz v18, :cond_3

    #@3c
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->inFreeformWorkspace()Z

    #@3f
    move-result v13

    #@40
    .line 3288
    :goto_0
    if-eqz v18, :cond_0

    #@42
    .line 3293
    if-eqz v13, :cond_4

    #@44
    .line 3294
    move-object/from16 v0, v18

    #@46
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@48
    invoke-virtual {v8, v2}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@4b
    .line 3298
    :goto_1
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    #@4e
    move-result-object v2

    #@4f
    iget-object v11, v2, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@51
    .line 3299
    .local v11, "surfaceInsets":Landroid/graphics/Rect;
    move-object/from16 v0, v18

    #@53
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@55
    invoke-virtual {v10, v2}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@58
    .line 3302
    .end local v11    # "surfaceInsets":Landroid/graphics/Rect;
    :cond_0
    move-object/from16 v0, p1

    #@5a
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@5c
    if-eqz v2, :cond_1

    #@5e
    .line 3306
    const/16 p4, 0x0

    #@60
    .line 3311
    .end local p4    # "enter":Z
    :cond_1
    move-object/from16 v0, p0

    #@62
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@64
    move-object/from16 v0, p0

    #@66
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@68
    iget v6, v6, Landroid/content/res/Configuration;->uiMode:I

    #@6a
    .line 3312
    move-object/from16 v0, p0

    #@6c
    iget-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@6e
    iget v7, v7, Landroid/content/res/Configuration;->orientation:I

    #@70
    .line 3313
    move-object/from16 v0, p1

    #@72
    iget-object v12, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@74
    iget v14, v12, Lcom/android/server/wm/Task;->mTaskId:I

    #@76
    move-object/from16 v3, p2

    #@78
    move/from16 v4, p3

    #@7a
    move/from16 v5, p4

    #@7c
    move/from16 v12, p5

    #@7e
    .line 3311
    invoke-virtual/range {v2 .. v14}, Lcom/android/server/wm/AppTransition;->loadAnimation(Landroid/view/WindowManager$LayoutParams;IZIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZZI)Landroid/view/animation/Animation;

    #@81
    move-result-object v3

    #@82
    .line 3314
    .local v3, "a":Landroid/view/animation/Animation;
    if-eqz v3, :cond_2

    #@84
    .line 3316
    invoke-virtual {v8}, Landroid/graphics/Rect;->width()I

    #@87
    move-result v4

    #@88
    .line 3317
    .local v4, "containingWidth":I
    invoke-virtual {v8}, Landroid/graphics/Rect;->height()I

    #@8b
    move-result v5

    #@8c
    .line 3318
    .local v5, "containingHeight":I
    move-object/from16 v0, p1

    #@8e
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@90
    .line 3319
    move-object/from16 v0, p0

    #@92
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@94
    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->canSkipFirstFrame()Z

    #@97
    move-result v6

    #@98
    move-object/from16 v0, p0

    #@9a
    iget-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@9c
    invoke-virtual {v7}, Lcom/android/server/wm/AppTransition;->getAppStackClipMode()I

    #@9f
    move-result v7

    #@a0
    .line 3318
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/AppWindowAnimator;->setAnimation(Landroid/view/animation/Animation;IIZI)V

    #@a3
    .line 3324
    .end local v3    # "a":Landroid/view/animation/Animation;
    .end local v4    # "containingWidth":I
    .end local v5    # "containingHeight":I
    .end local v8    # "frame":Landroid/graphics/Rect;
    .end local v9    # "displayFrame":Landroid/graphics/Rect;
    .end local v10    # "insets":Landroid/graphics/Rect;
    .end local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v16    # "height":I
    .end local v17    # "width":I
    .end local v18    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    :goto_2
    const-wide/16 v6, 0x20

    #@a5
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    #@a8
    .line 3326
    move-object/from16 v0, p1

    #@aa
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@ac
    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@ae
    if-eqz v2, :cond_6

    #@b0
    const/4 v2, 0x1

    #@b1
    :goto_3
    return v2

    #@b2
    .line 3287
    .restart local v8    # "frame":Landroid/graphics/Rect;
    .restart local v9    # "displayFrame":Landroid/graphics/Rect;
    .restart local v10    # "insets":Landroid/graphics/Rect;
    .local v11, "surfaceInsets":Landroid/graphics/Rect;
    .restart local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v16    # "height":I
    .restart local v17    # "width":I
    .restart local v18    # "win":Lcom/android/server/wm/WindowState;
    .restart local p4    # "enter":Z
    :cond_3
    const/4 v13, 0x0

    #@b3
    .local v13, "freeform":Z
    goto :goto_0

    #@b4
    .line 3296
    .end local v13    # "freeform":Z
    :cond_4
    move-object/from16 v0, v18

    #@b6
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    #@b8
    invoke-virtual {v8, v2}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@bb
    goto :goto_1

    #@bc
    .line 3322
    .end local v8    # "frame":Landroid/graphics/Rect;
    .end local v9    # "displayFrame":Landroid/graphics/Rect;
    .end local v10    # "insets":Landroid/graphics/Rect;
    .end local v11    # "surfaceInsets":Landroid/graphics/Rect;
    .end local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v16    # "height":I
    .end local v17    # "width":I
    .end local v18    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    move-object/from16 v0, p1

    #@be
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@c0
    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    #@c3
    goto :goto_2

    #@c4
    .line 3326
    .end local p4    # "enter":Z
    :cond_6
    const/4 v2, 0x0

    #@c5
    goto :goto_3
.end method

.method static canBeImeTarget(Lcom/android/server/wm/WindowState;)Z
    .locals 5
    .param p0, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const v4, 0x20008

    #@3
    const/4 v3, 0x0

    #@4
    .line 1459
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6
    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@8
    and-int v0, v2, v4

    #@a
    .line 1461
    .local v0, "fl":I
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@c
    iget v1, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    #@e
    .line 1462
    .local v1, "type":I
    if-eqz v0, :cond_0

    #@10
    if-ne v0, v4, :cond_1

    #@12
    .line 1479
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    #@15
    move-result v2

    #@16
    return v2

    #@17
    .line 1463
    :cond_1
    const/4 v2, 0x3

    #@18
    if-eq v1, v2, :cond_0

    #@1a
    .line 1481
    return v3
.end method

.method private checkBootAnimationCompleteLocked()Z
    .locals 4

    #@0
    .prologue
    const/16 v1, 0x25

    #@2
    .line 6093
    const-string/jumbo v0, "bootanim"

    #@5
    invoke-static {v0}, Landroid/os/SystemService;->isRunning(Ljava/lang/String;)Z

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 6094
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@10
    .line 6095
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@12
    .line 6096
    const-wide/16 v2, 0xc8

    #@14
    .line 6095
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@17
    .line 6098
    const/4 v0, 0x0

    #@18
    return v0

    #@19
    .line 6101
    :cond_0
    const/4 v0, 0x1

    #@1a
    return v0
.end method

.method private checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 5
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v4, 0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 3399
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@5
    move-result v1

    #@6
    invoke-static {}, Landroid/os/Process;->myPid()I

    #@9
    move-result v2

    #@a
    if-ne v1, v2, :cond_0

    #@c
    .line 3400
    return v4

    #@d
    .line 3403
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@f
    invoke-virtual {v1, p1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    #@12
    move-result v1

    #@13
    if-nez v1, :cond_1

    #@15
    .line 3405
    return v4

    #@16
    .line 3407
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    #@18
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@1b
    const-string/jumbo v2, "Permission Denial: "

    #@1e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@21
    move-result-object v1

    #@22
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v1

    #@26
    const-string/jumbo v2, " from pid="

    #@29
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v1

    #@2d
    .line 3408
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@30
    move-result v2

    #@31
    .line 3407
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@34
    move-result-object v1

    #@35
    .line 3409
    const-string/jumbo v2, ", uid="

    #@38
    .line 3407
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3b
    move-result-object v1

    #@3c
    .line 3409
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@3f
    move-result v2

    #@40
    .line 3407
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@43
    move-result-object v1

    #@44
    .line 3410
    const-string/jumbo v2, " requires "

    #@47
    .line 3407
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v1

    #@4b
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v1

    #@4f
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52
    move-result-object v0

    #@53
    .line 3411
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "WindowManager"

    #@56
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@59
    .line 3412
    return v3
.end method

.method private checkWaitingForWindowsLocked()Z
    .locals 12

    #@0
    .prologue
    const/4 v11, 0x1

    #@1
    .line 5973
    const/4 v2, 0x0

    #@2
    .line 5974
    .local v2, "haveBootMsg":Z
    const/4 v1, 0x0

    #@3
    .line 5977
    .local v1, "haveApp":Z
    const/4 v4, 0x0

    #@4
    .line 5978
    .local v4, "haveWallpaper":Z
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@6
    invoke-virtual {v9}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@9
    move-result-object v9

    #@a
    .line 5979
    const v10, 0x112004e

    #@d
    .line 5978
    invoke-virtual {v9, v10}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@10
    move-result v9

    #@11
    if-eqz v9, :cond_3

    #@13
    .line 5980
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    #@15
    if-eqz v9, :cond_2

    #@17
    const/4 v7, 0x0

    #@18
    .line 5981
    .local v7, "wallpaperEnabled":Z
    :goto_0
    const/4 v3, 0x1

    #@19
    .line 5983
    .local v3, "haveKeyguard":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@1c
    move-result-object v8

    #@1d
    .line 5984
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@20
    move-result v0

    #@21
    .line 5985
    .local v0, "N":I
    const/4 v5, 0x0

    #@22
    .end local v3    # "haveKeyguard":Z
    .local v5, "i":I
    :goto_1
    if-ge v5, v0, :cond_9

    #@24
    .line 5986
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@27
    move-result-object v6

    #@28
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@2a
    .line 5987
    .local v6, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@2d
    move-result v9

    #@2e
    if-eqz v9, :cond_0

    #@30
    iget-boolean v9, v6, Lcom/android/server/wm/WindowState;->mObscured:Z

    #@32
    if-eqz v9, :cond_4

    #@34
    .line 5990
    :cond_0
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@37
    move-result v9

    #@38
    if-eqz v9, :cond_1

    #@3a
    .line 5991
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@3c
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@3e
    const/16 v10, 0x7e5

    #@40
    if-ne v9, v10, :cond_5

    #@42
    .line 5992
    const/4 v2, 0x1

    #@43
    .line 5985
    :cond_1
    :goto_2
    add-int/lit8 v5, v5, 0x1

    #@45
    goto :goto_1

    #@46
    .line 5980
    .end local v0    # "N":I
    .end local v5    # "i":I
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    .end local v7    # "wallpaperEnabled":Z
    .end local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_2
    const/4 v7, 0x1

    #@47
    .restart local v7    # "wallpaperEnabled":Z
    goto :goto_0

    #@48
    .line 5978
    .end local v7    # "wallpaperEnabled":Z
    :cond_3
    const/4 v7, 0x0

    #@49
    .restart local v7    # "wallpaperEnabled":Z
    goto :goto_0

    #@4a
    .line 5987
    .restart local v0    # "N":I
    .restart local v5    # "i":I
    .restart local v6    # "w":Lcom/android/server/wm/WindowState;
    .restart local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@4d
    move-result v9

    #@4e
    if-nez v9, :cond_0

    #@50
    .line 5988
    return v11

    #@51
    .line 5993
    :cond_5
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@53
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@55
    const/4 v10, 0x2

    #@56
    if-eq v9, v10, :cond_6

    #@58
    .line 5994
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5a
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@5c
    const/4 v10, 0x4

    #@5d
    if-ne v9, v10, :cond_7

    #@5f
    .line 5995
    :cond_6
    const/4 v1, 0x1

    #@60
    .line 5994
    goto :goto_2

    #@61
    .line 5996
    :cond_7
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@63
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@65
    const/16 v10, 0x7dd

    #@67
    if-ne v9, v10, :cond_8

    #@69
    .line 5997
    const/4 v4, 0x1

    #@6a
    goto :goto_2

    #@6b
    .line 5998
    :cond_8
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6d
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@6f
    const/16 v10, 0x7d0

    #@71
    if-ne v9, v10, :cond_1

    #@73
    .line 5999
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@75
    invoke-interface {v9}, Landroid/view/WindowManagerPolicy;->isKeyguardDrawnLw()Z

    #@78
    move-result v3

    #@79
    .local v3, "haveKeyguard":Z
    goto :goto_2

    #@7a
    .line 6013
    .end local v3    # "haveKeyguard":Z
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    :cond_9
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@7c
    if-nez v9, :cond_a

    #@7e
    if-eqz v2, :cond_d

    #@80
    .line 6020
    :cond_a
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@82
    if-eqz v9, :cond_c

    #@84
    if-nez v1, :cond_b

    #@86
    if-eqz v3, :cond_e

    #@88
    .line 6021
    :cond_b
    if-eqz v7, :cond_c

    #@8a
    if-eqz v4, :cond_e

    #@8c
    .line 6025
    :cond_c
    const/4 v9, 0x0

    #@8d
    return v9

    #@8e
    .line 6014
    :cond_d
    return v11

    #@8f
    .line 6022
    :cond_e
    return v11
.end method

.method private computeCompatSmallestWidth(ZILandroid/util/DisplayMetrics;II)I
    .locals 15
    .param p1, "rotated"    # Z
    .param p2, "uiMode"    # I
    .param p3, "dm"    # Landroid/util/DisplayMetrics;
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    #@0
    .prologue
    .line 7592
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@2
    move-object/from16 v0, p3

    #@4
    invoke-virtual {v1, v0}, Landroid/util/DisplayMetrics;->setTo(Landroid/util/DisplayMetrics;)V

    #@7
    .line 7593
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@9
    .line 7595
    .local v5, "tmpDm":Landroid/util/DisplayMetrics;
    if-eqz p1, :cond_0

    #@b
    .line 7596
    move/from16 v6, p5

    #@d
    .line 7597
    .local v6, "unrotDw":I
    move/from16 v7, p4

    #@f
    .line 7602
    .local v7, "unrotDh":I
    :goto_0
    const/4 v2, 0x0

    #@10
    const/4 v3, 0x0

    #@11
    move-object v1, p0

    #@12
    move/from16 v4, p2

    #@14
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    #@17
    move-result v9

    #@18
    .line 7603
    .local v9, "sw":I
    const/4 v10, 0x1

    #@19
    move-object v8, p0

    #@1a
    move/from16 v11, p2

    #@1c
    move-object v12, v5

    #@1d
    move v13, v7

    #@1e
    move v14, v6

    #@1f
    invoke-direct/range {v8 .. v14}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    #@22
    move-result v9

    #@23
    .line 7604
    const/4 v3, 0x2

    #@24
    move-object v1, p0

    #@25
    move v2, v9

    #@26
    move/from16 v4, p2

    #@28
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    #@2b
    move-result v9

    #@2c
    .line 7605
    const/4 v10, 0x3

    #@2d
    move-object v8, p0

    #@2e
    move/from16 v11, p2

    #@30
    move-object v12, v5

    #@31
    move v13, v7

    #@32
    move v14, v6

    #@33
    invoke-direct/range {v8 .. v14}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    #@36
    move-result v9

    #@37
    .line 7606
    return v9

    #@38
    .line 7599
    .end local v6    # "unrotDw":I
    .end local v7    # "unrotDh":I
    .end local v9    # "sw":I
    :cond_0
    move/from16 v6, p4

    #@3a
    .line 7600
    .restart local v6    # "unrotDw":I
    move/from16 v7, p5

    #@3c
    .restart local v7    # "unrotDh":I
    goto :goto_0
.end method

.method private computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .locals 6

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 9971
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@3
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@6
    move-result v1

    #@7
    .line 9972
    .local v1, "displayCount":I
    const/4 v2, 0x0

    #@8
    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_1

    #@a
    .line 9973
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@f
    move-result-object v0

    #@10
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@12
    .line 9974
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    #@15
    move-result-object v3

    #@16
    .line 9975
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_0

    #@18
    .line 9976
    return-object v3

    #@19
    .line 9972
    :cond_0
    add-int/lit8 v2, v2, 0x1

    #@1b
    goto :goto_0

    #@1c
    .line 9979
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    return-object v5
.end method

.method private computeNewConfigurationLocked()Landroid/content/res/Configuration;
    .locals 2

    #@0
    .prologue
    .line 7496
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@2
    if-nez v1, :cond_0

    #@4
    .line 7497
    const/4 v1, 0x0

    #@5
    return-object v1

    #@6
    .line 7499
    :cond_0
    new-instance v0, Landroid/content/res/Configuration;

    #@8
    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    #@b
    .line 7500
    .local v0, "config":Landroid/content/res/Configuration;
    const/4 v1, 0x0

    #@c
    iput v1, v0, Landroid/content/res/Configuration;->fontScale:F

    #@e
    .line 7501
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@11
    .line 7502
    return-object v0
.end method

.method private computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIIFLandroid/content/res/Configuration;)V
    .locals 14
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotated"    # Z
    .param p3, "uiMode"    # I
    .param p4, "dw"    # I
    .param p5, "dh"    # I
    .param p6, "density"    # F
    .param p7, "outConfig"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 7553
    if-eqz p2, :cond_0

    #@2
    .line 7554
    move/from16 v5, p5

    #@4
    .line 7555
    .local v5, "unrotDw":I
    move/from16 v6, p4

    #@6
    .line 7560
    .local v6, "unrotDh":I
    :goto_0
    const/high16 v1, 0x40000000    # 2.0f

    #@8
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@a
    .line 7561
    const/high16 v1, 0x40000000    # 2.0f

    #@c
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@e
    .line 7562
    const/4 v1, 0x0

    #@f
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@11
    .line 7563
    const/4 v1, 0x0

    #@12
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@14
    .line 7564
    const/4 v3, 0x0

    #@15
    move-object v1, p0

    #@16
    move-object v2, p1

    #@17
    move/from16 v4, p3

    #@19
    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    #@1c
    .line 7565
    const/4 v9, 0x1

    #@1d
    move-object v7, p0

    #@1e
    move-object v8, p1

    #@1f
    move/from16 v10, p3

    #@21
    move v11, v6

    #@22
    move v12, v5

    #@23
    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    #@26
    .line 7566
    const/4 v3, 0x2

    #@27
    move-object v1, p0

    #@28
    move-object v2, p1

    #@29
    move/from16 v4, p3

    #@2b
    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    #@2e
    .line 7567
    const/4 v9, 0x3

    #@2f
    move-object v7, p0

    #@30
    move-object v8, p1

    #@31
    move/from16 v10, p3

    #@33
    move v11, v6

    #@34
    move v12, v5

    #@35
    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    #@38
    .line 7568
    move-object/from16 v0, p7

    #@3a
    iget v1, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@3c
    invoke-static {v1}, Landroid/content/res/Configuration;->resetScreenLayout(I)I

    #@3f
    move-result v2

    #@40
    .line 7569
    .local v2, "sl":I
    const/4 v3, 0x0

    #@41
    move-object v1, p0

    #@42
    move/from16 v4, p6

    #@44
    move/from16 v7, p3

    #@46
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    #@49
    move-result v2

    #@4a
    .line 7570
    const/4 v9, 0x1

    #@4b
    move-object v7, p0

    #@4c
    move v8, v2

    #@4d
    move/from16 v10, p6

    #@4f
    move v11, v6

    #@50
    move v12, v5

    #@51
    move/from16 v13, p3

    #@53
    invoke-direct/range {v7 .. v13}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    #@56
    move-result v2

    #@57
    .line 7571
    const/4 v3, 0x2

    #@58
    move-object v1, p0

    #@59
    move/from16 v4, p6

    #@5b
    move/from16 v7, p3

    #@5d
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    #@60
    move-result v2

    #@61
    .line 7572
    const/4 v9, 0x3

    #@62
    move-object v7, p0

    #@63
    move v8, v2

    #@64
    move/from16 v10, p6

    #@66
    move v11, v6

    #@67
    move v12, v5

    #@68
    move/from16 v13, p3

    #@6a
    invoke-direct/range {v7 .. v13}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    #@6d
    move-result v2

    #@6e
    .line 7573
    iget v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@70
    int-to-float v1, v1

    #@71
    div-float v1, v1, p6

    #@73
    float-to-int v1, v1

    #@74
    move-object/from16 v0, p7

    #@76
    iput v1, v0, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    #@78
    .line 7574
    move-object/from16 v0, p7

    #@7a
    iput v2, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@7c
    .line 7545
    return-void

    #@7d
    .line 7557
    .end local v2    # "sl":I
    .end local v5    # "unrotDw":I
    .end local v6    # "unrotDh":I
    :cond_0
    move/from16 v5, p4

    #@7f
    .line 7558
    .restart local v5    # "unrotDw":I
    move/from16 v6, p5

    #@81
    .restart local v6    # "unrotDh":I
    goto :goto_0
.end method

.method private configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 9353
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@5
    move-result-object v1

    #@6
    .line 9354
    iget v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@8
    .line 9355
    iget v3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@a
    .line 9356
    iget v4, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@c
    .line 9353
    invoke-interface {v0, v1, v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setInitialDisplaySize(Landroid/view/Display;III)V

    #@f
    .line 9358
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@12
    move-result-object v6

    #@13
    .line 9359
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@15
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@18
    move-result-object v1

    #@19
    .line 9360
    iget v2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    #@1b
    iget v3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    #@1d
    .line 9361
    iget v4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    #@1f
    iget v5, v6, Landroid/view/DisplayInfo;->overscanBottom:I

    #@21
    .line 9359
    invoke-interface/range {v0 .. v5}, Landroid/view/WindowManagerPolicy;->setDisplayOverscan(Landroid/view/Display;IIII)V

    #@24
    .line 9352
    return-void
.end method

.method private static convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V
    .locals 2
    .param p0, "crop"    # Landroid/graphics/Rect;
    .param p1, "rot"    # I
    .param p2, "dw"    # I
    .param p3, "dh"    # I

    #@0
    .prologue
    .line 6304
    const/4 v1, 0x1

    #@1
    if-ne p1, v1, :cond_1

    #@3
    .line 6305
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@5
    .line 6306
    .local v0, "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->right:I

    #@7
    sub-int v1, p2, v1

    #@9
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@b
    .line 6307
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@d
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@f
    .line 6308
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@11
    sub-int v1, p2, v1

    #@13
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@15
    .line 6309
    iput v0, p0, Landroid/graphics/Rect;->left:I

    #@17
    .line 6303
    .end local v0    # "tmp":I
    :cond_0
    :goto_0
    return-void

    #@18
    .line 6310
    :cond_1
    const/4 v1, 0x2

    #@19
    if-ne p1, v1, :cond_2

    #@1b
    .line 6311
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@1d
    .line 6312
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@1f
    sub-int v1, p3, v1

    #@21
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@23
    .line 6313
    sub-int v1, p3, v0

    #@25
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@27
    .line 6314
    iget v0, p0, Landroid/graphics/Rect;->right:I

    #@29
    .line 6315
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@2b
    sub-int v1, p2, v1

    #@2d
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@2f
    .line 6316
    sub-int v1, p2, v0

    #@31
    iput v1, p0, Landroid/graphics/Rect;->left:I

    #@33
    goto :goto_0

    #@34
    .line 6317
    .end local v0    # "tmp":I
    :cond_2
    const/4 v1, 0x3

    #@35
    if-ne p1, v1, :cond_0

    #@37
    .line 6318
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@39
    .line 6319
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@3b
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@3d
    .line 6320
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@3f
    sub-int v1, p3, v1

    #@41
    iput v1, p0, Landroid/graphics/Rect;->left:I

    #@43
    .line 6321
    iget v1, p0, Landroid/graphics/Rect;->right:I

    #@45
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@47
    .line 6322
    sub-int v1, p3, v0

    #@49
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@4b
    goto :goto_0
.end method

.method private createSurfaceControl(Landroid/view/Surface;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I
    .locals 4
    .param p1, "outSurface"    # Landroid/view/Surface;
    .param p2, "result"    # I
    .param p3, "win"    # Lcom/android/server/wm/WindowState;
    .param p4, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    #@0
    .prologue
    .line 3133
    iget-boolean v1, p3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@2
    if-nez v1, :cond_0

    #@4
    .line 3134
    or-int/lit8 p2, p2, 0x4

    #@6
    .line 3136
    :cond_0
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->createSurfaceLocked()Lcom/android/server/wm/WindowSurfaceController;

    #@9
    move-result-object v0

    #@a
    .line 3137
    .local v0, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-eqz v0, :cond_1

    #@c
    .line 3138
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowSurfaceController;->getSurface(Landroid/view/Surface;)V

    #@f
    .line 3146
    :goto_0
    return p2

    #@10
    .line 3143
    :cond_1
    const-string/jumbo v1, "WindowManager"

    #@13
    new-instance v2, Ljava/lang/StringBuilder;

    #@15
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@18
    const-string/jumbo v3, "Failed to create surface control for "

    #@1b
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v2

    #@1f
    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@22
    move-result-object v2

    #@23
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@26
    move-result-object v2

    #@27
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@2a
    .line 3144
    invoke-virtual {p1}, Landroid/view/Surface;->release()V

    #@2d
    goto :goto_0
.end method

.method private createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;
    .locals 9
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "userId"    # I
    .param p4, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p5, "bounds"    # Landroid/graphics/Rect;
    .param p6, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v7, 0x0

    #@2
    .line 3517
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@4
    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@7
    move-result-object v2

    #@8
    check-cast v2, Lcom/android/server/wm/TaskStack;

    #@a
    .line 3518
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_0

    #@c
    .line 3519
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@e
    new-instance v3, Ljava/lang/StringBuilder;

    #@10
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@13
    const-string/jumbo v4, "addAppToken: invalid stackId="

    #@16
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v3

    #@1a
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v3

    #@1e
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21
    move-result-object v3

    #@22
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@25
    throw v1

    #@26
    .line 3521
    :cond_0
    const/4 v1, 0x2

    #@27
    new-array v1, v1, [Ljava/lang/Object;

    #@29
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@2c
    move-result-object v3

    #@2d
    aput-object v3, v1, v7

    #@2f
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@32
    move-result-object v3

    #@33
    aput-object v3, v1, v8

    #@35
    const/16 v3, 0x7919

    #@37
    invoke-static {v3, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    #@3a
    .line 3522
    new-instance v0, Lcom/android/server/wm/Task;

    #@3c
    move v1, p1

    #@3d
    move v3, p3

    #@3e
    move-object v4, p0

    #@3f
    move-object v5, p5

    #@40
    move-object v6, p6

    #@41
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/Task;-><init>(ILcom/android/server/wm/TaskStack;ILcom/android/server/wm/WindowManagerService;Landroid/graphics/Rect;Landroid/content/res/Configuration;)V

    #@44
    .line 3523
    .local v0, "task":Lcom/android/server/wm/Task;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@46
    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@49
    .line 3524
    iget-boolean v1, p4, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@4b
    if-eqz v1, :cond_1

    #@4d
    move v1, v7

    #@4e
    :goto_0
    iget-boolean v3, p4, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    #@50
    invoke-virtual {v2, v0, v1, v3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;ZZ)V

    #@53
    .line 3525
    return-object v0

    #@54
    :cond_1
    move v1, v8

    #@55
    .line 3524
    goto :goto_0
.end method

.method static dipToPixel(ILandroid/util/DisplayMetrics;)I
    .locals 2
    .param p0, "dip"    # I
    .param p1, "displayMetrics"    # Landroid/util/DisplayMetrics;

    #@0
    .prologue
    .line 11333
    int-to-float v0, p0

    #@1
    const/4 v1, 0x1

    #@2
    invoke-static {v1, v0, p1}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    #@5
    move-result v0

    #@6
    float-to-int v0, v0

    #@7
    return v0
.end method

.method private displayReady(I)V
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8198
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8199
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8200
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    .line 8201
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@b
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->addDisplayLocked(I)V

    #@e
    .line 8202
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->initializeDisplayBaseInfo()V

    #@11
    .line 8203
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@13
    if-eqz v1, :cond_0

    #@15
    .line 8204
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@17
    invoke-virtual {v1}, Lcom/android/server/wm/TaskTapPointerEventListener;->init()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1a
    :cond_0
    monitor-exit v2

    #@1b
    .line 8197
    return-void

    #@1c
    .line 8198
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1d
    monitor-exit v2

    #@1e
    throw v1
.end method

.method private doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z
    .locals 8
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "callingUid"    # I
    .param p3, "attachedWindow"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/16 v7, 0x19

    #@2
    const/4 v2, 0x1

    #@3
    const/4 v3, 0x0

    #@4
    .line 2260
    if-eqz p3, :cond_2

    #@6
    .line 2261
    iget-object v4, p3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@8
    if-eqz v4, :cond_1

    #@a
    .line 2262
    iget-object v4, p3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@c
    iget v4, v4, Lcom/android/server/wm/AppWindowToken;->targetSdk:I

    #@e
    if-le v4, v7, :cond_0

    #@10
    .line 2261
    :goto_0
    return v2

    #@11
    :cond_0
    move v2, v3

    #@12
    .line 2262
    goto :goto_0

    #@13
    :cond_1
    move v2, v3

    #@14
    .line 2261
    goto :goto_0

    #@15
    .line 2266
    :cond_2
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@17
    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    #@1a
    move-result-object v4

    #@1b
    .line 2268
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    #@1e
    move-result v5

    #@1f
    .line 2267
    const/4 v6, 0x0

    #@20
    .line 2266
    invoke-virtual {v4, p1, v6, v5}, Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    #@23
    move-result-object v0

    #@24
    .line 2269
    .local v0, "appInfo":Landroid/content/pm/ApplicationInfo;
    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    #@26
    if-eq v4, p2, :cond_4

    #@28
    .line 2270
    new-instance v2, Ljava/lang/SecurityException;

    #@2a
    new-instance v4, Ljava/lang/StringBuilder;

    #@2c
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@2f
    const-string/jumbo v5, "Package "

    #@32
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@35
    move-result-object v4

    #@36
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@39
    move-result-object v4

    #@3a
    const-string/jumbo v5, " not in UID "

    #@3d
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@40
    move-result-object v4

    #@41
    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@44
    move-result-object v4

    #@45
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@48
    move-result-object v4

    #@49
    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@4c
    throw v2

    #@4d
    .line 2276
    .end local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v1

    #@4e
    .line 2280
    :cond_3
    return v3

    #@4f
    .line 2273
    .restart local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_4
    iget v4, v0, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    #@51
    if-le v4, v7, :cond_3

    #@53
    .line 2274
    return v2
.end method

.method private static excludeWindowTypeFromTapOutTask(I)Z
    .locals 1
    .param p0, "windowType"    # I

    #@0
    .prologue
    .line 1859
    sparse-switch p0, :sswitch_data_0

    #@3
    .line 1865
    const/4 v0, 0x0

    #@4
    return v0

    #@5
    .line 1863
    :sswitch_0
    const/4 v0, 0x1

    #@6
    return v0

    #@7
    .line 1859
    nop

    #@8
    :sswitch_data_0
    .sparse-switch
        0x7d0 -> :sswitch_0
        0x7dc -> :sswitch_0
        0x7e3 -> :sswitch_0
    .end sparse-switch
.end method

.method private findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I
    .locals 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1117
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v2

    #@4
    .line 1118
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@7
    move-result v3

    #@8
    add-int/lit8 v0, v3, -0x1

    #@a
    .local v0, "j":I
    :goto_0
    if-ltz v0, :cond_1

    #@c
    .line 1119
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v1

    #@10
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@12
    .line 1120
    .local v1, "wentry":Lcom/android/server/wm/WindowState;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@14
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@16
    if-ne v3, v4, :cond_0

    #@18
    .line 1121
    return v0

    #@19
    .line 1118
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@1b
    goto :goto_0

    #@1c
    .line 1124
    .end local v1    # "wentry":Lcom/android/server/wm/WindowState;
    :cond_1
    const/4 v3, -0x1

    #@1d
    return v3
.end method

.method private findWindow(I)Lcom/android/server/wm/WindowState;
    .locals 8
    .param p1, "hashCode"    # I

    #@0
    .prologue
    .line 7456
    const/4 v6, -0x1

    #@1
    if-ne p1, v6, :cond_0

    #@3
    .line 7458
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@6
    move-result-object v6

    #@7
    return-object v6

    #@8
    .line 7461
    :cond_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@a
    monitor-enter v7

    #@b
    .line 7462
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@d
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    #@10
    move-result v1

    #@11
    .line 7463
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    #@12
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v1, :cond_3

    #@14
    .line 7464
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@16
    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@19
    move-result-object v6

    #@1a
    check-cast v6, Lcom/android/server/wm/DisplayContent;

    #@1c
    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1f
    move-result-object v5

    #@20
    .line 7465
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@23
    move-result v2

    #@24
    .line 7466
    .local v2, "numWindows":I
    const/4 v4, 0x0

    #@25
    .local v4, "winNdx":I
    :goto_1
    if-ge v4, v2, :cond_2

    #@27
    .line 7467
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2a
    move-result-object v3

    #@2b
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@2d
    .line 7468
    .local v3, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@30
    move-result v6

    #@31
    if-ne v6, p1, :cond_1

    #@33
    monitor-exit v7

    #@34
    .line 7469
    return-object v3

    #@35
    .line 7466
    :cond_1
    add-int/lit8 v4, v4, 0x1

    #@37
    goto :goto_1

    #@38
    .line 7463
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v0, v0, 0x1

    #@3a
    goto :goto_0

    #@3b
    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    monitor-exit v7

    #@3c
    .line 7475
    const/4 v6, 0x0

    #@3d
    return-object v6

    #@3e
    .line 7461
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_0
    move-exception v6

    #@3f
    monitor-exit v7

    #@40
    throw v6
.end method

.method private finishPositioning()V
    .locals 3

    #@0
    .prologue
    .line 7888
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 7889
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 7890
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@9
    invoke-virtual {v0}, Lcom/android/server/wm/TaskPositioner;->unregister()V

    #@c
    .line 7891
    const/4 v0, 0x0

    #@d
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@f
    .line 7892
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@11
    const/4 v2, 0x1

    #@12
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15
    :cond_0
    monitor-exit v1

    #@16
    .line 7884
    return-void

    #@17
    .line 7888
    :catchall_0
    move-exception v0

    #@18
    monitor-exit v1

    #@19
    throw v0
.end method

.method static fixScale(F)F
    .locals 1
    .param p0, "scale"    # F

    #@0
    .prologue
    .line 5675
    const/4 v0, 0x0

    #@1
    cmpg-float v0, p0, v0

    #@3
    if-gez v0, :cond_1

    #@5
    const/4 p0, 0x0

    #@6
    .line 5677
    :cond_0
    :goto_0
    invoke-static {p0}, Ljava/lang/Math;->abs(F)F

    #@9
    move-result v0

    #@a
    return v0

    #@b
    .line 5676
    :cond_1
    const/high16 v0, 0x41a00000    # 20.0f

    #@d
    cmpl-float v0, p0, v0

    #@f
    if-lez v0, :cond_0

    #@11
    const/high16 p0, 0x41a00000    # 20.0f

    #@13
    goto :goto_0
.end method

.method private getAppSpecifiedOrientation()I
    .locals 14

    #@0
    .prologue
    .line 3688
    const/4 v7, -0x1

    #@1
    .line 3689
    .local v7, "lastOrientation":I
    const/4 v3, 0x0

    #@2
    .line 3690
    .local v3, "findingBehind":Z
    const/4 v6, 0x0

    #@3
    .line 3691
    .local v6, "lastFullscreen":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v1

    #@7
    .line 3692
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@a
    move-result-object v10

    #@b
    .line 3693
    .local v10, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/4 v13, 0x3

    #@c
    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    #@f
    move-result v13

    #@10
    if-nez v13, :cond_1

    #@12
    .line 3694
    const/4 v13, 0x2

    #@13
    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    #@16
    move-result v5

    #@17
    .line 3696
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1a
    move-result-object v13

    #@1b
    iget-object v13, v13, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@1d
    invoke-virtual {v13}, Lcom/android/server/wm/DockedStackDividerController;->isMinimizedDock()Z

    #@20
    move-result v2

    #@21
    .line 3697
    .local v2, "dockMinimized":Z
    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    #@24
    move-result v13

    #@25
    add-int/lit8 v9, v13, -0x1

    #@27
    .end local v3    # "findingBehind":Z
    .end local v6    # "lastFullscreen":Z
    .local v9, "taskNdx":I
    :goto_1
    if-ltz v9, :cond_b

    #@29
    .line 3698
    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@2c
    move-result-object v13

    #@2d
    check-cast v13, Lcom/android/server/wm/Task;

    #@2f
    iget-object v12, v13, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@31
    .line 3699
    .local v12, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v12}, Lcom/android/server/wm/AppTokenList;->size()I

    #@34
    move-result v13

    #@35
    add-int/lit8 v4, v13, -0x1

    #@37
    .line 3700
    .local v4, "firstToken":I
    move v11, v4

    #@38
    .local v11, "tokenNdx":I
    :goto_2
    if-ltz v11, :cond_a

    #@3a
    .line 3701
    invoke-virtual {v12, v11}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v0

    #@3e
    check-cast v0, Lcom/android/server/wm/AppWindowToken;

    #@40
    .line 3707
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v3, :cond_0

    #@42
    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@44
    if-eqz v13, :cond_2

    #@46
    .line 3713
    :cond_0
    if-ne v11, v4, :cond_4

    #@48
    .line 3717
    const/4 v13, 0x3

    #@49
    if-eq v7, v13, :cond_4

    #@4b
    if-eqz v6, :cond_4

    #@4d
    .line 3720
    return v7

    #@4e
    .line 3693
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "dockMinimized":Z
    .end local v4    # "firstToken":I
    .end local v9    # "taskNdx":I
    .end local v11    # "tokenNdx":I
    .end local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    .restart local v3    # "findingBehind":Z
    .restart local v6    # "lastFullscreen":Z
    :cond_1
    const/4 v5, 0x1

    #@4f
    .local v5, "inMultiWindow":Z
    goto :goto_0

    #@50
    .line 3707
    .end local v3    # "findingBehind":Z
    .end local v5    # "inMultiWindow":Z
    .end local v6    # "lastFullscreen":Z
    .restart local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v2    # "dockMinimized":Z
    .restart local v4    # "firstToken":I
    .restart local v9    # "taskNdx":I
    .restart local v11    # "tokenNdx":I
    .restart local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_2
    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@52
    if-eqz v13, :cond_0

    #@54
    .line 3700
    :cond_3
    :goto_3
    add-int/lit8 v11, v11, -0x1

    #@56
    goto :goto_2

    #@57
    .line 3725
    :cond_4
    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@59
    if-nez v13, :cond_3

    #@5b
    .line 3734
    if-eqz v5, :cond_5

    #@5d
    iget-object v13, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@5f
    invoke-virtual {v13}, Lcom/android/server/wm/Task;->isHomeTask()Z

    #@62
    move-result v13

    #@63
    if-eqz v13, :cond_3

    #@65
    if-eqz v2, :cond_3

    #@67
    .line 3738
    :cond_5
    if-nez v11, :cond_6

    #@69
    .line 3740
    iget v7, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@6b
    .line 3743
    :cond_6
    iget v8, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@6d
    .line 3747
    .local v8, "or":I
    iget-boolean v6, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@6f
    .line 3748
    .local v6, "lastFullscreen":Z
    if-eqz v6, :cond_7

    #@71
    const/4 v13, 0x3

    #@72
    if-eq v8, v13, :cond_7

    #@74
    .line 3751
    return v8

    #@75
    .line 3754
    :cond_7
    const/4 v13, -0x1

    #@76
    if-eq v8, v13, :cond_8

    #@78
    const/4 v13, 0x3

    #@79
    if-eq v8, v13, :cond_8

    #@7b
    .line 3757
    return v8

    #@7c
    .line 3759
    :cond_8
    const/4 v13, 0x3

    #@7d
    if-ne v8, v13, :cond_9

    #@7f
    const/4 v13, 0x1

    #@80
    :goto_4
    or-int/2addr v3, v13

    #@81
    .local v3, "findingBehind":Z
    goto :goto_3

    #@82
    .end local v3    # "findingBehind":Z
    :cond_9
    const/4 v13, 0x0

    #@83
    goto :goto_4

    #@84
    .line 3697
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "lastFullscreen":Z
    .end local v8    # "or":I
    :cond_a
    add-int/lit8 v9, v9, -0x1

    #@86
    goto :goto_1

    #@87
    .line 3768
    .end local v4    # "firstToken":I
    .end local v11    # "tokenNdx":I
    .end local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_b
    if-eqz v5, :cond_c

    #@89
    const/4 v13, -0x1

    #@8a
    :goto_5
    return v13

    #@8b
    :cond_c
    iget v13, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@8d
    goto :goto_5
.end method

.method private getFocusedWindow()Lcom/android/server/wm/WindowState;
    .locals 2

    #@0
    .prologue
    .line 8062
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 8063
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    move-result-object v1

    #@7
    monitor-exit v0

    #@8
    return-object v1

    #@9
    .line 8062
    :catchall_0
    move-exception v1

    #@a
    monitor-exit v0

    #@b
    throw v1
.end method

.method private getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .locals 1

    #@0
    .prologue
    .line 8068
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@2
    return-object v0
.end method

.method private getForcedDisplayDensityForUserLocked(I)I
    .locals 6
    .param p1, "userId"    # I

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v4, 0x0

    #@2
    .line 9299
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@7
    move-result-object v2

    #@8
    .line 9300
    const-string/jumbo v3, "display_density_forced"

    #@b
    .line 9299
    invoke-static {v2, v3, p1}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    #@e
    move-result-object v0

    #@f
    .line 9301
    .local v0, "densityStr":Ljava/lang/String;
    if-eqz v0, :cond_0

    #@11
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    #@14
    move-result v2

    #@15
    if-nez v2, :cond_1

    #@17
    .line 9302
    :cond_0
    const-string/jumbo v2, "ro.config.density_override"

    #@1a
    invoke-static {v2, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1d
    move-result-object v0

    #@1e
    .line 9304
    :cond_1
    if-eqz v0, :cond_2

    #@20
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    #@23
    move-result v2

    #@24
    if-lez v2, :cond_2

    #@26
    .line 9306
    :try_start_0
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@29
    move-result v2

    #@2a
    return v2

    #@2b
    .line 9307
    :catch_0
    move-exception v1

    #@2c
    .line 9310
    :cond_2
    return v4
.end method

.method private getNonDecorInsetsLocked(Landroid/graphics/Rect;)V
    .locals 5
    .param p1, "outInsets"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11371
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@3
    move-result-object v0

    #@4
    .line 11372
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6
    iget v2, v0, Landroid/view/DisplayInfo;->rotation:I

    #@8
    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@a
    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@c
    invoke-interface {v1, v2, v3, v4, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorInsetsLw(IIILandroid/graphics/Rect;)V

    #@f
    .line 11370
    return-void
.end method

.method static getPropertyInt([Ljava/lang/String;IIILandroid/util/DisplayMetrics;)I
    .locals 4
    .param p0, "tokens"    # [Ljava/lang/String;
    .param p1, "index"    # I
    .param p2, "defUnits"    # I
    .param p3, "defDps"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;

    #@0
    .prologue
    .line 10212
    array-length v3, p0

    #@1
    if-ge p1, v3, :cond_0

    #@3
    .line 10213
    aget-object v1, p0, p1

    #@5
    .line 10214
    .local v1, "str":Ljava/lang/String;
    if-eqz v1, :cond_0

    #@7
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@a
    move-result v3

    #@b
    if-lez v3, :cond_0

    #@d
    .line 10216
    :try_start_0
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    #@10
    move-result v2

    #@11
    .line 10217
    .local v2, "val":I
    return v2

    #@12
    .line 10218
    .end local v2    # "val":I
    :catch_0
    move-exception v0

    #@13
    .line 10222
    .end local v1    # "str":Ljava/lang/String;
    :cond_0
    if-nez p2, :cond_1

    #@15
    .line 10223
    return p3

    #@16
    .line 10225
    :cond_1
    int-to-float v3, p3

    #@17
    invoke-static {p2, v3, p4}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    #@1a
    move-result v3

    #@1b
    float-to-int v2, v3

    #@1c
    .line 10226
    .restart local v2    # "val":I
    return v2
.end method

.method private getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;
    .locals 5
    .param p1, "token"    # Lcom/android/server/wm/WindowToken;
    .param p2, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 1134
    new-instance v3, Lcom/android/server/wm/WindowList;

    #@2
    invoke-direct {v3}, Lcom/android/server/wm/WindowList;-><init>()V

    #@5
    .line 1135
    .local v3, "windowList":Lcom/android/server/wm/WindowList;
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@7
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@a
    move-result v0

    #@b
    .line 1136
    .local v0, "count":I
    const/4 v1, 0x0

    #@c
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@e
    .line 1137
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@10
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@13
    move-result-object v2

    #@14
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@16
    .line 1138
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@19
    move-result-object v4

    #@1a
    if-ne v4, p2, :cond_0

    #@1c
    .line 1139
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@1f
    .line 1136
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@21
    goto :goto_0

    #@22
    .line 1142
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    return-object v3
.end method

.method private handleDisplayChangedLocked(I)V
    .locals 2
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11169
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    .line 11170
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@6
    .line 11171
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    #@9
    .line 11173
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@b
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    #@e
    .line 11168
    return-void
.end method

.method private handleDisplayRemovedLocked(I)V
    .locals 2
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11146
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    .line 11147
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@6
    .line 11148
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isAnimating()Z

    #@9
    move-result v1

    #@a
    if-eqz v1, :cond_0

    #@c
    .line 11149
    const/4 v1, 0x1

    #@d
    iput-boolean v1, v0, Lcom/android/server/wm/DisplayContent;->mDeferredRemoval:Z

    #@f
    .line 11150
    return-void

    #@10
    .line 11153
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@12
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->delete(I)V

    #@15
    .line 11154
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->close()V

    #@18
    .line 11155
    if-nez p1, :cond_1

    #@1a
    .line 11156
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@1c
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@1f
    .line 11157
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@21
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@24
    .line 11160
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@26
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->removeDisplayLocked(I)V

    #@29
    .line 11161
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@2b
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    #@2e
    .line 11145
    return-void
.end method

.method private handleTapOutsideTask(Lcom/android/server/wm/DisplayContent;II)V
    .locals 8
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "x"    # I
    .param p3, "y"    # I

    #@0
    .prologue
    .line 7816
    const/4 v2, -0x1

    #@1
    .line 7817
    .local v2, "taskId":I
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v4

    #@4
    .line 7818
    :try_start_0
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->findTaskForControlPoint(II)Lcom/android/server/wm/Task;

    #@7
    move-result-object v1

    #@8
    .line 7819
    .local v1, "task":Lcom/android/server/wm/Task;
    if-eqz v1, :cond_2

    #@a
    .line 7821
    invoke-virtual {v1}, Lcom/android/server/wm/Task;->getTopVisibleAppMainWindow()Lcom/android/server/wm/WindowState;

    #@d
    move-result-object v3

    #@e
    int-to-float v5, p2

    #@f
    int-to-float v6, p3

    #@10
    const/4 v7, 0x1

    #@11
    .line 7820
    invoke-direct {p0, v3, v7, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@14
    move-result v3

    #@15
    if-nez v3, :cond_0

    #@17
    monitor-exit v4

    #@18
    .line 7822
    return-void

    #@19
    .line 7824
    :cond_0
    :try_start_1
    iget v2, v1, Lcom/android/server/wm/Task;->mTaskId:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1b
    :goto_0
    monitor-exit v4

    #@1c
    .line 7829
    if-ltz v2, :cond_1

    #@1e
    .line 7831
    :try_start_2
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@20
    invoke-interface {v3, v2}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    #@23
    .line 7815
    :cond_1
    :goto_1
    return-void

    #@24
    .line 7826
    :cond_2
    :try_start_3
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->taskIdFromPoint(II)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@27
    move-result v2

    #@28
    goto :goto_0

    #@29
    .line 7817
    .end local v1    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@2a
    monitor-exit v4

    #@2b
    throw v3

    #@2c
    .line 7832
    .restart local v1    # "task":Lcom/android/server/wm/Task;
    :catch_0
    move-exception v0

    #@2d
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method private indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I
    .locals 3
    .param p1, "targetWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "windows"    # Lcom/android/server/wm/WindowList;

    #@0
    .prologue
    .line 1152
    invoke-virtual {p2}, Lcom/android/server/wm/WindowList;->size()I

    #@3
    move-result v2

    #@4
    add-int/lit8 v0, v2, -0x1

    #@6
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_2

    #@8
    .line 1153
    invoke-virtual {p2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@b
    move-result-object v1

    #@c
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@e
    .line 1154
    .local v1, "w":Lcom/android/server/wm/WindowState;
    if-ne v1, p1, :cond_0

    #@10
    .line 1155
    return v0

    #@11
    .line 1157
    :cond_0
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@16
    move-result v2

    #@17
    if-nez v2, :cond_1

    #@19
    .line 1158
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@1b
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@1e
    move-result v2

    #@1f
    if-ltz v2, :cond_1

    #@21
    .line 1159
    return v0

    #@22
    .line 1152
    :cond_1
    add-int/lit8 v0, v0, -0x1

    #@24
    goto :goto_0

    #@25
    .line 1163
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    const/4 v2, -0x1

    #@26
    return v2
.end method

.method private initPolicy()V
    .locals 4

    #@0
    .prologue
    .line 945
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    #@3
    move-result-object v0

    #@4
    new-instance v1, Lcom/android/server/wm/WindowManagerService$4;

    #@6
    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@9
    .line 952
    const-wide/16 v2, 0x0

    #@b
    .line 945
    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    #@e
    .line 944
    return-void
.end method

.method private isSystemSecure()Z
    .locals 3

    #@0
    .prologue
    .line 7164
    const-string/jumbo v0, "1"

    #@3
    const-string/jumbo v1, "ro.secure"

    #@6
    const-string/jumbo v2, "1"

    #@9
    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@c
    move-result-object v1

    #@d
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@10
    move-result v0

    #@11
    if-eqz v0, :cond_0

    #@13
    .line 7165
    const-string/jumbo v0, "0"

    #@16
    const-string/jumbo v1, "ro.debuggable"

    #@19
    const-string/jumbo v2, "0"

    #@1c
    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1f
    move-result-object v1

    #@20
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@23
    move-result v0

    #@24
    .line 7164
    :goto_0
    return v0

    #@25
    :cond_0
    const/4 v0, 0x0

    #@26
    goto :goto_0
.end method

.method static logSurface(Landroid/view/SurfaceControl;Ljava/lang/String;Ljava/lang/String;)V
    .locals 3
    .param p0, "s"    # Landroid/view/SurfaceControl;
    .param p1, "title"    # Ljava/lang/String;
    .param p2, "msg"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2678
    new-instance v1, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    const-string/jumbo v2, "  SURFACE "

    #@8
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b
    move-result-object v1

    #@c
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v1

    #@10
    const-string/jumbo v2, ": "

    #@13
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v1

    #@17
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v1

    #@1b
    const-string/jumbo v2, " / "

    #@1e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@21
    move-result-object v1

    #@22
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v1

    #@26
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v0

    #@2a
    .line 2679
    .local v0, "str":Ljava/lang/String;
    const-string/jumbo v1, "WindowManager"

    #@2d
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@30
    .line 2677
    return-void
.end method

.method static logSurface(Lcom/android/server/wm/WindowState;Ljava/lang/String;Z)V
    .locals 3
    .param p0, "w"    # Lcom/android/server/wm/WindowState;
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "withStackTrace"    # Z

    #@0
    .prologue
    .line 2669
    new-instance v1, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    const-string/jumbo v2, "  SURFACE "

    #@8
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b
    move-result-object v1

    #@c
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v1

    #@10
    const-string/jumbo v2, ": "

    #@13
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v1

    #@17
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v1

    #@1b
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1e
    move-result-object v0

    #@1f
    .line 2670
    .local v0, "str":Ljava/lang/String;
    if-eqz p2, :cond_0

    #@21
    .line 2671
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@23
    invoke-static {v1, v0}, Lcom/android/server/wm/WindowManagerService;->logWithStack(Ljava/lang/String;Ljava/lang/String;)V

    #@26
    .line 2668
    :goto_0
    return-void

    #@27
    .line 2673
    :cond_0
    const-string/jumbo v1, "WindowManager"

    #@2a
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@2d
    goto :goto_0
.end method

.method static logWithStack(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .param p0, "tag"    # Ljava/lang/String;
    .param p1, "s"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2683
    const/4 v0, 0x0

    #@1
    .line 2688
    .local v0, "e":Ljava/lang/RuntimeException;
    invoke-static {p0, p1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@4
    .line 2682
    return-void
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)Lcom/android/server/wm/WindowManagerService;
    .locals 8
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "haveInputMethods"    # Z
    .param p3, "showBootMsgs"    # Z
    .param p4, "onlyCore"    # Z

    #@0
    .prologue
    .line 933
    const/4 v0, 0x1

    #@1
    new-array v1, v0, [Lcom/android/server/wm/WindowManagerService;

    #@3
    .line 934
    .local v1, "holder":[Lcom/android/server/wm/WindowManagerService;
    invoke-static {}, Lcom/android/server/DisplayThread;->getHandler()Landroid/os/Handler;

    #@6
    move-result-object v7

    #@7
    new-instance v0, Lcom/android/server/wm/WindowManagerService$3;

    #@9
    move-object v2, p0

    #@a
    move-object v3, p1

    #@b
    move v4, p2

    #@c
    move v5, p3

    #@d
    move v6, p4

    #@e
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService$3;-><init>([Lcom/android/server/wm/WindowManagerService;Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    #@11
    .line 940
    const-wide/16 v2, 0x0

    #@13
    .line 934
    invoke-virtual {v7, v0, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    #@16
    .line 941
    const/4 v0, 0x0

    #@17
    aget-object v0, v1, v0

    #@19
    return-object v0
.end method

.method private newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;
    .locals 7
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 11045
    new-instance v0, Lcom/android/server/wm/DisplayContent;

    #@2
    invoke-direct {v0, p1, p0}, Lcom/android/server/wm/DisplayContent;-><init>(Landroid/view/Display;Lcom/android/server/wm/WindowManagerService;)V

    #@5
    .line 11046
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@8
    move-result v1

    #@9
    .line 11048
    .local v1, "displayId":I
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v4, v1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@e
    .line 11050
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@11
    move-result-object v2

    #@12
    .line 11051
    .local v2, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v3, Landroid/graphics/Rect;

    #@14
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@17
    .line 11052
    .local v3, "rect":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@19
    iget-object v5, v2, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    #@1b
    iget-object v6, v2, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    #@1d
    invoke-virtual {v4, v5, v6, v3}, Lcom/android/server/wm/DisplaySettings;->getOverscanLocked(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Rect;)V

    #@20
    .line 11053
    iget v4, v3, Landroid/graphics/Rect;->left:I

    #@22
    iput v4, v2, Landroid/view/DisplayInfo;->overscanLeft:I

    #@24
    .line 11054
    iget v4, v3, Landroid/graphics/Rect;->top:I

    #@26
    iput v4, v2, Landroid/view/DisplayInfo;->overscanTop:I

    #@28
    .line 11055
    iget v4, v3, Landroid/graphics/Rect;->right:I

    #@2a
    iput v4, v2, Landroid/view/DisplayInfo;->overscanRight:I

    #@2c
    .line 11056
    iget v4, v3, Landroid/graphics/Rect;->bottom:I

    #@2e
    iput v4, v2, Landroid/view/DisplayInfo;->overscanBottom:I

    #@30
    .line 11057
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@32
    invoke-virtual {v4, v1, v2}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    #@35
    .line 11058
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    #@38
    .line 11061
    if-nez v1, :cond_0

    #@3a
    .line 11062
    new-instance v4, Lcom/android/server/wm/TaskTapPointerEventListener;

    #@3c
    invoke-direct {v4, p0, v0}, Lcom/android/server/wm/TaskTapPointerEventListener;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;)V

    #@3f
    iput-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@41
    .line 11063
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@43
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@46
    .line 11064
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@48
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@4b
    .line 11067
    :cond_0
    return-object v0
.end method

.method private notifyFocusChanged()V
    .locals 5

    #@0
    .prologue
    .line 7442
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 7443
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v3

    #@9
    if-eqz v3, :cond_0

    #@b
    monitor-exit v4

    #@c
    .line 7444
    return-void

    #@d
    .line 7446
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v3

    #@13
    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@15
    .line 7447
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@17
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    #@1a
    move-result-object v2

    #@1b
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1d
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4

    #@1e
    .line 7449
    array-length v0, v2

    #@1f
    .line 7450
    .local v0, "N":I
    const/4 v1, 0x0

    #@20
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@22
    .line 7451
    aget-object v3, v2, v1

    #@24
    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->focusChanged()V

    #@27
    .line 7450
    add-int/lit8 v1, v1, 0x1

    #@29
    goto :goto_0

    #@2a
    .line 7442
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_0
    move-exception v3

    #@2b
    monitor-exit v4

    #@2c
    throw v3

    #@2d
    .line 7440
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :cond_1
    return-void
.end method

.method private notifyWindowsChanged()V
    .locals 5

    #@0
    .prologue
    .line 7427
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 7428
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v3

    #@9
    if-eqz v3, :cond_0

    #@b
    monitor-exit v4

    #@c
    .line 7429
    return-void

    #@d
    .line 7431
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v3

    #@13
    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@15
    .line 7432
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@17
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    #@1a
    move-result-object v2

    #@1b
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1d
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4

    #@1e
    .line 7434
    array-length v0, v2

    #@1f
    .line 7435
    .local v0, "N":I
    const/4 v1, 0x0

    #@20
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@22
    .line 7436
    aget-object v3, v2, v1

    #@24
    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->windowsChanged()V

    #@27
    .line 7435
    add-int/lit8 v1, v1, 0x1

    #@29
    goto :goto_0

    #@2a
    .line 7427
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_0
    move-exception v3

    #@2b
    monitor-exit v4

    #@2c
    throw v3

    #@2d
    .line 7425
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :cond_1
    return-void
.end method

.method private onConfigurationChanged()[I
    .locals 6

    #@0
    .prologue
    .line 3928
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->onConfigurationChanged()V

    #@5
    .line 3930
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@8
    move-result-object v0

    #@9
    .line 3931
    .local v0, "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@b
    invoke-virtual {v4, v0}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    #@e
    move-result v4

    #@f
    if-nez v4, :cond_0

    #@11
    .line 3935
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@13
    invoke-virtual {v4, v0}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    #@16
    .line 3937
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@18
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContentList;->size()I

    #@1b
    move-result v4

    #@1c
    add-int/lit8 v1, v4, -0x1

    #@1e
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    #@20
    .line 3938
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@22
    invoke-virtual {v4, v1}, Lcom/android/server/wm/DisplayContentList;->remove(I)Ljava/lang/Object;

    #@25
    move-result-object v4

    #@26
    check-cast v4, Lcom/android/server/wm/DisplayContent;

    #@28
    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@2b
    .line 3937
    add-int/lit8 v1, v1, -0x1

    #@2d
    goto :goto_0

    #@2e
    .line 3941
    :cond_1
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@31
    move-result-object v4

    #@32
    invoke-virtual {v4}, Lcom/android/server/wm/DockedStackDividerController;->onConfigurationChanged()V

    #@35
    .line 3942
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@37
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@3a
    .line 3943
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@3c
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@3f
    move-result v4

    #@40
    add-int/lit8 v3, v4, -0x1

    #@42
    .local v3, "stackNdx":I
    :goto_1
    if-ltz v3, :cond_3

    #@44
    .line 3944
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@46
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@49
    move-result-object v2

    #@4a
    check-cast v2, Lcom/android/server/wm/TaskStack;

    #@4c
    .line 3945
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->onConfigurationChanged()Z

    #@4f
    move-result v4

    #@50
    if-eqz v4, :cond_2

    #@52
    .line 3946
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@54
    iget v5, v2, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@56
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@59
    move-result-object v5

    #@5a
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@5d
    .line 3943
    :cond_2
    add-int/lit8 v3, v3, -0x1

    #@5f
    goto :goto_1

    #@60
    .line 3949
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_3
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@62
    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    #@65
    move-result v4

    #@66
    if-eqz v4, :cond_4

    #@68
    .line 3950
    const/4 v4, 0x0

    #@69
    .line 3949
    :goto_2
    return-object v4

    #@6a
    .line 3950
    :cond_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@6c
    invoke-static {v4}, Lcom/android/internal/util/ArrayUtils;->convertToIntArray(Ljava/util/List;)[I

    #@6f
    move-result-object v4

    #@70
    goto :goto_2
.end method

.method private placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1091
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v1

    #@4
    .line 1092
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v0

    #@8
    .line 1096
    .local v0, "i":I
    add-int/lit8 v2, v0, 0x1

    #@a
    invoke-virtual {v1, v2, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@d
    .line 1097
    const/4 v2, 0x1

    #@e
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@10
    .line 1090
    return-void
.end method

.method private placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .locals 5
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1101
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v1

    #@4
    .line 1102
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v0

    #@8
    .line 1106
    .local v0, "i":I
    if-gez v0, :cond_0

    #@a
    .line 1107
    const-string/jumbo v2, "WindowManager"

    #@d
    new-instance v3, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v4, "placeWindowBefore: Unable to find "

    #@15
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v3

    #@19
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v3

    #@1d
    const-string/jumbo v4, " in "

    #@20
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v3

    #@24
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v3

    #@28
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b
    move-result-object v3

    #@2c
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@2f
    .line 1108
    const/4 v0, 0x0

    #@30
    .line 1110
    :cond_0
    invoke-virtual {v1, v0, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@33
    .line 1111
    const/4 v2, 0x1

    #@34
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@36
    .line 1100
    return-void
.end method

.method private prepareFreezingAllTaskBounds()V
    .locals 5

    #@0
    .prologue
    .line 3918
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v4

    #@6
    add-int/lit8 v0, v4, -0x1

    #@8
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    #@a
    .line 3919
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@f
    move-result-object v4

    #@10
    check-cast v4, Lcom/android/server/wm/DisplayContent;

    #@12
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@15
    move-result-object v3

    #@16
    .line 3920
    .local v3, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@19
    move-result v4

    #@1a
    add-int/lit8 v2, v4, -0x1

    #@1c
    .local v2, "stackNdx":I
    :goto_1
    if-ltz v2, :cond_0

    #@1e
    .line 3921
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@21
    move-result-object v1

    #@22
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@24
    .line 3922
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->prepareFreezingTaskBounds()V

    #@27
    .line 3920
    add-int/lit8 v2, v2, -0x1

    #@29
    goto :goto_1

    #@2a
    .line 3918
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@2c
    goto :goto_0

    #@2d
    .line 3917
    .end local v2    # "stackNdx":I
    .end local v3    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    :cond_1
    return-void
.end method

.method private prepareNoneTransitionForRelaunching(Lcom/android/server/wm/AppWindowToken;)V
    .locals 2
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2319
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@3
    if-eqz v0, :cond_0

    #@5
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@7
    invoke-virtual {v0, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@a
    move-result v0

    #@b
    if-eqz v0, :cond_1

    #@d
    .line 2314
    :cond_0
    :goto_0
    return-void

    #@e
    .line 2319
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->isRelaunching()Z

    #@11
    move-result v0

    #@12
    if-eqz v0, :cond_0

    #@14
    .line 2320
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@16
    invoke-virtual {v0, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@19
    .line 2321
    invoke-virtual {p0, v1, v1}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    #@1c
    .line 2322
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    #@1f
    goto :goto_0
.end method

.method private prepareWindowReplacementTransition(Lcom/android/server/wm/AppWindowToken;)Z
    .locals 10
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v9, 0x1

    #@1
    const/4 v5, 0x0

    #@2
    .line 2287
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    #@5
    .line 2288
    const/4 v3, 0x0

    #@6
    .line 2289
    .local v3, "replacedWindow":Lcom/android/server/wm/WindowState;
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@8
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@b
    move-result v4

    #@c
    add-int/lit8 v2, v4, -0x1

    #@e
    .end local v3    # "replacedWindow":Lcom/android/server/wm/WindowState;
    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_1

    #@10
    if-nez v3, :cond_1

    #@12
    .line 2290
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@14
    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@17
    move-result-object v0

    #@18
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@1a
    .line 2291
    .local v0, "candidate":Lcom/android/server/wm/WindowState;
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@1c
    if-eqz v4, :cond_0

    #@1e
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    #@20
    if-eqz v4, :cond_0

    #@22
    .line 2292
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAnimateReplacingWindow:Z

    #@24
    .line 2291
    if-eqz v4, :cond_0

    #@26
    .line 2293
    move-object v3, v0

    #@27
    .line 2289
    :cond_0
    add-int/lit8 v2, v2, -0x1

    #@29
    goto :goto_0

    #@2a
    .line 2296
    .end local v0    # "candidate":Lcom/android/server/wm/WindowState;
    :cond_1
    if-nez v3, :cond_2

    #@2c
    .line 2299
    return v5

    #@2d
    .line 2303
    :cond_2
    iget-object v1, v3, Lcom/android/server/wm/WindowState;->mVisibleFrame:Landroid/graphics/Rect;

    #@2f
    .line 2306
    .local v1, "frame":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@31
    invoke-virtual {v4, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@34
    .line 2307
    const/16 v4, 0x12

    #@36
    invoke-virtual {p0, v4, v9}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    #@39
    .line 2308
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@3b
    iget v5, v1, Landroid/graphics/Rect;->left:I

    #@3d
    iget v6, v1, Landroid/graphics/Rect;->top:I

    #@3f
    .line 2309
    invoke-virtual {v1}, Landroid/graphics/Rect;->width()I

    #@42
    move-result v7

    #@43
    invoke-virtual {v1}, Landroid/graphics/Rect;->height()I

    #@46
    move-result v8

    #@47
    .line 2308
    invoke-virtual {v4, v5, v6, v7, v8}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V

    #@4a
    .line 2310
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    #@4d
    .line 2311
    return v9
.end method

.method private final reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I
    .locals 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "index"    # I
    .param p3, "token"    # Lcom/android/server/wm/WindowToken;

    #@0
    .prologue
    .line 5009
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@5
    move-result v0

    #@6
    .line 5010
    .local v0, "NW":I
    const/4 v1, 0x0

    #@7
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_2

    #@9
    .line 5011
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@b
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@e
    move-result-object v2

    #@f
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@11
    .line 5012
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@14
    move-result-object v3

    #@15
    .line 5013
    .local v3, "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    if-eq v3, p1, :cond_0

    #@17
    if-nez v3, :cond_1

    #@19
    .line 5014
    :cond_0
    iput-object p1, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    #@1b
    .line 5015
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@1e
    move-result p2

    #@1f
    .line 5010
    :cond_1
    add-int/lit8 v1, v1, 0x1

    #@21
    goto :goto_0

    #@22
    .line 5018
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .end local v3    # "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2
    return p2
.end method

.method private final reAddWindowLocked(ILcom/android/server/wm/WindowState;)I
    .locals 7
    .param p1, "index"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 4976
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@4
    move-result-object v4

    #@5
    .line 4978
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@7
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@a
    move-result v0

    #@b
    .line 4979
    .local v0, "NCW":I
    const/4 v3, 0x0

    #@c
    .line 4980
    .local v3, "winAdded":Z
    const/4 v2, 0x0

    #@d
    .local v2, "j":I
    :goto_0
    if-ge v2, v0, :cond_1

    #@f
    .line 4981
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@11
    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@17
    .line 4982
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_0

    #@19
    iget v5, v1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@1b
    if-ltz v5, :cond_0

    #@1d
    .line 4985
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@1f
    .line 4986
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@22
    .line 4987
    add-int/lit8 p1, p1, 0x1

    #@24
    .line 4988
    const/4 v3, 0x1

    #@25
    .line 4992
    :cond_0
    iput-boolean v6, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@27
    .line 4993
    invoke-virtual {v4, p1, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@2a
    .line 4994
    add-int/lit8 p1, p1, 0x1

    #@2c
    .line 4980
    add-int/lit8 v2, v2, 0x1

    #@2e
    goto :goto_0

    #@2f
    .line 4996
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_1
    if-nez v3, :cond_2

    #@31
    .line 4999
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@33
    .line 5000
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@36
    .line 5001
    add-int/lit8 p1, p1, 0x1

    #@38
    .line 5003
    :cond_2
    const/4 v5, 0x1

    #@39
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@3b
    .line 5004
    return p1
.end method

.method private reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 1679
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@4
    .line 1683
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    .line 1684
    .local v0, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@b
    move-result v1

    #@c
    .line 1685
    .local v1, "wpos":I
    if-ltz v1, :cond_0

    #@e
    .line 1687
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@11
    .line 1688
    const/4 v2, 0x1

    #@12
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@14
    .line 1689
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@17
    .line 1678
    :cond_0
    return-void
.end method

.method private readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/16 v11, 0x2c

    #@2
    const/4 v9, 0x0

    #@3
    const/4 v10, 0x0

    #@4
    .line 9136
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@6
    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@9
    move-result-object v7

    #@a
    .line 9137
    const-string/jumbo v8, "display_size_forced"

    #@d
    .line 9136
    invoke-static {v7, v8}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    #@10
    move-result-object v5

    #@11
    .line 9138
    .local v5, "sizeStr":Ljava/lang/String;
    if-eqz v5, :cond_0

    #@13
    invoke-virtual {v5}, Ljava/lang/String;->length()I

    #@16
    move-result v7

    #@17
    if-nez v7, :cond_1

    #@19
    .line 9139
    :cond_0
    const-string/jumbo v7, "ro.config.size_override"

    #@1c
    invoke-static {v7, v9}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1f
    move-result-object v5

    #@20
    .line 9141
    :cond_1
    if-eqz v5, :cond_3

    #@22
    invoke-virtual {v5}, Ljava/lang/String;->length()I

    #@25
    move-result v7

    #@26
    if-lez v7, :cond_3

    #@28
    .line 9142
    invoke-virtual {v5, v11}, Ljava/lang/String;->indexOf(I)I

    #@2b
    move-result v4

    #@2c
    .line 9143
    .local v4, "pos":I
    if-lez v4, :cond_3

    #@2e
    invoke-virtual {v5, v11}, Ljava/lang/String;->lastIndexOf(I)I

    #@31
    move-result v7

    #@32
    if-ne v7, v4, :cond_3

    #@34
    .line 9146
    const/4 v7, 0x0

    #@35
    :try_start_0
    invoke-virtual {v5, v7, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@38
    move-result-object v7

    #@39
    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@3c
    move-result v6

    #@3d
    .line 9147
    .local v6, "width":I
    add-int/lit8 v7, v4, 0x1

    #@3f
    invoke-virtual {v5, v7}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@42
    move-result-object v7

    #@43
    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@46
    move-result v2

    #@47
    .line 9148
    .local v2, "height":I
    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@49
    if-ne v7, v6, :cond_2

    #@4b
    .line 9149
    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@4d
    if-eq v7, v2, :cond_3

    #@4f
    .line 9150
    :cond_2
    const-string/jumbo v7, "WindowManager"

    #@52
    new-instance v8, Ljava/lang/StringBuilder;

    #@54
    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    #@57
    const-string/jumbo v9, "FORCED DISPLAY SIZE: "

    #@5a
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d
    move-result-object v8

    #@5e
    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@61
    move-result-object v8

    #@62
    const-string/jumbo v9, "x"

    #@65
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@68
    move-result-object v8

    #@69
    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@6c
    move-result-object v8

    #@6d
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@70
    move-result-object v8

    #@71
    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@74
    .line 9151
    iput v6, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@76
    .line 9152
    iput v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@78
    .line 9160
    .end local v2    # "height":I
    .end local v4    # "pos":I
    .end local v6    # "width":I
    :cond_3
    :goto_0
    iget v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@7a
    invoke-direct {p0, v7}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    #@7d
    move-result v0

    #@7e
    .line 9161
    .local v0, "density":I
    if-eqz v0, :cond_4

    #@80
    .line 9162
    iput v0, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@82
    .line 9166
    :cond_4
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@84
    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@87
    move-result-object v7

    #@88
    .line 9167
    const-string/jumbo v8, "display_scaling_force"

    #@8b
    .line 9166
    invoke-static {v7, v8, v10}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@8e
    move-result v3

    #@8f
    .line 9168
    .local v3, "mode":I
    if-eqz v3, :cond_5

    #@91
    .line 9169
    const-string/jumbo v7, "WindowManager"

    #@94
    const-string/jumbo v8, "FORCED DISPLAY SCALING DISABLED"

    #@97
    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@9a
    .line 9170
    const/4 v7, 0x1

    #@9b
    iput-boolean v7, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    #@9d
    .line 9134
    :cond_5
    return-void

    #@9e
    .line 9154
    .end local v0    # "density":I
    .end local v3    # "mode":I
    .restart local v4    # "pos":I
    :catch_0
    move-exception v1

    #@9f
    .local v1, "ex":Ljava/lang/NumberFormatException;
    goto :goto_0
.end method

.method private rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 29
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 9442
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v23

    #@4
    .line 9443
    .local v23, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    #@7
    move-result v4

    #@8
    .line 9445
    .local v4, "NW":I
    const/4 v8, -0x1

    #@9
    .line 9446
    .local v8, "lastBelow":I
    const/4 v9, 0x0

    #@a
    .line 9448
    .local v9, "numRemoved":I
    move-object/from16 v0, p0

    #@c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@e
    move-object/from16 v26, v0

    #@10
    move-object/from16 v0, v26

    #@12
    array-length v0, v0

    #@13
    move/from16 v26, v0

    #@15
    move/from16 v0, v26

    #@17
    if-ge v0, v4, :cond_0

    #@19
    .line 9449
    add-int/lit8 v26, v4, 0xa

    #@1b
    move/from16 v0, v26

    #@1d
    new-array v0, v0, [Lcom/android/server/wm/WindowState;

    #@1f
    move-object/from16 v26, v0

    #@21
    move-object/from16 v0, v26

    #@23
    move-object/from16 v1, p0

    #@25
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@27
    .line 9453
    :cond_0
    const/4 v6, 0x0

    #@28
    .line 9454
    .local v6, "i":I
    :goto_0
    if-ge v6, v4, :cond_3

    #@2a
    .line 9455
    move-object/from16 v0, v23

    #@2c
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2f
    move-result-object v21

    #@30
    check-cast v21, Lcom/android/server/wm/WindowState;

    #@32
    .line 9456
    .local v21, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v21

    #@34
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@36
    move-object/from16 v26, v0

    #@38
    if-eqz v26, :cond_1

    #@3a
    .line 9457
    move-object/from16 v0, v23

    #@3c
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@3f
    move-result-object v22

    #@40
    check-cast v22, Lcom/android/server/wm/WindowState;

    #@42
    .line 9458
    .local v22, "win":Lcom/android/server/wm/WindowState;
    const/16 v26, 0x1

    #@44
    move/from16 v0, v26

    #@46
    move-object/from16 v1, v22

    #@48
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@4a
    .line 9459
    move-object/from16 v0, p0

    #@4c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@4e
    move-object/from16 v26, v0

    #@50
    aput-object v22, v26, v9

    #@52
    .line 9460
    const/16 v26, 0x1

    #@54
    move/from16 v0, v26

    #@56
    move-object/from16 v1, p0

    #@58
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@5a
    .line 9462
    add-int/lit8 v4, v4, -0x1

    #@5c
    .line 9463
    add-int/lit8 v9, v9, 0x1

    #@5e
    .line 9464
    goto :goto_0

    #@5f
    .line 9465
    .end local v22    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v26, v6, -0x1

    #@61
    move/from16 v0, v26

    #@63
    if-ne v8, v0, :cond_2

    #@65
    .line 9466
    move-object/from16 v0, v21

    #@67
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@69
    move-object/from16 v26, v0

    #@6b
    move-object/from16 v0, v26

    #@6d
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@6f
    move/from16 v26, v0

    #@71
    const/16 v27, 0x7dd

    #@73
    move/from16 v0, v26

    #@75
    move/from16 v1, v27

    #@77
    if-ne v0, v1, :cond_2

    #@79
    .line 9467
    move v8, v6

    #@7a
    .line 9470
    :cond_2
    add-int/lit8 v6, v6, 0x1

    #@7c
    goto :goto_0

    #@7d
    .line 9475
    .end local v21    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    add-int/lit8 v8, v8, 0x1

    #@7f
    .line 9476
    move v6, v8

    #@80
    .line 9482
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@83
    move-result-object v15

    #@84
    .line 9483
    .local v15, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    #@87
    move-result v10

    #@88
    .line 9484
    .local v10, "numStacks":I
    const/4 v14, 0x0

    #@89
    .local v14, "stackNdx":I
    :goto_1
    if-ge v14, v10, :cond_5

    #@8b
    .line 9485
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@8e
    move-result-object v26

    #@8f
    check-cast v26, Lcom/android/server/wm/TaskStack;

    #@91
    move-object/from16 v0, v26

    #@93
    iget-object v5, v0, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    #@95
    .line 9486
    .local v5, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    #@98
    move-result v3

    #@99
    .line 9487
    .local v3, "NT":I
    const/4 v7, 0x0

    #@9a
    .local v7, "j":I
    :goto_2
    if-ge v7, v3, :cond_4

    #@9c
    .line 9488
    invoke-virtual {v5, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@9f
    move-result-object v26

    #@a0
    check-cast v26, Lcom/android/server/wm/WindowToken;

    #@a2
    move-object/from16 v0, p0

    #@a4
    move-object/from16 v1, p1

    #@a6
    move-object/from16 v2, v26

    #@a8
    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    #@ab
    move-result v6

    #@ac
    .line 9487
    add-int/lit8 v7, v7, 0x1

    #@ae
    goto :goto_2

    #@af
    .line 9484
    :cond_4
    add-int/lit8 v14, v14, 0x1

    #@b1
    goto :goto_1

    #@b2
    .line 9493
    .end local v3    # "NT":I
    .end local v5    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "j":I
    :cond_5
    const/4 v14, 0x0

    #@b3
    :goto_3
    if-ge v14, v10, :cond_a

    #@b5
    .line 9494
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@b8
    move-result-object v26

    #@b9
    check-cast v26, Lcom/android/server/wm/TaskStack;

    #@bb
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@be
    move-result-object v18

    #@bf
    .line 9495
    .local v18, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    #@c2
    move-result v11

    #@c3
    .line 9496
    .local v11, "numTasks":I
    const/16 v17, 0x0

    #@c5
    .local v17, "taskNdx":I
    :goto_4
    move/from16 v0, v17

    #@c7
    if-ge v0, v11, :cond_9

    #@c9
    .line 9497
    move-object/from16 v0, v18

    #@cb
    move/from16 v1, v17

    #@cd
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@d0
    move-result-object v26

    #@d1
    check-cast v26, Lcom/android/server/wm/Task;

    #@d3
    move-object/from16 v0, v26

    #@d5
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@d7
    move-object/from16 v20, v0

    #@d9
    .line 9498
    .local v20, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/AppTokenList;->size()I

    #@dc
    move-result v12

    #@dd
    .line 9499
    .local v12, "numTokens":I
    const/16 v19, 0x0

    #@df
    .local v19, "tokenNdx":I
    :goto_5
    move/from16 v0, v19

    #@e1
    if-ge v0, v12, :cond_8

    #@e3
    .line 9500
    move-object/from16 v0, v20

    #@e5
    move/from16 v1, v19

    #@e7
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@ea
    move-result-object v25

    #@eb
    check-cast v25, Lcom/android/server/wm/AppWindowToken;

    #@ed
    .line 9501
    .local v25, "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v25

    #@ef
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@f1
    move/from16 v26, v0

    #@f3
    if-eqz v26, :cond_6

    #@f5
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/AppWindowToken;->waitingForReplacement()Z

    #@f8
    move-result v26

    #@f9
    if-eqz v26, :cond_7

    #@fb
    .line 9504
    :cond_6
    move-object/from16 v0, p0

    #@fd
    move-object/from16 v1, p1

    #@ff
    move-object/from16 v2, v25

    #@101
    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    #@104
    move-result v6

    #@105
    .line 9499
    :cond_7
    add-int/lit8 v19, v19, 0x1

    #@107
    goto :goto_5

    #@108
    .line 9496
    .end local v25    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    add-int/lit8 v17, v17, 0x1

    #@10a
    goto :goto_4

    #@10b
    .line 9493
    .end local v12    # "numTokens":I
    .end local v19    # "tokenNdx":I
    .end local v20    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_9
    add-int/lit8 v14, v14, 0x1

    #@10d
    goto :goto_3

    #@10e
    .line 9509
    .end local v11    # "numTasks":I
    .end local v17    # "taskNdx":I
    .end local v18    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_a
    sub-int/2addr v6, v8

    #@10f
    .line 9510
    if-eq v6, v9, :cond_d

    #@111
    .line 9511
    const/16 v26, 0x1

    #@113
    move/from16 v0, v26

    #@115
    move-object/from16 v1, p1

    #@117
    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@119
    .line 9512
    const-string/jumbo v26, "WindowManager"

    #@11c
    new-instance v27, Ljava/lang/StringBuilder;

    #@11e
    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    #@121
    const-string/jumbo v28, "On display="

    #@124
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@127
    move-result-object v27

    #@128
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@12b
    move-result v28

    #@12c
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@12f
    move-result-object v27

    #@130
    const-string/jumbo v28, " Rebuild removed "

    #@133
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@136
    move-result-object v27

    #@137
    move-object/from16 v0, v27

    #@139
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@13c
    move-result-object v27

    #@13d
    .line 9513
    const-string/jumbo v28, " windows but added "

    #@140
    .line 9512
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@143
    move-result-object v27

    #@144
    move-object/from16 v0, v27

    #@146
    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@149
    move-result-object v27

    #@14a
    .line 9513
    const-string/jumbo v28, " rebuildAppWindowListLocked() "

    #@14d
    .line 9512
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@150
    move-result-object v27

    #@151
    .line 9514
    const-string/jumbo v28, " callers="

    #@154
    .line 9512
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@157
    move-result-object v27

    #@158
    .line 9514
    const/16 v28, 0xa

    #@15a
    invoke-static/range {v28 .. v28}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    #@15d
    move-result-object v28

    #@15e
    .line 9512
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@161
    move-result-object v27

    #@162
    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@165
    move-result-object v27

    #@166
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@169
    .line 9515
    const/4 v6, 0x0

    #@16a
    :goto_6
    if-ge v6, v9, :cond_c

    #@16c
    .line 9516
    move-object/from16 v0, p0

    #@16e
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@170
    move-object/from16 v26, v0

    #@172
    aget-object v24, v26, v6

    #@174
    .line 9517
    .local v24, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v24

    #@176
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@178
    move/from16 v26, v0

    #@17a
    if-eqz v26, :cond_b

    #@17c
    .line 9518
    new-instance v16, Ljava/io/StringWriter;

    #@17e
    invoke-direct/range {v16 .. v16}, Ljava/io/StringWriter;-><init>()V

    #@181
    .line 9519
    .local v16, "sw":Ljava/io/StringWriter;
    new-instance v13, Lcom/android/internal/util/FastPrintWriter;

    #@183
    const/16 v26, 0x0

    #@185
    const/16 v27, 0x400

    #@187
    move-object/from16 v0, v16

    #@189
    move/from16 v1, v26

    #@18b
    move/from16 v2, v27

    #@18d
    invoke-direct {v13, v0, v1, v2}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    #@190
    .line 9520
    .local v13, "pw":Ljava/io/PrintWriter;
    const-string/jumbo v26, ""

    #@193
    const/16 v27, 0x1

    #@195
    move-object/from16 v0, v24

    #@197
    move-object/from16 v1, v26

    #@199
    move/from16 v2, v27

    #@19b
    invoke-virtual {v0, v13, v1, v2}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@19e
    .line 9521
    invoke-virtual {v13}, Ljava/io/PrintWriter;->flush()V

    #@1a1
    .line 9522
    const-string/jumbo v26, "WindowManager"

    #@1a4
    new-instance v27, Ljava/lang/StringBuilder;

    #@1a6
    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    #@1a9
    const-string/jumbo v28, "This window was lost: "

    #@1ac
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1af
    move-result-object v27

    #@1b0
    move-object/from16 v0, v27

    #@1b2
    move-object/from16 v1, v24

    #@1b4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1b7
    move-result-object v27

    #@1b8
    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1bb
    move-result-object v27

    #@1bc
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1bf
    .line 9523
    const-string/jumbo v26, "WindowManager"

    #@1c2
    invoke-virtual/range {v16 .. v16}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    #@1c5
    move-result-object v27

    #@1c6
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1c9
    .line 9524
    move-object/from16 v0, v24

    #@1cb
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1cd
    move-object/from16 v26, v0

    #@1cf
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    #@1d2
    .line 9515
    .end local v13    # "pw":Ljava/io/PrintWriter;
    .end local v16    # "sw":Ljava/io/StringWriter;
    :cond_b
    add-int/lit8 v6, v6, 0x1

    #@1d4
    goto :goto_6

    #@1d5
    .line 9527
    .end local v24    # "ws":Lcom/android/server/wm/WindowState;
    :cond_c
    const-string/jumbo v26, "WindowManager"

    #@1d8
    const-string/jumbo v27, "Current app token list:"

    #@1db
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1de
    .line 9528
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpAppTokensLocked()V

    #@1e1
    .line 9529
    const-string/jumbo v26, "WindowManager"

    #@1e4
    const-string/jumbo v27, "Final window list:"

    #@1e7
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1ea
    .line 9530
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked()V

    #@1ed
    .line 9532
    :cond_d
    move-object/from16 v0, p0

    #@1ef
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@1f1
    move-object/from16 v26, v0

    #@1f3
    const/16 v27, 0x0

    #@1f5
    invoke-static/range {v26 .. v27}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    #@1f8
    .line 9441
    return-void
.end method

.method private reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 9328
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@4
    if-nez v1, :cond_0

    #@6
    .line 9329
    return-void

    #@7
    .line 9331
    :cond_0
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    #@a
    .line 9332
    iput-boolean v2, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@c
    .line 9334
    invoke-virtual {p0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@f
    move-result v0

    #@10
    .line 9335
    .local v0, "configChanged":Z
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@12
    invoke-virtual {v1}, Landroid/content/res/Configuration;->setToDefaults()V

    #@15
    .line 9336
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@17
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@19
    invoke-virtual {v1, v4}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    #@1c
    .line 9337
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@1e
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@21
    .line 9338
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@23
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@25
    invoke-virtual {v1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    #@28
    move-result v1

    #@29
    if-eqz v1, :cond_2

    #@2b
    move v1, v2

    #@2c
    :goto_0
    or-int/2addr v0, v1

    #@2d
    .line 9340
    if-eqz v0, :cond_1

    #@2f
    .line 9341
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@31
    .line 9342
    invoke-direct {p0, v3, v3, v3}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@34
    .line 9343
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@36
    const/16 v2, 0x12

    #@38
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@3b
    .line 9344
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@3d
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    #@40
    move-result v1

    #@41
    if-nez v1, :cond_1

    #@43
    .line 9345
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@45
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    #@48
    .line 9349
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@4a
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@4d
    .line 9326
    return-void

    #@4e
    :cond_2
    move v1, v3

    #@4f
    .line 9338
    goto :goto_0
.end method

.method private reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I
    .locals 4
    .param p1, "curSize"    # I
    .param p2, "rotation"    # I
    .param p3, "uiMode"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;
    .param p5, "dw"    # I
    .param p6, "dh"    # I

    #@0
    .prologue
    .line 7580
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v2, p5, p6, p2, p3}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    #@5
    move-result v2

    #@6
    iput v2, p4, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    #@8
    .line 7581
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a
    invoke-interface {v2, p5, p6, p2, p3}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    #@d
    move-result v2

    #@e
    iput v2, p4, Landroid/util/DisplayMetrics;->noncompatHeightPixels:I

    #@10
    .line 7582
    const/4 v2, 0x0

    #@11
    invoke-static {p4, v2}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    #@14
    move-result v0

    #@15
    .line 7583
    .local v0, "scale":F
    iget v2, p4, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    #@17
    int-to-float v2, v2

    #@18
    div-float/2addr v2, v0

    #@19
    iget v3, p4, Landroid/util/DisplayMetrics;->density:F

    #@1b
    div-float/2addr v2, v3

    #@1c
    const/high16 v3, 0x3f000000    # 0.5f

    #@1e
    add-float/2addr v2, v3

    #@1f
    float-to-int v1, v2

    #@20
    .line 7584
    .local v1, "size":I
    if-eqz p1, :cond_0

    #@22
    if-ge v1, p1, :cond_1

    #@24
    .line 7585
    :cond_0
    move p1, v1

    #@25
    .line 7587
    :cond_1
    return p1
.end method

.method private reduceConfigLayout(IIFIII)I
    .locals 6
    .param p1, "curLayout"    # I
    .param p2, "rotation"    # I
    .param p3, "density"    # F
    .param p4, "dw"    # I
    .param p5, "dh"    # I
    .param p6, "uiMode"    # I

    #@0
    .prologue
    .line 7528
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v5, p4, p5, p2, p6}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    #@5
    move-result v4

    #@6
    .line 7529
    .local v4, "w":I
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@8
    invoke-interface {v5, p4, p5, p2, p6}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    #@b
    move-result v0

    #@c
    .line 7532
    .local v0, "h":I
    move v1, v4

    #@d
    .line 7533
    .local v1, "longSize":I
    move v2, v0

    #@e
    .line 7534
    .local v2, "shortSize":I
    if-ge v4, v0, :cond_0

    #@10
    .line 7535
    move v3, v4

    #@11
    .line 7536
    .local v3, "tmp":I
    move v1, v0

    #@12
    .line 7537
    move v2, v4

    #@13
    .line 7539
    .end local v3    # "tmp":I
    :cond_0
    int-to-float v5, v1

    #@14
    div-float/2addr v5, p3

    #@15
    float-to-int v1, v5

    #@16
    .line 7540
    int-to-float v5, v2

    #@17
    div-float/2addr v5, p3

    #@18
    float-to-int v2, v5

    #@19
    .line 7541
    invoke-static {p1, v1, v2}, Landroid/content/res/Configuration;->reduceScreenLayout(III)I

    #@1c
    move-result v5

    #@1d
    return v5
.end method

.method private relayoutVisibleWindow(Landroid/content/res/Configuration;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;II)I
    .locals 8
    .param p1, "outConfig"    # Landroid/content/res/Configuration;
    .param p2, "result"    # I
    .param p3, "win"    # Lcom/android/server/wm/WindowState;
    .param p4, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p5, "attrChanges"    # I
    .param p6, "oldVisibility"    # I

    #@0
    .prologue
    const/16 v4, 0x8

    #@2
    const/4 v7, 0x1

    #@3
    const/4 v3, 0x0

    #@4
    .line 3151
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@7
    move-result v2

    #@8
    if-nez v2, :cond_9

    #@a
    const/4 v2, 0x2

    #@b
    :goto_0
    or-int/2addr p2, v2

    #@c
    .line 3152
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@e
    if-eqz v2, :cond_0

    #@10
    .line 3153
    sget-object v2, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@12
    new-instance v5, Ljava/lang/StringBuilder;

    #@14
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@17
    const-string/jumbo v6, "relayoutVisibleWindow: "

    #@1a
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v5

    #@1e
    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@21
    move-result-object v5

    #@22
    const-string/jumbo v6, " mAnimatingExit=true, mRemoveOnExit="

    #@25
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@28
    move-result-object v5

    #@29
    .line 3154
    iget-boolean v6, p3, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    #@2b
    .line 3153
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@2e
    move-result-object v5

    #@2f
    .line 3154
    const-string/jumbo v6, ", mDestroying="

    #@32
    .line 3153
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@35
    move-result-object v5

    #@36
    .line 3154
    iget-boolean v6, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@38
    .line 3153
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@3b
    move-result-object v5

    #@3c
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3f
    move-result-object v5

    #@40
    invoke-static {v2, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@43
    .line 3156
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->cancelExitAnimationForNextAnimationLocked()V

    #@46
    .line 3157
    iput-boolean v3, p3, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@48
    .line 3159
    :cond_0
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@4a
    if-eqz v2, :cond_1

    #@4c
    .line 3160
    iput-boolean v3, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@4e
    .line 3161
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@50
    invoke-virtual {v2, p3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@53
    .line 3163
    :cond_1
    if-ne p6, v4, :cond_2

    #@55
    .line 3164
    iput-boolean v7, p4, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@57
    .line 3167
    :cond_2
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@59
    iput v2, p3, Lcom/android/server/wm/WindowState;->mLastVisibleLayoutRotation:I

    #@5b
    .line 3169
    iput-boolean v7, p4, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@5d
    .line 3170
    and-int/lit8 v2, p2, 0x2

    #@5f
    if-eqz v2, :cond_3

    #@61
    .line 3171
    invoke-virtual {p3, p1}, Lcom/android/server/wm/WindowState;->prepareWindowToDisplayDuringRelayout(Landroid/content/res/Configuration;)V

    #@64
    .line 3173
    :cond_3
    and-int/lit8 v2, p5, 0x8

    #@66
    if-eqz v2, :cond_4

    #@68
    .line 3177
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->tryChangeFormatInPlaceLocked()Z

    #@6b
    move-result v2

    #@6c
    if-nez v2, :cond_4

    #@6e
    .line 3178
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->preserveSurfaceLocked()V

    #@71
    .line 3179
    or-int/lit8 p2, p2, 0x6

    #@73
    .line 3186
    :cond_4
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizeChanged()Z

    #@76
    move-result v2

    #@77
    if-nez v2, :cond_5

    #@79
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizing()Z

    #@7c
    move-result v2

    #@7d
    if-eqz v2, :cond_6

    #@7f
    .line 3187
    :cond_5
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->setDragResizing()V

    #@82
    .line 3188
    invoke-virtual {p3, v3}, Lcom/android/server/wm/WindowState;->setResizedWhileNotDragResizing(Z)V

    #@85
    .line 3193
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@87
    if-eqz v2, :cond_6

    #@89
    iget-object v2, p3, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@8b
    if-nez v2, :cond_6

    #@8d
    .line 3194
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->preserveSurfaceLocked()V

    #@90
    .line 3195
    or-int/lit8 p2, p2, 0x2

    #@92
    .line 3198
    :cond_6
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizing()Z

    #@95
    move-result v2

    #@96
    if-eqz v2, :cond_b

    #@98
    .line 3199
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->getResizeMode()I

    #@9b
    move-result v2

    #@9c
    if-nez v2, :cond_a

    #@9e
    const/4 v1, 0x1

    #@9f
    .line 3200
    .local v1, "freeformResizing":Z
    :goto_1
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizing()Z

    #@a2
    move-result v2

    #@a3
    if-eqz v2, :cond_d

    #@a5
    .line 3201
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->getResizeMode()I

    #@a8
    move-result v2

    #@a9
    if-ne v2, v7, :cond_c

    #@ab
    const/4 v0, 0x1

    #@ac
    .line 3202
    .local v0, "dockedResizing":Z
    :goto_2
    if-eqz v1, :cond_e

    #@ae
    const/16 v2, 0x10

    #@b0
    :goto_3
    or-int/2addr p2, v2

    #@b1
    .line 3203
    if-eqz v0, :cond_7

    #@b3
    move v3, v4

    #@b4
    :cond_7
    or-int/2addr p2, v3

    #@b5
    .line 3204
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    #@b8
    move-result v2

    #@b9
    if-eqz v2, :cond_8

    #@bb
    .line 3207
    or-int/lit8 p2, p2, 0x2

    #@bd
    .line 3209
    :cond_8
    return p2

    #@be
    .end local v0    # "dockedResizing":Z
    .end local v1    # "freeformResizing":Z
    :cond_9
    move v2, v3

    #@bf
    .line 3151
    goto/16 :goto_0

    #@c1
    .line 3199
    :cond_a
    const/4 v1, 0x0

    #@c2
    .restart local v1    # "freeformResizing":Z
    goto :goto_1

    #@c3
    .line 3198
    .end local v1    # "freeformResizing":Z
    :cond_b
    const/4 v1, 0x0

    #@c4
    .restart local v1    # "freeformResizing":Z
    goto :goto_1

    #@c5
    .line 3201
    :cond_c
    const/4 v0, 0x0

    #@c6
    .restart local v0    # "dockedResizing":Z
    goto :goto_2

    #@c7
    .line 3200
    .end local v0    # "dockedResizing":Z
    :cond_d
    const/4 v0, 0x0

    #@c8
    .restart local v0    # "dockedResizing":Z
    goto :goto_2

    #@c9
    :cond_e
    move v2, v3

    #@ca
    .line 3202
    goto :goto_3
.end method

.method private setAnimatorDurationScale(F)V
    .locals 0
    .param p1, "scale"    # F

    #@0
    .prologue
    .line 5723
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@2
    .line 5724
    invoke-static {p1}, Landroid/animation/ValueAnimator;->setDurationScale(F)V

    #@5
    .line 5722
    return-void
.end method

.method private setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    .locals 0
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "density"    # I

    #@0
    .prologue
    .line 9321
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@2
    .line 9322
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@5
    .line 9320
    return-void
.end method

.method private setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V
    .locals 4
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "mode"    # I

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 9129
    const-string/jumbo v2, "WindowManager"

    #@4
    new-instance v0, Ljava/lang/StringBuilder;

    #@6
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@9
    const-string/jumbo v3, "Using display scaling mode: "

    #@c
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v3

    #@10
    if-nez p2, :cond_0

    #@12
    const-string/jumbo v0, "auto"

    #@15
    :goto_0
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v0

    #@19
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1c
    move-result-object v0

    #@1d
    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@20
    .line 9130
    if-eqz p2, :cond_1

    #@22
    const/4 v0, 0x1

    #@23
    :goto_1
    iput-boolean v0, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    #@25
    .line 9131
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@28
    .line 9128
    return-void

    #@29
    .line 9129
    :cond_0
    const-string/jumbo v0, "off"

    #@2c
    goto :goto_0

    #@2d
    :cond_1
    move v0, v1

    #@2e
    .line 9130
    goto :goto_1
.end method

.method private setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V
    .locals 3
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "width"    # I
    .param p3, "height"    # I

    #@0
    .prologue
    .line 9176
    const-string/jumbo v0, "WindowManager"

    #@3
    new-instance v1, Ljava/lang/StringBuilder;

    #@5
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@8
    const-string/jumbo v2, "Using new display size: "

    #@b
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e
    move-result-object v1

    #@f
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@12
    move-result-object v1

    #@13
    const-string/jumbo v2, "x"

    #@16
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v1

    #@1a
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v1

    #@1e
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21
    move-result-object v1

    #@22
    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@25
    .line 9177
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@27
    .line 9178
    iput p3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@29
    .line 9179
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@2c
    .line 9175
    return-void
.end method

.method private setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    .locals 8
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    #@0
    .prologue
    .line 9387
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@3
    move-result-object v7

    #@4
    .line 9388
    .local v7, "displayInfo":Landroid/view/DisplayInfo;
    iput p2, v7, Landroid/view/DisplayInfo;->overscanLeft:I

    #@6
    .line 9389
    iput p3, v7, Landroid/view/DisplayInfo;->overscanTop:I

    #@8
    .line 9390
    iput p4, v7, Landroid/view/DisplayInfo;->overscanRight:I

    #@a
    .line 9391
    iput p5, v7, Landroid/view/DisplayInfo;->overscanBottom:I

    #@c
    .line 9393
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@e
    iget-object v1, v7, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    #@10
    iget-object v2, v7, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    #@12
    move v3, p2

    #@13
    move v4, p3

    #@14
    move v5, p4

    #@15
    move v6, p5

    #@16
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/DisplaySettings;->setOverscanLocked(Ljava/lang/String;Ljava/lang/String;IIII)V

    #@19
    .line 9395
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@1b
    invoke-virtual {v0}, Lcom/android/server/wm/DisplaySettings;->writeSettingsLocked()V

    #@1e
    .line 9397
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@21
    .line 9386
    return-void
.end method

.method private setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 2373
    const/4 v1, 0x1

    #@2
    iput-boolean v1, p1, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    #@4
    .line 2374
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@7
    .line 2378
    const/4 v1, 0x3

    #@8
    .line 2377
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@b
    move-result v0

    #@c
    .line 2379
    .local v0, "focusChanged":Z
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@e
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@11
    .line 2380
    if-eqz v0, :cond_0

    #@13
    .line 2381
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@15
    invoke-virtual {v1, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@18
    .line 2372
    :cond_0
    return-void
.end method

.method private showAuditSafeModeNotification()V
    .locals 11

    #@0
    .prologue
    const v10, 0x1040600

    #@3
    const/4 v9, 0x0

    #@4
    const/4 v8, 0x1

    #@5
    .line 8081
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@7
    .line 8082
    new-instance v5, Landroid/content/Intent;

    #@9
    const-string/jumbo v6, "android.intent.action.VIEW"

    #@c
    .line 8083
    const-string/jumbo v7, "https://support.google.com/nexus/answer/2852139"

    #@f
    invoke-static {v7}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    #@12
    move-result-object v7

    #@13
    .line 8082
    invoke-direct {v5, v6, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    #@16
    .line 8081
    invoke-static {v4, v9, v5, v9}, Landroid/app/PendingIntent;->getActivity(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;

    #@19
    move-result-object v2

    #@1a
    .line 8085
    .local v2, "pendingIntent":Landroid/app/PendingIntent;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1c
    invoke-virtual {v4, v10}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    #@1f
    move-result-object v3

    #@20
    .line 8087
    .local v3, "title":Ljava/lang/String;
    new-instance v4, Landroid/app/Notification$Builder;

    #@22
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@24
    invoke-direct {v4, v5}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;)V

    #@27
    .line 8088
    const v5, 0x108008a

    #@2a
    .line 8087
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    #@2d
    move-result-object v4

    #@2e
    .line 8089
    const-wide/16 v6, 0x0

    #@30
    .line 8087
    invoke-virtual {v4, v6, v7}, Landroid/app/Notification$Builder;->setWhen(J)Landroid/app/Notification$Builder;

    #@33
    move-result-object v4

    #@34
    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setOngoing(Z)Landroid/app/Notification$Builder;

    #@37
    move-result-object v4

    #@38
    invoke-virtual {v4, v3}, Landroid/app/Notification$Builder;->setTicker(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    #@3b
    move-result-object v4

    #@3c
    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setLocalOnly(Z)Landroid/app/Notification$Builder;

    #@3f
    move-result-object v4

    #@40
    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setPriority(I)Landroid/app/Notification$Builder;

    #@43
    move-result-object v4

    #@44
    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setVisibility(I)Landroid/app/Notification$Builder;

    #@47
    move-result-object v4

    #@48
    .line 8095
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4a
    .line 8096
    const v6, 0x106005b

    #@4d
    .line 8095
    invoke-virtual {v5, v6}, Landroid/content/Context;->getColor(I)I

    #@50
    move-result v5

    #@51
    .line 8087
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setColor(I)Landroid/app/Notification$Builder;

    #@54
    move-result-object v4

    #@55
    invoke-virtual {v4, v3}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    #@58
    move-result-object v4

    #@59
    .line 8098
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@5b
    const v6, 0x1040601

    #@5e
    invoke-virtual {v5, v6}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    #@61
    move-result-object v5

    #@62
    .line 8087
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    #@65
    move-result-object v4

    #@66
    invoke-virtual {v4, v2}, Landroid/app/Notification$Builder;->setContentIntent(Landroid/app/PendingIntent;)Landroid/app/Notification$Builder;

    #@69
    move-result-object v4

    #@6a
    invoke-virtual {v4}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    #@6d
    move-result-object v0

    #@6e
    .line 8102
    .local v0, "notification":Landroid/app/Notification;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@70
    .line 8103
    const-string/jumbo v5, "notification"

    #@73
    .line 8102
    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@76
    move-result-object v1

    #@77
    check-cast v1, Landroid/app/NotificationManager;

    #@79
    .line 8106
    .local v1, "notificationManager":Landroid/app/NotificationManager;
    sget-object v4, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@7b
    .line 8105
    const/4 v5, 0x0

    #@7c
    invoke-virtual {v1, v5, v10, v0, v4}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    #@7f
    .line 8080
    return-void
.end method

.method private showStrictModeViolation(II)V
    .locals 12
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    #@0
    .prologue
    .line 6256
    if-eqz p1, :cond_1

    #@2
    const/4 v4, 0x1

    #@3
    .line 6257
    .local v4, "on":Z
    :goto_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@5
    monitor-enter v9

    #@6
    .line 6261
    if-eqz v4, :cond_4

    #@8
    .line 6262
    const/4 v1, 0x0

    #@9
    .line 6263
    .local v1, "isVisible":Z
    :try_start_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    #@e
    move-result v2

    #@f
    .line 6264
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@10
    .local v0, "displayNdx":I
    :goto_1
    if-ge v0, v2, :cond_3

    #@12
    .line 6265
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@14
    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@17
    move-result-object v8

    #@18
    check-cast v8, Lcom/android/server/wm/DisplayContent;

    #@1a
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1d
    move-result-object v6

    #@1e
    .line 6266
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@21
    move-result v3

    #@22
    .line 6267
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@23
    .local v5, "winNdx":I
    :goto_2
    if-ge v5, v3, :cond_0

    #@25
    .line 6268
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@28
    move-result-object v7

    #@29
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@2b
    .line 6269
    .local v7, "ws":Lcom/android/server/wm/WindowState;
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@2d
    iget v8, v8, Lcom/android/server/wm/Session;->mPid:I

    #@2f
    if-ne v8, p2, :cond_2

    #@31
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@34
    move-result v8

    #@35
    if-eqz v8, :cond_2

    #@37
    .line 6270
    const/4 v1, 0x1

    #@38
    .line 6264
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_0
    add-int/lit8 v0, v0, 0x1

    #@3a
    goto :goto_1

    #@3b
    .line 6256
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    .end local v3    # "numWindows":I
    .end local v4    # "on":Z
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    const/4 v4, 0x0

    #@3c
    .restart local v4    # "on":Z
    goto :goto_0

    #@3d
    .line 6267
    .restart local v0    # "displayNdx":I
    .restart local v1    # "isVisible":Z
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v5, v5, 0x1

    #@3f
    goto :goto_2

    #@40
    .line 6275
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3
    if-nez v1, :cond_4

    #@42
    monitor-exit v9

    #@43
    .line 6276
    return-void

    #@44
    .line 6282
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    :cond_4
    :try_start_1
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@47
    .line 6285
    :try_start_2
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@49
    if-nez v8, :cond_5

    #@4b
    .line 6286
    new-instance v8, Lcom/android/server/wm/StrictModeFlash;

    #@4d
    .line 6287
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@50
    move-result-object v10

    #@51
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@54
    move-result-object v10

    #@55
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@57
    .line 6286
    invoke-direct {v8, v10, v11}, Lcom/android/server/wm/StrictModeFlash;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;)V

    #@5a
    iput-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@5c
    .line 6289
    :cond_5
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@5e
    invoke-virtual {v8, v4}, Lcom/android/server/wm/StrictModeFlash;->setVisibility(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@61
    .line 6291
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@64
    monitor-exit v9

    #@65
    .line 6255
    return-void

    #@66
    .line 6290
    :catchall_0
    move-exception v8

    #@67
    .line 6291
    :try_start_4
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@6a
    .line 6290
    throw v8
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@6b
    .line 6257
    :catchall_1
    move-exception v8

    #@6c
    monitor-exit v9

    #@6d
    throw v8
.end method

.method private startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V
    .locals 8
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/16 v7, 0x11

    #@2
    const/4 v6, 0x1

    #@3
    const/4 v4, 0x0

    #@4
    .line 4779
    iget-boolean v3, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@6
    if-nez v3, :cond_1

    #@8
    .line 4780
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@a
    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@c
    if-nez v3, :cond_0

    #@e
    .line 4781
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@10
    iput-boolean v6, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@12
    .line 4782
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@14
    iput v4, v3, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    #@16
    .line 4783
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@18
    add-int/lit8 v3, v3, 0x1

    #@1a
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@1c
    .line 4784
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@1e
    if-ne v3, v6, :cond_0

    #@20
    .line 4785
    invoke-direct {p0, v4, v4, v4}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@23
    .line 4786
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@25
    invoke-virtual {v3, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@28
    .line 4787
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2a
    const-wide/16 v4, 0x7d0

    #@2c
    invoke-virtual {v3, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@2f
    .line 4790
    :cond_0
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@31
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    #@34
    move-result v0

    #@35
    .line 4791
    .local v0, "N":I
    const/4 v1, 0x0

    #@36
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@38
    .line 4792
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@3a
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v2

    #@3e
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@40
    .line 4793
    .local v2, "w":Lcom/android/server/wm/WindowState;
    iput-boolean v6, v2, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@42
    .line 4791
    add-int/lit8 v1, v1, 0x1

    #@44
    goto :goto_0

    #@45
    .line 4776
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    return-void
.end method

.method private startFreezingDisplayLocked(ZII)V
    .locals 12
    .param p1, "inTransaction"    # Z
    .param p2, "exitAnim"    # I
    .param p3, "enterAnim"    # I

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 10044
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@3
    if-eqz v1, :cond_0

    #@5
    .line 10045
    return-void

    #@6
    .line 10048
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@8
    if-eqz v1, :cond_4

    #@a
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@c
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->isScreenOn()Z

    #@f
    move-result v1

    #@10
    if-eqz v1, :cond_4

    #@12
    .line 10058
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@14
    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    #@17
    .line 10060
    const/4 v1, 0x1

    #@18
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@1a
    .line 10061
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@1d
    move-result-wide v4

    #@1e
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@20
    .line 10062
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@22
    .line 10064
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1}, Lcom/android/server/wm/InputMonitor;->freezeInputDispatchingLw()V

    #@27
    .line 10069
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@29
    invoke-interface {v1, v3, v3}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    #@2c
    .line 10071
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2e
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@31
    move-result v1

    #@32
    if-eqz v1, :cond_1

    #@34
    .line 10072
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@36
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->freeze()V

    #@39
    .line 10081
    :cond_1
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@3b
    .line 10082
    iput p3, p0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@3d
    .line 10083
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@40
    move-result-object v2

    #@41
    .line 10084
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@44
    move-result v8

    #@45
    .line 10086
    .local v8, "displayId":I
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@47
    invoke-virtual {v1, v8}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@4a
    move-result-object v0

    #@4b
    .line 10087
    .local v0, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v0, :cond_2

    #@4d
    .line 10088
    invoke-virtual {v0}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@50
    .line 10092
    :cond_2
    const/4 v6, 0x0

    #@51
    .line 10093
    .local v6, "isSecure":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@54
    move-result-object v10

    #@55
    .line 10094
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    #@58
    move-result v7

    #@59
    .line 10095
    .local v7, "N":I
    const/4 v9, 0x0

    #@5a
    .local v9, "i":I
    :goto_0
    if-ge v9, v7, :cond_3

    #@5c
    .line 10096
    invoke-virtual {v10, v9}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@5f
    move-result-object v11

    #@60
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@62
    .line 10097
    .local v11, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual {v11}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    #@65
    move-result v1

    #@66
    if-eqz v1, :cond_5

    #@68
    iget-object v1, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6a
    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@6c
    and-int/lit16 v1, v1, 0x2000

    #@6e
    if-eqz v1, :cond_5

    #@70
    .line 10098
    const/4 v6, 0x1

    #@71
    .line 10104
    .end local v11    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    #@74
    .line 10105
    new-instance v0, Lcom/android/server/wm/ScreenRotationAnimation;

    #@76
    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@78
    .line 10106
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@7a
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@7c
    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->isDefaultOrientationForced()Z

    #@7f
    move-result v5

    #@80
    move v4, p1

    #@81
    .line 10105
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/ScreenRotationAnimation;-><init>(Landroid/content/Context;Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceSession;ZZZ)V

    #@84
    .line 10107
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@86
    invoke-virtual {v1, v8, v0}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@89
    .line 10043
    return-void

    #@8a
    .line 10051
    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "isSecure":Z
    .end local v7    # "N":I
    .end local v8    # "displayId":I
    .end local v9    # "i":I
    .end local v10    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    return-void

    #@8b
    .line 10095
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "isSecure":Z
    .restart local v7    # "N":I
    .restart local v8    # "displayId":I
    .restart local v9    # "i":I
    .restart local v10    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v11    # "ws":Lcom/android/server/wm/WindowState;
    :cond_5
    add-int/lit8 v9, v9, 0x1

    #@8d
    goto :goto_0
.end method

.method private startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    .locals 9
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "resize"    # Z
    .param p3, "startX"    # F
    .param p4, "startY"    # F

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v7, 0x0

    #@2
    const/4 v6, 0x0

    #@3
    .line 7841
    if-eqz p1, :cond_0

    #@5
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getAppToken()Landroid/view/IApplicationToken;

    #@8
    move-result-object v3

    #@9
    if-nez v3, :cond_1

    #@b
    .line 7842
    :cond_0
    const-string/jumbo v3, "WindowManager"

    #@e
    new-instance v4, Ljava/lang/StringBuilder;

    #@10
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@13
    const-string/jumbo v5, "startPositioningLocked: Bad window "

    #@16
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v4

    #@1a
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v4

    #@1e
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21
    move-result-object v4

    #@22
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@25
    .line 7843
    return v7

    #@26
    .line 7845
    :cond_1
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    #@28
    if-nez v3, :cond_2

    #@2a
    .line 7846
    const-string/jumbo v3, "WindowManager"

    #@2d
    new-instance v4, Ljava/lang/StringBuilder;

    #@2f
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@32
    const-string/jumbo v5, "startPositioningLocked: "

    #@35
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@38
    move-result-object v4

    #@39
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3c
    move-result-object v4

    #@3d
    const-string/jumbo v5, " has no input channel, "

    #@40
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@43
    move-result-object v4

    #@44
    .line 7847
    const-string/jumbo v5, " probably being removed"

    #@47
    .line 7846
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v4

    #@4b
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4e
    move-result-object v4

    #@4f
    invoke-static {v3, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    #@52
    .line 7848
    return v7

    #@53
    .line 7851
    :cond_2
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@56
    move-result-object v1

    #@57
    .line 7852
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_3

    #@59
    .line 7853
    const-string/jumbo v3, "WindowManager"

    #@5c
    new-instance v4, Ljava/lang/StringBuilder;

    #@5e
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@61
    const-string/jumbo v5, "startPositioningLocked: Invalid display content "

    #@64
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v4

    #@68
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@6b
    move-result-object v4

    #@6c
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6f
    move-result-object v4

    #@70
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@73
    .line 7854
    return v7

    #@74
    .line 7857
    :cond_3
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@77
    move-result-object v0

    #@78
    .line 7858
    .local v0, "display":Landroid/view/Display;
    new-instance v3, Lcom/android/server/wm/TaskPositioner;

    #@7a
    invoke-direct {v3, p0}, Lcom/android/server/wm/TaskPositioner;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@7d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@7f
    .line 7859
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@81
    invoke-virtual {v3, v0}, Lcom/android/server/wm/TaskPositioner;->register(Landroid/view/Display;)V

    #@84
    .line 7860
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@86
    invoke-virtual {v3, v8}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@89
    .line 7866
    move-object v2, p1

    #@8a
    .line 7867
    .local v2, "transferFocusFromWin":Lcom/android/server/wm/WindowState;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@8c
    if-eqz v3, :cond_4

    #@8e
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@90
    if-eq v3, p1, :cond_4

    #@92
    .line 7868
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@94
    iget-object v3, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@96
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@98
    if-ne v3, v4, :cond_4

    #@9a
    .line 7869
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@9c
    .line 7871
    :cond_4
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@9e
    .line 7872
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    #@a0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@a2
    iget-object v5, v5, Lcom/android/server/wm/TaskPositioner;->mServerChannel:Landroid/view/InputChannel;

    #@a4
    .line 7871
    invoke-virtual {v3, v4, v5}, Lcom/android/server/input/InputManagerService;->transferTouchFocus(Landroid/view/InputChannel;Landroid/view/InputChannel;)Z

    #@a7
    move-result v3

    #@a8
    if-nez v3, :cond_5

    #@aa
    .line 7873
    const-string/jumbo v3, "WindowManager"

    #@ad
    const-string/jumbo v4, "startPositioningLocked: Unable to transfer touch focus"

    #@b0
    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@b3
    .line 7874
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@b5
    invoke-virtual {v3}, Lcom/android/server/wm/TaskPositioner;->unregister()V

    #@b8
    .line 7875
    iput-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@ba
    .line 7876
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@bc
    invoke-virtual {v3, v8}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@bf
    .line 7877
    return v7

    #@c0
    .line 7880
    :cond_5
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@c2
    invoke-virtual {v3, p1, p2, p3, p4}, Lcom/android/server/wm/TaskPositioner;->startDragLocked(Lcom/android/server/wm/WindowState;ZFF)V

    #@c5
    .line 7881
    return v8
.end method

.method private startScrollingTask(Lcom/android/server/wm/DisplayContent;II)V
    .locals 9
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "startX"    # I
    .param p3, "startY"    # I

    #@0
    .prologue
    .line 7799
    const/4 v2, 0x0

    #@1
    .line 7800
    .local v2, "task":Lcom/android/server/wm/Task;
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v5

    #@4
    .line 7801
    :try_start_0
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->taskIdFromPoint(II)I

    #@7
    move-result v3

    #@8
    .line 7802
    .local v3, "taskId":I
    if-ltz v3, :cond_0

    #@a
    .line 7803
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v4

    #@10
    move-object v0, v4

    #@11
    check-cast v0, Lcom/android/server/wm/Task;

    #@13
    move-object v2, v0

    #@14
    .line 7805
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :cond_0
    if-eqz v2, :cond_1

    #@16
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->isDockedInEffect()Z

    #@19
    move-result v4

    #@1a
    if-eqz v4, :cond_1

    #@1c
    .line 7806
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->getTopVisibleAppMainWindow()Lcom/android/server/wm/WindowState;

    #@1f
    move-result-object v4

    #@20
    int-to-float v6, p2

    #@21
    int-to-float v7, p3

    #@22
    const/4 v8, 0x0

    #@23
    .line 7805
    invoke-direct {p0, v4, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@26
    move-result v4

    #@27
    if-eqz v4, :cond_1

    #@29
    monitor-exit v5

    #@2a
    .line 7811
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@2c
    iget v5, v2, Lcom/android/server/wm/Task;->mTaskId:I

    #@2e
    invoke-interface {v4, v5}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@31
    .line 7795
    :goto_0
    return-void

    #@32
    :cond_1
    monitor-exit v5

    #@33
    .line 7807
    return-void

    #@34
    .line 7800
    .end local v3    # "taskId":I
    :catchall_0
    move-exception v4

    #@35
    monitor-exit v5

    #@36
    throw v4

    #@37
    .line 7812
    .restart local v3    # "taskId":I
    :catch_0
    move-exception v1

    #@38
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method private tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I
    .locals 6
    .param p1, "interestingPos"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1655
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v3

    #@4
    .line 1656
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3, p2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v4

    #@8
    .line 1657
    .local v4, "wpos":I
    if-ltz v4, :cond_3

    #@a
    .line 1658
    if-ge v4, p1, :cond_0

    #@c
    add-int/lit8 p1, p1, -0x1

    #@e
    .line 1660
    :cond_0
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@11
    .line 1661
    const/4 v5, 0x1

    #@12
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@14
    .line 1662
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@16
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@19
    move-result v0

    #@1a
    .line 1663
    .local v0, "NC":I
    :cond_1
    :goto_0
    if-lez v0, :cond_3

    #@1c
    .line 1664
    add-int/lit8 v0, v0, -0x1

    #@1e
    .line 1665
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@20
    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@23
    move-result-object v2

    #@24
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@26
    .line 1666
    .local v2, "cw":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@29
    move-result v1

    #@2a
    .line 1667
    .local v1, "cpos":I
    if-ltz v1, :cond_1

    #@2c
    .line 1668
    if-ge v1, p1, :cond_2

    #@2e
    add-int/lit8 p1, p1, -0x1

    #@30
    .line 1671
    :cond_2
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@33
    goto :goto_0

    #@34
    .line 1675
    .end local v0    # "NC":I
    .end local v1    # "cpos":I
    .end local v2    # "cw":Lcom/android/server/wm/WindowState;
    :cond_3
    return p1
.end method

.method private transferStartingWindow(Landroid/os/IBinder;Lcom/android/server/wm/AppWindowToken;)Z
    .locals 11
    .param p1, "transferFrom"    # Landroid/os/IBinder;
    .param p2, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v9, 0x0

    #@1
    const/4 v10, 0x1

    #@2
    const/4 v8, 0x0

    #@3
    .line 4287
    if-nez p1, :cond_0

    #@5
    .line 4288
    return v9

    #@6
    .line 4290
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@9
    move-result-object v5

    #@a
    .line 4291
    .local v5, "ttoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v5, :cond_1

    #@c
    .line 4292
    return v9

    #@d
    .line 4294
    :cond_1
    iget-object v1, v5, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@f
    .line 4295
    .local v1, "startingWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_6

    #@11
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@13
    if-eqz v7, :cond_6

    #@15
    .line 4298
    iput-boolean v10, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@17
    .line 4303
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@1a
    move-result-wide v2

    #@1b
    .line 4306
    .local v2, "origId":J
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@1d
    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@1f
    .line 4307
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@21
    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@23
    .line 4308
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@25
    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@27
    .line 4309
    iput-boolean v9, v5, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@29
    .line 4310
    iput-object v1, p2, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@2b
    .line 4311
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    #@2d
    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    #@2f
    .line 4312
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@31
    .line 4313
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@33
    .line 4314
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@35
    .line 4315
    iput-boolean v10, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@37
    .line 4316
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@39
    .line 4317
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mRootToken:Lcom/android/server/wm/WindowToken;

    #@3b
    .line 4318
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@3d
    .line 4323
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@40
    move-result-object v7

    #@41
    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@44
    .line 4324
    iput-boolean v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@46
    .line 4327
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@48
    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@4b
    .line 4328
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@4d
    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@50
    .line 4329
    invoke-direct {p0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@53
    .line 4336
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@55
    if-eqz v7, :cond_2

    #@57
    .line 4337
    iput-boolean v10, p2, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@59
    .line 4338
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@5b
    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@5d
    .line 4340
    :cond_2
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@5f
    if-eqz v7, :cond_3

    #@61
    .line 4341
    iput-boolean v10, p2, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@63
    .line 4343
    :cond_3
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@65
    if-nez v7, :cond_4

    #@67
    .line 4344
    iput-boolean v9, p2, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@69
    .line 4345
    iput-boolean v9, p2, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@6b
    .line 4347
    :cond_4
    iget-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@6d
    iget-boolean v8, v5, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@6f
    if-eq v7, v8, :cond_5

    #@71
    .line 4348
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@73
    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@75
    .line 4349
    invoke-virtual {p2}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@78
    .line 4351
    :cond_5
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@7a
    .line 4352
    iget-object v8, p2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@7c
    iget-object v9, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@7e
    .line 4351
    invoke-virtual {v7, v8, v9}, Lcom/android/server/wm/AppWindowAnimator;->transferCurrentAnimation(Lcom/android/server/wm/AppWindowAnimator;Lcom/android/server/wm/WindowStateAnimator;)V

    #@81
    .line 4354
    const/4 v7, 0x3

    #@82
    invoke-virtual {p0, v7, v10}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@85
    .line 4356
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@88
    move-result-object v7

    #@89
    iput-boolean v10, v7, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@8b
    .line 4357
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@8d
    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@90
    .line 4358
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@93
    .line 4359
    return v10

    #@94
    .line 4360
    .end local v2    # "origId":J
    :cond_6
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@96
    if-eqz v7, :cond_7

    #@98
    .line 4365
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@9a
    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@9c
    .line 4366
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@9e
    .line 4367
    iput-boolean v10, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@a0
    .line 4368
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@a2
    const/4 v8, 0x5

    #@a3
    invoke-virtual {v7, v8, p2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@a6
    move-result-object v0

    #@a7
    .line 4372
    .local v0, "m":Landroid/os/Message;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@a9
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z

    #@ac
    .line 4373
    return v10

    #@ad
    .line 4375
    .end local v0    # "m":Landroid/os/Message;
    :cond_7
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@af
    .line 4376
    .local v4, "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    iget-object v6, p2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@b1
    .line 4377
    .local v6, "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@b3
    if-eqz v7, :cond_9

    #@b5
    .line 4379
    iget-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@b7
    if-eqz v7, :cond_8

    #@b9
    .line 4380
    iget-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@bb
    invoke-virtual {v7}, Landroid/view/SurfaceControl;->destroy()V

    #@be
    .line 4382
    :cond_8
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@c0
    iput-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@c2
    .line 4383
    iget v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    #@c4
    iput v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    #@c6
    .line 4384
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    #@c8
    iput-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    #@ca
    .line 4385
    iput-object v8, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@cc
    .line 4387
    :cond_9
    return v9
.end method

.method private tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;ZZ)Z
    .locals 6
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p3, "isDefaultDisplay"    # Z
    .param p4, "focusMayChange"    # Z

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v4, 0x0

    #@2
    const/4 v3, 0x1

    #@3
    .line 3098
    const/4 v0, 0x2

    #@4
    .line 3099
    .local v0, "transit":I
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6
    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    #@8
    const/4 v2, 0x3

    #@9
    if-ne v1, v2, :cond_0

    #@b
    .line 3100
    const/4 v0, 0x5

    #@c
    .line 3102
    :cond_0
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    #@f
    move-result v1

    #@10
    if-eqz v1, :cond_2

    #@12
    invoke-virtual {p2, v0, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@15
    move-result v1

    #@16
    if-eqz v1, :cond_2

    #@18
    .line 3103
    move p4, p3

    #@19
    .line 3104
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@1b
    .line 3105
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1d
    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    #@1f
    .line 3124
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@21
    if-eqz v1, :cond_1

    #@23
    .line 3125
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@26
    move-result v1

    #@27
    if-nez v1, :cond_1

    #@29
    .line 3126
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@2b
    invoke-virtual {v1, p1, v0}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@2e
    .line 3128
    :cond_1
    return p4

    #@2f
    .line 3106
    :cond_2
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@31
    invoke-virtual {v1}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_3

    #@37
    .line 3109
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@39
    .line 3110
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@3b
    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    #@3d
    goto :goto_0

    #@3e
    .line 3111
    :cond_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@40
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WallpaperController;->isWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    #@43
    move-result v1

    #@44
    if-eqz v1, :cond_4

    #@46
    .line 3115
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@48
    .line 3116
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@4a
    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    #@4c
    goto :goto_0

    #@4d
    .line 3118
    :cond_4
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@4f
    if-ne v1, p1, :cond_5

    #@51
    .line 3119
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@53
    .line 3121
    :cond_5
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->destroyOrSaveSurface()V

    #@56
    goto :goto_0
.end method

.method private updateCircularDisplayMaskIfNeeded()V
    .locals 7

    #@0
    .prologue
    .line 6159
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@5
    move-result-object v4

    #@6
    invoke-virtual {v4}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    #@9
    move-result-object v4

    #@a
    invoke-virtual {v4}, Landroid/content/res/Configuration;->isScreenRound()Z

    #@d
    move-result v4

    #@e
    if-eqz v4, :cond_0

    #@10
    .line 6160
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@12
    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@15
    move-result-object v4

    #@16
    .line 6161
    const v5, 0x1120087

    #@19
    .line 6160
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1c
    move-result v4

    #@1d
    .line 6159
    if-eqz v4, :cond_0

    #@1f
    .line 6163
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@21
    monitor-enter v4

    #@22
    .line 6164
    :try_start_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@24
    .local v0, "currentUserId":I
    monitor-exit v4

    #@25
    .line 6169
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@27
    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@2a
    move-result-object v4

    #@2b
    .line 6170
    const-string/jumbo v5, "accessibility_display_inversion_enabled"

    #@2e
    const/4 v6, 0x0

    #@2f
    .line 6169
    invoke-static {v4, v5, v6, v0}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    #@32
    move-result v1

    #@33
    .line 6171
    .local v1, "inversionState":I
    const/4 v4, 0x1

    #@34
    if-ne v1, v4, :cond_1

    #@36
    const/4 v3, 0x0

    #@37
    .line 6172
    .local v3, "showMask":I
    :goto_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@39
    const/16 v5, 0x23

    #@3b
    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    #@3e
    move-result-object v2

    #@3f
    .line 6173
    .local v2, "m":Landroid/os/Message;
    iput v3, v2, Landroid/os/Message;->arg1:I

    #@41
    .line 6174
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@43
    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@46
    .line 6157
    .end local v0    # "currentUserId":I
    .end local v1    # "inversionState":I
    .end local v2    # "m":Landroid/os/Message;
    .end local v3    # "showMask":I
    :cond_0
    return-void

    #@47
    .line 6163
    :catchall_0
    move-exception v5

    #@48
    monitor-exit v4

    #@49
    throw v5

    #@4a
    .line 6171
    .restart local v0    # "currentUserId":I
    .restart local v1    # "inversionState":I
    :cond_1
    const/4 v3, 0x1

    #@4b
    .restart local v3    # "showMask":I
    goto :goto_0
.end method

.method private updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .locals 8
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    const/4 v5, 0x1

    #@2
    const/4 v6, 0x0

    #@3
    .line 3793
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@5
    if-nez v4, :cond_0

    #@7
    .line 3794
    return-object v7

    #@8
    .line 3796
    :cond_0
    const/4 v2, 0x0

    #@9
    .line 3798
    .local v2, "config":Landroid/content/res/Configuration;
    invoke-virtual {p0, v6}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@c
    move-result v4

    #@d
    if-eqz v4, :cond_4

    #@f
    .line 3802
    if-eqz p2, :cond_1

    #@11
    .line 3803
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@13
    iget-boolean v4, v4, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    #@15
    if-eqz v4, :cond_3

    #@17
    .line 3809
    :cond_1
    :goto_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;

    #@1a
    move-result-object v2

    #@1b
    .line 3834
    .end local v2    # "config":Landroid/content/res/Configuration;
    :cond_2
    :goto_1
    return-object v2

    #@1c
    .line 3804
    .restart local v2    # "config":Landroid/content/res/Configuration;
    :cond_3
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1f
    move-result-object v1

    #@20
    .line 3805
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_1

    #@22
    .line 3806
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@25
    goto :goto_0

    #@26
    .line 3811
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_4
    if-eqz p1, :cond_2

    #@28
    .line 3816
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@2a
    invoke-virtual {v4}, Landroid/content/res/Configuration;->setToDefaults()V

    #@2d
    .line 3817
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@2f
    invoke-virtual {v4, p1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    #@32
    .line 3818
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@34
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@37
    .line 3819
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@39
    invoke-virtual {p1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    #@3c
    move-result v4

    #@3d
    if-eqz v4, :cond_2

    #@3f
    .line 3820
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@41
    .line 3821
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@44
    move-result-object v3

    #@45
    .line 3822
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iput-boolean v5, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@47
    .line 3823
    const/4 v4, 0x2

    #@48
    new-array v0, v4, [I

    #@4a
    .line 3824
    .local v0, "anim":[I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@4d
    move-result v4

    #@4e
    if-eqz v4, :cond_5

    #@50
    .line 3825
    aput v6, v0, v5

    #@52
    aput v6, v0, v6

    #@54
    .line 3829
    :goto_2
    aget v4, v0, v6

    #@56
    aget v5, v0, v5

    #@58
    invoke-direct {p0, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@5b
    .line 3830
    new-instance v2, Landroid/content/res/Configuration;

    #@5d
    .end local v2    # "config":Landroid/content/res/Configuration;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@5f
    invoke-direct {v2, v4}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    #@62
    .local v2, "config":Landroid/content/res/Configuration;
    goto :goto_1

    #@63
    .line 3827
    .local v2, "config":Landroid/content/res/Configuration;
    :cond_5
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@65
    invoke-interface {v4, v0}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    #@68
    goto :goto_2
.end method


# virtual methods
.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZLandroid/graphics/Rect;Landroid/content/res/Configuration;IZZII)V
    .locals 14
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showForAllUsers"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I
    .param p10, "voiceInteraction"    # Z
    .param p11, "launchTaskBehind"    # Z
    .param p12, "taskBounds"    # Landroid/graphics/Rect;
    .param p13, "config"    # Landroid/content/res/Configuration;
    .param p14, "taskResizeMode"    # I
    .param p15, "alwaysFocusable"    # Z
    .param p16, "homeTask"    # Z
    .param p17, "targetSdkVersion"    # I
    .param p18, "rotationAnimationHint"    # I

    #@0
    .prologue
    .line 3534
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3535
    const-string/jumbo v3, "addAppToken()"

    #@6
    .line 3534
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 3536
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 3547
    :cond_0
    :try_start_0
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->getKeyDispatchingTimeout()J
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@18
    move-result-wide v2

    #@19
    const-wide/32 v4, 0xf4240

    #@1c
    mul-long v10, v2, v4

    #@1e
    .line 3553
    .local v10, "inputDispatchingTimeoutNanos":J
    :goto_0
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@20
    monitor-enter v13

    #@21
    .line 3554
    :try_start_1
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@24
    move-result-object v2

    #@25
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@28
    move-result-object v6

    #@29
    .line 3555
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v6, :cond_1

    #@2b
    .line 3556
    const-string/jumbo v2, "WindowManager"

    #@2e
    new-instance v3, Ljava/lang/StringBuilder;

    #@30
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@33
    const-string/jumbo v4, "Attempted to add existing app token: "

    #@36
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@39
    move-result-object v3

    #@3a
    move-object/from16 v0, p2

    #@3c
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3f
    move-result-object v3

    #@40
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@43
    move-result-object v3

    #@44
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@47
    monitor-exit v13

    #@48
    .line 3557
    return-void

    #@49
    .line 3548
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v10    # "inputDispatchingTimeoutNanos":J
    :catch_0
    move-exception v9

    #@4a
    .line 3549
    .local v9, "ex":Landroid/os/RemoteException;
    const-string/jumbo v2, "WindowManager"

    #@4d
    const-string/jumbo v3, "Could not get dispatching timeout."

    #@50
    invoke-static {v2, v3, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@53
    .line 3550
    const-wide v10, 0x12a05f200L

    #@58
    .restart local v10    # "inputDispatchingTimeoutNanos":J
    goto :goto_0

    #@59
    .line 3559
    .end local v9    # "ex":Landroid/os/RemoteException;
    .restart local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1
    :try_start_2
    new-instance v6, Lcom/android/server/wm/AppWindowToken;

    #@5b
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p2

    #@5d
    move/from16 v1, p10

    #@5f
    invoke-direct {v6, p0, v0, v1}, Lcom/android/server/wm/AppWindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IApplicationToken;Z)V

    #@62
    .line 3560
    .restart local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    iput-wide v10, v6, Lcom/android/server/wm/AppWindowToken;->inputDispatchingTimeoutNanos:J

    #@64
    .line 3561
    move/from16 v0, p6

    #@66
    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@68
    .line 3562
    move/from16 v0, p7

    #@6a
    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    #@6c
    .line 3563
    move/from16 v0, p17

    #@6e
    iput v0, v6, Lcom/android/server/wm/AppWindowToken;->targetSdk:I

    #@70
    .line 3564
    move/from16 v0, p5

    #@72
    iput v0, v6, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@74
    .line 3565
    move/from16 v0, p9

    #@76
    and-int/lit16 v2, v0, 0x480

    #@78
    if-eqz v2, :cond_3

    #@7a
    const/4 v2, 0x1

    #@7b
    :goto_1
    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    #@7d
    .line 3567
    move/from16 v0, p11

    #@7f
    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@81
    .line 3568
    move/from16 v0, p15

    #@83
    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->mAlwaysFocusable:Z

    #@85
    .line 3571
    move/from16 v0, p18

    #@87
    iput v0, v6, Lcom/android/server/wm/AppWindowToken;->mRotationAnimationHint:I

    #@89
    .line 3573
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@8b
    move/from16 v0, p3

    #@8d
    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@90
    move-result-object v12

    #@91
    check-cast v12, Lcom/android/server/wm/Task;

    #@93
    .line 3574
    .local v12, "task":Lcom/android/server/wm/Task;
    if-nez v12, :cond_2

    #@95
    move-object v2, p0

    #@96
    move/from16 v3, p3

    #@98
    move/from16 v4, p4

    #@9a
    move/from16 v5, p8

    #@9c
    move-object/from16 v7, p12

    #@9e
    move-object/from16 v8, p13

    #@a0
    .line 3575
    invoke-direct/range {v2 .. v8}, Lcom/android/server/wm/WindowManagerService;->createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;

    #@a3
    move-result-object v12

    #@a4
    .line 3577
    :cond_2
    move/from16 v0, p14

    #@a6
    move/from16 v1, p16

    #@a8
    invoke-virtual {v12, p1, v6, v0, v1}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;IZ)V

    #@ab
    .line 3579
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@ad
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@b0
    move-result-object v3

    #@b1
    invoke-virtual {v2, v3, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@b4
    .line 3582
    const/4 v2, 0x1

    #@b5
    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@b7
    .line 3583
    const/4 v2, 0x1

    #@b8
    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@ba
    monitor-exit v13

    #@bb
    .line 3533
    return-void

    #@bc
    .line 3565
    .end local v12    # "task":Lcom/android/server/wm/Task;
    :cond_3
    const/4 v2, 0x0

    #@bd
    goto :goto_1

    #@be
    .line 3553
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v2

    #@bf
    monitor-exit v13

    #@c0
    throw v2
.end method

.method public addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Landroid/view/WindowManagerPolicy$InputConsumer;
    .locals 4
    .param p1, "looper"    # Landroid/os/Looper;
    .param p2, "inputEventReceiverFactory"    # Landroid/view/InputEventReceiver$Factory;

    #@0
    .prologue
    .line 10378
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10379
    :try_start_0
    new-instance v0, Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;

    #@5
    invoke-direct {v0, p0, p1, p2}, Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)V

    #@8
    .line 10381
    .local v0, "inputConsumerImpl":Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@a
    .line 10382
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@c
    const/4 v3, 0x1

    #@d
    invoke-virtual {v1, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 10383
    return-object v0

    #@12
    .line 10378
    .end local v0    # "inputConsumerImpl":Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    .line 1638
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@4
    move-result v0

    #@5
    .line 1639
    .local v0, "pos":I
    if-ltz v0, :cond_0

    #@7
    .line 1640
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@9
    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@b
    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@d
    .line 1644
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@10
    move-result-object v1

    #@11
    invoke-virtual {v1, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@14
    .line 1645
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@16
    .line 1646
    add-int/lit8 v1, v0, 0x1

    #@18
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@1b
    .line 1647
    return-void

    #@1c
    .line 1649
    :cond_0
    const/4 v1, 0x0

    #@1d
    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1f
    .line 1650
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@22
    .line 1651
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@25
    .line 1637
    return-void
.end method

.method public addTask(IIZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    #@0
    .prologue
    .line 5253
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5256
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v2

    #@9
    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5257
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_0

    #@d
    monitor-exit v4

    #@e
    .line 5259
    return-void

    #@f
    .line 5261
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@17
    .line 5262
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v1, v2, p3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;Z)V

    #@1a
    .line 5263
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@1d
    move-result-object v0

    #@1e
    .line 5264
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    #@1f
    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@21
    .line 5265
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@23
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@26
    monitor-exit v4

    #@27
    .line 5252
    return-void

    #@28
    .line 5253
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@29
    monitor-exit v4

    #@2a
    throw v3
.end method

.method public addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/InputChannel;)I
    .locals 39
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "viewVisibility"    # I
    .param p6, "displayId"    # I
    .param p7, "outContentInsets"    # Landroid/graphics/Rect;
    .param p8, "outStableInsets"    # Landroid/graphics/Rect;
    .param p9, "outOutsets"    # Landroid/graphics/Rect;
    .param p10, "outInputChannel"    # Landroid/view/InputChannel;

    #@0
    .prologue
    .line 1872
    const/4 v3, 0x1

    #@1
    new-array v0, v3, [I

    #@3
    move-object/from16 v24, v0

    #@5
    .line 1873
    .local v24, "appOp":[I
    move-object/from16 v0, p0

    #@7
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    move-object/from16 v0, p4

    #@b
    move-object/from16 v1, v24

    #@d
    invoke-interface {v3, v0, v1}, Landroid/view/WindowManagerPolicy;->checkAddPermission(Landroid/view/WindowManager$LayoutParams;[I)I

    #@10
    move-result v34

    #@11
    .line 1874
    .local v34, "res":I
    if-eqz v34, :cond_0

    #@13
    .line 1875
    return v34

    #@14
    .line 1878
    :cond_0
    const/16 v31, 0x0

    #@16
    .line 1879
    .local v31, "reportNewConfig":Z
    const/4 v7, 0x0

    #@17
    .line 1881
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@1a
    move-result v26

    #@1b
    .line 1882
    .local v26, "callingUid":I
    move-object/from16 v0, p4

    #@1d
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@1f
    move/from16 v36, v0

    #@21
    .line 1884
    .local v36, "type":I
    move-object/from16 v0, p0

    #@23
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    move-object/from16 v38, v0

    #@27
    monitor-enter v38

    #@28
    .line 1885
    :try_start_0
    move-object/from16 v0, p0

    #@2a
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@2c
    if-nez v3, :cond_1

    #@2e
    .line 1886
    new-instance v3, Ljava/lang/IllegalStateException;

    #@30
    const-string/jumbo v4, "Display has not been initialialized"

    #@33
    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    #@36
    throw v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@37
    .line 1884
    .end local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@38
    monitor-exit v38

    #@39
    throw v3

    #@3a
    .line 1889
    .restart local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :cond_1
    :try_start_1
    move-object/from16 v0, p0

    #@3c
    move/from16 v1, p6

    #@3e
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@41
    move-result-object v12

    #@42
    .line 1890
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v12, :cond_2

    #@44
    .line 1891
    const-string/jumbo v3, "WindowManager"

    #@47
    new-instance v4, Ljava/lang/StringBuilder;

    #@49
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@4c
    const-string/jumbo v5, "Attempted to add window to a display that does not exist: "

    #@4f
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@52
    move-result-object v4

    #@53
    move/from16 v0, p6

    #@55
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@58
    move-result-object v4

    #@59
    .line 1892
    const-string/jumbo v5, ".  Aborting."

    #@5c
    .line 1891
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5f
    move-result-object v4

    #@60
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@63
    move-result-object v4

    #@64
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@67
    .line 1893
    const/16 v3, -0x9

    #@69
    monitor-exit v38

    #@6a
    return v3

    #@6b
    .line 1895
    :cond_2
    :try_start_2
    move-object/from16 v0, p1

    #@6d
    iget v3, v0, Lcom/android/server/wm/Session;->mUid:I

    #@6f
    invoke-virtual {v12, v3}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@72
    move-result v3

    #@73
    if-nez v3, :cond_3

    #@75
    .line 1896
    const-string/jumbo v3, "WindowManager"

    #@78
    new-instance v4, Ljava/lang/StringBuilder;

    #@7a
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@7d
    const-string/jumbo v5, "Attempted to add window to a display for which the application does not have access: "

    #@80
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@83
    move-result-object v4

    #@84
    move/from16 v0, p6

    #@86
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@89
    move-result-object v4

    #@8a
    .line 1897
    const-string/jumbo v5, ".  Aborting."

    #@8d
    .line 1896
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@90
    move-result-object v4

    #@91
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@94
    move-result-object v4

    #@95
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@98
    .line 1898
    const/16 v3, -0x9

    #@9a
    monitor-exit v38

    #@9b
    return v3

    #@9c
    .line 1901
    :cond_3
    :try_start_3
    move-object/from16 v0, p0

    #@9e
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@a0
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@a3
    move-result-object v4

    #@a4
    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    #@a7
    move-result v3

    #@a8
    if-eqz v3, :cond_4

    #@aa
    .line 1902
    const-string/jumbo v3, "WindowManager"

    #@ad
    new-instance v4, Ljava/lang/StringBuilder;

    #@af
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@b2
    const-string/jumbo v5, "Window "

    #@b5
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b8
    move-result-object v4

    #@b9
    move-object/from16 v0, p2

    #@bb
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@be
    move-result-object v4

    #@bf
    const-string/jumbo v5, " is already added"

    #@c2
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c5
    move-result-object v4

    #@c6
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c9
    move-result-object v4

    #@ca
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@cd
    .line 1903
    const/4 v3, -0x5

    #@ce
    monitor-exit v38

    #@cf
    return v3

    #@d0
    .line 1906
    :cond_4
    const/16 v3, 0x3e8

    #@d2
    move/from16 v0, v36

    #@d4
    if-lt v0, v3, :cond_6

    #@d6
    const/16 v3, 0x7cf

    #@d8
    move/from16 v0, v36

    #@da
    if-gt v0, v3, :cond_6

    #@dc
    .line 1907
    :try_start_4
    move-object/from16 v0, p4

    #@de
    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@e0
    const/4 v4, 0x0

    #@e1
    const/4 v5, 0x0

    #@e2
    move-object/from16 v0, p0

    #@e4
    invoke-virtual {v0, v4, v3, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@e7
    move-result-object v7

    #@e8
    .line 1908
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    if-nez v7, :cond_5

    #@ea
    .line 1909
    const-string/jumbo v3, "WindowManager"

    #@ed
    new-instance v4, Ljava/lang/StringBuilder;

    #@ef
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@f2
    const-string/jumbo v5, "Attempted to add window with token that is not a window: "

    #@f5
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f8
    move-result-object v4

    #@f9
    .line 1910
    move-object/from16 v0, p4

    #@fb
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@fd
    .line 1909
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@100
    move-result-object v4

    #@101
    .line 1910
    const-string/jumbo v5, ".  Aborting."

    #@104
    .line 1909
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@107
    move-result-object v4

    #@108
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10b
    move-result-object v4

    #@10c
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@10f
    .line 1911
    const/4 v3, -0x2

    #@110
    monitor-exit v38

    #@111
    return v3

    #@112
    .line 1913
    :cond_5
    :try_start_5
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@114
    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    #@116
    const/16 v4, 0x3e8

    #@118
    if-lt v3, v4, :cond_6

    #@11a
    .line 1914
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@11c
    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    #@11e
    const/16 v4, 0x7cf

    #@120
    if-gt v3, v4, :cond_6

    #@122
    .line 1915
    const-string/jumbo v3, "WindowManager"

    #@125
    new-instance v4, Ljava/lang/StringBuilder;

    #@127
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@12a
    const-string/jumbo v5, "Attempted to add window with token that is a sub-window: "

    #@12d
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@130
    move-result-object v4

    #@131
    .line 1916
    move-object/from16 v0, p4

    #@133
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@135
    .line 1915
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@138
    move-result-object v4

    #@139
    .line 1916
    const-string/jumbo v5, ".  Aborting."

    #@13c
    .line 1915
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13f
    move-result-object v4

    #@140
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@143
    move-result-object v4

    #@144
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@147
    .line 1917
    const/4 v3, -0x2

    #@148
    monitor-exit v38

    #@149
    return v3

    #@14a
    .line 1921
    .end local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :cond_6
    const/16 v3, 0x7ee

    #@14c
    move/from16 v0, v36

    #@14e
    if-ne v0, v3, :cond_7

    #@150
    :try_start_6
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isPrivate()Z

    #@153
    move-result v3

    #@154
    if-eqz v3, :cond_8

    #@156
    .line 1926
    :cond_7
    const/16 v23, 0x0

    #@158
    .line 1927
    .local v23, "addToken":Z
    move-object/from16 v0, p0

    #@15a
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@15c
    move-object/from16 v0, p4

    #@15e
    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@160
    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@163
    move-result-object v6

    #@164
    check-cast v6, Lcom/android/server/wm/WindowToken;

    #@166
    .line 1928
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    const/16 v25, 0x0

    #@168
    .line 1929
    .local v25, "atoken":Lcom/android/server/wm/AppWindowToken;
    const/16 v22, 0x0

    #@16a
    .line 1931
    .local v22, "addToastWindowRequiresToken":Z
    if-nez v6, :cond_12

    #@16c
    .line 1932
    const/4 v3, 0x1

    #@16d
    move/from16 v0, v36

    #@16f
    if-lt v0, v3, :cond_9

    #@171
    const/16 v3, 0x63

    #@173
    move/from16 v0, v36

    #@175
    if-gt v0, v3, :cond_9

    #@177
    .line 1933
    const-string/jumbo v3, "WindowManager"

    #@17a
    new-instance v4, Ljava/lang/StringBuilder;

    #@17c
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@17f
    const-string/jumbo v5, "Attempted to add application window with unknown token "

    #@182
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@185
    move-result-object v4

    #@186
    .line 1934
    move-object/from16 v0, p4

    #@188
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@18a
    .line 1933
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@18d
    move-result-object v4

    #@18e
    .line 1934
    const-string/jumbo v5, ".  Aborting."

    #@191
    .line 1933
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@194
    move-result-object v4

    #@195
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@198
    move-result-object v4

    #@199
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@19c
    .line 1935
    const/4 v3, -0x1

    #@19d
    monitor-exit v38

    #@19e
    return v3

    #@19f
    .line 1922
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v22    # "addToastWindowRequiresToken":Z
    .end local v23    # "addToken":Z
    .end local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    :try_start_7
    const-string/jumbo v3, "WindowManager"

    #@1a2
    const-string/jumbo v4, "Attempted to add private presentation window to a non-private display.  Aborting."

    #@1a5
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    #@1a8
    .line 1923
    const/4 v3, -0x8

    #@1a9
    monitor-exit v38

    #@1aa
    return v3

    #@1ab
    .line 1937
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v22    # "addToastWindowRequiresToken":Z
    .restart local v23    # "addToken":Z
    .restart local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_9
    const/16 v3, 0x7db

    #@1ad
    move/from16 v0, v36

    #@1af
    if-ne v0, v3, :cond_a

    #@1b1
    .line 1938
    :try_start_8
    const-string/jumbo v3, "WindowManager"

    #@1b4
    new-instance v4, Ljava/lang/StringBuilder;

    #@1b6
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@1b9
    const-string/jumbo v5, "Attempted to add input method window with unknown token "

    #@1bc
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1bf
    move-result-object v4

    #@1c0
    .line 1939
    move-object/from16 v0, p4

    #@1c2
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@1c4
    .line 1938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c7
    move-result-object v4

    #@1c8
    .line 1939
    const-string/jumbo v5, ".  Aborting."

    #@1cb
    .line 1938
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1ce
    move-result-object v4

    #@1cf
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1d2
    move-result-object v4

    #@1d3
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    #@1d6
    .line 1940
    const/4 v3, -0x1

    #@1d7
    monitor-exit v38

    #@1d8
    return v3

    #@1d9
    .line 1942
    :cond_a
    const/16 v3, 0x7ef

    #@1db
    move/from16 v0, v36

    #@1dd
    if-ne v0, v3, :cond_b

    #@1df
    .line 1943
    :try_start_9
    const-string/jumbo v3, "WindowManager"

    #@1e2
    new-instance v4, Ljava/lang/StringBuilder;

    #@1e4
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@1e7
    const-string/jumbo v5, "Attempted to add voice interaction window with unknown token "

    #@1ea
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1ed
    move-result-object v4

    #@1ee
    .line 1944
    move-object/from16 v0, p4

    #@1f0
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@1f2
    .line 1943
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1f5
    move-result-object v4

    #@1f6
    .line 1944
    const-string/jumbo v5, ".  Aborting."

    #@1f9
    .line 1943
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1fc
    move-result-object v4

    #@1fd
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@200
    move-result-object v4

    #@201
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    #@204
    .line 1945
    const/4 v3, -0x1

    #@205
    monitor-exit v38

    #@206
    return v3

    #@207
    .line 1947
    :cond_b
    const/16 v3, 0x7dd

    #@209
    move/from16 v0, v36

    #@20b
    if-ne v0, v3, :cond_c

    #@20d
    .line 1948
    :try_start_a
    const-string/jumbo v3, "WindowManager"

    #@210
    new-instance v4, Ljava/lang/StringBuilder;

    #@212
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@215
    const-string/jumbo v5, "Attempted to add wallpaper window with unknown token "

    #@218
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@21b
    move-result-object v4

    #@21c
    .line 1949
    move-object/from16 v0, p4

    #@21e
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@220
    .line 1948
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@223
    move-result-object v4

    #@224
    .line 1949
    const-string/jumbo v5, ".  Aborting."

    #@227
    .line 1948
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@22a
    move-result-object v4

    #@22b
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@22e
    move-result-object v4

    #@22f
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    #@232
    .line 1950
    const/4 v3, -0x1

    #@233
    monitor-exit v38

    #@234
    return v3

    #@235
    .line 1952
    :cond_c
    const/16 v3, 0x7e7

    #@237
    move/from16 v0, v36

    #@239
    if-ne v0, v3, :cond_d

    #@23b
    .line 1953
    :try_start_b
    const-string/jumbo v3, "WindowManager"

    #@23e
    new-instance v4, Ljava/lang/StringBuilder;

    #@240
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@243
    const-string/jumbo v5, "Attempted to add Dream window with unknown token "

    #@246
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@249
    move-result-object v4

    #@24a
    .line 1954
    move-object/from16 v0, p4

    #@24c
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@24e
    .line 1953
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@251
    move-result-object v4

    #@252
    .line 1954
    const-string/jumbo v5, ".  Aborting."

    #@255
    .line 1953
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@258
    move-result-object v4

    #@259
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@25c
    move-result-object v4

    #@25d
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    #@260
    .line 1955
    const/4 v3, -0x1

    #@261
    monitor-exit v38

    #@262
    return v3

    #@263
    .line 1957
    :cond_d
    const/16 v3, 0x7f3

    #@265
    move/from16 v0, v36

    #@267
    if-ne v0, v3, :cond_e

    #@269
    .line 1958
    :try_start_c
    const-string/jumbo v3, "WindowManager"

    #@26c
    new-instance v4, Ljava/lang/StringBuilder;

    #@26e
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@271
    const-string/jumbo v5, "Attempted to add QS dialog window with unknown token "

    #@274
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@277
    move-result-object v4

    #@278
    .line 1959
    move-object/from16 v0, p4

    #@27a
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@27c
    .line 1958
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@27f
    move-result-object v4

    #@280
    .line 1959
    const-string/jumbo v5, ".  Aborting."

    #@283
    .line 1958
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@286
    move-result-object v4

    #@287
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@28a
    move-result-object v4

    #@28b
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    #@28e
    .line 1960
    const/4 v3, -0x1

    #@28f
    monitor-exit v38

    #@290
    return v3

    #@291
    .line 1962
    :cond_e
    const/16 v3, 0x7f0

    #@293
    move/from16 v0, v36

    #@295
    if-ne v0, v3, :cond_f

    #@297
    .line 1963
    :try_start_d
    const-string/jumbo v3, "WindowManager"

    #@29a
    new-instance v4, Ljava/lang/StringBuilder;

    #@29c
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@29f
    const-string/jumbo v5, "Attempted to add Accessibility overlay window with unknown token "

    #@2a2
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2a5
    move-result-object v4

    #@2a6
    .line 1964
    move-object/from16 v0, p4

    #@2a8
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@2aa
    .line 1963
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2ad
    move-result-object v4

    #@2ae
    .line 1964
    const-string/jumbo v5, ".  Aborting."

    #@2b1
    .line 1963
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2b4
    move-result-object v4

    #@2b5
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b8
    move-result-object v4

    #@2b9
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_0

    #@2bc
    .line 1965
    const/4 v3, -0x1

    #@2bd
    monitor-exit v38

    #@2be
    return v3

    #@2bf
    .line 1967
    :cond_f
    const/16 v3, 0x7d5

    #@2c1
    move/from16 v0, v36

    #@2c3
    if-ne v0, v3, :cond_10

    #@2c5
    .line 1969
    :try_start_e
    move-object/from16 v0, p4

    #@2c7
    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    #@2c9
    move-object/from16 v0, p0

    #@2cb
    move/from16 v1, v26

    #@2cd
    invoke-direct {v0, v3, v1, v7}, Lcom/android/server/wm/WindowManagerService;->doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z

    #@2d0
    move-result v3

    #@2d1
    if-eqz v3, :cond_10

    #@2d3
    .line 1971
    const-string/jumbo v3, "WindowManager"

    #@2d6
    new-instance v4, Ljava/lang/StringBuilder;

    #@2d8
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@2db
    const-string/jumbo v5, "Attempted to add a toast window with unknown token "

    #@2de
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e1
    move-result-object v4

    #@2e2
    .line 1972
    move-object/from16 v0, p4

    #@2e4
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@2e6
    .line 1971
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2e9
    move-result-object v4

    #@2ea
    .line 1972
    const-string/jumbo v5, ".  Aborting."

    #@2ed
    .line 1971
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2f0
    move-result-object v4

    #@2f1
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2f4
    move-result-object v4

    #@2f5
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_0

    #@2f8
    .line 1973
    const/4 v3, -0x1

    #@2f9
    monitor-exit v38

    #@2fa
    return v3

    #@2fb
    .line 1976
    :cond_10
    :try_start_f
    new-instance v6, Lcom/android/server/wm/WindowToken;

    #@2fd
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p4

    #@2ff
    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@301
    const/4 v4, -0x1

    #@302
    const/4 v5, 0x0

    #@303
    move-object/from16 v0, p0

    #@305
    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@308
    .line 1977
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v23, 0x1

    #@30a
    .line 2049
    .end local v22    # "addToastWindowRequiresToken":Z
    .end local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_11
    :goto_0
    new-instance v2, Lcom/android/server/wm/WindowState;

    #@30c
    .line 2050
    const/4 v3, 0x0

    #@30d
    aget v8, v24, v3

    #@30f
    move-object/from16 v3, p0

    #@311
    move-object/from16 v4, p1

    #@313
    move-object/from16 v5, p2

    #@315
    move/from16 v9, p3

    #@317
    move-object/from16 v10, p4

    #@319
    move/from16 v11, p5

    #@31b
    .line 2049
    invoke-direct/range {v2 .. v12}, Lcom/android/server/wm/WindowState;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/Session;Landroid/view/IWindow;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowState;IILandroid/view/WindowManager$LayoutParams;ILcom/android/server/wm/DisplayContent;)V

    #@31e
    .line 2051
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDeathRecipient:Lcom/android/server/wm/WindowState$DeathRecipient;

    #@320
    if-nez v3, :cond_1d

    #@322
    .line 2054
    const-string/jumbo v3, "WindowManager"

    #@325
    new-instance v4, Ljava/lang/StringBuilder;

    #@327
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@32a
    const-string/jumbo v5, "Adding window client "

    #@32d
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@330
    move-result-object v4

    #@331
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@334
    move-result-object v5

    #@335
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@338
    move-result-object v4

    #@339
    .line 2055
    const-string/jumbo v5, " that is dead, aborting."

    #@33c
    .line 2054
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@33f
    move-result-object v4

    #@340
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@343
    move-result-object v4

    #@344
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_0

    #@347
    .line 2056
    const/4 v3, -0x4

    #@348
    monitor-exit v38

    #@349
    return v3

    #@34a
    .line 1978
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .restart local v22    # "addToastWindowRequiresToken":Z
    .restart local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_12
    const/4 v3, 0x1

    #@34b
    move/from16 v0, v36

    #@34d
    if-lt v0, v3, :cond_15

    #@34f
    const/16 v3, 0x63

    #@351
    move/from16 v0, v36

    #@353
    if-gt v0, v3, :cond_15

    #@355
    .line 1979
    :try_start_10
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@357
    move-object/from16 v25, v0

    #@359
    .line 1980
    .local v25, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v25, :cond_13

    #@35b
    .line 1981
    const-string/jumbo v3, "WindowManager"

    #@35e
    new-instance v4, Ljava/lang/StringBuilder;

    #@360
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@363
    const-string/jumbo v5, "Attempted to add window with non-application token "

    #@366
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@369
    move-result-object v4

    #@36a
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@36d
    move-result-object v4

    #@36e
    .line 1982
    const-string/jumbo v5, ".  Aborting."

    #@371
    .line 1981
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@374
    move-result-object v4

    #@375
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@378
    move-result-object v4

    #@379
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_0

    #@37c
    .line 1983
    const/4 v3, -0x3

    #@37d
    monitor-exit v38

    #@37e
    return v3

    #@37f
    .line 1984
    :cond_13
    :try_start_11
    move-object/from16 v0, v25

    #@381
    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@383
    if-eqz v3, :cond_14

    #@385
    .line 1985
    const-string/jumbo v3, "WindowManager"

    #@388
    new-instance v4, Ljava/lang/StringBuilder;

    #@38a
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@38d
    const-string/jumbo v5, "Attempted to add window with exiting application token "

    #@390
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@393
    move-result-object v4

    #@394
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@397
    move-result-object v4

    #@398
    .line 1986
    const-string/jumbo v5, ".  Aborting."

    #@39b
    .line 1985
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@39e
    move-result-object v4

    #@39f
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3a2
    move-result-object v4

    #@3a3
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_0

    #@3a6
    .line 1987
    const/4 v3, -0x4

    #@3a7
    monitor-exit v38

    #@3a8
    return v3

    #@3a9
    .line 1989
    :cond_14
    const/4 v3, 0x3

    #@3aa
    move/from16 v0, v36

    #@3ac
    if-ne v0, v3, :cond_11

    #@3ae
    :try_start_12
    move-object/from16 v0, v25

    #@3b0
    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_0

    #@3b2
    if-eqz v3, :cond_11

    #@3b4
    .line 1993
    const/4 v3, -0x6

    #@3b5
    monitor-exit v38

    #@3b6
    return v3

    #@3b7
    .line 1995
    .local v25, "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_15
    const/16 v3, 0x7db

    #@3b9
    move/from16 v0, v36

    #@3bb
    if-ne v0, v3, :cond_16

    #@3bd
    .line 1996
    :try_start_13
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@3bf
    const/16 v4, 0x7db

    #@3c1
    if-eq v3, v4, :cond_11

    #@3c3
    .line 1997
    const-string/jumbo v3, "WindowManager"

    #@3c6
    new-instance v4, Ljava/lang/StringBuilder;

    #@3c8
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@3cb
    const-string/jumbo v5, "Attempted to add input method window with bad token "

    #@3ce
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d1
    move-result-object v4

    #@3d2
    .line 1998
    move-object/from16 v0, p4

    #@3d4
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@3d6
    .line 1997
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3d9
    move-result-object v4

    #@3da
    .line 1998
    const-string/jumbo v5, ".  Aborting."

    #@3dd
    .line 1997
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3e0
    move-result-object v4

    #@3e1
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3e4
    move-result-object v4

    #@3e5
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_0

    #@3e8
    .line 1999
    const/4 v3, -0x1

    #@3e9
    monitor-exit v38

    #@3ea
    return v3

    #@3eb
    .line 2001
    :cond_16
    const/16 v3, 0x7ef

    #@3ed
    move/from16 v0, v36

    #@3ef
    if-ne v0, v3, :cond_17

    #@3f1
    .line 2002
    :try_start_14
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@3f3
    const/16 v4, 0x7ef

    #@3f5
    if-eq v3, v4, :cond_11

    #@3f7
    .line 2003
    const-string/jumbo v3, "WindowManager"

    #@3fa
    new-instance v4, Ljava/lang/StringBuilder;

    #@3fc
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@3ff
    const-string/jumbo v5, "Attempted to add voice interaction window with bad token "

    #@402
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@405
    move-result-object v4

    #@406
    .line 2004
    move-object/from16 v0, p4

    #@408
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@40a
    .line 2003
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@40d
    move-result-object v4

    #@40e
    .line 2004
    const-string/jumbo v5, ".  Aborting."

    #@411
    .line 2003
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@414
    move-result-object v4

    #@415
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@418
    move-result-object v4

    #@419
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_0

    #@41c
    .line 2005
    const/4 v3, -0x1

    #@41d
    monitor-exit v38

    #@41e
    return v3

    #@41f
    .line 2007
    :cond_17
    const/16 v3, 0x7dd

    #@421
    move/from16 v0, v36

    #@423
    if-ne v0, v3, :cond_18

    #@425
    .line 2008
    :try_start_15
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@427
    const/16 v4, 0x7dd

    #@429
    if-eq v3, v4, :cond_11

    #@42b
    .line 2009
    const-string/jumbo v3, "WindowManager"

    #@42e
    new-instance v4, Ljava/lang/StringBuilder;

    #@430
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@433
    const-string/jumbo v5, "Attempted to add wallpaper window with bad token "

    #@436
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@439
    move-result-object v4

    #@43a
    .line 2010
    move-object/from16 v0, p4

    #@43c
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@43e
    .line 2009
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@441
    move-result-object v4

    #@442
    .line 2010
    const-string/jumbo v5, ".  Aborting."

    #@445
    .line 2009
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@448
    move-result-object v4

    #@449
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@44c
    move-result-object v4

    #@44d
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_0

    #@450
    .line 2011
    const/4 v3, -0x1

    #@451
    monitor-exit v38

    #@452
    return v3

    #@453
    .line 2013
    :cond_18
    const/16 v3, 0x7e7

    #@455
    move/from16 v0, v36

    #@457
    if-ne v0, v3, :cond_19

    #@459
    .line 2014
    :try_start_16
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@45b
    const/16 v4, 0x7e7

    #@45d
    if-eq v3, v4, :cond_11

    #@45f
    .line 2015
    const-string/jumbo v3, "WindowManager"

    #@462
    new-instance v4, Ljava/lang/StringBuilder;

    #@464
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@467
    const-string/jumbo v5, "Attempted to add Dream window with bad token "

    #@46a
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@46d
    move-result-object v4

    #@46e
    .line 2016
    move-object/from16 v0, p4

    #@470
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@472
    .line 2015
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@475
    move-result-object v4

    #@476
    .line 2016
    const-string/jumbo v5, ".  Aborting."

    #@479
    .line 2015
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@47c
    move-result-object v4

    #@47d
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@480
    move-result-object v4

    #@481
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_0

    #@484
    .line 2017
    const/4 v3, -0x1

    #@485
    monitor-exit v38

    #@486
    return v3

    #@487
    .line 2019
    :cond_19
    const/16 v3, 0x7f0

    #@489
    move/from16 v0, v36

    #@48b
    if-ne v0, v3, :cond_1a

    #@48d
    .line 2020
    :try_start_17
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@48f
    const/16 v4, 0x7f0

    #@491
    if-eq v3, v4, :cond_11

    #@493
    .line 2021
    const-string/jumbo v3, "WindowManager"

    #@496
    new-instance v4, Ljava/lang/StringBuilder;

    #@498
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@49b
    const-string/jumbo v5, "Attempted to add Accessibility overlay window with bad token "

    #@49e
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a1
    move-result-object v4

    #@4a2
    .line 2022
    move-object/from16 v0, p4

    #@4a4
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@4a6
    .line 2021
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4a9
    move-result-object v4

    #@4aa
    .line 2022
    const-string/jumbo v5, ".  Aborting."

    #@4ad
    .line 2021
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4b0
    move-result-object v4

    #@4b1
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4b4
    move-result-object v4

    #@4b5
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_0

    #@4b8
    .line 2023
    const/4 v3, -0x1

    #@4b9
    monitor-exit v38

    #@4ba
    return v3

    #@4bb
    .line 2025
    :cond_1a
    const/16 v3, 0x7d5

    #@4bd
    move/from16 v0, v36

    #@4bf
    if-ne v0, v3, :cond_1b

    #@4c1
    .line 2027
    :try_start_18
    move-object/from16 v0, p4

    #@4c3
    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    #@4c5
    move-object/from16 v0, p0

    #@4c7
    move/from16 v1, v26

    #@4c9
    invoke-direct {v0, v3, v1, v7}, Lcom/android/server/wm/WindowManagerService;->doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z

    #@4cc
    move-result v22

    #@4cd
    .line 2029
    .local v22, "addToastWindowRequiresToken":Z
    if-eqz v22, :cond_11

    #@4cf
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@4d1
    const/16 v4, 0x7d5

    #@4d3
    if-eq v3, v4, :cond_11

    #@4d5
    .line 2030
    const-string/jumbo v3, "WindowManager"

    #@4d8
    new-instance v4, Ljava/lang/StringBuilder;

    #@4da
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@4dd
    const-string/jumbo v5, "Attempted to add a toast window with bad token "

    #@4e0
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e3
    move-result-object v4

    #@4e4
    .line 2031
    move-object/from16 v0, p4

    #@4e6
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@4e8
    .line 2030
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4eb
    move-result-object v4

    #@4ec
    .line 2031
    const-string/jumbo v5, ".  Aborting."

    #@4ef
    .line 2030
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4f2
    move-result-object v4

    #@4f3
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4f6
    move-result-object v4

    #@4f7
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_0

    #@4fa
    .line 2032
    const/4 v3, -0x1

    #@4fb
    monitor-exit v38

    #@4fc
    return v3

    #@4fd
    .line 2034
    .local v22, "addToastWindowRequiresToken":Z
    :cond_1b
    const/16 v3, 0x7f3

    #@4ff
    move/from16 v0, v36

    #@501
    if-ne v0, v3, :cond_1c

    #@503
    .line 2035
    :try_start_19
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@505
    const/16 v4, 0x7f3

    #@507
    if-eq v3, v4, :cond_11

    #@509
    .line 2036
    const-string/jumbo v3, "WindowManager"

    #@50c
    new-instance v4, Ljava/lang/StringBuilder;

    #@50e
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@511
    const-string/jumbo v5, "Attempted to add QS dialog window with bad token "

    #@514
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@517
    move-result-object v4

    #@518
    .line 2037
    move-object/from16 v0, p4

    #@51a
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@51c
    .line 2036
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@51f
    move-result-object v4

    #@520
    .line 2037
    const-string/jumbo v5, ".  Aborting."

    #@523
    .line 2036
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@526
    move-result-object v4

    #@527
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52a
    move-result-object v4

    #@52b
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_0

    #@52e
    .line 2038
    const/4 v3, -0x1

    #@52f
    monitor-exit v38

    #@530
    return v3

    #@531
    .line 2040
    :cond_1c
    :try_start_1a
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@533
    if-eqz v3, :cond_11

    #@535
    .line 2041
    const-string/jumbo v3, "WindowManager"

    #@538
    new-instance v4, Ljava/lang/StringBuilder;

    #@53a
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@53d
    const-string/jumbo v5, "Non-null appWindowToken for system window of type="

    #@540
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@543
    move-result-object v4

    #@544
    move/from16 v0, v36

    #@546
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@549
    move-result-object v4

    #@54a
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@54d
    move-result-object v4

    #@54e
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@551
    .line 2044
    const/4 v3, 0x0

    #@552
    move-object/from16 v0, p4

    #@554
    iput-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@556
    .line 2045
    new-instance v6, Lcom/android/server/wm/WindowToken;

    #@558
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/4 v3, 0x0

    #@559
    const/4 v4, -0x1

    #@55a
    const/4 v5, 0x0

    #@55b
    move-object/from16 v0, p0

    #@55d
    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@560
    .line 2046
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v23, 0x1

    #@562
    goto/16 :goto_0

    #@564
    .line 2059
    .end local v22    # "addToastWindowRequiresToken":Z
    .end local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_1d
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@567
    move-result-object v3

    #@568
    if-nez v3, :cond_1e

    #@56a
    .line 2060
    const-string/jumbo v3, "WindowManager"

    #@56d
    const-string/jumbo v4, "Adding window to Display that has been removed."

    #@570
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_0

    #@573
    .line 2061
    const/16 v3, -0x9

    #@575
    monitor-exit v38

    #@576
    return v3

    #@577
    .line 2064
    :cond_1e
    :try_start_1b
    move-object/from16 v0, p0

    #@579
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@57b
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@57d
    invoke-interface {v3, v4}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    #@580
    .line 2065
    move-object/from16 v0, p0

    #@582
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@584
    move-object/from16 v0, p4

    #@586
    invoke-interface {v3, v0}, Landroid/view/WindowManagerPolicy;->checkShowToOwnerOnly(Landroid/view/WindowManager$LayoutParams;)Z

    #@589
    move-result v3

    #@58a
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setShowToOwnerOnlyLocked(Z)V

    #@58d
    .line 2067
    move-object/from16 v0, p0

    #@58f
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@591
    move-object/from16 v0, p4

    #@593
    invoke-interface {v3, v2, v0}, Landroid/view/WindowManagerPolicy;->prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_0

    #@596
    move-result v34

    #@597
    .line 2068
    if-eqz v34, :cond_1f

    #@599
    monitor-exit v38

    #@59a
    .line 2069
    return v34

    #@59b
    .line 2072
    :cond_1f
    if-eqz p10, :cond_22

    #@59d
    .line 2073
    :try_start_1c
    move-object/from16 v0, p4

    #@59f
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    #@5a1
    and-int/lit8 v3, v3, 0x2

    #@5a3
    if-nez v3, :cond_21

    #@5a5
    const/16 v30, 0x1

    #@5a7
    .line 2074
    .local v30, "openInputChannels":Z
    :goto_1
    if-eqz v30, :cond_20

    #@5a9
    .line 2075
    move-object/from16 v0, p10

    #@5ab
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowState;->openInputChannel(Landroid/view/InputChannel;)V

    #@5ae
    .line 2088
    :cond_20
    const/16 v3, 0x7d5

    #@5b0
    move/from16 v0, v36

    #@5b2
    if-ne v0, v3, :cond_25

    #@5b4
    .line 2089
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@5b7
    move-result-object v3

    #@5b8
    move/from16 v0, v26

    #@5ba
    invoke-virtual {v3, v0}, Lcom/android/server/wm/DisplayContent;->canAddToastWindowForUid(I)Z

    #@5bd
    move-result v3

    #@5be
    if-nez v3, :cond_23

    #@5c0
    .line 2090
    const-string/jumbo v3, "WindowManager"

    #@5c3
    const-string/jumbo v4, "Adding more than one toast window for UID at a time."

    #@5c6
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_0

    #@5c9
    .line 2091
    const/4 v3, -0x5

    #@5ca
    monitor-exit v38

    #@5cb
    return v3

    #@5cc
    .line 2073
    .end local v30    # "openInputChannels":Z
    :cond_21
    const/16 v30, 0x0

    #@5ce
    goto :goto_1

    #@5cf
    .line 2072
    :cond_22
    const/16 v30, 0x0

    #@5d1
    goto :goto_1

    #@5d2
    .line 2098
    .restart local v30    # "openInputChannels":Z
    :cond_23
    if-nez v22, :cond_24

    #@5d4
    .line 2099
    :try_start_1d
    move-object/from16 v0, p4

    #@5d6
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@5d8
    and-int/lit8 v3, v3, 0x8

    #@5da
    if-nez v3, :cond_34

    #@5dc
    .line 2102
    :cond_24
    :goto_2
    move-object/from16 v0, p0

    #@5de
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@5e0
    .line 2103
    move-object/from16 v0, p0

    #@5e2
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@5e4
    const/16 v5, 0x34

    #@5e6
    invoke-virtual {v4, v5, v2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@5e9
    move-result-object v4

    #@5ea
    .line 2104
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5ec
    iget-wide v8, v5, Landroid/view/WindowManager$LayoutParams;->hideTimeoutMilliseconds:J

    #@5ee
    .line 2102
    invoke-virtual {v3, v4, v8, v9}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    #@5f1
    .line 2110
    :cond_25
    const/16 v34, 0x0

    #@5f3
    .line 2112
    invoke-static/range {v36 .. v36}, Lcom/android/server/wm/WindowManagerService;->excludeWindowTypeFromTapOutTask(I)Z

    #@5f6
    move-result v3

    #@5f7
    if-eqz v3, :cond_26

    #@5f9
    .line 2113
    iget-object v3, v12, Lcom/android/server/wm/DisplayContent;->mTapExcludedWindows:Ljava/util/ArrayList;

    #@5fb
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@5fe
    .line 2116
    :cond_26
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@601
    move-result-wide v32

    #@602
    .line 2118
    .local v32, "origId":J
    if-eqz v23, :cond_27

    #@604
    .line 2119
    move-object/from16 v0, p0

    #@606
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@608
    move-object/from16 v0, p4

    #@60a
    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@60c
    invoke-virtual {v3, v4, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@60f
    .line 2121
    :cond_27
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->attach()V

    #@612
    .line 2122
    move-object/from16 v0, p0

    #@614
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@616
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@619
    move-result-object v4

    #@61a
    invoke-virtual {v3, v4, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@61d
    .line 2123
    iget v3, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@61f
    const/4 v4, -0x1

    #@620
    if-eq v3, v4, :cond_28

    #@622
    .line 2124
    move-object/from16 v0, p0

    #@624
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@626
    iget v4, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@628
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@62b
    move-result v5

    #@62c
    .line 2125
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@62f
    move-result-object v8

    #@630
    .line 2124
    invoke-virtual {v3, v4, v5, v8}, Landroid/app/AppOpsManager;->startOpNoThrow(IILjava/lang/String;)I

    #@633
    move-result v35

    #@634
    .line 2126
    .local v35, "startOpResult":I
    if-eqz v35, :cond_28

    #@636
    .line 2127
    const/4 v3, 0x3

    #@637
    move/from16 v0, v35

    #@639
    if-eq v0, v3, :cond_28

    #@63b
    .line 2128
    const/4 v3, 0x0

    #@63c
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V

    #@63f
    .line 2132
    .end local v35    # "startOpResult":I
    :cond_28
    const/4 v3, 0x3

    #@640
    move/from16 v0, v36

    #@642
    if-ne v0, v3, :cond_29

    #@644
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@646
    if-eqz v3, :cond_29

    #@648
    .line 2133
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@64a
    iput-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@64c
    .line 2138
    :cond_29
    const/16 v29, 0x1

    #@64e
    .line 2140
    .local v29, "imMayMove":Z
    const/16 v3, 0x7db

    #@650
    move/from16 v0, v36

    #@652
    if-ne v0, v3, :cond_35

    #@654
    .line 2141
    const/4 v3, 0x1

    #@655
    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@657
    .line 2142
    move-object/from16 v0, p0

    #@659
    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@65b
    .line 2143
    move-object/from16 v0, p0

    #@65d
    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    #@660
    .line 2144
    const/16 v29, 0x0

    #@662
    .line 2169
    :cond_2a
    :goto_3
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->applyScrollIfNeeded()V

    #@665
    .line 2173
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->applyAdjustForImeIfNeeded()V

    #@668
    .line 2175
    const/16 v3, 0x7f2

    #@66a
    move/from16 v0, v36

    #@66c
    if-ne v0, v3, :cond_2b

    #@66e
    .line 2176
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@671
    move-result-object v3

    #@672
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@675
    move-result-object v3

    #@676
    invoke-virtual {v3, v2}, Lcom/android/server/wm/DockedStackDividerController;->setWindow(Lcom/android/server/wm/WindowState;)V

    #@679
    .line 2179
    :cond_2b
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@67b
    move-object/from16 v37, v0

    #@67d
    .line 2180
    .local v37, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v3, 0x1

    #@67e
    move-object/from16 v0, v37

    #@680
    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@682
    .line 2181
    const/4 v3, 0x1

    #@683
    move-object/from16 v0, v37

    #@685
    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@687
    .line 2183
    if-eqz v25, :cond_2c

    #@689
    move-object/from16 v0, p0

    #@68b
    move-object/from16 v1, v25

    #@68d
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->prepareWindowReplacementTransition(Lcom/android/server/wm/AppWindowToken;)Z

    #@690
    move-result v3

    #@691
    if-eqz v3, :cond_39

    #@693
    .line 2190
    :cond_2c
    :goto_4
    iget-boolean v3, v12, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    #@695
    if-eqz v3, :cond_3b

    #@697
    .line 2191
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@69a
    move-result-object v27

    #@69b
    .line 2193
    .local v27, "displayInfo":Landroid/view/DisplayInfo;
    if-eqz v25, :cond_3a

    #@69d
    move-object/from16 v0, v25

    #@69f
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@6a1
    if-eqz v3, :cond_3a

    #@6a3
    .line 2194
    move-object/from16 v0, p0

    #@6a5
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@6a7
    .line 2195
    .local v15, "taskBounds":Landroid/graphics/Rect;
    move-object/from16 v0, v25

    #@6a9
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@6ab
    move-object/from16 v0, p0

    #@6ad
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@6af
    invoke-virtual {v3, v4}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V

    #@6b2
    .line 2199
    .end local v15    # "taskBounds":Landroid/graphics/Rect;
    :goto_5
    move-object/from16 v0, p0

    #@6b4
    iget-object v13, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6b6
    iget-object v14, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6b8
    move-object/from16 v0, p0

    #@6ba
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@6bc
    move/from16 v16, v0

    #@6be
    .line 2200
    move-object/from16 v0, v27

    #@6c0
    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@6c2
    move/from16 v17, v0

    #@6c4
    move-object/from16 v0, v27

    #@6c6
    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@6c8
    move/from16 v18, v0

    #@6ca
    move-object/from16 v19, p7

    #@6cc
    move-object/from16 v20, p8

    #@6ce
    move-object/from16 v21, p9

    #@6d0
    .line 2199
    invoke-interface/range {v13 .. v21}, Landroid/view/WindowManagerPolicy;->getInsetHintLw(Landroid/view/WindowManager$LayoutParams;Landroid/graphics/Rect;IIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    #@6d3
    move-result v3

    #@6d4
    if-eqz v3, :cond_2d

    #@6d6
    .line 2202
    const/16 v34, 0x4

    #@6d8
    .line 2209
    .end local v27    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_2d
    :goto_6
    move-object/from16 v0, p0

    #@6da
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@6dc
    if-eqz v3, :cond_2e

    #@6de
    .line 2210
    or-int/lit8 v34, v34, 0x1

    #@6e0
    .line 2212
    :cond_2e
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@6e2
    if-eqz v3, :cond_3c

    #@6e4
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@6e6
    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@6e8
    if-eqz v3, :cond_3c

    #@6ea
    .line 2216
    :goto_7
    move-object/from16 v0, p0

    #@6ec
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@6ee
    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@6f1
    .line 2218
    const/16 v28, 0x0

    #@6f3
    .line 2219
    .local v28, "focusChanged":Z
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    #@6f6
    move-result v3

    #@6f7
    if-eqz v3, :cond_2f

    #@6f9
    .line 2220
    const/4 v3, 0x1

    #@6fa
    .line 2221
    const/4 v4, 0x0

    #@6fb
    .line 2220
    move-object/from16 v0, p0

    #@6fd
    invoke-virtual {v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@700
    move-result v28

    #@701
    .line 2222
    .local v28, "focusChanged":Z
    if-eqz v28, :cond_2f

    #@703
    .line 2223
    const/16 v29, 0x0

    #@705
    .line 2227
    .end local v28    # "focusChanged":Z
    :cond_2f
    if-eqz v29, :cond_30

    #@707
    .line 2228
    const/4 v3, 0x0

    #@708
    move-object/from16 v0, p0

    #@70a
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@70d
    .line 2231
    :cond_30
    move-object/from16 v0, p0

    #@70f
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@711
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@714
    move-result-object v4

    #@715
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@718
    .line 2235
    if-eqz v28, :cond_31

    #@71a
    .line 2236
    move-object/from16 v0, p0

    #@71c
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@71e
    move-object/from16 v0, p0

    #@720
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@722
    const/4 v5, 0x0

    #@723
    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    #@726
    .line 2238
    :cond_31
    move-object/from16 v0, p0

    #@728
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@72a
    const/4 v4, 0x0

    #@72b
    invoke-virtual {v3, v4}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@72e
    .line 2243
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    #@731
    move-result v3

    #@732
    if-eqz v3, :cond_32

    #@734
    const/4 v3, 0x0

    #@735
    move-object/from16 v0, p0

    #@737
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z
    :try_end_1d
    .catchall {:try_start_1d .. :try_end_1d} :catchall_0

    #@73a
    move-result v3

    #@73b
    if-eqz v3, :cond_32

    #@73d
    .line 2244
    const/16 v31, 0x1

    #@73f
    :cond_32
    monitor-exit v38

    #@740
    .line 2248
    if-eqz v31, :cond_33

    #@742
    .line 2249
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@745
    .line 2252
    :cond_33
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@748
    .line 2254
    return v34

    #@749
    .line 2100
    .end local v29    # "imMayMove":Z
    .end local v32    # "origId":J
    .end local v37    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_34
    :try_start_1e
    move-object/from16 v0, p0

    #@74b
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@74d
    if-eqz v3, :cond_24

    #@74f
    .line 2101
    move-object/from16 v0, p0

    #@751
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@753
    iget v3, v3, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    #@755
    move/from16 v0, v26

    #@757
    if-eq v3, v0, :cond_25

    #@759
    goto/16 :goto_2

    #@75b
    .line 2145
    .restart local v29    # "imMayMove":Z
    .restart local v32    # "origId":J
    :cond_35
    const/16 v3, 0x7dc

    #@75d
    move/from16 v0, v36

    #@75f
    if-ne v0, v3, :cond_36

    #@761
    .line 2146
    move-object/from16 v0, p0

    #@763
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@765
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@768
    .line 2147
    const/4 v3, 0x1

    #@769
    move-object/from16 v0, p0

    #@76b
    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@76e
    .line 2148
    const/4 v3, 0x1

    #@76f
    move-object/from16 v0, p0

    #@771
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@774
    move-result v3

    #@775
    move-object/from16 v0, p0

    #@777
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@77a
    .line 2149
    const/16 v29, 0x0

    #@77c
    goto/16 :goto_3

    #@77e
    .line 2151
    :cond_36
    const/4 v3, 0x1

    #@77f
    move-object/from16 v0, p0

    #@781
    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@784
    .line 2152
    const/16 v3, 0x7dd

    #@786
    move/from16 v0, v36

    #@788
    if-ne v0, v3, :cond_37

    #@78a
    .line 2153
    move-object/from16 v0, p0

    #@78c
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@78e
    invoke-virtual {v3}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    #@791
    .line 2154
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@793
    or-int/lit8 v3, v3, 0x4

    #@795
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@797
    goto/16 :goto_3

    #@799
    .line 2155
    :cond_37
    move-object/from16 v0, p4

    #@79b
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@79d
    const/high16 v4, 0x100000

    #@79f
    and-int/2addr v3, v4

    #@7a0
    if-eqz v3, :cond_38

    #@7a2
    .line 2156
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@7a4
    or-int/lit8 v3, v3, 0x4

    #@7a6
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@7a8
    goto/16 :goto_3

    #@7aa
    .line 2157
    :cond_38
    move-object/from16 v0, p0

    #@7ac
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@7ae
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WallpaperController;->isBelowWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    #@7b1
    move-result v3

    #@7b2
    if-eqz v3, :cond_2a

    #@7b4
    .line 2163
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@7b6
    or-int/lit8 v3, v3, 0x4

    #@7b8
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@7ba
    goto/16 :goto_3

    #@7bc
    .line 2187
    .restart local v37    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_39
    move-object/from16 v0, p0

    #@7be
    move-object/from16 v1, v25

    #@7c0
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->prepareNoneTransitionForRelaunching(Lcom/android/server/wm/AppWindowToken;)V

    #@7c3
    goto/16 :goto_4

    #@7c5
    .line 2197
    .restart local v27    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_3a
    const/4 v15, 0x0

    #@7c6
    .local v15, "taskBounds":Landroid/graphics/Rect;
    goto/16 :goto_5

    #@7c8
    .line 2205
    .end local v15    # "taskBounds":Landroid/graphics/Rect;
    .end local v27    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_3b
    invoke-virtual/range {p7 .. p7}, Landroid/graphics/Rect;->setEmpty()V

    #@7cb
    .line 2206
    invoke-virtual/range {p8 .. p8}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_1e
    .catchall {:try_start_1e .. :try_end_1e} :catchall_0

    #@7ce
    goto/16 :goto_6

    #@7d0
    .line 2213
    :cond_3c
    or-int/lit8 v34, v34, 0x2

    #@7d2
    goto/16 :goto_7
.end method

.method public addWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@0
    .prologue
    .line 7414
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 7415
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 7413
    return-void

    #@a
    .line 7414
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public addWindowToken(Landroid/os/IBinder;I)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I

    #@0
    .prologue
    .line 3429
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3430
    const-string/jumbo v2, "addWindowToken()"

    #@6
    .line 3429
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3431
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3434
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 3435
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 3436
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 3437
    const-string/jumbo v1, "WindowManager"

    #@25
    new-instance v3, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    const-string/jumbo v4, "Attempted to add existing input method token: "

    #@2d
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@34
    move-result-object v3

    #@35
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@38
    move-result-object v3

    #@39
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3c
    monitor-exit v2

    #@3d
    .line 3438
    return-void

    #@3e
    .line 3440
    :cond_1
    :try_start_1
    new-instance v0, Lcom/android/server/wm/WindowToken;

    #@40
    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    const/4 v1, 0x1

    #@41
    invoke-direct {v0, p0, p1, p2, v1}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@44
    .line 3441
    .restart local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@46
    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@49
    .line 3442
    const/16 v1, 0x7dd

    #@4b
    if-ne p2, v1, :cond_2

    #@4d
    .line 3443
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@4f
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WallpaperController;->addWallpaperToken(Lcom/android/server/wm/WindowToken;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@52
    :cond_2
    monitor-exit v2

    #@53
    .line 3428
    return-void

    #@54
    .line 3434
    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@55
    monitor-exit v2

    #@56
    throw v1
.end method

.method adjustAnimationBackground(Lcom/android/server/wm/WindowStateAnimator;)I
    .locals 4
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    #@0
    .prologue
    .line 9792
    iget-object v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@2
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@5
    move-result-object v2

    #@6
    .line 9793
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@9
    move-result v3

    #@a
    add-int/lit8 v0, v3, -0x1

    #@c
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    #@e
    .line 9794
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v1

    #@12
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@14
    .line 9795
    .local v1, "testWin":Lcom/android/server/wm/WindowState;
    iget-boolean v3, v1, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@16
    if-eqz v3, :cond_0

    #@18
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@1b
    move-result v3

    #@1c
    if-eqz v3, :cond_0

    #@1e
    .line 9796
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@20
    iget v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@22
    return v3

    #@23
    .line 9793
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@25
    goto :goto_0

    #@26
    .line 9799
    .end local v1    # "testWin":Lcom/android/server/wm/WindowState;
    :cond_1
    iget v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@28
    return v3
.end method

.method adjustForImeIfNeeded(Lcom/android/server/wm/DisplayContent;)V
    .locals 23
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 7898
    move-object/from16 v0, p0

    #@2
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@4
    .line 7899
    .local v5, "imeWin":Lcom/android/server/wm/WindowState;
    if-eqz v5, :cond_3

    #@6
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@9
    move-result v1

    #@a
    if-eqz v1, :cond_3

    #@c
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@f
    move-result v1

    #@10
    if-eqz v1, :cond_3

    #@12
    .line 7900
    move-object/from16 v0, p1

    #@14
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@16
    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->isImeHideRequested()Z

    #@19
    move-result v1

    #@1a
    if-eqz v1, :cond_2

    #@1c
    const/16 v19, 0x0

    #@1e
    .line 7901
    .local v19, "imeVisible":Z
    :goto_0
    const/4 v1, 0x3

    #@1f
    move-object/from16 v0, p0

    #@21
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    #@24
    move-result v10

    #@25
    .line 7902
    .local v10, "dockVisible":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getImeFocusStackLocked()Lcom/android/server/wm/TaskStack;

    #@28
    move-result-object v18

    #@29
    .line 7903
    .local v18, "imeTargetStack":Lcom/android/server/wm/TaskStack;
    if-eqz v10, :cond_4

    #@2b
    if-eqz v18, :cond_4

    #@2d
    .line 7904
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/TaskStack;->getDockSide()I

    #@30
    move-result v15

    #@31
    .line 7905
    .local v15, "imeDockSide":I
    :goto_1
    const/4 v1, 0x2

    #@32
    if-ne v15, v1, :cond_5

    #@34
    const/16 v17, 0x1

    #@36
    .line 7906
    .local v17, "imeOnTop":Z
    :goto_2
    const/4 v1, 0x4

    #@37
    if-ne v15, v1, :cond_6

    #@39
    const/4 v2, 0x1

    #@3a
    .line 7907
    .local v2, "imeOnBottom":Z
    :goto_3
    move-object/from16 v0, p1

    #@3c
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@3e
    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->isMinimizedDock()Z

    #@41
    move-result v13

    #@42
    .line 7908
    .local v13, "dockMinimized":Z
    move-object/from16 v0, p0

    #@44
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@46
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getInputMethodWindowVisibleHeightLw()I

    #@49
    move-result v6

    #@4a
    .line 7909
    .local v6, "imeHeight":I
    if-eqz v19, :cond_8

    #@4c
    .line 7910
    move-object/from16 v0, p1

    #@4e
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@50
    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->getImeHeightAdjustedFor()I

    #@53
    move-result v1

    #@54
    if-eq v6, v1, :cond_7

    #@56
    const/16 v16, 0x1

    #@58
    .line 7918
    .local v16, "imeHeightChanged":Z
    :goto_4
    if-eqz v19, :cond_1

    #@5a
    if-eqz v10, :cond_1

    #@5c
    if-nez v17, :cond_0

    #@5e
    if-eqz v2, :cond_1

    #@60
    :cond_0
    if-eqz v13, :cond_9

    #@62
    .line 7932
    :cond_1
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@65
    move-result-object v22

    #@66
    .line 7933
    .local v22, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual/range {v22 .. v22}, Ljava/util/ArrayList;->size()I

    #@69
    move-result v1

    #@6a
    add-int/lit8 v14, v1, -0x1

    #@6c
    .local v14, "i":I
    :goto_5
    if-ltz v14, :cond_10

    #@6e
    .line 7934
    move-object/from16 v0, v22

    #@70
    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@73
    move-result-object v21

    #@74
    check-cast v21, Lcom/android/server/wm/TaskStack;

    #@76
    .line 7935
    .local v21, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v10, :cond_f

    #@78
    const/4 v1, 0x0

    #@79
    :goto_6
    move-object/from16 v0, v21

    #@7b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->resetAdjustedForIme(Z)V

    #@7e
    .line 7933
    add-int/lit8 v14, v14, -0x1

    #@80
    goto :goto_5

    #@81
    .line 7900
    .end local v2    # "imeOnBottom":Z
    .end local v6    # "imeHeight":I
    .end local v10    # "dockVisible":Z
    .end local v13    # "dockMinimized":Z
    .end local v14    # "i":I
    .end local v15    # "imeDockSide":I
    .end local v16    # "imeHeightChanged":Z
    .end local v17    # "imeOnTop":Z
    .end local v18    # "imeTargetStack":Lcom/android/server/wm/TaskStack;
    .end local v19    # "imeVisible":Z
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v22    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    :cond_2
    const/16 v19, 0x1

    #@83
    .restart local v19    # "imeVisible":Z
    goto :goto_0

    #@84
    .line 7899
    .end local v19    # "imeVisible":Z
    :cond_3
    const/16 v19, 0x0

    #@86
    .restart local v19    # "imeVisible":Z
    goto :goto_0

    #@87
    .line 7904
    .restart local v10    # "dockVisible":Z
    .restart local v18    # "imeTargetStack":Lcom/android/server/wm/TaskStack;
    :cond_4
    const/4 v15, -0x1

    #@88
    goto :goto_1

    #@89
    .line 7905
    .restart local v15    # "imeDockSide":I
    :cond_5
    const/16 v17, 0x0

    #@8b
    .restart local v17    # "imeOnTop":Z
    goto :goto_2

    #@8c
    .line 7906
    :cond_6
    const/4 v2, 0x0

    #@8d
    .restart local v2    # "imeOnBottom":Z
    goto :goto_3

    #@8e
    .line 7910
    .restart local v6    # "imeHeight":I
    .restart local v13    # "dockMinimized":Z
    :cond_7
    const/16 v16, 0x0

    #@90
    .restart local v16    # "imeHeightChanged":Z
    goto :goto_4

    #@91
    .line 7909
    .end local v16    # "imeHeightChanged":Z
    :cond_8
    const/16 v16, 0x0

    #@93
    .restart local v16    # "imeHeightChanged":Z
    goto :goto_4

    #@94
    .line 7919
    :cond_9
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@97
    move-result-object v22

    #@98
    .line 7920
    .restart local v22    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual/range {v22 .. v22}, Ljava/util/ArrayList;->size()I

    #@9b
    move-result v1

    #@9c
    add-int/lit8 v14, v1, -0x1

    #@9e
    .restart local v14    # "i":I
    :goto_7
    if-ltz v14, :cond_e

    #@a0
    .line 7921
    move-object/from16 v0, v22

    #@a2
    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@a5
    move-result-object v21

    #@a6
    check-cast v21, Lcom/android/server/wm/TaskStack;

    #@a8
    .line 7922
    .restart local v21    # "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/TaskStack;->getDockSide()I

    #@ab
    move-result v1

    #@ac
    const/4 v3, 0x4

    #@ad
    if-ne v1, v3, :cond_b

    #@af
    const/16 v20, 0x1

    #@b1
    .line 7923
    .local v20, "isDockedOnBottom":Z
    :goto_8
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    #@b4
    move-result v1

    #@b5
    if-eqz v1, :cond_d

    #@b7
    if-nez v2, :cond_a

    #@b9
    if-eqz v20, :cond_d

    #@bb
    .line 7924
    :cond_a
    if-eqz v2, :cond_c

    #@bd
    move/from16 v1, v16

    #@bf
    :goto_9
    move-object/from16 v0, v21

    #@c1
    invoke-virtual {v0, v5, v1}, Lcom/android/server/wm/TaskStack;->setAdjustedForIme(Lcom/android/server/wm/WindowState;Z)V

    #@c4
    .line 7920
    :goto_a
    add-int/lit8 v14, v14, -0x1

    #@c6
    goto :goto_7

    #@c7
    .line 7922
    .end local v20    # "isDockedOnBottom":Z
    :cond_b
    const/16 v20, 0x0

    #@c9
    .restart local v20    # "isDockedOnBottom":Z
    goto :goto_8

    #@ca
    .line 7924
    :cond_c
    const/4 v1, 0x0

    #@cb
    goto :goto_9

    #@cc
    .line 7926
    :cond_d
    const/4 v1, 0x0

    #@cd
    move-object/from16 v0, v21

    #@cf
    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->resetAdjustedForIme(Z)V

    #@d2
    goto :goto_a

    #@d3
    .line 7929
    .end local v20    # "isDockedOnBottom":Z
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_e
    move-object/from16 v0, p1

    #@d5
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@d7
    .line 7930
    const/4 v3, 0x1

    #@d8
    const/4 v4, 0x1

    #@d9
    .line 7929
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/wm/DockedStackDividerController;->setAdjustedForIme(ZZZLcom/android/server/wm/WindowState;I)V

    #@dc
    .line 7897
    :goto_b
    return-void

    #@dd
    .line 7935
    .restart local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_f
    const/4 v1, 0x1

    #@de
    goto :goto_6

    #@df
    .line 7937
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_10
    move-object/from16 v0, p1

    #@e1
    iget-object v7, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@e3
    .line 7938
    const/4 v8, 0x0

    #@e4
    const/4 v9, 0x0

    #@e5
    move-object v11, v5

    #@e6
    move v12, v6

    #@e7
    .line 7937
    invoke-virtual/range {v7 .. v12}, Lcom/android/server/wm/DockedStackDividerController;->setAdjustedForIme(ZZZLcom/android/server/wm/WindowState;I)V

    #@ea
    goto :goto_b
.end method

.method public animateResizePinnedStack(Landroid/graphics/Rect;I)V
    .locals 8
    .param p1, "bounds"    # Landroid/graphics/Rect;
    .param p2, "animationDuration"    # I

    #@0
    .prologue
    .line 11299
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 11300
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    const/4 v1, 0x4

    #@6
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@9
    move-result-object v2

    #@a
    check-cast v2, Lcom/android/server/wm/TaskStack;

    #@c
    .line 11301
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_0

    #@e
    .line 11302
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@10
    const-string/jumbo v1, "animateResizePinnedStack: stackId 4 not found."

    #@13
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    monitor-exit v6

    #@17
    .line 11303
    return-void

    #@18
    .line 11305
    :cond_0
    :try_start_1
    new-instance v3, Landroid/graphics/Rect;

    #@1a
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@1d
    .line 11306
    .local v3, "originalBounds":Landroid/graphics/Rect;
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    #@20
    .line 11307
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    #@23
    move-result-object v7

    #@24
    new-instance v0, Lcom/android/server/wm/WindowManagerService$10;

    #@26
    move-object v1, p0

    #@27
    move-object v4, p1

    #@28
    move v5, p2

    #@29
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService$10;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/TaskStack;Landroid/graphics/Rect;Landroid/graphics/Rect;I)V

    #@2c
    invoke-virtual {v7, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v6

    #@30
    .line 11298
    return-void

    #@31
    .line 11299
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "originalBounds":Landroid/graphics/Rect;
    :catchall_0
    move-exception v0

    #@32
    monitor-exit v6

    #@33
    throw v0
.end method

.method public attachStack(IIZ)Landroid/graphics/Rect;
    .locals 10
    .param p1, "stackId"    # I
    .param p2, "displayId"    # I
    .param p3, "onTop"    # Z

    #@0
    .prologue
    const/4 v9, 0x0

    #@1
    .line 5145
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4
    move-result-wide v4

    #@5
    .line 5147
    .local v4, "origId":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@7
    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@8
    .line 5148
    :try_start_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@a
    invoke-virtual {v6, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@d
    move-result-object v2

    #@e
    check-cast v2, Lcom/android/server/wm/DisplayContent;

    #@10
    .line 5149
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v0, 0x0

    #@11
    .line 5150
    .local v0, "attachedToDisplay":Z
    if-eqz v2, :cond_4

    #@13
    .line 5151
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@15
    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@18
    move-result-object v3

    #@19
    check-cast v3, Lcom/android/server/wm/TaskStack;

    #@1b
    .line 5152
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v3, :cond_0

    #@1d
    .line 5155
    invoke-virtual {v2, p1}, Lcom/android/server/wm/DisplayContent;->getStackById(I)Lcom/android/server/wm/TaskStack;

    #@20
    move-result-object v3

    #@21
    .line 5156
    if-eqz v3, :cond_2

    #@23
    .line 5159
    invoke-virtual {v2, v3}, Lcom/android/server/wm/DisplayContent;->detachStack(Lcom/android/server/wm/TaskStack;)V

    #@26
    .line 5160
    const/4 v6, 0x0

    #@27
    iput-boolean v6, v3, Lcom/android/server/wm/TaskStack;->mDeferDetach:Z

    #@29
    .line 5161
    const/4 v0, 0x1

    #@2a
    .line 5166
    :goto_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@2c
    invoke-virtual {v6, p1, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@2f
    .line 5167
    const/4 v6, 0x3

    #@30
    if-ne p1, v6, :cond_0

    #@32
    .line 5168
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@35
    move-result-object v6

    #@36
    iget-object v6, v6, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@38
    .line 5169
    const/4 v8, 0x1

    #@39
    .line 5168
    invoke-virtual {v6, v8}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    #@3c
    .line 5172
    :cond_0
    if-nez v0, :cond_1

    #@3e
    .line 5173
    invoke-virtual {v3, v2}, Lcom/android/server/wm/TaskStack;->attachDisplayContent(Lcom/android/server/wm/DisplayContent;)V

    #@41
    .line 5175
    :cond_1
    invoke-virtual {v2, v3, p3}, Lcom/android/server/wm/DisplayContent;->attachStack(Lcom/android/server/wm/TaskStack;Z)V

    #@44
    .line 5176
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getRawFullscreen()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@47
    move-result v6

    #@48
    if-eqz v6, :cond_3

    #@4a
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@4b
    .line 5185
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4e
    .line 5177
    return-object v9

    #@4f
    .line 5163
    :cond_2
    :try_start_3
    new-instance v3, Lcom/android/server/wm/TaskStack;

    #@51
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    invoke-direct {v3, p0, p1}, Lcom/android/server/wm/TaskStack;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    #@54
    .restart local v3    # "stack":Lcom/android/server/wm/TaskStack;
    goto :goto_0

    #@55
    .line 5179
    :cond_3
    new-instance v1, Landroid/graphics/Rect;

    #@57
    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    #@5a
    .line 5180
    .local v1, "bounds":Landroid/graphics/Rect;
    invoke-virtual {v3, v1}, Lcom/android/server/wm/TaskStack;->getRawBounds(Landroid/graphics/Rect;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@5d
    :try_start_4
    monitor-exit v7
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@5e
    .line 5185
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@61
    .line 5181
    return-object v1

    #@62
    .end local v1    # "bounds":Landroid/graphics/Rect;
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_4
    :try_start_5
    monitor-exit v7
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@63
    .line 5185
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@66
    .line 5187
    return-object v9

    #@67
    .line 5147
    .end local v0    # "attachedToDisplay":Z
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v6

    #@68
    :try_start_6
    monitor-exit v7

    #@69
    throw v6
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    #@6a
    .line 5184
    :catchall_1
    move-exception v6

    #@6b
    .line 5185
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@6e
    .line 5184
    throw v6
.end method

.method public cancelTaskThumbnailTransition(I)V
    .locals 3
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5244
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5245
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5246
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    #@d
    .line 5247
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->cancelTaskThumbnailTransition()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    .line 5243
    return-void

    #@12
    .line 5244
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method public cancelTaskWindowTransition(I)V
    .locals 3
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5234
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5235
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5236
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    #@d
    .line 5237
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->cancelTaskWindowTransition()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    .line 5233
    return-void

    #@12
    .line 5234
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method checkDrawnWindowsLocked()V
    .locals 4

    #@0
    .prologue
    .line 9705
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@2
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    #@5
    move-result v2

    #@6
    if-nez v2, :cond_0

    #@8
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallback:Ljava/lang/Runnable;

    #@a
    if-nez v2, :cond_1

    #@c
    .line 9706
    :cond_0
    return-void

    #@d
    .line 9708
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v2

    #@13
    add-int/lit8 v0, v2, -0x1

    #@15
    .local v0, "j":I
    :goto_0
    if-ltz v0, :cond_4

    #@17
    .line 9709
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@19
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1c
    move-result-object v1

    #@1d
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@1f
    .line 9714
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@21
    if-nez v2, :cond_3

    #@23
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@25
    if-eqz v2, :cond_3

    #@27
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    #@29
    if-eqz v2, :cond_3

    #@2b
    .line 9718
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->hasDrawnLw()Z

    #@2e
    move-result v2

    #@2f
    if-eqz v2, :cond_2

    #@31
    .line 9721
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@33
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@36
    .line 9708
    :cond_2
    :goto_1
    add-int/lit8 v0, v0, -0x1

    #@38
    goto :goto_0

    #@39
    .line 9717
    :cond_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@3b
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@3e
    goto :goto_1

    #@3f
    .line 9724
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@41
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    #@44
    move-result v2

    #@45
    if-eqz v2, :cond_5

    #@47
    .line 9726
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@49
    const/16 v3, 0x18

    #@4b
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@4e
    .line 9727
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@50
    const/16 v3, 0x21

    #@52
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@55
    .line 9704
    :cond_5
    return-void
.end method

.method public clearForcedDisplayDensityForUser(II)V
    .locals 12
    .param p1, "displayId"    # I
    .param p2, "userId"    # I

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    const/4 v3, 0x0

    #@2
    .line 9264
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4
    .line 9265
    const-string/jumbo v1, "android.permission.WRITE_SECURE_SETTINGS"

    #@7
    .line 9264
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@a
    move-result v0

    #@b
    if-eqz v0, :cond_0

    #@d
    .line 9267
    new-instance v0, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@12
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v0

    #@16
    .line 9270
    :cond_0
    if-eqz p1, :cond_1

    #@18
    .line 9271
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@1a
    const-string/jumbo v1, "Can only set the default display"

    #@1d
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@20
    throw v0

    #@21
    .line 9274
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@24
    move-result v0

    #@25
    .line 9275
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@28
    move-result v1

    #@29
    const-string/jumbo v5, "clearForcedDisplayDensityForUser"

    #@2c
    const/4 v4, 0x1

    #@2d
    move v2, p2

    #@2e
    .line 9274
    invoke-static/range {v0 .. v6}, Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I

    #@31
    move-result v7

    #@32
    .line 9277
    .local v7, "callingUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@35
    move-result-wide v10

    #@36
    .line 9279
    .local v10, "ident":J
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@38
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@39
    .line 9280
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3c
    move-result-object v8

    #@3d
    .line 9281
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v8, :cond_2

    #@3f
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@41
    if-ne v0, v7, :cond_2

    #@43
    .line 9283
    iget v0, v8, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    #@45
    .line 9282
    invoke-direct {p0, v8, v0}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@48
    .line 9285
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4a
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@4d
    move-result-object v0

    #@4e
    .line 9286
    const-string/jumbo v2, "display_density_forced"

    #@51
    const-string/jumbo v3, ""

    #@54
    .line 9285
    invoke-static {v0, v2, v3, v7}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@57
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@58
    .line 9289
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@5b
    .line 9263
    return-void

    #@5c
    .line 9279
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v0

    #@5d
    :try_start_3
    monitor-exit v1

    #@5e
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@5f
    .line 9288
    :catchall_1
    move-exception v0

    #@60
    .line 9289
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@63
    .line 9288
    throw v0
.end method

.method public clearForcedDisplaySize(I)V
    .locals 7
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 9184
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 9185
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 9184
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 9187
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 9190
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 9191
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 9193
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 9195
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 9196
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 9197
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_2

    #@2c
    .line 9198
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@2e
    .line 9199
    iget v5, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@30
    .line 9198
    invoke-direct {p0, v0, v1, v5}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    #@33
    .line 9200
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@35
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@38
    move-result-object v1

    #@39
    .line 9201
    const-string/jumbo v5, "display_size_forced"

    #@3c
    const-string/jumbo v6, ""

    #@3f
    .line 9200
    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@42
    :cond_2
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@43
    .line 9205
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@46
    .line 9183
    return-void

    #@47
    .line 9195
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@48
    :try_start_3
    monitor-exit v4

    #@49
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@4a
    .line 9204
    :catchall_1
    move-exception v1

    #@4b
    .line 9205
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4e
    .line 9204
    throw v1
.end method

.method public clearWindowContentFrameStats(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 10439
    const-string/jumbo v2, "android.permission.FRAME_STATS"

    #@4
    .line 10440
    const-string/jumbo v3, "clearWindowContentFrameStats()"

    #@7
    .line 10439
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v2

    #@b
    if-nez v2, :cond_0

    #@d
    .line 10441
    new-instance v2, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v3, "Requires FRAME_STATS permission"

    #@12
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v2

    #@16
    .line 10443
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@18
    monitor-enter v3

    #@19
    .line 10444
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    invoke-virtual {v2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1e
    move-result-object v1

    #@1f
    check-cast v1, Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@21
    .line 10445
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_1

    #@23
    monitor-exit v3

    #@24
    .line 10446
    return v4

    #@25
    .line 10448
    :cond_1
    :try_start_1
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@27
    iget-object v0, v2, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    .line 10449
    .local v0, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v0, :cond_2

    #@2b
    monitor-exit v3

    #@2c
    .line 10450
    return v4

    #@2d
    .line 10452
    :cond_2
    :try_start_2
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfaceController;->clearWindowContentFrameStats()Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@30
    move-result v2

    #@31
    monitor-exit v3

    #@32
    return v2

    #@33
    .line 10443
    .end local v0    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v2

    #@34
    monitor-exit v3

    #@35
    throw v2
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 9
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    .line 5656
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v8

    #@3
    .line 5657
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    #@8
    move-result v2

    #@9
    .line 5658
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@a
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v2, :cond_2

    #@c
    .line 5659
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@e
    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@11
    move-result-object v7

    #@12
    check-cast v7, Lcom/android/server/wm/DisplayContent;

    #@14
    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@17
    move-result-object v6

    #@18
    .line 5660
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@1b
    move-result v3

    #@1c
    .line 5661
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@1d
    .local v5, "winNdx":I
    :goto_1
    if-ge v5, v3, :cond_1

    #@1f
    .line 5662
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@22
    move-result-object v4

    #@23
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@25
    .line 5663
    .local v4, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v7, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    if-eqz v7, :cond_0

    #@29
    .line 5665
    :try_start_1
    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@2b
    invoke-interface {v7, p1}, Landroid/view/IWindow;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2e
    .line 5661
    :cond_0
    :goto_2
    add-int/lit8 v5, v5, 0x1

    #@30
    goto :goto_1

    #@31
    .line 5658
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@33
    goto :goto_0

    #@34
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_2
    monitor-exit v8

    #@35
    .line 5655
    return-void

    #@36
    .line 5656
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_0
    move-exception v7

    #@37
    monitor-exit v8

    #@38
    throw v7

    #@39
    .line 5666
    .restart local v0    # "displayNdx":I
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    :catch_0
    move-exception v1

    #@3a
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_2
.end method

.method public computeNewConfiguration()Landroid/content/res/Configuration;
    .locals 2

    #@0
    .prologue
    .line 7490
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 7491
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    move-result-object v1

    #@7
    monitor-exit v0

    #@8
    return-object v1

    #@9
    .line 7490
    :catchall_0
    move-exception v1

    #@a
    monitor-exit v0

    #@b
    throw v1
.end method

.method computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V
    .locals 24
    .param p1, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 7675
    move-object/from16 v0, p1

    #@2
    iget v3, v0, Landroid/content/res/Configuration;->uiMode:I

    #@4
    .line 7674
    move-object/from16 v0, p0

    #@6
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    #@9
    move-result-object v4

    #@a
    .line 7677
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v7, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    #@c
    .line 7678
    .local v7, "dw":I
    iget v8, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    #@e
    .line 7679
    .local v8, "dh":I
    if-gt v7, v8, :cond_3

    #@10
    const/4 v3, 0x1

    #@11
    :goto_0
    move-object/from16 v0, p1

    #@13
    iput v3, v0, Landroid/content/res/Configuration;->orientation:I

    #@15
    .line 7682
    move-object/from16 v0, p0

    #@17
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@19
    move-object/from16 v0, p0

    #@1b
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@1d
    move-object/from16 v0, p1

    #@1f
    iget v9, v0, Landroid/content/res/Configuration;->uiMode:I

    #@21
    invoke-interface {v3, v7, v8, v6, v9}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(IIII)I

    #@24
    move-result v3

    #@25
    int-to-float v3, v3

    #@26
    .line 7683
    move-object/from16 v0, p0

    #@28
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@2a
    iget v6, v6, Landroid/util/DisplayMetrics;->density:F

    #@2c
    .line 7682
    div-float/2addr v3, v6

    #@2d
    float-to-int v3, v3

    #@2e
    .line 7681
    move-object/from16 v0, p1

    #@30
    iput v3, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    #@32
    .line 7685
    move-object/from16 v0, p0

    #@34
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@36
    move-object/from16 v0, p0

    #@38
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@3a
    move-object/from16 v0, p1

    #@3c
    iget v9, v0, Landroid/content/res/Configuration;->uiMode:I

    #@3e
    invoke-interface {v3, v7, v8, v6, v9}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(IIII)I

    #@41
    move-result v3

    #@42
    int-to-float v3, v3

    #@43
    .line 7686
    move-object/from16 v0, p0

    #@45
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@47
    iget v6, v6, Landroid/util/DisplayMetrics;->density:F

    #@49
    .line 7685
    div-float/2addr v3, v6

    #@4a
    float-to-int v3, v3

    #@4b
    .line 7684
    move-object/from16 v0, p1

    #@4d
    iput v3, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    #@4f
    .line 7687
    move-object/from16 v0, p0

    #@51
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@53
    const/4 v6, 0x1

    #@54
    if-eq v3, v6, :cond_4

    #@56
    .line 7688
    move-object/from16 v0, p0

    #@58
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@5a
    const/4 v6, 0x3

    #@5b
    if-ne v3, v6, :cond_5

    #@5d
    const/4 v5, 0x1

    #@5e
    .line 7690
    .local v5, "rotated":Z
    :goto_1
    move-object/from16 v0, p1

    #@60
    iget v6, v0, Landroid/content/res/Configuration;->uiMode:I

    #@62
    .line 7691
    move-object/from16 v0, p0

    #@64
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@66
    iget v9, v3, Landroid/util/DisplayMetrics;->density:F

    #@68
    move-object/from16 v3, p0

    #@6a
    move-object/from16 v10, p1

    #@6c
    .line 7690
    invoke-direct/range {v3 .. v10}, Lcom/android/server/wm/WindowManagerService;->computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIIFLandroid/content/res/Configuration;)V

    #@6f
    .line 7693
    move-object/from16 v0, p1

    #@71
    iget v3, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@73
    and-int/lit16 v6, v3, -0x301

    #@75
    .line 7694
    iget v3, v4, Landroid/view/DisplayInfo;->flags:I

    #@77
    and-int/lit8 v3, v3, 0x10

    #@79
    if-eqz v3, :cond_6

    #@7b
    .line 7695
    const/16 v3, 0x200

    #@7d
    .line 7693
    :goto_2
    or-int/2addr v3, v6

    #@7e
    move-object/from16 v0, p1

    #@80
    iput v3, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@82
    .line 7698
    move-object/from16 v0, p1

    #@84
    iget v3, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    #@86
    int-to-float v3, v3

    #@87
    move-object/from16 v0, p0

    #@89
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@8b
    div-float/2addr v3, v6

    #@8c
    float-to-int v3, v3

    #@8d
    move-object/from16 v0, p1

    #@8f
    iput v3, v0, Landroid/content/res/Configuration;->compatScreenWidthDp:I

    #@91
    .line 7699
    move-object/from16 v0, p1

    #@93
    iget v3, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    #@95
    int-to-float v3, v3

    #@96
    move-object/from16 v0, p0

    #@98
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@9a
    div-float/2addr v3, v6

    #@9b
    float-to-int v3, v3

    #@9c
    move-object/from16 v0, p1

    #@9e
    iput v3, v0, Landroid/content/res/Configuration;->compatScreenHeightDp:I

    #@a0
    .line 7700
    move-object/from16 v0, p1

    #@a2
    iget v11, v0, Landroid/content/res/Configuration;->uiMode:I

    #@a4
    .line 7701
    move-object/from16 v0, p0

    #@a6
    iget-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@a8
    move-object/from16 v9, p0

    #@aa
    move v10, v5

    #@ab
    move v13, v7

    #@ac
    move v14, v8

    #@ad
    .line 7700
    invoke-direct/range {v9 .. v14}, Lcom/android/server/wm/WindowManagerService;->computeCompatSmallestWidth(ZILandroid/util/DisplayMetrics;II)I

    #@b0
    move-result v3

    #@b1
    move-object/from16 v0, p1

    #@b3
    iput v3, v0, Landroid/content/res/Configuration;->compatSmallestScreenWidthDp:I

    #@b5
    .line 7702
    iget v3, v4, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    #@b7
    move-object/from16 v0, p1

    #@b9
    iput v3, v0, Landroid/content/res/Configuration;->densityDpi:I

    #@bb
    .line 7706
    const/4 v3, 0x1

    #@bc
    move-object/from16 v0, p1

    #@be
    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@c0
    .line 7707
    const/4 v3, 0x1

    #@c1
    move-object/from16 v0, p1

    #@c3
    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    #@c5
    .line 7708
    const/4 v3, 0x1

    #@c6
    move-object/from16 v0, p1

    #@c8
    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@ca
    .line 7710
    const/16 v19, 0x0

    #@cc
    .line 7711
    .local v19, "keyboardPresence":I
    const/16 v21, 0x0

    #@ce
    .line 7712
    .local v21, "navigationPresence":I
    move-object/from16 v0, p0

    #@d0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@d2
    invoke-virtual {v3}, Lcom/android/server/input/InputManagerService;->getInputDevices()[Landroid/view/InputDevice;

    #@d5
    move-result-object v16

    #@d6
    .line 7713
    .local v16, "devices":[Landroid/view/InputDevice;
    move-object/from16 v0, v16

    #@d8
    array-length v0, v0

    #@d9
    move/from16 v20, v0

    #@db
    .line 7714
    .local v20, "len":I
    const/16 v18, 0x0

    #@dd
    .local v18, "i":I
    :goto_3
    move/from16 v0, v18

    #@df
    move/from16 v1, v20

    #@e1
    if-ge v0, v1, :cond_a

    #@e3
    .line 7715
    aget-object v15, v16, v18

    #@e5
    .line 7716
    .local v15, "device":Landroid/view/InputDevice;
    invoke-virtual {v15}, Landroid/view/InputDevice;->isVirtual()Z

    #@e8
    move-result v3

    #@e9
    if-nez v3, :cond_2

    #@eb
    .line 7717
    invoke-virtual {v15}, Landroid/view/InputDevice;->getSources()I

    #@ee
    move-result v23

    #@ef
    .line 7718
    .local v23, "sources":I
    invoke-virtual {v15}, Landroid/view/InputDevice;->isExternal()Z

    #@f2
    move-result v3

    #@f3
    if-eqz v3, :cond_7

    #@f5
    .line 7719
    const/16 v22, 0x2

    #@f7
    .line 7722
    .local v22, "presenceFlag":I
    :goto_4
    move-object/from16 v0, p0

    #@f9
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    #@fb
    if-eqz v3, :cond_8

    #@fd
    .line 7723
    move/from16 v0, v23

    #@ff
    and-int/lit16 v3, v0, 0x1002

    #@101
    .line 7724
    const/16 v6, 0x1002

    #@103
    .line 7723
    if-ne v3, v6, :cond_0

    #@105
    .line 7725
    const/4 v3, 0x3

    #@106
    move-object/from16 v0, p1

    #@108
    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@10a
    .line 7731
    :cond_0
    :goto_5
    const v3, 0x10004

    #@10d
    and-int v3, v3, v23

    #@10f
    const v6, 0x10004

    #@112
    if-ne v3, v6, :cond_9

    #@114
    .line 7732
    const/4 v3, 0x3

    #@115
    move-object/from16 v0, p1

    #@117
    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@119
    .line 7733
    or-int v21, v21, v22

    #@11b
    .line 7740
    :cond_1
    :goto_6
    invoke-virtual {v15}, Landroid/view/InputDevice;->getKeyboardType()I

    #@11e
    move-result v3

    #@11f
    const/4 v6, 0x2

    #@120
    if-ne v3, v6, :cond_2

    #@122
    .line 7741
    const/4 v3, 0x2

    #@123
    move-object/from16 v0, p1

    #@125
    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    #@127
    .line 7742
    or-int v19, v19, v22

    #@129
    .line 7714
    .end local v22    # "presenceFlag":I
    .end local v23    # "sources":I
    :cond_2
    add-int/lit8 v18, v18, 0x1

    #@12b
    goto :goto_3

    #@12c
    .line 7680
    .end local v5    # "rotated":Z
    .end local v15    # "device":Landroid/view/InputDevice;
    .end local v16    # "devices":[Landroid/view/InputDevice;
    .end local v18    # "i":I
    .end local v19    # "keyboardPresence":I
    .end local v20    # "len":I
    .end local v21    # "navigationPresence":I
    :cond_3
    const/4 v3, 0x2

    #@12d
    goto/16 :goto_0

    #@12f
    .line 7687
    :cond_4
    const/4 v5, 0x1

    #@130
    .restart local v5    # "rotated":Z
    goto/16 :goto_1

    #@132
    .line 7688
    .end local v5    # "rotated":Z
    :cond_5
    const/4 v5, 0x0

    #@133
    .restart local v5    # "rotated":Z
    goto/16 :goto_1

    #@135
    .line 7696
    :cond_6
    const/16 v3, 0x100

    #@137
    goto/16 :goto_2

    #@139
    .line 7720
    .restart local v15    # "device":Landroid/view/InputDevice;
    .restart local v16    # "devices":[Landroid/view/InputDevice;
    .restart local v18    # "i":I
    .restart local v19    # "keyboardPresence":I
    .restart local v20    # "len":I
    .restart local v21    # "navigationPresence":I
    .restart local v23    # "sources":I
    :cond_7
    const/16 v22, 0x1

    #@13b
    .restart local v22    # "presenceFlag":I
    goto :goto_4

    #@13c
    .line 7728
    :cond_8
    const/4 v3, 0x1

    #@13d
    move-object/from16 v0, p1

    #@13f
    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@141
    goto :goto_5

    #@142
    .line 7734
    :cond_9
    move/from16 v0, v23

    #@144
    and-int/lit16 v3, v0, 0x201

    #@146
    const/16 v6, 0x201

    #@148
    if-ne v3, v6, :cond_1

    #@14a
    .line 7735
    move-object/from16 v0, p1

    #@14c
    iget v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@14e
    const/4 v6, 0x1

    #@14f
    if-ne v3, v6, :cond_1

    #@151
    .line 7736
    const/4 v3, 0x2

    #@152
    move-object/from16 v0, p1

    #@154
    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@156
    .line 7737
    or-int v21, v21, v22

    #@158
    goto :goto_6

    #@159
    .line 7747
    .end local v15    # "device":Landroid/view/InputDevice;
    .end local v22    # "presenceFlag":I
    .end local v23    # "sources":I
    :cond_a
    move-object/from16 v0, p1

    #@15b
    iget v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@15d
    const/4 v6, 0x1

    #@15e
    if-ne v3, v6, :cond_b

    #@160
    move-object/from16 v0, p0

    #@162
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@164
    if-eqz v3, :cond_b

    #@166
    .line 7748
    const/4 v3, 0x2

    #@167
    move-object/from16 v0, p1

    #@169
    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@16b
    .line 7749
    or-int/lit8 v21, v21, 0x1

    #@16d
    .line 7753
    :cond_b
    move-object/from16 v0, p1

    #@16f
    iget v3, v0, Landroid/content/res/Configuration;->keyboard:I

    #@171
    const/4 v6, 0x1

    #@172
    if-eq v3, v6, :cond_d

    #@174
    const/16 v17, 0x1

    #@176
    .line 7754
    .local v17, "hardKeyboardAvailable":Z
    :goto_7
    move-object/from16 v0, p0

    #@178
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    #@17a
    move/from16 v0, v17

    #@17c
    if-eq v0, v3, :cond_c

    #@17e
    .line 7755
    move/from16 v0, v17

    #@180
    move-object/from16 v1, p0

    #@182
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    #@184
    .line 7756
    move-object/from16 v0, p0

    #@186
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@188
    const/16 v6, 0x16

    #@18a
    invoke-virtual {v3, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@18d
    .line 7757
    move-object/from16 v0, p0

    #@18f
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@191
    const/16 v6, 0x16

    #@193
    invoke-virtual {v3, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@196
    .line 7761
    :cond_c
    const/4 v3, 0x1

    #@197
    move-object/from16 v0, p1

    #@199
    iput v3, v0, Landroid/content/res/Configuration;->keyboardHidden:I

    #@19b
    .line 7762
    const/4 v3, 0x1

    #@19c
    move-object/from16 v0, p1

    #@19e
    iput v3, v0, Landroid/content/res/Configuration;->hardKeyboardHidden:I

    #@1a0
    .line 7763
    const/4 v3, 0x1

    #@1a1
    move-object/from16 v0, p1

    #@1a3
    iput v3, v0, Landroid/content/res/Configuration;->navigationHidden:I

    #@1a5
    .line 7764
    move-object/from16 v0, p0

    #@1a7
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1a9
    move-object/from16 v0, p1

    #@1ab
    move/from16 v1, v19

    #@1ad
    move/from16 v2, v21

    #@1af
    invoke-interface {v3, v0, v1, v2}, Landroid/view/WindowManagerPolicy;->adjustConfigurationLw(Landroid/content/res/Configuration;II)V

    #@1b2
    .line 7673
    return-void

    #@1b3
    .line 7753
    .end local v17    # "hardKeyboardAvailable":Z
    :cond_d
    const/16 v17, 0x0

    #@1b5
    .restart local v17    # "hardKeyboardAvailable":Z
    goto :goto_7
.end method

.method public continueSurfaceLayout()V
    .locals 2

    #@0
    .prologue
    .line 5447
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5448
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->continueLayout()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 5446
    return-void

    #@a
    .line 5447
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public createDisplayContentLocked(Landroid/view/Display;)V
    .locals 2
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 11071
    if-nez p1, :cond_0

    #@2
    .line 11072
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@4
    const-string/jumbo v1, "getDisplayContent: display must not be null"

    #@7
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@a
    throw v0

    #@b
    .line 11074
    :cond_0
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@e
    move-result v0

    #@f
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@12
    .line 11070
    return-void
.end method

.method public createWallpaperInputConsumer(Landroid/view/InputChannel;)V
    .locals 3
    .param p1, "inputChannel"    # Landroid/view/InputChannel;

    #@0
    .prologue
    .line 10400
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 10401
    :try_start_0
    new-instance v0, Lcom/android/server/wm/InputConsumerImpl;

    #@5
    const-string/jumbo v2, "wallpaper input"

    #@8
    invoke-direct {v0, p0, v2, p1}, Lcom/android/server/wm/InputConsumerImpl;-><init>(Lcom/android/server/wm/WindowManagerService;Ljava/lang/String;Landroid/view/InputChannel;)V

    #@b
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@d
    .line 10402
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@f
    iget-object v0, v0, Lcom/android/server/wm/InputConsumerImpl;->mWindowHandle:Lcom/android/server/input/InputWindowHandle;

    #@11
    const/4 v2, 0x1

    #@12
    iput-boolean v2, v0, Lcom/android/server/input/InputWindowHandle;->hasWallpaper:Z

    #@14
    .line 10403
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@16
    const/4 v2, 0x1

    #@17
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1a
    monitor-exit v1

    #@1b
    .line 10399
    return-void

    #@1c
    .line 10400
    :catchall_0
    move-exception v0

    #@1d
    monitor-exit v1

    #@1e
    throw v0
.end method

.method createWatermarkInTransaction()V
    .locals 13

    #@0
    .prologue
    .line 10230
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    #@2
    if-eqz v9, :cond_0

    #@4
    .line 10231
    return-void

    #@5
    .line 10234
    :cond_0
    new-instance v2, Ljava/io/File;

    #@7
    const-string/jumbo v9, "/system/etc/setup.conf"

    #@a
    invoke-direct {v2, v9}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    #@d
    .line 10235
    .local v2, "file":Ljava/io/File;
    const/4 v3, 0x0

    #@e
    .line 10236
    .local v3, "in":Ljava/io/FileInputStream;
    const/4 v5, 0x0

    #@f
    .line 10238
    .local v5, "ind":Ljava/io/DataInputStream;
    :try_start_0
    new-instance v4, Ljava/io/FileInputStream;

    #@11
    invoke-direct {v4, v2}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@14
    .line 10239
    .end local v3    # "in":Ljava/io/FileInputStream;
    .local v4, "in":Ljava/io/FileInputStream;
    :try_start_1
    new-instance v6, Ljava/io/DataInputStream;

    #@16
    invoke-direct {v6, v4}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_a
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_c
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@19
    .line 10240
    .local v6, "ind":Ljava/io/DataInputStream;
    :try_start_2
    invoke-virtual {v6}, Ljava/io/DataInputStream;->readLine()Ljava/lang/String;

    #@1c
    .end local v5    # "ind":Ljava/io/DataInputStream;
    move-result-object v7

    #@1d
    .line 10241
    .local v7, "line":Ljava/lang/String;
    if-eqz v7, :cond_1

    #@1f
    .line 10242
    const-string/jumbo v9, "%"

    #@22
    invoke-virtual {v7, v9}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@25
    move-result-object v8

    #@26
    .line 10243
    .local v8, "toks":[Ljava/lang/String;
    if-eqz v8, :cond_1

    #@28
    array-length v9, v8

    #@29
    if-lez v9, :cond_1

    #@2b
    .line 10244
    new-instance v9, Lcom/android/server/wm/Watermark;

    #@2d
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@30
    move-result-object v10

    #@31
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@34
    move-result-object v10

    #@35
    .line 10245
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@37
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@39
    .line 10244
    invoke-direct {v9, v10, v11, v12, v8}, Lcom/android/server/wm/Watermark;-><init>(Landroid/view/Display;Landroid/util/DisplayMetrics;Landroid/view/SurfaceSession;[Ljava/lang/String;)V

    #@3c
    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_b
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_d
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@3e
    .line 10251
    .end local v8    # "toks":[Ljava/lang/String;
    :cond_1
    if-eqz v6, :cond_4

    #@40
    .line 10253
    :try_start_3
    invoke-virtual {v6}, Ljava/io/DataInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    #@43
    :cond_2
    :goto_0
    move-object v5, v6

    #@44
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@45
    .line 10229
    .end local v4    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .end local v7    # "line":Ljava/lang/String;
    :cond_3
    :goto_1
    return-void

    #@46
    .line 10254
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    .restart local v7    # "line":Ljava/lang/String;
    :catch_0
    move-exception v1

    #@47
    .local v1, "e":Ljava/io/IOException;
    goto :goto_0

    #@48
    .line 10256
    .end local v1    # "e":Ljava/io/IOException;
    :cond_4
    if-eqz v4, :cond_2

    #@4a
    .line 10258
    :try_start_4
    invoke-virtual {v4}, Ljava/io/FileInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1

    #@4d
    goto :goto_0

    #@4e
    .line 10259
    :catch_1
    move-exception v1

    #@4f
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_0

    #@50
    .line 10249
    .end local v1    # "e":Ljava/io/IOException;
    .end local v4    # "in":Ljava/io/FileInputStream;
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .end local v7    # "line":Ljava/lang/String;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_2
    move-exception v1

    #@51
    .line 10251
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v1    # "e":Ljava/io/IOException;
    :goto_2
    if-eqz v5, :cond_5

    #@53
    .line 10253
    :try_start_5
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    #@56
    goto :goto_1

    #@57
    .line 10254
    :catch_3
    move-exception v1

    #@58
    goto :goto_1

    #@59
    .line 10256
    :cond_5
    if-eqz v3, :cond_3

    #@5b
    .line 10258
    :try_start_6
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_4

    #@5e
    goto :goto_1

    #@5f
    .line 10259
    :catch_4
    move-exception v1

    #@60
    goto :goto_1

    #@61
    .line 10248
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catch_5
    move-exception v0

    #@62
    .line 10251
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .local v0, "e":Ljava/io/FileNotFoundException;
    :goto_3
    if-eqz v5, :cond_6

    #@64
    .line 10253
    :try_start_7
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_6

    #@67
    goto :goto_1

    #@68
    .line 10254
    :catch_6
    move-exception v1

    #@69
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_1

    #@6a
    .line 10256
    .end local v1    # "e":Ljava/io/IOException;
    :cond_6
    if-eqz v3, :cond_3

    #@6c
    .line 10258
    :try_start_8
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_7

    #@6f
    goto :goto_1

    #@70
    .line 10259
    :catch_7
    move-exception v1

    #@71
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_1

    #@72
    .line 10250
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catchall_0
    move-exception v9

    #@73
    .line 10251
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    :goto_4
    if-eqz v5, :cond_8

    #@75
    .line 10253
    :try_start_9
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_9
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_8

    #@78
    .line 10250
    :cond_7
    :goto_5
    throw v9

    #@79
    .line 10254
    :catch_8
    move-exception v1

    #@7a
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_5

    #@7b
    .line 10256
    .end local v1    # "e":Ljava/io/IOException;
    :cond_8
    if-eqz v3, :cond_7

    #@7d
    .line 10258
    :try_start_a
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_9

    #@80
    goto :goto_5

    #@81
    .line 10259
    :catch_9
    move-exception v1

    #@82
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_5

    #@83
    .line 10250
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catchall_1
    move-exception v9

    #@84
    move-object v3, v4

    #@85
    .end local v4    # "in":Ljava/io/FileInputStream;
    .local v3, "in":Ljava/io/FileInputStream;
    goto :goto_4

    #@86
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catchall_2
    move-exception v9

    #@87
    move-object v5, v6

    #@88
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@89
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    #@8a
    .line 10248
    .end local v3    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_a
    move-exception v0

    #@8b
    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v3, v4

    #@8c
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_3

    #@8d
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catch_b
    move-exception v0

    #@8e
    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v5, v6

    #@8f
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@90
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_3

    #@91
    .line 10249
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_c
    move-exception v1

    #@92
    .restart local v1    # "e":Ljava/io/IOException;
    move-object v3, v4

    #@93
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_2

    #@94
    .end local v1    # "e":Ljava/io/IOException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catch_d
    move-exception v1

    #@95
    .restart local v1    # "e":Ljava/io/IOException;
    move-object v5, v6

    #@96
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@97
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_2
.end method

.method public deferSurfaceLayout()V
    .locals 2

    #@0
    .prologue
    .line 5438
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5439
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->deferLayout()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 5437
    return-void

    #@a
    .line 5438
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method destroyPreservedSurfaceLocked()V
    .locals 3

    #@0
    .prologue
    .line 8953
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    #@2
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@5
    move-result v2

    #@6
    add-int/lit8 v0, v2, -0x1

    #@8
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    #@a
    .line 8954
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    #@c
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v1

    #@10
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@12
    .line 8955
    .local v1, "w":Lcom/android/server/wm/WindowState;
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@14
    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->destroyPreservedSurfaceLocked()V

    #@17
    .line 8953
    add-int/lit8 v0, v0, -0x1

    #@19
    goto :goto_0

    #@1a
    .line 8957
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    #@1c
    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    #@1f
    .line 8952
    return-void
.end method

.method public detachStack(I)V
    .locals 4
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5200
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v3

    #@3
    .line 5201
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v1

    #@9
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5202
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_1

    #@d
    .line 5203
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@10
    move-result-object v0

    #@11
    .line 5204
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@13
    .line 5205
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->isAnimating()Z

    #@16
    move-result v2

    #@17
    if-eqz v2, :cond_0

    #@19
    .line 5206
    const/4 v2, 0x1

    #@1a
    iput-boolean v2, v1, Lcom/android/server/wm/TaskStack;->mDeferDetach:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    monitor-exit v3

    #@1d
    .line 5207
    return-void

    #@1e
    .line 5209
    :cond_0
    :try_start_1
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@21
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    monitor-exit v3

    #@22
    .line 5199
    return-void

    #@23
    .line 5200
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v2

    #@24
    monitor-exit v3

    #@25
    throw v2
.end method

.method detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    .locals 2
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "stack"    # Lcom/android/server/wm/TaskStack;

    #@0
    .prologue
    .line 5191
    invoke-virtual {p1, p2}, Lcom/android/server/wm/DisplayContent;->detachStack(Lcom/android/server/wm/TaskStack;)V

    #@3
    .line 5192
    invoke-virtual {p2}, Lcom/android/server/wm/TaskStack;->detachDisplay()V

    #@6
    .line 5193
    iget v0, p2, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@8
    const/4 v1, 0x3

    #@9
    if-ne v0, v1, :cond_0

    #@b
    .line 5194
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@e
    move-result-object v0

    #@f
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@11
    .line 5195
    const/4 v1, 0x0

    #@12
    .line 5194
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    #@15
    .line 5190
    :cond_0
    return-void
.end method

.method public detectSafeMode()Z
    .locals 12

    #@0
    .prologue
    .line 8110
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@2
    .line 8111
    const-wide/16 v10, 0x3e8

    #@4
    .line 8110
    invoke-virtual {v8, v10, v11}, Lcom/android/server/wm/InputMonitor;->waitForInputDevicesReady(J)Z

    #@7
    move-result v8

    #@8
    if-nez v8, :cond_0

    #@a
    .line 8112
    const-string/jumbo v8, "WindowManager"

    #@d
    const-string/jumbo v9, "Devices still not ready after waiting 1000 milliseconds before attempting to detect safe mode."

    #@10
    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@13
    .line 8118
    :cond_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@15
    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@18
    move-result-object v8

    #@19
    const-string/jumbo v9, "safe_boot_disallowed"

    #@1c
    const/4 v10, 0x0

    #@1d
    .line 8117
    invoke-static {v8, v9, v10}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@20
    move-result v8

    #@21
    if-eqz v8, :cond_1

    #@23
    .line 8119
    const/4 v8, 0x0

    #@24
    return v8

    #@25
    .line 8122
    :cond_1
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@27
    const/4 v9, -0x1

    #@28
    const/16 v10, -0x100

    #@2a
    .line 8123
    const/16 v11, 0x52

    #@2c
    .line 8122
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@2f
    move-result v4

    #@30
    .line 8124
    .local v4, "menuState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@32
    const/4 v9, -0x1

    #@33
    const/16 v10, -0x100

    #@35
    const/16 v11, 0x2f

    #@37
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@3a
    move-result v5

    #@3b
    .line 8125
    .local v5, "sState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@3d
    const/4 v9, -0x1

    #@3e
    const/16 v10, 0x201

    #@40
    .line 8126
    const/16 v11, 0x17

    #@42
    .line 8125
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@45
    move-result v2

    #@46
    .line 8127
    .local v2, "dpadState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@48
    const/4 v9, -0x1

    #@49
    const v10, 0x10004

    #@4c
    .line 8128
    const/16 v11, 0x110

    #@4e
    .line 8127
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getScanCodeState(III)I

    #@51
    move-result v6

    #@52
    .line 8129
    .local v6, "trackballState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@54
    const/4 v9, -0x1

    #@55
    const/16 v10, -0x100

    #@57
    .line 8130
    const/16 v11, 0x19

    #@59
    .line 8129
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@5c
    move-result v7

    #@5d
    .line 8131
    .local v7, "volumeDownState":I
    if-gtz v4, :cond_2

    #@5f
    if-lez v5, :cond_5

    #@61
    :cond_2
    const/4 v8, 0x1

    #@62
    :goto_0
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@64
    .line 8134
    :try_start_0
    const-string/jumbo v8, "persist.sys.safemode"

    #@67
    const/4 v9, 0x0

    #@68
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@6b
    move-result v8

    #@6c
    if-nez v8, :cond_3

    #@6e
    .line 8135
    const-string/jumbo v8, "ro.sys.safemode"

    #@71
    const/4 v9, 0x0

    #@72
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@75
    move-result v8

    #@76
    if-eqz v8, :cond_4

    #@78
    .line 8136
    :cond_3
    const-string/jumbo v8, "persist.sys.audit_safemode"

    #@7b
    const/4 v9, 0x0

    #@7c
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@7f
    move-result v0

    #@80
    .line 8138
    .local v0, "auditSafeMode":I
    if-nez v0, :cond_7

    #@82
    .line 8139
    const/4 v8, 0x1

    #@83
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@85
    .line 8140
    const-string/jumbo v8, "persist.sys.safemode"

    #@88
    const-string/jumbo v9, ""

    #@8b
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    #@8e
    .line 8156
    .end local v0    # "auditSafeMode":I
    :cond_4
    :goto_1
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@90
    if-eqz v8, :cond_9

    #@92
    .line 8157
    const-string/jumbo v8, "WindowManager"

    #@95
    new-instance v9, Ljava/lang/StringBuilder;

    #@97
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@9a
    const-string/jumbo v10, "SAFE MODE ENABLED (menu="

    #@9d
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a0
    move-result-object v9

    #@a1
    invoke-virtual {v9, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@a4
    move-result-object v9

    #@a5
    const-string/jumbo v10, " s="

    #@a8
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ab
    move-result-object v9

    #@ac
    invoke-virtual {v9, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@af
    move-result-object v9

    #@b0
    .line 8158
    const-string/jumbo v10, " dpad="

    #@b3
    .line 8157
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b6
    move-result-object v9

    #@b7
    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@ba
    move-result-object v9

    #@bb
    .line 8158
    const-string/jumbo v10, " trackball="

    #@be
    .line 8157
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c1
    move-result-object v9

    #@c2
    invoke-virtual {v9, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c5
    move-result-object v9

    #@c6
    .line 8158
    const-string/jumbo v10, ")"

    #@c9
    .line 8157
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cc
    move-result-object v9

    #@cd
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@d0
    move-result-object v9

    #@d1
    invoke-static {v8, v9}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@d4
    .line 8159
    const-string/jumbo v8, "ro.sys.safemode"

    #@d7
    const-string/jumbo v9, "1"

    #@da
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    #@dd
    .line 8163
    :goto_2
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@df
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@e1
    invoke-interface {v8, v9}, Landroid/view/WindowManagerPolicy;->setSafeMode(Z)V

    #@e4
    .line 8164
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@e6
    return v8

    #@e7
    .line 8131
    :cond_5
    if-gtz v2, :cond_2

    #@e9
    if-gtz v6, :cond_2

    #@eb
    .line 8132
    if-lez v7, :cond_6

    #@ed
    const/4 v8, 0x1

    #@ee
    goto/16 :goto_0

    #@f0
    :cond_6
    const/4 v8, 0x0

    #@f1
    goto/16 :goto_0

    #@f3
    .line 8143
    .restart local v0    # "auditSafeMode":I
    :cond_7
    :try_start_1
    const-string/jumbo v8, "ro.build.date.utc"

    #@f6
    const/4 v9, 0x0

    #@f7
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@fa
    move-result v1

    #@fb
    .line 8145
    .local v1, "buildDate":I
    if-lt v0, v1, :cond_8

    #@fd
    .line 8146
    const/4 v8, 0x1

    #@fe
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@100
    .line 8147
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->showAuditSafeModeNotification()V

    #@103
    goto :goto_1

    #@104
    .line 8154
    .end local v0    # "auditSafeMode":I
    .end local v1    # "buildDate":I
    :catch_0
    move-exception v3

    #@105
    .local v3, "e":Ljava/lang/IllegalArgumentException;
    goto :goto_1

    #@106
    .line 8149
    .end local v3    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v0    # "auditSafeMode":I
    .restart local v1    # "buildDate":I
    :cond_8
    const-string/jumbo v8, "persist.sys.safemode"

    #@109
    const-string/jumbo v9, ""

    #@10c
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    #@10f
    .line 8150
    const-string/jumbo v8, "persist.sys.audit_safemode"

    #@112
    const-string/jumbo v9, ""

    #@115
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/IllegalArgumentException; {:try_start_1 .. :try_end_1} :catch_0

    #@118
    goto/16 :goto_1

    #@11a
    .line 8161
    .end local v0    # "auditSafeMode":I
    .end local v1    # "buildDate":I
    :cond_9
    const-string/jumbo v8, "WindowManager"

    #@11d
    const-string/jumbo v9, "SAFE MODE not enabled"

    #@120
    invoke-static {v8, v9}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@123
    goto :goto_2
.end method

.method public disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;

    #@0
    .prologue
    .line 5519
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5521
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5525
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@17
    move-result v0

    #@18
    const/16 v1, 0x3e8

    #@1a
    if-eq v0, v1, :cond_1

    #@1c
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->isKeyguardSecure()Z

    #@1f
    move-result v0

    #@20
    if-eqz v0, :cond_1

    #@22
    .line 5526
    const-string/jumbo v0, "WindowManager"

    #@25
    const-string/jumbo v1, "current mode is SecurityMode, ignore disableKeyguard"

    #@28
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@2b
    .line 5527
    return-void

    #@2c
    .line 5531
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUserHandle()Landroid/os/UserHandle;

    #@2f
    move-result-object v0

    #@30
    invoke-virtual {v0}, Landroid/os/UserHandle;->getIdentifier()I

    #@33
    move-result v0

    #@34
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@36
    if-eq v0, v1, :cond_2

    #@38
    .line 5532
    const-string/jumbo v0, "WindowManager"

    #@3b
    const-string/jumbo v1, "non-current user, ignore disableKeyguard"

    #@3e
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@41
    .line 5533
    return-void

    #@42
    .line 5536
    :cond_2
    if-nez p1, :cond_3

    #@44
    .line 5537
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@46
    const-string/jumbo v1, "token == null"

    #@49
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@4c
    throw v0

    #@4d
    .line 5540
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@4f
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@51
    .line 5541
    new-instance v2, Landroid/util/Pair;

    #@53
    invoke-direct {v2, p1, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    #@56
    const/4 v3, 0x1

    #@57
    .line 5540
    invoke-virtual {v1, v3, v2}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@5a
    move-result-object v1

    #@5b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    #@5e
    .line 5518
    return-void
.end method

.method public dismissKeyguard()V
    .locals 2

    #@0
    .prologue
    .line 5608
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5610
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5612
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 5613
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@19
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->dismissKeyguardLw()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    monitor-exit v1

    #@1d
    .line 5607
    return-void

    #@1e
    .line 5612
    :catchall_0
    move-exception v0

    #@1f
    monitor-exit v1

    #@20
    throw v0
.end method

.method dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V
    .locals 2
    .param p1, "session"    # Lcom/android/server/wm/Session;

    #@0
    .prologue
    .line 5759
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    const/16 v1, 0x22

    #@4
    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@7
    move-result-object v0

    #@8
    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    #@b
    .line 5758
    return-void
.end method

.method public displayReady()V
    .locals 7

    #@0
    .prologue
    .line 8168
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    #@2
    const/4 v3, 0x0

    #@3
    array-length v5, v4

    #@4
    :goto_0
    if-ge v3, v5, :cond_0

    #@6
    aget-object v0, v4, v3

    #@8
    .line 8169
    .local v0, "display":Landroid/view/Display;
    invoke-virtual {v0}, Landroid/view/Display;->getDisplayId()I

    #@b
    move-result v6

    #@c
    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    #@f
    .line 8168
    add-int/lit8 v3, v3, 0x1

    #@11
    goto :goto_0

    #@12
    .line 8172
    .end local v0    # "display":Landroid/view/Display;
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@14
    monitor-enter v4

    #@15
    .line 8173
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@18
    move-result-object v1

    #@19
    .line 8174
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V

    #@1c
    .line 8175
    const/4 v3, 0x1

    #@1d
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1f
    monitor-exit v4

    #@20
    .line 8179
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@22
    const/4 v4, 0x0

    #@23
    invoke-interface {v3, v4}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    #@26
    .line 8183
    :goto_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@28
    monitor-enter v4

    #@29
    .line 8184
    :try_start_2
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2b
    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    #@2e
    move-result-object v3

    #@2f
    .line 8185
    const-string/jumbo v5, "android.hardware.touchscreen"

    #@32
    .line 8184
    invoke-virtual {v3, v5}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    #@35
    move-result v3

    #@36
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    #@38
    .line 8186
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3b
    move-result-object v3

    #@3c
    invoke-direct {p0, v3}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@3f
    monitor-exit v4

    #@40
    .line 8190
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@42
    const/4 v4, 0x0

    #@43
    invoke-interface {v3, v4}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    #@46
    .line 8194
    :goto_2
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateCircularDisplayMaskIfNeeded()V

    #@49
    .line 8167
    return-void

    #@4a
    .line 8172
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v3

    #@4b
    monitor-exit v4

    #@4c
    throw v3

    #@4d
    .line 8183
    .restart local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v3

    #@4e
    monitor-exit v4

    #@4f
    throw v3

    #@50
    .line 8191
    :catch_0
    move-exception v2

    #@51
    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_2

    #@52
    .line 8180
    .end local v2    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v2

    #@53
    .restart local v2    # "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    const/4 v0, 0x0

    #@2
    .line 10889
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4
    const-string/jumbo v3, "android.permission.DUMP"

    #@7
    invoke-virtual {v1, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@a
    move-result v1

    #@b
    if-eqz v1, :cond_0

    #@d
    .line 10891
    new-instance v0, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v1, "Permission Denial: can\'t dump WindowManager from from pid="

    #@15
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v0

    #@19
    .line 10892
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@1c
    move-result v1

    #@1d
    .line 10891
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@20
    move-result-object v0

    #@21
    .line 10893
    const-string/jumbo v1, ", uid="

    #@24
    .line 10891
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v0

    #@28
    .line 10893
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@2b
    move-result v1

    #@2c
    .line 10891
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2f
    move-result-object v0

    #@30
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@33
    move-result-object v0

    #@34
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@37
    .line 10894
    return-void

    #@38
    .line 10897
    :cond_0
    const/4 v5, 0x0

    #@39
    .line 10899
    .local v5, "dumpAll":Z
    const/4 v4, 0x0

    #@3a
    .line 10900
    .local v4, "opti":I
    :goto_0
    array-length v1, p3

    #@3b
    if-ge v4, v1, :cond_1

    #@3d
    .line 10901
    aget-object v6, p3, v4

    #@3f
    .line 10902
    .local v6, "opt":Ljava/lang/String;
    if-eqz v6, :cond_1

    #@41
    invoke-virtual {v6}, Ljava/lang/String;->length()I

    #@44
    move-result v1

    #@45
    if-gtz v1, :cond_3

    #@47
    .line 10934
    .end local v6    # "opt":Ljava/lang/String;
    :cond_1
    array-length v1, p3

    #@48
    if-ge v4, v1, :cond_17

    #@4a
    .line 10935
    aget-object v2, p3, v4

    #@4c
    .line 10936
    .local v2, "cmd":Ljava/lang/String;
    add-int/lit8 v4, v4, 0x1

    #@4e
    .line 10937
    const-string/jumbo v0, "lastanr"

    #@51
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@54
    move-result v0

    #@55
    if-nez v0, :cond_2

    #@57
    const-string/jumbo v0, "l"

    #@5a
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@5d
    move-result v0

    #@5e
    if-eqz v0, :cond_6

    #@60
    .line 10938
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@62
    monitor-enter v0

    #@63
    .line 10939
    :try_start_0
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@66
    monitor-exit v0

    #@67
    .line 10941
    return-void

    #@68
    .line 10902
    .end local v2    # "cmd":Ljava/lang/String;
    .restart local v6    # "opt":Ljava/lang/String;
    :cond_3
    invoke-virtual {v6, v7}, Ljava/lang/String;->charAt(I)C

    #@6b
    move-result v1

    #@6c
    const/16 v3, 0x2d

    #@6e
    if-ne v1, v3, :cond_1

    #@70
    .line 10905
    add-int/lit8 v4, v4, 0x1

    #@72
    .line 10906
    const-string/jumbo v1, "-a"

    #@75
    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@78
    move-result v1

    #@79
    if-eqz v1, :cond_4

    #@7b
    .line 10907
    const/4 v5, 0x1

    #@7c
    goto :goto_0

    #@7d
    .line 10908
    :cond_4
    const-string/jumbo v1, "-h"

    #@80
    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@83
    move-result v1

    #@84
    if-eqz v1, :cond_5

    #@86
    .line 10909
    const-string/jumbo v0, "Window manager dump options:"

    #@89
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@8c
    .line 10910
    const-string/jumbo v0, "  [-a] [-h] [cmd] ..."

    #@8f
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@92
    .line 10911
    const-string/jumbo v0, "  cmd may be one of:"

    #@95
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@98
    .line 10912
    const-string/jumbo v0, "    l[astanr]: last ANR information"

    #@9b
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@9e
    .line 10913
    const-string/jumbo v0, "    p[policy]: policy state"

    #@a1
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@a4
    .line 10914
    const-string/jumbo v0, "    a[animator]: animator state"

    #@a7
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@aa
    .line 10915
    const-string/jumbo v0, "    s[essions]: active sessions"

    #@ad
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@b0
    .line 10916
    const-string/jumbo v0, "    surfaces: active surfaces (debugging enabled only)"

    #@b3
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@b6
    .line 10917
    const-string/jumbo v0, "    d[isplays]: active display contents"

    #@b9
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@bc
    .line 10918
    const-string/jumbo v0, "    t[okens]: token list"

    #@bf
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@c2
    .line 10919
    const-string/jumbo v0, "    w[indows]: window list"

    #@c5
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@c8
    .line 10920
    const-string/jumbo v0, "  cmd may also be a NAME to dump windows.  NAME may"

    #@cb
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@ce
    .line 10921
    const-string/jumbo v0, "    be a partial substring in a window name, a"

    #@d1
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@d4
    .line 10922
    const-string/jumbo v0, "    Window hex object identifier, or"

    #@d7
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@da
    .line 10923
    const-string/jumbo v0, "    \"all\" for all windows, or"

    #@dd
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@e0
    .line 10924
    const-string/jumbo v0, "    \"visible\" for the visible windows."

    #@e3
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@e6
    .line 10925
    const-string/jumbo v0, "    \"visible-apps\" for the visible app windows."

    #@e9
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@ec
    .line 10926
    const-string/jumbo v0, "  -a: include all available server state."

    #@ef
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@f2
    .line 10927
    return-void

    #@f3
    .line 10929
    :cond_5
    new-instance v1, Ljava/lang/StringBuilder;

    #@f5
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@f8
    const-string/jumbo v3, "Unknown argument: "

    #@fb
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fe
    move-result-object v1

    #@ff
    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@102
    move-result-object v1

    #@103
    const-string/jumbo v3, "; use -h for help"

    #@106
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@109
    move-result-object v1

    #@10a
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10d
    move-result-object v1

    #@10e
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@111
    goto/16 :goto_0

    #@113
    .line 10938
    .end local v6    # "opt":Ljava/lang/String;
    .restart local v2    # "cmd":Ljava/lang/String;
    :catchall_0
    move-exception v1

    #@114
    monitor-exit v0

    #@115
    throw v1

    #@116
    .line 10942
    :cond_6
    const-string/jumbo v0, "policy"

    #@119
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@11c
    move-result v0

    #@11d
    if-nez v0, :cond_7

    #@11f
    const-string/jumbo v0, "p"

    #@122
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@125
    move-result v0

    #@126
    if-eqz v0, :cond_8

    #@128
    .line 10943
    :cond_7
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@12a
    monitor-enter v0

    #@12b
    .line 10944
    const/4 v1, 0x1

    #@12c
    :try_start_1
    invoke-virtual {p0, p2, p3, v1}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@12f
    monitor-exit v0

    #@130
    .line 10946
    return-void

    #@131
    .line 10943
    :catchall_1
    move-exception v1

    #@132
    monitor-exit v0

    #@133
    throw v1

    #@134
    .line 10947
    :cond_8
    const-string/jumbo v0, "animator"

    #@137
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@13a
    move-result v0

    #@13b
    if-nez v0, :cond_9

    #@13d
    const-string/jumbo v0, "a"

    #@140
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@143
    move-result v0

    #@144
    if-eqz v0, :cond_a

    #@146
    .line 10948
    :cond_9
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@148
    monitor-enter v0

    #@149
    .line 10949
    const/4 v1, 0x1

    #@14a
    :try_start_2
    invoke-virtual {p0, p2, p3, v1}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@14d
    monitor-exit v0

    #@14e
    .line 10951
    return-void

    #@14f
    .line 10948
    :catchall_2
    move-exception v1

    #@150
    monitor-exit v0

    #@151
    throw v1

    #@152
    .line 10952
    :cond_a
    const-string/jumbo v0, "sessions"

    #@155
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@158
    move-result v0

    #@159
    if-nez v0, :cond_b

    #@15b
    const-string/jumbo v0, "s"

    #@15e
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@161
    move-result v0

    #@162
    if-eqz v0, :cond_c

    #@164
    .line 10953
    :cond_b
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@166
    monitor-enter v0

    #@167
    .line 10954
    const/4 v1, 0x1

    #@168
    :try_start_3
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    #@16b
    monitor-exit v0

    #@16c
    .line 10956
    return-void

    #@16d
    .line 10953
    :catchall_3
    move-exception v1

    #@16e
    monitor-exit v0

    #@16f
    throw v1

    #@170
    .line 10957
    :cond_c
    const-string/jumbo v0, "surfaces"

    #@173
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@176
    move-result v0

    #@177
    if-eqz v0, :cond_d

    #@179
    .line 10958
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17b
    monitor-enter v0

    #@17c
    .line 10959
    const/4 v1, 0x0

    #@17d
    :try_start_4
    invoke-static {p2, v1}, Lcom/android/server/wm/WindowSurfaceController$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    #@180
    monitor-exit v0

    #@181
    .line 10961
    return-void

    #@182
    .line 10958
    :catchall_4
    move-exception v1

    #@183
    monitor-exit v0

    #@184
    throw v1

    #@185
    .line 10962
    :cond_d
    const-string/jumbo v0, "displays"

    #@188
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@18b
    move-result v0

    #@18c
    if-nez v0, :cond_e

    #@18e
    const-string/jumbo v0, "d"

    #@191
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@194
    move-result v0

    #@195
    if-eqz v0, :cond_f

    #@197
    .line 10963
    :cond_e
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@199
    monitor-enter v0

    #@19a
    .line 10964
    const/4 v1, 0x1

    #@19b
    :try_start_5
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    #@19e
    monitor-exit v0

    #@19f
    .line 10966
    return-void

    #@1a0
    .line 10963
    :catchall_5
    move-exception v1

    #@1a1
    monitor-exit v0

    #@1a2
    throw v1

    #@1a3
    .line 10967
    :cond_f
    const-string/jumbo v0, "tokens"

    #@1a6
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1a9
    move-result v0

    #@1aa
    if-nez v0, :cond_10

    #@1ac
    const-string/jumbo v0, "t"

    #@1af
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1b2
    move-result v0

    #@1b3
    if-eqz v0, :cond_11

    #@1b5
    .line 10968
    :cond_10
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b7
    monitor-enter v0

    #@1b8
    .line 10969
    const/4 v1, 0x1

    #@1b9
    :try_start_6
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    #@1bc
    monitor-exit v0

    #@1bd
    .line 10971
    return-void

    #@1be
    .line 10968
    :catchall_6
    move-exception v1

    #@1bf
    monitor-exit v0

    #@1c0
    throw v1

    #@1c1
    .line 10972
    :cond_11
    const-string/jumbo v0, "windows"

    #@1c4
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1c7
    move-result v0

    #@1c8
    if-nez v0, :cond_12

    #@1ca
    const-string/jumbo v0, "w"

    #@1cd
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1d0
    move-result v0

    #@1d1
    if-eqz v0, :cond_13

    #@1d3
    .line 10973
    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1d5
    monitor-enter v0

    #@1d6
    .line 10974
    const/4 v1, 0x1

    #@1d7
    const/4 v3, 0x0

    #@1d8
    :try_start_7
    invoke-virtual {p0, p2, v1, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    #@1db
    monitor-exit v0

    #@1dc
    .line 10976
    return-void

    #@1dd
    .line 10973
    :catchall_7
    move-exception v1

    #@1de
    monitor-exit v0

    #@1df
    throw v1

    #@1e0
    .line 10977
    :cond_13
    const-string/jumbo v0, "all"

    #@1e3
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1e6
    move-result v0

    #@1e7
    if-nez v0, :cond_14

    #@1e9
    const-string/jumbo v0, "a"

    #@1ec
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1ef
    move-result v0

    #@1f0
    if-eqz v0, :cond_15

    #@1f2
    .line 10978
    :cond_14
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1f4
    monitor-enter v0

    #@1f5
    .line 10979
    const/4 v1, 0x1

    #@1f6
    const/4 v3, 0x0

    #@1f7
    :try_start_8
    invoke-virtual {p0, p2, v1, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_8

    #@1fa
    monitor-exit v0

    #@1fb
    .line 10981
    return-void

    #@1fc
    .line 10978
    :catchall_8
    move-exception v1

    #@1fd
    monitor-exit v0

    #@1fe
    throw v1

    #@1ff
    :cond_15
    move-object v0, p0

    #@200
    move-object v1, p2

    #@201
    move-object v3, p3

    #@202
    .line 10984
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    #@205
    move-result v0

    #@206
    if-nez v0, :cond_16

    #@208
    .line 10985
    new-instance v0, Ljava/lang/StringBuilder;

    #@20a
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@20d
    const-string/jumbo v1, "Bad window command, or no windows match: "

    #@210
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@213
    move-result-object v0

    #@214
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@217
    move-result-object v0

    #@218
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21b
    move-result-object v0

    #@21c
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@21f
    .line 10986
    const-string/jumbo v0, "Use -h for help."

    #@222
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@225
    .line 10988
    :cond_16
    return-void

    #@226
    .line 10992
    .end local v2    # "cmd":Ljava/lang/String;
    :cond_17
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@228
    monitor-enter v1

    #@229
    .line 10993
    :try_start_9
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@22c
    .line 10994
    if-eqz v5, :cond_18

    #@22e
    .line 10995
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@231
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@234
    .line 10997
    :cond_18
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    #@237
    .line 10998
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@23a
    .line 10999
    if-eqz v5, :cond_19

    #@23c
    .line 11000
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@23f
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@242
    .line 11002
    :cond_19
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    #@245
    .line 11003
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@248
    .line 11004
    if-eqz v5, :cond_1a

    #@24a
    .line 11005
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@24d
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@250
    .line 11007
    :cond_1a
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    #@253
    .line 11008
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@256
    .line 11009
    if-eqz v5, :cond_1b

    #@258
    .line 11010
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@25b
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@25e
    .line 11012
    :cond_1b
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    #@261
    .line 11013
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@264
    .line 11014
    if-eqz v5, :cond_1c

    #@266
    .line 11015
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@269
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@26c
    .line 11017
    :cond_1c
    if-eqz v5, :cond_1d

    #@26e
    .line 11018
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@271
    .line 11017
    :cond_1d
    invoke-static {p2, v0}, Lcom/android/server/wm/WindowSurfaceController$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@274
    .line 11020
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@277
    .line 11021
    if-eqz v5, :cond_1e

    #@279
    .line 11022
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@27c
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@27f
    .line 11024
    :cond_1e
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    #@282
    .line 11025
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@285
    .line 11026
    if-eqz v5, :cond_1f

    #@287
    .line 11027
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@28a
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@28d
    .line 11029
    :cond_1f
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    #@290
    .line 11030
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@293
    .line 11031
    if-eqz v5, :cond_20

    #@295
    .line 11032
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@298
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@29b
    .line 11034
    :cond_20
    const/4 v0, 0x0

    #@29c
    invoke-virtual {p0, p2, v5, v0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_9

    #@29f
    monitor-exit v1

    #@2a0
    .line 10888
    return-void

    #@2a1
    .line 10992
    :catchall_9
    move-exception v0

    #@2a2
    monitor-exit v1

    #@2a3
    throw v0
.end method

.method dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    #@0
    .prologue
    .line 10520
    const-string/jumbo v0, "WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10521
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@8
    const-string/jumbo v1, "    "

    #@b
    invoke-virtual {v0, p1, v1, p3}, Lcom/android/server/wm/WindowAnimator;->dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@e
    .line 10519
    return-void
.end method

.method dumpAppTokensLocked()V
    .locals 13

    #@0
    .prologue
    .line 4945
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v0

    #@6
    .line 4946
    .local v0, "numStacks":I
    const/4 v4, 0x0

    #@7
    .local v4, "stackNdx":I
    :goto_0
    if-ge v4, v0, :cond_2

    #@9
    .line 4947
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v10, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v3

    #@f
    check-cast v3, Lcom/android/server/wm/TaskStack;

    #@11
    .line 4948
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    const-string/jumbo v10, "WindowManager"

    #@14
    new-instance v11, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v12, "  Stack #"

    #@1c
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v11

    #@20
    iget v12, v3, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@22
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@25
    move-result-object v11

    #@26
    const-string/jumbo v12, " tasks from bottom to top:"

    #@29
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v11

    #@2d
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@30
    move-result-object v11

    #@31
    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@34
    .line 4949
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@37
    move-result-object v7

    #@38
    .line 4950
    .local v7, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    #@3b
    move-result v1

    #@3c
    .line 4951
    .local v1, "numTasks":I
    const/4 v6, 0x0

    #@3d
    .local v6, "taskNdx":I
    :goto_1
    if-ge v6, v1, :cond_1

    #@3f
    .line 4952
    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@42
    move-result-object v5

    #@43
    check-cast v5, Lcom/android/server/wm/Task;

    #@45
    .line 4953
    .local v5, "task":Lcom/android/server/wm/Task;
    const-string/jumbo v10, "WindowManager"

    #@48
    new-instance v11, Ljava/lang/StringBuilder;

    #@4a
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@4d
    const-string/jumbo v12, "    Task #"

    #@50
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@53
    move-result-object v11

    #@54
    iget v12, v5, Lcom/android/server/wm/Task;->mTaskId:I

    #@56
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@59
    move-result-object v11

    #@5a
    const-string/jumbo v12, " activities from bottom to top:"

    #@5d
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@60
    move-result-object v11

    #@61
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@64
    move-result-object v11

    #@65
    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@68
    .line 4954
    iget-object v9, v5, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@6a
    .line 4955
    .local v9, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v9}, Lcom/android/server/wm/AppTokenList;->size()I

    #@6d
    move-result v2

    #@6e
    .line 4956
    .local v2, "numTokens":I
    const/4 v8, 0x0

    #@6f
    .local v8, "tokenNdx":I
    :goto_2
    if-ge v8, v2, :cond_0

    #@71
    .line 4957
    const-string/jumbo v11, "WindowManager"

    #@74
    new-instance v10, Ljava/lang/StringBuilder;

    #@76
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@79
    const-string/jumbo v12, "      activity #"

    #@7c
    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v10

    #@80
    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@83
    move-result-object v10

    #@84
    const-string/jumbo v12, ": "

    #@87
    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8a
    move-result-object v12

    #@8b
    invoke-virtual {v9, v8}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@8e
    move-result-object v10

    #@8f
    check-cast v10, Lcom/android/server/wm/AppWindowToken;

    #@91
    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@93
    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@96
    move-result-object v10

    #@97
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9a
    move-result-object v10

    #@9b
    invoke-static {v11, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@9e
    .line 4956
    add-int/lit8 v8, v8, 0x1

    #@a0
    goto :goto_2

    #@a1
    .line 4951
    :cond_0
    add-int/lit8 v6, v6, 0x1

    #@a3
    goto :goto_1

    #@a4
    .line 4946
    .end local v2    # "numTokens":I
    .end local v5    # "task":Lcom/android/server/wm/Task;
    .end local v8    # "tokenNdx":I
    .end local v9    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_1
    add-int/lit8 v4, v4, 0x1

    #@a6
    goto/16 :goto_0

    #@a8
    .line 4944
    .end local v1    # "numTasks":I
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v6    # "taskNdx":I
    .end local v7    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_2
    return-void
.end method

.method dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    .locals 4
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    .line 10577
    const-string/jumbo v3, "WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)"

    #@3
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10578
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@8
    if-eqz v3, :cond_0

    #@a
    .line 10579
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@f
    move-result v2

    #@10
    .line 10580
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@11
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@13
    .line 10581
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@15
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@18
    move-result-object v0

    #@19
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@1b
    .line 10582
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v3, "  "

    #@1e
    invoke-virtual {v0, v3, p1}, Lcom/android/server/wm/DisplayContent;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    #@21
    .line 10580
    add-int/lit8 v1, v1, 0x1

    #@23
    goto :goto_0

    #@24
    .line 10585
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :cond_0
    const-string/jumbo v3, "  NO DISPLAY"

    #@27
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@2a
    .line 10576
    :cond_1
    return-void
.end method

.method dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    #@0
    .prologue
    .line 10844
    const-string/jumbo v0, "WINDOW MANAGER LAST ANR (dumpsys window lastanr)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10845
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@8
    if-nez v0, :cond_0

    #@a
    .line 10846
    const-string/jumbo v0, "  <no ANR has occurred since boot>"

    #@d
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@10
    .line 10843
    :goto_0
    return-void

    #@11
    .line 10848
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@13
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@16
    goto :goto_0
.end method

.method dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    #@0
    .prologue
    .line 10515
    const-string/jumbo v0, "WINDOW MANAGER POLICY STATE (dumpsys window policy)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10516
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@8
    const-string/jumbo v1, "    "

    #@b
    invoke-interface {v0, v1, p1, p2}, Landroid/view/WindowManagerPolicy;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@e
    .line 10514
    return-void
.end method

.method dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    .locals 3
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    .line 10568
    const-string/jumbo v2, "WINDOW MANAGER SESSIONS (dumpsys window sessions)"

    #@3
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10569
    const/4 v0, 0x0

    #@7
    .local v0, "i":I
    :goto_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@9
    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    #@c
    move-result v2

    #@d
    if-ge v0, v2, :cond_0

    #@f
    .line 10570
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@11
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/Session;

    #@17
    .line 10571
    .local v1, "s":Lcom/android/server/wm/Session;
    const-string/jumbo v2, "  Session "

    #@1a
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@1d
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@20
    const/16 v2, 0x3a

    #@22
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(C)V

    #@25
    .line 10572
    const-string/jumbo v2, "    "

    #@28
    invoke-virtual {v1, p1, v2}, Lcom/android/server/wm/Session;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@2b
    .line 10569
    add-int/lit8 v0, v0, 0x1

    #@2d
    goto :goto_0

    #@2e
    .line 10567
    .end local v1    # "s":Lcom/android/server/wm/Session;
    :cond_0
    return-void
.end method

.method dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    .locals 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    const/16 v5, 0x3a

    #@2
    .line 10525
    const-string/jumbo v3, "WINDOW MANAGER TOKENS (dumpsys window tokens)"

    #@5
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@8
    .line 10526
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@a
    invoke-virtual {v3}, Ljava/util/HashMap;->isEmpty()Z

    #@d
    move-result v3

    #@e
    if-nez v3, :cond_1

    #@10
    .line 10527
    const-string/jumbo v3, "  All tokens:"

    #@13
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@16
    .line 10528
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@18
    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@1b
    move-result-object v3

    #@1c
    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    #@1f
    move-result-object v1

    #@20
    .line 10529
    .local v1, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@23
    move-result v3

    #@24
    if-eqz v3, :cond_1

    #@26
    .line 10530
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@29
    move-result-object v2

    #@2a
    check-cast v2, Lcom/android/server/wm/WindowToken;

    #@2c
    .line 10531
    .local v2, "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  "

    #@2f
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@32
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@35
    .line 10532
    if-eqz p2, :cond_0

    #@37
    .line 10533
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(C)V

    #@3a
    .line 10534
    const-string/jumbo v3, "    "

    #@3d
    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@40
    goto :goto_0

    #@41
    .line 10536
    :cond_0
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@44
    goto :goto_0

    #@45
    .line 10540
    .end local v1    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@47
    const-string/jumbo v4, "  "

    #@4a
    invoke-virtual {v3, p1, v4, p2}, Lcom/android/server/wm/WallpaperController;->dumpTokens(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@4d
    .line 10541
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@4f
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    #@52
    move-result v3

    #@53
    if-nez v3, :cond_3

    #@55
    .line 10542
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@58
    .line 10543
    const-string/jumbo v3, "  Finishing start of application tokens:"

    #@5b
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@5e
    .line 10544
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@60
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@63
    move-result v3

    #@64
    add-int/lit8 v0, v3, -0x1

    #@66
    .local v0, "i":I
    :goto_1
    if-ltz v0, :cond_3

    #@68
    .line 10545
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@6a
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@6d
    move-result-object v2

    #@6e
    check-cast v2, Lcom/android/server/wm/WindowToken;

    #@70
    .line 10546
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  Finished Starting #"

    #@73
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@76
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    #@79
    .line 10547
    const/16 v3, 0x20

    #@7b
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(C)V

    #@7e
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@81
    .line 10548
    if-eqz p2, :cond_2

    #@83
    .line 10549
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(C)V

    #@86
    .line 10550
    const-string/jumbo v3, "    "

    #@89
    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@8c
    .line 10544
    :goto_2
    add-int/lit8 v0, v0, -0x1

    #@8e
    goto :goto_1

    #@8f
    .line 10552
    :cond_2
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@92
    goto :goto_2

    #@93
    .line 10556
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@95
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@98
    move-result v3

    #@99
    if-eqz v3, :cond_5

    #@9b
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@9d
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@a0
    move-result v3

    #@a1
    if-eqz v3, :cond_5

    #@a3
    .line 10524
    :cond_4
    :goto_3
    return-void

    #@a4
    .line 10557
    :cond_5
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@a7
    .line 10558
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@a9
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    #@ac
    move-result v3

    #@ad
    if-lez v3, :cond_6

    #@af
    .line 10559
    const-string/jumbo v3, "  mOpeningApps="

    #@b2
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@b5
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@b7
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@ba
    .line 10561
    :cond_6
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@bc
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    #@bf
    move-result v3

    #@c0
    if-lez v3, :cond_4

    #@c2
    .line 10562
    const-string/jumbo v3, "  mClosingApps="

    #@c5
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@c8
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@ca
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@cd
    goto :goto_3
.end method

.method dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 13
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    #@0
    .prologue
    .line 10784
    new-instance v10, Lcom/android/server/wm/WindowList;

    #@2
    invoke-direct {v10}, Lcom/android/server/wm/WindowList;-><init>()V

    #@5
    .line 10785
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    const-string/jumbo v11, "apps"

    #@8
    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@b
    move-result v11

    #@c
    if-nez v11, :cond_0

    #@e
    const-string/jumbo v11, "visible"

    #@11
    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@14
    move-result v11

    #@15
    if-nez v11, :cond_0

    #@17
    const-string/jumbo v11, "visible-apps"

    #@1a
    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1d
    move-result v11

    #@1e
    if-eqz v11, :cond_7

    #@20
    .line 10786
    :cond_0
    const-string/jumbo v11, "apps"

    #@23
    invoke-virtual {p2, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@26
    move-result v1

    #@27
    .line 10787
    .local v1, "appsOnly":Z
    const-string/jumbo v11, "visible"

    #@2a
    invoke-virtual {p2, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@2d
    move-result v6

    #@2e
    .line 10788
    .local v6, "visibleOnly":Z
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@30
    monitor-enter v12

    #@31
    .line 10789
    if-eqz v1, :cond_1

    #@33
    .line 10790
    const/4 v11, 0x1

    #@34
    :try_start_0
    invoke-virtual {p0, p1, v11}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    #@37
    .line 10793
    :cond_1
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@39
    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    #@3c
    move-result v4

    #@3d
    .line 10794
    .local v4, "numDisplays":I
    const/4 v2, 0x0

    #@3e
    .local v2, "displayNdx":I
    :goto_0
    if-ge v2, v4, :cond_6

    #@40
    .line 10796
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@42
    invoke-virtual {v11, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@45
    move-result-object v11

    #@46
    check-cast v11, Lcom/android/server/wm/DisplayContent;

    #@48
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@4b
    move-result-object v9

    #@4c
    .line 10797
    .local v9, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@4f
    move-result v11

    #@50
    add-int/lit8 v8, v11, -0x1

    #@52
    .local v8, "winNdx":I
    :goto_1
    if-ltz v8, :cond_5

    #@54
    .line 10798
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@57
    move-result-object v7

    #@58
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@5a
    .line 10799
    .local v7, "w":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_2

    #@5c
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@5e
    invoke-virtual {v11}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    #@61
    move-result v11

    #@62
    if-eqz v11, :cond_4

    #@64
    .line 10800
    :cond_2
    if-eqz v1, :cond_3

    #@66
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@68
    if-eqz v11, :cond_4

    #@6a
    .line 10801
    :cond_3
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6d
    .line 10797
    :cond_4
    add-int/lit8 v8, v8, -0x1

    #@6f
    goto :goto_1

    #@70
    .line 10794
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    :cond_5
    add-int/lit8 v2, v2, 0x1

    #@72
    goto :goto_0

    #@73
    .end local v1    # "appsOnly":Z
    .end local v6    # "visibleOnly":Z
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    .end local p2    # "name":Ljava/lang/String;
    :cond_6
    monitor-exit v12

    #@74
    .line 10833
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    #@77
    move-result v11

    #@78
    if-gtz v11, :cond_b

    #@7a
    .line 10834
    const/4 v11, 0x0

    #@7b
    return v11

    #@7c
    .line 10788
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .restart local v1    # "appsOnly":Z
    .restart local v6    # "visibleOnly":Z
    .restart local p2    # "name":Ljava/lang/String;
    :catchall_0
    move-exception v11

    #@7d
    monitor-exit v12

    #@7e
    throw v11

    #@7f
    .line 10807
    .end local v1    # "appsOnly":Z
    .end local v6    # "visibleOnly":Z
    :cond_7
    const/4 v5, 0x0

    #@80
    .line 10810
    .local v5, "objectId":I
    const/16 v11, 0x10

    #@82
    :try_start_1
    invoke-static {p2, v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I
    :try_end_1
    .catch Ljava/lang/RuntimeException; {:try_start_1 .. :try_end_1} :catch_0

    #@85
    move-result v5

    #@86
    .line 10811
    const/4 p2, 0x0

    #@87
    .line 10814
    .end local p2    # "name":Ljava/lang/String;
    :goto_2
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@89
    monitor-enter v12

    #@8a
    .line 10815
    :try_start_2
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@8c
    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    #@8f
    move-result v4

    #@90
    .line 10816
    .restart local v4    # "numDisplays":I
    const/4 v2, 0x0

    #@91
    .restart local v2    # "displayNdx":I
    :goto_3
    if-ge v2, v4, :cond_6

    #@93
    .line 10818
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@95
    invoke-virtual {v11, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@98
    move-result-object v11

    #@99
    check-cast v11, Lcom/android/server/wm/DisplayContent;

    #@9b
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@9e
    move-result-object v9

    #@9f
    .line 10819
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@a2
    move-result v11

    #@a3
    add-int/lit8 v8, v11, -0x1

    #@a5
    .restart local v8    # "winNdx":I
    :goto_4
    if-ltz v8, :cond_a

    #@a7
    .line 10820
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@aa
    move-result-object v7

    #@ab
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@ad
    .line 10821
    .restart local v7    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p2, :cond_9

    #@af
    .line 10822
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@b1
    invoke-virtual {v11}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@b4
    move-result-object v11

    #@b5
    invoke-interface {v11}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    #@b8
    move-result-object v11

    #@b9
    invoke-virtual {v11, p2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@bc
    move-result v11

    #@bd
    if-eqz v11, :cond_8

    #@bf
    .line 10823
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@c2
    .line 10819
    :cond_8
    :goto_5
    add-int/lit8 v8, v8, -0x1

    #@c4
    goto :goto_4

    #@c5
    .line 10812
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    .restart local p2    # "name":Ljava/lang/String;
    :catch_0
    move-exception v3

    #@c6
    .local v3, "e":Ljava/lang/RuntimeException;
    goto :goto_2

    #@c7
    .line 10825
    .end local v3    # "e":Ljava/lang/RuntimeException;
    .end local p2    # "name":Ljava/lang/String;
    .restart local v2    # "displayNdx":I
    .restart local v4    # "numDisplays":I
    .restart local v7    # "w":Lcom/android/server/wm/WindowState;
    .restart local v8    # "winNdx":I
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_9
    invoke-static {v7}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@ca
    move-result v11

    #@cb
    if-ne v11, v5, :cond_8

    #@cd
    .line 10826
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@d0
    goto :goto_5

    #@d1
    .line 10814
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :catchall_1
    move-exception v11

    #@d2
    monitor-exit v12

    #@d3
    throw v11

    #@d4
    .line 10816
    .restart local v2    # "displayNdx":I
    .restart local v4    # "numDisplays":I
    .restart local v8    # "winNdx":I
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_a
    add-int/lit8 v2, v2, 0x1

    #@d6
    goto :goto_3

    #@d7
    .line 10837
    .end local v5    # "objectId":I
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_b
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@d9
    monitor-enter v11

    #@da
    .line 10838
    :try_start_3
    move/from16 v0, p5

    #@dc
    invoke-virtual {p0, p1, v0, v10}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    #@df
    monitor-exit v11

    #@e0
    .line 10840
    const/4 v11, 0x1

    #@e1
    return v11

    #@e2
    .line 10837
    :catchall_2
    move-exception v12

    #@e3
    monitor-exit v11

    #@e4
    throw v12
.end method

.method dumpWindowsLocked()V
    .locals 8

    #@0
    .prologue
    .line 4964
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v2

    #@6
    .line 4965
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@9
    .line 4966
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v0

    #@f
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@11
    .line 4967
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v5, "WindowManager"

    #@14
    new-instance v6, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v7, " Display #"

    #@1c
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v6

    #@20
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@23
    move-result v7

    #@24
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@27
    move-result-object v6

    #@28
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b
    move-result-object v6

    #@2c
    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@2f
    .line 4968
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@32
    move-result-object v4

    #@33
    .line 4969
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@36
    move-result v5

    #@37
    add-int/lit8 v3, v5, -0x1

    #@39
    .local v3, "winNdx":I
    :goto_1
    if-ltz v3, :cond_0

    #@3b
    .line 4970
    const-string/jumbo v5, "WindowManager"

    #@3e
    new-instance v6, Ljava/lang/StringBuilder;

    #@40
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@43
    const-string/jumbo v7, "  #"

    #@46
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@49
    move-result-object v6

    #@4a
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4d
    move-result-object v6

    #@4e
    const-string/jumbo v7, ": "

    #@51
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@54
    move-result-object v6

    #@55
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@58
    move-result-object v7

    #@59
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5c
    move-result-object v6

    #@5d
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@60
    move-result-object v6

    #@61
    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@64
    .line 4969
    add-int/lit8 v3, v3, -0x1

    #@66
    goto :goto_1

    #@67
    .line 4965
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@69
    goto :goto_0

    #@6a
    .line 4963
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    return-void
.end method

.method dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 10591
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string/jumbo v0, "WINDOW MANAGER WINDOWS (dumpsys window windows)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10592
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    #@9
    .line 10590
    return-void
.end method

.method dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .locals 10
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 10597
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v3

    #@6
    .line 10598
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v3, :cond_5

    #@9
    .line 10599
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v8

    #@f
    check-cast v8, Lcom/android/server/wm/DisplayContent;

    #@11
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@14
    move-result-object v7

    #@15
    .line 10600
    .local v7, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@18
    move-result v8

    #@19
    add-int/lit8 v6, v8, -0x1

    #@1b
    .local v6, "winNdx":I
    :goto_1
    if-ltz v6, :cond_4

    #@1d
    .line 10601
    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@20
    move-result-object v4

    #@21
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@23
    .line 10602
    .local v4, "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_0

    #@25
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@28
    move-result v8

    #@29
    if-eqz v8, :cond_2

    #@2b
    .line 10603
    :cond_0
    const-string/jumbo v8, "  Window #"

    #@2e
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@31
    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(I)V

    #@34
    const/16 v8, 0x20

    #@36
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@39
    .line 10604
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@3c
    const-string/jumbo v8, ":"

    #@3f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@42
    .line 10605
    const-string/jumbo v9, "    "

    #@45
    if-nez p2, :cond_1

    #@47
    if-eqz p3, :cond_3

    #@49
    :cond_1
    const/4 v8, 0x1

    #@4a
    :goto_2
    invoke-virtual {v4, p1, v9, v8}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@4d
    .line 10600
    :cond_2
    add-int/lit8 v6, v6, -0x1

    #@4f
    goto :goto_1

    #@50
    .line 10605
    :cond_3
    const/4 v8, 0x0

    #@51
    goto :goto_2

    #@52
    .line 10598
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_4
    add-int/lit8 v1, v1, 0x1

    #@54
    goto :goto_0

    #@55
    .line 10609
    .end local v6    # "winNdx":I
    .end local v7    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_5
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@57
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@5a
    move-result v8

    #@5b
    if-lez v8, :cond_8

    #@5d
    .line 10610
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@60
    .line 10611
    const-string/jumbo v8, "  Input method dialogs:"

    #@63
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@66
    .line 10612
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@68
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@6b
    move-result v8

    #@6c
    add-int/lit8 v2, v8, -0x1

    #@6e
    .local v2, "i":I
    :goto_3
    if-ltz v2, :cond_8

    #@70
    .line 10613
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@72
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@75
    move-result-object v4

    #@76
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@78
    .line 10614
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_6

    #@7a
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@7d
    move-result v8

    #@7e
    if-eqz v8, :cond_7

    #@80
    .line 10615
    :cond_6
    const-string/jumbo v8, "  IM Dialog #"

    #@83
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@86
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@89
    const-string/jumbo v8, ": "

    #@8c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@8f
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@92
    .line 10612
    :cond_7
    add-int/lit8 v2, v2, -0x1

    #@94
    goto :goto_3

    #@95
    .line 10619
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_8
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@97
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@9a
    move-result v8

    #@9b
    if-lez v8, :cond_c

    #@9d
    .line 10620
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@a0
    .line 10621
    const-string/jumbo v8, "  Remove pending for:"

    #@a3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@a6
    .line 10622
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@a8
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@ab
    move-result v8

    #@ac
    add-int/lit8 v2, v8, -0x1

    #@ae
    .restart local v2    # "i":I
    :goto_4
    if-ltz v2, :cond_c

    #@b0
    .line 10623
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@b2
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@b5
    move-result-object v4

    #@b6
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@b8
    .line 10624
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_9

    #@ba
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@bd
    move-result v8

    #@be
    if-eqz v8, :cond_a

    #@c0
    .line 10625
    :cond_9
    const-string/jumbo v8, "  Remove #"

    #@c3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@c6
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@c9
    const/16 v8, 0x20

    #@cb
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@ce
    .line 10626
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@d1
    .line 10627
    if-eqz p2, :cond_b

    #@d3
    .line 10628
    const-string/jumbo v8, ":"

    #@d6
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@d9
    .line 10629
    const-string/jumbo v8, "    "

    #@dc
    const/4 v9, 0x1

    #@dd
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@e0
    .line 10622
    :cond_a
    :goto_5
    add-int/lit8 v2, v2, -0x1

    #@e2
    goto :goto_4

    #@e3
    .line 10631
    :cond_b
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@e6
    goto :goto_5

    #@e7
    .line 10636
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_c
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@e9
    if-eqz v8, :cond_e

    #@eb
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@ed
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@f0
    move-result v8

    #@f1
    if-lez v8, :cond_e

    #@f3
    .line 10637
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@f6
    .line 10638
    const-string/jumbo v8, "  Windows force removing:"

    #@f9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@fc
    .line 10639
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@fe
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@101
    move-result v8

    #@102
    add-int/lit8 v2, v8, -0x1

    #@104
    .restart local v2    # "i":I
    :goto_6
    if-ltz v2, :cond_e

    #@106
    .line 10640
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@108
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@10b
    move-result-object v4

    #@10c
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@10e
    .line 10641
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    const-string/jumbo v8, "  Removing #"

    #@111
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@114
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@117
    const/16 v8, 0x20

    #@119
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@11c
    .line 10642
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@11f
    .line 10643
    if-eqz p2, :cond_d

    #@121
    .line 10644
    const-string/jumbo v8, ":"

    #@124
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@127
    .line 10645
    const-string/jumbo v8, "    "

    #@12a
    const/4 v9, 0x1

    #@12b
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@12e
    .line 10639
    :goto_7
    add-int/lit8 v2, v2, -0x1

    #@130
    goto :goto_6

    #@131
    .line 10647
    :cond_d
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@134
    goto :goto_7

    #@135
    .line 10651
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_e
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@137
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@13a
    move-result v8

    #@13b
    if-lez v8, :cond_12

    #@13d
    .line 10652
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@140
    .line 10653
    const-string/jumbo v8, "  Windows waiting to destroy their surface:"

    #@143
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@146
    .line 10654
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@148
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@14b
    move-result v8

    #@14c
    add-int/lit8 v2, v8, -0x1

    #@14e
    .restart local v2    # "i":I
    :goto_8
    if-ltz v2, :cond_12

    #@150
    .line 10655
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@152
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@155
    move-result-object v4

    #@156
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@158
    .line 10656
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_f

    #@15a
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@15d
    move-result v8

    #@15e
    if-eqz v8, :cond_10

    #@160
    .line 10657
    :cond_f
    const-string/jumbo v8, "  Destroy #"

    #@163
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@166
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@169
    const/16 v8, 0x20

    #@16b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@16e
    .line 10658
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@171
    .line 10659
    if-eqz p2, :cond_11

    #@173
    .line 10660
    const-string/jumbo v8, ":"

    #@176
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@179
    .line 10661
    const-string/jumbo v8, "    "

    #@17c
    const/4 v9, 0x1

    #@17d
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@180
    .line 10654
    :cond_10
    :goto_9
    add-int/lit8 v2, v2, -0x1

    #@182
    goto :goto_8

    #@183
    .line 10663
    :cond_11
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@186
    goto :goto_9

    #@187
    .line 10668
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_12
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@189
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@18c
    move-result v8

    #@18d
    if-lez v8, :cond_16

    #@18f
    .line 10669
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@192
    .line 10670
    const-string/jumbo v8, "  Windows losing focus:"

    #@195
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@198
    .line 10671
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@19a
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@19d
    move-result v8

    #@19e
    add-int/lit8 v2, v8, -0x1

    #@1a0
    .restart local v2    # "i":I
    :goto_a
    if-ltz v2, :cond_16

    #@1a2
    .line 10672
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@1a4
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1a7
    move-result-object v4

    #@1a8
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@1aa
    .line 10673
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_13

    #@1ac
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@1af
    move-result v8

    #@1b0
    if-eqz v8, :cond_14

    #@1b2
    .line 10674
    :cond_13
    const-string/jumbo v8, "  Losing #"

    #@1b5
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@1b8
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@1bb
    const/16 v8, 0x20

    #@1bd
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@1c0
    .line 10675
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@1c3
    .line 10676
    if-eqz p2, :cond_15

    #@1c5
    .line 10677
    const-string/jumbo v8, ":"

    #@1c8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@1cb
    .line 10678
    const-string/jumbo v8, "    "

    #@1ce
    const/4 v9, 0x1

    #@1cf
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@1d2
    .line 10671
    :cond_14
    :goto_b
    add-int/lit8 v2, v2, -0x1

    #@1d4
    goto :goto_a

    #@1d5
    .line 10680
    :cond_15
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@1d8
    goto :goto_b

    #@1d9
    .line 10685
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_16
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1db
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@1de
    move-result v8

    #@1df
    if-lez v8, :cond_1a

    #@1e1
    .line 10686
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@1e4
    .line 10687
    const-string/jumbo v8, "  Windows waiting to resize:"

    #@1e7
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@1ea
    .line 10688
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1ec
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@1ef
    move-result v8

    #@1f0
    add-int/lit8 v2, v8, -0x1

    #@1f2
    .restart local v2    # "i":I
    :goto_c
    if-ltz v2, :cond_1a

    #@1f4
    .line 10689
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1f6
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1f9
    move-result-object v4

    #@1fa
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@1fc
    .line 10690
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_17

    #@1fe
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@201
    move-result v8

    #@202
    if-eqz v8, :cond_18

    #@204
    .line 10691
    :cond_17
    const-string/jumbo v8, "  Resizing #"

    #@207
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@20a
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@20d
    const/16 v8, 0x20

    #@20f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@212
    .line 10692
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@215
    .line 10693
    if-eqz p2, :cond_19

    #@217
    .line 10694
    const-string/jumbo v8, ":"

    #@21a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@21d
    .line 10695
    const-string/jumbo v8, "    "

    #@220
    const/4 v9, 0x1

    #@221
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@224
    .line 10688
    :cond_18
    :goto_d
    add-int/lit8 v2, v2, -0x1

    #@226
    goto :goto_c

    #@227
    .line 10697
    :cond_19
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@22a
    goto :goto_d

    #@22b
    .line 10702
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1a
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@22d
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@230
    move-result v8

    #@231
    if-lez v8, :cond_1b

    #@233
    .line 10703
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@236
    .line 10704
    const-string/jumbo v8, "  Clients waiting for these windows to be drawn:"

    #@239
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@23c
    .line 10705
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@23e
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@241
    move-result v8

    #@242
    add-int/lit8 v2, v8, -0x1

    #@244
    .restart local v2    # "i":I
    :goto_e
    if-ltz v2, :cond_1b

    #@246
    .line 10706
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@248
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@24b
    move-result-object v5

    #@24c
    check-cast v5, Lcom/android/server/wm/WindowState;

    #@24e
    .line 10707
    .local v5, "win":Lcom/android/server/wm/WindowState;
    const-string/jumbo v8, "  Waiting #"

    #@251
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@254
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@257
    const/16 v8, 0x20

    #@259
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@25c
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@25f
    .line 10705
    add-int/lit8 v2, v2, -0x1

    #@261
    goto :goto_e

    #@262
    .line 10710
    .end local v2    # "i":I
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_1b
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@265
    .line 10711
    const-string/jumbo v8, "  mCurConfiguration="

    #@268
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@26b
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@26d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@270
    .line 10712
    const-string/jumbo v8, "  mHasPermanentDpad="

    #@273
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@276
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@278
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@27b
    .line 10713
    const-string/jumbo v8, "  mCurrentFocus="

    #@27e
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@281
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@283
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@286
    .line 10714
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@288
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@28a
    if-eq v8, v9, :cond_1c

    #@28c
    .line 10715
    const-string/jumbo v8, "  mLastFocus="

    #@28f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@292
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@294
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@297
    .line 10717
    :cond_1c
    const-string/jumbo v8, "  mFocusedApp="

    #@29a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@29d
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@29f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@2a2
    .line 10718
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@2a4
    if-eqz v8, :cond_1d

    #@2a6
    .line 10719
    const-string/jumbo v8, "  mInputMethodTarget="

    #@2a9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2ac
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@2ae
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@2b1
    .line 10721
    :cond_1d
    const-string/jumbo v8, "  mInTouchMode="

    #@2b4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2b7
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@2b9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@2bc
    .line 10722
    const-string/jumbo v8, " mLayoutSeq="

    #@2bf
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2c2
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@2c4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@2c7
    .line 10723
    const-string/jumbo v8, "  mLastDisplayFreezeDuration="

    #@2ca
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2cd
    .line 10724
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@2cf
    int-to-long v8, v8

    #@2d0
    invoke-static {v8, v9, p1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    #@2d3
    .line 10725
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@2d5
    if-eqz v8, :cond_1e

    #@2d7
    .line 10726
    const-string/jumbo v8, " due to "

    #@2da
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2dd
    .line 10727
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@2df
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@2e2
    .line 10729
    :cond_1e
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@2e5
    .line 10730
    const-string/jumbo v8, "  mLastWakeLockHoldingWindow="

    #@2e8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2eb
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    #@2ed
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@2f0
    .line 10731
    const-string/jumbo v8, " mLastWakeLockObscuringWindow="

    #@2f3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2f6
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    #@2f8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@2fb
    .line 10732
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@2fe
    .line 10734
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@300
    const-string/jumbo v9, "  "

    #@303
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/InputMonitor;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@306
    .line 10736
    if-eqz p2, :cond_24

    #@308
    .line 10737
    const-string/jumbo v8, "  mSystemDecorLayer="

    #@30b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@30e
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    #@310
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@313
    .line 10738
    const-string/jumbo v8, " mScreenRect="

    #@316
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@319
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    #@31b
    invoke-virtual {v8}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    #@31e
    move-result-object v8

    #@31f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@322
    .line 10739
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@324
    if-eqz v8, :cond_1f

    #@326
    .line 10740
    const-string/jumbo v8, "  mLastStatusBarVisibility=0x"

    #@329
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@32c
    .line 10741
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@32e
    invoke-static {v8}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@331
    move-result-object v8

    #@332
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@335
    .line 10743
    :cond_1f
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@337
    if-eqz v8, :cond_20

    #@339
    .line 10744
    const-string/jumbo v8, "  mInputMethodWindow="

    #@33c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@33f
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@341
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@344
    .line 10746
    :cond_20
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@346
    const-string/jumbo v9, "  "

    #@349
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WindowSurfacePlacer;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@34c
    .line 10747
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@34e
    const-string/jumbo v9, "  "

    #@351
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WallpaperController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@354
    .line 10748
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@356
    const-string/jumbo v9, "  "

    #@359
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WindowLayersController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@35c
    .line 10749
    const-string/jumbo v8, "  mSystemBooted="

    #@35f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@362
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@364
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@367
    .line 10750
    const-string/jumbo v8, " mDisplayEnabled="

    #@36a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@36d
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@36f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@372
    .line 10751
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    #@375
    move-result v8

    #@376
    if-eqz v8, :cond_23

    #@378
    .line 10752
    const-string/jumbo v8, "  layoutNeeded on displays="

    #@37b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@37e
    .line 10753
    const/4 v1, 0x0

    #@37f
    :goto_f
    if-ge v1, v3, :cond_22

    #@381
    .line 10754
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@383
    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@386
    move-result-object v0

    #@387
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@389
    .line 10755
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v8, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@38b
    if-eqz v8, :cond_21

    #@38d
    .line 10756
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@390
    move-result v8

    #@391
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@394
    .line 10753
    :cond_21
    add-int/lit8 v1, v1, 0x1

    #@396
    goto :goto_f

    #@397
    .line 10759
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_22
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@39a
    .line 10761
    :cond_23
    const-string/jumbo v8, "  mTransactionSequence="

    #@39d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3a0
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    #@3a2
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@3a5
    .line 10762
    const-string/jumbo v8, "  mDisplayFrozen="

    #@3a8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3ab
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@3ad
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@3b0
    .line 10763
    const-string/jumbo v8, " windows="

    #@3b3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3b6
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@3b8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3bb
    .line 10764
    const-string/jumbo v8, " client="

    #@3be
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3c1
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@3c3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@3c6
    .line 10765
    const-string/jumbo v8, " apps="

    #@3c9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3cc
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@3ce
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3d1
    .line 10766
    const-string/jumbo v8, " waitingForConfig="

    #@3d4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3d7
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@3d9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@3dc
    .line 10767
    const-string/jumbo v8, "  mRotation="

    #@3df
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3e2
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@3e4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3e7
    .line 10768
    const-string/jumbo v8, " mAltOrientation="

    #@3ea
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3ed
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@3ef
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@3f2
    .line 10769
    const-string/jumbo v8, "  mLastWindowForcedOrientation="

    #@3f5
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3f8
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@3fa
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3fd
    .line 10770
    const-string/jumbo v8, " mLastOrientation="

    #@400
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@403
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@405
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@408
    .line 10771
    const-string/jumbo v8, "  mDeferredRotationPauseCount="

    #@40b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@40e
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@410
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@413
    .line 10772
    const-string/jumbo v8, "  Animation settings: disabled="

    #@416
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@419
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@41b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@41e
    .line 10773
    const-string/jumbo v8, " window="

    #@421
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@424
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@426
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    #@429
    .line 10774
    const-string/jumbo v8, " transition="

    #@42c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@42f
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@431
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    #@434
    .line 10775
    const-string/jumbo v8, " animator="

    #@437
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@43a
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@43c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    #@43f
    .line 10776
    const-string/jumbo v8, " mSkipAppTransitionAnimation="

    #@442
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@445
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@447
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@44a
    .line 10777
    const-string/jumbo v8, "  mLayoutToAnim:"

    #@44d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@450
    .line 10778
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@452
    const-string/jumbo v9, "    "

    #@455
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/AppTransition;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@458
    .line 10596
    :cond_24
    return-void
.end method

.method public enableScreenAfterBoot()V
    .locals 5

    #@0
    .prologue
    .line 5911
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5920
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    monitor-exit v1

    #@8
    .line 5921
    return-void

    #@9
    .line 5923
    :cond_0
    const/4 v0, 0x1

    #@a
    :try_start_1
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@c
    .line 5924
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hideBootMessagesLocked()V

    #@f
    .line 5927
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@11
    const-wide/16 v2, 0x7530

    #@13
    const/16 v4, 0x17

    #@15
    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@18
    monitor-exit v1

    #@19
    .line 5930
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1b
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemBooted()V

    #@1e
    .line 5932
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@21
    .line 5910
    return-void

    #@22
    .line 5911
    :catchall_0
    move-exception v0

    #@23
    monitor-exit v1

    #@24
    throw v0
.end method

.method public enableScreenIfNeeded()V
    .locals 2

    #@0
    .prologue
    .line 5937
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5938
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->enableScreenIfNeededLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 5936
    return-void

    #@8
    .line 5937
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method enableScreenIfNeededLocked()V
    .locals 2

    #@0
    .prologue
    .line 5951
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 5952
    return-void

    #@5
    .line 5954
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@7
    if-nez v0, :cond_1

    #@9
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@b
    if-eqz v0, :cond_2

    #@d
    .line 5957
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@f
    const/16 v1, 0x10

    #@11
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@14
    .line 5942
    return-void

    #@15
    .line 5955
    :cond_2
    return-void
.end method

.method public endProlongedAnimations()V
    .locals 5

    #@0
    .prologue
    .line 4153
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 4154
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@5
    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@8
    move-result-object v3

    #@9
    invoke-interface {v3}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@c
    move-result-object v2

    #@d
    .local v2, "win$iterator":Ljava/util/Iterator;
    :cond_0
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    #@10
    move-result v3

    #@11
    if-eqz v3, :cond_1

    #@13
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@16
    move-result-object v1

    #@17
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@19
    .line 4155
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v0, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1b
    .line 4156
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@1d
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@1f
    if-eqz v3, :cond_0

    #@21
    .line 4157
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@23
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowAnimator;->endProlongedAnimation()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@26
    goto :goto_0

    #@27
    .line 4153
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "win$iterator":Ljava/util/Iterator;
    :catchall_0
    move-exception v3

    #@28
    monitor-exit v4

    #@29
    throw v3

    #@2a
    .line 4160
    .restart local v2    # "win$iterator":Ljava/util/Iterator;
    :cond_1
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2c
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->notifyProlongedAnimationsEnded()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v4

    #@30
    .line 4152
    return-void
.end method

.method public executeAppTransition()V
    .locals 4

    #@0
    .prologue
    .line 4166
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4167
    const-string/jumbo v3, "executeAppTransition()"

    #@6
    .line 4166
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 4168
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 4171
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 4174
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1a
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@1d
    move-result v2

    #@1e
    if-eqz v2, :cond_1

    #@20
    .line 4175
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@22
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->setReady()V

    #@25
    .line 4176
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@28
    move-result-wide v0

    #@29
    .line 4178
    .local v0, "origId":J
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@2b
    invoke-virtual {v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2e
    .line 4180
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@31
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@32
    .line 4165
    return-void

    #@33
    .line 4179
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@34
    .line 4180
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@37
    .line 4179
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@38
    .line 4171
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@39
    monitor-exit v3

    #@3a
    throw v2
.end method

.method public exitKeyguardSecurely(Landroid/view/IOnKeyguardExitResult;)V
    .locals 2
    .param p1, "callback"    # Landroid/view/IOnKeyguardExitResult;

    #@0
    .prologue
    .line 5564
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5566
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5569
    :cond_0
    if-nez p1, :cond_1

    #@16
    .line 5570
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v1, "callback == null"

    #@1b
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v0

    #@1f
    .line 5573
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@21
    new-instance v1, Lcom/android/server/wm/WindowManagerService$7;

    #@23
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$7;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IOnKeyguardExitResult;)V

    #@26
    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->exitKeyguardSecurely(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V

    #@29
    .line 5563
    return-void
.end method

.method findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 3420
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@3
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@6
    move-result-object v0

    #@7
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@9
    .line 3421
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-nez v0, :cond_0

    #@b
    .line 3422
    return-object v2

    #@c
    .line 3424
    :cond_0
    iget-object v1, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@e
    return-object v1
.end method

.method findDesiredInputMethodWindowIndexLocked(Z)I
    .locals 15
    .param p1, "willMove"    # Z

    #@0
    .prologue
    .line 1493
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v12

    #@4
    .line 1494
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    const/4 v9, 0x0

    #@5
    .line 1496
    .local v9, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    #@8
    move-result v13

    #@9
    add-int/lit8 v6, v13, -0x1

    #@b
    .local v6, "i":I
    :goto_0
    if-ltz v6, :cond_0

    #@d
    .line 1497
    invoke-virtual {v12, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@10
    move-result-object v11

    #@11
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@13
    .line 1501
    .local v11, "win":Lcom/android/server/wm/WindowState;
    invoke-static {v11}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    #@16
    move-result v13

    #@17
    if-eqz v13, :cond_2

    #@19
    .line 1502
    move-object v9, v11

    #@1a
    .line 1510
    .local v9, "w":Lcom/android/server/wm/WindowState;
    if-nez p1, :cond_0

    #@1c
    .line 1511
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1e
    iget v13, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    #@20
    const/4 v14, 0x3

    #@21
    if-ne v13, v14, :cond_0

    #@23
    .line 1512
    if-lez v6, :cond_0

    #@25
    .line 1513
    add-int/lit8 v13, v6, -0x1

    #@27
    invoke-virtual {v12, v13}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2a
    move-result-object v10

    #@2b
    check-cast v10, Lcom/android/server/wm/WindowState;

    #@2d
    .line 1514
    .local v10, "wb":Lcom/android/server/wm/WindowState;
    iget-object v13, v10, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2f
    iget-object v14, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@31
    if-ne v13, v14, :cond_0

    #@33
    invoke-static {v10}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    #@36
    move-result v13

    #@37
    if-eqz v13, :cond_0

    #@39
    .line 1515
    add-int/lit8 v6, v6, -0x1

    #@3b
    .line 1516
    move-object v9, v10

    #@3c
    .line 1533
    .end local v9    # "w":Lcom/android/server/wm/WindowState;
    .end local v10    # "wb":Lcom/android/server/wm/WindowState;
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@3e
    .line 1534
    .local v0, "curTarget":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_3

    #@40
    .line 1535
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@43
    move-result v13

    #@44
    .line 1534
    if-eqz v13, :cond_3

    #@46
    .line 1536
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isClosing()Z

    #@49
    move-result v13

    #@4a
    .line 1534
    if-eqz v13, :cond_3

    #@4c
    .line 1537
    if-eqz v9, :cond_1

    #@4e
    iget-object v13, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@50
    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@52
    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@54
    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@56
    if-le v13, v14, :cond_3

    #@58
    .line 1539
    :cond_1
    invoke-virtual {v12, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@5b
    move-result v13

    #@5c
    add-int/lit8 v13, v13, 0x1

    #@5e
    return v13

    #@5f
    .line 1496
    .end local v0    # "curTarget":Lcom/android/server/wm/WindowState;
    .local v9, "w":Lcom/android/server/wm/WindowState;
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v6, v6, -0x1

    #@61
    goto :goto_0

    #@62
    .line 1545
    .end local v9    # "w":Lcom/android/server/wm/WindowState;
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    .restart local v0    # "curTarget":Lcom/android/server/wm/WindowState;
    :cond_3
    if-eqz p1, :cond_b

    #@64
    if-eqz v9, :cond_b

    #@66
    .line 1546
    if-nez v0, :cond_6

    #@68
    const/4 v8, 0x0

    #@69
    .line 1547
    .local v8, "token":Lcom/android/server/wm/AppWindowToken;
    :goto_1
    if-eqz v8, :cond_b

    #@6b
    .line 1553
    const/4 v5, 0x0

    #@6c
    .line 1554
    .local v5, "highestTarget":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    #@6d
    .line 1555
    .local v4, "highestPos":I
    iget-object v13, v8, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6f
    iget-boolean v13, v13, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    #@71
    if-nez v13, :cond_4

    #@73
    iget-object v13, v8, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@75
    iget-object v13, v13, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@77
    if-eqz v13, :cond_5

    #@79
    .line 1556
    :cond_4
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7c
    move-result-object v1

    #@7d
    .line 1557
    .local v1, "curWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@80
    move-result v7

    #@81
    .line 1558
    .end local v5    # "highestTarget":Lcom/android/server/wm/WindowState;
    .local v7, "pos":I
    :goto_2
    if-ltz v7, :cond_5

    #@83
    .line 1559
    invoke-virtual {v1, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@86
    move-result-object v11

    #@87
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@89
    .line 1560
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@8b
    if-eq v13, v8, :cond_7

    #@8d
    .line 1574
    .end local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v7    # "pos":I
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    if-eqz v5, :cond_b

    #@8f
    .line 1580
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@91
    invoke-virtual {v13}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@94
    move-result v13

    #@95
    if-eqz v13, :cond_a

    #@97
    .line 1583
    const/4 v13, 0x1

    #@98
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@9a
    .line 1584
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@9c
    .line 1585
    add-int/lit8 v13, v4, 0x1

    #@9e
    return v13

    #@9f
    .line 1546
    .end local v4    # "highestPos":I
    .end local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_6
    iget-object v8, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@a1
    goto :goto_1

    #@a2
    .line 1563
    .restart local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .restart local v4    # "highestPos":I
    .restart local v7    # "pos":I
    .restart local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_7
    iget-boolean v13, v11, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@a4
    if-nez v13, :cond_9

    #@a6
    .line 1564
    if-eqz v5, :cond_8

    #@a8
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@aa
    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@ac
    .line 1565
    iget-object v14, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@ae
    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@b0
    .line 1564
    if-le v13, v14, :cond_9

    #@b2
    .line 1566
    :cond_8
    move-object v5, v11

    #@b3
    .line 1567
    .local v5, "highestTarget":Lcom/android/server/wm/WindowState;
    move v4, v7

    #@b4
    .line 1570
    .end local v5    # "highestTarget":Lcom/android/server/wm/WindowState;
    :cond_9
    add-int/lit8 v7, v7, -0x1

    #@b6
    goto :goto_2

    #@b7
    .line 1586
    .end local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v7    # "pos":I
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_a
    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@b9
    invoke-virtual {v13}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    #@bc
    move-result v13

    #@bd
    if-eqz v13, :cond_b

    #@bf
    .line 1587
    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@c1
    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@c3
    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@c5
    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@c7
    if-le v13, v14, :cond_b

    #@c9
    .line 1592
    const/4 v13, 0x1

    #@ca
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@cc
    .line 1593
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@ce
    .line 1594
    add-int/lit8 v13, v4, 0x1

    #@d0
    return v13

    #@d1
    .line 1601
    .end local v4    # "highestPos":I
    .end local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_b
    if-eqz v9, :cond_f

    #@d3
    .line 1602
    if-eqz p1, :cond_c

    #@d5
    .line 1605
    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@d7
    .line 1606
    const/4 v13, 0x0

    #@d8
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@da
    .line 1607
    iget-object v13, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@dc
    if-eqz v13, :cond_d

    #@de
    .line 1608
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@e0
    .line 1609
    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@e2
    iget-object v14, v14, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@e4
    iget v14, v14, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    #@e6
    .line 1608
    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    #@e9
    .line 1619
    :cond_c
    :goto_3
    iget-object v13, v9, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    #@eb
    iget-object v13, v13, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@ed
    invoke-virtual {v13}, Lcom/android/server/wm/DockedStackDividerController;->getWindow()Lcom/android/server/wm/WindowState;

    #@f0
    move-result-object v3

    #@f1
    .line 1620
    .local v3, "dockedDivider":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_e

    #@f3
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@f6
    move-result v13

    #@f7
    if-eqz v13, :cond_e

    #@f9
    .line 1621
    invoke-virtual {v12, v3}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@fc
    move-result v2

    #@fd
    .line 1622
    .local v2, "dividerIndex":I
    if-lez v2, :cond_e

    #@ff
    if-le v2, v6, :cond_e

    #@101
    .line 1623
    add-int/lit8 v13, v2, 0x1

    #@103
    return v13

    #@104
    .line 1611
    .end local v2    # "dividerIndex":I
    .end local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_d
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@106
    const/4 v14, 0x0

    #@107
    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    #@10a
    goto :goto_3

    #@10b
    .line 1626
    .restart local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_e
    add-int/lit8 v13, v6, 0x1

    #@10d
    return v13

    #@10e
    .line 1628
    .end local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_f
    if-eqz p1, :cond_10

    #@110
    .line 1631
    const/4 v13, 0x0

    #@111
    iput-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@113
    .line 1632
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@115
    const/4 v14, 0x0

    #@116
    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    #@119
    .line 1634
    :cond_10
    const/4 v13, -0x1

    #@11a
    return v13
.end method

.method findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v11, 0x0

    #@1
    .line 9983
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@4
    move-result-object v7

    #@5
    .line 9984
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@8
    move-result v9

    #@9
    add-int/lit8 v0, v9, -0x1

    #@b
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_8

    #@d
    .line 9985
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@10
    move-result-object v6

    #@11
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@13
    .line 9993
    .local v6, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    #@16
    move-result v9

    #@17
    if-nez v9, :cond_1

    #@19
    .line 9984
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@1b
    goto :goto_0

    #@1c
    .line 9997
    :cond_1
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1e
    .line 10000
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v8, :cond_2

    #@20
    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@22
    if-nez v9, :cond_0

    #@24
    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@26
    if-nez v9, :cond_0

    #@28
    .line 10008
    :cond_2
    if-eqz v8, :cond_4

    #@2a
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@2c
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@2e
    const/4 v10, 0x3

    #@2f
    if-eq v9, v10, :cond_4

    #@31
    .line 10009
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@33
    if-eqz v9, :cond_4

    #@35
    .line 10010
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@38
    move-result-object v2

    #@39
    .line 10011
    .local v2, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@3c
    move-result v9

    #@3d
    add-int/lit8 v1, v9, -0x1

    #@3f
    .local v1, "taskNdx":I
    :goto_1
    if-ltz v1, :cond_4

    #@41
    .line 10012
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v9

    #@45
    check-cast v9, Lcom/android/server/wm/Task;

    #@47
    iget-object v5, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@49
    .line 10013
    .local v5, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    #@4c
    move-result v9

    #@4d
    add-int/lit8 v4, v9, -0x1

    #@4f
    .line 10014
    .local v4, "tokenNdx":I
    :goto_2
    if-ltz v4, :cond_3

    #@51
    .line 10015
    invoke-virtual {v5, v4}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@54
    move-result-object v3

    #@55
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@57
    .line 10016
    .local v3, "token":Lcom/android/server/wm/AppWindowToken;
    if-ne v8, v3, :cond_5

    #@59
    .line 10027
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_3
    if-ltz v4, :cond_7

    #@5b
    .line 10036
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_4
    return-object v6

    #@5c
    .line 10019
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@5e
    if-ne v9, v3, :cond_6

    #@60
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->windowsAreFocusable()Z

    #@63
    move-result v9

    #@64
    if-eqz v9, :cond_6

    #@66
    .line 10024
    return-object v11

    #@67
    .line 10014
    :cond_6
    add-int/lit8 v4, v4, -0x1

    #@69
    goto :goto_2

    #@6a
    .line 10011
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_7
    add-int/lit8 v1, v1, -0x1

    #@6c
    goto :goto_1

    #@6d
    .line 10040
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    return-object v11
.end method

.method public finishDrawingWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 3246
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 3248
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 3249
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 3252
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_1

    #@e
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@10
    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->finishDrawingLocked()Z

    #@13
    move-result v3

    #@14
    if-eqz v3, :cond_1

    #@16
    .line 3253
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@18
    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@1a
    const/high16 v5, 0x100000

    #@1c
    and-int/2addr v3, v5

    #@1d
    if-eqz v3, :cond_0

    #@1f
    .line 3254
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@22
    move-result-object v3

    #@23
    iget v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@25
    or-int/lit8 v5, v5, 0x4

    #@27
    iput v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@29
    .line 3257
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@2c
    .line 3258
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@2e
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@31
    :cond_1
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@32
    .line 3262
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@35
    .line 3245
    return-void

    #@36
    .line 3248
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@37
    :try_start_3
    monitor-exit v4

    #@38
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@39
    .line 3261
    :catchall_1
    move-exception v3

    #@3a
    .line 3262
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@3d
    .line 3261
    throw v3
.end method

.method public freezeRotation(I)V
    .locals 6
    .param p1, "rotation"    # I

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v4, -0x1

    #@2
    .line 6684
    const-string/jumbo v2, "android.permission.SET_ORIENTATION"

    #@5
    .line 6685
    const-string/jumbo v3, "freezeRotation()"

    #@8
    .line 6684
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v2

    #@c
    if-nez v2, :cond_0

    #@e
    .line 6686
    new-instance v2, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v3, "Requires SET_ORIENTATION permission"

    #@13
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v2

    #@17
    .line 6688
    :cond_0
    if-lt p1, v4, :cond_1

    #@19
    const/4 v2, 0x3

    #@1a
    if-le p1, v2, :cond_2

    #@1c
    .line 6689
    :cond_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    #@1e
    const-string/jumbo v3, "Rotation argument must be -1 or a valid rotation constant."

    #@21
    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@24
    throw v2

    #@25
    .line 6695
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@28
    move-result-wide v0

    #@29
    .line 6697
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2b
    .line 6698
    if-ne p1, v4, :cond_3

    #@2d
    iget p1, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2f
    .line 6697
    .end local p1    # "rotation":I
    :cond_3
    const/4 v3, 0x1

    #@30
    invoke-interface {v2, v3, p1}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@33
    .line 6700
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@36
    .line 6703
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@39
    .line 6683
    return-void

    #@3a
    .line 6699
    :catchall_0
    move-exception v2

    #@3b
    .line 6700
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@3e
    .line 6699
    throw v2
.end method

.method public getAnimationScale(I)F
    .locals 1
    .param p1, "which"    # I

    #@0
    .prologue
    .line 5737
    packed-switch p1, :pswitch_data_0

    #@3
    .line 5742
    const/4 v0, 0x0

    #@4
    return v0

    #@5
    .line 5738
    :pswitch_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@7
    return v0

    #@8
    .line 5739
    :pswitch_1
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@a
    return v0

    #@b
    .line 5740
    :pswitch_2
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@d
    return v0

    #@e
    .line 5737
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public getAnimationScales()[F
    .locals 3

    #@0
    .prologue
    .line 5747
    const/4 v0, 0x3

    #@1
    new-array v0, v0, [F

    #@3
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@5
    const/4 v2, 0x0

    #@6
    aput v1, v0, v2

    #@8
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@a
    const/4 v2, 0x1

    #@b
    aput v1, v0, v2

    #@d
    .line 5748
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@f
    const/4 v2, 0x2

    #@10
    aput v1, v0, v2

    #@12
    .line 5747
    return-object v0
.end method

.method public getAppOrientation(Landroid/view/IApplicationToken;)I
    .locals 3
    .param p1, "token"    # Landroid/view/IApplicationToken;

    #@0
    .prologue
    .line 3973
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 3974
    :try_start_0
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@6
    move-result-object v1

    #@7
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@a
    move-result-object v0

    #@b
    .line 3975
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_0

    #@d
    .line 3976
    const/4 v1, -0x1

    #@e
    monitor-exit v2

    #@f
    return v1

    #@10
    .line 3979
    :cond_0
    :try_start_1
    iget v1, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@12
    monitor-exit v2

    #@13
    return v1

    #@14
    .line 3973
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@15
    monitor-exit v2

    #@16
    throw v1
.end method

.method public getBaseDisplayDensity(I)I
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 9222
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 9223
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 9224
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 9225
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15
    monitor-exit v2

    #@16
    return v1

    #@17
    :cond_0
    monitor-exit v2

    #@18
    .line 9228
    const/4 v1, -0x1

    #@19
    return v1

    #@1a
    .line 9222
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1b
    monitor-exit v2

    #@1c
    throw v1
.end method

.method public getBaseDisplaySize(ILandroid/graphics/Point;)V
    .locals 3
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    #@0
    .prologue
    .line 9055
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 9056
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 9057
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 9058
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@15
    iput v1, p2, Landroid/graphics/Point;->x:I

    #@17
    .line 9059
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@19
    iput v1, p2, Landroid/graphics/Point;->y:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1b
    :cond_0
    monitor-exit v2

    #@1c
    .line 9054
    return-void

    #@1d
    .line 9055
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1e
    monitor-exit v2

    #@1f
    throw v1
.end method

.method public getBoundsForNewConfiguration(I)Landroid/graphics/Rect;
    .locals 4
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 3909
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v3

    #@3
    .line 3910
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v1

    #@9
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@b
    .line 3911
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    new-instance v0, Landroid/graphics/Rect;

    #@d
    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    #@10
    .line 3912
    .local v0, "outBounds":Landroid/graphics/Rect;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TaskStack;->getBoundsForNewConfiguration(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@13
    monitor-exit v3

    #@14
    .line 3913
    return-object v0

    #@15
    .line 3909
    .end local v0    # "outBounds":Landroid/graphics/Rect;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v2

    #@16
    monitor-exit v3

    #@17
    throw v2
.end method

.method public getCameraLensCoverState()I
    .locals 6

    #@0
    .prologue
    const/4 v5, -0x1

    #@1
    const/4 v4, 0x0

    #@2
    .line 5798
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@4
    const/16 v2, -0x100

    #@6
    .line 5799
    const/16 v3, 0x9

    #@8
    .line 5798
    invoke-virtual {v1, v5, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    #@b
    move-result v0

    #@c
    .line 5800
    .local v0, "sw":I
    if-lez v0, :cond_0

    #@e
    .line 5802
    const/4 v1, 0x1

    #@f
    return v1

    #@10
    .line 5803
    :cond_0
    if-nez v0, :cond_1

    #@12
    .line 5805
    return v4

    #@13
    .line 5808
    :cond_1
    return v5
.end method

.method public getCurrentAnimatorScale()F
    .locals 2

    #@0
    .prologue
    .line 5753
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5754
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    const/4 v0, 0x0

    #@8
    :goto_0
    monitor-exit v1

    #@9
    return v0

    #@a
    :cond_0
    :try_start_1
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    goto :goto_0

    #@d
    .line 5753
    :catchall_0
    move-exception v0

    #@e
    monitor-exit v1

    #@f
    throw v0
.end method

.method public getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;
    .locals 1

    #@0
    .prologue
    .line 11096
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@4
    move-result-object v0

    #@5
    return-object v0
.end method

.method public getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;
    .locals 1

    #@0
    .prologue
    .line 11104
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;
    .locals 1

    #@0
    .prologue
    .line 11100
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11084
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v1

    #@6
    check-cast v1, Lcom/android/server/wm/DisplayContent;

    #@8
    .line 11085
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    #@a
    .line 11086
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@c
    invoke-virtual {v2, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    #@f
    move-result-object v0

    #@10
    .line 11087
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_0

    #@12
    .line 11088
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;

    #@15
    move-result-object v1

    #@16
    .line 11091
    .end local v0    # "display":Landroid/view/Display;
    :cond_0
    return-object v1
.end method

.method public getDockedDividerInsetsLw()I
    .locals 1

    #@0
    .prologue
    .line 10511
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@7
    move-result-object v0

    #@8
    invoke-virtual {v0}, Lcom/android/server/wm/DockedStackDividerController;->getContentInsets()I

    #@b
    move-result v0

    #@c
    return v0
.end method

.method public getDockedStackSide()I
    .locals 3

    #@0
    .prologue
    .line 11266
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11267
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v1

    #@7
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDockedStackVisibleForUserLocked()Lcom/android/server/wm/TaskStack;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@a
    move-result-object v0

    #@b
    .line 11269
    .local v0, "dockedStack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@d
    const/4 v1, -0x1

    #@e
    :goto_0
    monitor-exit v2

    #@f
    return v1

    #@10
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDockSide()I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@13
    move-result v1

    #@14
    goto :goto_0

    #@15
    .line 11266
    .end local v0    # "dockedStack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@16
    monitor-exit v2

    #@17
    throw v1
.end method

.method getDragLayerLocked()I
    .locals 2

    #@0
    .prologue
    .line 568
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    const/16 v1, 0x7e0

    #@4
    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@7
    move-result v0

    #@8
    mul-int/lit16 v0, v0, 0x2710

    #@a
    add-int/lit16 v0, v0, 0x3e8

    #@c
    return v0
.end method

.method getImeFocusStackLocked()Lcom/android/server/wm/TaskStack;
    .locals 2

    #@0
    .prologue
    const/4 v0, 0x0

    #@1
    .line 8076
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@3
    if-eqz v1, :cond_0

    #@5
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@7
    iget-object v1, v1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8077
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@d
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@f
    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@11
    .line 8076
    :cond_0
    return-object v0
.end method

.method public getInitialDisplayDensity(I)I
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 9211
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 9212
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 9213
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 9214
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15
    monitor-exit v2

    #@16
    return v1

    #@17
    :cond_0
    monitor-exit v2

    #@18
    .line 9217
    const/4 v1, -0x1

    #@19
    return v1

    #@1a
    .line 9211
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1b
    monitor-exit v2

    #@1c
    throw v1
.end method

.method public getInitialDisplaySize(ILandroid/graphics/Point;)V
    .locals 3
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    #@0
    .prologue
    .line 9044
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 9045
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 9046
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 9047
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@15
    iput v1, p2, Landroid/graphics/Point;->x:I

    #@17
    .line 9048
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@19
    iput v1, p2, Landroid/graphics/Point;->y:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1b
    :cond_0
    monitor-exit v2

    #@1c
    .line 9043
    return-void

    #@1d
    .line 9044
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1e
    monitor-exit v2

    #@1f
    throw v1
.end method

.method public getInputMonitor()Lcom/android/server/wm/InputMonitor;
    .locals 1

    #@0
    .prologue
    .line 1072
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@2
    return-object v0
.end method

.method public getLidState()I
    .locals 5

    #@0
    .prologue
    const/4 v4, -0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 5775
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@4
    const/16 v2, -0x100

    #@6
    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    #@9
    move-result v0

    #@a
    .line 5777
    .local v0, "sw":I
    if-lez v0, :cond_0

    #@c
    .line 5779
    return v3

    #@d
    .line 5780
    :cond_0
    if-nez v0, :cond_1

    #@f
    .line 5782
    const/4 v1, 0x1

    #@10
    return v1

    #@11
    .line 5785
    :cond_1
    return v4
.end method

.method public getOrientationLocked()I
    .locals 9

    #@0
    .prologue
    const/4 v8, 0x3

    #@1
    const/4 v7, -0x1

    #@2
    const/4 v0, 0x0

    #@3
    .line 3614
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@5
    if-eqz v6, :cond_1

    #@7
    .line 3615
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@9
    if-eq v6, v7, :cond_0

    #@b
    .line 3623
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@d
    return v6

    #@e
    .line 3624
    :cond_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@10
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    #@13
    move-result v6

    #@14
    if-eqz v6, :cond_a

    #@16
    .line 3633
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@18
    return v6

    #@19
    .line 3637
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@1c
    move-result-object v5

    #@1d
    .line 3638
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@20
    move-result v6

    #@21
    add-int/lit8 v1, v6, -0x1

    #@23
    .local v1, "pos":I
    :goto_0
    if-ltz v1, :cond_2

    #@25
    .line 3639
    invoke-virtual {v5, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@28
    move-result-object v3

    #@29
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@2b
    .line 3640
    .local v3, "win":Lcom/android/server/wm/WindowState;
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2d
    if-eqz v6, :cond_4

    #@2f
    .line 3659
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    iput v7, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@31
    .line 3661
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@33
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    #@36
    move-result v6

    #@37
    if-eqz v6, :cond_a

    #@39
    .line 3665
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3b
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->getWinShowWhenLockedLw()Landroid/view/WindowManagerPolicy$WindowState;

    #@3e
    move-result-object v4

    #@3f
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@41
    .line 3666
    .local v4, "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_8

    #@43
    .line 3668
    .local v0, "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :goto_1
    if-eqz v0, :cond_9

    #@45
    .line 3669
    iget v2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@47
    .line 3670
    .local v2, "req":I
    if-ne v2, v8, :cond_3

    #@49
    .line 3671
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@4b
    .line 3675
    :cond_3
    return v2

    #@4c
    .line 3645
    .end local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "req":I
    .end local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .restart local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_4
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@4f
    move-result v6

    #@50
    if-eqz v6, :cond_5

    #@52
    iget-boolean v6, v3, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    #@54
    if-eqz v6, :cond_5

    #@56
    .line 3648
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@58
    iget v2, v6, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    #@5a
    .line 3649
    .restart local v2    # "req":I
    if-eq v2, v7, :cond_5

    #@5c
    if-ne v2, v8, :cond_6

    #@5e
    .line 3638
    .end local v2    # "req":I
    :cond_5
    add-int/lit8 v1, v1, -0x1

    #@60
    goto :goto_0

    #@61
    .line 3654
    .restart local v2    # "req":I
    :cond_6
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@63
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@65
    invoke-interface {v6, v7}, Landroid/view/WindowManagerPolicy;->isKeyguardHostWindow(Landroid/view/WindowManager$LayoutParams;)Z

    #@68
    move-result v6

    #@69
    if-eqz v6, :cond_7

    #@6b
    .line 3655
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@6d
    .line 3657
    :cond_7
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@6f
    return v2

    #@70
    .line 3667
    .end local v2    # "req":I
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    .restart local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    :cond_8
    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@72
    goto :goto_1

    #@73
    .line 3679
    .restart local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :cond_9
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@75
    return v6

    #@76
    .line 3684
    .end local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "pos":I
    .end local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_a
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getAppSpecifiedOrientation()I

    #@79
    move-result v6

    #@7a
    return v6
.end method

.method public getPendingAppTransition()I
    .locals 1

    #@0
    .prologue
    .line 4052
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public getPreferredOptionsPanelGravity()I
    .locals 8

    #@0
    .prologue
    const v7, 0x800053

    #@3
    const/16 v6, 0x55

    #@5
    const/16 v5, 0x51

    #@7
    .line 7084
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@9
    monitor-enter v3

    #@a
    .line 7085
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getRotation()I

    #@d
    move-result v1

    #@e
    .line 7088
    .local v1, "rotation":I
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@11
    move-result-object v0

    #@12
    .line 7089
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v2, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@14
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    if-ge v2, v4, :cond_0

    #@18
    .line 7091
    packed-switch v1, :pswitch_data_0

    #@1b
    :pswitch_0
    monitor-exit v3

    #@1c
    .line 7094
    return v5

    #@1d
    :pswitch_1
    monitor-exit v3

    #@1e
    .line 7096
    return v6

    #@1f
    :pswitch_2
    monitor-exit v3

    #@20
    .line 7098
    return v5

    #@21
    :pswitch_3
    monitor-exit v3

    #@22
    .line 7100
    return v7

    #@23
    .line 7105
    :cond_0
    packed-switch v1, :pswitch_data_1

    #@26
    :pswitch_4
    monitor-exit v3

    #@27
    .line 7108
    return v6

    #@28
    :pswitch_5
    monitor-exit v3

    #@29
    .line 7110
    return v5

    #@2a
    :pswitch_6
    monitor-exit v3

    #@2b
    .line 7112
    return v7

    #@2c
    :pswitch_7
    monitor-exit v3

    #@2d
    .line 7114
    return v5

    #@2e
    .line 7084
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "rotation":I
    :catchall_0
    move-exception v2

    #@2f
    monitor-exit v3

    #@30
    throw v2

    #@31
    .line 7091
    nop

    #@32
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch

    #@3e
    .line 7105
    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_7
    .end packed-switch
.end method

.method public getRotation()I
    .locals 1

    #@0
    .prologue
    .line 7006
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2
    return v0
.end method

.method public getSmallestWidthForTaskBounds(Landroid/graphics/Rect;)I
    .locals 2
    .param p1, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11420
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 11421
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@a
    move-result-object v0

    #@b
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->getSmallestWidthDpForBounds(Landroid/graphics/Rect;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@e
    move-result v0

    #@f
    monitor-exit v1

    #@10
    return v0

    #@11
    .line 11420
    :catchall_0
    move-exception v0

    #@12
    monitor-exit v1

    #@13
    throw v0
.end method

.method public getStableInsets(Landroid/graphics/Rect;)V
    .locals 2
    .param p1, "outInsets"    # Landroid/graphics/Rect;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    #@0
    .prologue
    .line 11360
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 11361
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getStableInsetsLocked(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 11359
    return-void

    #@8
    .line 11360
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method getStableInsetsLocked(Landroid/graphics/Rect;)V
    .locals 5
    .param p1, "outInsets"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11366
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@3
    move-result-object v0

    #@4
    .line 11367
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6
    iget v2, v0, Landroid/view/DisplayInfo;->rotation:I

    #@8
    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@a
    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@c
    invoke-interface {v1, v2, v3, v4, p1}, Landroid/view/WindowManagerPolicy;->getStableInsetsLw(IIILandroid/graphics/Rect;)V

    #@f
    .line 11365
    return-void
.end method

.method public getStackBounds(ILandroid/graphics/Rect;)V
    .locals 3
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5303
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5304
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5305
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_0

    #@d
    .line 5306
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 5307
    return-void

    #@12
    .line 5309
    :cond_0
    :try_start_1
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v2

    #@16
    .line 5302
    return-void

    #@17
    .line 5303
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@18
    monitor-exit v2

    #@19
    throw v1
.end method

.method public getStackDockedModeBounds(ILandroid/graphics/Rect;Z)V
    .locals 3
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .param p3, "ignoreVisibility"    # Z

    #@0
    .prologue
    .line 5291
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5292
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5293
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_0

    #@d
    .line 5294
    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/TaskStack;->getStackDockedModeBoundsLocked(Landroid/graphics/Rect;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 5295
    return-void

    #@12
    .line 5297
    :cond_0
    :try_start_1
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v2

    #@16
    .line 5290
    return-void

    #@17
    .line 5291
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@18
    monitor-exit v2

    #@19
    throw v1
.end method

.method public getTaskBounds(ILandroid/graphics/Rect;)V
    .locals 3
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5453
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5454
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5455
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    #@d
    .line 5456
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 5457
    return-void

    #@12
    .line 5459
    :cond_0
    :try_start_1
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v2

    #@16
    .line 5452
    return-void

    #@17
    .line 5453
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@18
    monitor-exit v2

    #@19
    throw v1
.end method

.method public getTransitionAnimationScaleLocked()F
    .locals 1

    #@0
    .prologue
    .line 5732
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    const/4 v0, 0x0

    #@5
    :goto_0
    return v0

    #@6
    :cond_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@8
    goto :goto_0
.end method

.method public getWindowAnimationScaleLocked()F
    .locals 1

    #@0
    .prologue
    .line 5728
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    const/4 v0, 0x0

    #@5
    :goto_0
    return v0

    #@6
    :cond_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@8
    goto :goto_0
.end method

.method public getWindowContentFrameStats(Landroid/os/IBinder;)Landroid/view/WindowContentFrameStats;
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 10458
    const-string/jumbo v3, "android.permission.FRAME_STATS"

    #@4
    .line 10459
    const-string/jumbo v4, "getWindowContentFrameStats()"

    #@7
    .line 10458
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v3

    #@b
    if-nez v3, :cond_0

    #@d
    .line 10460
    new-instance v3, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v4, "Requires FRAME_STATS permission"

    #@12
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v3

    #@16
    .line 10462
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@18
    monitor-enter v4

    #@19
    .line 10463
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1e
    move-result-object v2

    #@1f
    check-cast v2, Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@21
    .line 10464
    .local v2, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_1

    #@23
    monitor-exit v4

    #@24
    .line 10465
    return-object v5

    #@25
    .line 10467
    :cond_1
    :try_start_1
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@27
    iget-object v1, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    .line 10468
    .local v1, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v1, :cond_2

    #@2b
    monitor-exit v4

    #@2c
    .line 10469
    return-object v5

    #@2d
    .line 10471
    :cond_2
    :try_start_2
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@2f
    if-nez v3, :cond_3

    #@31
    .line 10472
    new-instance v3, Landroid/view/WindowContentFrameStats;

    #@33
    invoke-direct {v3}, Landroid/view/WindowContentFrameStats;-><init>()V

    #@36
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@38
    .line 10474
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@3a
    .line 10475
    .local v0, "stats":Landroid/view/WindowContentFrameStats;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowSurfaceController;->getWindowContentFrameStats(Landroid/view/WindowContentFrameStats;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@3d
    move-result v3

    #@3e
    if-nez v3, :cond_4

    #@40
    monitor-exit v4

    #@41
    .line 10476
    return-object v5

    #@42
    :cond_4
    monitor-exit v4

    #@43
    .line 10478
    return-object v0

    #@44
    .line 10462
    .end local v0    # "stats":Landroid/view/WindowContentFrameStats;
    .end local v1    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    .end local v2    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@45
    monitor-exit v4

    #@46
    throw v3
.end method

.method public getWindowDisplayFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .locals 3
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outDisplayFrame"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 2741
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2742
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    .line 2743
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_0

    #@a
    .line 2744
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@d
    monitor-exit v2

    #@e
    .line 2745
    return-void

    #@f
    .line 2747
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    #@11
    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@14
    monitor-exit v2

    #@15
    .line 2740
    return-void

    #@16
    .line 2741
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@17
    monitor-exit v2

    #@18
    throw v1
.end method

.method public getWindowId(Landroid/os/IBinder;)Landroid/view/IWindowId;
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2764
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 2765
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@9
    move-result-object v0

    #@a
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@c
    .line 2766
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@e
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mWindowId:Landroid/view/IWindowId;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    return-object v1

    #@12
    .line 2764
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method public getWindowListLocked(I)Lcom/android/server/wm/WindowList;
    .locals 2
    .param p1, "displayId"    # I

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 11122
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@4
    move-result-object v0

    #@5
    .line 11123
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@a
    move-result-object v1

    #@b
    :cond_0
    return-object v1
.end method

.method public getWindowListLocked(Landroid/view/Display;)Lcom/android/server/wm/WindowList;
    .locals 1
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 11113
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@3
    move-result v0

    #@4
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getWindowListLocked(I)Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getWindowManagerLock()Ljava/lang/Object;
    .locals 1

    #@0
    .prologue
    .line 11178
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    return-object v0
.end method

.method handleAnimatingStoppedAndTransitionLocked()I
    .locals 12

    #@0
    .prologue
    const/4 v11, 0x1

    #@1
    const/4 v10, 0x0

    #@2
    .line 9561
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@4
    invoke-virtual {v9}, Lcom/android/server/wm/AppTransition;->setIdle()V

    #@7
    .line 9563
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@9
    invoke-interface {v9}, Ljava/util/List;->size()I

    #@c
    move-result v9

    #@d
    add-int/lit8 v1, v9, -0x1

    #@f
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    #@11
    .line 9564
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@13
    invoke-interface {v9, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@16
    move-result-object v6

    #@17
    check-cast v6, Landroid/os/IBinder;

    #@19
    .line 9565
    .local v6, "token":Landroid/os/IBinder;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1b
    invoke-virtual {v9, v6}, Lcom/android/server/wm/AppTransition;->notifyAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    #@1e
    .line 9563
    add-int/lit8 v1, v1, -0x1

    #@20
    goto :goto_0

    #@21
    .line 9567
    .end local v6    # "token":Landroid/os/IBinder;
    :cond_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@23
    invoke-interface {v9}, Ljava/util/List;->clear()V

    #@26
    .line 9569
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@28
    invoke-virtual {v9}, Lcom/android/server/wm/WallpaperController;->hideDeferredWallpapersIfNeeded()V

    #@2b
    .line 9572
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2e
    move-result-object v9

    #@2f
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@32
    move-result-object v3

    #@33
    .line 9573
    .local v3, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@36
    move-result v9

    #@37
    add-int/lit8 v2, v9, -0x1

    #@39
    .local v2, "stackNdx":I
    :goto_1
    if-ltz v2, :cond_3

    #@3b
    .line 9574
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@3e
    move-result-object v9

    #@3f
    check-cast v9, Lcom/android/server/wm/TaskStack;

    #@41
    invoke-virtual {v9}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@44
    move-result-object v5

    #@45
    .line 9575
    .local v5, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@48
    move-result v9

    #@49
    add-int/lit8 v4, v9, -0x1

    #@4b
    .local v4, "taskNdx":I
    :goto_2
    if-ltz v4, :cond_2

    #@4d
    .line 9576
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@50
    move-result-object v9

    #@51
    check-cast v9, Lcom/android/server/wm/Task;

    #@53
    iget-object v8, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@55
    .line 9577
    .local v8, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v8}, Lcom/android/server/wm/AppTokenList;->size()I

    #@58
    move-result v9

    #@59
    add-int/lit8 v7, v9, -0x1

    #@5b
    .local v7, "tokenNdx":I
    :goto_3
    if-ltz v7, :cond_1

    #@5d
    .line 9578
    invoke-virtual {v8, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@60
    move-result-object v9

    #@61
    check-cast v9, Lcom/android/server/wm/AppWindowToken;

    #@63
    iput-boolean v10, v9, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@65
    .line 9577
    add-int/lit8 v7, v7, -0x1

    #@67
    goto :goto_3

    #@68
    .line 9575
    :cond_1
    add-int/lit8 v4, v4, -0x1

    #@6a
    goto :goto_2

    #@6b
    .line 9573
    .end local v7    # "tokenNdx":I
    .end local v8    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_2
    add-int/lit8 v2, v2, -0x1

    #@6d
    goto :goto_1

    #@6e
    .line 9582
    .end local v4    # "taskNdx":I
    .end local v5    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked()V

    #@71
    .line 9584
    const/4 v0, 0x1

    #@72
    .line 9587
    .local v0, "changes":I
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@75
    .line 9588
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@77
    iput-boolean v11, v9, Lcom/android/server/wm/WindowSurfacePlacer;->mWallpaperMayChange:Z

    #@79
    .line 9592
    iput-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    #@7b
    .line 9594
    return v0
.end method

.method public handleDisplayAdded(I)V
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11131
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11132
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@5
    invoke-virtual {v1, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    #@8
    move-result-object v0

    #@9
    .line 11133
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_0

    #@b
    .line 11134
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    #@e
    .line 11135
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    #@11
    .line 11137
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@13
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    monitor-exit v2

    #@17
    .line 11130
    return-void

    #@18
    .line 11131
    .end local v0    # "display":Landroid/view/Display;
    :catchall_0
    move-exception v1

    #@19
    monitor-exit v2

    #@1a
    throw v1
.end method

.method hasDockedTasksForUser(I)Z
    .locals 8
    .param p1, "userId"    # I

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    .line 5887
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@3
    const/4 v6, 0x3

    #@4
    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@7
    move-result-object v2

    #@8
    check-cast v2, Lcom/android/server/wm/TaskStack;

    #@a
    .line 5888
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_0

    #@c
    .line 5889
    return v7

    #@d
    .line 5892
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@10
    move-result-object v4

    #@11
    .line 5893
    .local v4, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/4 v0, 0x0

    #@12
    .line 5894
    .local v0, "hasUserTask":Z
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@15
    move-result v5

    #@16
    add-int/lit8 v1, v5, -0x1

    #@18
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    #@1a
    if-eqz v0, :cond_2

    #@1c
    .line 5898
    :cond_1
    return v0

    #@1d
    .line 5895
    :cond_2
    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@20
    move-result-object v3

    #@21
    check-cast v3, Lcom/android/server/wm/Task;

    #@23
    .line 5896
    .local v3, "task":Lcom/android/server/wm/Task;
    iget v5, v3, Lcom/android/server/wm/Task;->mUserId:I

    #@25
    if-ne v5, p1, :cond_3

    #@27
    const/4 v0, 0x1

    #@28
    .line 5894
    :goto_1
    add-int/lit8 v1, v1, -0x1

    #@2a
    goto :goto_0

    #@2b
    .line 5896
    :cond_3
    const/4 v0, 0x0

    #@2c
    goto :goto_1
.end method

.method public hasNavigationBar()Z
    .locals 1

    #@0
    .prologue
    .line 10420
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hasNavigationBar()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public hideBootMessagesLocked()V
    .locals 1

    #@0
    .prologue
    .line 6144
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 6145
    const/4 v0, 0x0

    #@5
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@7
    .line 6146
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hideBootMessages()V

    #@c
    .line 6135
    :cond_0
    return-void
.end method

.method public inKeyguardRestrictedInputMode()Z
    .locals 1

    #@0
    .prologue
    .line 5587
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->inKeyguardRestrictedKeyInputMode()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public inputMethodClientHasFocus(Lcom/android/internal/view/IInputMethodClient;)Z
    .locals 10
    .param p1, "client"    # Lcom/android/internal/view/IInputMethodClient;

    #@0
    .prologue
    const/4 v9, 0x1

    #@1
    const/4 v8, 0x0

    #@2
    .line 8983
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v5

    #@5
    .line 8986
    const/4 v4, 0x0

    #@6
    :try_start_0
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@9
    move-result v1

    #@a
    .line 8987
    .local v1, "idx":I
    if-lez v1, :cond_2

    #@c
    .line 8989
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@f
    move-result-object v4

    #@10
    add-int/lit8 v6, v1, -0x1

    #@12
    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@15
    move-result-object v2

    #@16
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@18
    .line 8995
    .local v2, "imFocus":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_2

    #@1a
    .line 8998
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1c
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@1e
    const/4 v6, 0x3

    #@1f
    if-ne v4, v6, :cond_0

    #@21
    .line 8999
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@23
    if-eqz v4, :cond_0

    #@25
    .line 9002
    const/4 v0, 0x0

    #@26
    .local v0, "i":I
    :goto_0
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@28
    iget-object v4, v4, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2a
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@2d
    move-result v4

    #@2e
    if-ge v0, v4, :cond_0

    #@30
    .line 9003
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@32
    iget-object v4, v4, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@34
    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@37
    move-result-object v3

    #@38
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@3a
    .line 9004
    .local v3, "w":Lcom/android/server/wm/WindowState;
    if-eq v3, v2, :cond_1

    #@3c
    .line 9005
    const-string/jumbo v4, "WindowManager"

    #@3f
    new-instance v6, Ljava/lang/StringBuilder;

    #@41
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@44
    const-string/jumbo v7, "Switching to real app window: "

    #@47
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v6

    #@4b
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v6

    #@4f
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52
    move-result-object v6

    #@53
    invoke-static {v4, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@56
    .line 9006
    move-object v2, v3

    #@57
    .line 9019
    .end local v0    # "i":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_0
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@59
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@5b
    if-eqz v4, :cond_2

    #@5d
    .line 9020
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@5f
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@61
    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    #@64
    move-result-object v4

    #@65
    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@68
    move-result-object v6

    #@69
    if-ne v4, v6, :cond_2

    #@6b
    monitor-exit v5

    #@6c
    .line 9021
    return v9

    #@6d
    .line 9002
    .restart local v0    # "i":I
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@6f
    goto :goto_0

    #@70
    .line 9034
    .end local v0    # "i":I
    .end local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@72
    if-eqz v4, :cond_3

    #@74
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@76
    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@78
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@7a
    if-eqz v4, :cond_3

    #@7c
    .line 9035
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@7e
    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@80
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@82
    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    #@85
    move-result-object v4

    #@86
    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@89
    move-result-object v6

    #@8a
    if-ne v4, v6, :cond_3

    #@8c
    monitor-exit v5

    #@8d
    .line 9036
    return v9

    #@8e
    :cond_3
    monitor-exit v5

    #@8f
    .line 9039
    return v8

    #@90
    .line 8983
    .end local v1    # "idx":I
    :catchall_0
    move-exception v4

    #@91
    monitor-exit v5

    #@92
    throw v4
.end method

.method isCurrentProfileLocked(I)Z
    .locals 3
    .param p1, "userId"    # I

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    .line 5903
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@3
    if-ne p1, v1, :cond_0

    #@5
    return v2

    #@6
    .line 5904
    :cond_0
    const/4 v0, 0x0

    #@7
    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@9
    array-length v1, v1

    #@a
    if-ge v0, v1, :cond_2

    #@c
    .line 5905
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@e
    aget v1, v1, v0

    #@10
    if-ne v1, p1, :cond_1

    #@12
    return v2

    #@13
    .line 5904
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@15
    goto :goto_0

    #@16
    .line 5907
    :cond_2
    const/4 v1, 0x0

    #@17
    return v1
.end method

.method public isKeyguardLocked()Z
    .locals 1

    #@0
    .prologue
    .line 5592
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public isKeyguardSecure()Z
    .locals 4

    #@0
    .prologue
    .line 5597
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    #@3
    move-result v2

    #@4
    .line 5598
    .local v2, "userId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@7
    move-result-wide v0

    #@8
    .line 5600
    .local v0, "origId":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a
    invoke-interface {v3, v2}, Landroid/view/WindowManagerPolicy;->isKeyguardSecure(I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@d
    move-result v3

    #@e
    .line 5602
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@11
    .line 5600
    return v3

    #@12
    .line 5601
    :catchall_0
    move-exception v3

    #@13
    .line 5602
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@16
    .line 5601
    throw v3
.end method

.method public isRotationFrozen()Z
    .locals 2

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    .line 7011
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getUserRotationMode()I

    #@6
    move-result v1

    #@7
    if-ne v1, v0, :cond_0

    #@9
    :goto_0
    return v0

    #@a
    :cond_0
    const/4 v0, 0x0

    #@b
    goto :goto_0
.end method

.method public isSafeModeEnabled()Z
    .locals 1

    #@0
    .prologue
    .line 10434
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@2
    return v0
.end method

.method isScreenCaptureDisabledLocked(I)Z
    .locals 2
    .param p1, "userId"    # I

    #@0
    .prologue
    .line 2330
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Ljava/lang/Boolean;

    #@8
    .line 2331
    .local v0, "disabled":Ljava/lang/Boolean;
    if-nez v0, :cond_0

    #@a
    .line 2332
    const/4 v1, 0x0

    #@b
    return v1

    #@c
    .line 2334
    :cond_0
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    #@f
    move-result v1

    #@10
    return v1
.end method

.method isSecureLocked(Lcom/android/server/wm/WindowState;)Z
    .locals 3
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v1, 0x0

    #@2
    .line 2338
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@6
    and-int/lit16 v0, v0, 0x2000

    #@8
    if-eqz v0, :cond_0

    #@a
    .line 2339
    return v2

    #@b
    .line 2341
    :cond_0
    iget v0, p1, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    #@d
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    #@10
    move-result v0

    #@11
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->isScreenCaptureDisabledLocked(I)Z

    #@14
    move-result v0

    #@15
    if-eqz v0, :cond_1

    #@17
    .line 2342
    return v2

    #@18
    .line 2344
    :cond_1
    return v1
.end method

.method isStackVisibleLocked(I)Z
    .locals 2
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5121
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@8
    .line 5122
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_0

    #@a
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    #@d
    move-result v1

    #@e
    :goto_0
    return v1

    #@f
    :cond_0
    const/4 v1, 0x0

    #@10
    goto :goto_0
.end method

.method public isValidTaskId(I)Z
    .locals 2
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5465
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5466
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result-object v0

    #@9
    if-eqz v0, :cond_0

    #@b
    const/4 v0, 0x1

    #@c
    :goto_0
    monitor-exit v1

    #@d
    return v0

    #@e
    :cond_0
    const/4 v0, 0x0

    #@f
    goto :goto_0

    #@10
    .line 5465
    :catchall_0
    move-exception v0

    #@11
    monitor-exit v1

    #@12
    throw v0
.end method

.method public isViewServerRunning()Z
    .locals 3

    #@0
    .prologue
    const/4 v0, 0x0

    #@1
    .line 7201
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v1

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 7202
    return v0

    #@8
    .line 7205
    :cond_0
    const-string/jumbo v1, "android.permission.DUMP"

    #@b
    const-string/jumbo v2, "isViewServerRunning"

    #@e
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v1

    #@12
    if-nez v1, :cond_1

    #@14
    .line 7206
    return v0

    #@15
    .line 7209
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@17
    if-eqz v1, :cond_2

    #@19
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1b
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    #@1e
    move-result v0

    #@1f
    :cond_2
    return v0
.end method

.method public keyguardGoingAway(I)V
    .locals 3
    .param p1, "flags"    # I

    #@0
    .prologue
    .line 5619
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5621
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5625
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 5626
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@19
    const/4 v2, 0x1

    #@1a
    iput-boolean v2, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAway:Z

    #@1c
    .line 5627
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@1e
    iput p1, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAwayFlags:I

    #@20
    .line 5628
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@22
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@25
    monitor-exit v1

    #@26
    .line 5618
    return-void

    #@27
    .line 5625
    :catchall_0
    move-exception v0

    #@28
    monitor-exit v1

    #@29
    throw v0
.end method

.method public keyguardWaitingForActivityDrawn()V
    .locals 2

    #@0
    .prologue
    .line 5634
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5635
    const/4 v1, 0x1

    #@4
    :try_start_0
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 5632
    return-void

    #@8
    .line 5634
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method public lockDeviceNow()V
    .locals 1

    #@0
    .prologue
    .line 5792
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->lockNow(Landroid/os/Bundle;)V

    #@4
    .line 5791
    return-void
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .locals 1
    .param p1, "options"    # Landroid/os/Bundle;

    #@0
    .prologue
    .line 10425
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->lockNow(Landroid/os/Bundle;)V

    #@5
    .line 10424
    return-void
.end method

.method logWindowList(Lcom/android/server/wm/WindowList;Ljava/lang/String;)V
    .locals 4
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;
    .param p2, "prefix"    # Ljava/lang/String;

    #@0
    .prologue
    .line 1694
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    #@3
    move-result v0

    #@4
    .line 1695
    .local v0, "N":I
    :goto_0
    if-lez v0, :cond_0

    #@6
    .line 1696
    add-int/lit8 v0, v0, -0x1

    #@8
    .line 1697
    const-string/jumbo v1, "WindowManager"

    #@b
    new-instance v2, Ljava/lang/StringBuilder;

    #@d
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@10
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13
    move-result-object v2

    #@14
    const-string/jumbo v3, "#"

    #@17
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v2

    #@1b
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v2

    #@1f
    const-string/jumbo v3, ": "

    #@22
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v2

    #@26
    invoke-virtual {p1, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@29
    move-result-object v3

    #@2a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v2

    #@2e
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@31
    move-result-object v2

    #@32
    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@35
    goto :goto_0

    #@36
    .line 1693
    :cond_0
    return-void
.end method

.method makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V
    .locals 5
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/16 v4, 0xb

    #@2
    const/4 v3, 0x1

    #@3
    const/4 v2, 0x0

    #@4
    .line 9539
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@7
    move-result v0

    #@8
    if-nez v0, :cond_0

    #@a
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@c
    const/4 v1, 0x2

    #@d
    if-eq v0, v1, :cond_0

    #@f
    .line 9541
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@11
    .line 9542
    iput v2, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@13
    .line 9543
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@15
    iput-boolean v2, v0, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    #@17
    .line 9544
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@19
    if-nez v0, :cond_0

    #@1b
    .line 9545
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@1d
    .line 9548
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1f
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@22
    .line 9549
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@24
    .line 9550
    const-wide/16 v2, 0x7d0

    #@26
    .line 9549
    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@29
    .line 9535
    :cond_0
    return-void
.end method

.method markForSeamlessRotation(Lcom/android/server/wm/WindowState;Z)V
    .locals 2
    .param p1, "w"    # Lcom/android/server/wm/WindowState;
    .param p2, "seamlesslyRotated"    # Z

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 11524
    iget-boolean v0, p1, Lcom/android/server/wm/WindowState;->mSeamlesslyRotated:Z

    #@3
    if-ne p2, v0, :cond_0

    #@5
    .line 11525
    return-void

    #@6
    .line 11527
    :cond_0
    iput-boolean p2, p1, Lcom/android/server/wm/WindowState;->mSeamlesslyRotated:Z

    #@8
    .line 11528
    if-eqz p2, :cond_2

    #@a
    .line 11529
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    #@c
    add-int/lit8 v0, v0, 0x1

    #@e
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    #@10
    .line 11533
    :goto_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    #@12
    if-nez v0, :cond_1

    #@14
    .line 11537
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@17
    move-result v0

    #@18
    if-eqz v0, :cond_1

    #@1a
    .line 11538
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1c
    const/16 v1, 0x12

    #@1e
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@21
    .line 11523
    :cond_1
    return-void

    #@22
    .line 11531
    :cond_2
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    #@24
    add-int/lit8 v0, v0, -0x1

    #@26
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    #@28
    goto :goto_0
.end method

.method public monitor()V
    .locals 1

    #@0
    .prologue
    .line 11041
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    monitor-exit v0

    #@4
    .line 11040
    return-void
.end method

.method moveInputMethodDialogsLocked(I)V
    .locals 9
    .param p1, "pos"    # I

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    .line 1702
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@3
    .line 1705
    .local v1, "dialogs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@6
    move-result-object v5

    #@7
    .line 1706
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    #@a
    move-result v0

    #@b
    .line 1708
    .local v0, "N":I
    const/4 v2, 0x0

    #@c
    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    #@e
    .line 1709
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v7

    #@12
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@14
    invoke-direct {p0, p1, v7}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@17
    move-result p1

    #@18
    .line 1708
    add-int/lit8 v2, v2, 0x1

    #@1a
    goto :goto_0

    #@1b
    .line 1716
    :cond_0
    if-ltz p1, :cond_4

    #@1d
    .line 1717
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@1f
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@21
    .line 1719
    .local v3, "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@23
    if-eqz v7, :cond_2

    #@25
    .line 1720
    :goto_1
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@28
    move-result v7

    #@29
    if-ge p1, v7, :cond_2

    #@2b
    .line 1721
    invoke-virtual {v5, p1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2e
    move-result-object v6

    #@2f
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@31
    .line 1722
    .local v6, "wp":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@33
    if-eq v6, v7, :cond_1

    #@35
    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@37
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@39
    if-ne v7, v8, :cond_2

    #@3b
    .line 1723
    :cond_1
    add-int/lit8 p1, p1, 0x1

    #@3d
    .line 1724
    goto :goto_1

    #@3e
    .line 1730
    .end local v6    # "wp":Lcom/android/server/wm/WindowState;
    :cond_2
    const/4 v2, 0x0

    #@3f
    :goto_2
    if-ge v2, v0, :cond_3

    #@41
    .line 1731
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v4

    #@45
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@47
    .line 1732
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iput-object v3, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@49
    .line 1733
    invoke-direct {p0, p1, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@4c
    move-result p1

    #@4d
    .line 1730
    add-int/lit8 v2, v2, 0x1

    #@4f
    goto :goto_2

    #@50
    .line 1739
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    return-void

    #@51
    .line 1741
    .end local v3    # "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_4
    const/4 v2, 0x0

    #@52
    :goto_3
    if-ge v2, v0, :cond_5

    #@54
    .line 1742
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@57
    move-result-object v4

    #@58
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@5a
    .line 1743
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    iput-object v8, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@5c
    .line 1744
    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    #@5f
    .line 1741
    add-int/lit8 v2, v2, 0x1

    #@61
    goto :goto_3

    #@62
    .line 1701
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    return-void
.end method

.method moveInputMethodWindowsIfNeededLocked(Z)Z
    .locals 14
    .param p1, "needAssignLayers"    # Z

    #@0
    .prologue
    const/4 v13, 0x1

    #@1
    const/4 v12, -0x1

    #@2
    const/4 v11, 0x0

    #@3
    const/4 v10, 0x0

    #@4
    .line 1753
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@6
    .line 1754
    .local v6, "imWin":Lcom/android/server/wm/WindowState;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@8
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    #@b
    move-result v0

    #@c
    .line 1755
    .local v0, "DN":I
    if-nez v6, :cond_0

    #@e
    if-nez v0, :cond_0

    #@10
    .line 1756
    return v10

    #@11
    .line 1760
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@14
    move-result-object v8

    #@15
    .line 1762
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@18
    move-result v5

    #@19
    .line 1763
    .local v5, "imPos":I
    if-ltz v5, :cond_d

    #@1b
    .line 1769
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@1e
    move-result v1

    #@1f
    .line 1770
    .local v1, "N":I
    if-ge v5, v1, :cond_5

    #@21
    .line 1771
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@24
    move-result-object v4

    #@25
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@27
    .line 1775
    :goto_0
    if-eqz v6, :cond_6

    #@29
    move-object v2, v6

    #@2a
    .line 1777
    .local v2, "baseImWin":Lcom/android/server/wm/WindowState;
    :goto_1
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@2c
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@2f
    move-result v9

    #@30
    if-lez v9, :cond_1

    #@32
    .line 1778
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@34
    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@37
    move-result-object v3

    #@38
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@3a
    .line 1779
    .local v3, "cw":Lcom/android/server/wm/WindowState;
    iget v9, v3, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@3c
    if-gez v9, :cond_1

    #@3e
    move-object v2, v3

    #@3f
    .line 1782
    .end local v3    # "cw":Lcom/android/server/wm/WindowState;
    :cond_1
    if-ne v4, v2, :cond_9

    #@41
    .line 1785
    add-int/lit8 v7, v5, 0x1

    #@43
    .line 1786
    .local v7, "pos":I
    :goto_2
    if-ge v7, v1, :cond_2

    #@45
    .line 1787
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@48
    move-result-object v9

    #@49
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@4b
    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@4d
    if-nez v9, :cond_7

    #@4f
    .line 1792
    :cond_2
    add-int/lit8 v7, v7, 0x1

    #@51
    .line 1794
    :goto_3
    if-ge v7, v1, :cond_3

    #@53
    .line 1795
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@56
    move-result-object v9

    #@57
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@59
    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@5b
    if-eqz v9, :cond_8

    #@5d
    .line 1800
    :cond_3
    if-lt v7, v1, :cond_9

    #@5f
    .line 1803
    if-eqz v6, :cond_4

    #@61
    .line 1804
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@63
    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@65
    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@67
    .line 1806
    :cond_4
    return v10

    #@68
    .line 1771
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v7    # "pos":I
    :cond_5
    const/4 v4, 0x0

    #@69
    .local v4, "firstImWin":Lcom/android/server/wm/WindowState;
    goto :goto_0

    #@6a
    .line 1776
    .end local v4    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_6
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@6c
    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@6f
    move-result-object v9

    #@70
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@72
    move-object v2, v9

    #@73
    goto :goto_1

    #@74
    .line 1790
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .restart local v7    # "pos":I
    :cond_7
    add-int/lit8 v7, v7, 0x1

    #@76
    goto :goto_2

    #@77
    .line 1798
    :cond_8
    add-int/lit8 v7, v7, 0x1

    #@79
    goto :goto_3

    #@7a
    .line 1810
    .end local v7    # "pos":I
    :cond_9
    if-eqz v6, :cond_c

    #@7c
    .line 1815
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@7f
    move-result v5

    #@80
    .line 1820
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@82
    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@84
    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@86
    .line 1821
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@89
    .line 1826
    if-lez v0, :cond_a

    #@8b
    add-int/lit8 v9, v5, 0x1

    #@8d
    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@90
    .line 1851
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_a
    :goto_4
    if-eqz p1, :cond_b

    #@92
    .line 1852
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@94
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@97
    .line 1855
    :cond_b
    return v13

    #@98
    .line 1828
    .restart local v1    # "N":I
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_c
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@9b
    goto :goto_4

    #@9c
    .line 1835
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_d
    if-eqz v6, :cond_e

    #@9e
    .line 1837
    invoke-direct {p0, v10, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@a1
    .line 1838
    iput-object v11, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@a3
    .line 1839
    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    #@a6
    .line 1844
    if-lez v0, :cond_a

    #@a8
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@ab
    goto :goto_4

    #@ac
    .line 1846
    :cond_e
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@af
    goto :goto_4
.end method

.method moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v10, 0x1

    #@1
    const/4 v11, 0x0

    #@2
    .line 5023
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@5
    move-result-object v8

    #@6
    .line 5024
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@8
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    #@b
    .line 5026
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@e
    .line 5029
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@10
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    #@13
    move-result v3

    #@14
    .line 5030
    .local v3, "tmpSize":I
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@17
    move-result v7

    #@18
    .line 5031
    .local v7, "winSize":I
    const/4 v1, 0x0

    #@19
    .local v1, "tmpNdx":I
    const/4 v5, 0x0

    #@1a
    .line 5032
    .local v5, "winNdx":I
    :goto_0
    if-ge v1, v3, :cond_2

    #@1c
    if-ge v5, v7, :cond_2

    #@1e
    .line 5036
    :goto_1
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@20
    add-int/lit8 v2, v1, 0x1

    #@22
    .end local v1    # "tmpNdx":I
    .local v2, "tmpNdx":I
    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@25
    move-result-object v0

    #@26
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@28
    .line 5037
    .local v0, "tmp":Lcom/android/server/wm/WindowState;
    if-ge v2, v3, :cond_0

    #@2a
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2c
    if-eqz v9, :cond_0

    #@2e
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@30
    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@32
    if-eqz v9, :cond_0

    #@34
    move v1, v2

    #@35
    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_1

    #@36
    .line 5041
    .end local v1    # "tmpNdx":I
    .restart local v2    # "tmpNdx":I
    :cond_0
    :goto_2
    add-int/lit8 v6, v5, 0x1

    #@38
    .end local v5    # "winNdx":I
    .local v6, "winNdx":I
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3b
    move-result-object v4

    #@3c
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@3e
    .line 5042
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-ge v6, v7, :cond_1

    #@40
    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@42
    if-eqz v9, :cond_1

    #@44
    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@46
    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@48
    if-eqz v9, :cond_1

    #@4a
    move v5, v6

    #@4b
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    goto :goto_2

    #@4c
    .line 5044
    .end local v5    # "winNdx":I
    .restart local v6    # "winNdx":I
    :cond_1
    if-eq v0, v4, :cond_5

    #@4e
    .line 5046
    iput-boolean v10, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@50
    move v5, v6

    #@51
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    #@52
    .line 5050
    .end local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .end local v2    # "tmpNdx":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v1    # "tmpNdx":I
    :cond_2
    if-eq v1, v5, :cond_3

    #@54
    .line 5052
    iput-boolean v10, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@56
    .line 5054
    :cond_3
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@58
    invoke-virtual {v9}, Ljava/util/ArrayList;->clear()V

    #@5b
    .line 5056
    const/4 v9, 0x3

    #@5c
    invoke-virtual {p0, v9, v11}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@5f
    move-result v9

    #@60
    if-nez v9, :cond_4

    #@62
    .line 5058
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@64
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@67
    move-result-object v10

    #@68
    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@6b
    .line 5061
    :cond_4
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@6d
    invoke-virtual {v9}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@70
    .line 5062
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@72
    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@75
    .line 5063
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@77
    invoke-virtual {v9, v11}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@7a
    .line 5022
    return-void

    #@7b
    .end local v1    # "tmpNdx":I
    .end local v5    # "winNdx":I
    .restart local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .restart local v2    # "tmpNdx":I
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "winNdx":I
    :cond_5
    move v5, v6

    #@7c
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    #@7d
    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_0
.end method

.method public moveTaskToBottom(I)V
    .locals 8
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5099
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 5101
    .local v0, "origId":J
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 5102
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@9
    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@c
    move-result-object v3

    #@d
    check-cast v3, Lcom/android/server/wm/Task;

    #@f
    .line 5103
    .local v3, "task":Lcom/android/server/wm/Task;
    if-nez v3, :cond_0

    #@11
    .line 5104
    const-string/jumbo v4, "WindowManager"

    #@14
    new-instance v6, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v7, "moveTaskToBottom: taskId="

    #@1c
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v6

    #@20
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@23
    move-result-object v6

    #@24
    .line 5105
    const-string/jumbo v7, " not found in mTaskIdToTask"

    #@27
    .line 5104
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2a
    move-result-object v6

    #@2b
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2e
    move-result-object v6

    #@2f
    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@32
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@33
    .line 5116
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@36
    .line 5106
    return-void

    #@37
    .line 5108
    :cond_0
    :try_start_3
    iget-object v2, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@39
    .line 5109
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->moveTaskToBottom(Lcom/android/server/wm/Task;)V

    #@3c
    .line 5110
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@3e
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@41
    move-result v4

    #@42
    if-eqz v4, :cond_1

    #@44
    .line 5111
    const/4 v4, 0x1

    #@45
    invoke-virtual {v3, v4}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    #@48
    .line 5113
    :cond_1
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@4b
    move-result-object v4

    #@4c
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@4f
    :try_start_4
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@50
    .line 5116
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@53
    .line 5098
    return-void

    #@54
    .line 5101
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v4

    #@55
    :try_start_5
    monitor-exit v5

    #@56
    throw v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@57
    .line 5115
    :catchall_1
    move-exception v4

    #@58
    .line 5116
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@5b
    .line 5115
    throw v4
.end method

.method public moveTaskToStack(IIZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    #@0
    .prologue
    .line 5270
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5273
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v2

    #@9
    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5274
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_0

    #@d
    monitor-exit v4

    #@e
    .line 5276
    return-void

    #@f
    .line 5278
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/TaskStack;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@17
    .line 5279
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_1

    #@19
    monitor-exit v4

    #@1a
    .line 5281
    return-void

    #@1b
    .line 5283
    :cond_1
    :try_start_2
    invoke-virtual {v2, v1, p3}, Lcom/android/server/wm/Task;->moveTaskToStack(Lcom/android/server/wm/TaskStack;Z)V

    #@1e
    .line 5284
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@21
    move-result-object v0

    #@22
    .line 5285
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    #@23
    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@25
    .line 5286
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@27
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@2a
    monitor-exit v4

    #@2b
    .line 5269
    return-void

    #@2c
    .line 5270
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@2d
    monitor-exit v4

    #@2e
    throw v3
.end method

.method public moveTaskToTop(I)V
    .locals 8
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5068
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 5070
    .local v2, "origId":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 5071
    :try_start_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@9
    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@c
    move-result-object v5

    #@d
    check-cast v5, Lcom/android/server/wm/Task;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@f
    .line 5072
    .local v5, "task":Lcom/android/server/wm/Task;
    if-nez v5, :cond_0

    #@11
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@12
    .line 5094
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@15
    .line 5074
    return-void

    #@16
    .line 5076
    :cond_0
    :try_start_3
    iget-object v4, v5, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@18
    .line 5077
    .local v4, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v5}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@1b
    move-result-object v0

    #@1c
    .line 5078
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v6, 0x1

    #@1d
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    #@20
    .line 5079
    iget-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    #@22
    if-eqz v6, :cond_1

    #@24
    .line 5080
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getHomeStack()Lcom/android/server/wm/TaskStack;

    #@27
    move-result-object v1

    #@28
    .line 5081
    .local v1, "homeStack":Lcom/android/server/wm/TaskStack;
    if-eq v1, v4, :cond_1

    #@2a
    .line 5084
    const/4 v6, 0x0

    #@2b
    invoke-virtual {v0, v1, v6}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    #@2e
    .line 5087
    .end local v1    # "homeStack":Lcom/android/server/wm/TaskStack;
    :cond_1
    invoke-virtual {v4, v5}, Lcom/android/server/wm/TaskStack;->moveTaskToTop(Lcom/android/server/wm/Task;)V

    #@31
    .line 5088
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@33
    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@36
    move-result v6

    #@37
    if-eqz v6, :cond_2

    #@39
    .line 5089
    const/4 v6, 0x0

    #@3a
    invoke-virtual {v5, v6}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    #@3d
    .line 5091
    :cond_2
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@40
    :try_start_4
    monitor-exit v7
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@41
    .line 5094
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@44
    .line 5067
    return-void

    #@45
    .line 5070
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v5    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v6

    #@46
    :try_start_5
    monitor-exit v7

    #@47
    throw v6
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@48
    .line 5093
    :catchall_1
    move-exception v6

    #@49
    .line 5094
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4c
    .line 5093
    throw v6
.end method

.method needsLayout()Z
    .locals 4

    #@0
    .prologue
    .line 9778
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v2

    #@6
    .line 9779
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@9
    .line 9780
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v0

    #@f
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@11
    .line 9781
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@13
    if-eqz v3, :cond_0

    #@15
    .line 9782
    const/4 v3, 0x1

    #@16
    return v3

    #@17
    .line 9779
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@19
    goto :goto_0

    #@1a
    .line 9785
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    const/4 v3, 0x0

    #@1b
    return v3
.end method

.method public notifyActivityDrawnForKeyguard()V
    .locals 2

    #@0
    .prologue
    .line 5642
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5643
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 5644
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->notifyActivityDrawnForKeyguardLw()V

    #@c
    .line 5645
    const/4 v0, 0x0

    #@d
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    :cond_0
    monitor-exit v1

    #@10
    .line 5639
    return-void

    #@11
    .line 5642
    :catchall_0
    move-exception v0

    #@12
    monitor-exit v1

    #@13
    throw v0
.end method

.method public notifyAppRelaunchesCleared(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 10501
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10502
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@6
    move-result-object v0

    #@7
    .line 10503
    .local v0, "appWindow":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@9
    .line 10504
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->clearRelaunching()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    :cond_0
    monitor-exit v2

    #@d
    .line 10500
    return-void

    #@e
    .line 10501
    .end local v0    # "appWindow":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@f
    monitor-exit v2

    #@10
    throw v1
.end method

.method public notifyAppRelaunching(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 10483
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10484
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@6
    move-result-object v0

    #@7
    .line 10485
    .local v0, "appWindow":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@9
    .line 10486
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->startRelaunching()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    :cond_0
    monitor-exit v2

    #@d
    .line 10482
    return-void

    #@e
    .line 10483
    .end local v0    # "appWindow":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@f
    monitor-exit v2

    #@10
    throw v1
.end method

.method public notifyAppRelaunchingFinished(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 10492
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10493
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@6
    move-result-object v0

    #@7
    .line 10494
    .local v0, "appWindow":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@9
    .line 10495
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->finishRelaunching()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    :cond_0
    monitor-exit v2

    #@d
    .line 10491
    return-void

    #@e
    .line 10492
    .end local v0    # "appWindow":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@f
    monitor-exit v2

    #@10
    throw v1
.end method

.method public notifyAppResumed(Landroid/os/IBinder;ZZ)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "wasStopped"    # Z
    .param p3, "allowSavedSurface"    # Z

    #@0
    .prologue
    .line 4582
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4583
    const-string/jumbo v2, "notifyAppResumed()"

    #@6
    .line 4582
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 4584
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 4587
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 4589
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v0

    #@1c
    .line 4590
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_1

    #@1e
    .line 4591
    const-string/jumbo v1, "WindowManager"

    #@21
    new-instance v3, Ljava/lang/StringBuilder;

    #@23
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@26
    const-string/jumbo v4, "Attempted to notify resumed of non-existing app token: "

    #@29
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v3

    #@2d
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@34
    move-result-object v3

    #@35
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    monitor-exit v2

    #@39
    .line 4592
    return-void

    #@3a
    .line 4594
    :cond_1
    :try_start_1
    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/AppWindowToken;->notifyAppResumed(ZZ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@3d
    monitor-exit v2

    #@3e
    .line 4581
    return-void

    #@3f
    .line 4587
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@40
    monitor-exit v2

    #@41
    throw v1
.end method

.method public notifyAppStopped(Landroid/os/IBinder;)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 4600
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4601
    const-string/jumbo v2, "notifyAppStopped()"

    #@6
    .line 4600
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 4602
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 4605
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 4607
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v0

    #@1c
    .line 4608
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_1

    #@1e
    .line 4609
    const-string/jumbo v1, "WindowManager"

    #@21
    new-instance v3, Ljava/lang/StringBuilder;

    #@23
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@26
    const-string/jumbo v4, "Attempted to notify stopped of non-existing app token: "

    #@29
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v3

    #@2d
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@34
    move-result-object v3

    #@35
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    monitor-exit v2

    #@39
    .line 4610
    return-void

    #@3a
    .line 4612
    :cond_1
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->notifyAppStopped()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@3d
    monitor-exit v2

    #@3e
    .line 4599
    return-void

    #@3f
    .line 4605
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@40
    monitor-exit v2

    #@41
    throw v1
.end method

.method notifyHardKeyboardStatusChange()V
    .locals 4

    #@0
    .prologue
    .line 7770
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v3

    #@3
    .line 7771
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

    #@5
    .line 7772
    .local v1, "listener":Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@7
    .local v0, "available":Z
    monitor-exit v3

    #@8
    .line 7774
    if-eqz v1, :cond_0

    #@a
    .line 7775
    invoke-interface {v1, v0}, Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;->onHardKeyboardStatusChange(Z)V

    #@d
    .line 7767
    :cond_0
    return-void

    #@e
    .line 7770
    .end local v0    # "available":Z
    .end local v1    # "listener":Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    :catchall_0
    move-exception v2

    #@f
    monitor-exit v3

    #@10
    throw v2
.end method

.method okToDisplay()Z
    .locals 1

    #@0
    .prologue
    .line 3416
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@2
    if-nez v0, :cond_0

    #@4
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@6
    if-eqz v0, :cond_0

    #@8
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isScreenOn()Z

    #@d
    move-result v0

    #@e
    :goto_0
    return v0

    #@f
    :cond_0
    const/4 v0, 0x0

    #@10
    goto :goto_0
.end method

.method public onDisplayAdded(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11127
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1b

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 11126
    return-void
.end method

.method public onDisplayChanged(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11165
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1d

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 11164
    return-void
.end method

.method public onDisplayRemoved(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 11142
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1c

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 11141
    return-void
.end method

.method public onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "rectangle"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 2752
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2753
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 2754
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@9
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@c
    move-result-object v0

    #@d
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@f
    .line 2756
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@11
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@14
    move-result v1

    #@15
    if-nez v1, :cond_0

    #@17
    .line 2757
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@19
    invoke-virtual {v1, p2}, Lcom/android/server/wm/AccessibilityController;->onRectangleOnScreenRequestedLocked(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :cond_0
    monitor-exit v2

    #@1d
    .line 2751
    return-void

    #@1e
    .line 2752
    :catchall_0
    move-exception v1

    #@1f
    monitor-exit v2

    #@20
    throw v1
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 3
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    #@0
    .prologue
    .line 1079
    :try_start_0
    invoke-super {p0, p1, p2, p3, p4}, Landroid/view/IWindowManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    #@3
    move-result v1

    #@4
    return v1

    #@5
    .line 1080
    :catch_0
    move-exception v0

    #@6
    .line 1083
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v1, v0, Ljava/lang/SecurityException;

    #@8
    if-nez v1, :cond_0

    #@a
    .line 1084
    const-string/jumbo v1, "WindowManager"

    #@d
    const-string/jumbo v2, "Window Manager Crash"

    #@10
    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@13
    .line 1086
    :cond_0
    throw v0
.end method

.method public openSession(Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)Landroid/view/IWindowSession;
    .locals 3
    .param p1, "callback"    # Landroid/view/IWindowSessionCallback;
    .param p2, "client"    # Lcom/android/internal/view/IInputMethodClient;
    .param p3, "inputContext"    # Lcom/android/internal/view/IInputContext;

    #@0
    .prologue
    .line 8975
    if-nez p2, :cond_0

    #@2
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@4
    const-string/jumbo v2, "null client"

    #@7
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@a
    throw v1

    #@b
    .line 8976
    :cond_0
    if-nez p3, :cond_1

    #@d
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    const-string/jumbo v2, "null inputContext"

    #@12
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@15
    throw v1

    #@16
    .line 8977
    :cond_1
    new-instance v0, Lcom/android/server/wm/Session;

    #@18
    invoke-direct {v0, p0, p1, p2, p3}, Lcom/android/server/wm/Session;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)V

    #@1b
    .line 8978
    .local v0, "session":Lcom/android/server/wm/Session;
    return-object v0
.end method

.method public outOfMemoryWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)Z
    .locals 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 3230
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4
    move-result-wide v0

    #@5
    .line 3233
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@7
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@8
    .line 3234
    const/4 v3, 0x0

    #@9
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    move-result-object v2

    #@d
    .line 3235
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_0

    #@f
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@10
    .line 3241
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@13
    .line 3236
    return v5

    #@14
    .line 3238
    :cond_0
    :try_start_3
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@16
    const-string/jumbo v5, "from-client"

    #@19
    const/4 v6, 0x0

    #@1a
    invoke-virtual {p0, v3, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@1d
    move-result v3

    #@1e
    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@1f
    .line 3241
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@22
    .line 3238
    return v3

    #@23
    .line 3233
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@24
    :try_start_5
    monitor-exit v4

    #@25
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@26
    .line 3240
    :catchall_1
    move-exception v3

    #@27
    .line 3241
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2a
    .line 3240
    throw v3
.end method

.method public overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "enterAnim"    # I
    .param p3, "exitAnim"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;

    #@0
    .prologue
    .line 4058
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4059
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4057
    return-void

    #@a
    .line 4058
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Z)V
    .locals 9
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "targetWidth"    # I
    .param p5, "targetHeight"    # I
    .param p6, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p7, "scaleUp"    # Z

    #@0
    .prologue
    .line 4095
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v8

    #@3
    .line 4096
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    move-object v1, p1

    #@6
    move v2, p2

    #@7
    move v3, p3

    #@8
    move v4, p4

    #@9
    move v5, p5

    #@a
    move-object v6, p6

    #@b
    move/from16 v7, p7

    #@d
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v8

    #@11
    .line 4094
    return-void

    #@12
    .line 4095
    :catchall_0
    move-exception v0

    #@13
    monitor-exit v8

    #@14
    throw v0
.end method

.method public overridePendingAppTransitionClipReveal(IIII)V
    .locals 2
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    #@0
    .prologue
    .line 4076
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4077
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4075
    return-void

    #@a
    .line 4076
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionInPlace(Ljava/lang/String;I)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "anim"    # I

    #@0
    .prologue
    .line 4136
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4137
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/AppTransition;->overrideInPlaceAppTransition(Ljava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4135
    return-void

    #@a
    .line 4136
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionMultiThumb([Landroid/view/AppTransitionAnimationSpec;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V
    .locals 2
    .param p1, "specs"    # [Landroid/view/AppTransitionAnimationSpec;
    .param p2, "onAnimationStartedCallback"    # Landroid/os/IRemoteCallback;
    .param p3, "onAnimationFinishedCallback"    # Landroid/os/IRemoteCallback;
    .param p4, "scaleUp"    # Z

    #@0
    .prologue
    .line 4105
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4106
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumb([Landroid/view/AppTransitionAnimationSpec;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V

    #@8
    .line 4108
    invoke-virtual {p0, p1, p4}, Lcom/android/server/wm/WindowManagerService;->prolongAnimationsFromSpecs([Landroid/view/AppTransitionAnimationSpec;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    monitor-exit v1

    #@c
    .line 4104
    return-void

    #@d
    .line 4105
    :catchall_0
    move-exception v0

    #@e
    monitor-exit v1

    #@f
    throw v0
.end method

.method public overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V
    .locals 2
    .param p1, "specsFuture"    # Landroid/view/IAppTransitionAnimationSpecsFuture;
    .param p2, "callback"    # Landroid/os/IRemoteCallback;
    .param p3, "scaleUp"    # Z

    #@0
    .prologue
    .line 4145
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4146
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4144
    return-void

    #@a
    .line 4145
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionScaleUp(IIII)V
    .locals 2
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    #@0
    .prologue
    .line 4067
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4068
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionScaleUp(IIII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4066
    return-void

    #@a
    .line 4067
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    .locals 7
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p5, "scaleUp"    # Z

    #@0
    .prologue
    .line 4085
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 4086
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    move-object v1, p1

    #@6
    move v2, p2

    #@7
    move v3, p3

    #@8
    move-object v4, p4

    #@9
    move v5, p5

    #@a
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@d
    monitor-exit v6

    #@e
    .line 4084
    return-void

    #@f
    .line 4085
    :catchall_0
    move-exception v0

    #@10
    monitor-exit v6

    #@11
    throw v0
.end method

.method public overridePlayingAppAnimationsLw(Landroid/view/animation/Animation;)V
    .locals 1
    .param p1, "a"    # Landroid/view/animation/Animation;

    #@0
    .prologue
    .line 5315
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayContent;->overridePlayingAppAnimationsLw(Landroid/view/animation/Animation;)V

    #@7
    .line 5314
    return-void
.end method

.method public pauseKeyDispatching(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "_token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 8018
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 8019
    const-string/jumbo v2, "pauseKeyDispatching()"

    #@6
    .line 8018
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 8020
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 8023
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 8024
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 8025
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 8026
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->pauseDispatchingLw(Lcom/android/server/wm/WindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    :cond_1
    monitor-exit v2

    #@28
    .line 8017
    return-void

    #@29
    .line 8023
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@2a
    monitor-exit v2

    #@2b
    throw v1
.end method

.method pauseRotationLocked()V
    .locals 1

    #@0
    .prologue
    .line 6752
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@2
    add-int/lit8 v0, v0, 0x1

    #@4
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@6
    .line 6751
    return-void
.end method

.method public performBootTimeout()V
    .locals 3

    #@0
    .prologue
    .line 5961
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5962
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    monitor-exit v1

    #@8
    .line 5963
    return-void

    #@9
    .line 5965
    :cond_0
    :try_start_1
    const-string/jumbo v0, "WindowManager"

    #@c
    const-string/jumbo v2, "***** BOOT TIMEOUT: forcing display enabled"

    #@f
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@12
    .line 5966
    const/4 v0, 0x1

    #@13
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v1

    #@16
    .line 5968
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@19
    .line 5960
    return-void

    #@1a
    .line 5961
    :catchall_0
    move-exception v0

    #@1b
    monitor-exit v1

    #@1c
    throw v0
.end method

.method public performDeferredDestroyWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 3213
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 3216
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 3217
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 3218
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_0

    #@e
    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@10
    if-eqz v3, :cond_1

    #@12
    :cond_0
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@13
    .line 3225
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@16
    .line 3219
    return-void

    #@17
    .line 3222
    :cond_1
    :try_start_3
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@19
    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->destroyDeferredSurfaceLocked()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@1c
    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@1d
    .line 3225
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@20
    .line 3212
    return-void

    #@21
    .line 3216
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@22
    :try_start_5
    monitor-exit v4

    #@23
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@24
    .line 3224
    :catchall_1
    move-exception v3

    #@25
    .line 3225
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@28
    .line 3224
    throw v3
.end method

.method public performEnableScreen()V
    .locals 10

    #@0
    .prologue
    const/4 v9, 0x0

    #@1
    .line 6029
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v5

    #@4
    .line 6036
    :try_start_0
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    if-eqz v4, :cond_0

    #@8
    monitor-exit v5

    #@9
    .line 6037
    return-void

    #@a
    .line 6039
    :cond_0
    :try_start_1
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@c
    if-nez v4, :cond_1

    #@e
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@10
    if-eqz v4, :cond_2

    #@12
    .line 6044
    :cond_1
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@14
    if-nez v4, :cond_3

    #@16
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkWaitingForWindowsLocked()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@19
    move-result v4

    #@1a
    if-eqz v4, :cond_3

    #@1c
    monitor-exit v5

    #@1d
    .line 6045
    return-void

    #@1e
    :cond_2
    monitor-exit v5

    #@1f
    .line 6040
    return-void

    #@20
    .line 6048
    :cond_3
    :try_start_2
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    #@22
    if-nez v4, :cond_5

    #@24
    .line 6050
    const-string/jumbo v4, "Stop bootanim"

    #@27
    const-wide/16 v6, 0x20

    #@29
    const/4 v8, 0x0

    #@2a
    invoke-static {v6, v7, v4, v8}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@2d
    .line 6052
    :try_start_3
    const-string/jumbo v4, "SurfaceFlinger"

    #@30
    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    #@33
    move-result-object v3

    #@34
    .line 6053
    .local v3, "surfaceFlinger":Landroid/os/IBinder;
    if-eqz v3, :cond_4

    #@36
    .line 6055
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@39
    move-result-object v0

    #@3a
    .line 6056
    .local v0, "data":Landroid/os/Parcel;
    const-string/jumbo v4, "android.ui.ISurfaceComposer"

    #@3d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    #@40
    .line 6057
    const/4 v4, 0x1

    #@41
    .line 6058
    const/4 v6, 0x0

    #@42
    const/4 v7, 0x0

    #@43
    .line 6057
    invoke-interface {v3, v4, v0, v6, v7}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    #@46
    .line 6059
    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@49
    .line 6064
    .end local v0    # "data":Landroid/os/Parcel;
    .end local v3    # "surfaceFlinger":Landroid/os/IBinder;
    :cond_4
    :goto_0
    const/4 v4, 0x1

    #@4a
    :try_start_4
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    #@4c
    .line 6067
    :cond_5
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@4e
    if-nez v4, :cond_6

    #@50
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    #@53
    move-result v4

    #@54
    if-eqz v4, :cond_7

    #@56
    .line 6072
    :cond_6
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@59
    move-result-wide v6

    #@5a
    const/16 v4, 0x791f

    #@5c
    invoke-static {v4, v6, v7}, Landroid/util/EventLog;->writeEvent(IJ)I

    #@5f
    .line 6073
    const-string/jumbo v4, "Stop bootanim"

    #@62
    const-wide/16 v6, 0x20

    #@64
    const/4 v8, 0x0

    #@65
    invoke-static {v6, v7, v4, v8}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    #@68
    .line 6074
    const/4 v4, 0x1

    #@69
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@6b
    .line 6078
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@6d
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    #@6f
    invoke-virtual {v4, v6}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@72
    monitor-exit v5

    #@73
    .line 6082
    :try_start_5
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@75
    invoke-interface {v4}, Landroid/app/IActivityManager;->bootAnimationComplete()V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    #@78
    .line 6086
    :goto_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@7a
    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->enableScreenAfterBoot()V

    #@7d
    .line 6089
    invoke-virtual {p0, v9, v9}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@80
    .line 6028
    return-void

    #@81
    .line 6061
    :catch_0
    move-exception v2

    #@82
    .line 6062
    .local v2, "ex":Landroid/os/RemoteException;
    :try_start_6
    const-string/jumbo v4, "WindowManager"

    #@85
    const-string/jumbo v6, "Boot completed: SurfaceFlinger is dead!"

    #@88
    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@8b
    goto :goto_0

    #@8c
    .line 6029
    .end local v2    # "ex":Landroid/os/RemoteException;
    :catchall_0
    move-exception v4

    #@8d
    monitor-exit v5

    #@8e
    throw v4

    #@8f
    :cond_7
    monitor-exit v5

    #@90
    .line 6069
    return-void

    #@91
    .line 6083
    :catch_1
    move-exception v1

    #@92
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method public pokeDrawLock(Lcom/android/server/wm/Session;Landroid/os/IBinder;)V
    .locals 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 2771
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2772
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    .line 2773
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@a
    .line 2774
    iget-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    #@c
    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowState;->pokeDrawLockLw(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    :cond_0
    monitor-exit v2

    #@10
    .line 2770
    return-void

    #@11
    .line 2771
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@12
    monitor-exit v2

    #@13
    throw v1
.end method

.method public positionTaskInStack(IIILandroid/graphics/Rect;Landroid/content/res/Configuration;)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "position"    # I
    .param p4, "bounds"    # Landroid/graphics/Rect;
    .param p5, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 5357
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5360
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v2

    #@9
    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5361
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_0

    #@d
    monitor-exit v4

    #@e
    .line 5364
    return-void

    #@f
    .line 5366
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/TaskStack;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@17
    .line 5367
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_1

    #@19
    monitor-exit v4

    #@1a
    .line 5370
    return-void

    #@1b
    .line 5372
    :cond_1
    :try_start_2
    invoke-virtual {v2, v1, p3, p4, p5}, Lcom/android/server/wm/Task;->positionTaskInStack(Lcom/android/server/wm/TaskStack;ILandroid/graphics/Rect;Landroid/content/res/Configuration;)V

    #@1e
    .line 5373
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@21
    move-result-object v0

    #@22
    .line 5374
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    #@23
    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@25
    .line 5375
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@27
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@2a
    monitor-exit v4

    #@2b
    .line 5356
    return-void

    #@2c
    .line 5357
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@2d
    monitor-exit v4

    #@2e
    throw v3
.end method

.method public prepareAppTransition(IZ)V
    .locals 3
    .param p1, "transit"    # I
    .param p2, "alwaysKeepCurrent"    # Z

    #@0
    .prologue
    .line 4037
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4038
    const-string/jumbo v2, "prepareAppTransition()"

    #@6
    .line 4037
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 4039
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 4041
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 4042
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1a
    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/AppTransition;->prepareAppTransitionLocked(IZ)Z

    #@1d
    move-result v0

    #@1e
    .line 4044
    .local v0, "prepared":Z
    if-eqz v0, :cond_1

    #@20
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@23
    move-result v1

    #@24
    if-eqz v1, :cond_1

    #@26
    .line 4045
    const/4 v1, 0x0

    #@27
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@29
    :cond_1
    monitor-exit v2

    #@2a
    .line 4036
    return-void

    #@2b
    .line 4041
    .end local v0    # "prepared":Z
    :catchall_0
    move-exception v1

    #@2c
    monitor-exit v2

    #@2d
    throw v1
.end method

.method prepareDragSurface(Landroid/view/IWindow;Landroid/view/SurfaceSession;IIILandroid/view/Surface;)Landroid/os/IBinder;
    .locals 20
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "session"    # Landroid/view/SurfaceSession;
    .param p3, "flags"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "outSurface"    # Landroid/view/Surface;

    #@0
    .prologue
    .line 7954
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@3
    move-result v10

    #@4
    .line 7955
    .local v10, "callerPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@7
    move-result v11

    #@8
    .line 7956
    .local v11, "callerUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@b
    move-result-wide v16

    #@c
    .line 7957
    .local v16, "origId":J
    const/16 v18, 0x0

    #@e
    .line 7960
    .local v18, "token":Landroid/os/IBinder;
    :try_start_0
    move-object/from16 v0, p0

    #@10
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@12
    move-object/from16 v19, v0

    #@14
    monitor-enter v19
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    #@15
    .line 7962
    :try_start_1
    move-object/from16 v0, p0

    #@17
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@19
    if-nez v3, :cond_2

    #@1b
    .line 7964
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1e
    move-result-object v13

    #@1f
    .line 7965
    .local v13, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@22
    move-result-object v12

    #@23
    .line 7967
    .local v12, "display":Landroid/view/Display;
    new-instance v2, Landroid/view/SurfaceControl;

    #@25
    const-string/jumbo v4, "drag surface"

    #@28
    .line 7968
    const/4 v7, -0x3

    #@29
    const/4 v8, 0x4

    #@2a
    move-object/from16 v3, p2

    #@2c
    move/from16 v5, p4

    #@2e
    move/from16 v6, p5

    #@30
    .line 7967
    invoke-direct/range {v2 .. v8}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    #@33
    .line 7969
    .local v2, "surface":Landroid/view/SurfaceControl;
    invoke-virtual {v12}, Landroid/view/Display;->getLayerStack()I

    #@36
    move-result v3

    #@37
    invoke-virtual {v2, v3}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    #@3a
    .line 7970
    const/high16 v9, 0x3f800000    # 1.0f

    #@3c
    .line 7971
    .local v9, "alpha":F
    move/from16 v0, p3

    #@3e
    and-int/lit16 v3, v0, 0x200

    #@40
    if-nez v3, :cond_0

    #@42
    .line 7972
    const v9, 0x3f350481    # 0.7071f

    #@45
    .line 7974
    :cond_0
    invoke-virtual {v2, v9}, Landroid/view/SurfaceControl;->setAlpha(F)V

    #@48
    .line 7978
    move-object/from16 v0, p6

    #@4a
    invoke-virtual {v0, v2}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    #@4d
    .line 7979
    invoke-interface/range {p1 .. p1}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@50
    move-result-object v8

    #@51
    .line 7980
    .local v8, "winBinder":Landroid/os/IBinder;
    new-instance v5, Landroid/os/Binder;

    #@53
    invoke-direct {v5}, Landroid/os/Binder;-><init>()V
    :try_end_1
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    #@56
    .line 7981
    .local v5, "token":Landroid/os/IBinder;
    :try_start_2
    new-instance v3, Lcom/android/server/wm/DragState;

    #@58
    .end local v18    # "token":Landroid/os/IBinder;
    move-object/from16 v4, p0

    #@5a
    move-object v6, v2

    #@5b
    move/from16 v7, p3

    #@5d
    invoke-direct/range {v3 .. v8}, Lcom/android/server/wm/DragState;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;Landroid/view/SurfaceControl;ILandroid/os/IBinder;)V

    #@60
    move-object/from16 v0, p0

    #@62
    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@64
    .line 7982
    move-object/from16 v0, p0

    #@66
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@68
    iput v10, v3, Lcom/android/server/wm/DragState;->mPid:I

    #@6a
    .line 7983
    move-object/from16 v0, p0

    #@6c
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@6e
    iput v11, v3, Lcom/android/server/wm/DragState;->mUid:I

    #@70
    .line 7984
    move-object/from16 v0, p0

    #@72
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@74
    iput v9, v3, Lcom/android/server/wm/DragState;->mOriginalAlpha:F

    #@76
    .line 7985
    new-instance v18, Landroid/os/Binder;

    #@78
    invoke-direct/range {v18 .. v18}, Landroid/os/Binder;-><init>()V

    #@7b
    move-object/from16 v0, p0

    #@7d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@7f
    move-object/from16 v0, v18

    #@81
    iput-object v0, v3, Lcom/android/server/wm/DragState;->mToken:Landroid/os/IBinder;
    :try_end_2
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@83
    .line 7988
    .end local v5    # "token":Landroid/os/IBinder;
    .local v18, "token":Landroid/os/IBinder;
    :try_start_3
    move-object/from16 v0, p0

    #@85
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@87
    const/16 v4, 0x14

    #@89
    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    #@8c
    .line 7989
    move-object/from16 v0, p0

    #@8e
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@90
    const/16 v4, 0x14

    #@92
    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@95
    move-result-object v15

    #@96
    .line 7990
    .local v15, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    #@98
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@9a
    const-wide/16 v6, 0x1388

    #@9c
    invoke-virtual {v3, v15, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_3
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    #@9f
    move-object/from16 v5, v18

    #@a1
    .end local v2    # "surface":Landroid/view/SurfaceControl;
    .end local v8    # "winBinder":Landroid/os/IBinder;
    .end local v9    # "alpha":F
    .end local v12    # "display":Landroid/view/Display;
    .end local v13    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "msg":Landroid/os/Message;
    .end local v18    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    :cond_1
    :goto_0
    :try_start_4
    monitor-exit v19
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@a2
    .line 8003
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@a5
    .line 8006
    return-object v5

    #@a6
    .line 7992
    .end local v5    # "token":Landroid/os/IBinder;
    .local v18, "token":Landroid/os/IBinder;
    :cond_2
    :try_start_5
    const-string/jumbo v3, "WindowManager"

    #@a9
    const-string/jumbo v4, "Drag already in progress"

    #@ac
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    #@af
    move-object/from16 v5, v18

    #@b1
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_0

    #@b2
    .line 7994
    .end local v5    # "token":Landroid/os/IBinder;
    .end local v18    # "token":Landroid/os/IBinder;
    :catch_0
    move-exception v14

    #@b3
    .local v14, "e":Landroid/view/Surface$OutOfResourcesException;
    move-object/from16 v5, v18

    #@b5
    .line 7995
    .restart local v5    # "token":Landroid/os/IBinder;
    :goto_1
    :try_start_6
    const-string/jumbo v3, "WindowManager"

    #@b8
    new-instance v4, Ljava/lang/StringBuilder;

    #@ba
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@bd
    const-string/jumbo v6, "Can\'t allocate drag surface w="

    #@c0
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c3
    move-result-object v4

    #@c4
    move/from16 v0, p4

    #@c6
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c9
    move-result-object v4

    #@ca
    const-string/jumbo v6, " h="

    #@cd
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d0
    move-result-object v4

    #@d1
    move/from16 v0, p5

    #@d3
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@d6
    move-result-object v4

    #@d7
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@da
    move-result-object v4

    #@db
    invoke-static {v3, v4, v14}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@de
    .line 7996
    move-object/from16 v0, p0

    #@e0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@e2
    if-eqz v3, :cond_1

    #@e4
    .line 7997
    move-object/from16 v0, p0

    #@e6
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@e8
    invoke-virtual {v3}, Lcom/android/server/wm/DragState;->reset()V

    #@eb
    .line 7998
    const/4 v3, 0x0

    #@ec
    move-object/from16 v0, p0

    #@ee
    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@f0
    goto :goto_0

    #@f1
    .line 7960
    .end local v14    # "e":Landroid/view/Surface$OutOfResourcesException;
    :catchall_0
    move-exception v3

    #@f2
    :goto_2
    :try_start_7
    monitor-exit v19

    #@f3
    throw v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    #@f4
    .line 8002
    :catchall_1
    move-exception v3

    #@f5
    .line 8003
    :goto_3
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@f8
    .line 8002
    throw v3

    #@f9
    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v18    # "token":Landroid/os/IBinder;
    :catchall_2
    move-exception v3

    #@fa
    move-object/from16 v5, v18

    #@fc
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_3

    #@fd
    .line 7960
    .end local v5    # "token":Landroid/os/IBinder;
    .end local v18    # "token":Landroid/os/IBinder;
    :catchall_3
    move-exception v3

    #@fe
    move-object/from16 v5, v18

    #@100
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_2

    #@101
    .line 7994
    .restart local v2    # "surface":Landroid/view/SurfaceControl;
    .restart local v8    # "winBinder":Landroid/os/IBinder;
    .restart local v9    # "alpha":F
    .restart local v12    # "display":Landroid/view/Display;
    .restart local v13    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catch_1
    move-exception v14

    #@102
    .restart local v14    # "e":Landroid/view/Surface$OutOfResourcesException;
    goto :goto_1
.end method

.method public prepareFreezingTaskBounds(I)V
    .locals 5
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5345
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5346
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5347
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@d
    .line 5348
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "prepareFreezingTaskBounds: stackId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5349
    const-string/jumbo v4, " not found."

    #@22
    .line 5348
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5345
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5351
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->prepareFreezingTaskBounds()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@34
    monitor-exit v2

    #@35
    .line 5344
    return-void
.end method

.method prolongAnimationsFromSpecs([Landroid/view/AppTransitionAnimationSpec;Z)V
    .locals 9
    .param p1, "specs"    # [Landroid/view/AppTransitionAnimationSpec;
    .param p2, "scaleUp"    # Z

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    const/4 v7, -0x1

    #@2
    .line 4117
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    #@4
    invoke-virtual {v5}, Landroid/util/SparseIntArray;->clear()V

    #@7
    .line 4118
    array-length v5, p1

    #@8
    add-int/lit8 v1, v5, -0x1

    #@a
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    #@c
    .line 4119
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    #@e
    aget-object v6, p1, v1

    #@10
    iget v6, v6, Landroid/view/AppTransitionAnimationSpec;->taskId:I

    #@12
    invoke-virtual {v5, v6, v8}, Landroid/util/SparseIntArray;->put(II)V

    #@15
    .line 4118
    add-int/lit8 v1, v1, -0x1

    #@17
    goto :goto_0

    #@18
    .line 4121
    :cond_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@1d
    move-result-object v5

    #@1e
    invoke-interface {v5}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@21
    move-result-object v4

    #@22
    .local v4, "win$iterator":Ljava/util/Iterator;
    :cond_1
    :goto_1
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    #@25
    move-result v5

    #@26
    if-eqz v5, :cond_3

    #@28
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@2b
    move-result-object v3

    #@2c
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@2e
    .line 4122
    .local v3, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    #@31
    move-result-object v2

    #@32
    .line 4123
    .local v2, "task":Lcom/android/server/wm/Task;
    if-eqz v2, :cond_1

    #@34
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    #@36
    iget v6, v2, Lcom/android/server/wm/Task;->mTaskId:I

    #@38
    invoke-virtual {v5, v6, v7}, Landroid/util/SparseIntArray;->get(II)I

    #@3b
    move-result v5

    #@3c
    if-eq v5, v7, :cond_1

    #@3e
    .line 4124
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->inFreeformWorkspace()Z

    #@41
    move-result v5

    #@42
    .line 4123
    if-eqz v5, :cond_1

    #@44
    .line 4125
    iget-object v0, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@46
    .line 4126
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_1

    #@48
    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@4a
    if-eqz v5, :cond_1

    #@4c
    .line 4127
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@4e
    if-eqz p2, :cond_2

    #@50
    .line 4128
    const/4 v5, 0x2

    #@51
    .line 4127
    :goto_2
    invoke-virtual {v6, v5}, Lcom/android/server/wm/AppWindowAnimator;->startProlongAnimation(I)V

    #@54
    goto :goto_1

    #@55
    .line 4128
    :cond_2
    const/4 v5, 0x1

    #@56
    goto :goto_2

    #@57
    .line 4113
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    return-void
.end method

.method public reboot(Z)V
    .locals 2
    .param p1, "confirm"    # Z

    #@0
    .prologue
    .line 5831
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "userrequested"

    #@5
    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->reboot(Landroid/content/Context;Ljava/lang/String;Z)V

    #@8
    .line 5830
    return-void
.end method

.method public rebootSafeMode(Z)V
    .locals 1
    .param p1, "confirm"    # Z

    #@0
    .prologue
    .line 5837
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->rebootSafeMode(Landroid/content/Context;Z)V

    #@5
    .line 5836
    return-void
.end method

.method final rebuildAppWindowListLocked()V
    .locals 1

    #@0
    .prologue
    .line 9438
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@7
    .line 9437
    return-void
.end method

.method reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    .locals 23
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p2, "operation"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    #@0
    .prologue
    .line 9804
    move-object/from16 v0, p1

    #@2
    iget-object v15, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@4
    .line 9805
    .local v15, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    const/4 v10, 0x0

    #@5
    .line 9806
    .local v10, "leakedSurface":Z
    const/4 v9, 0x0

    #@6
    .line 9808
    .local v9, "killedApps":Z
    const/16 v20, 0x3

    #@8
    move/from16 v0, v20

    #@a
    new-array v0, v0, [Ljava/lang/Object;

    #@c
    move-object/from16 v20, v0

    #@e
    move-object/from16 v0, p1

    #@10
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@12
    move-object/from16 v21, v0

    #@14
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->toString()Ljava/lang/String;

    #@17
    move-result-object v21

    #@18
    const/16 v22, 0x0

    #@1a
    aput-object v21, v20, v22

    #@1c
    .line 9809
    move-object/from16 v0, p1

    #@1e
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@20
    move-object/from16 v21, v0

    #@22
    move-object/from16 v0, v21

    #@24
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@26
    move/from16 v21, v0

    #@28
    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@2b
    move-result-object v21

    #@2c
    const/16 v22, 0x1

    #@2e
    aput-object v21, v20, v22

    #@30
    const/16 v21, 0x2

    #@32
    aput-object p2, v20, v21

    #@34
    .line 9808
    const/16 v21, 0x7918

    #@36
    move/from16 v0, v21

    #@38
    move-object/from16 v1, v20

    #@3a
    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    #@3d
    .line 9811
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@40
    move-result-wide v4

    #@41
    .line 9816
    .local v4, "callingIdentity":J
    :try_start_0
    const-string/jumbo v20, "WindowManager"

    #@44
    const-string/jumbo v21, "Out of memory for surface!  Looking for leaks..."

    #@47
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@4a
    .line 9817
    move-object/from16 v0, p0

    #@4c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@4e
    move-object/from16 v20, v0

    #@50
    invoke-virtual/range {v20 .. v20}, Landroid/util/SparseArray;->size()I

    #@53
    move-result v11

    #@54
    .line 9818
    .local v11, "numDisplays":I
    const/4 v6, 0x0

    #@55
    .local v6, "displayNdx":I
    :goto_0
    if-ge v6, v11, :cond_4

    #@57
    .line 9819
    move-object/from16 v0, p0

    #@59
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@5b
    move-object/from16 v20, v0

    #@5d
    move-object/from16 v0, v20

    #@5f
    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@62
    move-result-object v20

    #@63
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@65
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@68
    move-result-object v17

    #@69
    .line 9820
    .local v17, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    #@6c
    move-result v12

    #@6d
    .line 9821
    .local v12, "numWindows":I
    const/16 v16, 0x0

    #@6f
    .local v16, "winNdx":I
    :goto_1
    move/from16 v0, v16

    #@71
    if-ge v0, v12, :cond_3

    #@73
    .line 9822
    move-object/from16 v0, v17

    #@75
    move/from16 v1, v16

    #@77
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@7a
    move-result-object v18

    #@7b
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@7d
    .line 9823
    .local v18, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    #@7f
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@81
    move-object/from16 v19, v0

    #@83
    .line 9824
    .local v19, "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v19

    #@85
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@87
    move-object/from16 v20, v0

    #@89
    if-nez v20, :cond_1

    #@8b
    .line 9821
    :cond_0
    :goto_2
    add-int/lit8 v16, v16, 0x1

    #@8d
    goto :goto_1

    #@8e
    .line 9827
    :cond_1
    move-object/from16 v0, p0

    #@90
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@92
    move-object/from16 v20, v0

    #@94
    move-object/from16 v0, v19

    #@96
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@98
    move-object/from16 v21, v0

    #@9a
    invoke-virtual/range {v20 .. v21}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@9d
    move-result v20

    #@9e
    if-nez v20, :cond_2

    #@a0
    .line 9828
    const-string/jumbo v20, "WindowManager"

    #@a3
    new-instance v21, Ljava/lang/StringBuilder;

    #@a5
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@a8
    const-string/jumbo v22, "LEAKED SURFACE (session doesn\'t exist): "

    #@ab
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ae
    move-result-object v21

    #@af
    move-object/from16 v0, v21

    #@b1
    move-object/from16 v1, v18

    #@b3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@b6
    move-result-object v21

    #@b7
    .line 9829
    const-string/jumbo v22, " surface="

    #@ba
    .line 9828
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bd
    move-result-object v21

    #@be
    .line 9829
    move-object/from16 v0, v19

    #@c0
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@c2
    move-object/from16 v22, v0

    #@c4
    .line 9828
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@c7
    move-result-object v21

    #@c8
    .line 9830
    const-string/jumbo v22, " token="

    #@cb
    .line 9828
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ce
    move-result-object v21

    #@cf
    .line 9830
    move-object/from16 v0, v18

    #@d1
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@d3
    move-object/from16 v22, v0

    #@d5
    .line 9828
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@d8
    move-result-object v21

    #@d9
    .line 9831
    const-string/jumbo v22, " pid="

    #@dc
    .line 9828
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@df
    move-result-object v21

    #@e0
    .line 9831
    move-object/from16 v0, v18

    #@e2
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@e4
    move-object/from16 v22, v0

    #@e6
    move-object/from16 v0, v22

    #@e8
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@ea
    move/from16 v22, v0

    #@ec
    .line 9828
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@ef
    move-result-object v21

    #@f0
    .line 9832
    const-string/jumbo v22, " uid="

    #@f3
    .line 9828
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f6
    move-result-object v21

    #@f7
    .line 9832
    move-object/from16 v0, v18

    #@f9
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@fb
    move-object/from16 v22, v0

    #@fd
    move-object/from16 v0, v22

    #@ff
    iget v0, v0, Lcom/android/server/wm/Session;->mUid:I

    #@101
    move/from16 v22, v0

    #@103
    .line 9828
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@106
    move-result-object v21

    #@107
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10a
    move-result-object v21

    #@10b
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@10e
    .line 9833
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    #@111
    .line 9834
    move-object/from16 v0, p0

    #@113
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@115
    move-object/from16 v20, v0

    #@117
    move-object/from16 v0, v20

    #@119
    move-object/from16 v1, v18

    #@11b
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@11e
    .line 9835
    const/4 v10, 0x1

    #@11f
    goto/16 :goto_2

    #@121
    .line 9836
    :cond_2
    move-object/from16 v0, v18

    #@123
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@125
    move-object/from16 v20, v0

    #@127
    if-eqz v20, :cond_0

    #@129
    move-object/from16 v0, v18

    #@12b
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@12d
    move-object/from16 v20, v0

    #@12f
    move-object/from16 v0, v20

    #@131
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@133
    move/from16 v20, v0

    #@135
    if-eqz v20, :cond_0

    #@137
    .line 9837
    const-string/jumbo v20, "WindowManager"

    #@13a
    new-instance v21, Ljava/lang/StringBuilder;

    #@13c
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@13f
    const-string/jumbo v22, "LEAKED SURFACE (app token hidden): "

    #@142
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@145
    move-result-object v21

    #@146
    move-object/from16 v0, v21

    #@148
    move-object/from16 v1, v18

    #@14a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@14d
    move-result-object v21

    #@14e
    .line 9838
    const-string/jumbo v22, " surface="

    #@151
    .line 9837
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@154
    move-result-object v21

    #@155
    .line 9838
    move-object/from16 v0, v19

    #@157
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@159
    move-object/from16 v22, v0

    #@15b
    .line 9837
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@15e
    move-result-object v21

    #@15f
    .line 9839
    const-string/jumbo v22, " token="

    #@162
    .line 9837
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@165
    move-result-object v21

    #@166
    .line 9839
    move-object/from16 v0, v18

    #@168
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@16a
    move-object/from16 v22, v0

    #@16c
    .line 9837
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@16f
    move-result-object v21

    #@170
    .line 9840
    const-string/jumbo v22, " saved="

    #@173
    .line 9837
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@176
    move-result-object v21

    #@177
    .line 9840
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->hasSavedSurface()Z

    #@17a
    move-result v22

    #@17b
    .line 9837
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@17e
    move-result-object v21

    #@17f
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@182
    move-result-object v21

    #@183
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@186
    .line 9842
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    #@189
    .line 9843
    const/4 v10, 0x1

    #@18a
    goto/16 :goto_2

    #@18c
    .line 9818
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    .end local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :cond_3
    add-int/lit8 v6, v6, 0x1

    #@18e
    goto/16 :goto_0

    #@190
    .line 9848
    .end local v12    # "numWindows":I
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    if-nez v10, :cond_a

    #@192
    .line 9849
    const-string/jumbo v20, "WindowManager"

    #@195
    const-string/jumbo v21, "No leaked surfaces; killing applicatons!"

    #@198
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@19b
    .line 9850
    new-instance v13, Landroid/util/SparseIntArray;

    #@19d
    invoke-direct {v13}, Landroid/util/SparseIntArray;-><init>()V

    #@1a0
    .line 9851
    .local v13, "pidCandidates":Landroid/util/SparseIntArray;
    const/4 v6, 0x0

    #@1a1
    :goto_3
    if-ge v6, v11, :cond_a

    #@1a3
    .line 9852
    move-object/from16 v0, p0

    #@1a5
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1a7
    move-object/from16 v20, v0

    #@1a9
    move-object/from16 v0, v20

    #@1ab
    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@1ae
    move-result-object v20

    #@1af
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@1b1
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1b4
    move-result-object v17

    #@1b5
    .line 9853
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    #@1b8
    move-result v12

    #@1b9
    .line 9854
    .restart local v12    # "numWindows":I
    const/16 v16, 0x0

    #@1bb
    .restart local v16    # "winNdx":I
    :goto_4
    move/from16 v0, v16

    #@1bd
    if-ge v0, v12, :cond_7

    #@1bf
    .line 9855
    move-object/from16 v0, v17

    #@1c1
    move/from16 v1, v16

    #@1c3
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1c6
    move-result-object v18

    #@1c7
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@1c9
    .line 9856
    .restart local v18    # "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@1cb
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@1cd
    move-object/from16 v20, v0

    #@1cf
    move-object/from16 v0, v20

    #@1d1
    move-object/from16 v1, v18

    #@1d3
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@1d6
    move-result v20

    #@1d7
    if-eqz v20, :cond_6

    #@1d9
    .line 9854
    :cond_5
    :goto_5
    add-int/lit8 v16, v16, 0x1

    #@1db
    goto :goto_4

    #@1dc
    .line 9859
    :cond_6
    move-object/from16 v0, v18

    #@1de
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1e0
    move-object/from16 v19, v0

    #@1e2
    .line 9860
    .restart local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v19

    #@1e4
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@1e6
    move-object/from16 v20, v0

    #@1e8
    if-eqz v20, :cond_5

    #@1ea
    .line 9861
    move-object/from16 v0, v19

    #@1ec
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@1ee
    move-object/from16 v20, v0

    #@1f0
    move-object/from16 v0, v20

    #@1f2
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@1f4
    move/from16 v20, v0

    #@1f6
    move-object/from16 v0, v19

    #@1f8
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@1fa
    move-object/from16 v21, v0

    #@1fc
    move-object/from16 v0, v21

    #@1fe
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@200
    move/from16 v21, v0

    #@202
    move/from16 v0, v20

    #@204
    move/from16 v1, v21

    #@206
    invoke-virtual {v13, v0, v1}, Landroid/util/SparseIntArray;->append(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@209
    goto :goto_5

    #@20a
    .line 9895
    .end local v6    # "displayNdx":I
    .end local v11    # "numDisplays":I
    .end local v12    # "numWindows":I
    .end local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    .end local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_0
    move-exception v20

    #@20b
    .line 9896
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@20e
    .line 9895
    throw v20

    #@20f
    .line 9864
    .restart local v6    # "displayNdx":I
    .restart local v11    # "numDisplays":I
    .restart local v12    # "numWindows":I
    .restart local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v16    # "winNdx":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_7
    :try_start_1
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    #@212
    move-result v20

    #@213
    if-lez v20, :cond_9

    #@215
    .line 9865
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    #@218
    move-result v20

    #@219
    move/from16 v0, v20

    #@21b
    new-array v14, v0, [I

    #@21d
    .line 9866
    .local v14, "pids":[I
    const/4 v8, 0x0

    #@21e
    .local v8, "i":I
    :goto_6
    array-length v0, v14

    #@21f
    move/from16 v20, v0

    #@221
    move/from16 v0, v20

    #@223
    if-ge v8, v0, :cond_8

    #@225
    .line 9867
    invoke-virtual {v13, v8}, Landroid/util/SparseIntArray;->keyAt(I)I

    #@228
    move-result v20

    #@229
    aput v20, v14, v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@22b
    .line 9866
    add-int/lit8 v8, v8, 0x1

    #@22d
    goto :goto_6

    #@22e
    .line 9870
    :cond_8
    :try_start_2
    move-object/from16 v0, p0

    #@230
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@232
    move-object/from16 v20, v0

    #@234
    const-string/jumbo v21, "Free memory"

    #@237
    move-object/from16 v0, v20

    #@239
    move-object/from16 v1, v21

    #@23b
    move/from16 v2, p3

    #@23d
    invoke-interface {v0, v14, v1, v2}, Landroid/app/IActivityManager;->killPids([ILjava/lang/String;Z)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@240
    move-result v20

    #@241
    if-eqz v20, :cond_9

    #@243
    .line 9871
    const/4 v9, 0x1

    #@244
    .line 9851
    .end local v8    # "i":I
    .end local v14    # "pids":[I
    :cond_9
    :goto_7
    add-int/lit8 v6, v6, 0x1

    #@246
    goto/16 :goto_3

    #@248
    .line 9879
    .end local v12    # "numWindows":I
    .end local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_a
    if-nez v10, :cond_b

    #@24a
    if-eqz v9, :cond_d

    #@24c
    .line 9882
    :cond_b
    :try_start_3
    const-string/jumbo v20, "WindowManager"

    #@24f
    const-string/jumbo v21, "Looks like we have reclaimed some memory, clearing surface for retry."

    #@252
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@255
    .line 9883
    if-eqz v15, :cond_c

    #@257
    .line 9886
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    #@25a
    .line 9887
    move-object/from16 v0, p1

    #@25c
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@25e
    move-object/from16 v20, v0

    #@260
    move-object/from16 v0, v20

    #@262
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@264
    move-object/from16 v20, v0

    #@266
    move-object/from16 v0, p0

    #@268
    move-object/from16 v1, v20

    #@26a
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@26d
    .line 9891
    :cond_c
    :try_start_4
    move-object/from16 v0, p1

    #@26f
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@271
    move-object/from16 v20, v0

    #@273
    move-object/from16 v0, v20

    #@275
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@277
    move-object/from16 v20, v0

    #@279
    invoke-interface/range {v20 .. v20}, Landroid/view/IWindow;->dispatchGetNewSurface()V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@27c
    .line 9896
    :cond_d
    :goto_8
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@27f
    .line 9899
    if-nez v10, :cond_e

    #@281
    .end local v9    # "killedApps":Z
    :goto_9
    return v9

    #@282
    .restart local v9    # "killedApps":Z
    :cond_e
    const/4 v9, 0x1

    #@283
    goto :goto_9

    #@284
    .line 9892
    :catch_0
    move-exception v7

    #@285
    .local v7, "e":Landroid/os/RemoteException;
    goto :goto_8

    #@286
    .line 9873
    .end local v7    # "e":Landroid/os/RemoteException;
    .restart local v8    # "i":I
    .restart local v12    # "numWindows":I
    .restart local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v14    # "pids":[I
    .restart local v16    # "winNdx":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :catch_1
    move-exception v7

    #@287
    .restart local v7    # "e":Landroid/os/RemoteException;
    goto :goto_7
.end method

.method public reenableKeyguard(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 5546
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5548
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5551
    :cond_0
    if-nez p1, :cond_1

    #@16
    .line 5552
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v1, "token == null"

    #@1b
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v0

    #@1f
    .line 5555
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@21
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@23
    .line 5556
    const/4 v2, 0x2

    #@24
    .line 5555
    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@27
    move-result-object v1

    #@28
    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    #@2b
    .line 5545
    return-void
.end method

.method public reevaluateStatusBarVisibility()V
    .locals 4

    #@0
    .prologue
    .line 10345
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10346
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@7
    invoke-interface {v1, v3}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    #@a
    move-result v0

    #@b
    .line 10347
    .local v0, "visibility":I
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)Z

    #@e
    move-result v1

    #@f
    if-eqz v1, :cond_0

    #@11
    .line 10348
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@13
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    :cond_0
    monitor-exit v2

    #@17
    .line 10344
    return-void

    #@18
    .line 10345
    .end local v0    # "visibility":I
    :catchall_0
    move-exception v1

    #@19
    monitor-exit v2

    #@1a
    throw v1
.end method

.method public registerDockedStackListener(Landroid/view/IDockedStackListener;)V
    .locals 2
    .param p1, "listener"    # Landroid/view/IDockedStackListener;

    #@0
    .prologue
    .line 11338
    const-string/jumbo v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    #@3
    .line 11339
    const-string/jumbo v1, "registerDockedStackListener()"

    #@6
    .line 11338
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 11340
    return-void

    #@d
    .line 11343
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@10
    move-result-object v0

    #@11
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@13
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->registerDockedStackListener(Landroid/view/IDockedStackListener;)V

    #@16
    .line 11337
    return-void
.end method

.method public registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    #@0
    .prologue
    .line 5764
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->registerInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@5
    .line 5763
    return-void
.end method

.method public registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V
    .locals 3
    .param p1, "shortcutCode"    # J
    .param p3, "shortcutKeyReceiver"    # Lcom/android/internal/policy/IShortcutService;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    #@0
    .prologue
    .line 11515
    const-string/jumbo v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    #@3
    .line 11516
    const-string/jumbo v1, "registerShortcutKey"

    #@6
    .line 11515
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 11517
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    .line 11518
    const-string/jumbo v1, "Requires REGISTER_WINDOW_MANAGER_LISTENERS permission"

    #@11
    .line 11517
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 11520
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@17
    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V

    #@1a
    .line 11514
    return-void
.end method

.method public relayoutWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/content/res/Configuration;Landroid/view/Surface;)I
    .locals 28
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "requestedWidth"    # I
    .param p6, "requestedHeight"    # I
    .param p7, "viewVisibility"    # I
    .param p8, "flags"    # I
    .param p9, "outFrame"    # Landroid/graphics/Rect;
    .param p10, "outOverscanInsets"    # Landroid/graphics/Rect;
    .param p11, "outContentInsets"    # Landroid/graphics/Rect;
    .param p12, "outVisibleInsets"    # Landroid/graphics/Rect;
    .param p13, "outStableInsets"    # Landroid/graphics/Rect;
    .param p14, "outOutsets"    # Landroid/graphics/Rect;
    .param p15, "outBackdropFrame"    # Landroid/graphics/Rect;
    .param p16, "outConfig"    # Landroid/content/res/Configuration;
    .param p17, "outSurface"    # Landroid/view/Surface;

    #@0
    .prologue
    .line 2843
    const/4 v6, 0x0

    #@1
    .line 2846
    .local v6, "result":I
    move-object/from16 v0, p0

    #@3
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@5
    const-string/jumbo v5, "android.permission.STATUS_BAR"

    #@8
    invoke-virtual {v4, v5}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@b
    move-result v4

    #@c
    if-nez v4, :cond_0

    #@e
    const/16 v16, 0x1

    #@10
    .line 2849
    .local v16, "hasStatusBarPermission":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@13
    move-result-wide v20

    #@14
    .line 2850
    .local v20, "origId":J
    move-object/from16 v0, p0

    #@16
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@18
    move-object/from16 v25, v0

    #@1a
    monitor-enter v25

    #@1b
    .line 2851
    const/4 v4, 0x0

    #@1c
    :try_start_0
    move-object/from16 v0, p0

    #@1e
    move-object/from16 v1, p1

    #@20
    move-object/from16 v2, p2

    #@22
    invoke-virtual {v0, v1, v2, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@25
    move-result-object v7

    #@26
    .line 2852
    .local v7, "win":Lcom/android/server/wm/WindowState;
    if-nez v7, :cond_1

    #@28
    .line 2853
    const/4 v4, 0x0

    #@29
    monitor-exit v25

    #@2a
    return v4

    #@2b
    .line 2846
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    .end local v16    # "hasStatusBarPermission":Z
    .end local v20    # "origId":J
    :cond_0
    const/16 v16, 0x0

    #@2d
    .restart local v16    # "hasStatusBarPermission":Z
    goto :goto_0

    #@2e
    .line 2856
    .restart local v7    # "win":Lcom/android/server/wm/WindowState;
    .restart local v20    # "origId":J
    :cond_1
    :try_start_1
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@30
    .line 2857
    .local v8, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/16 v4, 0x8

    #@32
    move/from16 v0, p7

    #@34
    if-eq v0, v4, :cond_2

    #@36
    .line 2858
    move/from16 v0, p5

    #@38
    move/from16 v1, p6

    #@3a
    invoke-virtual {v7, v0, v1}, Lcom/android/server/wm/WindowState;->setRequestedSize(II)V

    #@3d
    .line 2861
    :cond_2
    const/4 v9, 0x0

    #@3e
    .line 2862
    .local v9, "attrChanges":I
    const/4 v14, 0x0

    #@3f
    .line 2863
    .local v14, "flagChanges":I
    if-eqz p4, :cond_7

    #@41
    .line 2864
    move-object/from16 v0, p0

    #@43
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@45
    move-object/from16 v0, p4

    #@47
    invoke-interface {v4, v0}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    #@4a
    .line 2866
    iget v4, v7, Lcom/android/server/wm/WindowState;->mSeq:I

    #@4c
    move/from16 v0, p3

    #@4e
    if-ne v0, v4, :cond_4

    #@50
    .line 2867
    move-object/from16 v0, p4

    #@52
    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->systemUiVisibility:I

    #@54
    .line 2868
    move-object/from16 v0, p4

    #@56
    iget v5, v0, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    #@58
    .line 2867
    or-int v19, v4, v5

    #@5a
    .line 2869
    .local v19, "systemUiVisibility":I
    const/high16 v4, 0x3ff0000

    #@5c
    and-int v4, v4, v19

    #@5e
    if-eqz v4, :cond_3

    #@60
    .line 2870
    if-nez v16, :cond_3

    #@62
    .line 2871
    const v4, -0x3ff0001

    #@65
    and-int v19, v19, v4

    #@67
    .line 2874
    :cond_3
    move/from16 v0, v19

    #@69
    iput v0, v7, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@6b
    .line 2876
    .end local v19    # "systemUiVisibility":I
    :cond_4
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6d
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@6f
    move-object/from16 v0, p4

    #@71
    iget v5, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@73
    if-eq v4, v5, :cond_5

    #@75
    .line 2877
    new-instance v4, Ljava/lang/IllegalArgumentException;

    #@77
    .line 2878
    const-string/jumbo v5, "Window type can not be changed after the window is added."

    #@7a
    .line 2877
    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@7d
    throw v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@7e
    .line 2850
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v9    # "attrChanges":I
    .end local v14    # "flagChanges":I
    :catchall_0
    move-exception v4

    #@7f
    monitor-exit v25

    #@80
    throw v4

    #@81
    .line 2882
    .restart local v7    # "win":Lcom/android/server/wm/WindowState;
    .restart local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v9    # "attrChanges":I
    .restart local v14    # "flagChanges":I
    :cond_5
    :try_start_2
    move-object/from16 v0, p4

    #@83
    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@85
    and-int/lit16 v4, v4, 0x2000

    #@87
    if-eqz v4, :cond_6

    #@89
    .line 2884
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@8b
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->x:I

    #@8d
    move-object/from16 v0, p4

    #@8f
    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->x:I

    #@91
    .line 2885
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@93
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->y:I

    #@95
    move-object/from16 v0, p4

    #@97
    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->y:I

    #@99
    .line 2886
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@9b
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->width:I

    #@9d
    move-object/from16 v0, p4

    #@9f
    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    #@a1
    .line 2887
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@a3
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->height:I

    #@a5
    move-object/from16 v0, p4

    #@a7
    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    #@a9
    .line 2890
    :cond_6
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@ab
    iget v5, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@ad
    move-object/from16 v0, p4

    #@af
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@b1
    move/from16 v26, v0

    #@b3
    xor-int v14, v5, v26

    #@b5
    iput v14, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@b7
    .line 2891
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@b9
    move-object/from16 v0, p4

    #@bb
    invoke-virtual {v4, v0}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    #@be
    move-result v9

    #@bf
    .line 2892
    and-int/lit16 v4, v9, 0x4001

    #@c1
    if-eqz v4, :cond_7

    #@c3
    .line 2894
    const/4 v4, 0x1

    #@c4
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@c6
    .line 2900
    :cond_7
    and-int/lit8 v4, p8, 0x2

    #@c8
    if-eqz v4, :cond_19

    #@ca
    const/4 v4, 0x1

    #@cb
    :goto_1
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceDestroyDeferred:Z

    #@cd
    .line 2902
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@cf
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@d1
    and-int/lit16 v4, v4, 0x80

    #@d3
    if-eqz v4, :cond_1a

    #@d5
    const/4 v4, 0x1

    #@d6
    .line 2901
    :goto_2
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mEnforceSizeCompat:Z

    #@d8
    .line 2903
    and-int/lit16 v4, v9, 0x80

    #@da
    if-eqz v4, :cond_8

    #@dc
    .line 2904
    move-object/from16 v0, p4

    #@de
    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->alpha:F

    #@e0
    iput v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mAlpha:F

    #@e2
    .line 2906
    :cond_8
    iget v4, v7, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    #@e4
    iget v5, v7, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    #@e6
    invoke-virtual {v7, v4, v5}, Lcom/android/server/wm/WindowState;->setWindowScale(II)V

    #@e9
    .line 2908
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@eb
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@ed
    iget v4, v4, Landroid/graphics/Rect;->left:I

    #@ef
    if-nez v4, :cond_9

    #@f1
    .line 2909
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@f3
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@f5
    iget v4, v4, Landroid/graphics/Rect;->top:I

    #@f7
    if-eqz v4, :cond_1b

    #@f9
    .line 2912
    :cond_9
    :goto_3
    const/4 v4, 0x0

    #@fa
    invoke-virtual {v8, v4}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    #@fd
    .line 2915
    :cond_a
    const v4, 0x20008

    #@100
    and-int/2addr v4, v14

    #@101
    if-eqz v4, :cond_1c

    #@103
    const/16 v17, 0x1

    #@105
    .line 2916
    .local v17, "imMayMove":Z
    :goto_4
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    #@108
    move-result v18

    #@109
    .line 2917
    .local v18, "isDefaultDisplay":Z
    if-eqz v18, :cond_1f

    #@10b
    iget v4, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@10d
    move/from16 v0, p7

    #@10f
    if-ne v4, v0, :cond_b

    #@111
    .line 2918
    and-int/lit8 v4, v14, 0x8

    #@113
    if-eqz v4, :cond_1d

    #@115
    .line 2917
    :cond_b
    const/4 v15, 0x1

    #@116
    .line 2921
    .local v15, "focusMayChange":Z
    :goto_5
    iget v4, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@118
    move/from16 v0, p7

    #@11a
    if-eq v4, v0, :cond_21

    #@11c
    .line 2922
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@11e
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@120
    const/high16 v5, 0x100000

    #@122
    and-int/2addr v4, v5

    #@123
    if-eqz v4, :cond_20

    #@125
    const/16 v24, 0x1

    #@127
    .line 2923
    .local v24, "wallpaperMayMove":Z
    :goto_6
    const/high16 v4, 0x100000

    #@129
    and-int/2addr v4, v14

    #@12a
    if-eqz v4, :cond_22

    #@12c
    const/4 v4, 0x1

    #@12d
    :goto_7
    or-int v24, v24, v4

    #@12f
    .line 2924
    .local v24, "wallpaperMayMove":Z
    and-int/lit16 v4, v14, 0x2000

    #@131
    if-eqz v4, :cond_c

    #@133
    iget-object v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@135
    if-eqz v4, :cond_c

    #@137
    .line 2925
    iget-object v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@139
    move-object/from16 v0, p0

    #@13b
    invoke-virtual {v0, v7}, Lcom/android/server/wm/WindowManagerService;->isSecureLocked(Lcom/android/server/wm/WindowState;)Z

    #@13e
    move-result v5

    #@13f
    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowSurfaceController;->setSecure(Z)V

    #@142
    .line 2928
    :cond_c
    const/4 v4, 0x1

    #@143
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    #@145
    .line 2929
    const/4 v4, 0x1

    #@146
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mInRelayout:Z

    #@148
    .line 2931
    iget v10, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@14a
    .line 2932
    .local v10, "oldVisibility":I
    move/from16 v0, p7

    #@14c
    iput v0, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@14e
    .line 2939
    if-nez p7, :cond_d

    #@150
    .line 2940
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@152
    if-eqz v4, :cond_23

    #@154
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@156
    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@158
    if-eqz v4, :cond_23

    #@15a
    .line 2963
    :cond_d
    const/4 v4, 0x0

    #@15b
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@15d
    .line 2964
    const/4 v4, 0x0

    #@15e
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@160
    .line 2966
    if-eqz v10, :cond_26

    #@162
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    #@165
    move-result v23

    #@166
    .line 2974
    :goto_8
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    #@169
    move-result v4

    #@16a
    if-eqz v4, :cond_e

    #@16c
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@16e
    if-eqz v4, :cond_27

    #@170
    .line 2993
    .end local v15    # "focusMayChange":Z
    :cond_e
    :goto_9
    if-nez p7, :cond_29

    #@172
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    #@175
    move-result v4

    #@176
    if-eqz v4, :cond_29

    #@178
    .line 2997
    iget-object v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@17a
    move-object/from16 v0, p17

    #@17c
    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowSurfaceController;->getSurface(Landroid/view/Surface;)V

    #@17f
    .line 3011
    :goto_a
    if-eqz v15, :cond_f

    #@181
    .line 3013
    const/4 v4, 0x3

    #@182
    .line 3014
    const/4 v5, 0x0

    #@183
    .line 3013
    move-object/from16 v0, p0

    #@185
    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@188
    move-result v4

    #@189
    if-eqz v4, :cond_f

    #@18b
    .line 3015
    const/16 v17, 0x0

    #@18d
    .line 3022
    :cond_f
    and-int/lit8 v4, v6, 0x2

    #@18f
    if-eqz v4, :cond_2a

    #@191
    const/16 v22, 0x1

    #@193
    .line 3023
    .local v22, "toBeDisplayed":Z
    :goto_b
    if-eqz v17, :cond_11

    #@195
    const/4 v4, 0x0

    #@196
    move-object/from16 v0, p0

    #@198
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@19b
    move-result v4

    #@19c
    if-nez v4, :cond_10

    #@19e
    if-eqz v22, :cond_11

    #@1a0
    .line 3029
    :cond_10
    move-object/from16 v0, p0

    #@1a2
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@1a4
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1a7
    move-result-object v5

    #@1a8
    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@1ab
    .line 3032
    :cond_11
    if-eqz v24, :cond_12

    #@1ad
    .line 3033
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1b0
    move-result-object v4

    #@1b1
    iget v5, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@1b3
    or-int/lit8 v5, v5, 0x4

    #@1b5
    iput v5, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@1b7
    .line 3037
    :cond_12
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@1ba
    .line 3038
    and-int/lit8 v4, p8, 0x1

    #@1bc
    if-eqz v4, :cond_2b

    #@1be
    const/4 v4, 0x1

    #@1bf
    :goto_c
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@1c1
    .line 3039
    const/4 v4, 0x0

    #@1c2
    move-object/from16 v0, p0

    #@1c4
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@1c7
    move-result v11

    #@1c8
    .line 3040
    .local v11, "configChanged":Z
    move-object/from16 v0, p0

    #@1ca
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@1cc
    invoke-virtual {v4}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@1cf
    .line 3041
    if-eqz v22, :cond_13

    #@1d1
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@1d3
    if-eqz v4, :cond_13

    #@1d5
    .line 3042
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@1d8
    move-result-object v12

    #@1d9
    .line 3043
    .local v12, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, p0

    #@1db
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@1dd
    .line 3044
    iget v5, v12, Landroid/view/DisplayInfo;->logicalWidth:I

    #@1df
    iget v0, v12, Landroid/view/DisplayInfo;->logicalHeight:I

    #@1e1
    move/from16 v26, v0

    #@1e3
    const/16 v27, 0x0

    #@1e5
    .line 3043
    move/from16 v0, v26

    #@1e7
    move/from16 v1, v27

    #@1e9
    invoke-virtual {v4, v7, v5, v0, v1}, Lcom/android/server/wm/WallpaperController;->updateWallpaperOffset(Lcom/android/server/wm/WindowState;IIZ)Z

    #@1ec
    .line 3046
    .end local v12    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_13
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1ee
    if-eqz v4, :cond_14

    #@1f0
    .line 3047
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1f2
    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@1f5
    .line 3049
    :cond_14
    iget-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mReportSurfaceResized:Z

    #@1f7
    if-eqz v4, :cond_15

    #@1f9
    .line 3050
    const/4 v4, 0x0

    #@1fa
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mReportSurfaceResized:Z

    #@1fc
    .line 3051
    or-int/lit8 v6, v6, 0x20

    #@1fe
    .line 3053
    :cond_15
    move-object/from16 v0, p0

    #@200
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@202
    invoke-interface {v4, v7}, Landroid/view/WindowManagerPolicy;->isNavBarForcedShownLw(Landroid/view/WindowManagerPolicy$WindowState;)Z

    #@205
    move-result v4

    #@206
    if-eqz v4, :cond_16

    #@208
    .line 3054
    or-int/lit8 v6, v6, 0x40

    #@20a
    .line 3056
    :cond_16
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    #@20d
    move-result v4

    #@20e
    if-nez v4, :cond_17

    #@210
    .line 3057
    const/4 v4, 0x0

    #@211
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mResizedWhileGone:Z

    #@213
    .line 3059
    :cond_17
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    #@215
    move-object/from16 v0, p9

    #@217
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@21a
    .line 3060
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    #@21c
    move-object/from16 v0, p10

    #@21e
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@221
    .line 3061
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@223
    move-object/from16 v0, p11

    #@225
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@228
    .line 3062
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    #@22a
    move-object/from16 v0, p12

    #@22c
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@22f
    .line 3063
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    #@231
    move-object/from16 v0, p13

    #@233
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@236
    .line 3064
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    #@238
    move-object/from16 v0, p14

    #@23a
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@23d
    .line 3065
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@23f
    invoke-virtual {v7, v4}, Lcom/android/server/wm/WindowState;->getBackdropFrame(Landroid/graphics/Rect;)Landroid/graphics/Rect;

    #@242
    move-result-object v4

    #@243
    move-object/from16 v0, p15

    #@245
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@248
    .line 3077
    move-object/from16 v0, p0

    #@24a
    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@24c
    if-eqz v4, :cond_2c

    #@24e
    const/4 v4, 0x1

    #@24f
    :goto_d
    or-int/2addr v6, v4

    #@250
    .line 3079
    move-object/from16 v0, p0

    #@252
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@254
    const/4 v5, 0x1

    #@255
    invoke-virtual {v4, v5}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@258
    .line 3084
    const/4 v4, 0x0

    #@259
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mInRelayout:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@25b
    monitor-exit v25

    #@25c
    .line 3087
    if-eqz v11, :cond_18

    #@25e
    .line 3088
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@261
    .line 3090
    :cond_18
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@264
    .line 3091
    return v6

    #@265
    .line 2900
    .end local v10    # "oldVisibility":I
    .end local v11    # "configChanged":Z
    .end local v17    # "imMayMove":Z
    .end local v18    # "isDefaultDisplay":Z
    .end local v22    # "toBeDisplayed":Z
    .end local v24    # "wallpaperMayMove":Z
    :cond_19
    const/4 v4, 0x0

    #@266
    goto/16 :goto_1

    #@268
    .line 2902
    :cond_1a
    const/4 v4, 0x0

    #@269
    goto/16 :goto_2

    #@26b
    .line 2910
    :cond_1b
    :try_start_3
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@26d
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@26f
    iget v4, v4, Landroid/graphics/Rect;->right:I

    #@271
    if-nez v4, :cond_9

    #@273
    .line 2911
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@275
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@277
    iget v4, v4, Landroid/graphics/Rect;->bottom:I

    #@279
    if-eqz v4, :cond_a

    #@27b
    goto/16 :goto_3

    #@27d
    .line 2915
    :cond_1c
    const/16 v17, 0x0

    #@27f
    .restart local v17    # "imMayMove":Z
    goto/16 :goto_4

    #@281
    .line 2919
    .restart local v18    # "isDefaultDisplay":Z
    :cond_1d
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    #@283
    if-eqz v4, :cond_1e

    #@285
    const/4 v15, 0x0

    #@286
    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_5

    #@288
    .end local v15    # "focusMayChange":Z
    :cond_1e
    const/4 v15, 0x1

    #@289
    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_5

    #@28b
    .line 2917
    .end local v15    # "focusMayChange":Z
    :cond_1f
    const/4 v15, 0x0

    #@28c
    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_5

    #@28e
    .line 2922
    :cond_20
    const/16 v24, 0x0

    #@290
    .local v24, "wallpaperMayMove":Z
    goto/16 :goto_6

    #@292
    .line 2921
    .end local v24    # "wallpaperMayMove":Z
    :cond_21
    const/16 v24, 0x0

    #@294
    .restart local v24    # "wallpaperMayMove":Z
    goto/16 :goto_6

    #@296
    .line 2923
    :cond_22
    const/4 v4, 0x0

    #@297
    goto/16 :goto_7

    #@299
    .restart local v10    # "oldVisibility":I
    .local v24, "wallpaperMayMove":Z
    :cond_23
    move-object/from16 v4, p0

    #@29b
    move-object/from16 v5, p16

    #@29d
    .line 2941
    invoke-direct/range {v4 .. v10}, Lcom/android/server/wm/WindowManagerService;->relayoutVisibleWindow(Landroid/content/res/Configuration;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;II)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@2a0
    move-result v6

    #@2a1
    .line 2944
    :try_start_4
    move-object/from16 v0, p0

    #@2a3
    move-object/from16 v1, p17

    #@2a5
    invoke-direct {v0, v1, v6, v7, v8}, Lcom/android/server/wm/WindowManagerService;->createSurfaceControl(Landroid/view/Surface;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@2a8
    move-result v6

    #@2a9
    .line 2954
    and-int/lit8 v4, v6, 0x2

    #@2ab
    if-eqz v4, :cond_24

    #@2ad
    .line 2955
    move/from16 v15, v18

    #@2af
    .line 2957
    .end local v15    # "focusMayChange":Z
    :cond_24
    :try_start_5
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@2b1
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@2b3
    const/16 v5, 0x7db

    #@2b5
    if-ne v4, v5, :cond_25

    #@2b7
    move-object/from16 v0, p0

    #@2b9
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@2bb
    if-nez v4, :cond_25

    #@2bd
    .line 2958
    move-object/from16 v0, p0

    #@2bf
    iput-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@2c1
    .line 2959
    const/16 v17, 0x1

    #@2c3
    .line 2961
    :cond_25
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->adjustStartingWindowFlags()V

    #@2c6
    goto/16 :goto_a

    #@2c8
    .line 2945
    .restart local v15    # "focusMayChange":Z
    :catch_0
    move-exception v13

    #@2c9
    .line 2946
    .local v13, "e":Ljava/lang/Exception;
    move-object/from16 v0, p0

    #@2cb
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@2cd
    const/4 v5, 0x1

    #@2ce
    invoke-virtual {v4, v5}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@2d1
    .line 2948
    const-string/jumbo v4, "WindowManager"

    #@2d4
    new-instance v5, Ljava/lang/StringBuilder;

    #@2d6
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@2d9
    const-string/jumbo v26, "Exception thrown when creating surface for client "

    #@2dc
    move-object/from16 v0, v26

    #@2de
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e1
    move-result-object v5

    #@2e2
    move-object/from16 v0, p2

    #@2e4
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2e7
    move-result-object v5

    #@2e8
    .line 2949
    const-string/jumbo v26, " ("

    #@2eb
    .line 2948
    move-object/from16 v0, v26

    #@2ed
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2f0
    move-result-object v5

    #@2f1
    .line 2949
    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@2f3
    move-object/from16 v26, v0

    #@2f5
    invoke-virtual/range {v26 .. v26}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@2f8
    move-result-object v26

    #@2f9
    .line 2948
    move-object/from16 v0, v26

    #@2fb
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    #@2fe
    move-result-object v5

    #@2ff
    .line 2949
    const-string/jumbo v26, ")"

    #@302
    .line 2948
    move-object/from16 v0, v26

    #@304
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@307
    move-result-object v5

    #@308
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@30b
    move-result-object v5

    #@30c
    invoke-static {v4, v5, v13}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@30f
    .line 2951
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@312
    .line 2952
    const/4 v4, 0x0

    #@313
    monitor-exit v25

    #@314
    return v4

    #@315
    .line 2966
    .end local v13    # "e":Ljava/lang/Exception;
    :cond_26
    const/16 v23, 0x0

    #@317
    .local v23, "usingSavedSurfaceBeforeVisible":Z
    goto/16 :goto_8

    #@319
    .line 2975
    .end local v23    # "usingSavedSurfaceBeforeVisible":Z
    :cond_27
    if-nez v23, :cond_e

    #@31b
    .line 2987
    :try_start_6
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    #@31d
    if-nez v4, :cond_28

    #@31f
    .line 2988
    move-object/from16 v0, p0

    #@321
    move/from16 v1, v18

    #@323
    invoke-direct {v0, v7, v8, v1, v15}, Lcom/android/server/wm/WindowManagerService;->tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;ZZ)Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@326
    move-result v15

    #@327
    .line 2991
    .end local v15    # "focusMayChange":Z
    :cond_28
    const/4 v6, 0x4

    #@328
    goto/16 :goto_9

    #@32a
    .line 3002
    :cond_29
    :try_start_7
    new-instance v4, Ljava/lang/StringBuilder;

    #@32c
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@32f
    const-string/jumbo v5, "wmReleaseOutSurface_"

    #@332
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@335
    move-result-object v4

    #@336
    .line 3003
    iget-object v5, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@338
    invoke-virtual {v5}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@33b
    move-result-object v5

    #@33c
    .line 3002
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    #@33f
    move-result-object v4

    #@340
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@343
    move-result-object v4

    #@344
    const-wide/16 v26, 0x20

    #@346
    move-wide/from16 v0, v26

    #@348
    invoke-static {v0, v1, v4}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@34b
    .line 3004
    invoke-virtual/range {p17 .. p17}, Landroid/view/Surface;->release()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    #@34e
    .line 3006
    const-wide/16 v4, 0x20

    #@350
    :try_start_8
    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    #@353
    goto/16 :goto_a

    #@355
    .line 3005
    :catchall_1
    move-exception v4

    #@356
    .line 3006
    const-wide/16 v26, 0x20

    #@358
    invoke-static/range {v26 .. v27}, Landroid/os/Trace;->traceEnd(J)V

    #@35b
    .line 3005
    throw v4
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    #@35c
    .line 3022
    :cond_2a
    const/16 v22, 0x0

    #@35e
    .restart local v22    # "toBeDisplayed":Z
    goto/16 :goto_b

    #@360
    .line 3038
    :cond_2b
    const/4 v4, 0x0

    #@361
    goto/16 :goto_c

    #@363
    .line 3077
    .restart local v11    # "configChanged":Z
    :cond_2c
    const/4 v4, 0x0

    #@364
    goto/16 :goto_d
.end method

.method public removeAppStartingWindow(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 4391
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 4392
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@5
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@8
    move-result-object v1

    #@9
    check-cast v1, Lcom/android/server/wm/WindowToken;

    #@b
    iget-object v0, v1, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@d
    .line 4393
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 4390
    return-void

    #@12
    .line 4391
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method public removeAppToken(Landroid/os/IBinder;)V
    .locals 14
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 4844
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4845
    const-string/jumbo v2, "removeAppToken()"

    #@6
    .line 4844
    invoke-direct {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 4846
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 4849
    :cond_0
    const/4 v1, 0x0

    #@16
    .line 4850
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    const/4 v12, 0x0

    #@17
    .line 4851
    .local v12, "startingToken":Lcom/android/server/wm/AppWindowToken;
    const/4 v8, 0x0

    #@18
    .line 4853
    .local v8, "delayed":Z
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@1b
    move-result-wide v10

    #@1c
    .line 4854
    .local v10, "origId":J
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1e
    monitor-enter v13

    #@1f
    .line 4855
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@21
    invoke-virtual {v0, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@24
    move-result-object v7

    #@25
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@27
    .line 4856
    .local v7, "basewtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_8

    #@29
    iget-object v1, v7, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@2b
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_8

    #@2d
    .line 4859
    iget-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    #@2f
    .line 4858
    const/4 v2, 0x0

    #@30
    const/4 v3, 0x0

    #@31
    .line 4859
    const/4 v4, -0x1

    #@32
    const/4 v5, 0x1

    #@33
    move-object v0, p0

    #@34
    .line 4858
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    #@37
    move-result v8

    #@38
    .line 4860
    .local v8, "delayed":Z
    const/4 v0, 0x0

    #@39
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@3b
    .line 4861
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@3d
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@40
    .line 4862
    const/4 v0, 0x0

    #@41
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@43
    .line 4863
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@45
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@48
    move-result v0

    #@49
    if-eqz v0, :cond_6

    #@4b
    .line 4864
    const/4 v8, 0x1

    #@4c
    .line 4875
    .end local v8    # "delayed":Z
    :cond_1
    :goto_0
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@4e
    iget-object v9, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@50
    .line 4876
    .local v9, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v8, :cond_2

    #@52
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@54
    invoke-virtual {v0}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@57
    move-result v0

    #@58
    if-eqz v0, :cond_7

    #@5a
    .line 4886
    :cond_2
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@5c
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    #@5f
    .line 4887
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@61
    const/4 v2, 0x0

    #@62
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    #@64
    .line 4888
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->removeAppFromTaskLocked()V

    #@67
    .line 4891
    :goto_1
    const/4 v0, 0x1

    #@68
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@6a
    .line 4892
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@6c
    if-eqz v0, :cond_3

    #@6e
    .line 4893
    move-object v12, v1

    #@6f
    .line 4895
    .end local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_3
    const/4 v0, 0x1

    #@70
    const/4 v2, 0x1

    #@71
    invoke-virtual {p0, v1, v0, v2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@74
    .line 4896
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@76
    if-ne v0, v1, :cond_4

    #@78
    .line 4898
    const/4 v0, 0x0

    #@79
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@7b
    .line 4899
    const/4 v0, 0x0

    #@7c
    const/4 v2, 0x1

    #@7d
    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@80
    .line 4900
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@82
    const/4 v2, 0x0

    #@83
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    #@86
    .line 4906
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_4
    :goto_2
    if-nez v8, :cond_5

    #@88
    if-eqz v1, :cond_5

    #@8a
    .line 4907
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@8d
    .line 4911
    :cond_5
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@90
    monitor-exit v13

    #@91
    .line 4913
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@94
    .line 4843
    return-void

    #@95
    .line 4865
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v8    # "delayed":Z
    .restart local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_6
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@97
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@9a
    move-result v0

    #@9b
    if-eqz v0, :cond_1

    #@9d
    .line 4866
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@9f
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@a2
    .line 4867
    const/4 v8, 0x1

    #@a3
    .local v8, "delayed":Z
    goto :goto_0

    #@a4
    .line 4880
    .end local v8    # "delayed":Z
    .restart local v9    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_7
    iget-object v0, v9, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    #@a6
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->add(Ljava/lang/Object;)Z

    #@a9
    .line 4881
    const/4 v0, 0x1

    #@aa
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@ac
    goto :goto_1

    #@ad
    .line 4854
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v7    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v0

    #@ae
    monitor-exit v13

    #@af
    throw v0

    #@b0
    .line 4903
    .restart local v7    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .restart local v8    # "delayed":Z
    .restart local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    :try_start_2
    const-string/jumbo v0, "WindowManager"

    #@b3
    new-instance v2, Ljava/lang/StringBuilder;

    #@b5
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@b8
    const-string/jumbo v3, "Attempted to remove non-existing app token: "

    #@bb
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@be
    move-result-object v2

    #@bf
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@c2
    move-result-object v2

    #@c3
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c6
    move-result-object v2

    #@c7
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@ca
    goto :goto_2
.end method

.method removeInputConsumer()Z
    .locals 4

    #@0
    .prologue
    const/4 v3, 0x1

    #@1
    .line 10388
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v1

    #@4
    .line 10389
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@6
    if-eqz v0, :cond_0

    #@8
    .line 10390
    const/4 v0, 0x0

    #@9
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@b
    .line 10391
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@d
    const/4 v2, 0x1

    #@e
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v1

    #@12
    .line 10392
    return v3

    #@13
    .line 10394
    :cond_0
    const/4 v0, 0x0

    #@14
    monitor-exit v1

    #@15
    return v0

    #@16
    .line 10388
    :catchall_0
    move-exception v0

    #@17
    monitor-exit v1

    #@18
    throw v0
.end method

.method public removeRotationWatcher(Landroid/view/IRotationWatcher;)V
    .locals 8
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    #@0
    .prologue
    .line 7049
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v4

    #@4
    .line 7050
    .local v4, "watcherBinder":Landroid/os/IBinder;
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v6

    #@7
    .line 7051
    const/4 v1, 0x0

    #@8
    .local v1, "i":I
    :goto_0
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@a
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@d
    move-result v5

    #@e
    if-ge v1, v5, :cond_2

    #@10
    .line 7052
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@12
    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@15
    move-result-object v3

    #@16
    check-cast v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@18
    .line 7053
    .local v3, "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@1a
    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@1d
    move-result-object v5

    #@1e
    if-ne v4, v5, :cond_1

    #@20
    .line 7054
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@22
    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    #@25
    move-result-object v2

    #@26
    check-cast v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@28
    .line 7055
    .local v2, "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@2a
    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@2d
    move-result-object v0

    #@2e
    .line 7056
    .local v0, "binder":Landroid/os/IBinder;
    if-eqz v0, :cond_0

    #@30
    .line 7057
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->deathRecipient:Landroid/os/IBinder$DeathRecipient;

    #@32
    const/4 v7, 0x0

    #@33
    invoke-interface {v0, v5, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@36
    .line 7059
    :cond_0
    add-int/lit8 v1, v1, -0x1

    #@38
    .line 7051
    .end local v0    # "binder":Landroid/os/IBinder;
    .end local v2    # "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_1
    add-int/lit8 v1, v1, 0x1

    #@3a
    goto :goto_0

    #@3b
    .end local v3    # "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_2
    monitor-exit v6

    #@3c
    .line 7048
    return-void

    #@3d
    .line 7050
    :catchall_0
    move-exception v5

    #@3e
    monitor-exit v6

    #@3f
    throw v5
.end method

.method public removeStack(I)V
    .locals 2
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5216
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5217
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 5215
    return-void

    #@a
    .line 5216
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public removeTask(I)V
    .locals 3
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5222
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5223
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5224
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    monitor-exit v2

    #@e
    .line 5226
    return-void

    #@f
    .line 5228
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->removeLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@12
    monitor-exit v2

    #@13
    .line 5221
    return-void

    #@14
    .line 5222
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@15
    monitor-exit v2

    #@16
    throw v1
.end method

.method public removeWallpaperInputConsumer()V
    .locals 3

    #@0
    .prologue
    .line 10409
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 10410
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 10411
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@9
    invoke-virtual {v0}, Lcom/android/server/wm/InputConsumerImpl;->disposeChannelsLw()V

    #@c
    .line 10412
    const/4 v0, 0x0

    #@d
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@f
    .line 10413
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@11
    const/4 v2, 0x1

    #@12
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15
    :cond_0
    monitor-exit v1

    #@16
    .line 10408
    return-void

    #@17
    .line 10409
    :catchall_0
    move-exception v0

    #@18
    monitor-exit v1

    #@19
    throw v0
.end method

.method public removeWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 3
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 2386
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2387
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@7
    move-result-object v0

    #@8
    .line 2388
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_0

    #@a
    monitor-exit v2

    #@b
    .line 2389
    return-void

    #@c
    .line 2391
    :cond_0
    :try_start_1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@f
    monitor-exit v2

    #@10
    .line 2385
    return-void

    #@11
    .line 2386
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@12
    monitor-exit v2

    #@13
    throw v1
.end method

.method public removeWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@0
    .prologue
    .line 7420
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 7421
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 7419
    return-void

    #@a
    .line 7420
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V
    .locals 14
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v13, 0x1

    #@1
    const/4 v12, 0x0

    #@2
    const/4 v11, 0x0

    #@3
    .line 2538
    iget-boolean v7, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@5
    if-eqz v7, :cond_0

    #@7
    .line 2542
    return-void

    #@8
    .line 2545
    :cond_0
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@a
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@d
    move-result v7

    #@e
    add-int/lit8 v3, v7, -0x1

    #@10
    .local v3, "i":I
    :goto_0
    if-ltz v3, :cond_1

    #@12
    .line 2546
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@14
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@17
    move-result-object v1

    #@18
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@1a
    .line 2547
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    const-string/jumbo v7, "WindowManager"

    #@1d
    new-instance v8, Ljava/lang/StringBuilder;

    #@1f
    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    #@22
    const-string/jumbo v9, "Force-removing child win "

    #@25
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@28
    move-result-object v8

    #@29
    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v8

    #@2d
    const-string/jumbo v9, " from container "

    #@30
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@33
    move-result-object v8

    #@34
    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@37
    move-result-object v8

    #@38
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3b
    move-result-object v8

    #@3c
    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@3f
    .line 2548
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    #@42
    .line 2545
    add-int/lit8 v3, v3, -0x1

    #@44
    goto :goto_0

    #@45
    .line 2551
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_1
    iput-boolean v13, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@47
    .line 2553
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@49
    if-ne v7, p1, :cond_2

    #@4b
    .line 2554
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@4e
    .line 2563
    :cond_2
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@50
    iget v5, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    #@52
    .line 2564
    .local v5, "type":I
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService;->excludeWindowTypeFromTapOutTask(I)Z

    #@55
    move-result v7

    #@56
    if-eqz v7, :cond_3

    #@58
    .line 2565
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@5b
    move-result-object v2

    #@5c
    .line 2566
    .local v2, "displaycontent":Lcom/android/server/wm/DisplayContent;
    iget-object v7, v2, Lcom/android/server/wm/DisplayContent;->mTapExcludedWindows:Ljava/util/ArrayList;

    #@5e
    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@61
    .line 2568
    .end local v2    # "displaycontent":Lcom/android/server/wm/DisplayContent;
    :cond_3
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@63
    invoke-interface {v7, p1}, Landroid/view/WindowManagerPolicy;->removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    #@66
    .line 2569
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->removeLocked()V

    #@69
    .line 2572
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6b
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@6d
    invoke-interface {v8}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@70
    move-result-object v8

    #@71
    invoke-virtual {v7, v8}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@74
    .line 2573
    iget v7, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@76
    const/4 v8, -0x1

    #@77
    if-eq v7, v8, :cond_4

    #@79
    .line 2574
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@7b
    iget v8, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@7d
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@80
    move-result v9

    #@81
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@84
    move-result-object v10

    #@85
    invoke-virtual {v7, v8, v9, v10}, Landroid/app/AppOpsManager;->finishOp(IILjava/lang/String;)V

    #@88
    .line 2577
    :cond_4
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@8a
    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@8d
    .line 2578
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@8f
    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@92
    .line 2579
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@94
    .line 2582
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@96
    if-ne v7, p1, :cond_b

    #@98
    .line 2583
    iput-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@9a
    .line 2588
    :cond_5
    :goto_1
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@9c
    .line 2589
    .local v4, "token":Lcom/android/server/wm/WindowToken;
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@9e
    .line 2591
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@a0
    invoke-virtual {v7, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@a3
    .line 2592
    if-eqz v0, :cond_6

    #@a5
    .line 2593
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@a7
    invoke-virtual {v7, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@aa
    .line 2598
    :cond_6
    iget-object v7, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@ac
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@af
    move-result v7

    #@b0
    if-nez v7, :cond_7

    #@b2
    .line 2599
    iget-boolean v7, v4, Lcom/android/server/wm/WindowToken;->explicit:Z

    #@b4
    if-nez v7, :cond_c

    #@b6
    .line 2600
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@b8
    iget-object v8, v4, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    #@ba
    invoke-virtual {v7, v8}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@bd
    .line 2607
    :cond_7
    :goto_2
    if-eqz v0, :cond_8

    #@bf
    .line 2608
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@c1
    if-ne v7, p1, :cond_d

    #@c3
    .line 2610
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@c6
    .line 2624
    :cond_8
    :goto_3
    const/16 v7, 0x7dd

    #@c8
    if-ne v5, v7, :cond_f

    #@ca
    .line 2625
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@cc
    invoke-virtual {v7}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    #@cf
    .line 2626
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@d2
    move-result-object v7

    #@d3
    iget v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@d5
    or-int/lit8 v8, v8, 0x4

    #@d7
    iput v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@d9
    .line 2633
    :cond_9
    :goto_4
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@dc
    move-result-object v6

    #@dd
    .line 2634
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    if-eqz v6, :cond_a

    #@df
    .line 2635
    invoke-virtual {v6, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@e2
    .line 2636
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@e4
    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->isInLayout()Z

    #@e7
    move-result v7

    #@e8
    if-nez v7, :cond_a

    #@ea
    .line 2637
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@ec
    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@ef
    .line 2638
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@f2
    .line 2639
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@f4
    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@f7
    .line 2640
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@f9
    if-eqz v7, :cond_a

    #@fb
    .line 2641
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@fd
    invoke-virtual {v7}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@100
    .line 2646
    :cond_a
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@102
    invoke-virtual {v7, v13}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@105
    .line 2537
    return-void

    #@106
    .line 2584
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "token":Lcom/android/server/wm/WindowToken;
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_b
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@108
    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    #@10a
    const/16 v8, 0x7dc

    #@10c
    if-ne v7, v8, :cond_5

    #@10e
    .line 2585
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@110
    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@113
    goto :goto_1

    #@114
    .line 2601
    .restart local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "token":Lcom/android/server/wm/WindowToken;
    :cond_c
    if-eqz v0, :cond_7

    #@116
    .line 2602
    iput-boolean v12, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@118
    .line 2603
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    #@11b
    goto :goto_2

    #@11c
    .line 2612
    :cond_d
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@11e
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@121
    move-result v7

    #@122
    if-nez v7, :cond_e

    #@124
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@126
    if-eqz v7, :cond_e

    #@128
    .line 2616
    iput-object v11, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@12a
    goto :goto_3

    #@12b
    .line 2617
    :cond_e
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@12d
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@130
    move-result v7

    #@131
    if-ne v7, v13, :cond_8

    #@133
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@135
    if-eqz v7, :cond_8

    #@137
    .line 2620
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@13a
    goto :goto_3

    #@13b
    .line 2628
    :cond_f
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@13d
    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@13f
    const/high16 v8, 0x100000

    #@141
    and-int/2addr v7, v8

    #@142
    if-eqz v7, :cond_9

    #@144
    .line 2629
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@147
    move-result-object v7

    #@148
    iget v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@14a
    or-int/lit8 v8, v8, 0x4

    #@14c
    iput v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@14e
    goto :goto_4
.end method

.method removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    .locals 1
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 2396
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/WindowState;Z)V

    #@4
    .line 2395
    return-void
.end method

.method removeWindowLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 11
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "keepVisibleDeadWindow"    # Z

    #@0
    .prologue
    .line 2400
    const/4 v9, 0x1

    #@1
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mWindowRemovalAllowed:Z

    #@3
    .line 2404
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@7
    const/4 v10, 0x3

    #@8
    if-ne v9, v10, :cond_1

    #@a
    const/4 v3, 0x1

    #@b
    .line 2405
    .local v3, "startingWindow":Z
    :goto_0
    if-eqz v3, :cond_0

    #@d
    .line 2415
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@10
    move-result-wide v4

    #@11
    .line 2417
    .local v4, "origId":J
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->disposeInputChannel()V

    #@14
    .line 2434
    const/4 v7, 0x0

    #@15
    .line 2438
    .local v7, "wasVisible":Z
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@17
    if-eqz v9, :cond_f

    #@19
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@1c
    move-result v9

    #@1d
    if-eqz v9, :cond_f

    #@1f
    .line 2439
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@21
    .line 2440
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    #@23
    if-eqz v9, :cond_2

    #@25
    .line 2449
    const/4 v9, 0x1

    #@26
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@28
    .line 2450
    const/4 v9, 0x1

    #@29
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mReplacingRemoveRequested:Z

    #@2b
    .line 2451
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2e
    .line 2452
    return-void

    #@2f
    .line 2404
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v3    # "startingWindow":Z
    .end local v4    # "origId":J
    .end local v7    # "wasVisible":Z
    :cond_1
    const/4 v3, 0x0

    #@30
    goto :goto_0

    #@31
    .line 2455
    .restart local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v3    # "startingWindow":Z
    .restart local v4    # "origId":J
    .restart local v7    # "wasVisible":Z
    :cond_2
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    #@34
    move-result v9

    #@35
    if-eqz v9, :cond_3

    #@37
    iget-boolean v9, v0, Lcom/android/server/wm/AppWindowToken;->allDrawnExcludingSaved:Z

    #@39
    if-eqz v9, :cond_4

    #@3b
    .line 2471
    :cond_3
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    #@3e
    move-result v7

    #@3f
    .line 2473
    .local v7, "wasVisible":Z
    if-eqz p2, :cond_5

    #@41
    .line 2477
    const/4 v9, 0x1

    #@42
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAppDied:Z

    #@44
    .line 2478
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@47
    .line 2479
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@49
    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@4c
    .line 2483
    const/4 v9, 0x0

    #@4d
    invoke-virtual {p1, v9}, Lcom/android/server/wm/WindowState;->openInputChannel(Landroid/view/InputChannel;)V

    #@50
    .line 2484
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@52
    const/4 v10, 0x1

    #@53
    invoke-virtual {v9, v10}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@56
    .line 2486
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@59
    .line 2487
    return-void

    #@5a
    .line 2466
    .local v7, "wasVisible":Z
    :cond_4
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V

    #@5d
    .line 2467
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@60
    .line 2468
    return-void

    #@61
    .line 2490
    .local v7, "wasVisible":Z
    :cond_5
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@63
    .line 2491
    .local v8, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    if-eqz v7, :cond_7

    #@65
    .line 2492
    if-nez v3, :cond_b

    #@67
    const/4 v6, 0x2

    #@68
    .line 2495
    .local v6, "transit":I
    :goto_1
    const/4 v9, 0x0

    #@69
    invoke-virtual {v8, v6, v9}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@6c
    move-result v9

    #@6d
    if-eqz v9, :cond_6

    #@6f
    .line 2496
    const/4 v9, 0x1

    #@70
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@72
    .line 2499
    :cond_6
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@74
    if-eqz v9, :cond_7

    #@76
    .line 2500
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@79
    move-result v9

    #@7a
    if-nez v9, :cond_7

    #@7c
    .line 2501
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@7e
    invoke-virtual {v9, p1, v6}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@81
    .line 2505
    .end local v6    # "transit":I
    :cond_7
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    #@84
    move-result v9

    #@85
    if-eqz v9, :cond_8

    #@87
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->isDummyAnimation()Z

    #@8a
    move-result v9

    #@8b
    if-eqz v9, :cond_c

    #@8d
    :cond_8
    const/4 v1, 0x0

    #@8e
    .line 2506
    .local v1, "isAnimating":Z
    :goto_2
    if-eqz v3, :cond_e

    #@90
    if-eqz v0, :cond_e

    #@92
    .line 2507
    iget-object v9, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@94
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@97
    move-result v9

    #@98
    const/4 v10, 0x1

    #@99
    if-ne v9, v10, :cond_d

    #@9b
    const/4 v2, 0x1

    #@9c
    .line 2513
    .local v2, "lastWindowIsStartingWindow":Z
    :goto_3
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    #@9f
    move-result v9

    #@a0
    if-eqz v9, :cond_f

    #@a2
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@a4
    if-eqz v9, :cond_f

    #@a6
    .line 2514
    if-eqz v2, :cond_9

    #@a8
    .line 2513
    if-eqz v1, :cond_f

    #@aa
    .line 2518
    :cond_9
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V

    #@ad
    .line 2519
    if-eqz v0, :cond_a

    #@af
    .line 2520
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@b2
    .line 2522
    :cond_a
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@b5
    .line 2523
    return-void

    #@b6
    .line 2492
    .end local v1    # "isAnimating":Z
    .end local v2    # "lastWindowIsStartingWindow":Z
    :cond_b
    const/4 v6, 0x5

    #@b7
    goto :goto_1

    #@b8
    .line 2505
    :cond_c
    const/4 v1, 0x1

    #@b9
    .restart local v1    # "isAnimating":Z
    goto :goto_2

    #@ba
    .line 2507
    :cond_d
    const/4 v2, 0x0

    #@bb
    .restart local v2    # "lastWindowIsStartingWindow":Z
    goto :goto_3

    #@bc
    .line 2506
    .end local v2    # "lastWindowIsStartingWindow":Z
    :cond_e
    const/4 v2, 0x0

    #@bd
    .restart local v2    # "lastWindowIsStartingWindow":Z
    goto :goto_3

    #@be
    .line 2527
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "isAnimating":Z
    .end local v2    # "lastWindowIsStartingWindow":Z
    .end local v7    # "wasVisible":Z
    .end local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_f
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    #@c1
    .line 2530
    if-eqz v7, :cond_10

    #@c3
    const/4 v9, 0x0

    #@c4
    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@c7
    move-result v9

    #@c8
    if-eqz v9, :cond_10

    #@ca
    .line 2531
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@cc
    const/16 v10, 0x12

    #@ce
    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@d1
    .line 2533
    :cond_10
    const/4 v9, 0x0

    #@d2
    const/4 v10, 0x1

    #@d3
    invoke-virtual {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@d6
    .line 2534
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@d9
    .line 2399
    return-void
.end method

.method public removeWindowToken(Landroid/os/IBinder;)V
    .locals 14
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/16 v13, 0x7dd

    #@2
    .line 3450
    const-string/jumbo v9, "android.permission.MANAGE_APP_TOKENS"

    #@5
    .line 3451
    const-string/jumbo v10, "removeWindowToken()"

    #@8
    .line 3450
    invoke-direct {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v9

    #@c
    if-nez v9, :cond_0

    #@e
    .line 3452
    new-instance v9, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v10, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v9, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v9

    #@17
    .line 3455
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@1a
    move-result-wide v6

    #@1b
    .line 3456
    .local v6, "origId":J
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1d
    monitor-enter v10

    #@1e
    .line 3457
    const/4 v3, 0x0

    #@1f
    .line 3458
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    :try_start_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@21
    invoke-virtual {v9, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@24
    move-result-object v8

    #@25
    check-cast v8, Lcom/android/server/wm/WindowToken;

    #@27
    .line 3459
    .local v8, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v8, :cond_9

    #@29
    .line 3460
    const/4 v2, 0x0

    #@2a
    .line 3461
    .local v2, "delayed":Z
    iget-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@2c
    if-nez v9, :cond_8

    #@2e
    .line 3462
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@30
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@33
    move-result v0

    #@34
    .line 3463
    .local v0, "N":I
    const/4 v1, 0x0

    #@35
    .line 3465
    .local v1, "changed":Z
    const/4 v4, 0x0

    #@36
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v4, "i":I
    :goto_0
    if-ge v4, v0, :cond_4

    #@38
    .line 3466
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3a
    invoke-virtual {v9, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v5

    #@3e
    check-cast v5, Lcom/android/server/wm/WindowState;

    #@40
    .line 3467
    .local v5, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@43
    move-result-object v3

    #@44
    .line 3469
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@46
    invoke-virtual {v9}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    #@49
    move-result v9

    #@4a
    if-eqz v9, :cond_1

    #@4c
    .line 3470
    const/4 v2, 0x1

    #@4d
    .line 3473
    :cond_1
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@50
    move-result v9

    #@51
    if-eqz v9, :cond_3

    #@53
    .line 3474
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@55
    const/4 v11, 0x2

    #@56
    .line 3475
    const/4 v12, 0x0

    #@57
    .line 3474
    invoke-virtual {v9, v11, v12}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@5a
    .line 3477
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@5c
    if-eqz v9, :cond_2

    #@5e
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    #@61
    move-result v9

    #@62
    if-eqz v9, :cond_2

    #@64
    .line 3478
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@66
    .line 3479
    const/4 v11, 0x2

    #@67
    .line 3478
    invoke-virtual {v9, v5, v11}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@6a
    .line 3481
    :cond_2
    const/4 v1, 0x1

    #@6b
    .line 3482
    if-eqz v3, :cond_3

    #@6d
    .line 3483
    const/4 v9, 0x1

    #@6e
    iput-boolean v9, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@70
    .line 3465
    :cond_3
    add-int/lit8 v4, v4, 0x1

    #@72
    goto :goto_0

    #@73
    .line 3488
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_4
    const/4 v9, 0x1

    #@74
    iput-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@76
    .line 3490
    if-eqz v1, :cond_5

    #@78
    .line 3491
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@7a
    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@7d
    .line 3492
    const/4 v9, 0x0

    #@7e
    .line 3493
    const/4 v11, 0x0

    #@7f
    .line 3492
    invoke-virtual {p0, v9, v11}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@82
    .line 3496
    :cond_5
    if-eqz v2, :cond_7

    #@84
    if-eqz v3, :cond_7

    #@86
    .line 3497
    iget-object v9, v3, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    #@88
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@8b
    .line 3505
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v4    # "i":I
    :cond_6
    :goto_1
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@8d
    const/4 v11, 0x1

    #@8e
    invoke-virtual {v9, v11}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@91
    .end local v2    # "delayed":Z
    :goto_2
    monitor-exit v10

    #@92
    .line 3510
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@95
    .line 3449
    return-void

    #@96
    .line 3498
    .restart local v0    # "N":I
    .restart local v1    # "changed":Z
    .restart local v2    # "delayed":Z
    .restart local v4    # "i":I
    :cond_7
    :try_start_1
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    #@98
    if-ne v9, v13, :cond_6

    #@9a
    .line 3499
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@9c
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WallpaperController;->removeWallpaperToken(Lcom/android/server/wm/WindowToken;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@9f
    goto :goto_1

    #@a0
    .line 3456
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v2    # "delayed":Z
    .end local v4    # "i":I
    .end local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v9

    #@a1
    monitor-exit v10

    #@a2
    throw v9

    #@a3
    .line 3501
    .restart local v2    # "delayed":Z
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :cond_8
    :try_start_2
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    #@a5
    if-ne v9, v13, :cond_6

    #@a7
    .line 3502
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@a9
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WallpaperController;->removeWallpaperToken(Lcom/android/server/wm/WindowToken;)V

    #@ac
    goto :goto_1

    #@ad
    .line 3507
    .end local v2    # "delayed":Z
    :cond_9
    const-string/jumbo v9, "WindowManager"

    #@b0
    new-instance v11, Ljava/lang/StringBuilder;

    #@b2
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@b5
    const-string/jumbo v12, "Attempted to remove non-existing token: "

    #@b8
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bb
    move-result-object v11

    #@bc
    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@bf
    move-result-object v11

    #@c0
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c3
    move-result-object v11

    #@c4
    invoke-static {v9, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@c7
    goto :goto_2
.end method

.method repositionChild(Lcom/android/server/wm/Session;Landroid/view/IWindow;IIIIJLandroid/graphics/Rect;)V
    .locals 11
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "left"    # I
    .param p4, "top"    # I
    .param p5, "right"    # I
    .param p6, "bottom"    # I
    .param p7, "frameNumber"    # J
    .param p9, "outFrame"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 2782
    const-string/jumbo v5, "repositionChild"

    #@3
    const-wide/16 v6, 0x20

    #@5
    invoke-static {v6, v7, v5}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@8
    .line 2783
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@b
    move-result-wide v2

    #@c
    .line 2786
    .local v2, "origId":J
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@e
    monitor-enter v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@f
    .line 2787
    const/4 v5, 0x0

    #@10
    :try_start_1
    invoke-virtual {p0, p1, p2, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@13
    move-result-object v4

    #@14
    .line 2788
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_0

    #@16
    :try_start_2
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@17
    .line 2832
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1a
    .line 2833
    const-wide/16 v6, 0x20

    #@1c
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    #@1f
    .line 2789
    return-void

    #@20
    .line 2791
    :cond_0
    :try_start_3
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@22
    if-nez v5, :cond_1

    #@24
    .line 2792
    new-instance v5, Ljava/lang/IllegalArgumentException;

    #@26
    .line 2793
    new-instance v7, Ljava/lang/StringBuilder;

    #@28
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    #@2b
    const-string/jumbo v8, "repositionChild called but window is notattached to a parent win="

    #@2e
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@31
    move-result-object v7

    #@32
    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@35
    move-result-object v7

    #@36
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@39
    move-result-object v7

    #@3a
    .line 2792
    invoke-direct {v5, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@3d
    throw v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@3e
    .line 2786
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v5

    #@3f
    :try_start_4
    monitor-exit v6

    #@40
    throw v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@41
    .line 2831
    :catchall_1
    move-exception v5

    #@42
    .line 2832
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@45
    .line 2833
    const-wide/16 v6, 0x20

    #@47
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    #@4a
    .line 2831
    throw v5

    #@4b
    .line 2797
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    :try_start_5
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4d
    iput p3, v5, Landroid/view/WindowManager$LayoutParams;->x:I

    #@4f
    .line 2798
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@51
    iput p4, v5, Landroid/view/WindowManager$LayoutParams;->y:I

    #@53
    .line 2799
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@55
    sub-int v7, p5, p3

    #@57
    iput v7, v5, Landroid/view/WindowManager$LayoutParams;->width:I

    #@59
    .line 2800
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5b
    sub-int v7, p6, p4

    #@5d
    iput v7, v5, Landroid/view/WindowManager$LayoutParams;->height:I

    #@5f
    .line 2801
    iget v5, v4, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    #@61
    iget v7, v4, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    #@63
    invoke-virtual {v4, v5, v7}, Lcom/android/server/wm/WindowState;->setWindowScale(II)V

    #@66
    .line 2803
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@68
    if-eqz v5, :cond_3

    #@6a
    .line 2808
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@6d
    .line 2812
    :try_start_6
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    #@6f
    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    #@71
    invoke-virtual {v4, v5, v7}, Lcom/android/server/wm/WindowState;->applyGravityAndUpdateFrame(Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    #@74
    .line 2813
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@76
    invoke-virtual {v5}, Lcom/android/server/wm/WindowStateAnimator;->computeShownFrameLocked()V

    #@79
    .line 2815
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@7b
    const/4 v7, 0x0

    #@7c
    invoke-virtual {v5, v7}, Lcom/android/server/wm/WindowStateAnimator;->setSurfaceBoundariesLocked(Z)V

    #@7f
    .line 2817
    const-wide/16 v8, 0x0

    #@81
    cmp-long v5, p7, v8

    #@83
    if-lez v5, :cond_2

    #@85
    .line 2818
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@87
    move-wide/from16 v0, p7

    #@89
    invoke-virtual {v5, v0, v1}, Lcom/android/server/wm/WindowStateAnimator;->deferTransactionUntilParentFrame(J)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    #@8c
    .line 2822
    :cond_2
    :try_start_7
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@8f
    .line 2829
    :cond_3
    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    #@91
    move-object/from16 p9, v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    #@93
    :try_start_8
    monitor-exit v6
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    #@94
    .line 2832
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@97
    .line 2833
    const-wide/16 v6, 0x20

    #@99
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    #@9c
    .line 2781
    return-void

    #@9d
    .line 2821
    :catchall_2
    move-exception v5

    #@9e
    .line 2822
    :try_start_9
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@a1
    .line 2821
    throw v5
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0
.end method

.method public requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    .locals 3
    .param p1, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p2, "deviceId"    # I

    #@0
    .prologue
    .line 11350
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@3
    move-result-object v1

    #@4
    .line 11351
    .local v1, "focusedWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_0

    #@6
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@8
    if-eqz v2, :cond_0

    #@a
    .line 11352
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@d
    move-result-object v2

    #@e
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@10
    invoke-interface {v2, p1, p2}, Landroid/view/IWindow;->requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@13
    .line 11348
    .end local v1    # "focusedWindow":Lcom/android/server/wm/WindowState;
    :cond_0
    :goto_0
    return-void

    #@14
    .line 11354
    :catch_0
    move-exception v0

    #@15
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public requestAssistScreenshot(Lcom/android/internal/app/IAssistScreenshotReceiver;)Z
    .locals 2
    .param p1, "receiver"    # Lcom/android/internal/app/IAssistScreenshotReceiver;

    #@0
    .prologue
    .line 6348
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    #@3
    .line 6349
    const-string/jumbo v1, "requestAssistScreenshot()"

    #@6
    .line 6348
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 6350
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 6353
    :cond_0
    invoke-static {}, Lcom/android/server/FgThread;->getHandler()Landroid/os/Handler;

    #@18
    move-result-object v0

    #@19
    new-instance v1, Lcom/android/server/wm/WindowManagerService$8;

    #@1b
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$8;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/internal/app/IAssistScreenshotReceiver;)V

    #@1e
    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    #@21
    .line 6365
    const/4 v0, 0x1

    #@22
    return v0
.end method

.method requestTraversal()V
    .locals 2

    #@0
    .prologue
    .line 9764
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 9765
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 9763
    return-void

    #@a
    .line 9764
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public resizeStack(ILandroid/graphics/Rect;Landroid/util/SparseArray;Landroid/util/SparseArray;Landroid/util/SparseArray;)Z
    .locals 5
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Landroid/graphics/Rect;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/content/res/Configuration;",
            ">;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/graphics/Rect;",
            ">;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/graphics/Rect;",
            ">;)Z"
        }
    .end annotation

    #@0
    .prologue
    .line 5329
    .local p3, "configs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/content/res/Configuration;>;"
    .local p4, "taskBounds":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/graphics/Rect;>;"
    .local p5, "taskTempInsetBounds":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/graphics/Rect;>;"
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5330
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5331
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@d
    .line 5332
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "resizeStack: stackId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5333
    const-string/jumbo v4, " not found."

    #@22
    .line 5332
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5329
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5335
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2, p3, p4, p5}, Lcom/android/server/wm/TaskStack;->setBounds(Landroid/graphics/Rect;Landroid/util/SparseArray;Landroid/util/SparseArray;Landroid/util/SparseArray;)Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_1

    #@37
    .line 5336
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    #@3a
    move-result v1

    #@3b
    .line 5335
    if-eqz v1, :cond_1

    #@3d
    .line 5337
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@40
    move-result-object v1

    #@41
    const/4 v3, 0x1

    #@42
    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@44
    .line 5338
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@46
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@49
    .line 5340
    :cond_1
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getRawFullscreen()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@4c
    move-result v1

    #@4d
    monitor-exit v2

    #@4e
    return v1
.end method

.method public resizeTask(ILandroid/graphics/Rect;Landroid/content/res/Configuration;ZZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .param p3, "configuration"    # Landroid/content/res/Configuration;
    .param p4, "relayout"    # Z
    .param p5, "forced"    # Z

    #@0
    .prologue
    .line 5386
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5387
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5388
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    .line 5389
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "resizeTask: taskId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5390
    const-string/jumbo v4, " not found."

    #@22
    .line 5389
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5386
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5393
    .restart local v0    # "task":Lcom/android/server/wm/Task;
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2, p3, p5}, Lcom/android/server/wm/Task;->resizeLocked(Landroid/graphics/Rect;Landroid/content/res/Configuration;Z)Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_1

    #@37
    if-eqz p4, :cond_1

    #@39
    .line 5394
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@3c
    move-result-object v1

    #@3d
    const/4 v3, 0x1

    #@3e
    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@40
    .line 5395
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@42
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@45
    :cond_1
    monitor-exit v2

    #@46
    .line 5385
    return-void
.end method

.method restorePointerIconLocked(Lcom/android/server/wm/DisplayContent;FF)V
    .locals 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "latestX"    # F
    .param p3, "latestY"    # F

    #@0
    .prologue
    .line 11495
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@2
    invoke-virtual {v2, p2, p3}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->updatePosition(FF)V

    #@5
    .line 11498
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;

    #@8
    move-result-object v1

    #@9
    .line 11499
    .local v1, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_0

    #@b
    .line 11501
    :try_start_0
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@d
    .line 11502
    invoke-virtual {v1, p2}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    #@10
    move-result v3

    #@11
    .line 11503
    invoke-virtual {v1, p3}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    #@14
    move-result v4

    #@15
    .line 11501
    invoke-interface {v2, v3, v4}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@18
    .line 11493
    :goto_0
    return-void

    #@19
    .line 11504
    :catch_0
    move-exception v0

    #@1a
    .line 11505
    .local v0, "e":Landroid/os/RemoteException;
    const-string/jumbo v2, "WindowManager"

    #@1d
    const-string/jumbo v3, "unable to restore pointer icon"

    #@20
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@23
    goto :goto_0

    #@24
    .line 11508
    .end local v0    # "e":Landroid/os/RemoteException;
    :cond_0
    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;

    #@27
    move-result-object v2

    #@28
    const/16 v3, 0x3e8

    #@2a
    invoke-virtual {v2, v3}, Landroid/hardware/input/InputManager;->setPointerIconType(I)V

    #@2d
    goto :goto_0
.end method

.method public resumeKeyDispatching(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "_token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 8033
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 8034
    const-string/jumbo v2, "resumeKeyDispatching()"

    #@6
    .line 8033
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 8035
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 8038
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 8039
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 8040
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 8041
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->resumeDispatchingLw(Lcom/android/server/wm/WindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    :cond_1
    monitor-exit v2

    #@28
    .line 8032
    return-void

    #@29
    .line 8038
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@2a
    monitor-exit v2

    #@2b
    throw v1
.end method

.method resumeRotationLocked()V
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 6759
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@3
    if-lez v1, :cond_0

    #@5
    .line 6760
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@7
    add-int/lit8 v1, v1, -0x1

    #@9
    iput v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@b
    .line 6761
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@d
    if-nez v1, :cond_0

    #@f
    .line 6762
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@12
    move-result v0

    #@13
    .line 6763
    .local v0, "changed":Z
    if-eqz v0, :cond_0

    #@15
    .line 6764
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@17
    const/16 v2, 0x12

    #@19
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@1c
    .line 6758
    .end local v0    # "changed":Z
    :cond_0
    return-void
.end method

.method rotationNeedsUpdateLocked()Z
    .locals 5

    #@0
    .prologue
    .line 3876
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@4
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@6
    invoke-interface {v2, v3, v4}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(II)I

    #@9
    move-result v1

    #@a
    .line 3877
    .local v1, "rotation":I
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@c
    .line 3878
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@e
    .line 3877
    invoke-interface {v2, v3, v1}, Landroid/view/WindowManagerPolicy;->rotationHasCompatibleMetricsLw(II)Z

    #@11
    move-result v2

    #@12
    if-eqz v2, :cond_0

    #@14
    const/4 v0, 0x0

    #@15
    .line 3879
    .local v0, "altOrientation":Z
    :goto_0
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@17
    if-ne v2, v1, :cond_1

    #@19
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@1b
    if-ne v2, v0, :cond_1

    #@1d
    .line 3880
    const/4 v2, 0x0

    #@1e
    return v2

    #@1f
    .line 3877
    .end local v0    # "altOrientation":Z
    :cond_0
    const/4 v0, 0x1

    #@20
    .restart local v0    # "altOrientation":Z
    goto :goto_0

    #@21
    .line 3882
    :cond_1
    const/4 v2, 0x1

    #@22
    return v2
.end method

.method public saveANRStateLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/WindowState;Ljava/lang/String;)V
    .locals 8
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "windowState"    # Lcom/android/server/wm/WindowState;
    .param p3, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    const/16 v7, 0x26

    #@2
    const/4 v6, 0x1

    #@3
    const/4 v5, 0x0

    #@4
    .line 10863
    new-instance v1, Ljava/io/StringWriter;

    #@6
    invoke-direct {v1}, Ljava/io/StringWriter;-><init>()V

    #@9
    .line 10864
    .local v1, "sw":Ljava/io/StringWriter;
    new-instance v0, Lcom/android/internal/util/FastPrintWriter;

    #@b
    const/4 v2, 0x0

    #@c
    const/16 v3, 0x400

    #@e
    invoke-direct {v0, v1, v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    #@11
    .line 10865
    .local v0, "pw":Ljava/io/PrintWriter;
    new-instance v2, Ljava/lang/StringBuilder;

    #@13
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@16
    const-string/jumbo v3, "  ANR time: "

    #@19
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v2

    #@1d
    invoke-static {}, Ljava/text/DateFormat;->getInstance()Ljava/text/DateFormat;

    #@20
    move-result-object v3

    #@21
    new-instance v4, Ljava/util/Date;

    #@23
    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    #@26
    invoke-virtual {v3, v4}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v2

    #@2e
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@31
    move-result-object v2

    #@32
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@35
    .line 10866
    if-eqz p1, :cond_0

    #@37
    .line 10867
    new-instance v2, Ljava/lang/StringBuilder;

    #@39
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@3c
    const-string/jumbo v3, "  Application at fault: "

    #@3f
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42
    move-result-object v2

    #@43
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->stringName:Ljava/lang/String;

    #@45
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@48
    move-result-object v2

    #@49
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4c
    move-result-object v2

    #@4d
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@50
    .line 10869
    :cond_0
    if-eqz p2, :cond_1

    #@52
    .line 10870
    new-instance v2, Ljava/lang/StringBuilder;

    #@54
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@57
    const-string/jumbo v3, "  Window at fault: "

    #@5a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d
    move-result-object v2

    #@5e
    iget-object v3, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@60
    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@63
    move-result-object v3

    #@64
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v2

    #@68
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6b
    move-result-object v2

    #@6c
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6f
    .line 10872
    :cond_1
    if-eqz p3, :cond_2

    #@71
    .line 10873
    new-instance v2, Ljava/lang/StringBuilder;

    #@73
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@76
    const-string/jumbo v3, "  Reason: "

    #@79
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7c
    move-result-object v2

    #@7d
    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@80
    move-result-object v2

    #@81
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@84
    move-result-object v2

    #@85
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@88
    .line 10875
    :cond_2
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    #@8b
    .line 10876
    invoke-virtual {p0, v0, v6, v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    #@8e
    .line 10877
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    #@91
    .line 10878
    const-string/jumbo v2, "Last ANR continued"

    #@94
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@97
    .line 10879
    invoke-virtual {p0, v0, v6}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    #@9a
    .line 10880
    invoke-virtual {v0}, Ljava/io/PrintWriter;->close()V

    #@9d
    .line 10881
    invoke-virtual {v1}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    #@a0
    move-result-object v2

    #@a1
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@a3
    .line 10883
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@a5
    invoke-virtual {v2, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@a8
    .line 10884
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@aa
    const-wide/32 v4, 0x6ddd00

    #@ad
    invoke-virtual {v2, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@b0
    .line 10862
    return-void
.end method

.method scheduleAnimationLocked()V
    .locals 2

    #@0
    .prologue
    .line 9771
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    #@2
    if-nez v0, :cond_0

    #@4
    .line 9772
    const/4 v0, 0x1

    #@5
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    #@7
    .line 9773
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    #@9
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@b
    iget-object v1, v1, Lcom/android/server/wm/WindowAnimator;->mAnimationFrameCallback:Landroid/view/Choreographer$FrameCallback;

    #@d
    invoke-virtual {v0, v1}, Landroid/view/Choreographer;->postFrameCallback(Landroid/view/Choreographer$FrameCallback;)V

    #@10
    .line 9770
    :cond_0
    return-void
.end method

.method public scheduleClearReplacingWindowIfNeeded(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "replacing"    # Z

    #@0
    .prologue
    .line 11239
    const/4 v0, 0x0

    #@1
    .line 11240
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 11241
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@7
    move-result-object v0

    #@8
    .line 11242
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_0

    #@a
    .line 11243
    const-string/jumbo v1, "WindowManager"

    #@d
    new-instance v3, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v4, "Attempted to reset replacing window on non-existing app token "

    #@15
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v3

    #@19
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v3

    #@1d
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@20
    move-result-object v3

    #@21
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@24
    monitor-exit v2

    #@25
    .line 11245
    return-void

    #@26
    .line 11247
    :cond_0
    if-eqz p2, :cond_1

    #@28
    .line 11248
    :try_start_1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleReplacingWindowTimeouts(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2b
    :goto_0
    monitor-exit v2

    #@2c
    .line 11238
    return-void

    #@2d
    .line 11250
    :cond_1
    :try_start_2
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->resetReplacingWindows()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@30
    goto :goto_0

    #@31
    .line 11240
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@32
    monitor-exit v2

    #@33
    throw v1
.end method

.method scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    .locals 4
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v3, 0x6

    #@1
    const/4 v2, 0x0

    #@2
    .line 4918
    if-nez p1, :cond_0

    #@4
    .line 4919
    return-void

    #@5
    .line 4921
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@7
    invoke-virtual {v1, v3, p1}, Lcom/android/server/wm/WindowManagerService$H;->hasMessages(ILjava/lang/Object;)Z

    #@a
    move-result v1

    #@b
    if-eqz v1, :cond_1

    #@d
    .line 4923
    return-void

    #@e
    .line 4926
    :cond_1
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@10
    if-nez v1, :cond_3

    #@12
    .line 4927
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@14
    if-eqz v1, :cond_2

    #@16
    .line 4932
    iput-object v2, p1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@18
    .line 4934
    :cond_2
    return-void

    #@19
    .line 4940
    :cond_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1b
    invoke-virtual {v1, v3, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@1e
    move-result-object v0

    #@1f
    .line 4941
    .local v0, "m":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@21
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@24
    .line 4917
    return-void
.end method

.method scheduleReplacingWindowTimeouts(Lcom/android/server/wm/AppWindowToken;)V
    .locals 4
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/16 v1, 0x2e

    #@2
    .line 11256
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    #@4
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@7
    move-result v0

    #@8
    if-nez v0, :cond_0

    #@a
    .line 11257
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    #@c
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@f
    .line 11259
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@11
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@14
    .line 11260
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@16
    .line 11261
    const-wide/16 v2, 0x7d0

    #@18
    .line 11260
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@1b
    .line 11255
    return-void
.end method

.method public screenshotApplications(Landroid/os/IBinder;IIIF)Landroid/graphics/Bitmap;
    .locals 9
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "frameScale"    # F

    #@0
    .prologue
    .line 6380
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    #@3
    .line 6381
    const-string/jumbo v1, "screenshotApplications()"

    #@6
    .line 6380
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 6382
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 6385
    :cond_0
    :try_start_0
    const-string/jumbo v0, "screenshotApplications"

    #@18
    const-wide/16 v2, 0x20

    #@1a
    invoke-static {v2, v3, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@1d
    .line 6387
    sget-object v7, Landroid/graphics/Bitmap$Config;->RGB_565:Landroid/graphics/Bitmap$Config;

    #@1f
    .line 6386
    const/4 v5, 0x0

    #@20
    .line 6387
    const/4 v8, 0x0

    #@21
    move-object v0, p0

    #@22
    move-object v1, p1

    #@23
    move v2, p2

    #@24
    move v3, p3

    #@25
    move v4, p4

    #@26
    move v6, p5

    #@27
    .line 6386
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/wm/WindowManagerService;->screenshotApplicationsInner(Landroid/os/IBinder;IIIZFLandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2a
    move-result-object v0

    #@2b
    .line 6389
    const-wide/16 v2, 0x20

    #@2d
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    #@30
    .line 6386
    return-object v0

    #@31
    .line 6388
    :catchall_0
    move-exception v0

    #@32
    .line 6389
    const-wide/16 v2, 0x20

    #@34
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    #@37
    .line 6388
    throw v0
.end method

.method screenshotApplicationsInner(Landroid/os/IBinder;IIIZFLandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;
    .locals 42
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "includeFullDisplay"    # Z
    .param p6, "frameScale"    # F
    .param p7, "config"    # Landroid/graphics/Bitmap$Config;
    .param p8, "wallpaperOnly"    # Z

    #@0
    .prologue
    .line 6409
    move-object/from16 v0, p0

    #@2
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v5

    #@5
    .line 6410
    :try_start_0
    move-object/from16 v0, p0

    #@7
    move/from16 v1, p2

    #@9
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    move-result-object v19

    #@d
    .line 6411
    .local v19, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v19, :cond_0

    #@f
    .line 6414
    const/4 v6, 0x0

    #@10
    monitor-exit v5

    #@11
    return-object v6

    #@12
    :cond_0
    monitor-exit v5

    #@13
    .line 6417
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@16
    move-result-object v20

    #@17
    .line 6418
    .local v20, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v20

    #@19
    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@1b
    move/from16 v21, v0

    #@1d
    .line 6419
    .local v21, "dw":I
    move-object/from16 v0, v20

    #@1f
    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@21
    move/from16 v18, v0

    #@23
    .line 6420
    .local v18, "dh":I
    if-eqz v21, :cond_1

    #@25
    if-nez v18, :cond_2

    #@27
    .line 6423
    :cond_1
    const/4 v5, 0x0

    #@28
    return-object v5

    #@29
    .line 6409
    .end local v18    # "dh":I
    .end local v19    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v20    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v21    # "dw":I
    :catchall_0
    move-exception v6

    #@2a
    monitor-exit v5

    #@2b
    throw v6

    #@2c
    .line 6426
    .restart local v18    # "dh":I
    .restart local v19    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v20    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v21    # "dw":I
    :cond_2
    const/4 v13, 0x0

    #@2d
    .line 6428
    .local v13, "bm":Landroid/graphics/Bitmap;
    const/4 v8, 0x0

    #@2e
    .line 6429
    .local v8, "maxLayer":I
    new-instance v23, Landroid/graphics/Rect;

    #@30
    invoke-direct/range {v23 .. v23}, Landroid/graphics/Rect;-><init>()V

    #@33
    .line 6430
    .local v23, "frame":Landroid/graphics/Rect;
    new-instance v33, Landroid/graphics/Rect;

    #@35
    invoke-direct/range {v33 .. v33}, Landroid/graphics/Rect;-><init>()V

    #@38
    .line 6434
    .local v33, "stackBounds":Landroid/graphics/Rect;
    if-nez p1, :cond_3

    #@3a
    if-eqz p8, :cond_5

    #@3c
    .line 6438
    :cond_3
    const/16 v32, 0x0

    #@3e
    .line 6439
    .local v32, "screenshotReady":Z
    const v7, 0x7fffffff

    #@41
    .line 6442
    .local v7, "minLayer":I
    :goto_0
    const/4 v12, 0x0

    #@42
    .line 6445
    .local v12, "appWin":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@44
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@46
    monitor-enter v6

    #@47
    .line 6447
    :try_start_1
    move-object/from16 v0, p0

    #@49
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@4b
    if-eqz v5, :cond_6

    #@4d
    move-object/from16 v0, p0

    #@4f
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@51
    iget-object v0, v5, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@53
    move-object/from16 v25, v0

    #@55
    .line 6453
    :goto_1
    if-eqz v25, :cond_8

    #@57
    .line 6454
    move-object/from16 v0, v25

    #@59
    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@5b
    if-eqz v5, :cond_8

    #@5d
    .line 6455
    move-object/from16 v0, v25

    #@5f
    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@61
    invoke-interface {v5}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@64
    move-result-object v5

    #@65
    move-object/from16 v0, p1

    #@67
    if-ne v5, v0, :cond_8

    #@69
    .line 6456
    move-object/from16 v0, p0

    #@6b
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@6d
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isInMultiWindowMode()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@70
    move-result v5

    #@71
    if-eqz v5, :cond_7

    #@73
    const/16 v26, 0x0

    #@75
    .local v26, "includeImeInScreenshot":Z
    :goto_2
    monitor-exit v6

    #@76
    .line 6459
    move-object/from16 v0, p0

    #@78
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@7a
    const/4 v6, 0x2

    #@7b
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@7e
    move-result v5

    #@7f
    add-int/lit8 v5, v5, 0x1

    #@81
    mul-int/lit16 v5, v5, 0x2710

    #@83
    add-int/lit16 v11, v5, 0x3e8

    #@85
    .line 6462
    .local v11, "aboveAppLayer":I
    move-object/from16 v0, p0

    #@87
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@89
    move-object/from16 v39, v0

    #@8b
    monitor-enter v39

    #@8c
    .line 6464
    const/4 v12, 0x0

    #@8d
    .line 6465
    :try_start_2
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@90
    move-result-object v37

    #@91
    .line 6466
    .local v37, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v37 .. v37}, Lcom/android/server/wm/WindowList;->size()I

    #@94
    move-result v5

    #@95
    add-int/lit8 v24, v5, -0x1

    #@97
    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .local v24, "i":I
    :goto_3
    if-ltz v24, :cond_10

    #@99
    .line 6467
    move-object/from16 v0, v37

    #@9b
    move/from16 v1, v24

    #@9d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@a0
    move-result-object v38

    #@a1
    check-cast v38, Lcom/android/server/wm/WindowState;

    #@a3
    .line 6468
    .local v38, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v38

    #@a5
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@a7
    if-nez v5, :cond_9

    #@a9
    .line 6466
    :cond_4
    :goto_4
    add-int/lit8 v24, v24, -0x1

    #@ab
    goto :goto_3

    #@ac
    .line 6435
    .end local v7    # "minLayer":I
    .end local v11    # "aboveAppLayer":I
    .end local v24    # "i":I
    .end local v26    # "includeImeInScreenshot":Z
    .end local v32    # "screenshotReady":Z
    .end local v37    # "windows":Lcom/android/server/wm/WindowList;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_5
    const/16 v32, 0x1

    #@ae
    .line 6436
    .restart local v32    # "screenshotReady":Z
    const/4 v7, 0x0

    #@af
    .line 6434
    .restart local v7    # "minLayer":I
    goto :goto_0

    #@b0
    .line 6447
    .restart local v12    # "appWin":Lcom/android/server/wm/WindowState;
    :cond_6
    const/16 v25, 0x0

    #@b2
    .local v25, "imeTargetAppToken":Lcom/android/server/wm/AppWindowToken;
    goto :goto_1

    #@b3
    .line 6456
    .end local v25    # "imeTargetAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_7
    const/16 v26, 0x1

    #@b5
    .restart local v26    # "includeImeInScreenshot":Z
    goto :goto_2

    #@b6
    .line 6453
    .end local v26    # "includeImeInScreenshot":Z
    :cond_8
    const/16 v26, 0x0

    #@b8
    .restart local v26    # "includeImeInScreenshot":Z
    goto :goto_2

    #@b9
    .line 6445
    .end local v26    # "includeImeInScreenshot":Z
    :catchall_1
    move-exception v5

    #@ba
    monitor-exit v6

    #@bb
    throw v5

    #@bc
    .line 6471
    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v11    # "aboveAppLayer":I
    .restart local v24    # "i":I
    .restart local v26    # "includeImeInScreenshot":Z
    .restart local v37    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_9
    :try_start_3
    move-object/from16 v0, v38

    #@be
    iget v5, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    #@c0
    if-ge v5, v11, :cond_4

    #@c2
    .line 6474
    if-eqz p8, :cond_a

    #@c4
    move-object/from16 v0, v38

    #@c6
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@c8
    if-eqz v5, :cond_4

    #@ca
    .line 6477
    :cond_a
    move-object/from16 v0, v38

    #@cc
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@ce
    if-eqz v5, :cond_11

    #@d0
    .line 6478
    if-eqz v26, :cond_4

    #@d2
    .line 6510
    :cond_b
    :goto_5
    move-object/from16 v0, v38

    #@d4
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@d6
    move-object/from16 v36, v0

    #@d8
    .line 6511
    .local v36, "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v36

    #@da
    iget-object v5, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@dc
    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfaceController;->getLayer()I

    #@df
    move-result v27

    #@e0
    .line 6512
    .local v27, "layer":I
    move/from16 v0, v27

    #@e2
    if-ge v8, v0, :cond_c

    #@e4
    .line 6513
    move/from16 v8, v27

    #@e6
    .line 6515
    :cond_c
    move/from16 v0, v27

    #@e8
    if-le v7, v0, :cond_d

    #@ea
    .line 6516
    move/from16 v7, v27

    #@ec
    .line 6520
    :cond_d
    if-nez p5, :cond_e

    #@ee
    move-object/from16 v0, v38

    #@f0
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@f2
    if-eqz v5, :cond_14

    #@f4
    .line 6536
    :cond_e
    :goto_6
    move-object/from16 v0, v38

    #@f6
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@f8
    if-eqz v5, :cond_15

    #@fa
    move-object/from16 v0, v38

    #@fc
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@fe
    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@100
    move-object/from16 v0, p1

    #@102
    if-ne v5, v0, :cond_15

    #@104
    const/16 v22, 0x1

    #@106
    .line 6538
    .local v22, "foundTargetWs":Z
    :goto_7
    if-eqz v22, :cond_f

    #@108
    invoke-virtual/range {v38 .. v38}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@10b
    move-result v5

    #@10c
    if-eqz v5, :cond_f

    #@10e
    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    #@111
    move-result v5

    #@112
    if-eqz v5, :cond_f

    #@114
    .line 6539
    const/16 v32, 0x1

    #@116
    .line 6542
    :cond_f
    move-object/from16 v0, v38

    #@118
    move-object/from16 v1, v20

    #@11a
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->isObscuringFullscreen(Landroid/view/DisplayInfo;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    #@11d
    move-result v5

    #@11e
    if-eqz v5, :cond_4

    #@120
    .line 6547
    .end local v22    # "foundTargetWs":Z
    .end local v27    # "layer":I
    .end local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_10
    if-eqz p1, :cond_17

    #@122
    if-nez v12, :cond_17

    #@124
    .line 6551
    const/4 v5, 0x0

    #@125
    monitor-exit v39

    #@126
    return-object v5

    #@127
    .line 6481
    .restart local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_11
    :try_start_4
    move-object/from16 v0, v38

    #@129
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@12b
    if-eqz v5, :cond_13

    #@12d
    .line 6484
    if-eqz p8, :cond_12

    #@12f
    .line 6485
    move-object/from16 v12, v38

    #@131
    .line 6488
    :cond_12
    if-nez v12, :cond_b

    #@133
    goto/16 :goto_4

    #@135
    .line 6499
    :cond_13
    if-eqz p1, :cond_b

    #@137
    .line 6500
    move-object/from16 v0, v38

    #@139
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@13b
    if-eqz v5, :cond_4

    #@13d
    move-object/from16 v0, v38

    #@13f
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@141
    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@143
    move-object/from16 v0, p1

    #@145
    if-ne v5, v0, :cond_4

    #@147
    .line 6505
    move-object/from16 v12, v38

    #@149
    .local v12, "appWin":Lcom/android/server/wm/WindowState;
    goto :goto_5

    #@14a
    .line 6521
    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v27    # "layer":I
    .restart local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    :cond_14
    move-object/from16 v0, v38

    #@14c
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@14e
    move-object/from16 v35, v0

    #@150
    .line 6522
    .local v35, "wf":Landroid/graphics/Rect;
    move-object/from16 v0, v38

    #@152
    iget-object v15, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@154
    .line 6523
    .local v15, "cr":Landroid/graphics/Rect;
    move-object/from16 v0, v35

    #@156
    iget v5, v0, Landroid/graphics/Rect;->left:I

    #@158
    iget v6, v15, Landroid/graphics/Rect;->left:I

    #@15a
    add-int v28, v5, v6

    #@15c
    .line 6524
    .local v28, "left":I
    move-object/from16 v0, v35

    #@15e
    iget v5, v0, Landroid/graphics/Rect;->top:I

    #@160
    iget v6, v15, Landroid/graphics/Rect;->top:I

    #@162
    add-int v34, v5, v6

    #@164
    .line 6525
    .local v34, "top":I
    move-object/from16 v0, v35

    #@166
    iget v5, v0, Landroid/graphics/Rect;->right:I

    #@168
    iget v6, v15, Landroid/graphics/Rect;->right:I

    #@16a
    sub-int v30, v5, v6

    #@16c
    .line 6526
    .local v30, "right":I
    move-object/from16 v0, v35

    #@16e
    iget v5, v0, Landroid/graphics/Rect;->bottom:I

    #@170
    iget v6, v15, Landroid/graphics/Rect;->bottom:I

    #@172
    sub-int v14, v5, v6

    #@174
    .line 6527
    .local v14, "bottom":I
    move-object/from16 v0, v23

    #@176
    move/from16 v1, v28

    #@178
    move/from16 v2, v34

    #@17a
    move/from16 v3, v30

    #@17c
    invoke-virtual {v0, v1, v2, v3, v14}, Landroid/graphics/Rect;->union(IIII)V

    #@17f
    .line 6528
    move-object/from16 v0, v38

    #@181
    move-object/from16 v1, v33

    #@183
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->getVisibleBounds(Landroid/graphics/Rect;)V

    #@186
    .line 6529
    move-object/from16 v0, v23

    #@188
    move-object/from16 v1, v33

    #@18a
    invoke-static {v0, v1}, Landroid/graphics/Rect;->intersects(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    #@18d
    move-result v5

    #@18e
    if-nez v5, :cond_e

    #@190
    .line 6531
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    #@193
    goto/16 :goto_6

    #@195
    .line 6462
    .end local v13    # "bm":Landroid/graphics/Bitmap;
    .end local v14    # "bottom":I
    .end local v15    # "cr":Landroid/graphics/Rect;
    .end local v24    # "i":I
    .end local v27    # "layer":I
    .end local v28    # "left":I
    .end local v30    # "right":I
    .end local v34    # "top":I
    .end local v35    # "wf":Landroid/graphics/Rect;
    .end local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v37    # "windows":Lcom/android/server/wm/WindowList;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :catchall_2
    move-exception v5

    #@196
    monitor-exit v39

    #@197
    throw v5

    #@198
    .line 6537
    .restart local v13    # "bm":Landroid/graphics/Bitmap;
    .restart local v24    # "i":I
    .restart local v27    # "layer":I
    .restart local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v37    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_15
    if-eqz v12, :cond_16

    #@19a
    move/from16 v22, p8

    #@19c
    goto/16 :goto_7

    #@19e
    :cond_16
    const/16 v22, 0x0

    #@1a0
    goto/16 :goto_7

    #@1a2
    .line 6554
    .end local v27    # "layer":I
    .end local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_17
    if-nez v32, :cond_19

    #@1a4
    .line 6555
    :try_start_5
    const-string/jumbo v6, "WindowManager"

    #@1a7
    new-instance v5, Ljava/lang/StringBuilder;

    #@1a9
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@1ac
    const-string/jumbo v40, "Failed to capture screenshot of "

    #@1af
    move-object/from16 v0, v40

    #@1b1
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1b4
    move-result-object v5

    #@1b5
    move-object/from16 v0, p1

    #@1b7
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1ba
    move-result-object v5

    #@1bb
    .line 6556
    const-string/jumbo v40, " appWin="

    #@1be
    .line 6555
    move-object/from16 v0, v40

    #@1c0
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c3
    move-result-object v40

    #@1c4
    .line 6556
    if-nez v12, :cond_18

    #@1c6
    const-string/jumbo v5, "null"

    #@1c9
    .line 6555
    :goto_8
    move-object/from16 v0, v40

    #@1cb
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1ce
    move-result-object v5

    #@1cf
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1d2
    move-result-object v5

    #@1d3
    invoke-static {v6, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    #@1d6
    .line 6558
    const/4 v5, 0x0

    #@1d7
    monitor-exit v39

    #@1d8
    return-object v5

    #@1d9
    .line 6556
    :cond_18
    :try_start_6
    new-instance v5, Ljava/lang/StringBuilder;

    #@1db
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@1de
    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1e1
    move-result-object v5

    #@1e2
    const-string/jumbo v41, " drawState="

    #@1e5
    move-object/from16 v0, v41

    #@1e7
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1ea
    move-result-object v5

    #@1eb
    .line 6557
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1ed
    move-object/from16 v41, v0

    #@1ef
    move-object/from16 v0, v41

    #@1f1
    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    #@1f3
    move/from16 v41, v0

    #@1f5
    .line 6556
    move/from16 v0, v41

    #@1f7
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1fa
    move-result-object v5

    #@1fb
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    #@1fe
    move-result-object v5

    #@1ff
    goto :goto_8

    #@200
    .line 6566
    :cond_19
    if-nez v8, :cond_1a

    #@202
    .line 6569
    const/4 v5, 0x0

    #@203
    monitor-exit v39

    #@204
    return-object v5

    #@205
    .line 6572
    :cond_1a
    if-nez p5, :cond_1c

    #@207
    .line 6574
    const/4 v5, 0x0

    #@208
    const/4 v6, 0x0

    #@209
    :try_start_7
    move-object/from16 v0, v23

    #@20b
    move/from16 v1, v21

    #@20d
    move/from16 v2, v18

    #@20f
    invoke-virtual {v0, v5, v6, v1, v2}, Landroid/graphics/Rect;->intersect(IIII)Z

    #@212
    move-result v5

    #@213
    if-nez v5, :cond_1b

    #@215
    .line 6575
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->setEmpty()V

    #@218
    .line 6581
    :cond_1b
    :goto_9
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->isEmpty()Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    #@21b
    move-result v5

    #@21c
    if-eqz v5, :cond_1d

    #@21e
    .line 6582
    const/4 v5, 0x0

    #@21f
    monitor-exit v39

    #@220
    return-object v5

    #@221
    .line 6579
    :cond_1c
    const/4 v5, 0x0

    #@222
    const/4 v6, 0x0

    #@223
    :try_start_8
    move-object/from16 v0, v23

    #@225
    move/from16 v1, v21

    #@227
    move/from16 v2, v18

    #@229
    invoke-virtual {v0, v5, v6, v1, v2}, Landroid/graphics/Rect;->set(IIII)V

    #@22c
    goto :goto_9

    #@22d
    .line 6585
    :cond_1d
    if-gez p3, :cond_1e

    #@22f
    .line 6586
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->width()I

    #@232
    move-result v5

    #@233
    int-to-float v5, v5

    #@234
    mul-float v5, v5, p6

    #@236
    float-to-int v0, v5

    #@237
    move/from16 p3, v0

    #@239
    .line 6588
    :cond_1e
    if-gez p4, :cond_1f

    #@23b
    .line 6589
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    #@23e
    move-result v5

    #@23f
    int-to-float v5, v5

    #@240
    mul-float v5, v5, p6

    #@242
    float-to-int v0, v5

    #@243
    move/from16 p4, v0

    #@245
    .line 6594
    :cond_1f
    new-instance v4, Landroid/graphics/Rect;

    #@247
    move-object/from16 v0, v23

    #@249
    invoke-direct {v4, v0}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    #@24c
    .line 6595
    .local v4, "crop":Landroid/graphics/Rect;
    move/from16 v0, p3

    #@24e
    int-to-float v5, v0

    #@24f
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->width()I

    #@252
    move-result v6

    #@253
    int-to-float v6, v6

    #@254
    div-float/2addr v5, v6

    #@255
    move/from16 v0, p4

    #@257
    int-to-float v6, v0

    #@258
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    #@25b
    move-result v40

    #@25c
    move/from16 v0, v40

    #@25e
    int-to-float v0, v0

    #@25f
    move/from16 v40, v0

    #@261
    div-float v6, v6, v40

    #@263
    cmpg-float v5, v5, v6

    #@265
    if-gez v5, :cond_22

    #@267
    .line 6596
    move/from16 v0, p3

    #@269
    int-to-float v5, v0

    #@26a
    move/from16 v0, p4

    #@26c
    int-to-float v6, v0

    #@26d
    div-float/2addr v5, v6

    #@26e
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    #@271
    move-result v6

    #@272
    int-to-float v6, v6

    #@273
    mul-float/2addr v5, v6

    #@274
    float-to-int v0, v5

    #@275
    move/from16 v17, v0

    #@277
    .line 6597
    .local v17, "cropWidth":I
    iget v5, v4, Landroid/graphics/Rect;->left:I

    #@279
    add-int v5, v5, v17

    #@27b
    iput v5, v4, Landroid/graphics/Rect;->right:I

    #@27d
    .line 6604
    .end local v17    # "cropWidth":I
    :goto_a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@280
    move-result-object v5

    #@281
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@284
    move-result-object v5

    #@285
    invoke-virtual {v5}, Landroid/view/Display;->getRotation()I

    #@288
    move-result v10

    #@289
    .line 6606
    .local v10, "rot":I
    const/4 v5, 0x1

    #@28a
    if-eq v10, v5, :cond_20

    #@28c
    const/4 v5, 0x3

    #@28d
    if-ne v10, v5, :cond_21

    #@28f
    .line 6607
    :cond_20
    const/4 v5, 0x1

    #@290
    if-ne v10, v5, :cond_23

    #@292
    const/4 v10, 0x3

    #@293
    .line 6612
    :cond_21
    :goto_b
    move/from16 v0, v21

    #@295
    move/from16 v1, v18

    #@297
    invoke-static {v4, v10, v0, v1}, Lcom/android/server/wm/WindowManagerService;->convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V

    #@29a
    .line 6628
    move-object/from16 v0, p0

    #@29c
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@29e
    const/4 v6, 0x0

    #@29f
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@2a2
    move-result-object v31

    #@2a3
    .line 6629
    .local v31, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v31, :cond_24

    #@2a5
    .line 6630
    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    #@2a8
    move-result v9

    #@2a9
    .line 6636
    :goto_c
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@2ac
    .line 6637
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransactionSync()V

    #@2af
    move/from16 v5, p3

    #@2b1
    move/from16 v6, p4

    #@2b3
    .line 6639
    invoke-static/range {v4 .. v10}, Landroid/view/SurfaceControl;->screenshot(Landroid/graphics/Rect;IIIIZI)Landroid/graphics/Bitmap;

    #@2b6
    move-result-object v13

    #@2b7
    .line 6641
    .local v13, "bm":Landroid/graphics/Bitmap;
    if-nez v13, :cond_25

    #@2b9
    .line 6642
    const-string/jumbo v5, "WindowManager"

    #@2bc
    new-instance v6, Ljava/lang/StringBuilder;

    #@2be
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@2c1
    const-string/jumbo v40, "Screenshot failure taking screenshot for ("

    #@2c4
    move-object/from16 v0, v40

    #@2c6
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c9
    move-result-object v6

    #@2ca
    move/from16 v0, v21

    #@2cc
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2cf
    move-result-object v6

    #@2d0
    const-string/jumbo v40, "x"

    #@2d3
    move-object/from16 v0, v40

    #@2d5
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d8
    move-result-object v6

    #@2d9
    move/from16 v0, v18

    #@2db
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2de
    move-result-object v6

    #@2df
    .line 6643
    const-string/jumbo v40, ") to layer "

    #@2e2
    .line 6642
    move-object/from16 v0, v40

    #@2e4
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e7
    move-result-object v6

    #@2e8
    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2eb
    move-result-object v6

    #@2ec
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2ef
    move-result-object v6

    #@2f0
    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    #@2f3
    .line 6644
    const/4 v5, 0x0

    #@2f4
    monitor-exit v39

    #@2f5
    return-object v5

    #@2f6
    .line 6599
    .end local v10    # "rot":I
    .end local v31    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .local v13, "bm":Landroid/graphics/Bitmap;
    :cond_22
    move/from16 v0, p4

    #@2f8
    int-to-float v5, v0

    #@2f9
    move/from16 v0, p3

    #@2fb
    int-to-float v6, v0

    #@2fc
    div-float/2addr v5, v6

    #@2fd
    :try_start_9
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->width()I

    #@300
    move-result v6

    #@301
    int-to-float v6, v6

    #@302
    mul-float/2addr v5, v6

    #@303
    float-to-int v0, v5

    #@304
    move/from16 v16, v0

    #@306
    .line 6600
    .local v16, "cropHeight":I
    iget v5, v4, Landroid/graphics/Rect;->top:I

    #@308
    add-int v5, v5, v16

    #@30a
    iput v5, v4, Landroid/graphics/Rect;->bottom:I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    #@30c
    goto/16 :goto_a

    #@30e
    .line 6607
    .end local v16    # "cropHeight":I
    .restart local v10    # "rot":I
    :cond_23
    const/4 v10, 0x1

    #@30f
    goto :goto_b

    #@310
    .line 6629
    .restart local v31    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_24
    const/4 v9, 0x0

    #@311
    .local v9, "inRotation":Z
    goto :goto_c

    #@312
    .end local v9    # "inRotation":Z
    .local v13, "bm":Landroid/graphics/Bitmap;
    :cond_25
    monitor-exit v39

    #@313
    .line 6671
    move-object/from16 v0, p7

    #@315
    invoke-virtual {v13, v0}, Landroid/graphics/Bitmap;->createAshmemBitmap(Landroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;

    #@318
    move-result-object v29

    #@319
    .line 6672
    .local v29, "ret":Landroid/graphics/Bitmap;
    invoke-virtual {v13}, Landroid/graphics/Bitmap;->recycle()V

    #@31c
    .line 6673
    return-object v29
.end method

.method public screenshotWallpaper()Landroid/graphics/Bitmap;
    .locals 12

    #@0
    .prologue
    const-wide/16 v10, 0x20

    #@2
    .line 6328
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    #@5
    .line 6329
    const-string/jumbo v1, "screenshotWallpaper()"

    #@8
    .line 6328
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v0

    #@c
    if-nez v0, :cond_0

    #@e
    .line 6330
    new-instance v0, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    #@13
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v0

    #@17
    .line 6333
    :cond_0
    :try_start_0
    const-string/jumbo v0, "screenshotWallpaper"

    #@1a
    const-wide/16 v2, 0x20

    #@1c
    invoke-static {v2, v3, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@1f
    .line 6335
    sget-object v7, Landroid/graphics/Bitmap$Config;->ARGB_8888:Landroid/graphics/Bitmap$Config;

    #@21
    .line 6334
    const/4 v1, 0x0

    #@22
    const/4 v2, 0x0

    #@23
    const/4 v3, -0x1

    #@24
    const/4 v4, -0x1

    #@25
    const/4 v5, 0x1

    #@26
    const/high16 v6, 0x3f800000    # 1.0f

    #@28
    .line 6335
    const/4 v8, 0x1

    #@29
    move-object v0, p0

    #@2a
    .line 6334
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/wm/WindowManagerService;->screenshotApplicationsInner(Landroid/os/IBinder;IIIZFLandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2d
    move-result-object v0

    #@2e
    .line 6337
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    #@31
    .line 6334
    return-object v0

    #@32
    .line 6336
    :catchall_0
    move-exception v0

    #@33
    .line 6337
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    #@36
    .line 6336
    throw v0
.end method

.method public scrollTask(ILandroid/graphics/Rect;)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5418
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5419
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5420
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    .line 5421
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "scrollTask: taskId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5422
    const-string/jumbo v4, " not found."

    #@22
    .line 5421
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5418
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5425
    .restart local v0    # "task":Lcom/android/server/wm/Task;
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->scrollLocked(Landroid/graphics/Rect;)Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_1

    #@37
    .line 5426
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@3a
    move-result-object v1

    #@3b
    const/4 v3, 0x1

    #@3c
    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@3e
    .line 5427
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@40
    invoke-virtual {v1}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@43
    .line 5428
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@45
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@48
    :cond_1
    monitor-exit v2

    #@49
    .line 5417
    return-void
.end method

.method sendNewConfiguration()V
    .locals 3

    #@0
    .prologue
    .line 7484
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@2
    const/4 v2, 0x0

    #@3
    invoke-interface {v1, v2}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@6
    .line 7482
    :goto_0
    return-void

    #@7
    .line 7485
    :catch_0
    move-exception v0

    #@8
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public setAnimationScale(IF)V
    .locals 2
    .param p1, "which"    # I
    .param p2, "scale"    # F

    #@0
    .prologue
    .line 5682
    const-string/jumbo v0, "android.permission.SET_ANIMATION_SCALE"

    #@3
    .line 5683
    const-string/jumbo v1, "setAnimationScale()"

    #@6
    .line 5682
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 5684
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires SET_ANIMATION_SCALE permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 5687
    :cond_0
    invoke-static {p2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@18
    move-result p2

    #@19
    .line 5688
    packed-switch p1, :pswitch_data_0

    #@1c
    .line 5695
    :goto_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1e
    const/16 v1, 0xe

    #@20
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@23
    .line 5681
    return-void

    #@24
    .line 5689
    :pswitch_0
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@26
    goto :goto_0

    #@27
    .line 5690
    :pswitch_1
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@29
    goto :goto_0

    #@2a
    .line 5691
    :pswitch_2
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@2c
    goto :goto_0

    #@2d
    .line 5688
    nop

    #@2e
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public setAnimationScales([F)V
    .locals 5
    .param p1, "scales"    # [F

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    const/4 v3, 0x2

    #@2
    const/4 v2, 0x1

    #@3
    .line 5700
    const-string/jumbo v0, "android.permission.SET_ANIMATION_SCALE"

    #@6
    .line 5701
    const-string/jumbo v1, "setAnimationScale()"

    #@9
    .line 5700
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@c
    move-result v0

    #@d
    if-nez v0, :cond_0

    #@f
    .line 5702
    new-instance v0, Ljava/lang/SecurityException;

    #@11
    const-string/jumbo v1, "Requires SET_ANIMATION_SCALE permission"

    #@14
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@17
    throw v0

    #@18
    .line 5705
    :cond_0
    if-eqz p1, :cond_3

    #@1a
    .line 5706
    array-length v0, p1

    #@1b
    if-lt v0, v2, :cond_1

    #@1d
    .line 5707
    const/4 v0, 0x0

    #@1e
    aget v0, p1, v0

    #@20
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@23
    move-result v0

    #@24
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@26
    .line 5709
    :cond_1
    array-length v0, p1

    #@27
    if-lt v0, v3, :cond_2

    #@29
    .line 5710
    aget v0, p1, v2

    #@2b
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@2e
    move-result v0

    #@2f
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@31
    .line 5712
    :cond_2
    array-length v0, p1

    #@32
    const/4 v1, 0x3

    #@33
    if-lt v0, v1, :cond_3

    #@35
    .line 5713
    aget v0, p1, v3

    #@37
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@3a
    move-result v0

    #@3b
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@3d
    .line 5714
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V

    #@40
    .line 5719
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@42
    const/16 v1, 0xe

    #@44
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@47
    .line 5699
    return-void
.end method

.method public setAppFullscreen(Landroid/os/IBinder;Z)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "toOpaque"    # Z

    #@0
    .prologue
    .line 4398
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 4399
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@6
    move-result-object v0

    #@7
    .line 4400
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@9
    .line 4401
    iput-boolean p2, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@b
    .line 4402
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setWindowOpaqueLocked(Landroid/os/IBinder;Z)V

    #@e
    .line 4403
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@10
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@13
    :cond_0
    monitor-exit v2

    #@14
    .line 4397
    return-void

    #@15
    .line 4398
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@16
    monitor-exit v2

    #@17
    throw v1
.end method

.method public setAppOrientation(Landroid/view/IApplicationToken;I)V
    .locals 5
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "requestedOrientation"    # I

    #@0
    .prologue
    .line 3955
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3956
    const-string/jumbo v2, "setAppOrientation()"

    #@6
    .line 3955
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3957
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3960
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 3961
    :try_start_0
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@1b
    move-result-object v1

    #@1c
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1f
    move-result-object v0

    #@20
    .line 3962
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_1

    #@22
    .line 3963
    const-string/jumbo v1, "WindowManager"

    #@25
    new-instance v3, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    const-string/jumbo v4, "Attempted to set orientation of non-existing app token: "

    #@2d
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@34
    move-result-object v3

    #@35
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@38
    move-result-object v3

    #@39
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3c
    monitor-exit v2

    #@3d
    .line 3964
    return-void

    #@3e
    .line 3967
    :cond_1
    :try_start_1
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@40
    monitor-exit v2

    #@41
    .line 3954
    return-void

    #@42
    .line 3960
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@43
    monitor-exit v2

    #@44
    throw v1
.end method

.method public setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;Z)Z
    .locals 20
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "transferFrom"    # Landroid/os/IBinder;
    .param p11, "createIfNeeded"    # Z

    #@0
    .prologue
    .line 4191
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4192
    const-string/jumbo v4, "setAppStartingWindow()"

    #@6
    .line 4191
    move-object/from16 v0, p0

    #@8
    invoke-direct {v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v3

    #@c
    if-nez v3, :cond_0

    #@e
    .line 4193
    new-instance v3, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v3

    #@17
    .line 4196
    :cond_0
    move-object/from16 v0, p0

    #@19
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    move-object/from16 v19, v0

    #@1d
    monitor-enter v19

    #@1e
    .line 4201
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@21
    move-result-object v18

    #@22
    .line 4202
    .local v18, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v18, :cond_1

    #@24
    .line 4203
    const-string/jumbo v3, "WindowManager"

    #@27
    new-instance v4, Ljava/lang/StringBuilder;

    #@29
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@2c
    const-string/jumbo v5, "Attempted to set icon of non-existing app token: "

    #@2f
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v4

    #@33
    move-object/from16 v0, p1

    #@35
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@38
    move-result-object v4

    #@39
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3c
    move-result-object v4

    #@3d
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@40
    .line 4204
    const/4 v3, 0x0

    #@41
    monitor-exit v19

    #@42
    return v3

    #@43
    .line 4210
    :cond_1
    :try_start_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@46
    move-result v3

    #@47
    if-nez v3, :cond_2

    #@49
    .line 4211
    const/4 v3, 0x0

    #@4a
    monitor-exit v19

    #@4b
    return v3

    #@4c
    .line 4214
    :cond_2
    :try_start_2
    move-object/from16 v0, v18

    #@4e
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@50
    if-eqz v3, :cond_3

    #@52
    .line 4215
    const/4 v3, 0x0

    #@53
    monitor-exit v19

    #@54
    return v3

    #@55
    .line 4224
    :cond_3
    if-eqz p3, :cond_8

    #@57
    .line 4225
    :try_start_3
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    #@5a
    move-result-object v3

    #@5b
    .line 4226
    sget-object v4, Lcom/android/internal/R$styleable;->Window:[I

    #@5d
    move-object/from16 v0, p0

    #@5f
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@61
    .line 4225
    move-object/from16 v0, p2

    #@63
    move/from16 v1, p3

    #@65
    invoke-virtual {v3, v0, v1, v4, v5}, Lcom/android/server/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/server/AttributeCache$Entry;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@68
    move-result-object v12

    #@69
    .line 4227
    .local v12, "ent":Lcom/android/server/AttributeCache$Entry;
    if-nez v12, :cond_4

    #@6b
    .line 4230
    const/4 v3, 0x0

    #@6c
    monitor-exit v19

    #@6d
    return v3

    #@6e
    .line 4232
    :cond_4
    :try_start_4
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@70
    .line 4233
    const/4 v4, 0x5

    #@71
    const/4 v5, 0x0

    #@72
    .line 4232
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    #@75
    move-result v16

    #@76
    .line 4234
    .local v16, "windowIsTranslucent":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@78
    .line 4235
    const/4 v4, 0x4

    #@79
    const/4 v5, 0x0

    #@7a
    .line 4234
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    #@7d
    move-result v15

    #@7e
    .line 4236
    .local v15, "windowIsFloating":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@80
    .line 4237
    const/16 v4, 0xe

    #@82
    const/4 v5, 0x0

    #@83
    .line 4236
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    #@86
    move-result v17

    #@87
    .line 4238
    .local v17, "windowShowWallpaper":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@89
    .line 4239
    const/16 v4, 0xc

    #@8b
    const/4 v5, 0x0

    #@8c
    .line 4238
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@8f
    move-result v14

    #@90
    .line 4243
    .local v14, "windowDisableStarting":Z
    if-eqz v16, :cond_5

    #@92
    .line 4244
    const/4 v3, 0x0

    #@93
    monitor-exit v19

    #@94
    return v3

    #@95
    .line 4246
    :cond_5
    if-nez v15, :cond_6

    #@97
    if-eqz v14, :cond_7

    #@99
    .line 4247
    :cond_6
    const/4 v3, 0x0

    #@9a
    monitor-exit v19

    #@9b
    return v3

    #@9c
    .line 4249
    :cond_7
    if-eqz v17, :cond_8

    #@9e
    .line 4250
    :try_start_5
    move-object/from16 v0, p0

    #@a0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@a2
    invoke-virtual {v3}, Lcom/android/server/wm/WallpaperController;->getWallpaperTarget()Lcom/android/server/wm/WindowState;

    #@a5
    move-result-object v3

    #@a6
    if-nez v3, :cond_9

    #@a8
    .line 4256
    const/high16 v3, 0x100000

    #@aa
    or-int p9, p9, v3

    #@ac
    .line 4263
    .end local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v14    # "windowDisableStarting":Z
    .end local v15    # "windowIsFloating":Z
    .end local v16    # "windowIsTranslucent":Z
    .end local v17    # "windowShowWallpaper":Z
    :cond_8
    move-object/from16 v0, p0

    #@ae
    move-object/from16 v1, p10

    #@b0
    move-object/from16 v2, v18

    #@b2
    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->transferStartingWindow(Landroid/os/IBinder;Lcom/android/server/wm/AppWindowToken;)Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@b5
    move-result v3

    #@b6
    if-eqz v3, :cond_a

    #@b8
    .line 4264
    const/4 v3, 0x1

    #@b9
    monitor-exit v19

    #@ba
    return v3

    #@bb
    .line 4258
    .restart local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .restart local v14    # "windowDisableStarting":Z
    .restart local v15    # "windowIsFloating":Z
    .restart local v16    # "windowIsTranslucent":Z
    .restart local v17    # "windowShowWallpaper":Z
    :cond_9
    const/4 v3, 0x0

    #@bc
    monitor-exit v19

    #@bd
    return v3

    #@be
    .line 4269
    .end local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v14    # "windowDisableStarting":Z
    .end local v15    # "windowIsFloating":Z
    .end local v16    # "windowIsTranslucent":Z
    .end local v17    # "windowShowWallpaper":Z
    :cond_a
    if-nez p11, :cond_b

    #@c0
    .line 4270
    const/4 v3, 0x0

    #@c1
    monitor-exit v19

    #@c2
    return v3

    #@c3
    .line 4274
    :cond_b
    :try_start_6
    new-instance v3, Lcom/android/server/wm/StartingData;

    #@c5
    move-object/from16 v4, p2

    #@c7
    move/from16 v5, p3

    #@c9
    move-object/from16 v6, p4

    #@cb
    move-object/from16 v7, p5

    #@cd
    move/from16 v8, p6

    #@cf
    move/from16 v9, p7

    #@d1
    move/from16 v10, p8

    #@d3
    move/from16 v11, p9

    #@d5
    invoke-direct/range {v3 .. v11}, Lcom/android/server/wm/StartingData;-><init>(Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIII)V

    #@d8
    move-object/from16 v0, v18

    #@da
    iput-object v3, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@dc
    .line 4276
    move-object/from16 v0, p0

    #@de
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@e0
    const/4 v4, 0x5

    #@e1
    move-object/from16 v0, v18

    #@e3
    invoke-virtual {v3, v4, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@e6
    move-result-object v13

    #@e7
    .line 4281
    .local v13, "m":Landroid/os/Message;
    move-object/from16 v0, p0

    #@e9
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@eb
    invoke-virtual {v3, v13}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@ee
    monitor-exit v19

    #@ef
    .line 4283
    const/4 v3, 0x1

    #@f0
    return v3

    #@f1
    .line 4196
    .end local v13    # "m":Landroid/os/Message;
    .end local v18    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v3

    #@f2
    monitor-exit v19

    #@f3
    throw v3
.end method

.method public setAppTask(Landroid/os/IBinder;IILandroid/graphics/Rect;Landroid/content/res/Configuration;IZ)V
    .locals 12
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "taskId"    # I
    .param p3, "stackId"    # I
    .param p4, "taskBounds"    # Landroid/graphics/Rect;
    .param p5, "config"    # Landroid/content/res/Configuration;
    .param p6, "taskResizeMode"    # I
    .param p7, "homeTask"    # Z

    #@0
    .prologue
    .line 3590
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3591
    const-string/jumbo v3, "setAppTask()"

    #@6
    .line 3590
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 3592
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 3595
    :cond_0
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v11

    #@18
    .line 3596
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v6

    #@1c
    .line 3597
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v6, :cond_1

    #@1e
    .line 3598
    const-string/jumbo v2, "WindowManager"

    #@21
    new-instance v3, Ljava/lang/StringBuilder;

    #@23
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@26
    const-string/jumbo v4, "Attempted to set task id of non-existing app token: "

    #@29
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v3

    #@2d
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@34
    move-result-object v3

    #@35
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    monitor-exit v11

    #@39
    .line 3599
    return-void

    #@3a
    .line 3601
    :cond_1
    :try_start_1
    iget-object v10, v6, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@3c
    .line 3602
    .local v10, "oldTask":Lcom/android/server/wm/Task;
    invoke-virtual {v10, v6}, Lcom/android/server/wm/Task;->removeAppToken(Lcom/android/server/wm/AppWindowToken;)Z

    #@3f
    .line 3604
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@41
    invoke-virtual {v2, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v9

    #@45
    check-cast v9, Lcom/android/server/wm/Task;

    #@47
    .line 3605
    .local v9, "newTask":Lcom/android/server/wm/Task;
    if-nez v9, :cond_2

    #@49
    .line 3607
    iget v5, v10, Lcom/android/server/wm/Task;->mUserId:I

    #@4b
    move-object v2, p0

    #@4c
    move v3, p2

    #@4d
    move v4, p3

    #@4e
    move-object/from16 v7, p4

    #@50
    move-object/from16 v8, p5

    #@52
    .line 3606
    invoke-direct/range {v2 .. v8}, Lcom/android/server/wm/WindowManagerService;->createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;

    #@55
    move-result-object v9

    #@56
    .line 3609
    :cond_2
    const v2, 0x7fffffff

    #@59
    move/from16 v0, p6

    #@5b
    move/from16 v1, p7

    #@5d
    invoke-virtual {v9, v2, v6, v0, v1}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;IZ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@60
    monitor-exit v11

    #@61
    .line 3589
    return-void

    #@62
    .line 3595
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v9    # "newTask":Lcom/android/server/wm/Task;
    .end local v10    # "oldTask":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v2

    #@63
    monitor-exit v11

    #@64
    throw v2
.end method

.method public setAppVisibility(Landroid/os/IBinder;Z)V
    .locals 12
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v0, 0x0

    #@2
    .line 4618
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@5
    .line 4619
    const-string/jumbo v4, "setAppVisibility()"

    #@8
    .line 4618
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v3

    #@c
    if-nez v3, :cond_0

    #@e
    .line 4620
    new-instance v0, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v0

    #@17
    .line 4625
    :cond_0
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@19
    monitor-enter v11

    #@1a
    .line 4626
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1d
    move-result-object v1

    #@1e
    .line 4627
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_1

    #@20
    .line 4628
    const-string/jumbo v0, "WindowManager"

    #@23
    new-instance v2, Ljava/lang/StringBuilder;

    #@25
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@28
    const-string/jumbo v3, "Attempted to set visibility of non-existing app token: "

    #@2b
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e
    move-result-object v2

    #@2f
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v2

    #@33
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@36
    move-result-object v2

    #@37
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3a
    monitor-exit v11

    #@3b
    .line 4629
    return-void

    #@3c
    .line 4637
    :cond_1
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@3e
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@41
    .line 4638
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@43
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@46
    .line 4639
    const/4 v3, 0x0

    #@47
    iput-boolean v3, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@49
    .line 4640
    if-eqz p2, :cond_7

    #@4b
    :goto_0
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@4d
    .line 4642
    if-nez p2, :cond_8

    #@4f
    .line 4646
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->removeAllDeadWindows()V

    #@52
    .line 4647
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->setVisibleBeforeClientHidden()V

    #@55
    .line 4686
    :cond_2
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@58
    move-result v0

    #@59
    if-eqz v0, :cond_e

    #@5b
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5d
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@60
    move-result v0

    #@61
    if-eqz v0, :cond_e

    #@63
    .line 4691
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@65
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    #@67
    if-eqz v0, :cond_3

    #@69
    .line 4692
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6b
    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@6d
    if-nez v0, :cond_3

    #@6f
    .line 4693
    const-string/jumbo v0, "WindowManager"

    #@72
    new-instance v2, Ljava/lang/StringBuilder;

    #@74
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@77
    const-string/jumbo v3, "Will NOT set dummy animation on: "

    #@7a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7d
    move-result-object v2

    #@7e
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@81
    move-result-object v2

    #@82
    .line 4694
    const-string/jumbo v3, ", using null transfered animation!"

    #@85
    .line 4693
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@88
    move-result-object v2

    #@89
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8c
    move-result-object v2

    #@8d
    invoke-static {v0, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    #@90
    .line 4696
    :cond_3
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@92
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    #@94
    if-nez v0, :cond_5

    #@96
    .line 4697
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@98
    if-eqz v0, :cond_4

    #@9a
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@9c
    .line 4696
    if-eqz v0, :cond_5

    #@9e
    .line 4700
    :cond_4
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@a0
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->setDummyAnimation()V

    #@a3
    .line 4702
    :cond_5
    const/4 v0, 0x1

    #@a4
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@a6
    .line 4703
    if-eqz p2, :cond_d

    #@a8
    .line 4704
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@aa
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@ad
    .line 4705
    const/4 v0, 0x1

    #@ae
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    #@b0
    .line 4710
    :goto_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@b2
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    #@b5
    move-result v0

    #@b6
    const/16 v2, 0x10

    #@b8
    if-ne v0, v2, :cond_6

    #@ba
    .line 4713
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@bd
    move-result-object v0

    #@be
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    #@c1
    move-result-object v10

    #@c2
    .line 4714
    .local v10, "win":Lcom/android/server/wm/WindowState;
    if-eqz v10, :cond_6

    #@c4
    .line 4715
    iget-object v7, v10, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@c6
    .line 4716
    .local v7, "focusedToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v7, :cond_6

    #@c8
    .line 4720
    const/4 v0, 0x1

    #@c9
    iput-boolean v0, v7, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@cb
    .line 4721
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@cd
    invoke-virtual {v0, v7}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@d0
    .end local v7    # "focusedToken":Lcom/android/server/wm/AppWindowToken;
    .end local v10    # "win":Lcom/android/server/wm/WindowState;
    :cond_6
    monitor-exit v11

    #@d1
    .line 4725
    return-void

    #@d2
    :cond_7
    move v0, v2

    #@d3
    .line 4640
    goto/16 :goto_0

    #@d5
    .line 4648
    :cond_8
    if-eqz p2, :cond_2

    #@d7
    .line 4649
    :try_start_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@d9
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@dc
    move-result v0

    #@dd
    if-nez v0, :cond_9

    #@df
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@e1
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isReady()Z

    #@e4
    move-result v0

    #@e5
    if-eqz v0, :cond_9

    #@e7
    .line 4653
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@e9
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@ec
    .line 4655
    :cond_9
    const/4 v0, 0x0

    #@ed
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@ef
    .line 4658
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@f1
    if-nez v0, :cond_a

    #@f3
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppStopped:Z

    #@f5
    if-eqz v0, :cond_c

    #@f7
    .line 4659
    :cond_a
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    #@fa
    .line 4662
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@fc
    if-eqz v0, :cond_b

    #@fe
    .line 4663
    const/4 v0, 0x1

    #@ff
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@101
    .line 4666
    :cond_b
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@103
    if-eqz v0, :cond_c

    #@105
    .line 4673
    const/4 v0, 0x0

    #@106
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@108
    .line 4674
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@10b
    .line 4677
    :cond_c
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->requestUpdateWallpaperIfNeeded()V

    #@10e
    .line 4681
    const/4 v0, 0x0

    #@10f
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppStopped:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@111
    goto/16 :goto_1

    #@113
    .line 4625
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v0

    #@114
    monitor-exit v11

    #@115
    throw v0

    #@116
    .line 4707
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_d
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@118
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@11b
    .line 4708
    const/4 v0, 0x0

    #@11c
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    #@11e
    goto :goto_2

    #@11f
    .line 4728
    :cond_e
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@122
    move-result-wide v8

    #@123
    .line 4729
    .local v8, "origId":J
    const/4 v0, 0x0

    #@124
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@126
    .line 4731
    iget-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    #@128
    .line 4730
    const/4 v2, 0x0

    #@129
    const/4 v4, -0x1

    #@12a
    .line 4731
    const/4 v5, 0x1

    #@12b
    move-object v0, p0

    #@12c
    move v3, p2

    #@12d
    .line 4730
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    #@130
    .line 4732
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@133
    .line 4733
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@136
    monitor-exit v11

    #@137
    .line 4617
    return-void
.end method

.method public setCurrentProfileIds([I)V
    .locals 2
    .param p1, "currentProfileIds"    # [I

    #@0
    .prologue
    .line 5841
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5842
    :try_start_0
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 5840
    return-void

    #@7
    .line 5841
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method public setCurrentUser(I[I)V
    .locals 8
    .param p1, "newUserId"    # I
    .param p2, "currentProfileIds"    # [I

    #@0
    .prologue
    .line 5847
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 5848
    :try_start_0
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@5
    .line 5849
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@7
    .line 5850
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@9
    invoke-virtual {v5, p1}, Lcom/android/server/wm/AppTransition;->setCurrentUser(I)V

    #@c
    .line 5851
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@e
    invoke-interface {v5, p1}, Landroid/view/WindowManagerPolicy;->setCurrentUserLw(I)V

    #@11
    .line 5856
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@13
    const/4 v7, 0x1

    #@14
    invoke-interface {v5, v7}, Landroid/view/WindowManagerPolicy;->enableKeyguard(Z)V

    #@17
    .line 5859
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@19
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@1c
    move-result v3

    #@1d
    .line 5860
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    #@1e
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v3, :cond_0

    #@20
    .line 5861
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@22
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@25
    move-result-object v0

    #@26
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@28
    .line 5862
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->switchUserStacks()V

    #@2b
    .line 5863
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@2e
    .line 5860
    add-int/lit8 v1, v1, 0x1

    #@30
    goto :goto_0

    #@31
    .line 5865
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@33
    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@36
    .line 5868
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@39
    move-result-object v0

    #@3a
    .line 5869
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@3c
    .line 5870
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->hasDockedTasksForUser(I)Z

    #@3f
    move-result v7

    #@40
    .line 5869
    invoke-virtual {v5, v7}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    #@43
    .line 5874
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@45
    if-eqz v5, :cond_1

    #@47
    .line 5875
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    #@4a
    move-result v2

    #@4b
    .line 5876
    .local v2, "forcedDensity":I
    if-eqz v2, :cond_2

    #@4d
    move v4, v2

    #@4e
    .line 5878
    .local v4, "targetDensity":I
    :goto_1
    invoke-direct {p0, v0, v4}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@51
    .end local v2    # "forcedDensity":I
    .end local v4    # "targetDensity":I
    :cond_1
    monitor-exit v6

    #@52
    .line 5846
    return-void

    #@53
    .line 5877
    .restart local v2    # "forcedDensity":I
    :cond_2
    :try_start_1
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@55
    goto :goto_1

    #@56
    .line 5847
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "forcedDensity":I
    .end local v3    # "numDisplays":I
    :catchall_0
    move-exception v5

    #@57
    monitor-exit v6

    #@58
    throw v5
.end method

.method public setDockedStackCreateState(ILandroid/graphics/Rect;)V
    .locals 2
    .param p1, "mode"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5126
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5127
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setDockedStackCreateStateLocked(ILandroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 5125
    return-void

    #@8
    .line 5126
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method setDockedStackCreateStateLocked(ILandroid/graphics/Rect;)V
    .locals 0
    .param p1, "mode"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5132
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateMode:I

    #@2
    .line 5133
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateBounds:Landroid/graphics/Rect;

    #@4
    .line 5131
    return-void
.end method

.method public setDockedStackDividerTouchRegion(Landroid/graphics/Rect;)V
    .locals 2
    .param p1, "touchRegion"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11283
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 11284
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@a
    move-result-object v0

    #@b
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->setTouchRegion(Landroid/graphics/Rect;)V

    #@e
    .line 11286
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusTaskRegionLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v1

    #@12
    .line 11282
    return-void

    #@13
    .line 11283
    :catchall_0
    move-exception v0

    #@14
    monitor-exit v1

    #@15
    throw v0
.end method

.method public setDockedStackResizing(Z)V
    .locals 2
    .param p1, "resizing"    # Z

    #@0
    .prologue
    .line 11275
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 11276
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@a
    move-result-object v0

    #@b
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->setResizing(Z)V

    #@e
    .line 11277
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v1

    #@12
    .line 11274
    return-void

    #@13
    .line 11275
    :catchall_0
    move-exception v0

    #@14
    monitor-exit v1

    #@15
    throw v0
.end method

.method public setEventDispatching(Z)V
    .locals 2
    .param p1, "enabled"    # Z

    #@0
    .prologue
    .line 8048
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 8049
    const-string/jumbo v1, "setEventDispatching()"

    #@6
    .line 8048
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 8050
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 8053
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v1

    #@18
    .line 8054
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    #@1a
    .line 8055
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@1c
    if-eqz v0, :cond_1

    #@1e
    .line 8056
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@20
    invoke-virtual {v0, p1}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@23
    :cond_1
    monitor-exit v1

    #@24
    .line 8047
    return-void

    #@25
    .line 8053
    :catchall_0
    move-exception v0

    #@26
    monitor-exit v1

    #@27
    throw v0
.end method

.method setFocusTaskRegionLocked()V
    .locals 3

    #@0
    .prologue
    .line 3984
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@2
    if-eqz v2, :cond_0

    #@4
    .line 3985
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@6
    iget-object v1, v2, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@8
    .line 3986
    .local v1, "task":Lcom/android/server/wm/Task;
    invoke-virtual {v1}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@b
    move-result-object v0

    #@c
    .line 3987
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@e
    .line 3988
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->setTouchExcludeRegion(Lcom/android/server/wm/Task;)V

    #@11
    .line 3983
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "task":Lcom/android/server/wm/Task;
    :cond_0
    return-void
.end method

.method public setFocusedApp(Landroid/os/IBinder;Z)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "moveFocusNow"    # Z

    #@0
    .prologue
    .line 3995
    const-string/jumbo v4, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3996
    const-string/jumbo v5, "setFocusedApp()"

    #@6
    .line 3995
    invoke-direct {p0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v4

    #@a
    if-nez v4, :cond_0

    #@c
    .line 3997
    new-instance v4, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v5, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v4

    #@15
    .line 4000
    :cond_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v5

    #@18
    .line 4002
    if-nez p1, :cond_4

    #@1a
    .line 4004
    const/4 v1, 0x0

    #@1b
    .line 4014
    :cond_1
    :goto_0
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@1d
    if-eq v4, v1, :cond_5

    #@1f
    const/4 v0, 0x1

    #@20
    .line 4015
    .local v0, "changed":Z
    :goto_1
    if-eqz v0, :cond_2

    #@22
    .line 4016
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@24
    .line 4017
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@26
    invoke-virtual {v4, v1}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    #@29
    .line 4018
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusTaskRegionLocked()V

    #@2c
    .line 4021
    :cond_2
    if-eqz p2, :cond_3

    #@2e
    if-eqz v0, :cond_3

    #@30
    .line 4022
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@33
    move-result-wide v2

    #@34
    .line 4023
    .local v2, "origId":J
    const/4 v4, 0x0

    #@35
    const/4 v6, 0x1

    #@36
    invoke-virtual {p0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@39
    .line 4024
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3c
    .end local v2    # "origId":J
    :cond_3
    monitor-exit v5

    #@3d
    .line 3994
    return-void

    #@3e
    .line 4006
    .end local v0    # "changed":Z
    :cond_4
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@41
    move-result-object v1

    #@42
    .line 4007
    .local v1, "newFocus":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_1

    #@44
    .line 4008
    const-string/jumbo v4, "WindowManager"

    #@47
    new-instance v6, Ljava/lang/StringBuilder;

    #@49
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@4c
    const-string/jumbo v7, "Attempted to set focus to non-existing app token: "

    #@4f
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@52
    move-result-object v6

    #@53
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@56
    move-result-object v6

    #@57
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@5a
    move-result-object v6

    #@5b
    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@5e
    goto :goto_0

    #@5f
    .line 4000
    .end local v1    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v4

    #@60
    monitor-exit v5

    #@61
    throw v4

    #@62
    .line 4014
    :cond_5
    const/4 v0, 0x0

    #@63
    .restart local v0    # "changed":Z
    goto :goto_1
.end method

.method public setForceResizableTasks(Z)V
    .locals 2
    .param p1, "forceResizableTasks"    # Z

    #@0
    .prologue
    .line 11327
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 11328
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mForceResizableTasks:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 11326
    return-void

    #@7
    .line 11327
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method public setForcedDisplayDensityForUser(III)V
    .locals 11
    .param p1, "displayId"    # I
    .param p2, "density"    # I
    .param p3, "userId"    # I

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    const/4 v3, 0x0

    #@2
    .line 9233
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4
    .line 9234
    const-string/jumbo v1, "android.permission.WRITE_SECURE_SETTINGS"

    #@7
    .line 9233
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@a
    move-result v0

    #@b
    if-eqz v0, :cond_0

    #@d
    .line 9236
    new-instance v0, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@12
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v0

    #@16
    .line 9239
    :cond_0
    if-eqz p1, :cond_1

    #@18
    .line 9240
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@1a
    const-string/jumbo v1, "Can only set the default display"

    #@1d
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@20
    throw v0

    #@21
    .line 9243
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@24
    move-result v0

    #@25
    .line 9244
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@28
    move-result v1

    #@29
    const-string/jumbo v5, "setForcedDisplayDensityForUser"

    #@2c
    const/4 v4, 0x1

    #@2d
    move v2, p3

    #@2e
    .line 9243
    invoke-static/range {v0 .. v6}, Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I

    #@31
    move-result v10

    #@32
    .line 9246
    .local v10, "targetUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@35
    move-result-wide v8

    #@36
    .line 9248
    .local v8, "ident":J
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@38
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@39
    .line 9249
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3c
    move-result-object v7

    #@3d
    .line 9250
    .local v7, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v7, :cond_2

    #@3f
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@41
    if-ne v0, v10, :cond_2

    #@43
    .line 9251
    invoke-direct {p0, v7, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@46
    .line 9253
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@48
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@4b
    move-result-object v0

    #@4c
    .line 9254
    const-string/jumbo v2, "display_density_forced"

    #@4f
    .line 9255
    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@52
    move-result-object v3

    #@53
    .line 9253
    invoke-static {v0, v2, v3, v10}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@56
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@57
    .line 9258
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@5a
    .line 9232
    return-void

    #@5b
    .line 9248
    .end local v7    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v0

    #@5c
    :try_start_3
    monitor-exit v1

    #@5d
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@5e
    .line 9257
    :catchall_1
    move-exception v0

    #@5f
    .line 9258
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@62
    .line 9257
    throw v0
.end method

.method public setForcedDisplayScalingMode(II)V
    .locals 6
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    #@0
    .prologue
    .line 9101
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 9102
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 9101
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 9104
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 9107
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 9108
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 9110
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 9112
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 9113
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 9114
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_4

    #@2c
    .line 9115
    if-ltz p2, :cond_2

    #@2e
    const/4 v1, 0x1

    #@2f
    if-le p2, v1, :cond_3

    #@31
    .line 9116
    :cond_2
    const/4 p2, 0x0

    #@32
    .line 9118
    :cond_3
    invoke-direct {p0, v0, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@35
    .line 9119
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@37
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@3a
    move-result-object v1

    #@3b
    .line 9120
    const-string/jumbo v5, "display_scaling_force"

    #@3e
    .line 9119
    invoke-static {v1, v5, p2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@41
    :cond_4
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@42
    .line 9124
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@45
    .line 9100
    return-void

    #@46
    .line 9112
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@47
    :try_start_3
    monitor-exit v4

    #@48
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@49
    .line 9123
    :catchall_1
    move-exception v1

    #@4a
    .line 9124
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4d
    .line 9123
    throw v1
.end method

.method public setForcedDisplaySize(III)V
    .locals 11
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I

    #@0
    .prologue
    .line 9066
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 9067
    const-string/jumbo v7, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 9066
    invoke-virtual {v6, v7}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v6

    #@9
    if-eqz v6, :cond_0

    #@b
    .line 9069
    new-instance v6, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v7, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v6

    #@14
    .line 9072
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 9073
    new-instance v6, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v7, "Can only set the default display"

    #@1b
    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v6

    #@1f
    .line 9075
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v4

    #@23
    .line 9077
    .local v4, "ident":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 9080
    const/16 v2, 0xc8

    #@28
    .line 9081
    .local v2, "MIN_WIDTH":I
    const/16 v1, 0xc8

    #@2a
    .line 9082
    .local v1, "MIN_HEIGHT":I
    const/4 v0, 0x2

    #@2b
    .line 9083
    .local v0, "MAX_SCALE":I
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@2e
    move-result-object v3

    #@2f
    .line 9084
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_2

    #@31
    .line 9085
    const/16 v6, 0xc8

    #@33
    invoke-static {p2, v6}, Ljava/lang/Math;->max(II)I

    #@36
    move-result v6

    #@37
    .line 9086
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@39
    mul-int/lit8 v8, v8, 0x2

    #@3b
    .line 9085
    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    #@3e
    move-result p2

    #@3f
    .line 9087
    const/16 v6, 0xc8

    #@41
    invoke-static {p3, v6}, Ljava/lang/Math;->max(II)I

    #@44
    move-result v6

    #@45
    .line 9088
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@47
    mul-int/lit8 v8, v8, 0x2

    #@49
    .line 9087
    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    #@4c
    move-result p3

    #@4d
    .line 9089
    invoke-direct {p0, v3, p2, p3}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    #@50
    .line 9090
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@52
    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@55
    move-result-object v6

    #@56
    .line 9091
    const-string/jumbo v8, "display_size_forced"

    #@59
    new-instance v9, Ljava/lang/StringBuilder;

    #@5b
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@5e
    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@61
    move-result-object v9

    #@62
    const-string/jumbo v10, ","

    #@65
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@68
    move-result-object v9

    #@69
    invoke-virtual {v9, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@6c
    move-result-object v9

    #@6d
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@70
    move-result-object v9

    #@71
    .line 9090
    invoke-static {v6, v8, v9}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@74
    :cond_2
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@75
    .line 9095
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@78
    .line 9065
    return-void

    #@79
    .line 9077
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v6

    #@7a
    :try_start_3
    monitor-exit v7

    #@7b
    throw v6
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@7c
    .line 9094
    .end local v0    # "MAX_SCALE":I
    .end local v1    # "MIN_HEIGHT":I
    .end local v2    # "MIN_WIDTH":I
    :catchall_1
    move-exception v6

    #@7d
    .line 9095
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@80
    .line 9094
    throw v6
.end method

.method setHoldScreenLocked(Lcom/android/server/wm/Session;)V
    .locals 6
    .param p1, "newHoldScreen"    # Lcom/android/server/wm/Session;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 9732
    if-eqz p1, :cond_2

    #@3
    const/4 v0, 0x1

    #@4
    .line 9734
    .local v0, "hold":Z
    :goto_0
    if-eqz v0, :cond_0

    #@6
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    #@8
    if-eq v2, p1, :cond_0

    #@a
    .line 9735
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@c
    new-instance v3, Landroid/os/WorkSource;

    #@e
    iget v4, p1, Lcom/android/server/wm/Session;->mUid:I

    #@10
    invoke-direct {v3, v4}, Landroid/os/WorkSource;-><init>(I)V

    #@13
    invoke-virtual {v2, v3}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    #@16
    .line 9737
    :cond_0
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    #@18
    .line 9739
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@1a
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    #@1d
    move-result v1

    #@1e
    .line 9740
    .local v1, "state":Z
    if-eq v0, v1, :cond_1

    #@20
    .line 9741
    if-eqz v0, :cond_3

    #@22
    .line 9746
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@24
    iget-object v2, v2, Lcom/android/server/wm/WindowSurfacePlacer;->mHoldScreenWindow:Lcom/android/server/wm/WindowState;

    #@26
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    #@28
    .line 9747
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    #@2a
    .line 9748
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@2c
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->acquire()V

    #@2f
    .line 9749
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@31
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStartedLw()V

    #@34
    .line 9731
    :cond_1
    :goto_1
    return-void

    #@35
    .line 9732
    .end local v0    # "hold":Z
    .end local v1    # "state":Z
    :cond_2
    const/4 v0, 0x0

    #@36
    goto :goto_0

    #@37
    .line 9755
    .restart local v0    # "hold":Z
    .restart local v1    # "state":Z
    :cond_3
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    #@39
    .line 9756
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@3b
    iget-object v2, v2, Lcom/android/server/wm/WindowSurfacePlacer;->mObsuringWindow:Lcom/android/server/wm/WindowState;

    #@3d
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    #@3f
    .line 9757
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@41
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStoppedLw()V

    #@44
    .line 9758
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@46
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    #@49
    goto :goto_1
.end method

.method public setInTouchMode(Z)V
    .locals 2
    .param p1, "mode"    # Z

    #@0
    .prologue
    .line 6152
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 6153
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 6151
    return-void

    #@7
    .line 6152
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method setInsetsWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
    .locals 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "touchableInsets"    # I
    .param p4, "contentInsets"    # Landroid/graphics/Rect;
    .param p5, "visibleInsets"    # Landroid/graphics/Rect;
    .param p6, "touchableRegion"    # Landroid/graphics/Region;

    #@0
    .prologue
    .line 2710
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 2712
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 2713
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 2719
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_1

    #@e
    .line 2720
    const/4 v3, 0x0

    #@f
    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@11
    .line 2721
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    #@13
    invoke-virtual {v3, p4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@16
    .line 2722
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    #@18
    invoke-virtual {v3, p5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@1b
    .line 2723
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    #@1d
    invoke-virtual {v3, p6}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    #@20
    .line 2724
    iput p3, v2, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    #@22
    .line 2725
    iget v3, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@24
    const/high16 v5, 0x3f800000    # 1.0f

    #@26
    cmpl-float v3, v3, v5

    #@28
    if-eqz v3, :cond_0

    #@2a
    .line 2726
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    #@2c
    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@2e
    invoke-virtual {v3, v5}, Landroid/graphics/Rect;->scale(F)V

    #@31
    .line 2727
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    #@33
    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@35
    invoke-virtual {v3, v5}, Landroid/graphics/Rect;->scale(F)V

    #@38
    .line 2728
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    #@3a
    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@3c
    invoke-virtual {v3, v5}, Landroid/graphics/Region;->scale(F)V

    #@3f
    .line 2730
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@42
    .line 2731
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@44
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@47
    :cond_1
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@48
    .line 2735
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4b
    .line 2709
    return-void

    #@4c
    .line 2712
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@4d
    :try_start_3
    monitor-exit v4

    #@4e
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@4f
    .line 2734
    :catchall_1
    move-exception v3

    #@50
    .line 2735
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@53
    .line 2734
    throw v3
.end method

.method public setNewConfiguration(Landroid/content/res/Configuration;)[I
    .locals 3
    .param p1, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 3887
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3888
    const-string/jumbo v2, "setNewConfiguration()"

    #@6
    .line 3887
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3889
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3892
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 3893
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@1a
    if-eqz v1, :cond_1

    #@1c
    .line 3894
    const/4 v1, 0x0

    #@1d
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@1f
    .line 3895
    const-string/jumbo v1, "new-config"

    #@22
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@24
    .line 3897
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@26
    invoke-virtual {v1, p1}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@29
    move-result v1

    #@2a
    if-eqz v1, :cond_2

    #@2c
    const/4 v0, 0x1

    #@2d
    .line 3898
    .local v0, "configChanged":Z
    :goto_0
    if-nez v0, :cond_3

    #@2f
    .line 3899
    const/4 v1, 0x0

    #@30
    monitor-exit v2

    #@31
    return-object v1

    #@32
    .line 3897
    .end local v0    # "configChanged":Z
    :cond_2
    const/4 v0, 0x0

    #@33
    .restart local v0    # "configChanged":Z
    goto :goto_0

    #@34
    .line 3901
    :cond_3
    :try_start_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->prepareFreezingAllTaskBounds()V

    #@37
    .line 3902
    new-instance v1, Landroid/content/res/Configuration;

    #@39
    invoke-direct {v1, p1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    #@3c
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@3e
    .line 3903
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->onConfigurationChanged()[I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@41
    move-result-object v1

    #@42
    monitor-exit v2

    #@43
    return-object v1

    #@44
    .line 3892
    .end local v0    # "configChanged":Z
    :catchall_0
    move-exception v1

    #@45
    monitor-exit v2

    #@46
    throw v1
.end method

.method public setOverscan(IIIII)V
    .locals 9
    .param p1, "displayId"    # I
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    #@0
    .prologue
    .line 9366
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 9367
    const-string/jumbo v2, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 9366
    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 9369
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v2, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 9372
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@17
    move-result-wide v6

    #@18
    .line 9374
    .local v6, "ident":J
    :try_start_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1a
    monitor-enter v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@1b
    .line 9375
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@1e
    move-result-object v1

    #@1f
    .line 9376
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1

    #@21
    move-object v0, p0

    #@22
    move v2, p2

    #@23
    move v3, p3

    #@24
    move v4, p4

    #@25
    move v5, p5

    #@26
    .line 9377
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    :cond_1
    :try_start_2
    monitor-exit v8
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@2a
    .line 9381
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2d
    .line 9365
    return-void

    #@2e
    .line 9374
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v0

    #@2f
    :try_start_3
    monitor-exit v8

    #@30
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@31
    .line 9380
    :catchall_1
    move-exception v0

    #@32
    .line 9381
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@35
    .line 9380
    throw v0
.end method

.method public setRecentsVisibility(Z)V
    .locals 2
    .param p1, "visible"    # Z

    #@0
    .prologue
    .line 10267
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.STATUS_BAR"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 10269
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Caller does not hold permission android.permission.STATUS_BAR"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 10273
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 10274
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@19
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->setRecentsVisibilityLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    monitor-exit v1

    #@1d
    .line 10266
    return-void

    #@1e
    .line 10273
    :catchall_0
    move-exception v0

    #@1f
    monitor-exit v1

    #@20
    throw v0
.end method

.method public setReplacingWindow(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "animate"    # Z

    #@0
    .prologue
    .line 11187
    const/4 v0, 0x0

    #@1
    .line 11188
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 11189
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@7
    move-result-object v0

    #@8
    .line 11190
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@a
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    #@d
    move-result v1

    #@e
    if-eqz v1, :cond_0

    #@10
    .line 11195
    invoke-virtual {v0, p2}, Lcom/android/server/wm/AppWindowToken;->setReplacingWindows(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@13
    monitor-exit v2

    #@14
    .line 11186
    return-void

    #@15
    .line 11191
    :cond_0
    :try_start_1
    const-string/jumbo v1, "WindowManager"

    #@18
    new-instance v3, Ljava/lang/StringBuilder;

    #@1a
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@1d
    const-string/jumbo v4, "Attempted to set replacing window on non-existing app token "

    #@20
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v3

    #@24
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v3

    #@28
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b
    move-result-object v3

    #@2c
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v2

    #@30
    .line 11193
    return-void

    #@31
    .line 11188
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@32
    monitor-exit v2

    #@33
    throw v1
.end method

.method public setReplacingWindows(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "childrenOnly"    # Z

    #@0
    .prologue
    .line 11210
    const/4 v0, 0x0

    #@1
    .line 11211
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 11212
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@7
    move-result-object v0

    #@8
    .line 11213
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@a
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    #@d
    move-result v1

    #@e
    if-eqz v1, :cond_0

    #@10
    .line 11219
    if-eqz p2, :cond_1

    #@12
    .line 11220
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->setReplacingChildren()V

    #@15
    .line 11225
    :goto_0
    const/4 v1, 0x1

    #@16
    invoke-virtual {p0, p1, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleClearReplacingWindowIfNeeded(Landroid/os/IBinder;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@19
    monitor-exit v2

    #@1a
    .line 11209
    return-void

    #@1b
    .line 11214
    :cond_0
    :try_start_1
    const-string/jumbo v1, "WindowManager"

    #@1e
    new-instance v3, Ljava/lang/StringBuilder;

    #@20
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@23
    const-string/jumbo v4, "Attempted to set replacing window on non-existing app token "

    #@26
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@29
    move-result-object v3

    #@2a
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v3

    #@2e
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@31
    move-result-object v3

    #@32
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@35
    monitor-exit v2

    #@36
    .line 11216
    return-void

    #@37
    .line 11222
    :cond_1
    const/4 v1, 0x0

    #@38
    :try_start_2
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppWindowToken;->setReplacingWindows(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@3b
    goto :goto_0

    #@3c
    .line 11211
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@3d
    monitor-exit v2

    #@3e
    throw v1
.end method

.method public setResizeDimLayer(ZIF)V
    .locals 2
    .param p1, "visible"    # Z
    .param p2, "targetStackId"    # I
    .param p3, "alpha"    # F

    #@0
    .prologue
    .line 11292
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 11293
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@a
    move-result-object v0

    #@b
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/DockedStackDividerController;->setResizeDimLayer(ZIF)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@e
    monitor-exit v1

    #@f
    .line 11291
    return-void

    #@10
    .line 11292
    :catchall_0
    move-exception v0

    #@11
    monitor-exit v1

    #@12
    throw v0
.end method

.method public setScreenCaptureDisabled(IZ)V
    .locals 8
    .param p1, "userId"    # I
    .param p2, "disabled"    # Z

    #@0
    .prologue
    .line 2352
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@3
    move-result v0

    #@4
    .line 2353
    .local v0, "callingUid":I
    const/16 v5, 0x3e8

    #@6
    if-eq v0, v5, :cond_0

    #@8
    .line 2354
    new-instance v5, Ljava/lang/SecurityException;

    #@a
    const-string/jumbo v6, "Only system can call setScreenCaptureDisabled."

    #@d
    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@10
    throw v5

    #@11
    .line 2357
    :cond_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@13
    monitor-enter v6

    #@14
    .line 2358
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@16
    invoke-static {p2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    #@19
    move-result-object v7

    #@1a
    invoke-virtual {v5, p1, v7}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@1d
    .line 2360
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1f
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@22
    move-result v5

    #@23
    add-int/lit8 v1, v5, -0x1

    #@25
    .local v1, "displayNdx":I
    :goto_0
    if-ltz v1, :cond_3

    #@27
    .line 2361
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@29
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@2c
    move-result-object v5

    #@2d
    check-cast v5, Lcom/android/server/wm/DisplayContent;

    #@2f
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@32
    move-result-object v4

    #@33
    .line 2362
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@36
    move-result v5

    #@37
    add-int/lit8 v3, v5, -0x1

    #@39
    .local v3, "winNdx":I
    :goto_1
    if-ltz v3, :cond_2

    #@3b
    .line 2363
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3e
    move-result-object v2

    #@3f
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@41
    .line 2364
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v5, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@43
    if-eqz v5, :cond_1

    #@45
    iget v5, v2, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    #@47
    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    #@4a
    move-result v5

    #@4b
    if-ne p1, v5, :cond_1

    #@4d
    .line 2365
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@4f
    invoke-virtual {v5, p2}, Lcom/android/server/wm/WindowStateAnimator;->setSecureLocked(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@52
    .line 2362
    :cond_1
    add-int/lit8 v3, v3, -0x1

    #@54
    goto :goto_1

    #@55
    .line 2360
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v1, v1, -0x1

    #@57
    goto :goto_0

    #@58
    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    monitor-exit v6

    #@59
    .line 2351
    return-void

    #@5a
    .line 2357
    .end local v1    # "displayNdx":I
    :catchall_0
    move-exception v5

    #@5b
    monitor-exit v6

    #@5c
    throw v5
.end method

.method public setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
    .locals 1
    .param p1, "value"    # Ljava/lang/String;

    #@0
    .prologue
    .line 6300
    const-string/jumbo v0, "persist.sys.strictmode.visual"

    #@3
    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    #@6
    .line 6299
    return-void
.end method

.method public setTaskDockedResizing(IZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "resizing"    # Z

    #@0
    .prologue
    .line 5407
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5408
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5409
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    .line 5410
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "setTaskDockedResizing: taskId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    const-string/jumbo v4, " not found."

    #@22
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2d
    monitor-exit v2

    #@2e
    .line 5411
    return-void

    #@2f
    .line 5413
    :cond_0
    const/4 v1, 0x1

    #@30
    :try_start_1
    invoke-virtual {v0, p2, v1}, Lcom/android/server/wm/Task;->setDragResizing(ZI)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@33
    monitor-exit v2

    #@34
    .line 5406
    return-void

    #@35
    .line 5407
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@36
    monitor-exit v2

    #@37
    throw v1
.end method

.method public setTaskResizeable(II)V
    .locals 3
    .param p1, "taskId"    # I
    .param p2, "resizeMode"    # I

    #@0
    .prologue
    .line 11318
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11319
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 11320
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    #@d
    .line 11321
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->setResizeable(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    .line 11317
    return-void

    #@12
    .line 11318
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z
    .locals 17
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "visible"    # Z
    .param p4, "transit"    # I
    .param p5, "performLayout"    # Z
    .param p6, "isVoiceInteraction"    # Z

    #@0
    .prologue
    .line 4426
    const/4 v9, 0x0

    #@1
    .line 4428
    .local v9, "delayed":Z
    move-object/from16 v0, p1

    #@3
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@5
    move/from16 v0, p3

    #@7
    if-ne v2, v0, :cond_0

    #@9
    .line 4429
    if-eqz p3, :cond_8

    #@b
    const/4 v2, 0x0

    #@c
    :goto_0
    move-object/from16 v0, p1

    #@e
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@10
    .line 4430
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@13
    .line 4438
    :cond_0
    const/4 v13, 0x0

    #@14
    .line 4439
    .local v13, "visibilityChanged":Z
    move-object/from16 v0, p1

    #@16
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@18
    move/from16 v0, p3

    #@1a
    if-eq v2, v0, :cond_2

    #@1c
    move-object/from16 v0, p1

    #@1e
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@20
    if-eqz v2, :cond_1

    #@22
    move-object/from16 v0, p1

    #@24
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@26
    if-nez v2, :cond_2

    #@28
    .line 4440
    :cond_1
    if-eqz p3, :cond_10

    #@2a
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->waitingForReplacement()Z

    #@2d
    move-result v2

    #@2e
    .line 4439
    if-eqz v2, :cond_10

    #@30
    .line 4441
    :cond_2
    const/4 v8, 0x0

    #@31
    .line 4446
    .local v8, "changed":Z
    const/4 v11, 0x0

    #@32
    .line 4448
    .local v11, "runningAppAnimation":Z
    const/4 v2, -0x1

    #@33
    move/from16 v0, p4

    #@35
    if-eq v0, v2, :cond_6

    #@37
    .line 4449
    move-object/from16 v0, p1

    #@39
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@3b
    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@3d
    sget-object v3, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    #@3f
    if-ne v2, v3, :cond_3

    #@41
    .line 4450
    move-object/from16 v0, p1

    #@43
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@45
    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->setNullAnimation()V

    #@48
    :cond_3
    move-object/from16 v2, p0

    #@4a
    move-object/from16 v3, p1

    #@4c
    move-object/from16 v4, p2

    #@4e
    move/from16 v5, p4

    #@50
    move/from16 v6, p3

    #@52
    move/from16 v7, p6

    #@54
    .line 4452
    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    #@57
    move-result v2

    #@58
    if-eqz v2, :cond_4

    #@5a
    .line 4453
    const/4 v11, 0x1

    #@5b
    const/4 v9, 0x1

    #@5c
    .line 4455
    :cond_4
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@5f
    move-result-object v15

    #@60
    .line 4457
    .local v15, "window":Lcom/android/server/wm/WindowState;
    if-eqz v15, :cond_5

    #@62
    move-object/from16 v0, p0

    #@64
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@66
    if-eqz v2, :cond_5

    #@68
    .line 4458
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@6b
    move-result v2

    #@6c
    if-nez v2, :cond_5

    #@6e
    .line 4459
    move-object/from16 v0, p0

    #@70
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@72
    move/from16 v0, p4

    #@74
    invoke-virtual {v2, v15, v0}, Lcom/android/server/wm/AccessibilityController;->onAppWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@77
    .line 4461
    :cond_5
    const/4 v8, 0x1

    #@78
    .line 4464
    .end local v15    # "window":Lcom/android/server/wm/WindowState;
    :cond_6
    move-object/from16 v0, p1

    #@7a
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@7c
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@7f
    move-result v16

    #@80
    .line 4465
    .local v16, "windowsCount":I
    const/4 v10, 0x0

    #@81
    .local v10, "i":I
    :goto_1
    move/from16 v0, v16

    #@83
    if-ge v10, v0, :cond_d

    #@85
    .line 4466
    move-object/from16 v0, p1

    #@87
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@89
    invoke-virtual {v2, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@8c
    move-result-object v14

    #@8d
    check-cast v14, Lcom/android/server/wm/WindowState;

    #@8f
    .line 4467
    .local v14, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p1

    #@91
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@93
    if-ne v14, v2, :cond_9

    #@95
    .line 4471
    if-nez p3, :cond_7

    #@97
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@9a
    move-result v2

    #@9b
    if-eqz v2, :cond_7

    #@9d
    move-object/from16 v0, p1

    #@9f
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@a1
    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    #@a4
    move-result v2

    #@a5
    if-eqz v2, :cond_7

    #@a7
    .line 4472
    const/4 v2, 0x1

    #@a8
    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@aa
    .line 4473
    const/4 v2, 0x1

    #@ab
    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    #@ad
    .line 4474
    const/4 v2, 0x1

    #@ae
    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mWindowRemovalAllowed:Z

    #@b0
    .line 4465
    :cond_7
    :goto_2
    add-int/lit8 v10, v10, 0x1

    #@b2
    goto :goto_1

    #@b3
    .line 4429
    .end local v8    # "changed":Z
    .end local v10    # "i":I
    .end local v11    # "runningAppAnimation":Z
    .end local v13    # "visibilityChanged":Z
    .end local v14    # "win":Lcom/android/server/wm/WindowState;
    .end local v16    # "windowsCount":I
    :cond_8
    const/4 v2, 0x1

    #@b4
    goto/16 :goto_0

    #@b6
    .line 4481
    .restart local v8    # "changed":Z
    .restart local v10    # "i":I
    .restart local v11    # "runningAppAnimation":Z
    .restart local v13    # "visibilityChanged":Z
    .restart local v14    # "win":Lcom/android/server/wm/WindowState;
    .restart local v16    # "windowsCount":I
    :cond_9
    if-eqz p3, :cond_b

    #@b8
    .line 4482
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@bb
    move-result v2

    #@bc
    if-nez v2, :cond_7

    #@be
    .line 4483
    if-nez v11, :cond_a

    #@c0
    .line 4484
    iget-object v2, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@c2
    .line 4485
    const/4 v3, 0x1

    #@c3
    const/4 v4, 0x1

    #@c4
    .line 4484
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@c7
    .line 4487
    move-object/from16 v0, p0

    #@c9
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@cb
    if-eqz v2, :cond_a

    #@cd
    .line 4488
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@d0
    move-result v2

    #@d1
    if-nez v2, :cond_a

    #@d3
    .line 4489
    move-object/from16 v0, p0

    #@d5
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@d7
    .line 4490
    const/4 v3, 0x1

    #@d8
    .line 4489
    invoke-virtual {v2, v14, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@db
    .line 4493
    :cond_a
    const/4 v8, 0x1

    #@dc
    .line 4494
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@df
    goto :goto_2

    #@e0
    .line 4496
    :cond_b
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@e3
    move-result v2

    #@e4
    if-eqz v2, :cond_7

    #@e6
    .line 4497
    if-nez v11, :cond_c

    #@e8
    .line 4498
    iget-object v2, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@ea
    .line 4499
    const/4 v3, 0x2

    #@eb
    const/4 v4, 0x0

    #@ec
    .line 4498
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@ef
    .line 4501
    move-object/from16 v0, p0

    #@f1
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@f3
    if-eqz v2, :cond_c

    #@f5
    .line 4502
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@f8
    move-result v2

    #@f9
    if-nez v2, :cond_c

    #@fb
    .line 4503
    move-object/from16 v0, p0

    #@fd
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@ff
    .line 4504
    const/4 v3, 0x2

    #@100
    .line 4503
    invoke-virtual {v2, v14, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@103
    .line 4507
    :cond_c
    const/4 v8, 0x1

    #@104
    .line 4508
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@107
    goto :goto_2

    #@108
    .line 4512
    .end local v14    # "win":Lcom/android/server/wm/WindowState;
    :cond_d
    if-eqz p3, :cond_15

    #@10a
    const/4 v2, 0x0

    #@10b
    :goto_3
    move-object/from16 v0, p1

    #@10d
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@10f
    move-object/from16 v0, p1

    #@111
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@113
    .line 4513
    const/4 v13, 0x1

    #@114
    .line 4514
    if-nez p3, :cond_16

    #@116
    .line 4515
    const/4 v2, 0x1

    #@117
    const/4 v3, 0x1

    #@118
    move-object/from16 v0, p0

    #@11a
    move-object/from16 v1, p1

    #@11c
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@11f
    .line 4530
    :cond_e
    :goto_4
    if-eqz v8, :cond_10

    #@121
    .line 4531
    move-object/from16 v0, p0

    #@123
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@125
    invoke-virtual {v2}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@128
    .line 4532
    if-eqz p5, :cond_f

    #@12a
    .line 4533
    const/4 v2, 0x3

    #@12b
    .line 4534
    const/4 v3, 0x0

    #@12c
    .line 4533
    move-object/from16 v0, p0

    #@12e
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@131
    .line 4535
    move-object/from16 v0, p0

    #@133
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@135
    invoke-virtual {v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@138
    .line 4537
    :cond_f
    move-object/from16 v0, p0

    #@13a
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@13c
    const/4 v3, 0x0

    #@13d
    invoke-virtual {v2, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@140
    .line 4541
    .end local v8    # "changed":Z
    .end local v10    # "i":I
    .end local v11    # "runningAppAnimation":Z
    .end local v16    # "windowsCount":I
    :cond_10
    move-object/from16 v0, p1

    #@142
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@144
    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@146
    if-eqz v2, :cond_11

    #@148
    .line 4542
    const/4 v9, 0x1

    #@149
    .line 4545
    :cond_11
    move-object/from16 v0, p1

    #@14b
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@14d
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@150
    move-result v2

    #@151
    add-int/lit8 v10, v2, -0x1

    #@153
    .restart local v10    # "i":I
    :goto_5
    if-ltz v10, :cond_12

    #@155
    if-eqz v9, :cond_17

    #@157
    .line 4551
    :cond_12
    if-eqz v13, :cond_14

    #@159
    .line 4552
    if-eqz p3, :cond_13

    #@15b
    if-eqz v9, :cond_19

    #@15d
    .line 4559
    :cond_13
    :goto_6
    move-object/from16 v0, p0

    #@15f
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@161
    move-object/from16 v0, p1

    #@163
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@166
    move-result v2

    #@167
    if-nez v2, :cond_14

    #@169
    move-object/from16 v0, p0

    #@16b
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@16d
    move-object/from16 v0, p1

    #@16f
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@172
    move-result v2

    #@173
    if-eqz v2, :cond_1a

    #@175
    .line 4568
    :cond_14
    :goto_7
    return v9

    #@176
    .line 4512
    .restart local v8    # "changed":Z
    .restart local v11    # "runningAppAnimation":Z
    .restart local v16    # "windowsCount":I
    :cond_15
    const/4 v2, 0x1

    #@177
    goto :goto_3

    #@178
    .line 4519
    :cond_16
    move-object/from16 v0, p1

    #@17a
    iget-object v12, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@17c
    .line 4520
    .local v12, "swin":Lcom/android/server/wm/WindowState;
    if-eqz v12, :cond_e

    #@17e
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@181
    move-result v2

    #@182
    if-nez v2, :cond_e

    #@184
    .line 4521
    const/4 v2, 0x0

    #@185
    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    #@187
    .line 4522
    const/4 v2, 0x0

    #@188
    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    #@18a
    goto :goto_4

    #@18b
    .line 4546
    .end local v8    # "changed":Z
    .end local v11    # "runningAppAnimation":Z
    .end local v12    # "swin":Lcom/android/server/wm/WindowState;
    .end local v16    # "windowsCount":I
    :cond_17
    move-object/from16 v0, p1

    #@18d
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@18f
    invoke-virtual {v2, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@192
    move-result-object v2

    #@193
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@195
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@197
    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isWindowAnimationSet()Z

    #@19a
    move-result v2

    #@19b
    if-eqz v2, :cond_18

    #@19d
    .line 4547
    const/4 v9, 0x1

    #@19e
    .line 4545
    :cond_18
    add-int/lit8 v10, v10, -0x1

    #@1a0
    goto :goto_5

    #@1a1
    .line 4555
    :cond_19
    const/4 v2, 0x1

    #@1a2
    move-object/from16 v0, p1

    #@1a4
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    #@1a6
    .line 4556
    move-object/from16 v0, p0

    #@1a8
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    #@1aa
    move-object/from16 v0, p1

    #@1ac
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@1ae
    invoke-virtual {v2, v3}, Landroid/view/WindowManagerInternal$AppTransitionListener;->onAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    #@1b1
    goto :goto_6

    #@1b2
    .line 4563
    :cond_1a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1b5
    move-result-object v2

    #@1b6
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@1b9
    move-result-object v2

    #@1ba
    invoke-virtual {v2}, Lcom/android/server/wm/DockedStackDividerController;->notifyAppVisibilityChanged()V

    #@1bd
    goto :goto_7
.end method

.method setTransparentRegionWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Region;)V
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "region"    # Landroid/graphics/Region;

    #@0
    .prologue
    .line 2692
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 2694
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 2695
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 2699
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_0

    #@e
    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@10
    if-eqz v3, :cond_0

    #@12
    .line 2700
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@14
    invoke-virtual {v3, p3}, Lcom/android/server/wm/WindowStateAnimator;->setTransparentRegionHintLocked(Landroid/graphics/Region;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@17
    :cond_0
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@18
    .line 2704
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1b
    .line 2691
    return-void

    #@1c
    .line 2694
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@1d
    :try_start_3
    monitor-exit v4

    #@1e
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@1f
    .line 2703
    :catchall_1
    move-exception v3

    #@20
    .line 2704
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@23
    .line 2703
    throw v3
.end method

.method public setTvPipVisibility(Z)V
    .locals 2
    .param p1, "visible"    # Z

    #@0
    .prologue
    .line 10280
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.STATUS_BAR"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 10282
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Caller does not hold permission android.permission.STATUS_BAR"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 10286
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 10287
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@19
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->setTvPipVisibilityLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    monitor-exit v1

    #@1d
    .line 10279
    return-void

    #@1e
    .line 10286
    :catchall_0
    move-exception v0

    #@1f
    monitor-exit v1

    #@20
    throw v0
.end method

.method public setWindowOpaque(Landroid/os/IBinder;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    #@0
    .prologue
    .line 4409
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 4410
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 4408
    return-void

    #@8
    .line 4409
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method public setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    #@0
    .prologue
    .line 4415
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@3
    move-result-object v1

    #@4
    .line 4416
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_0

    #@6
    .line 4417
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@9
    move-result-object v0

    #@a
    .line 4418
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@c
    .line 4419
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@e
    invoke-virtual {v2, p2}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    #@11
    .line 4414
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    return-void
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 3
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    #@0
    .prologue
    .line 6105
    const/4 v0, 0x0

    #@1
    .line 6106
    .local v0, "first":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 6115
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    if-nez v1, :cond_0

    #@8
    monitor-exit v2

    #@9
    .line 6116
    return-void

    #@a
    .line 6118
    :cond_0
    :try_start_1
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    if-nez v1, :cond_2

    #@e
    .line 6119
    if-nez p2, :cond_1

    #@10
    monitor-exit v2

    #@11
    .line 6120
    return-void

    #@12
    .line 6122
    :cond_1
    const/4 v0, 0x1

    #@13
    .line 6124
    :cond_2
    :try_start_2
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@15
    if-eqz v1, :cond_3

    #@17
    monitor-exit v2

    #@18
    .line 6125
    return-void

    #@19
    .line 6127
    :cond_3
    const/4 v1, 0x1

    #@1a
    :try_start_3
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@1c
    .line 6128
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1e
    invoke-interface {v1, p1, p2}, Landroid/view/WindowManagerPolicy;->showBootMessage(Ljava/lang/CharSequence;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@21
    monitor-exit v2

    #@22
    .line 6130
    if-eqz v0, :cond_4

    #@24
    .line 6131
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@27
    .line 6104
    :cond_4
    return-void

    #@28
    .line 6106
    :catchall_0
    move-exception v1

    #@29
    monitor-exit v2

    #@2a
    throw v1
.end method

.method public showCircularMask(Z)V
    .locals 8
    .param p1, "visible"    # Z

    #@0
    .prologue
    .line 6188
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 6192
    :try_start_0
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@6
    .line 6194
    if-eqz p1, :cond_2

    #@8
    .line 6196
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@a
    if-nez v0, :cond_0

    #@c
    .line 6197
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@e
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@11
    move-result-object v0

    #@12
    .line 6198
    const v1, 0x10e0094

    #@15
    .line 6197
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    #@18
    move-result v4

    #@19
    .line 6199
    .local v4, "screenOffset":I
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1b
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1e
    move-result-object v0

    #@1f
    .line 6200
    const v1, 0x10500a3

    #@22
    .line 6199
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    #@25
    move-result v5

    #@26
    .line 6202
    .local v5, "maskThickness":I
    new-instance v0, Lcom/android/server/wm/CircularDisplayMask;

    #@28
    .line 6203
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2b
    move-result-object v1

    #@2c
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@2f
    move-result-object v1

    #@30
    .line 6204
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@32
    .line 6205
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@34
    .line 6206
    const/16 v7, 0x7e2

    #@36
    .line 6205
    invoke-interface {v3, v7}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@39
    move-result v3

    #@3a
    mul-int/lit16 v3, v3, 0x2710

    #@3c
    add-int/lit8 v3, v3, 0xa

    #@3e
    .line 6202
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/CircularDisplayMask;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;III)V

    #@41
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@43
    .line 6209
    .end local v4    # "screenOffset":I
    .end local v5    # "maskThickness":I
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@45
    const/4 v1, 0x1

    #@46
    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@49
    .line 6215
    :cond_1
    :goto_0
    :try_start_2
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@4c
    monitor-exit v6

    #@4d
    .line 6187
    return-void

    #@4e
    .line 6210
    :cond_2
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@50
    if-eqz v0, :cond_1

    #@52
    .line 6211
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@54
    const/4 v1, 0x0

    #@55
    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V

    #@58
    .line 6212
    const/4 v0, 0x0

    #@59
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@5b
    goto :goto_0

    #@5c
    .line 6214
    :catchall_0
    move-exception v0

    #@5d
    .line 6215
    :try_start_4
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@60
    .line 6214
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@61
    .line 6188
    :catchall_1
    move-exception v0

    #@62
    monitor-exit v6

    #@63
    throw v0
.end method

.method public showEmulatorDisplayOverlay()V
    .locals 7

    #@0
    .prologue
    .line 6223
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 6227
    :try_start_0
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@6
    .line 6229
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@8
    if-nez v0, :cond_0

    #@a
    .line 6230
    new-instance v0, Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@c
    .line 6231
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@e
    .line 6232
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@11
    move-result-object v3

    #@12
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@15
    move-result-object v3

    #@16
    .line 6233
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@18
    .line 6234
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1a
    .line 6235
    const/16 v6, 0x7e2

    #@1c
    .line 6234
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@1f
    move-result v5

    #@20
    mul-int/lit16 v5, v5, 0x2710

    #@22
    add-int/lit8 v5, v5, 0xa

    #@24
    .line 6230
    invoke-direct {v0, v2, v3, v4, v5}, Lcom/android/server/wm/EmulatorDisplayOverlay;-><init>(Landroid/content/Context;Landroid/view/Display;Landroid/view/SurfaceSession;I)V

    #@27
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@29
    .line 6238
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@2b
    const/4 v2, 0x1

    #@2c
    invoke-virtual {v0, v2}, Lcom/android/server/wm/EmulatorDisplayOverlay;->setVisibility(Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    .line 6240
    :try_start_2
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@32
    monitor-exit v1

    #@33
    .line 6222
    return-void

    #@34
    .line 6239
    :catchall_0
    move-exception v0

    #@35
    .line 6240
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@38
    .line 6239
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@39
    .line 6223
    :catchall_1
    move-exception v0

    #@3a
    monitor-exit v1

    #@3b
    throw v0
.end method

.method public showEmulatorDisplayOverlayIfNeeded()V
    .locals 3

    #@0
    .prologue
    .line 6179
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@5
    move-result-object v0

    #@6
    .line 6180
    const v1, 0x1120088

    #@9
    .line 6179
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@c
    move-result v0

    #@d
    if-eqz v0, :cond_0

    #@f
    .line 6181
    const-string/jumbo v0, "ro.emulator.circular"

    #@12
    const/4 v1, 0x0

    #@13
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    #@16
    move-result v0

    #@17
    .line 6179
    if-eqz v0, :cond_0

    #@19
    .line 6182
    sget-boolean v0, Landroid/os/Build;->IS_EMULATOR:Z

    #@1b
    .line 6179
    if-eqz v0, :cond_0

    #@1d
    .line 6183
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1f
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@21
    const/16 v2, 0x24

    #@23
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    #@26
    move-result-object v1

    #@27
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@2a
    .line 6178
    :cond_0
    return-void
.end method

.method showGlobalActions()V
    .locals 1

    #@0
    .prologue
    .line 5651
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->showGlobalActions()V

    #@5
    .line 5650
    return-void
.end method

.method public showRecentApps(Z)V
    .locals 1
    .param p1, "fromHome"    # Z

    #@0
    .prologue
    .line 10429
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->showRecentApps(Z)V

    #@5
    .line 10428
    return-void
.end method

.method public showStrictModeViolation(Z)V
    .locals 5
    .param p1, "on"    # Z

    #@0
    .prologue
    .line 6251
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@3
    move-result v0

    #@4
    .line 6252
    .local v0, "pid":I
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@6
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@8
    if-eqz p1, :cond_0

    #@a
    const/4 v1, 0x1

    #@b
    :goto_0
    const/16 v4, 0x19

    #@d
    invoke-virtual {v3, v4, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@10
    move-result-object v1

    #@11
    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@14
    .line 6250
    return-void

    #@15
    .line 6252
    :cond_0
    const/4 v1, 0x0

    #@16
    goto :goto_0
.end method

.method public shutdown(Z)V
    .locals 2
    .param p1, "confirm"    # Z

    #@0
    .prologue
    .line 5825
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "userrequested"

    #@5
    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Ljava/lang/String;Z)V

    #@8
    .line 5824
    return-void
.end method

.method public startAppFreezingScreen(Landroid/os/IBinder;I)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "configChanges"    # I

    #@0
    .prologue
    .line 4800
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4801
    const-string/jumbo v4, "setAppFreezingScreen()"

    #@6
    .line 4800
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v3

    #@a
    if-nez v3, :cond_0

    #@c
    .line 4802
    new-instance v3, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v3

    #@15
    .line 4805
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v4

    #@18
    .line 4806
    if-nez p2, :cond_1

    #@1a
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1d
    move-result v3

    #@1e
    if-eqz v3, :cond_1

    #@20
    monitor-exit v4

    #@21
    .line 4808
    return-void

    #@22
    .line 4811
    :cond_1
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@25
    move-result-object v2

    #@26
    .line 4812
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_2

    #@28
    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@2a
    if-nez v3, :cond_3

    #@2c
    .line 4813
    :cond_2
    const-string/jumbo v3, "WindowManager"

    #@2f
    new-instance v5, Ljava/lang/StringBuilder;

    #@31
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@34
    const-string/jumbo v6, "Attempted to freeze screen with non-existing app token: "

    #@37
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3a
    move-result-object v5

    #@3b
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3e
    move-result-object v5

    #@3f
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@42
    move-result-object v5

    #@43
    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@46
    monitor-exit v4

    #@47
    .line 4814
    return-void

    #@48
    .line 4816
    :cond_3
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4b
    move-result-wide v0

    #@4c
    .line 4817
    .local v0, "origId":J
    invoke-direct {p0, v2}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@4f
    .line 4818
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@52
    monitor-exit v4

    #@53
    .line 4799
    return-void

    #@54
    .line 4805
    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v3

    #@55
    monitor-exit v4

    #@56
    throw v3
.end method

.method public startFreezingScreen(II)V
    .locals 7
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    #@0
    .prologue
    .line 5476
    const-string/jumbo v2, "android.permission.FREEZE_SCREEN"

    #@3
    .line 5477
    const-string/jumbo v3, "startFreezingScreen()"

    #@6
    .line 5476
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 5478
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires FREEZE_SCREEN permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 5481
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 5482
    :try_start_0
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1a
    if-nez v2, :cond_1

    #@1c
    .line 5483
    const/4 v2, 0x1

    #@1d
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 5484
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@22
    move-result-wide v0

    #@23
    .line 5486
    .local v0, "origId":J
    const/4 v2, 0x0

    #@24
    :try_start_1
    invoke-direct {p0, v2, p1, p2}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@27
    .line 5487
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@29
    const/16 v4, 0x1e

    #@2b
    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@2e
    .line 5488
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@30
    const-wide/16 v4, 0x1388

    #@32
    const/16 v6, 0x1e

    #@34
    invoke-virtual {v2, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@37
    .line 5490
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@3a
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@3b
    .line 5475
    return-void

    #@3c
    .line 5489
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@3d
    .line 5490
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@40
    .line 5489
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@41
    .line 5481
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@42
    monitor-exit v3

    #@43
    throw v2
.end method

.method startMovingTask(Landroid/view/IWindow;FF)Z
    .locals 6
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "startX"    # F
    .param p3, "startY"    # F

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 7780
    const/4 v1, 0x0

    #@2
    .line 7781
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v3

    #@5
    .line 7782
    const/4 v2, 0x0

    #@6
    const/4 v4, 0x0

    #@7
    :try_start_0
    invoke-virtual {p0, v2, p1, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@a
    move-result-object v1

    #@b
    .line 7785
    .local v1, "win":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    #@c
    invoke-direct {p0, v1, v2, p2, p3}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    move-result v2

    #@10
    if-nez v2, :cond_0

    #@12
    monitor-exit v3

    #@13
    .line 7786
    return v5

    #@14
    :cond_0
    monitor-exit v3

    #@15
    .line 7790
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@17
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    #@1a
    move-result-object v3

    #@1b
    iget v3, v3, Lcom/android/server/wm/Task;->mTaskId:I

    #@1d
    invoke-interface {v2, v3}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@20
    .line 7792
    :goto_0
    const/4 v2, 0x1

    #@21
    return v2

    #@22
    .line 7781
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v2

    #@23
    monitor-exit v3

    #@24
    throw v2

    #@25
    .line 7791
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v0

    #@26
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public startViewServer(I)Z
    .locals 4
    .param p1, "port"    # I

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 7131
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v1

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 7132
    return v3

    #@8
    .line 7135
    :cond_0
    const-string/jumbo v1, "android.permission.DUMP"

    #@b
    const-string/jumbo v2, "startViewServer"

    #@e
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v1

    #@12
    if-nez v1, :cond_1

    #@14
    .line 7136
    return v3

    #@15
    .line 7139
    :cond_1
    const/16 v1, 0x400

    #@17
    if-ge p1, v1, :cond_2

    #@19
    .line 7140
    return v3

    #@1a
    .line 7143
    :cond_2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1c
    if-eqz v1, :cond_4

    #@1e
    .line 7144
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@20
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    #@23
    move-result v1

    #@24
    if-nez v1, :cond_3

    #@26
    .line 7146
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@28
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    #@2b
    move-result v1

    #@2c
    return v1

    #@2d
    .line 7147
    :catch_0
    move-exception v0

    #@2e
    .line 7148
    .local v0, "e":Ljava/io/IOException;
    const-string/jumbo v1, "WindowManager"

    #@31
    const-string/jumbo v2, "View server did not start"

    #@34
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@37
    .line 7151
    .end local v0    # "e":Ljava/io/IOException;
    :cond_3
    return v3

    #@38
    .line 7155
    :cond_4
    :try_start_1
    new-instance v1, Lcom/android/server/wm/ViewServer;

    #@3a
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/ViewServer;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    #@3d
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@3f
    .line 7156
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@41
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    #@44
    move-result v1

    #@45
    return v1

    #@46
    .line 7157
    :catch_1
    move-exception v0

    #@47
    .line 7158
    .restart local v0    # "e":Ljava/io/IOException;
    const-string/jumbo v1, "WindowManager"

    #@4a
    const-string/jumbo v2, "View server did not start"

    #@4d
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@50
    .line 7160
    return v3
.end method

.method public statusBarVisibilityChanged(I)V
    .locals 2
    .param p1, "visibility"    # I

    #@0
    .prologue
    .line 10293
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.STATUS_BAR"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 10295
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Caller does not hold permission android.permission.STATUS_BAR"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 10299
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 10300
    :try_start_0
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@19
    .line 10301
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1b
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    #@1e
    move-result p1

    #@1f
    .line 10302
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@22
    monitor-exit v1

    #@23
    .line 10292
    return-void

    #@24
    .line 10299
    :catchall_0
    move-exception v0

    #@25
    monitor-exit v1

    #@26
    throw v0
.end method

.method public stopAppFreezingScreen(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "force"    # Z

    #@0
    .prologue
    .line 4824
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4825
    const-string/jumbo v4, "setAppFreezingScreen()"

    #@6
    .line 4824
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v3

    #@a
    if-nez v3, :cond_0

    #@c
    .line 4826
    new-instance v3, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v3

    #@15
    .line 4829
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v4

    #@18
    .line 4830
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v2

    #@1c
    .line 4831
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_1

    #@1e
    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@20
    if-nez v3, :cond_2

    #@22
    :cond_1
    monitor-exit v4

    #@23
    .line 4832
    return-void

    #@24
    .line 4834
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@27
    move-result-wide v0

    #@28
    .line 4837
    .local v0, "origId":J
    const/4 v3, 0x1

    #@29
    invoke-virtual {p0, v2, v3, p2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@2c
    .line 4838
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v4

    #@30
    .line 4823
    return-void

    #@31
    .line 4829
    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v3

    #@32
    monitor-exit v4

    #@33
    throw v3
.end method

.method stopFreezingDisplayLocked()V
    .locals 18

    #@0
    .prologue
    .line 10112
    move-object/from16 v0, p0

    #@2
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@4
    if-nez v3, :cond_0

    #@6
    .line 10113
    return-void

    #@7
    .line 10116
    :cond_0
    move-object/from16 v0, p0

    #@9
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@b
    if-nez v3, :cond_1

    #@d
    move-object/from16 v0, p0

    #@f
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@11
    if-lez v3, :cond_2

    #@13
    .line 10125
    :cond_1
    return-void

    #@14
    .line 10117
    :cond_2
    move-object/from16 v0, p0

    #@16
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@18
    const/4 v4, 0x1

    #@19
    if-eq v3, v4, :cond_1

    #@1b
    .line 10118
    move-object/from16 v0, p0

    #@1d
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 10116
    if-nez v3, :cond_1

    #@21
    .line 10118
    move-object/from16 v0, p0

    #@23
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@25
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@28
    move-result v3

    #@29
    if-eqz v3, :cond_1

    #@2b
    .line 10131
    const/4 v3, 0x0

    #@2c
    move-object/from16 v0, p0

    #@2e
    iput-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@30
    .line 10132
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@33
    move-result-wide v4

    #@34
    move-object/from16 v0, p0

    #@36
    iget-wide v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@38
    sub-long/2addr v4, v6

    #@39
    long-to-int v3, v4

    #@3a
    move-object/from16 v0, p0

    #@3c
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@3e
    .line 10133
    new-instance v16, Ljava/lang/StringBuilder;

    #@40
    const/16 v3, 0x80

    #@42
    move-object/from16 v0, v16

    #@44
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    #@47
    .line 10134
    .local v16, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v3, "Screen frozen for "

    #@4a
    move-object/from16 v0, v16

    #@4c
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4f
    .line 10135
    move-object/from16 v0, p0

    #@51
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@53
    int-to-long v4, v3

    #@54
    move-object/from16 v0, v16

    #@56
    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    #@59
    .line 10136
    move-object/from16 v0, p0

    #@5b
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@5d
    if-eqz v3, :cond_3

    #@5f
    .line 10137
    const-string/jumbo v3, " due to "

    #@62
    move-object/from16 v0, v16

    #@64
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@67
    .line 10138
    move-object/from16 v0, p0

    #@69
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@6b
    move-object/from16 v0, v16

    #@6d
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@70
    .line 10140
    :cond_3
    const-string/jumbo v3, "WindowManager"

    #@73
    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@76
    move-result-object v4

    #@77
    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@7a
    .line 10141
    move-object/from16 v0, p0

    #@7c
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@7e
    const/16 v4, 0x11

    #@80
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@83
    .line 10142
    move-object/from16 v0, p0

    #@85
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@87
    const/16 v4, 0x1e

    #@89
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@8c
    .line 10147
    const/16 v17, 0x0

    #@8e
    .line 10149
    .local v17, "updateRotation":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@91
    move-result-object v12

    #@92
    .line 10150
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@95
    move-result v13

    #@96
    .line 10152
    .local v13, "displayId":I
    move-object/from16 v0, p0

    #@98
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@9a
    invoke-virtual {v3, v13}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@9d
    move-result-object v2

    #@9e
    .line 10153
    .local v2, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v2, :cond_8

    #@a0
    .line 10154
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    #@a3
    move-result v3

    #@a4
    .line 10153
    if-eqz v3, :cond_8

    #@a6
    .line 10157
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@a9
    move-result-object v14

    #@aa
    .line 10159
    .local v14, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@ad
    move-result v15

    #@ae
    .line 10160
    .local v15, "isDimming":Z
    move-object/from16 v0, p0

    #@b0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@b2
    move-object/from16 v0, p0

    #@b4
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@b6
    move-object/from16 v0, p0

    #@b8
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@ba
    invoke-interface {v3, v4, v5, v15}, Landroid/view/WindowManagerPolicy;->validateRotationAnimationLw(IIZ)Z

    #@bd
    move-result v3

    #@be
    if-nez v3, :cond_4

    #@c0
    .line 10161
    const/4 v3, 0x0

    #@c1
    move-object/from16 v0, p0

    #@c3
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@c5
    const/4 v3, 0x0

    #@c6
    move-object/from16 v0, p0

    #@c8
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@ca
    .line 10163
    :cond_4
    move-object/from16 v0, p0

    #@cc
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@ce
    const-wide/16 v4, 0x2710

    #@d0
    .line 10164
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    #@d3
    move-result v6

    #@d4
    iget v7, v14, Landroid/view/DisplayInfo;->logicalWidth:I

    #@d6
    .line 10165
    iget v8, v14, Landroid/view/DisplayInfo;->logicalHeight:I

    #@d8
    move-object/from16 v0, p0

    #@da
    iget v9, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@dc
    move-object/from16 v0, p0

    #@de
    iget v10, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@e0
    .line 10163
    invoke-virtual/range {v2 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    #@e3
    move-result v3

    #@e4
    if-eqz v3, :cond_7

    #@e6
    .line 10166
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    #@e9
    .line 10180
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "isDimming":Z
    :goto_0
    move-object/from16 v0, p0

    #@eb
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@ed
    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->thawInputDispatchingLw()V

    #@f0
    .line 10188
    const/4 v3, 0x0

    #@f1
    move-object/from16 v0, p0

    #@f3
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@f6
    move-result v11

    #@f7
    .line 10195
    .local v11, "configChanged":Z
    move-object/from16 v0, p0

    #@f9
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@fb
    const/16 v4, 0xf

    #@fd
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@100
    .line 10196
    move-object/from16 v0, p0

    #@102
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@104
    const-wide/16 v4, 0x7d0

    #@106
    const/16 v6, 0xf

    #@108
    invoke-virtual {v3, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@10b
    .line 10198
    move-object/from16 v0, p0

    #@10d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@10f
    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->release()V

    #@112
    .line 10200
    if-eqz v17, :cond_5

    #@114
    .line 10202
    const/4 v3, 0x0

    #@115
    move-object/from16 v0, p0

    #@117
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@11a
    move-result v3

    #@11b
    or-int/2addr v11, v3

    #@11c
    .line 10205
    :cond_5
    if-eqz v11, :cond_6

    #@11e
    .line 10206
    move-object/from16 v0, p0

    #@120
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@122
    const/16 v4, 0x12

    #@124
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@127
    .line 10111
    :cond_6
    return-void

    #@128
    .line 10168
    .end local v11    # "configChanged":Z
    .restart local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v15    # "isDimming":Z
    :cond_7
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@12b
    .line 10169
    move-object/from16 v0, p0

    #@12d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@12f
    const/4 v4, 0x0

    #@130
    invoke-virtual {v3, v13, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@133
    .line 10170
    const/16 v17, 0x1

    #@135
    goto :goto_0

    #@136
    .line 10173
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "isDimming":Z
    :cond_8
    if-eqz v2, :cond_9

    #@138
    .line 10174
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@13b
    .line 10175
    move-object/from16 v0, p0

    #@13d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@13f
    const/4 v4, 0x0

    #@140
    invoke-virtual {v3, v13, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@143
    .line 10177
    :cond_9
    const/16 v17, 0x1

    #@145
    goto :goto_0
.end method

.method public stopFreezingScreen()V
    .locals 4

    #@0
    .prologue
    .line 5498
    const-string/jumbo v2, "android.permission.FREEZE_SCREEN"

    #@3
    .line 5499
    const-string/jumbo v3, "stopFreezingScreen()"

    #@6
    .line 5498
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 5500
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires FREEZE_SCREEN permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 5503
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 5504
    :try_start_0
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1a
    if-eqz v2, :cond_1

    #@1c
    .line 5505
    const/4 v2, 0x0

    #@1d
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 5506
    const-string/jumbo v2, "client"

    #@22
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@24
    .line 5507
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@27
    move-result-wide v0

    #@28
    .line 5509
    .local v0, "origId":J
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2b
    .line 5511
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@2e
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@2f
    .line 5497
    return-void

    #@30
    .line 5510
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@31
    .line 5511
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@34
    .line 5510
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@35
    .line 5503
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@36
    monitor-exit v3

    #@37
    throw v2
.end method

.method stopUsingSavedSurfaceLocked()V
    .locals 3

    #@0
    .prologue
    .line 8961
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    #@2
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@5
    move-result v2

    #@6
    add-int/lit8 v0, v2, -0x1

    #@8
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    #@a
    .line 8962
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    #@c
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v1

    #@10
    check-cast v1, Lcom/android/server/wm/AppWindowToken;

    #@12
    .line 8963
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->stopUsingSavedSurfaceLocked()V

    #@15
    .line 8961
    add-int/lit8 v0, v0, -0x1

    #@17
    goto :goto_0

    #@18
    .line 8965
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    #@1a
    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    #@1d
    .line 8960
    return-void
.end method

.method public stopViewServer()Z
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 7178
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v0

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 7179
    return v2

    #@8
    .line 7182
    :cond_0
    const-string/jumbo v0, "android.permission.DUMP"

    #@b
    const-string/jumbo v1, "stopViewServer"

    #@e
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v0

    #@12
    if-nez v0, :cond_1

    #@14
    .line 7183
    return v2

    #@15
    .line 7186
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@17
    if-eqz v0, :cond_2

    #@19
    .line 7187
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1b
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->stop()Z

    #@1e
    move-result v0

    #@1f
    return v0

    #@20
    .line 7189
    :cond_2
    return v2
.end method

.method subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .locals 1
    .param p1, "display"    # Landroid/graphics/Rect;
    .param p2, "insets"    # Landroid/graphics/Rect;
    .param p3, "inOutBounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11407
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    #@2
    invoke-virtual {v0, p1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@5
    .line 11408
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    #@7
    invoke-virtual {v0, p2}, Landroid/graphics/Rect;->inset(Landroid/graphics/Rect;)V

    #@a
    .line 11409
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    #@c
    invoke-virtual {p3, v0}, Landroid/graphics/Rect;->intersect(Landroid/graphics/Rect;)Z

    #@f
    .line 11406
    return-void
.end method

.method public subtractNonDecorInsets(Landroid/graphics/Rect;)V
    .locals 7
    .param p1, "inOutBounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11398
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11399
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@5
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->getNonDecorInsetsLocked(Landroid/graphics/Rect;)V

    #@8
    .line 11400
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@b
    move-result-object v0

    #@c
    .line 11401
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@e
    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@10
    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@12
    const/4 v5, 0x0

    #@13
    const/4 v6, 0x0

    #@14
    invoke-virtual {v1, v5, v6, v3, v4}, Landroid/graphics/Rect;->set(IIII)V

    #@17
    .line 11402
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@19
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@1b
    invoke-virtual {p0, v1, v3, p1}, Lcom/android/server/wm/WindowManagerService;->subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    monitor-exit v2

    #@1f
    .line 11397
    return-void

    #@20
    .line 11398
    .end local v0    # "di":Landroid/view/DisplayInfo;
    :catchall_0
    move-exception v1

    #@21
    monitor-exit v2

    #@22
    throw v1
.end method

.method public subtractStableInsets(Landroid/graphics/Rect;)V
    .locals 7
    .param p1, "inOutBounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11382
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11383
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@5
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->getStableInsetsLocked(Landroid/graphics/Rect;)V

    #@8
    .line 11384
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@b
    move-result-object v0

    #@c
    .line 11385
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@e
    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@10
    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@12
    const/4 v5, 0x0

    #@13
    const/4 v6, 0x0

    #@14
    invoke-virtual {v1, v5, v6, v3, v4}, Landroid/graphics/Rect;->set(IIII)V

    #@17
    .line 11386
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@19
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@1b
    invoke-virtual {p0, v1, v3, p1}, Lcom/android/server/wm/WindowManagerService;->subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    monitor-exit v2

    #@1f
    .line 11381
    return-void

    #@20
    .line 11382
    .end local v0    # "di":Landroid/view/DisplayInfo;
    :catchall_0
    move-exception v1

    #@21
    monitor-exit v2

    #@22
    throw v1
.end method

.method public switchInputMethod(Z)V
    .locals 2
    .param p1, "forwardDirection"    # Z

    #@0
    .prologue
    .line 5816
    const-class v1, Landroid/view/inputmethod/InputMethodManagerInternal;

    #@2
    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Landroid/view/inputmethod/InputMethodManagerInternal;

    #@8
    .line 5817
    .local v0, "inputMethodManagerInternal":Landroid/view/inputmethod/InputMethodManagerInternal;
    if-eqz v0, :cond_0

    #@a
    .line 5818
    invoke-interface {v0, p1}, Landroid/view/inputmethod/InputMethodManagerInternal;->switchInputMethod(Z)V

    #@d
    .line 5814
    :cond_0
    return-void
.end method

.method public systemReady()V
    .locals 1

    #@0
    .prologue
    .line 8211
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemReady()V

    #@5
    .line 8210
    return-void
.end method

.method public thawRotation()V
    .locals 6

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 6712
    const-string/jumbo v2, "android.permission.SET_ORIENTATION"

    #@4
    .line 6713
    const-string/jumbo v3, "thawRotation()"

    #@7
    .line 6712
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v2

    #@b
    if-nez v2, :cond_0

    #@d
    .line 6714
    new-instance v2, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v3, "Requires SET_ORIENTATION permission"

    #@12
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v2

    #@16
    .line 6719
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@19
    move-result-wide v0

    #@1a
    .line 6721
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1c
    const/4 v3, 0x0

    #@1d
    .line 6722
    const/16 v4, 0x309

    #@1f
    .line 6721
    invoke-interface {v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@22
    .line 6724
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@25
    .line 6727
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@28
    .line 6711
    return-void

    #@29
    .line 6723
    :catchall_0
    move-exception v2

    #@2a
    .line 6724
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2d
    .line 6723
    throw v2
.end method

.method public unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    #@0
    .prologue
    .line 5769
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->unregisterInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@5
    .line 5768
    return-void
.end method

.method unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V
    .locals 10
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "unfreezeSurfaceNow"    # Z
    .param p3, "force"    # Z

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 4739
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@3
    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@5
    if-eqz v4, :cond_7

    #@7
    .line 4742
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@9
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@c
    move-result v0

    #@d
    .line 4743
    .local v0, "N":I
    const/4 v2, 0x0

    #@e
    .line 4744
    .local v2, "unfrozeWindows":Z
    const/4 v1, 0x0

    #@f
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_3

    #@11
    .line 4745
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@16
    move-result-object v3

    #@17
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@19
    .line 4746
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@1b
    if-eqz v4, :cond_1

    #@1d
    .line 4747
    iput-boolean v6, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@1f
    .line 4748
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@21
    if-eqz v4, :cond_0

    #@23
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@25
    if-eqz v4, :cond_2

    #@27
    .line 4754
    :cond_0
    :goto_1
    iput v6, v3, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@29
    .line 4755
    const/4 v2, 0x1

    #@2a
    .line 4756
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@2d
    .line 4744
    :cond_1
    add-int/lit8 v1, v1, 0x1

    #@2f
    goto :goto_0

    #@30
    .line 4749
    :cond_2
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@32
    const/4 v5, 0x2

    #@33
    if-eq v4, v5, :cond_0

    #@35
    .line 4751
    const/4 v4, 0x1

    #@36
    iput-boolean v4, v3, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@38
    .line 4752
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@3a
    iput-boolean v6, v4, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    #@3c
    goto :goto_1

    #@3d
    .line 4759
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    if-nez p3, :cond_4

    #@3f
    if-eqz v2, :cond_5

    #@41
    .line 4761
    :cond_4
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@43
    iput-boolean v6, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@45
    .line 4762
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@47
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@4a
    move-result-wide v6

    #@4b
    .line 4763
    iget-wide v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@4d
    .line 4762
    sub-long/2addr v6, v8

    #@4e
    long-to-int v5, v6

    #@4f
    iput v5, v4, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    #@51
    .line 4764
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@53
    add-int/lit8 v4, v4, -0x1

    #@55
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@57
    .line 4765
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@59
    .line 4767
    :cond_5
    if-eqz p2, :cond_7

    #@5b
    .line 4768
    if-eqz v2, :cond_6

    #@5d
    .line 4769
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5f
    invoke-virtual {v4}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@62
    .line 4771
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    #@65
    .line 4738
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "unfrozeWindows":Z
    :cond_7
    return-void
.end method

.method public updateAppOpsState()V
    .locals 14

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v9, 0x0

    #@2
    .line 2650
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v10

    #@5
    .line 2651
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@7
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    #@a
    move-result v2

    #@b
    .line 2652
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@c
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v2, :cond_4

    #@e
    .line 2653
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@10
    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@13
    move-result-object v7

    #@14
    check-cast v7, Lcom/android/server/wm/DisplayContent;

    #@16
    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@19
    move-result-object v6

    #@1a
    .line 2654
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@1d
    move-result v3

    #@1e
    .line 2655
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@1f
    .local v5, "winNdx":I
    :goto_1
    if-ge v5, v3, :cond_3

    #@21
    .line 2656
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@24
    move-result-object v4

    #@25
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@27
    .line 2657
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iget v7, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@29
    const/4 v11, -0x1

    #@2a
    if-eq v7, v11, :cond_0

    #@2c
    .line 2658
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@2e
    iget v11, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@30
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@33
    move-result v12

    #@34
    .line 2659
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@37
    move-result-object v13

    #@38
    .line 2658
    invoke-virtual {v7, v11, v12, v13}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    #@3b
    move-result v1

    #@3c
    .line 2660
    .local v1, "mode":I
    if-eqz v1, :cond_1

    #@3e
    .line 2661
    const/4 v7, 0x3

    #@3f
    if-ne v1, v7, :cond_2

    #@41
    move v7, v8

    #@42
    .line 2660
    :goto_2
    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@45
    .line 2655
    .end local v1    # "mode":I
    :cond_0
    add-int/lit8 v5, v5, 0x1

    #@47
    goto :goto_1

    #@48
    .restart local v1    # "mode":I
    :cond_1
    move v7, v8

    #@49
    .line 2660
    goto :goto_2

    #@4a
    :cond_2
    move v7, v9

    #@4b
    .line 2661
    goto :goto_2

    #@4c
    .line 2652
    .end local v1    # "mode":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    add-int/lit8 v0, v0, 0x1

    #@4e
    goto :goto_0

    #@4f
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    monitor-exit v10

    #@50
    .line 2649
    return-void

    #@51
    .line 2650
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_0
    move-exception v7

    #@52
    monitor-exit v10

    #@53
    throw v7
.end method

.method updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;
    .locals 14
    .param p1, "uiMode"    # I

    #@0
    .prologue
    .line 7612
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v3

    #@4
    .line 7615
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@6
    const/4 v12, 0x1

    #@7
    if-eq v11, v12, :cond_1

    #@9
    .line 7616
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@b
    const/4 v12, 0x3

    #@c
    if-ne v11, v12, :cond_2

    #@e
    const/4 v10, 0x1

    #@f
    .line 7617
    .local v10, "rotated":Z
    :goto_0
    if-eqz v10, :cond_3

    #@11
    .line 7618
    iget v9, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@13
    .line 7619
    .local v9, "realdw":I
    :goto_1
    if-eqz v10, :cond_4

    #@15
    .line 7620
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@17
    .line 7621
    .local v8, "realdh":I
    :goto_2
    move v5, v9

    #@18
    .line 7622
    .local v5, "dw":I
    move v2, v8

    #@19
    .line 7624
    .local v2, "dh":I
    iget-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@1b
    if-eqz v11, :cond_0

    #@1d
    .line 7625
    if-le v9, v8, :cond_5

    #@1f
    .line 7627
    int-to-float v11, v8

    #@20
    const v12, 0x3fa66666    # 1.3f

    #@23
    div-float/2addr v11, v12

    #@24
    float-to-int v7, v11

    #@25
    .line 7628
    .local v7, "maxw":I
    if-ge v7, v9, :cond_0

    #@27
    .line 7629
    move v5, v7

    #@28
    .line 7641
    .end local v7    # "maxw":I
    :cond_0
    :goto_3
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2a
    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2c
    invoke-interface {v11, v5, v2, v12, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    #@2f
    move-result v1

    #@30
    .line 7642
    .local v1, "appWidth":I
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@32
    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@34
    invoke-interface {v11, v5, v2, v12, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    #@37
    move-result v0

    #@38
    .line 7643
    .local v0, "appHeight":I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@3b
    move-result-object v4

    #@3c
    .line 7644
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@3e
    iput v11, v4, Landroid/view/DisplayInfo;->rotation:I

    #@40
    .line 7645
    iput v5, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    #@42
    .line 7646
    iput v2, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    #@44
    .line 7647
    iget v11, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@46
    iput v11, v4, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    #@48
    .line 7648
    iput v1, v4, Landroid/view/DisplayInfo;->appWidth:I

    #@4a
    .line 7649
    iput v0, v4, Landroid/view/DisplayInfo;->appHeight:I

    #@4c
    .line 7650
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@4e
    .line 7651
    sget-object v12, Landroid/content/res/CompatibilityInfo;->DEFAULT_COMPATIBILITY_INFO:Landroid/content/res/CompatibilityInfo;

    #@50
    const/4 v13, 0x0

    #@51
    .line 7650
    invoke-virtual {v4, v11, v12, v13}, Landroid/view/DisplayInfo;->getLogicalMetrics(Landroid/util/DisplayMetrics;Landroid/content/res/CompatibilityInfo;Landroid/content/res/Configuration;)V

    #@54
    .line 7652
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@56
    invoke-virtual {v4, v11}, Landroid/view/DisplayInfo;->getAppMetrics(Landroid/util/DisplayMetrics;)V

    #@59
    .line 7653
    iget-boolean v11, v3, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    #@5b
    if-eqz v11, :cond_6

    #@5d
    .line 7654
    iget v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@5f
    const/high16 v12, 0x40000000    # 2.0f

    #@61
    or-int/2addr v11, v12

    #@62
    iput v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@64
    .line 7659
    :goto_4
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@66
    .line 7660
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@69
    move-result v12

    #@6a
    .line 7659
    invoke-virtual {v11, v12, v4}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    #@6d
    .line 7662
    iget-object v11, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayRect:Landroid/graphics/Rect;

    #@6f
    const/4 v12, 0x0

    #@70
    const/4 v13, 0x0

    #@71
    invoke-virtual {v11, v12, v13, v5, v2}, Landroid/graphics/Rect;->set(IIII)V

    #@74
    .line 7667
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@76
    .line 7668
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    #@78
    .line 7667
    invoke-static {v11, v12}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    #@7b
    move-result v11

    #@7c
    iput v11, p0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@7e
    .line 7669
    return-object v4

    #@7f
    .line 7615
    .end local v0    # "appHeight":I
    .end local v1    # "appWidth":I
    .end local v2    # "dh":I
    .end local v4    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v5    # "dw":I
    .end local v8    # "realdh":I
    .end local v9    # "realdw":I
    .end local v10    # "rotated":Z
    :cond_1
    const/4 v10, 0x1

    #@80
    goto :goto_0

    #@81
    .line 7616
    :cond_2
    const/4 v10, 0x0

    #@82
    goto :goto_0

    #@83
    .line 7618
    .restart local v10    # "rotated":Z
    :cond_3
    iget v9, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@85
    .restart local v9    # "realdw":I
    goto :goto_1

    #@86
    .line 7620
    :cond_4
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@88
    goto :goto_2

    #@89
    .line 7633
    .restart local v2    # "dh":I
    .restart local v5    # "dw":I
    .restart local v8    # "realdh":I
    :cond_5
    int-to-float v11, v9

    #@8a
    const v12, 0x3fa66666    # 1.3f

    #@8d
    div-float/2addr v11, v12

    #@8e
    float-to-int v6, v11

    #@8f
    .line 7634
    .local v6, "maxh":I
    if-ge v6, v8, :cond_0

    #@91
    .line 7635
    move v2, v6

    #@92
    goto :goto_3

    #@93
    .line 7656
    .end local v6    # "maxh":I
    .restart local v0    # "appHeight":I
    .restart local v1    # "appWidth":I
    .restart local v4    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_6
    iget v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@95
    const v12, -0x40000001    # -1.9999999f

    #@98
    and-int/2addr v11, v12

    #@99
    iput v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@9b
    goto :goto_4
.end method

.method updateFocusedWindowLocked(IZ)Z
    .locals 12
    .param p1, "mode"    # I
    .param p2, "updateInputWindows"    # Z

    #@0
    .prologue
    const-wide/16 v10, 0x20

    #@2
    const/4 v9, 0x3

    #@3
    const/4 v8, 0x2

    #@4
    const/4 v5, 0x0

    #@5
    const/4 v6, 0x1

    #@6
    .line 9903
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@9
    move-result-object v3

    #@a
    .line 9904
    .local v3, "newFocus":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@c
    if-eq v7, v3, :cond_6

    #@e
    .line 9905
    const-string/jumbo v7, "wmUpdateFocus"

    #@11
    invoke-static {v10, v11, v7}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@14
    .line 9908
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@16
    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@19
    .line 9909
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1b
    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@1e
    .line 9911
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@21
    move-result-object v0

    #@22
    .line 9913
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eq p1, v6, :cond_0

    #@24
    .line 9914
    if-eq p1, v9, :cond_0

    #@26
    move v5, v6

    #@27
    .line 9912
    :cond_0
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@2a
    move-result v2

    #@2b
    .line 9915
    .local v2, "imWindowChanged":Z
    if-eqz v2, :cond_1

    #@2d
    .line 9916
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@2f
    .line 9917
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@32
    move-result-object v3

    #@33
    .line 9922
    :cond_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@35
    .line 9923
    .local v4, "oldFocus":Lcom/android/server/wm/WindowState;
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@37
    .line 9924
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@39
    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@3c
    .line 9926
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3e
    invoke-interface {v5, v4, v3}, Landroid/view/WindowManagerPolicy;->focusChangedLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)I

    #@41
    move-result v1

    #@42
    .line 9928
    .local v1, "focusChanged":I
    if-eqz v2, :cond_2

    #@44
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@46
    if-eq v4, v5, :cond_2

    #@48
    .line 9930
    if-ne p1, v8, :cond_5

    #@4a
    .line 9931
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@4c
    invoke-virtual {v5, v0, v6, p2}, Lcom/android/server/wm/WindowSurfacePlacer;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    #@4f
    .line 9933
    and-int/lit8 v1, v1, -0x2

    #@51
    .line 9941
    :cond_2
    :goto_0
    and-int/lit8 v5, v1, 0x1

    #@53
    if-eqz v5, :cond_3

    #@55
    .line 9943
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@57
    .line 9944
    if-ne p1, v8, :cond_3

    #@59
    .line 9945
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5b
    invoke-virtual {v5, v0, v6, p2}, Lcom/android/server/wm/WindowSurfacePlacer;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    #@5e
    .line 9950
    :cond_3
    if-eq p1, v6, :cond_4

    #@60
    .line 9953
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@62
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@64
    invoke-virtual {v5, v7, p2}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    #@67
    .line 9956
    :cond_4
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->adjustForImeIfNeeded(Lcom/android/server/wm/DisplayContent;)V

    #@6a
    .line 9961
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6d
    move-result-object v5

    #@6e
    invoke-virtual {v5, v4, v3}, Lcom/android/server/wm/DisplayContent;->scheduleToastWindowsTimeoutIfNeededLocked(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@71
    .line 9964
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    #@74
    .line 9965
    return v6

    #@75
    .line 9934
    :cond_5
    if-ne p1, v9, :cond_2

    #@77
    .line 9937
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@79
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7c
    move-result-object v7

    #@7d
    invoke-virtual {v5, v7}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@80
    goto :goto_0

    #@81
    .line 9967
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "focusChanged":I
    .end local v2    # "imWindowChanged":Z
    .end local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :cond_6
    return v5
.end method

.method public updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .locals 5
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 3774
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3775
    const-string/jumbo v4, "updateOrientationFromAppTokens()"

    #@6
    .line 3774
    invoke-direct {p0, v1, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3776
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3779
    :cond_0
    const/4 v0, 0x0

    #@16
    .line 3780
    .local v0, "config":Landroid/content/res/Configuration;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@19
    move-result-wide v2

    #@1a
    .line 3782
    .local v2, "ident":J
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1c
    monitor-enter v1

    #@1d
    .line 3783
    :try_start_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@20
    move-result-object v0

    #@21
    .local v0, "config":Landroid/content/res/Configuration;
    monitor-exit v1

    #@22
    .line 3787
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@25
    .line 3788
    return-object v0

    #@26
    .line 3782
    .local v0, "config":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v4

    #@27
    monitor-exit v1

    #@28
    throw v4
.end method

.method updateOrientationFromAppTokensLocked(Z)Z
    .locals 4
    .param p1, "inTransaction"    # Z

    #@0
    .prologue
    .line 3852
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 3854
    .local v0, "ident":J
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getOrientationLocked()I

    #@7
    move-result v2

    #@8
    .line 3855
    .local v2, "req":I
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@a
    if-eq v2, v3, :cond_0

    #@c
    .line 3856
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@e
    .line 3859
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@10
    invoke-interface {v3, v2}, Landroid/view/WindowManagerPolicy;->setCurrentOrientationLw(I)V

    #@13
    .line 3860
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    move-result v3

    #@17
    if-eqz v3, :cond_0

    #@19
    .line 3862
    const/4 v3, 0x1

    #@1a
    .line 3868
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1d
    .line 3862
    return v3

    #@1e
    .line 3866
    :cond_0
    const/4 v3, 0x0

    #@1f
    .line 3868
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@22
    .line 3866
    return v3

    #@23
    .line 3867
    .end local v2    # "req":I
    :catchall_0
    move-exception v3

    #@24
    .line 3868
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@27
    .line 3867
    throw v3
.end method

.method updatePointerIcon(Landroid/view/IWindow;)V
    .locals 10
    .param p1, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 11456
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@2
    monitor-enter v7

    #@3
    .line 11457
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@5
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get0(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v6

    #@9
    if-nez v6, :cond_0

    #@b
    monitor-exit v7

    #@c
    .line 11458
    return-void

    #@d
    .line 11460
    :cond_0
    :try_start_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@f
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get1(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F

    #@12
    move-result v3

    #@13
    .line 11461
    .local v3, "mouseX":F
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@15
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get2(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@18
    move-result v4

    #@19
    .local v4, "mouseY":F
    monitor-exit v7

    #@1a
    .line 11464
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1c
    monitor-enter v7

    #@1d
    .line 11465
    :try_start_2
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@1f
    if-eqz v6, :cond_1

    #@21
    monitor-exit v7

    #@22
    .line 11467
    return-void

    #@23
    .line 11456
    .end local v3    # "mouseX":F
    .end local v4    # "mouseY":F
    :catchall_0
    move-exception v6

    #@24
    monitor-exit v7

    #@25
    throw v6

    #@26
    .line 11469
    .restart local v3    # "mouseX":F
    .restart local v4    # "mouseY":F
    :cond_1
    const/4 v6, 0x0

    #@27
    const/4 v8, 0x0

    #@28
    :try_start_3
    invoke-virtual {p0, v6, p1, v8}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@2b
    move-result-object v0

    #@2c
    .line 11470
    .local v0, "callingWin":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_2

    #@2e
    .line 11471
    const-string/jumbo v6, "WindowManager"

    #@31
    new-instance v8, Ljava/lang/StringBuilder;

    #@33
    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    #@36
    const-string/jumbo v9, "Bad requesting window "

    #@39
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3c
    move-result-object v8

    #@3d
    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@40
    move-result-object v8

    #@41
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@44
    move-result-object v8

    #@45
    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@48
    monitor-exit v7

    #@49
    .line 11472
    return-void

    #@4a
    .line 11474
    :cond_2
    :try_start_4
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@4d
    move-result-object v1

    #@4e
    .line 11475
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_3

    #@50
    monitor-exit v7

    #@51
    .line 11476
    return-void

    #@52
    .line 11479
    :cond_3
    :try_start_5
    invoke-virtual {v1, v3, v4}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@55
    move-result-object v5

    #@56
    .line 11480
    .local v5, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eq v5, v0, :cond_4

    #@58
    monitor-exit v7

    #@59
    .line 11481
    return-void

    #@5a
    .line 11484
    :cond_4
    :try_start_6
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@5c
    .line 11485
    invoke-virtual {v5, v3}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    #@5f
    move-result v8

    #@60
    .line 11486
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    #@63
    move-result v9

    #@64
    .line 11484
    invoke-interface {v6, v8, v9}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    #@67
    :goto_0
    monitor-exit v7

    #@68
    .line 11453
    return-void

    #@69
    .line 11487
    :catch_0
    move-exception v2

    #@6a
    .line 11488
    .local v2, "e":Landroid/os/RemoteException;
    :try_start_7
    const-string/jumbo v6, "WindowManager"

    #@6d
    const-string/jumbo v8, "unable to update pointer icon"

    #@70
    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    #@73
    goto :goto_0

    #@74
    .line 11464
    .end local v0    # "callingWin":Lcom/android/server/wm/WindowState;
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "e":Landroid/os/RemoteException;
    .end local v5    # "windowUnderPointer":Lcom/android/server/wm/WindowState;
    :catchall_1
    move-exception v6

    #@75
    monitor-exit v7

    #@76
    throw v6
.end method

.method updateResizingWindows(Lcom/android/server/wm/WindowState;)V
    .locals 8
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 9598
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@2
    .line 9599
    .local v3, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@4
    if-eqz v4, :cond_0

    #@6
    iget v4, p1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    #@8
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@a
    if-ne v4, v5, :cond_0

    #@c
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    #@f
    move-result v4

    #@10
    if-eqz v4, :cond_1

    #@12
    .line 9597
    :cond_0
    :goto_0
    return-void

    #@13
    .line 9600
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    #@16
    move-result-object v2

    #@17
    .line 9609
    .local v2, "task":Lcom/android/server/wm/Task;
    if-eqz v2, :cond_2

    #@19
    iget-object v4, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@1b
    invoke-virtual {v4}, Lcom/android/server/wm/TaskStack;->getBoundsAnimating()Z

    #@1e
    move-result v4

    #@1f
    if-eqz v4, :cond_2

    #@21
    .line 9610
    return-void

    #@22
    .line 9612
    :cond_2
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setReportResizeHints()Z

    #@25
    .line 9613
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    #@28
    move-result v0

    #@29
    .line 9618
    .local v0, "configChanged":Z
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDragResizeChanged()Z

    #@2c
    move-result v4

    #@2d
    if-eqz v4, :cond_4

    #@2f
    .line 9619
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDragResizingChangeReported()Z

    #@32
    move-result v4

    #@33
    if-eqz v4, :cond_3

    #@35
    const/4 v1, 0x0

    #@36
    .line 9629
    .local v1, "dragResizingChanged":Z
    :goto_1
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    #@38
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@3a
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@3d
    .line 9631
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mContentInsetsChanged:Z

    #@3f
    if-nez v4, :cond_5

    #@41
    .line 9632
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mVisibleInsetsChanged:Z

    #@43
    .line 9631
    if-nez v4, :cond_5

    #@45
    .line 9633
    iget-boolean v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z

    #@47
    .line 9631
    if-nez v4, :cond_5

    #@49
    .line 9634
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOutsetsChanged:Z

    #@4b
    .line 9631
    if-nez v4, :cond_5

    #@4d
    .line 9635
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mFrameSizeChanged:Z

    #@4f
    .line 9631
    if-nez v4, :cond_5

    #@51
    if-nez v0, :cond_5

    #@53
    if-nez v1, :cond_5

    #@55
    .line 9638
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizingReported()Z

    #@58
    move-result v4

    #@59
    if-eqz v4, :cond_5

    #@5b
    .line 9691
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@5d
    if-eqz v4, :cond_0

    #@5f
    .line 9692
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@62
    move-result v4

    #@63
    if-eqz v4, :cond_0

    #@65
    .line 9696
    const/4 v4, 0x0

    #@66
    iput-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@68
    .line 9697
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@6b
    move-result-wide v4

    #@6c
    .line 9698
    iget-wide v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@6e
    .line 9697
    sub-long/2addr v4, v6

    #@6f
    long-to-int v4, v4

    #@70
    iput v4, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@72
    goto :goto_0

    #@73
    .line 9619
    .end local v1    # "dragResizingChanged":Z
    :cond_3
    const/4 v1, 0x1

    #@74
    .restart local v1    # "dragResizingChanged":Z
    goto :goto_1

    #@75
    .line 9618
    .end local v1    # "dragResizingChanged":Z
    :cond_4
    const/4 v1, 0x0

    #@76
    .restart local v1    # "dragResizingChanged":Z
    goto :goto_1

    #@77
    .line 9658
    :cond_5
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@79
    if-eqz v4, :cond_6

    #@7b
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mAppDied:Z

    #@7d
    if-eqz v4, :cond_6

    #@7f
    .line 9659
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@81
    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->removeAllDeadWindows()V

    #@84
    .line 9660
    return-void

    #@85
    .line 9663
    :cond_6
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastOverscanInsets:Landroid/graphics/Rect;

    #@87
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    #@89
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@8c
    .line 9664
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    #@8e
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@90
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@93
    .line 9665
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastVisibleInsets:Landroid/graphics/Rect;

    #@95
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    #@97
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@9a
    .line 9666
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastStableInsets:Landroid/graphics/Rect;

    #@9c
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    #@9e
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@a1
    .line 9667
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastOutsets:Landroid/graphics/Rect;

    #@a3
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    #@a5
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@a8
    .line 9668
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V

    #@ab
    .line 9674
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@ad
    if-nez v4, :cond_7

    #@af
    if-nez v1, :cond_7

    #@b1
    .line 9675
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizing()Z

    #@b4
    move-result v4

    #@b5
    .line 9674
    if-eqz v4, :cond_8

    #@b7
    .line 9681
    :cond_7
    const/4 v4, 0x1

    #@b8
    iput v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    #@ba
    .line 9682
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@bc
    if-eqz v4, :cond_8

    #@be
    .line 9683
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@c0
    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    #@c3
    .line 9686
    :cond_8
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@c5
    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@c8
    move-result v4

    #@c9
    if-nez v4, :cond_0

    #@cb
    .line 9689
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@cd
    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@d0
    goto/16 :goto_0
.end method

.method public updateRotation(ZZ)V
    .locals 0
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    #@0
    .prologue
    .line 6739
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@3
    .line 6738
    return-void
.end method

.method public updateRotationUnchecked(ZZ)V
    .locals 6
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    #@0
    .prologue
    .line 6774
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 6776
    .local v2, "origId":J
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4

    #@7
    .line 6777
    const/4 v1, 0x0

    #@8
    :try_start_0
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@b
    move-result v0

    #@c
    .line 6778
    .local v0, "changed":Z
    if-eqz v0, :cond_0

    #@e
    if-eqz p2, :cond_1

    #@10
    .line 6779
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@13
    move-result-object v1

    #@14
    const/4 v5, 0x1

    #@15
    iput-boolean v5, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@17
    .line 6780
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@19
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    :cond_1
    monitor-exit v4

    #@1d
    .line 6784
    if-nez v0, :cond_2

    #@1f
    if-eqz p1, :cond_3

    #@21
    .line 6785
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@24
    .line 6788
    :cond_3
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@27
    .line 6770
    return-void

    #@28
    .line 6776
    .end local v0    # "changed":Z
    :catchall_0
    move-exception v1

    #@29
    monitor-exit v4

    #@2a
    throw v1
.end method

.method public updateRotationUncheckedLocked(Z)Z
    .locals 20
    .param p1, "inTransaction"    # Z

    #@0
    .prologue
    .line 6800
    move-object/from16 v0, p0

    #@2
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@4
    if-lez v5, :cond_0

    #@6
    .line 6804
    const/4 v5, 0x0

    #@7
    return v5

    #@8
    .line 6808
    :cond_0
    move-object/from16 v0, p0

    #@a
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@c
    const/4 v6, 0x0

    #@d
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@10
    move-result-object v3

    #@11
    .line 6809
    .local v3, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v3, :cond_1

    #@13
    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    #@16
    move-result v5

    #@17
    if-eqz v5, :cond_1

    #@19
    .line 6814
    const/4 v5, 0x0

    #@1a
    return v5

    #@1b
    .line 6816
    :cond_1
    move-object/from16 v0, p0

    #@1d
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@1f
    if-eqz v5, :cond_2

    #@21
    .line 6821
    const/4 v5, 0x0

    #@22
    return v5

    #@23
    .line 6824
    :cond_2
    move-object/from16 v0, p0

    #@25
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@27
    if-nez v5, :cond_3

    #@29
    .line 6827
    const/4 v5, 0x0

    #@2a
    return v5

    #@2b
    .line 6830
    :cond_3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2e
    move-result-object v12

    #@2f
    .line 6831
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@32
    move-result-object v19

    #@33
    .line 6833
    .local v19, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    #@35
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@37
    move/from16 v16, v0

    #@39
    .line 6834
    .local v16, "oldRotation":I
    move-object/from16 v0, p0

    #@3b
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3d
    move-object/from16 v0, p0

    #@3f
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@41
    move/from16 v0, v16

    #@43
    invoke-interface {v5, v0, v6}, Landroid/view/WindowManagerPolicy;->shouldRotateSeamlessly(II)Z

    #@46
    move-result v17

    #@47
    .line 6836
    .local v17, "rotateSeamlessly":Z
    if-eqz v17, :cond_7

    #@49
    .line 6837
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@4c
    move-result v5

    #@4d
    add-int/lit8 v15, v5, -0x1

    #@4f
    .end local v17    # "rotateSeamlessly":Z
    .local v15, "i":I
    :goto_0
    if-ltz v15, :cond_7

    #@51
    .line 6838
    move-object/from16 v0, v19

    #@53
    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@56
    move-result-object v18

    #@57
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@59
    .line 6842
    .local v18, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    #@5b
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mSeamlesslyRotated:Z

    #@5d
    if-eqz v5, :cond_4

    #@5f
    .line 6843
    const/4 v5, 0x0

    #@60
    return v5

    #@61
    .line 6855
    :cond_4
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->isChildWindow()Z

    #@64
    move-result v5

    #@65
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@68
    move-result v6

    #@69
    and-int/2addr v5, v6

    #@6a
    if-eqz v5, :cond_5

    #@6c
    .line 6856
    move-object/from16 v0, v18

    #@6e
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@70
    iget-object v5, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@72
    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfaceController;->getTransformToDisplayInverse()Z

    #@75
    move-result v5

    #@76
    if-eqz v5, :cond_6

    #@78
    .line 6837
    :cond_5
    :goto_1
    add-int/lit8 v15, v15, -0x1

    #@7a
    goto :goto_0

    #@7b
    .line 6857
    :cond_6
    const/16 v17, 0x0

    #@7d
    .local v17, "rotateSeamlessly":Z
    goto :goto_1

    #@7e
    .line 6867
    .end local v15    # "i":I
    .end local v17    # "rotateSeamlessly":Z
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    :cond_7
    move-object/from16 v0, p0

    #@80
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@82
    move-object/from16 v0, p0

    #@84
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@86
    move-object/from16 v0, p0

    #@88
    iget v7, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@8a
    invoke-interface {v5, v6, v7}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(II)I

    #@8d
    move-result v4

    #@8e
    .line 6868
    .local v4, "rotation":I
    move-object/from16 v0, p0

    #@90
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@92
    .line 6869
    move-object/from16 v0, p0

    #@94
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    #@96
    .line 6868
    invoke-interface {v5, v6, v4}, Landroid/view/WindowManagerPolicy;->rotationHasCompatibleMetricsLw(II)Z

    #@99
    move-result v5

    #@9a
    if-eqz v5, :cond_8

    #@9c
    const/4 v2, 0x0

    #@9d
    .line 6878
    .local v2, "altOrientation":Z
    :goto_2
    move-object/from16 v0, p0

    #@9f
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@a1
    if-ne v5, v4, :cond_9

    #@a3
    move-object/from16 v0, p0

    #@a5
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@a7
    if-ne v5, v2, :cond_9

    #@a9
    .line 6880
    const/4 v5, 0x0

    #@aa
    return v5

    #@ab
    .line 6868
    .end local v2    # "altOrientation":Z
    :cond_8
    const/4 v2, 0x1

    #@ac
    .restart local v2    # "altOrientation":Z
    goto :goto_2

    #@ad
    .line 6890
    :cond_9
    move-object/from16 v0, p0

    #@af
    iput v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@b1
    .line 6891
    move-object/from16 v0, p0

    #@b3
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@b5
    .line 6892
    move-object/from16 v0, p0

    #@b7
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@b9
    move-object/from16 v0, p0

    #@bb
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@bd
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->setRotationLw(I)V

    #@c0
    .line 6894
    const/4 v5, 0x1

    #@c1
    move-object/from16 v0, p0

    #@c3
    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@c5
    .line 6895
    move-object/from16 v0, p0

    #@c7
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@c9
    const/16 v6, 0xb

    #@cb
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@ce
    .line 6896
    move-object/from16 v0, p0

    #@d0
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@d2
    const-wide/16 v6, 0x7d0

    #@d4
    const/16 v8, 0xb

    #@d6
    invoke-virtual {v5, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@d9
    .line 6897
    const/4 v5, 0x1

    #@da
    move-object/from16 v0, p0

    #@dc
    iput-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@de
    .line 6898
    const/4 v5, 0x1

    #@df
    iput-boolean v5, v12, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@e1
    .line 6899
    const/4 v5, 0x2

    #@e2
    new-array v11, v5, [I

    #@e4
    .line 6900
    .local v11, "anim":[I
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@e7
    move-result v5

    #@e8
    if-eqz v5, :cond_c

    #@ea
    .line 6901
    const/4 v5, 0x0

    #@eb
    const/4 v6, 0x1

    #@ec
    aput v5, v11, v6

    #@ee
    const/4 v5, 0x0

    #@ef
    const/4 v6, 0x0

    #@f0
    aput v5, v11, v6

    #@f2
    .line 6906
    :goto_3
    if-nez v17, :cond_d

    #@f4
    .line 6907
    const/4 v5, 0x0

    #@f5
    aget v5, v11, v5

    #@f7
    const/4 v6, 0x1

    #@f8
    aget v6, v11, v6

    #@fa
    move-object/from16 v0, p0

    #@fc
    move/from16 v1, p1

    #@fe
    invoke-direct {v0, v1, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@101
    .line 6910
    move-object/from16 v0, p0

    #@103
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@105
    const/4 v6, 0x0

    #@106
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@109
    move-result-object v3

    #@10a
    .line 6928
    .end local v3    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :goto_4
    move-object/from16 v0, p0

    #@10c
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@10e
    iget v5, v5, Landroid/content/res/Configuration;->uiMode:I

    #@110
    move-object/from16 v0, p0

    #@112
    invoke-virtual {v0, v5}, Lcom/android/server/wm/WindowManagerService;->updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    #@115
    .line 6930
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@118
    move-result-object v13

    #@119
    .line 6931
    .local v13, "displayInfo":Landroid/view/DisplayInfo;
    if-nez p1, :cond_a

    #@11b
    .line 6935
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@11e
    .line 6940
    :cond_a
    if-eqz v3, :cond_b

    #@120
    .line 6941
    :try_start_0
    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    #@123
    move-result v5

    #@124
    .line 6940
    if-eqz v5, :cond_b

    #@126
    .line 6943
    move-object/from16 v0, p0

    #@128
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@12a
    .line 6944
    const-wide/16 v6, 0x2710

    #@12c
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    #@12f
    move-result v8

    #@130
    .line 6945
    iget v9, v13, Landroid/view/DisplayInfo;->logicalWidth:I

    #@132
    iget v10, v13, Landroid/view/DisplayInfo;->logicalHeight:I

    #@134
    .line 6942
    invoke-virtual/range {v3 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->setRotationInTransaction(ILandroid/view/SurfaceSession;JFII)Z

    #@137
    move-result v5

    #@138
    if-eqz v5, :cond_b

    #@13a
    .line 6946
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    #@13d
    .line 6950
    :cond_b
    if-eqz v17, :cond_e

    #@13f
    .line 6951
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@142
    move-result v5

    #@143
    add-int/lit8 v15, v5, -0x1

    #@145
    .restart local v15    # "i":I
    :goto_5
    if-ltz v15, :cond_e

    #@147
    .line 6952
    move-object/from16 v0, v19

    #@149
    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@14c
    move-result-object v18

    #@14d
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@14f
    .line 6953
    .restart local v18    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    #@151
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@153
    move-object/from16 v0, p0

    #@155
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@157
    move/from16 v0, v16

    #@159
    invoke-virtual {v5, v0, v6}, Lcom/android/server/wm/WindowStateAnimator;->seamlesslyRotateWindow(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15c
    .line 6951
    add-int/lit8 v15, v15, -0x1

    #@15e
    goto :goto_5

    #@15f
    .line 6903
    .end local v13    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "i":I
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    .restart local v3    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_c
    move-object/from16 v0, p0

    #@161
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@163
    invoke-interface {v5, v11}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    #@166
    goto :goto_3

    #@167
    .line 6916
    :cond_d
    const/4 v3, 0x0

    #@168
    .line 6920
    .local v3, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    const/4 v5, 0x0

    #@169
    move-object/from16 v0, p0

    #@16b
    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    #@16d
    goto :goto_4

    #@16e
    .line 6957
    .end local v3    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .restart local v13    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_e
    :try_start_1
    move-object/from16 v0, p0

    #@170
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@172
    invoke-virtual {v5}, Landroid/hardware/display/DisplayManagerInternal;->performTraversalInTransactionFromWindowManager()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@175
    .line 6959
    if-nez p1, :cond_f

    #@177
    .line 6960
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@17a
    .line 6967
    :cond_f
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@17d
    move-result v5

    #@17e
    add-int/lit8 v15, v5, -0x1

    #@180
    .restart local v15    # "i":I
    :goto_6
    if-ltz v15, :cond_14

    #@182
    .line 6968
    move-object/from16 v0, v19

    #@184
    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@187
    move-result-object v18

    #@188
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@18a
    .line 6970
    .restart local v18    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    #@18c
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@18e
    if-eqz v5, :cond_10

    #@190
    .line 6971
    move-object/from16 v0, v18

    #@192
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@194
    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->destroySavedSurfaces()V

    #@197
    .line 6973
    :cond_10
    move-object/from16 v0, v18

    #@199
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@19b
    if-eqz v5, :cond_11

    #@19d
    if-eqz v17, :cond_13

    #@19f
    .line 6967
    :cond_11
    :goto_7
    add-int/lit8 v15, v15, -0x1

    #@1a1
    goto :goto_6

    #@1a2
    .line 6958
    .end local v15    # "i":I
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v5

    #@1a3
    .line 6959
    if-nez p1, :cond_12

    #@1a5
    .line 6960
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@1a8
    .line 6958
    :cond_12
    throw v5

    #@1a9
    .line 6975
    .restart local v15    # "i":I
    .restart local v18    # "w":Lcom/android/server/wm/WindowState;
    :cond_13
    const/4 v5, 0x1

    #@1aa
    move-object/from16 v0, v18

    #@1ac
    iput-boolean v5, v0, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@1ae
    .line 6976
    move-object/from16 v0, p0

    #@1b0
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@1b2
    const/4 v6, 0x0

    #@1b3
    iput-boolean v6, v5, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    #@1b5
    .line 6977
    const/4 v5, 0x0

    #@1b6
    move-object/from16 v0, v18

    #@1b8
    iput v5, v0, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@1ba
    goto :goto_7

    #@1bb
    .line 6980
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    :cond_14
    if-eqz v17, :cond_15

    #@1bd
    .line 6981
    move-object/from16 v0, p0

    #@1bf
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1c1
    const/16 v6, 0x36

    #@1c3
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@1c6
    .line 6982
    move-object/from16 v0, p0

    #@1c8
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1ca
    const-wide/16 v6, 0x7d0

    #@1cc
    const/16 v8, 0x36

    #@1ce
    invoke-virtual {v5, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@1d1
    .line 6985
    :cond_15
    move-object/from16 v0, p0

    #@1d3
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@1d5
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@1d8
    move-result v5

    #@1d9
    add-int/lit8 v15, v5, -0x1

    #@1db
    :goto_8
    if-ltz v15, :cond_16

    #@1dd
    .line 6987
    :try_start_2
    move-object/from16 v0, p0

    #@1df
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@1e1
    invoke-virtual {v5, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1e4
    move-result-object v5

    #@1e5
    check-cast v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@1e7
    iget-object v5, v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@1e9
    invoke-interface {v5, v4}, Landroid/view/IRotationWatcher;->onRotationChanged(I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    #@1ec
    .line 6985
    :goto_9
    add-int/lit8 v15, v15, -0x1

    #@1ee
    goto :goto_8

    #@1ef
    .line 6995
    :cond_16
    if-nez v3, :cond_17

    #@1f1
    move-object/from16 v0, p0

    #@1f3
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@1f5
    if-eqz v5, :cond_17

    #@1f7
    .line 6996
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@1fa
    move-result v5

    #@1fb
    if-nez v5, :cond_17

    #@1fd
    .line 6997
    move-object/from16 v0, p0

    #@1ff
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@201
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@204
    move-result-object v6

    #@205
    invoke-virtual {v5, v6, v4}, Lcom/android/server/wm/AccessibilityController;->onRotationChangedLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@208
    .line 7001
    :cond_17
    const/4 v5, 0x1

    #@209
    return v5

    #@20a
    .line 6988
    :catch_0
    move-exception v14

    #@20b
    .local v14, "e":Landroid/os/RemoteException;
    goto :goto_9
.end method

.method updateStatusBarVisibilityLocked(I)Z
    .locals 11
    .param p1, "visibility"    # I

    #@0
    .prologue
    .line 10308
    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@2
    if-ne v9, p1, :cond_0

    #@4
    .line 10309
    const/4 v9, 0x0

    #@5
    return v9

    #@6
    .line 10311
    :cond_0
    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@8
    xor-int/2addr v9, p1

    #@9
    and-int/lit8 v9, v9, 0x7

    #@b
    .line 10316
    not-int v10, p1

    #@c
    .line 10311
    and-int v4, v9, v10

    #@e
    .line 10318
    .local v4, "globalDiff":I
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@10
    .line 10319
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@12
    invoke-virtual {v9, p1}, Lcom/android/server/input/InputManagerService;->setSystemUiVisibility(I)V

    #@15
    .line 10320
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@18
    move-result-object v7

    #@19
    .line 10321
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@1c
    move-result v0

    #@1d
    .line 10322
    .local v0, "N":I
    const/4 v5, 0x0

    #@1e
    .local v5, "i":I
    :goto_0
    if-ge v5, v0, :cond_4

    #@20
    .line 10323
    invoke-virtual {v7, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@23
    move-result-object v8

    #@24
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@26
    .line 10325
    .local v8, "ws":Lcom/android/server/wm/WindowState;
    :try_start_0
    iget v1, v8, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@28
    .line 10326
    .local v1, "curValue":I
    xor-int v9, v1, p1

    #@2a
    and-int v2, v9, v4

    #@2c
    .line 10327
    .local v2, "diff":I
    not-int v9, v2

    #@2d
    and-int/2addr v9, v1

    #@2e
    and-int v10, p1, v2

    #@30
    or-int v6, v9, v10

    #@32
    .line 10328
    .local v6, "newValue":I
    if-eq v6, v1, :cond_1

    #@34
    .line 10329
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@36
    add-int/lit8 v9, v9, 0x1

    #@38
    iput v9, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@3a
    .line 10330
    iput v6, v8, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@3c
    .line 10332
    :cond_1
    if-ne v6, v1, :cond_2

    #@3e
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@40
    iget-boolean v9, v9, Landroid/view/WindowManager$LayoutParams;->hasSystemUiListeners:Z

    #@42
    if-eqz v9, :cond_3

    #@44
    .line 10333
    :cond_2
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@46
    iget v10, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@48
    invoke-interface {v9, v10, p1, v6, v2}, Landroid/view/IWindow;->dispatchSystemUiVisibilityChanged(IIII)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@4b
    .line 10322
    .end local v1    # "curValue":I
    .end local v2    # "diff":I
    .end local v6    # "newValue":I
    :cond_3
    :goto_1
    add-int/lit8 v5, v5, 0x1

    #@4d
    goto :goto_0

    #@4e
    .line 10340
    .end local v8    # "ws":Lcom/android/server/wm/WindowState;
    :cond_4
    const/4 v9, 0x1

    #@4f
    return v9

    #@50
    .line 10336
    .restart local v8    # "ws":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v3

    #@51
    .local v3, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method updateTokenInPlaceLocked(Lcom/android/server/wm/AppWindowToken;I)V
    .locals 6
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "transit"    # I

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 4572
    const/4 v0, -0x1

    #@2
    if-eq p2, v0, :cond_1

    #@4
    .line 4573
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6
    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@8
    sget-object v1, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    #@a
    if-ne v0, v1, :cond_0

    #@c
    .line 4574
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@e
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->setNullAnimation()V

    #@11
    .line 4576
    :cond_0
    const/4 v2, 0x0

    #@12
    move-object v0, p0

    #@13
    move-object v1, p1

    #@14
    move v3, p2

    #@15
    move v5, v4

    #@16
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    #@19
    .line 4571
    :cond_1
    return-void
.end method

.method public validateAppTokens(ILjava/util/List;)V
    .locals 19
    .param p1, "stackId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/wm/TaskGroup;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 3334
    .local p2, "tasks":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/wm/TaskGroup;>;"
    move-object/from16 v0, p0

    #@2
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    move-object/from16 v16, v0

    #@6
    monitor-enter v16

    #@7
    .line 3335
    :try_start_0
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    #@a
    move-result v15

    #@b
    add-int/lit8 v7, v15, -0x1

    #@d
    .line 3336
    .local v7, "t":I
    if-gez v7, :cond_0

    #@f
    .line 3337
    const-string/jumbo v15, "WindowManager"

    #@12
    const-string/jumbo v17, "validateAppTokens: empty task list"

    #@15
    move-object/from16 v0, v17

    #@17
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1a
    monitor-exit v16

    #@1b
    .line 3338
    return-void

    #@1c
    .line 3341
    :cond_0
    const/4 v15, 0x0

    #@1d
    :try_start_1
    move-object/from16 v0, p2

    #@1f
    invoke-interface {v0, v15}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@22
    move-result-object v9

    #@23
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    #@25
    .line 3342
    .local v9, "task":Lcom/android/server/wm/TaskGroup;
    iget v10, v9, Lcom/android/server/wm/TaskGroup;->taskId:I

    #@27
    .line 3343
    .local v10, "taskId":I
    move-object/from16 v0, p0

    #@29
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@2b
    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@2e
    move-result-object v8

    #@2f
    check-cast v8, Lcom/android/server/wm/Task;

    #@31
    .line 3344
    .local v8, "targetTask":Lcom/android/server/wm/Task;
    invoke-virtual {v8}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@34
    move-result-object v3

    #@35
    .line 3345
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_1

    #@37
    .line 3346
    const-string/jumbo v15, "WindowManager"

    #@3a
    new-instance v17, Ljava/lang/StringBuilder;

    #@3c
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@3f
    const-string/jumbo v18, "validateAppTokens: no Display for taskId="

    #@42
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@45
    move-result-object v17

    #@46
    move-object/from16 v0, v17

    #@48
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v17

    #@4c
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4f
    move-result-object v17

    #@50
    move-object/from16 v0, v17

    #@52
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@55
    monitor-exit v16

    #@56
    .line 3347
    return-void

    #@57
    .line 3350
    :cond_1
    :try_start_2
    move-object/from16 v0, p0

    #@59
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5b
    move/from16 v0, p1

    #@5d
    invoke-virtual {v15, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@60
    move-result-object v15

    #@61
    check-cast v15, Lcom/android/server/wm/TaskStack;

    #@63
    invoke-virtual {v15}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@66
    move-result-object v5

    #@67
    .line 3352
    .local v5, "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@6a
    move-result v15

    #@6b
    add-int/lit8 v11, v15, -0x1

    #@6d
    .local v11, "taskNdx":I
    :goto_0
    if-ltz v11, :cond_5

    #@6f
    if-ltz v7, :cond_5

    #@71
    .line 3353
    invoke-virtual {v5, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@74
    move-result-object v15

    #@75
    check-cast v15, Lcom/android/server/wm/Task;

    #@77
    iget-object v6, v15, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@79
    .line 3354
    .local v6, "localTokens":Lcom/android/server/wm/AppTokenList;
    move-object/from16 v0, p2

    #@7b
    invoke-interface {v0, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@7e
    move-result-object v9

    #@7f
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    #@81
    .line 3355
    .restart local v9    # "task":Lcom/android/server/wm/TaskGroup;
    iget-object v13, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    #@83
    .line 3357
    .local v13, "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    move-object v4, v3

    #@84
    .line 3358
    .local v4, "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    #@86
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@88
    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8b
    move-result-object v15

    #@8c
    check-cast v15, Lcom/android/server/wm/Task;

    #@8e
    invoke-virtual {v15}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@91
    move-result-object v3

    #@92
    .line 3359
    if-eq v3, v4, :cond_2

    #@94
    .line 3360
    const-string/jumbo v15, "WindowManager"

    #@97
    const-string/jumbo v17, "validateAppTokens: displayContent changed in TaskGroup list!"

    #@9a
    move-object/from16 v0, v17

    #@9c
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@9f
    monitor-exit v16

    #@a0
    .line 3361
    return-void

    #@a1
    .line 3366
    :cond_2
    :try_start_3
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    #@a4
    move-result v15

    #@a5
    add-int/lit8 v12, v15, -0x1

    #@a7
    .local v12, "tokenNdx":I
    iget-object v15, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    #@a9
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    #@ac
    move-result v15

    #@ad
    add-int/lit8 v14, v15, -0x1

    #@af
    .line 3367
    .local v14, "v":I
    :goto_1
    if-ltz v12, :cond_4

    #@b1
    if-ltz v14, :cond_4

    #@b3
    .line 3368
    invoke-virtual {v6, v12}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@b6
    move-result-object v2

    #@b7
    check-cast v2, Lcom/android/server/wm/AppWindowToken;

    #@b9
    .line 3369
    .local v2, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v15, v2, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@bb
    if-eqz v15, :cond_3

    #@bd
    .line 3370
    add-int/lit8 v12, v12, -0x1

    #@bf
    .line 3371
    goto :goto_1

    #@c0
    .line 3373
    :cond_3
    invoke-interface {v13, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@c3
    move-result-object v15

    #@c4
    iget-object v0, v2, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@c6
    move-object/from16 v17, v0

    #@c8
    move-object/from16 v0, v17

    #@ca
    if-eq v15, v0, :cond_8

    #@cc
    .line 3380
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_4
    if-gez v12, :cond_5

    #@ce
    if-ltz v14, :cond_9

    #@d0
    .line 3385
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :cond_5
    if-gez v11, :cond_6

    #@d2
    if-ltz v7, :cond_7

    #@d4
    .line 3386
    :cond_6
    const-string/jumbo v15, "WindowManager"

    #@d7
    new-instance v17, Ljava/lang/StringBuilder;

    #@d9
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@dc
    const-string/jumbo v18, "validateAppTokens: Mismatch! ActivityManager="

    #@df
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e2
    move-result-object v17

    #@e3
    move-object/from16 v0, v17

    #@e5
    move-object/from16 v1, p2

    #@e7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@ea
    move-result-object v17

    #@eb
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@ee
    move-result-object v17

    #@ef
    move-object/from16 v0, v17

    #@f1
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@f4
    .line 3387
    const-string/jumbo v15, "WindowManager"

    #@f7
    new-instance v17, Ljava/lang/StringBuilder;

    #@f9
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@fc
    const-string/jumbo v18, "validateAppTokens: Mismatch! WindowManager="

    #@ff
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@102
    move-result-object v17

    #@103
    move-object/from16 v0, v17

    #@105
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@108
    move-result-object v17

    #@109
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10c
    move-result-object v17

    #@10d
    move-object/from16 v0, v17

    #@10f
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@112
    .line 3388
    const-string/jumbo v15, "WindowManager"

    #@115
    new-instance v17, Ljava/lang/StringBuilder;

    #@117
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@11a
    const-string/jumbo v18, "validateAppTokens: Mismatch! Callers="

    #@11d
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@120
    move-result-object v17

    #@121
    const/16 v18, 0x4

    #@123
    invoke-static/range {v18 .. v18}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    #@126
    move-result-object v18

    #@127
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12a
    move-result-object v17

    #@12b
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@12e
    move-result-object v17

    #@12f
    move-object/from16 v0, v17

    #@131
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@134
    :cond_7
    monitor-exit v16

    #@135
    .line 3333
    return-void

    #@136
    .line 3376
    .restart local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .restart local v12    # "tokenNdx":I
    .restart local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .restart local v14    # "v":I
    :cond_8
    add-int/lit8 v12, v12, -0x1

    #@138
    .line 3377
    add-int/lit8 v14, v14, -0x1

    #@13a
    goto/16 :goto_1

    #@13c
    .line 3352
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_9
    add-int/lit8 v11, v11, -0x1

    #@13e
    add-int/lit8 v7, v7, -0x1

    #@140
    goto/16 :goto_0

    #@142
    .line 3334
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "t":I
    .end local v8    # "targetTask":Lcom/android/server/wm/Task;
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    .end local v10    # "taskId":I
    .end local v11    # "taskNdx":I
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :catchall_0
    move-exception v15

    #@143
    monitor-exit v16

    #@144
    throw v15
.end method

.method public validateStackOrder([Ljava/lang/Integer;)V
    .locals 0
    .param p1, "remoteStackIds"    # [Ljava/lang/Integer;

    #@0
    .prologue
    .line 3393
    return-void
.end method

.method viewServerGetFocusedWindow(Ljava/net/Socket;)Z
    .locals 9
    .param p1, "client"    # Ljava/net/Socket;

    #@0
    .prologue
    .line 7280
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v7

    #@4
    if-eqz v7, :cond_0

    #@6
    .line 7281
    const/4 v7, 0x0

    #@7
    return v7

    #@8
    .line 7284
    :cond_0
    const/4 v6, 0x1

    #@9
    .line 7286
    .local v6, "result":Z
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@c
    move-result-object v3

    #@d
    .line 7288
    .local v3, "focusedWindow":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    #@e
    .line 7292
    .local v4, "out":Ljava/io/BufferedWriter;
    :try_start_0
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@11
    move-result-object v0

    #@12
    .line 7293
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v5, Ljava/io/BufferedWriter;

    #@14
    new-instance v7, Ljava/io/OutputStreamWriter;

    #@16
    invoke-direct {v7, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@19
    const/16 v8, 0x2000

    #@1b
    invoke-direct {v5, v7, v8}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    .line 7295
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .local v5, "out":Ljava/io/BufferedWriter;
    if-eqz v3, :cond_1

    #@20
    .line 7296
    :try_start_1
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@23
    move-result v7

    #@24
    invoke-static {v7}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@27
    move-result-object v7

    #@28
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@2b
    .line 7297
    const/16 v7, 0x20

    #@2d
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(I)V

    #@30
    .line 7298
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@32
    invoke-virtual {v7}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@35
    move-result-object v7

    #@36
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    #@39
    .line 7300
    :cond_1
    const/16 v7, 0xa

    #@3b
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(I)V

    #@3e
    .line 7301
    invoke-virtual {v5}, Ljava/io/BufferedWriter;->flush()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@41
    .line 7305
    if-eqz v5, :cond_2

    #@43
    .line 7307
    :try_start_2
    invoke-virtual {v5}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    #@46
    :cond_2
    :goto_0
    move-object v4, v5

    #@47
    .line 7314
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v5    # "out":Ljava/io/BufferedWriter;
    :cond_3
    :goto_1
    return v6

    #@48
    .line 7308
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catch_0
    move-exception v1

    #@49
    .line 7309
    .local v1, "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@4a
    goto :goto_0

    #@4b
    .line 7302
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "e":Ljava/io/IOException;
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v2

    #@4c
    .line 7303
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .local v2, "e":Ljava/lang/Exception;
    :goto_2
    const/4 v6, 0x0

    #@4d
    .line 7305
    if-eqz v4, :cond_3

    #@4f
    .line 7307
    :try_start_3
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2

    #@52
    goto :goto_1

    #@53
    .line 7308
    :catch_2
    move-exception v1

    #@54
    .line 7309
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@55
    goto :goto_1

    #@56
    .line 7304
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "e":Ljava/lang/Exception;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catchall_0
    move-exception v7

    #@57
    .line 7305
    .end local v4    # "out":Ljava/io/BufferedWriter;
    :goto_3
    if-eqz v4, :cond_4

    #@59
    .line 7307
    :try_start_4
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_3

    #@5c
    .line 7304
    :cond_4
    :goto_4
    throw v7

    #@5d
    .line 7308
    :catch_3
    move-exception v1

    #@5e
    .line 7309
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@5f
    goto :goto_4

    #@60
    .line 7304
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catchall_1
    move-exception v7

    #@61
    move-object v4, v5

    #@62
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .local v4, "out":Ljava/io/BufferedWriter;
    goto :goto_3

    #@63
    .line 7302
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v2

    #@64
    .restart local v2    # "e":Ljava/lang/Exception;
    move-object v4, v5

    #@65
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    goto :goto_2
.end method

.method viewServerListWindows(Ljava/net/Socket;)Z
    .locals 15
    .param p1, "client"    # Ljava/net/Socket;

    #@0
    .prologue
    .line 7222
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v13

    #@4
    if-eqz v13, :cond_0

    #@6
    .line 7223
    const/4 v13, 0x0

    #@7
    return v13

    #@8
    .line 7226
    :cond_0
    const/4 v10, 0x1

    #@9
    .line 7228
    .local v10, "result":Z
    new-instance v12, Lcom/android/server/wm/WindowList;

    #@b
    invoke-direct {v12}, Lcom/android/server/wm/WindowList;-><init>()V

    #@e
    .line 7229
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    iget-object v14, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@10
    monitor-enter v14

    #@11
    .line 7231
    :try_start_0
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@13
    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    #@16
    move-result v7

    #@17
    .line 7232
    .local v7, "numDisplays":I
    const/4 v3, 0x0

    #@18
    .local v3, "displayNdx":I
    :goto_0
    if-ge v3, v7, :cond_1

    #@1a
    .line 7233
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1c
    invoke-virtual {v13, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@1f
    move-result-object v2

    #@20
    check-cast v2, Lcom/android/server/wm/DisplayContent;

    #@22
    .line 7234
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@25
    move-result-object v13

    #@26
    invoke-virtual {v12, v13}, Lcom/android/server/wm/WindowList;->addAll(Ljava/util/Collection;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@29
    .line 7232
    add-int/lit8 v3, v3, 0x1

    #@2b
    goto :goto_0

    #@2c
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    monitor-exit v14

    #@2d
    .line 7238
    const/4 v8, 0x0

    #@2e
    .line 7242
    .local v8, "out":Ljava/io/BufferedWriter;
    :try_start_1
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@31
    move-result-object v0

    #@32
    .line 7243
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v9, Ljava/io/BufferedWriter;

    #@34
    new-instance v13, Ljava/io/OutputStreamWriter;

    #@36
    invoke-direct {v13, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@39
    const/16 v14, 0x2000

    #@3b
    invoke-direct {v9, v13, v14}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@3e
    .line 7245
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    :try_start_2
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    #@41
    move-result v1

    #@42
    .line 7246
    .local v1, "count":I
    const/4 v6, 0x0

    #@43
    .local v6, "i":I
    :goto_1
    if-ge v6, v1, :cond_2

    #@45
    .line 7247
    invoke-virtual {v12, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@48
    move-result-object v11

    #@49
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@4b
    .line 7248
    .local v11, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v11}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@4e
    move-result v13

    #@4f
    invoke-static {v13}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@52
    move-result-object v13

    #@53
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@56
    .line 7249
    const/16 v13, 0x20

    #@58
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(I)V

    #@5b
    .line 7250
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5d
    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@60
    move-result-object v13

    #@61
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    #@64
    .line 7251
    const/16 v13, 0xa

    #@66
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(I)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_4
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@69
    .line 7246
    add-int/lit8 v6, v6, 0x1

    #@6b
    goto :goto_1

    #@6c
    .line 7229
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v3    # "displayNdx":I
    .end local v6    # "i":I
    .end local v7    # "numDisplays":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .end local v11    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v13

    #@6d
    monitor-exit v14

    #@6e
    throw v13

    #@6f
    .line 7254
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v3    # "displayNdx":I
    .restart local v6    # "i":I
    .restart local v7    # "numDisplays":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :cond_2
    :try_start_3
    const-string/jumbo v13, "DONE.\n"

    #@72
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@75
    .line 7255
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->flush()V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_4
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    #@78
    .line 7259
    if-eqz v9, :cond_3

    #@7a
    .line 7261
    :try_start_4
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    #@7d
    :cond_3
    :goto_2
    move-object v8, v9

    #@7e
    .line 7268
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v6    # "i":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    :cond_4
    :goto_3
    return v10

    #@7f
    .line 7262
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v6    # "i":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_0
    move-exception v4

    #@80
    .line 7263
    .local v4, "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@81
    goto :goto_2

    #@82
    .line 7256
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v4    # "e":Ljava/io/IOException;
    .end local v6    # "i":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v5

    #@83
    .line 7257
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v5, "e":Ljava/lang/Exception;
    :goto_4
    const/4 v10, 0x0

    #@84
    .line 7259
    if-eqz v8, :cond_4

    #@86
    .line 7261
    :try_start_5
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2

    #@89
    goto :goto_3

    #@8a
    .line 7262
    :catch_2
    move-exception v4

    #@8b
    .line 7263
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@8c
    goto :goto_3

    #@8d
    .line 7258
    .end local v4    # "e":Ljava/io/IOException;
    .end local v5    # "e":Ljava/lang/Exception;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catchall_1
    move-exception v13

    #@8e
    .line 7259
    .end local v8    # "out":Ljava/io/BufferedWriter;
    :goto_5
    if-eqz v8, :cond_5

    #@90
    .line 7261
    :try_start_6
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_3

    #@93
    .line 7258
    :cond_5
    :goto_6
    throw v13

    #@94
    .line 7262
    :catch_3
    move-exception v4

    #@95
    .line 7263
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@96
    goto :goto_6

    #@97
    .line 7258
    .end local v4    # "e":Ljava/io/IOException;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catchall_2
    move-exception v13

    #@98
    move-object v8, v9

    #@99
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v8, "out":Ljava/io/BufferedWriter;
    goto :goto_5

    #@9a
    .line 7256
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v5

    #@9b
    .restart local v5    # "e":Ljava/lang/Exception;
    move-object v8, v9

    #@9c
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    goto :goto_4
.end method

.method viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 17
    .param p1, "client"    # Ljava/net/Socket;
    .param p2, "command"    # Ljava/lang/String;
    .param p3, "parameters"    # Ljava/lang/String;

    #@0
    .prologue
    .line 7338
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v14

    #@4
    if-eqz v14, :cond_0

    #@6
    .line 7339
    const/4 v14, 0x0

    #@7
    return v14

    #@8
    .line 7342
    :cond_0
    const/4 v12, 0x1

    #@9
    .line 7343
    .local v12, "success":Z
    const/4 v4, 0x0

    #@a
    .line 7344
    .local v4, "data":Landroid/os/Parcel;
    const/4 v11, 0x0

    #@b
    .line 7346
    .local v11, "reply":Landroid/os/Parcel;
    const/4 v9, 0x0

    #@c
    .line 7351
    .local v9, "out":Ljava/io/BufferedWriter;
    const/16 v14, 0x20

    #@e
    :try_start_0
    move-object/from16 v0, p3

    #@10
    invoke-virtual {v0, v14}, Ljava/lang/String;->indexOf(I)I

    #@13
    move-result v8

    #@14
    .line 7352
    .local v8, "index":I
    const/4 v14, -0x1

    #@15
    if-ne v8, v14, :cond_1

    #@17
    .line 7353
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    #@1a
    move-result v8

    #@1b
    .line 7355
    :cond_1
    const/4 v14, 0x0

    #@1c
    move-object/from16 v0, p3

    #@1e
    invoke-virtual {v0, v14, v8}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@21
    move-result-object v3

    #@22
    .line 7356
    .local v3, "code":Ljava/lang/String;
    const/16 v14, 0x10

    #@24
    invoke-static {v3, v14}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    #@27
    move-result-wide v14

    #@28
    long-to-int v7, v14

    #@29
    .line 7359
    .local v7, "hashCode":I
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    #@2c
    move-result v14

    #@2d
    if-ge v8, v14, :cond_2

    #@2f
    .line 7360
    add-int/lit8 v14, v8, 0x1

    #@31
    move-object/from16 v0, p3

    #@33
    invoke-virtual {v0, v14}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@36
    move-result-object p3

    #@37
    .line 7365
    :goto_0
    move-object/from16 v0, p0

    #@39
    invoke-direct {v0, v7}, Lcom/android/server/wm/WindowManagerService;->findWindow(I)Lcom/android/server/wm/WindowState;

    #@3c
    move-result-object v13

    #@3d
    .line 7366
    .local v13, "window":Lcom/android/server/wm/WindowState;
    if-nez v13, :cond_3

    #@3f
    .line 7367
    const/4 v14, 0x0

    #@40
    return v14

    #@41
    .line 7362
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_2
    const-string/jumbo p3, ""

    #@44
    goto :goto_0

    #@45
    .line 7370
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@48
    move-result-object v4

    #@49
    .line 7371
    .local v4, "data":Landroid/os/Parcel;
    const-string/jumbo v14, "android.view.IWindow"

    #@4c
    invoke-virtual {v4, v14}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    #@4f
    .line 7372
    move-object/from16 v0, p2

    #@51
    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@54
    .line 7373
    move-object/from16 v0, p3

    #@56
    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@59
    .line 7374
    const/4 v14, 0x1

    #@5a
    invoke-virtual {v4, v14}, Landroid/os/Parcel;->writeInt(I)V

    #@5d
    .line 7375
    invoke-static/range {p1 .. p1}, Landroid/os/ParcelFileDescriptor;->fromSocket(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;

    #@60
    move-result-object v14

    #@61
    const/4 v15, 0x0

    #@62
    invoke-virtual {v14, v4, v15}, Landroid/os/ParcelFileDescriptor;->writeToParcel(Landroid/os/Parcel;I)V

    #@65
    .line 7377
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@68
    move-result-object v11

    #@69
    .line 7379
    .local v11, "reply":Landroid/os/Parcel;
    iget-object v14, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@6b
    invoke-interface {v14}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@6e
    move-result-object v2

    #@6f
    .line 7381
    .local v2, "binder":Landroid/os/IBinder;
    const/4 v14, 0x1

    #@70
    const/4 v15, 0x0

    #@71
    invoke-interface {v2, v14, v4, v11, v15}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    #@74
    .line 7383
    invoke-virtual {v11}, Landroid/os/Parcel;->readException()V

    #@77
    .line 7385
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->isOutputShutdown()Z

    #@7a
    move-result v14

    #@7b
    if-nez v14, :cond_4

    #@7d
    .line 7386
    new-instance v10, Ljava/io/BufferedWriter;

    #@7f
    new-instance v14, Ljava/io/OutputStreamWriter;

    #@81
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@84
    move-result-object v15

    #@85
    invoke-direct {v14, v15}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@88
    invoke-direct {v10, v14}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8b
    .line 7387
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v10, "out":Ljava/io/BufferedWriter;
    :try_start_1
    const-string/jumbo v14, "DONE\n"

    #@8e
    invoke-virtual {v10, v14}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@91
    .line 7388
    invoke-virtual {v10}, Ljava/io/BufferedWriter;->flush()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@94
    move-object v9, v10

    #@95
    .line 7395
    .end local v10    # "out":Ljava/io/BufferedWriter;
    :cond_4
    if-eqz v4, :cond_5

    #@97
    .line 7396
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@9a
    .line 7398
    :cond_5
    if-eqz v11, :cond_6

    #@9c
    .line 7399
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@9f
    .line 7401
    :cond_6
    if-eqz v9, :cond_7

    #@a1
    .line 7403
    :try_start_2
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    #@a4
    .line 7410
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v4    # "data":Landroid/os/Parcel;
    .end local v7    # "hashCode":I
    .end local v8    # "index":I
    .end local v11    # "reply":Landroid/os/Parcel;
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_7
    :goto_1
    return v12

    #@a5
    .line 7404
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v4    # "data":Landroid/os/Parcel;
    .restart local v7    # "hashCode":I
    .restart local v8    # "index":I
    .restart local v11    # "reply":Landroid/os/Parcel;
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v5

    #@a6
    .local v5, "e":Ljava/io/IOException;
    goto :goto_1

    #@a7
    .line 7391
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v4    # "data":Landroid/os/Parcel;
    .end local v5    # "e":Ljava/io/IOException;
    .end local v7    # "hashCode":I
    .end local v8    # "index":I
    .end local v11    # "reply":Landroid/os/Parcel;
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v6

    #@a8
    .line 7392
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v6, "e":Ljava/lang/Exception;
    :goto_2
    :try_start_3
    const-string/jumbo v14, "WindowManager"

    #@ab
    new-instance v15, Ljava/lang/StringBuilder;

    #@ad
    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    #@b0
    const-string/jumbo v16, "Could not send command "

    #@b3
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b6
    move-result-object v15

    #@b7
    move-object/from16 v0, p2

    #@b9
    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bc
    move-result-object v15

    #@bd
    const-string/jumbo v16, " with parameters "

    #@c0
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c3
    move-result-object v15

    #@c4
    move-object/from16 v0, p3

    #@c6
    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c9
    move-result-object v15

    #@ca
    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@cd
    move-result-object v15

    #@ce
    invoke-static {v14, v15, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@d1
    .line 7393
    const/4 v12, 0x0

    #@d2
    .line 7395
    if-eqz v4, :cond_8

    #@d4
    .line 7396
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@d7
    .line 7398
    :cond_8
    if-eqz v11, :cond_9

    #@d9
    .line 7399
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@dc
    .line 7401
    :cond_9
    if-eqz v9, :cond_7

    #@de
    .line 7403
    :try_start_4
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    #@e1
    goto :goto_1

    #@e2
    .line 7404
    :catch_2
    move-exception v5

    #@e3
    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_1

    #@e4
    .line 7394
    .end local v5    # "e":Ljava/io/IOException;
    .end local v6    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v14

    #@e5
    .line 7395
    :goto_3
    if-eqz v4, :cond_a

    #@e7
    .line 7396
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@ea
    .line 7398
    :cond_a
    if-eqz v11, :cond_b

    #@ec
    .line 7399
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@ef
    .line 7401
    :cond_b
    if-eqz v9, :cond_c

    #@f1
    .line 7403
    :try_start_5
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    #@f4
    .line 7394
    :cond_c
    :goto_4
    throw v14

    #@f5
    .line 7404
    :catch_3
    move-exception v5

    #@f6
    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_4

    #@f7
    .line 7394
    .end local v5    # "e":Ljava/io/IOException;
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v4    # "data":Landroid/os/Parcel;
    .restart local v7    # "hashCode":I
    .restart local v8    # "index":I
    .restart local v10    # "out":Ljava/io/BufferedWriter;
    .restart local v11    # "reply":Landroid/os/Parcel;
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :catchall_1
    move-exception v14

    #@f8
    move-object v9, v10

    #@f9
    .end local v10    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    goto :goto_3

    #@fa
    .line 7391
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v10    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v6

    #@fb
    .restart local v6    # "e":Ljava/lang/Exception;
    move-object v9, v10

    #@fc
    .end local v10    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    goto :goto_2
.end method

.method public watchRotation(Landroid/view/IRotationWatcher;)I
    .locals 6
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    #@0
    .prologue
    .line 7016
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v2

    #@4
    .line 7017
    .local v2, "watcherBinder":Landroid/os/IBinder;
    new-instance v0, Lcom/android/server/wm/WindowManagerService$9;

    #@6
    invoke-direct {v0, p0, v2}, Lcom/android/server/wm/WindowManagerService$9;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V

    #@9
    .line 7035
    .local v0, "dr":Landroid/os/IBinder$DeathRecipient;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@b
    monitor-enter v4

    #@c
    .line 7037
    :try_start_0
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@f
    move-result-object v3

    #@10
    const/4 v5, 0x0

    #@11
    invoke-interface {v3, v0, v5}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    #@14
    .line 7038
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@16
    new-instance v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@18
    invoke-direct {v5, p0, p1, v0}, Lcom/android/server/wm/WindowManagerService$RotationWatcher;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRotationWatcher;Landroid/os/IBinder$DeathRecipient;)V

    #@1b
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    .line 7043
    :goto_0
    :try_start_1
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@20
    monitor-exit v4

    #@21
    return v3

    #@22
    .line 7035
    :catchall_0
    move-exception v3

    #@23
    monitor-exit v4

    #@24
    throw v3

    #@25
    .line 7039
    :catch_0
    move-exception v1

    #@26
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/os/IBinder;
    .param p3, "throwOnError"    # Z

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 9411
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    invoke-virtual {v2, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@6
    move-result-object v1

    #@7
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@9
    .line 9414
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_1

    #@b
    .line 9415
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@d
    .line 9416
    new-instance v2, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v3, "Requested window "

    #@15
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v2

    #@19
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v2

    #@1d
    const-string/jumbo v3, " does not exist"

    #@20
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v2

    #@24
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@27
    move-result-object v2

    #@28
    .line 9415
    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2b
    .line 9417
    .local v0, "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_0

    #@2d
    .line 9418
    throw v0

    #@2e
    .line 9420
    :cond_0
    const-string/jumbo v2, "WindowManager"

    #@31
    const-string/jumbo v3, "Failed looking up window"

    #@34
    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@37
    .line 9421
    return-object v4

    #@38
    .line 9423
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    :cond_1
    if-eqz p1, :cond_3

    #@3a
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@3c
    if-eq v2, p1, :cond_3

    #@3e
    .line 9424
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@40
    .line 9425
    new-instance v2, Ljava/lang/StringBuilder;

    #@42
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@45
    const-string/jumbo v3, "Requested window "

    #@48
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v2

    #@4c
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4f
    move-result-object v2

    #@50
    const-string/jumbo v3, " is in session "

    #@53
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@56
    move-result-object v2

    #@57
    .line 9426
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@59
    .line 9425
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5c
    move-result-object v2

    #@5d
    .line 9426
    const-string/jumbo v3, ", not "

    #@60
    .line 9425
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@63
    move-result-object v2

    #@64
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v2

    #@68
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6b
    move-result-object v2

    #@6c
    .line 9424
    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@6f
    .line 9427
    .restart local v0    # "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_2

    #@71
    .line 9428
    throw v0

    #@72
    .line 9430
    :cond_2
    const-string/jumbo v2, "WindowManager"

    #@75
    const-string/jumbo v3, "Failed looking up window"

    #@78
    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@7b
    .line 9431
    return-object v4

    #@7c
    .line 9434
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    :cond_3
    return-object v1
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    .locals 1
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "throwOnError"    # Z

    #@0
    .prologue
    .line 9406
    invoke-interface {p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {p0, p1, v0, p3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method
