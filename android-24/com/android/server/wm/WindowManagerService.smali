.class public Lcom/android/server/wm/WindowManagerService;
.super Landroid/view/IWindowManager$Stub;
.source "WindowManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Landroid/view/WindowManagerPolicy$WindowManagerFuncs;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wm/WindowManagerService$1;,
        Lcom/android/server/wm/WindowManagerService$2;,
        Lcom/android/server/wm/WindowManagerService$DragInputEventReceiver;,
        Lcom/android/server/wm/WindowManagerService$H;,
        Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;,
        Lcom/android/server/wm/WindowManagerService$LocalService;,
        Lcom/android/server/wm/WindowManagerService$MousePositionTracker;,
        Lcom/android/server/wm/WindowManagerService$RotationWatcher;,
        Lcom/android/server/wm/WindowManagerService$SettingsObserver;,
        Lcom/android/server/wm/WindowManagerService$UpdateAnimationScaleMode;,
        Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    }
.end annotation


# static fields
.field private static final ALWAYS_KEEP_CURRENT:Z = true

.field private static final ANIMATION_DURATION_SCALE:I = 0x2

.field private static final BOOT_ANIMATION_POLL_INTERVAL:I = 0xc8

.field private static final BOOT_ANIMATION_SERVICE:Ljava/lang/String; = "bootanim"

.field static final CUSTOM_SCREEN_ROTATION:Z = true

.field static final DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS:J = 0x12a05f200L

.field private static final DENSITY_OVERRIDE:Ljava/lang/String; = "ro.config.density_override"

.field private static final DRAG_SHADOW_ALPHA_TRANSPARENT:F = 0.7071f

.field private static final INPUT_DEVICES_READY_FOR_SAFE_MODE_DETECTION_TIMEOUT_MILLIS:I = 0x3e8

.field static final LAST_ANR_LIFETIME_DURATION_MSECS:I = 0x6ddd00

.field static final LAYER_OFFSET_DIM:I = 0x1

.field static final LAYER_OFFSET_THUMBNAIL:I = 0x4

.field static final LAYOUT_REPEAT_THRESHOLD:I = 0x4

.field static final MAX_ANIMATION_DURATION:I = 0x2710

.field private static final MAX_SCREENSHOT_RETRIES:I = 0x3

.field static final PROFILE_ORIENTATION:Z = false

.field private static final PROPERTY_BUILD_DATE_UTC:Ljava/lang/String; = "ro.build.date.utc"

.field private static final PROPERTY_EMULATOR_CIRCULAR:Ljava/lang/String; = "ro.emulator.circular"

.field private static final SIZE_OVERRIDE:Ljava/lang/String; = "ro.config.size_override"

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSTEM_SECURE:Ljava/lang/String; = "ro.secure"

.field private static final TAG:Ljava/lang/String;

.field private static final TRANSITION_ANIMATION_SCALE:I = 0x1

.field static final TYPE_LAYER_MULTIPLIER:I = 0x2710

.field static final TYPE_LAYER_OFFSET:I = 0x3e8

.field static final UPDATE_FOCUS_NORMAL:I = 0x0

.field static final UPDATE_FOCUS_PLACING_SURFACES:I = 0x2

.field static final UPDATE_FOCUS_WILL_ASSIGN_LAYERS:I = 0x1

.field static final UPDATE_FOCUS_WILL_PLACE_SURFACES:I = 0x3

.field static final WINDOWS_FREEZING_SCREENS_ACTIVE:I = 0x1

.field static final WINDOWS_FREEZING_SCREENS_NONE:I = 0x0

.field static final WINDOWS_FREEZING_SCREENS_TIMEOUT:I = 0x2

.field private static final WINDOW_ANIMATION_SCALE:I = 0x0

.field static final WINDOW_FREEZE_TIMEOUT_DURATION:I = 0x7d0

.field static final WINDOW_LAYER_MULTIPLIER:I = 0x5

.field static final WINDOW_REPLACEMENT_TIMEOUT_DURATION:I = 0x7d0

.field static final localLOGV:Z


# instance fields
.field mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

.field final mActivityManager:Landroid/app/IActivityManager;

.field private final mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

.field final mAllowAnimationsInLowPowerMode:Z

.field final mAllowBootMessages:Z

.field mAllowTheaterModeWakeFromLayout:Z

.field mAltOrientation:Z

.field final mAmInternal:Landroid/app/ActivityManagerInternal;

.field mAnimateWallpaperWithTarget:Z

.field mAnimationScheduled:Z

.field mAnimationsDisabled:Z

.field final mAnimator:Lcom/android/server/wm/WindowAnimator;

.field mAnimatorDurationScaleSetting:F

.field final mAppOps:Landroid/app/AppOpsManager;

.field final mAppTransition:Lcom/android/server/wm/AppTransition;

.field mAppsFreezingScreen:I

.field mBootAnimationStopped:Z

.field private final mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

.field final mBroadcastReceiver:Landroid/content/BroadcastReceiver;

.field private final mChangedStackList:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field final mChoreographer:Landroid/view/Choreographer;

.field mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

.field mClientFreezingScreen:Z

.field final mClosingApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

.field mCompatibleScreenScale:F

.field final mContext:Landroid/content/Context;

.field mCurConfiguration:Landroid/content/res/Configuration;

.field mCurrentFocus:Lcom/android/server/wm/WindowState;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field mDeferredRotationPauseCount:I

.field final mDestroyPreservedSurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mDestroySurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayContents:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/DisplayContent;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayEnabled:Z

.field mDisplayFreezeTime:J

.field mDisplayFrozen:Z

.field final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field final mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

.field final mDisplayMetrics:Landroid/util/DisplayMetrics;

.field mDisplayReady:Z

.field final mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

.field final mDisplays:[Landroid/view/Display;

.field mDockedStackCreateBounds:Landroid/graphics/Rect;

.field mDockedStackCreateMode:I

.field mDragState:Lcom/android/server/wm/DragState;

.field final mDrawLockTimeoutMillis:J

.field mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

.field mEnterAnimId:I

.field private mEventDispatchingEnabled:Z

.field mExitAnimId:I

.field final mFinishedEarlyAnim:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mFinishedStarting:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mFocusMayChange:Z

.field mFocusedApp:Lcom/android/server/wm/AppWindowToken;

.field mForceDisplayEnabled:Z

.field final mForceRemoves:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mForceResizableTasks:Z

.field mForcedAppOrientation:I

.field final mFxSession:Landroid/view/SurfaceSession;

.field final mH:Lcom/android/server/wm/WindowManagerService$H;

.field mHardKeyboardAvailable:Z

.field mHardKeyboardStatusChangeListener:Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

.field final mHasPermanentDpad:Z

.field final mHaveInputMethods:Z

.field mHoldingScreenOn:Lcom/android/server/wm/Session;

.field mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field mInTouchMode:Z

.field mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

.field final mInputManager:Lcom/android/server/input/InputManagerService;

.field final mInputMethodDialogs:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mInputMethodManager:Lcom/android/internal/view/IInputMethodManager;

.field mInputMethodTarget:Lcom/android/server/wm/WindowState;

.field mInputMethodTargetWaitingAnim:Z

.field mInputMethodWindow:Lcom/android/server/wm/WindowState;

.field final mInputMonitor:Lcom/android/server/wm/InputMonitor;

.field mIsTouchDevice:Z

.field private final mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

.field private mKeyguardWaitingForActivityDrawn:Z

.field mLastANRState:Ljava/lang/String;

.field mLastDispatchedSystemUiVisibility:I

.field mLastDisplayFreezeDuration:I

.field mLastFinishedFreezeSource:Ljava/lang/Object;

.field mLastFocus:Lcom/android/server/wm/WindowState;

.field mLastKeyguardForcedOrientation:I

.field mLastStatusBarVisibility:I

.field mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

.field mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

.field mLastWindowForcedOrientation:I

.field final mLayersController:Lcom/android/server/wm/WindowLayersController;

.field mLayoutSeq:I

.field final mLimitedAlphaCompositing:Z

.field mLosingFocus:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field private mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

.field final mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mOnlyCore:Z

.field final mOpeningApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingRemove:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

.field private final mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

.field final mPolicy:Landroid/view/WindowManagerPolicy;

.field mPowerManager:Landroid/os/PowerManager;

.field mPowerManagerInternal:Landroid/os/PowerManagerInternal;

.field final mRealDisplayMetrics:Landroid/util/DisplayMetrics;

.field mRebuildTmp:[Lcom/android/server/wm/WindowState;

.field private final mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

.field final mReplacingWindowTimeouts:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mResizingWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRotation:I

.field mRotationWatchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$RotationWatcher;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field mScreenCaptureDisabled:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field private final mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

.field final mScreenRect:Landroid/graphics/Rect;

.field final mSessions:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/Session;",
            ">;"
        }
    .end annotation
.end field

.field mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

.field mShowingBootMessages:Z

.field mSkipAppTransitionAnimation:Z

.field mStackIdToStack:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/TaskStack;",
            ">;"
        }
    .end annotation
.end field

.field mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

.field mSystemBooted:Z

.field mSystemDecorLayer:I

.field mTaskIdToTask:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/Task;",
            ">;"
        }
    .end annotation
.end field

.field mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

.field final mTempConfiguration:Landroid/content/res/Configuration;

.field private mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

.field final mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

.field final mTmpFloats:[F

.field final mTmpRect:Landroid/graphics/Rect;

.field final mTmpRect2:Landroid/graphics/Rect;

.field final mTmpRect3:Landroid/graphics/Rect;

.field private final mTmpTaskIds:Landroid/util/SparseIntArray;

.field final mTmpWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mTokenMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mTransactionSequence:I

.field mTransitionAnimationScaleSetting:F

.field mTurnOnScreen:Z

.field private mViewServer:Lcom/android/server/wm/ViewServer;

.field mWaitingForConfig:Z

.field mWaitingForDrawn:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mWaitingForDrawnCallback:Ljava/lang/Runnable;

.field mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

.field mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

.field mWatermark:Lcom/android/server/wm/Watermark;

.field mWindowAnimationScaleSetting:F

.field final mWindowChangeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WindowChangeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

.field mWindowsChanged:Z

.field mWindowsFreezingScreen:I


# direct methods
.method static synthetic -get0(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/BoundsAnimationController;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

    #@2
    return-object v0
.end method

.method static synthetic -get1(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/KeyguardDisableHandler;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@2
    return-object v0
.end method

.method static synthetic -wrap0(Lcom/android/server/wm/WindowManagerService;)Z
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    #@3
    move-result v0

    #@4
    return v0
.end method

.method static synthetic -wrap1(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/WindowState;
    .locals 1

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@3
    move-result-object v0

    #@4
    return-object v0
.end method

.method static synthetic -wrap10(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateCircularDisplayMaskIfNeeded()V

    #@3
    return-void
.end method

.method static synthetic -wrap2(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->finishPositioning()V

    #@3
    return-void
.end method

.method static synthetic -wrap3(Lcom/android/server/wm/WindowManagerService;I)V
    .locals 0
    .param p1, "displayId"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayChangedLocked(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap4(Lcom/android/server/wm/WindowManagerService;I)V
    .locals 0
    .param p1, "displayId"    # I

    #@0
    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayRemovedLocked(I)V

    #@3
    return-void
.end method

.method static synthetic -wrap5(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;II)V
    .locals 0
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "x"    # I
    .param p3, "y"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->handleTapOutsideTask(Lcom/android/server/wm/DisplayContent;II)V

    #@3
    return-void
.end method

.method static synthetic -wrap6(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyFocusChanged()V

    #@3
    return-void
.end method

.method static synthetic -wrap7(Lcom/android/server/wm/WindowManagerService;)V
    .locals 0

    #@0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyWindowsChanged()V

    #@3
    return-void
.end method

.method static synthetic -wrap8(Lcom/android/server/wm/WindowManagerService;II)V
    .locals 0
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showStrictModeViolation(II)V

    #@3
    return-void
.end method

.method static synthetic -wrap9(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;II)V
    .locals 0
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "startX"    # I
    .param p3, "startY"    # I

    #@0
    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->startScrollingTask(Lcom/android/server/wm/DisplayContent;II)V

    #@3
    return-void
.end method

.method static constructor <clinit>()V
    .locals 1

    #@0
    .prologue
    .line 253
    const-string/jumbo v0, "WindowManager"

    #@3
    sput-object v0, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@5
    .line 251
    return-void
.end method

.method private constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V
    .locals 6
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    #@0
    .prologue
    .line 936
    invoke-direct {p0}, Landroid/view/IWindowManager$Stub;-><init>()V

    #@3
    .line 351
    new-instance v3, Lcom/android/server/wm/WindowManagerService$1;

    #@5
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$1;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@8
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    #@a
    .line 372
    const/4 v3, 0x0

    #@b
    new-array v3, v3, [I

    #@d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@f
    .line 386
    new-instance v3, Lcom/android/server/policy/PhoneWindowManager;

    #@11
    invoke-direct {v3}, Lcom/android/server/policy/PhoneWindowManager;-><init>()V

    #@14
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@16
    .line 398
    new-instance v3, Landroid/util/ArraySet;

    #@18
    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    #@1b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@1d
    .line 405
    new-instance v3, Ljava/util/HashMap;

    #@1f
    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    #@22
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@24
    .line 410
    new-instance v3, Ljava/util/HashMap;

    #@26
    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    #@29
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@2b
    .line 416
    new-instance v3, Ljava/util/ArrayList;

    #@2d
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@30
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@32
    .line 423
    new-instance v3, Ljava/util/ArrayList;

    #@34
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@37
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    #@39
    .line 429
    new-instance v3, Ljava/util/ArrayList;

    #@3b
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@3e
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    #@40
    .line 447
    new-instance v3, Ljava/util/ArrayList;

    #@42
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@45
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@47
    .line 452
    new-instance v3, Ljava/util/ArrayList;

    #@49
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@4c
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@4e
    .line 457
    const/16 v3, 0x14

    #@50
    new-array v3, v3, [Lcom/android/server/wm/WindowState;

    #@52
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    #@54
    .line 462
    new-instance v3, Ljava/util/ArrayList;

    #@56
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@59
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@5b
    .line 469
    new-instance v3, Ljava/util/ArrayList;

    #@5d
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@60
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    #@62
    .line 475
    new-instance v3, Ljava/util/ArrayList;

    #@64
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@67
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@69
    .line 481
    new-instance v3, Ljava/util/ArrayList;

    #@6b
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@6e
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@70
    .line 486
    new-instance v3, Ljava/util/ArrayList;

    #@72
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@75
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@77
    .line 496
    const/16 v3, 0x14

    #@79
    new-array v3, v3, [Lcom/android/server/wm/WindowState;

    #@7b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@7d
    .line 503
    new-instance v3, Landroid/util/SparseArray;

    #@7f
    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    #@82
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@84
    .line 515
    const/16 v3, 0x9

    #@86
    new-array v3, v3, [F

    #@88
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    #@8a
    .line 516
    new-instance v3, Landroid/graphics/Rect;

    #@8c
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@8f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@91
    .line 517
    new-instance v3, Landroid/graphics/Rect;

    #@93
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@96
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@98
    .line 518
    new-instance v3, Landroid/graphics/Rect;

    #@9a
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@9d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    #@9f
    .line 522
    const/4 v3, 0x0

    #@a0
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@a2
    .line 523
    const/4 v3, 0x0

    #@a3
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@a5
    .line 524
    const/4 v3, 0x0

    #@a6
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@a8
    .line 525
    const/4 v3, 0x0

    #@a9
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@ab
    .line 526
    const/4 v3, 0x0

    #@ac
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    #@ae
    .line 529
    const/4 v3, 0x0

    #@af
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    #@b1
    .line 530
    const/4 v3, 0x0

    #@b2
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    #@b4
    .line 537
    new-instance v3, Landroid/util/SparseArray;

    #@b6
    const/4 v4, 0x2

    #@b7
    invoke-direct {v3, v4}, Landroid/util/SparseArray;-><init>(I)V

    #@ba
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@bc
    .line 539
    const/4 v3, 0x0

    #@bd
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@bf
    .line 540
    const/4 v3, -0x1

    #@c0
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@c2
    .line 541
    const/4 v3, 0x0

    #@c3
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@c5
    .line 545
    const/4 v3, 0x0

    #@c6
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateMode:I

    #@c8
    .line 548
    new-instance v3, Landroid/util/SparseIntArray;

    #@ca
    invoke-direct {v3}, Landroid/util/SparseIntArray;-><init>()V

    #@cd
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    #@cf
    .line 550
    new-instance v3, Ljava/util/ArrayList;

    #@d1
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@d4
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@d6
    .line 552
    const/4 v3, 0x0

    #@d7
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceResizableTasks:Z

    #@d9
    .line 567
    new-instance v3, Ljava/util/ArrayList;

    #@db
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@de
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@e0
    .line 570
    const/4 v3, 0x0

    #@e1
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    #@e3
    .line 571
    new-instance v3, Landroid/graphics/Rect;

    #@e5
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@e8
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    #@ea
    .line 573
    const/4 v3, 0x0

    #@eb
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@ed
    .line 574
    const-wide/16 v4, 0x0

    #@ef
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@f1
    .line 575
    const/4 v3, 0x0

    #@f2
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@f4
    .line 576
    const/4 v3, 0x0

    #@f5
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@f7
    .line 577
    const/4 v3, 0x0

    #@f8
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@fa
    .line 582
    const/4 v3, 0x0

    #@fb
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@fd
    .line 584
    const/4 v3, 0x0

    #@fe
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@100
    .line 585
    const/4 v3, 0x0

    #@101
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@103
    .line 586
    const/4 v3, -0x1

    #@104
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@106
    .line 587
    const/4 v3, -0x1

    #@107
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@109
    .line 589
    const/4 v3, 0x0

    #@10a
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@10c
    .line 592
    const/4 v3, 0x0

    #@10d
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@10f
    .line 594
    const/4 v3, 0x0

    #@110
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@112
    .line 599
    new-instance v3, Landroid/content/res/Configuration;

    #@114
    invoke-direct {v3}, Landroid/content/res/Configuration;-><init>()V

    #@117
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@119
    .line 607
    const/4 v3, 0x0

    #@11a
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@11c
    .line 609
    new-instance v3, Landroid/util/ArraySet;

    #@11e
    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    #@121
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@123
    .line 610
    new-instance v3, Landroid/util/ArraySet;

    #@125
    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    #@128
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@12a
    .line 614
    new-instance v3, Landroid/util/DisplayMetrics;

    #@12c
    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    #@12f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@131
    .line 615
    new-instance v3, Landroid/util/DisplayMetrics;

    #@133
    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    #@136
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@138
    .line 616
    new-instance v3, Landroid/util/DisplayMetrics;

    #@13a
    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    #@13d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@13f
    .line 617
    new-instance v3, Landroid/util/DisplayMetrics;

    #@141
    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    #@144
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    #@146
    .line 619
    new-instance v3, Lcom/android/server/wm/WindowManagerService$H;

    #@148
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$H;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@14b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@14d
    .line 621
    invoke-static {}, Landroid/view/Choreographer;->getInstance()Landroid/view/Choreographer;

    #@150
    move-result-object v3

    #@151
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    #@153
    .line 623
    const/4 v3, 0x0

    #@154
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@156
    .line 624
    const/4 v3, 0x0

    #@157
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@159
    .line 628
    const/4 v3, 0x0

    #@15a
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@15c
    .line 633
    const/4 v3, 0x0

    #@15d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@15f
    .line 634
    new-instance v3, Ljava/util/ArrayList;

    #@161
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@164
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@166
    .line 638
    new-instance v3, Ljava/util/ArrayList;

    #@168
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@16b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@16d
    .line 700
    const/4 v3, 0x0

    #@16e
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@170
    .line 705
    const/high16 v3, 0x3f800000    # 1.0f

    #@172
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@174
    .line 706
    const/high16 v3, 0x3f800000    # 1.0f

    #@176
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@178
    .line 707
    const/high16 v3, 0x3f800000    # 1.0f

    #@17a
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@17c
    .line 708
    const/4 v3, 0x0

    #@17d
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@17f
    .line 725
    const/4 v3, 0x0

    #@180
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@182
    .line 740
    new-instance v3, Landroid/util/SparseArray;

    #@184
    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    #@187
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@189
    .line 744
    new-instance v3, Landroid/util/SparseArray;

    #@18b
    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    #@18e
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@190
    .line 846
    new-instance v3, Ljava/util/ArrayList;

    #@192
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@195
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@197
    .line 847
    const/4 v3, 0x0

    #@198
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@19a
    .line 854
    new-instance v3, Landroid/content/res/Configuration;

    #@19c
    invoke-direct {v3}, Landroid/content/res/Configuration;-><init>()V

    #@19f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@1a1
    .line 866
    new-instance v3, Ljava/util/ArrayList;

    #@1a3
    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    #@1a6
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@1a8
    .line 873
    new-instance v3, Lcom/android/server/wm/DisplayContentList;

    #@1aa
    invoke-direct {v3}, Lcom/android/server/wm/DisplayContentList;-><init>()V

    #@1ad
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@1af
    .line 877
    new-instance v3, Lcom/android/server/wm/WindowManagerService$2;

    #@1b1
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$2;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@1b4
    .line 876
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    #@1b6
    .line 7730
    new-instance v3, Lcom/android/server/wm/InputMonitor;

    #@1b8
    invoke-direct {v3, p0}, Lcom/android/server/wm/InputMonitor;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@1bb
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@1bd
    .line 11063
    new-instance v3, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@1bf
    const/4 v4, 0x0

    #@1c0
    invoke-direct {v3, v4}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;-><init>(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)V

    #@1c3
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@1c5
    .line 938
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1c7
    .line 939
    iput-boolean p3, p0, Lcom/android/server/wm/WindowManagerService;->mHaveInputMethods:Z

    #@1c9
    .line 940
    iput-boolean p4, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    #@1cb
    .line 941
    iput-boolean p5, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    #@1cd
    .line 942
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1d0
    move-result-object v3

    #@1d1
    .line 943
    const v4, 0x112000b

    #@1d4
    .line 942
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1d7
    move-result v3

    #@1d8
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mLimitedAlphaCompositing:Z

    #@1da
    .line 944
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1dd
    move-result-object v3

    #@1de
    .line 945
    const v4, 0x1120083

    #@1e1
    .line 944
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1e4
    move-result v3

    #@1e5
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@1e7
    .line 946
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1ea
    move-result-object v3

    #@1eb
    .line 947
    const v4, 0x112009e

    #@1ee
    .line 946
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1f1
    move-result v3

    #@1f2
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@1f4
    .line 948
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1f7
    move-result-object v3

    #@1f8
    .line 949
    const v4, 0x10e008f

    #@1fb
    .line 948
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getInteger(I)I

    #@1fe
    move-result v3

    #@1ff
    int-to-long v4, v3

    #@200
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    #@202
    .line 950
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@205
    move-result-object v3

    #@206
    .line 951
    const v4, 0x11200a0

    #@209
    .line 950
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@20c
    move-result v3

    #@20d
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAllowAnimationsInLowPowerMode:Z

    #@20f
    .line 952
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@211
    .line 953
    const-class v3, Landroid/hardware/display/DisplayManagerInternal;

    #@213
    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@216
    move-result-object v3

    #@217
    check-cast v3, Landroid/hardware/display/DisplayManagerInternal;

    #@219
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@21b
    .line 954
    new-instance v3, Lcom/android/server/wm/DisplaySettings;

    #@21d
    invoke-direct {v3}, Lcom/android/server/wm/DisplaySettings;-><init>()V

    #@220
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@222
    .line 955
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@224
    invoke-virtual {v3}, Lcom/android/server/wm/DisplaySettings;->readSettingsLocked()V

    #@227
    .line 957
    new-instance v3, Lcom/android/server/wm/WallpaperController;

    #@229
    invoke-direct {v3, p0}, Lcom/android/server/wm/WallpaperController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@22c
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@22e
    .line 958
    new-instance v3, Lcom/android/server/wm/WindowSurfacePlacer;

    #@230
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowSurfacePlacer;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@233
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@235
    .line 959
    new-instance v3, Lcom/android/server/wm/WindowLayersController;

    #@237
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowLayersController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@23a
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@23c
    .line 961
    const-class v3, Landroid/view/WindowManagerPolicy;

    #@23e
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@240
    invoke-static {v3, v4}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    #@243
    .line 963
    new-instance v3, Lcom/android/server/wm/PointerEventDispatcher;

    #@245
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@247
    const-string/jumbo v5, "WindowManager"

    #@24a
    invoke-virtual {v4, v5}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    #@24d
    move-result-object v4

    #@24e
    invoke-direct {v3, v4}, Lcom/android/server/wm/PointerEventDispatcher;-><init>(Landroid/view/InputChannel;)V

    #@251
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@253
    .line 965
    new-instance v3, Landroid/view/SurfaceSession;

    #@255
    invoke-direct {v3}, Landroid/view/SurfaceSession;-><init>()V

    #@258
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@25a
    .line 966
    const-string/jumbo v3, "display"

    #@25d
    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@260
    move-result-object v3

    #@261
    check-cast v3, Landroid/hardware/display/DisplayManager;

    #@263
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@265
    .line 967
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@267
    invoke-virtual {v3}, Landroid/hardware/display/DisplayManager;->getDisplays()[Landroid/view/Display;

    #@26a
    move-result-object v3

    #@26b
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    #@26d
    .line 968
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    #@26f
    const/4 v3, 0x0

    #@270
    array-length v5, v4

    #@271
    :goto_0
    if-ge v3, v5, :cond_0

    #@273
    aget-object v0, v4, v3

    #@275
    .line 969
    .local v0, "display":Landroid/view/Display;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    #@278
    .line 968
    add-int/lit8 v3, v3, 0x1

    #@27a
    goto :goto_0

    #@27b
    .line 972
    .end local v0    # "display":Landroid/view/Display;
    :cond_0
    new-instance v3, Lcom/android/server/wm/KeyguardDisableHandler;

    #@27d
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@27f
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@281
    invoke-direct {v3, v4, v5}, Lcom/android/server/wm/KeyguardDisableHandler;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy;)V

    #@284
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@286
    .line 974
    const-string/jumbo v3, "power"

    #@289
    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@28c
    move-result-object v3

    #@28d
    check-cast v3, Landroid/os/PowerManager;

    #@28f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@291
    .line 975
    const-class v3, Landroid/os/PowerManagerInternal;

    #@293
    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@296
    move-result-object v3

    #@297
    check-cast v3, Landroid/os/PowerManagerInternal;

    #@299
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@29b
    .line 976
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@29d
    .line 977
    new-instance v4, Lcom/android/server/wm/WindowManagerService$5;

    #@29f
    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowManagerService$5;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@2a2
    .line 976
    invoke-virtual {v3, v4}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(Landroid/os/PowerManagerInternal$LowPowerModeListener;)V

    #@2a5
    .line 988
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    #@2a7
    invoke-virtual {v3}, Landroid/os/PowerManagerInternal;->getLowPowerModeEnabled()Z

    #@2aa
    move-result v3

    #@2ab
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@2ad
    .line 989
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@2af
    .line 990
    const-string/jumbo v4, "SCREEN_FROZEN"

    #@2b2
    const/4 v5, 0x1

    #@2b3
    .line 989
    invoke-virtual {v3, v5, v4}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@2b6
    move-result-object v3

    #@2b7
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@2b9
    .line 991
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@2bb
    const/4 v4, 0x0

    #@2bc
    invoke-virtual {v3, v4}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    #@2bf
    .line 993
    new-instance v3, Lcom/android/server/wm/AppTransition;

    #@2c1
    invoke-direct {v3, p1, p0}, Lcom/android/server/wm/AppTransition;-><init>(Landroid/content/Context;Lcom/android/server/wm/WindowManagerService;)V

    #@2c4
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2c6
    .line 994
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2c8
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    #@2ca
    invoke-virtual {v3, v4}, Lcom/android/server/wm/AppTransition;->registerListenerLocked(Landroid/view/WindowManagerInternal$AppTransitionListener;)V

    #@2cd
    .line 997
    new-instance v3, Lcom/android/server/wm/BoundsAnimationController;

    #@2cf
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2d1
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    #@2d4
    move-result-object v5

    #@2d5
    invoke-direct {v3, v4, v5}, Lcom/android/server/wm/BoundsAnimationController;-><init>(Lcom/android/server/wm/AppTransition;Landroid/os/Handler;)V

    #@2d8
    .line 996
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

    #@2da
    .line 999
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    #@2dd
    move-result-object v3

    #@2de
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@2e0
    .line 1000
    const-class v3, Landroid/app/ActivityManagerInternal;

    #@2e2
    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@2e5
    move-result-object v3

    #@2e6
    check-cast v3, Landroid/app/ActivityManagerInternal;

    #@2e8
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    #@2ea
    .line 1001
    const-string/jumbo v3, "appops"

    #@2ed
    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@2f0
    move-result-object v3

    #@2f1
    check-cast v3, Landroid/app/AppOpsManager;

    #@2f3
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@2f5
    .line 1003
    new-instance v2, Lcom/android/server/wm/WindowManagerService$6;

    #@2f7
    invoke-direct {v2, p0}, Lcom/android/server/wm/WindowManagerService$6;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@2fa
    .line 1008
    .local v2, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@2fc
    const/16 v4, 0x18

    #@2fe
    const/4 v5, 0x0

    #@2ff
    invoke-virtual {v3, v4, v5, v2}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    #@302
    .line 1009
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@304
    const/16 v4, 0x2d

    #@306
    const/4 v5, 0x0

    #@307
    invoke-virtual {v3, v4, v5, v2}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    #@30a
    .line 1012
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@30d
    move-result-object v3

    #@30e
    .line 1013
    const-string/jumbo v4, "window_animation_scale"

    #@311
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@313
    .line 1012
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@316
    move-result v3

    #@317
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@319
    .line 1014
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@31c
    move-result-object v3

    #@31d
    .line 1015
    const-string/jumbo v4, "transition_animation_scale"

    #@320
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@322
    .line 1014
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@325
    move-result v3

    #@326
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@328
    .line 1016
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@32b
    move-result-object v3

    #@32c
    .line 1017
    const-string/jumbo v4, "animator_duration_scale"

    #@32f
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@331
    .line 1016
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    #@334
    move-result v3

    #@335
    invoke-direct {p0, v3}, Lcom/android/server/wm/WindowManagerService;->setAnimatorDurationScale(F)V

    #@338
    .line 1020
    new-instance v1, Landroid/content/IntentFilter;

    #@33a
    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    #@33d
    .line 1021
    .local v1, "filter":Landroid/content/IntentFilter;
    const-string/jumbo v3, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    #@340
    invoke-virtual {v1, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    #@343
    .line 1022
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@345
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    #@347
    invoke-virtual {v3, v4, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    #@34a
    .line 1024
    new-instance v3, Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    #@34c
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@34f
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    #@351
    .line 1026
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    #@353
    .line 1027
    const-string/jumbo v4, "WindowManager"

    #@356
    const v5, 0x2000000a

    #@359
    .line 1026
    invoke-virtual {v3, v5, v4}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    #@35c
    move-result-object v3

    #@35d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@35f
    .line 1028
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@361
    const/4 v4, 0x0

    #@362
    invoke-virtual {v3, v4}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    #@365
    .line 1030
    new-instance v3, Lcom/android/server/wm/WindowAnimator;

    #@367
    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowAnimator;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@36a
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@36c
    .line 1032
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@36f
    move-result-object v3

    #@370
    .line 1033
    const v4, 0x1120031

    #@373
    .line 1032
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@376
    move-result v3

    #@377
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAllowTheaterModeWakeFromLayout:Z

    #@379
    .line 1036
    const-class v3, Landroid/view/WindowManagerInternal;

    #@37b
    new-instance v4, Lcom/android/server/wm/WindowManagerService$LocalService;

    #@37d
    const/4 v5, 0x0

    #@37e
    invoke-direct {v4, p0, v5}, Lcom/android/server/wm/WindowManagerService$LocalService;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$LocalService;)V

    #@381
    invoke-static {v3, v4}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    #@384
    .line 1037
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->initPolicy()V

    #@387
    .line 1040
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    #@38a
    move-result-object v3

    #@38b
    invoke-virtual {v3, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    #@38e
    .line 1042
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@391
    .line 1044
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->createWatermarkInTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@394
    .line 1046
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@397
    .line 1049
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->showEmulatorDisplayOverlayIfNeeded()V

    #@39a
    .line 937
    return-void

    #@39b
    .line 1045
    :catchall_0
    move-exception v3

    #@39c
    .line 1046
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@39f
    .line 1045
    throw v3
.end method

.method synthetic constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZLcom/android/server/wm/WindowManagerService;)V
    .locals 0
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    #@0
    .prologue
    invoke-direct/range {p0 .. p5}, Lcom/android/server/wm/WindowManagerService;-><init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    #@3
    return-void
.end method

.method private addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I
    .locals 27
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1148
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v10

    #@4
    .line 1149
    .local v10, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v10, :cond_0

    #@6
    .line 1151
    const/16 v25, 0x0

    #@8
    return v25

    #@9
    .line 1153
    :cond_0
    move-object/from16 v0, p1

    #@b
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@d
    .line 1154
    .local v9, "client":Landroid/view/IWindow;
    move-object/from16 v0, p1

    #@f
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@11
    move-object/from16 v17, v0

    #@13
    .line 1156
    .local v17, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@16
    move-result-object v24

    #@17
    .line 1157
    .local v24, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    #@19
    move-object/from16 v1, v17

    #@1b
    invoke-direct {v0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@1e
    move-result-object v19

    #@1f
    .line 1158
    .local v19, "tokenWindowList":Lcom/android/server/wm/WindowList;
    const/16 v20, 0x0

    #@21
    .line 1159
    .local v20, "tokenWindowsPos":I
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@24
    move-result v25

    #@25
    if-nez v25, :cond_1

    #@27
    .line 1160
    move-object/from16 v0, p0

    #@29
    move-object/from16 v1, p1

    #@2b
    move-object/from16 v2, v17

    #@2d
    move-object/from16 v3, v24

    #@2f
    move-object/from16 v4, v19

    #@31
    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService;->addAppWindowToTokenListLocked(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;Lcom/android/server/wm/WindowList;)I

    #@34
    move-result v25

    #@35
    return v25

    #@36
    .line 1168
    :cond_1
    const/4 v13, 0x0

    #@37
    .line 1170
    .local v13, "pos":Lcom/android/server/wm/WindowState;
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@3a
    move-result-object v16

    #@3b
    .line 1172
    .local v16, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/16 v18, -0x1

    #@3d
    .line 1173
    .local v18, "tokenNdx":I
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    #@40
    move-result v25

    #@41
    add-int/lit8 v15, v25, -0x1

    #@43
    .end local v13    # "pos":Lcom/android/server/wm/WindowState;
    .local v15, "taskNdx":I
    :goto_0
    if-ltz v15, :cond_3

    #@45
    .line 1174
    move-object/from16 v0, v16

    #@47
    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@4a
    move-result-object v25

    #@4b
    check-cast v25, Lcom/android/server/wm/Task;

    #@4d
    move-object/from16 v0, v25

    #@4f
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@51
    move-object/from16 v21, v0

    #@53
    .line 1175
    .local v21, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/AppTokenList;->size()I

    #@56
    move-result v25

    #@57
    add-int/lit8 v18, v25, -0x1

    #@59
    :goto_1
    if-ltz v18, :cond_2

    #@5b
    .line 1176
    move-object/from16 v0, v21

    #@5d
    move/from16 v1, v18

    #@5f
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@62
    move-result-object v14

    #@63
    check-cast v14, Lcom/android/server/wm/AppWindowToken;

    #@65
    .line 1177
    .local v14, "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v17

    #@67
    if-ne v14, v0, :cond_5

    #@69
    .line 1178
    add-int/lit8 v18, v18, -0x1

    #@6b
    .line 1179
    if-gez v18, :cond_2

    #@6d
    .line 1180
    add-int/lit8 v15, v15, -0x1

    #@6f
    .line 1181
    if-ltz v15, :cond_2

    #@71
    .line 1182
    move-object/from16 v0, v16

    #@73
    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@76
    move-result-object v25

    #@77
    check-cast v25, Lcom/android/server/wm/Task;

    #@79
    move-object/from16 v0, v25

    #@7b
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@7d
    move-object/from16 v25, v0

    #@7f
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/AppTokenList;->size()I

    #@82
    move-result v25

    #@83
    add-int/lit8 v18, v25, -0x1

    #@85
    .line 1196
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_2
    if-ltz v18, :cond_7

    #@87
    .line 1205
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_3
    if-eqz v13, :cond_9

    #@89
    .line 1207
    move-object/from16 v0, p0

    #@8b
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@8d
    move-object/from16 v25, v0

    #@8f
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@91
    move-object/from16 v26, v0

    #@93
    invoke-interface/range {v26 .. v26}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@96
    move-result-object v26

    #@97
    invoke-virtual/range {v25 .. v26}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@9a
    move-result-object v7

    #@9b
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@9d
    .line 1208
    .local v7, "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_4

    #@9f
    .line 1210
    move-object/from16 v0, p0

    #@a1
    invoke-direct {v0, v7, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@a4
    move-result-object v19

    #@a5
    .line 1211
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@a8
    move-result v5

    #@a9
    .line 1212
    .local v5, "NC":I
    if-lez v5, :cond_4

    #@ab
    .line 1213
    const/16 v25, 0x0

    #@ad
    move-object/from16 v0, v19

    #@af
    move/from16 v1, v25

    #@b1
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@b4
    move-result-object v8

    #@b5
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@b7
    .line 1214
    .local v8, "bottom":Lcom/android/server/wm/WindowState;
    iget v0, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@b9
    move/from16 v25, v0

    #@bb
    if-gez v25, :cond_4

    #@bd
    .line 1215
    move-object v13, v8

    #@be
    .line 1219
    .end local v5    # "NC":I
    .end local v8    # "bottom":Lcom/android/server/wm/WindowState;
    :cond_4
    move-object/from16 v0, p0

    #@c0
    move-object/from16 v1, p1

    #@c2
    invoke-direct {v0, v13, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@c5
    .line 1220
    return v20

    #@c6
    .line 1191
    .end local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5
    move-object/from16 v0, p0

    #@c8
    invoke-direct {v0, v14, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@cb
    move-result-object v19

    #@cc
    .line 1192
    iget-boolean v0, v14, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@ce
    move/from16 v25, v0

    #@d0
    if-nez v25, :cond_6

    #@d2
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@d5
    move-result v25

    #@d6
    if-lez v25, :cond_6

    #@d8
    .line 1193
    const/16 v25, 0x0

    #@da
    move-object/from16 v0, v19

    #@dc
    move/from16 v1, v25

    #@de
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@e1
    move-result-object v13

    #@e2
    check-cast v13, Lcom/android/server/wm/WindowState;

    #@e4
    .line 1175
    :cond_6
    add-int/lit8 v18, v18, -0x1

    #@e6
    goto/16 :goto_1

    #@e8
    .line 1173
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_7
    add-int/lit8 v15, v15, -0x1

    #@ea
    goto/16 :goto_0

    #@ec
    .line 1225
    :cond_8
    add-int/lit8 v15, v15, -0x1

    #@ee
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_9
    if-ltz v15, :cond_b

    #@f0
    .line 1226
    move-object/from16 v0, v16

    #@f2
    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@f5
    move-result-object v25

    #@f6
    check-cast v25, Lcom/android/server/wm/Task;

    #@f8
    move-object/from16 v0, v25

    #@fa
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@fc
    move-object/from16 v21, v0

    #@fe
    .line 1227
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :goto_2
    if-ltz v18, :cond_a

    #@100
    .line 1228
    move-object/from16 v0, v21

    #@102
    move/from16 v1, v18

    #@104
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@107
    move-result-object v14

    #@108
    check-cast v14, Lcom/android/server/wm/AppWindowToken;

    #@10a
    .line 1229
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    #@10c
    invoke-direct {v0, v14, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@10f
    move-result-object v19

    #@110
    .line 1230
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    #@113
    move-result v6

    #@114
    .line 1231
    .local v6, "NW":I
    if-lez v6, :cond_d

    #@116
    .line 1232
    add-int/lit8 v25, v6, -0x1

    #@118
    move-object/from16 v0, v19

    #@11a
    move/from16 v1, v25

    #@11c
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@11f
    move-result-object v13

    #@120
    check-cast v13, Lcom/android/server/wm/WindowState;

    #@122
    .line 1236
    .end local v6    # "NW":I
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_a
    if-ltz v18, :cond_8

    #@124
    .line 1242
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_b
    if-eqz v13, :cond_e

    #@126
    .line 1245
    move-object/from16 v0, p0

    #@128
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@12a
    move-object/from16 v25, v0

    #@12c
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@12e
    move-object/from16 v26, v0

    #@130
    invoke-interface/range {v26 .. v26}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@133
    move-result-object v26

    #@134
    invoke-virtual/range {v25 .. v26}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@137
    move-result-object v7

    #@138
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@13a
    .line 1246
    .restart local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_c

    #@13c
    .line 1247
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@13e
    move-object/from16 v25, v0

    #@140
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowList;->size()I

    #@143
    move-result v5

    #@144
    .line 1248
    .restart local v5    # "NC":I
    if-lez v5, :cond_c

    #@146
    .line 1249
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@148
    move-object/from16 v25, v0

    #@14a
    add-int/lit8 v26, v5, -0x1

    #@14c
    invoke-virtual/range {v25 .. v26}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@14f
    move-result-object v22

    #@150
    check-cast v22, Lcom/android/server/wm/WindowState;

    #@152
    .line 1250
    .local v22, "top":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v22

    #@154
    iget v0, v0, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@156
    move/from16 v25, v0

    #@158
    if-ltz v25, :cond_c

    #@15a
    .line 1251
    move-object/from16 v13, v22

    #@15c
    .line 1255
    .end local v5    # "NC":I
    .end local v22    # "top":Lcom/android/server/wm/WindowState;
    :cond_c
    move-object/from16 v0, p0

    #@15e
    move-object/from16 v1, p1

    #@160
    invoke-direct {v0, v13, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@163
    .line 1256
    return v20

    #@164
    .line 1227
    .end local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "NW":I
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_d
    add-int/lit8 v18, v18, -0x1

    #@166
    goto :goto_2

    #@167
    .line 1260
    .end local v6    # "NW":I
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_e
    move-object/from16 v0, p1

    #@169
    iget v12, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@16b
    .line 1262
    .local v12, "myLayer":I
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/WindowList;->size()I

    #@16e
    move-result v25

    #@16f
    add-int/lit8 v11, v25, -0x1

    #@171
    .local v11, "i":I
    :goto_3
    if-ltz v11, :cond_f

    #@173
    .line 1263
    move-object/from16 v0, v24

    #@175
    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@178
    move-result-object v23

    #@179
    check-cast v23, Lcom/android/server/wm/WindowState;

    #@17b
    .line 1268
    .local v23, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v23

    #@17d
    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@17f
    move/from16 v25, v0

    #@181
    move/from16 v0, v25

    #@183
    if-gt v0, v12, :cond_10

    #@185
    move-object/from16 v0, v23

    #@187
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@189
    move-object/from16 v25, v0

    #@18b
    move-object/from16 v0, v25

    #@18d
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@18f
    move/from16 v25, v0

    #@191
    const/16 v26, 0x7f2

    #@193
    move/from16 v0, v25

    #@195
    move/from16 v1, v26

    #@197
    if-eq v0, v1, :cond_10

    #@199
    .line 1275
    .end local v23    # "w":Lcom/android/server/wm/WindowState;
    :cond_f
    add-int/lit8 v25, v11, 0x1

    #@19b
    move-object/from16 v0, v24

    #@19d
    move/from16 v1, v25

    #@19f
    move-object/from16 v2, p1

    #@1a1
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@1a4
    .line 1276
    const/16 v25, 0x1

    #@1a6
    move/from16 v0, v25

    #@1a8
    move-object/from16 v1, p0

    #@1aa
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@1ac
    .line 1277
    return v20

    #@1ad
    .line 1262
    .restart local v23    # "w":Lcom/android/server/wm/WindowState;
    :cond_10
    add-int/lit8 v11, v11, -0x1

    #@1af
    goto :goto_3
.end method

.method private addAppWindowToTokenListLocked(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;Lcom/android/server/wm/WindowList;)I
    .locals 9
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "token"    # Lcom/android/server/wm/WindowToken;
    .param p3, "windows"    # Lcom/android/server/wm/WindowList;
    .param p4, "tokenWindowList"    # Lcom/android/server/wm/WindowList;

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v7, 0x0

    #@2
    .line 1286
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4
    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    #@6
    if-ne v6, v8, :cond_0

    #@8
    .line 1288
    invoke-virtual {p4, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@b
    move-result-object v2

    #@c
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@e
    .line 1289
    .local v2, "lowestWindow":Lcom/android/server/wm/WindowState;
    invoke-direct {p0, v2, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@11
    .line 1290
    iget-object v6, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-direct {p0, v2, v6}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@16
    move-result v4

    #@17
    .line 1318
    .end local v2    # "lowestWindow":Lcom/android/server/wm/WindowState;
    .local v4, "tokenWindowsPos":I
    :goto_0
    return v4

    #@18
    .line 1292
    .end local v4    # "tokenWindowsPos":I
    :cond_0
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1a
    .line 1293
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p4}, Lcom/android/server/wm/WindowList;->size()I

    #@1d
    move-result v5

    #@1e
    .line 1294
    .local v5, "windowListPos":I
    add-int/lit8 v6, v5, -0x1

    #@20
    invoke-virtual {p4, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@23
    move-result-object v1

    #@24
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@26
    .line 1295
    .local v1, "lastWindow":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_1

    #@28
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@2a
    if-ne v1, v6, :cond_1

    #@2c
    .line 1296
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@2f
    .line 1297
    iget-object v6, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@31
    invoke-direct {p0, v1, v6}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@34
    move-result v4

    #@35
    .restart local v4    # "tokenWindowsPos":I
    goto :goto_0

    #@36
    .line 1299
    .end local v4    # "tokenWindowsPos":I
    :cond_1
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I

    #@39
    move-result v3

    #@3a
    .line 1307
    .local v3, "newIdx":I
    add-int/lit8 v6, v3, 0x1

    #@3c
    invoke-virtual {p3, v6, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@3f
    .line 1308
    if-gez v3, :cond_2

    #@41
    .line 1310
    const/4 v4, 0x0

    #@42
    .line 1315
    .restart local v4    # "tokenWindowsPos":I
    :goto_1
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@44
    goto :goto_0

    #@45
    .line 1313
    .end local v4    # "tokenWindowsPos":I
    :cond_2
    invoke-virtual {p3, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@48
    move-result-object v6

    #@49
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@4b
    iget-object v7, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@4d
    .line 1312
    invoke-direct {p0, v6, v7}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@50
    move-result v6

    #@51
    add-int/lit8 v4, v6, 0x1

    #@53
    .restart local v4    # "tokenWindowsPos":I
    goto :goto_1
.end method

.method private addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 12
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    #@0
    .prologue
    .line 1349
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@2
    .line 1350
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@5
    move-result-object v2

    #@6
    .line 1351
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v2, :cond_0

    #@8
    .line 1352
    return-void

    #@9
    .line 1354
    :cond_0
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@b
    .line 1356
    .local v1, "attached":Lcom/android/server/wm/WindowState;
    invoke-direct {p0, v6, v2}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    #@e
    move-result-object v7

    #@f
    .line 1360
    .local v7, "tokenWindowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@12
    move-result v0

    #@13
    .line 1361
    .local v0, "NA":I
    iget v5, p1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@15
    .line 1362
    .local v5, "sublayer":I
    const/high16 v4, -0x80000000

    #@17
    .line 1363
    .local v4, "largestSublayer":I
    const/4 v10, 0x0

    #@18
    .line 1365
    .local v10, "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    const/4 v3, 0x0

    #@19
    .end local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    .local v3, "i":I
    :goto_0
    if-ge v3, v0, :cond_4

    #@1b
    .line 1366
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1e
    move-result-object v8

    #@1f
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@21
    .line 1367
    .local v8, "w":Lcom/android/server/wm/WindowState;
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@23
    .line 1368
    .local v9, "wSublayer":I
    if-lt v9, v4, :cond_1

    #@25
    .line 1369
    move v4, v9

    #@26
    .line 1370
    move-object v10, v8

    #@27
    .line 1372
    :cond_1
    if-gez v5, :cond_7

    #@29
    .line 1375
    if-lt v9, v5, :cond_9

    #@2b
    .line 1376
    if-eqz p2, :cond_2

    #@2d
    .line 1378
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2f
    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@32
    .line 1380
    :cond_2
    if-ltz v9, :cond_3

    #@34
    move-object v8, v1

    #@35
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@38
    .line 1396
    .end local v9    # "wSublayer":I
    :cond_4
    :goto_1
    if-lt v3, v0, :cond_6

    #@3a
    .line 1397
    if-eqz p2, :cond_5

    #@3c
    .line 1399
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3e
    invoke-virtual {v11, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@41
    .line 1401
    :cond_5
    if-gez v5, :cond_a

    #@43
    .line 1402
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@46
    .line 1348
    :cond_6
    :goto_2
    return-void

    #@47
    .line 1386
    .restart local v8    # "w":Lcom/android/server/wm/WindowState;
    .restart local v9    # "wSublayer":I
    :cond_7
    if-le v9, v5, :cond_9

    #@49
    .line 1387
    if-eqz p2, :cond_8

    #@4b
    .line 1389
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@4d
    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@50
    .line 1391
    :cond_8
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@53
    goto :goto_1

    #@54
    .line 1365
    :cond_9
    add-int/lit8 v3, v3, 0x1

    #@56
    goto :goto_0

    #@57
    .line 1404
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "wSublayer":I
    :cond_a
    if-ltz v4, :cond_b

    #@59
    :goto_3
    invoke-direct {p0, v10, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    #@5c
    goto :goto_2

    #@5d
    :cond_b
    move-object v10, v1

    #@5e
    .line 1406
    goto :goto_3
.end method

.method private addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .locals 6
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1322
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v3

    #@4
    .line 1325
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    iget v1, p1, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@6
    .line 1327
    .local v1, "myLayer":I
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    #@9
    move-result v4

    #@a
    add-int/lit8 v0, v4, -0x1

    #@c
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    #@e
    .line 1328
    invoke-virtual {v3, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v2

    #@12
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@14
    .line 1329
    .local v2, "otherWin":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getBaseType()I

    #@17
    move-result v4

    #@18
    const/16 v5, 0x7dd

    #@1a
    if-eq v4, v5, :cond_1

    #@1c
    iget v4, v2, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    #@1e
    if-gt v4, v1, :cond_1

    #@20
    .line 1341
    .end local v2    # "otherWin":Lcom/android/server/wm/WindowState;
    :cond_0
    add-int/lit8 v0, v0, 0x1

    #@22
    .line 1344
    invoke-virtual {v3, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@25
    .line 1345
    const/4 v4, 0x1

    #@26
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@28
    .line 1321
    return-void

    #@29
    .line 1327
    .restart local v2    # "otherWin":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, -0x1

    #@2b
    goto :goto_0
.end method

.method private addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 4
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    #@0
    .prologue
    .line 1415
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@2
    if-nez v3, :cond_3

    #@4
    .line 1416
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@6
    .line 1417
    .local v1, "token":Lcom/android/server/wm/WindowToken;
    const/4 v2, 0x0

    #@7
    .line 1418
    .local v2, "tokenWindowsPos":I
    iget-object v3, v1, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@9
    if-eqz v3, :cond_2

    #@b
    .line 1419
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I

    #@e
    move-result v2

    #@f
    .line 1423
    :goto_0
    if-eqz p2, :cond_0

    #@11
    .line 1425
    iget-object v3, v1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-virtual {v3, v2, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@16
    .line 1431
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v2    # "tokenWindowsPos":I
    :cond_0
    :goto_1
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@18
    .line 1432
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_1

    #@1a
    .line 1433
    if-eqz p2, :cond_1

    #@1c
    .line 1434
    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppWindowToken;->addWindow(Lcom/android/server/wm/WindowState;)V

    #@1f
    .line 1412
    :cond_1
    return-void

    #@20
    .line 1421
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v1    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v2    # "tokenWindowsPos":I
    :cond_2
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    #@23
    goto :goto_0

    #@24
    .line 1428
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v2    # "tokenWindowsPos":I
    :cond_3
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V

    #@27
    goto :goto_1
.end method

.method private adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V
    .locals 3
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotation"    # I
    .param p3, "uiMode"    # I
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    #@0
    .prologue
    .line 7225
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v2, p4, p5, p2, p3}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(IIII)I

    #@5
    move-result v1

    #@6
    .line 7226
    .local v1, "width":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@8
    if-ge v1, v2, :cond_0

    #@a
    .line 7227
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@c
    .line 7229
    :cond_0
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@e
    if-le v1, v2, :cond_1

    #@10
    .line 7230
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@12
    .line 7232
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@14
    invoke-interface {v2, p4, p5, p2, p3}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(IIII)I

    #@17
    move-result v0

    #@18
    .line 7233
    .local v0, "height":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@1a
    if-ge v0, v2, :cond_2

    #@1c
    .line 7234
    iput v0, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@1e
    .line 7236
    :cond_2
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@20
    if-le v0, v2, :cond_3

    #@22
    .line 7237
    iput v0, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@24
    .line 7223
    :cond_3
    return-void
.end method

.method private applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z
    .locals 18
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "transit"    # I
    .param p4, "enter"    # Z
    .param p5, "isVoiceInteraction"    # Z

    #@0
    .prologue
    .line 3164
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@3
    move-result v1

    #@4
    if-eqz v1, :cond_5

    #@6
    .line 3165
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@9
    move-result-object v14

    #@a
    .line 3166
    .local v14, "displayInfo":Landroid/view/DisplayInfo;
    iget v0, v14, Landroid/view/DisplayInfo;->appWidth:I

    #@c
    move/from16 v16, v0

    #@e
    .line 3167
    .local v16, "width":I
    iget v15, v14, Landroid/view/DisplayInfo;->appHeight:I

    #@10
    .line 3172
    .local v15, "height":I
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@13
    move-result-object v17

    #@14
    .line 3173
    .local v17, "win":Lcom/android/server/wm/WindowState;
    new-instance v7, Landroid/graphics/Rect;

    #@16
    const/4 v1, 0x0

    #@17
    const/4 v5, 0x0

    #@18
    move/from16 v0, v16

    #@1a
    invoke-direct {v7, v1, v5, v0, v15}, Landroid/graphics/Rect;-><init>(IIII)V

    #@1d
    .line 3174
    .local v7, "frame":Landroid/graphics/Rect;
    new-instance v8, Landroid/graphics/Rect;

    #@1f
    .line 3175
    iget v1, v14, Landroid/view/DisplayInfo;->logicalWidth:I

    #@21
    iget v5, v14, Landroid/view/DisplayInfo;->logicalHeight:I

    #@23
    .line 3174
    const/4 v6, 0x0

    #@24
    const/4 v11, 0x0

    #@25
    invoke-direct {v8, v6, v11, v1, v5}, Landroid/graphics/Rect;-><init>(IIII)V

    #@28
    .line 3176
    .local v8, "displayFrame":Landroid/graphics/Rect;
    new-instance v9, Landroid/graphics/Rect;

    #@2a
    invoke-direct {v9}, Landroid/graphics/Rect;-><init>()V

    #@2d
    .line 3177
    .local v9, "insets":Landroid/graphics/Rect;
    const/4 v10, 0x0

    #@2e
    .line 3178
    .local v10, "surfaceInsets":Landroid/graphics/Rect;
    if-eqz v17, :cond_3

    #@30
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->inFreeformWorkspace()Z

    #@33
    move-result v12

    #@34
    .line 3179
    :goto_0
    if-eqz v17, :cond_0

    #@36
    .line 3184
    if-eqz v12, :cond_4

    #@38
    .line 3185
    move-object/from16 v0, v17

    #@3a
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@3c
    invoke-virtual {v7, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@3f
    .line 3189
    :goto_1
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    #@42
    move-result-object v1

    #@43
    iget-object v10, v1, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@45
    .line 3190
    .local v10, "surfaceInsets":Landroid/graphics/Rect;
    move-object/from16 v0, v17

    #@47
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@49
    invoke-virtual {v9, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@4c
    .line 3193
    .end local v10    # "surfaceInsets":Landroid/graphics/Rect;
    :cond_0
    move-object/from16 v0, p1

    #@4e
    iget-boolean v1, v0, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@50
    if-eqz v1, :cond_1

    #@52
    .line 3197
    const/16 p4, 0x0

    #@54
    .line 3202
    .end local p4    # "enter":Z
    :cond_1
    move-object/from16 v0, p0

    #@56
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@58
    move-object/from16 v0, p0

    #@5a
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@5c
    iget v5, v5, Landroid/content/res/Configuration;->uiMode:I

    #@5e
    .line 3203
    move-object/from16 v0, p0

    #@60
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@62
    iget v6, v6, Landroid/content/res/Configuration;->orientation:I

    #@64
    .line 3204
    move-object/from16 v0, p1

    #@66
    iget-object v11, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@68
    iget v13, v11, Lcom/android/server/wm/Task;->mTaskId:I

    #@6a
    move-object/from16 v2, p2

    #@6c
    move/from16 v3, p3

    #@6e
    move/from16 v4, p4

    #@70
    move/from16 v11, p5

    #@72
    .line 3202
    invoke-virtual/range {v1 .. v13}, Lcom/android/server/wm/AppTransition;->loadAnimation(Landroid/view/WindowManager$LayoutParams;IZIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZZI)Landroid/view/animation/Animation;

    #@75
    move-result-object v2

    #@76
    .line 3205
    .local v2, "a":Landroid/view/animation/Animation;
    if-eqz v2, :cond_2

    #@78
    .line 3207
    invoke-virtual {v7}, Landroid/graphics/Rect;->width()I

    #@7b
    move-result v3

    #@7c
    .line 3208
    .local v3, "containingWidth":I
    invoke-virtual {v7}, Landroid/graphics/Rect;->height()I

    #@7f
    move-result v4

    #@80
    .line 3209
    .local v4, "containingHeight":I
    move-object/from16 v0, p1

    #@82
    iget-object v1, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@84
    .line 3210
    move-object/from16 v0, p0

    #@86
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@88
    invoke-virtual {v5}, Lcom/android/server/wm/AppTransition;->canSkipFirstFrame()Z

    #@8b
    move-result v5

    #@8c
    move-object/from16 v0, p0

    #@8e
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@90
    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->getAppStackClipMode()I

    #@93
    move-result v6

    #@94
    .line 3209
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/wm/AppWindowAnimator;->setAnimation(Landroid/view/animation/Animation;IIZI)V

    #@97
    .line 3216
    .end local v2    # "a":Landroid/view/animation/Animation;
    .end local v3    # "containingWidth":I
    .end local v4    # "containingHeight":I
    .end local v7    # "frame":Landroid/graphics/Rect;
    .end local v8    # "displayFrame":Landroid/graphics/Rect;
    .end local v9    # "insets":Landroid/graphics/Rect;
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "height":I
    .end local v16    # "width":I
    .end local v17    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    :goto_2
    move-object/from16 v0, p1

    #@99
    iget-object v1, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@9b
    iget-object v1, v1, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@9d
    if-eqz v1, :cond_6

    #@9f
    const/4 v1, 0x1

    #@a0
    :goto_3
    return v1

    #@a1
    .line 3178
    .restart local v7    # "frame":Landroid/graphics/Rect;
    .restart local v8    # "displayFrame":Landroid/graphics/Rect;
    .restart local v9    # "insets":Landroid/graphics/Rect;
    .local v10, "surfaceInsets":Landroid/graphics/Rect;
    .restart local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v15    # "height":I
    .restart local v16    # "width":I
    .restart local v17    # "win":Lcom/android/server/wm/WindowState;
    .restart local p4    # "enter":Z
    :cond_3
    const/4 v12, 0x0

    #@a2
    .local v12, "freeform":Z
    goto :goto_0

    #@a3
    .line 3187
    .end local v12    # "freeform":Z
    :cond_4
    move-object/from16 v0, v17

    #@a5
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    #@a7
    invoke-virtual {v7, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@aa
    goto :goto_1

    #@ab
    .line 3213
    .end local v7    # "frame":Landroid/graphics/Rect;
    .end local v8    # "displayFrame":Landroid/graphics/Rect;
    .end local v9    # "insets":Landroid/graphics/Rect;
    .end local v10    # "surfaceInsets":Landroid/graphics/Rect;
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "height":I
    .end local v16    # "width":I
    .end local v17    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    move-object/from16 v0, p1

    #@ad
    iget-object v1, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@af
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    #@b2
    goto :goto_2

    #@b3
    .line 3216
    .end local p4    # "enter":Z
    :cond_6
    const/4 v1, 0x0

    #@b4
    goto :goto_3
.end method

.method static canBeImeTarget(Lcom/android/server/wm/WindowState;)Z
    .locals 5
    .param p0, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const v4, 0x20008

    #@3
    const/4 v3, 0x0

    #@4
    .line 1440
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6
    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@8
    and-int v0, v2, v4

    #@a
    .line 1442
    .local v0, "fl":I
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@c
    iget v1, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    #@e
    .line 1443
    .local v1, "type":I
    if-eqz v0, :cond_0

    #@10
    if-ne v0, v4, :cond_1

    #@12
    .line 1460
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    #@15
    move-result v2

    #@16
    return v2

    #@17
    .line 1444
    :cond_1
    const/4 v2, 0x3

    #@18
    if-eq v1, v2, :cond_0

    #@1a
    .line 1462
    return v3
.end method

.method private checkBootAnimationCompleteLocked()Z
    .locals 4

    #@0
    .prologue
    const/16 v1, 0x25

    #@2
    .line 5911
    const-string/jumbo v0, "bootanim"

    #@5
    invoke-static {v0}, Landroid/os/SystemService;->isRunning(Ljava/lang/String;)Z

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5912
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@10
    .line 5913
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@12
    .line 5914
    const-wide/16 v2, 0xc8

    #@14
    .line 5913
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@17
    .line 5916
    const/4 v0, 0x0

    #@18
    return v0

    #@19
    .line 5919
    :cond_0
    const/4 v0, 0x1

    #@1a
    return v0
.end method

.method private checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 5
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v4, 0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 3289
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@5
    move-result v1

    #@6
    invoke-static {}, Landroid/os/Process;->myPid()I

    #@9
    move-result v2

    #@a
    if-ne v1, v2, :cond_0

    #@c
    .line 3290
    return v4

    #@d
    .line 3293
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@f
    invoke-virtual {v1, p1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    #@12
    move-result v1

    #@13
    if-nez v1, :cond_1

    #@15
    .line 3295
    return v4

    #@16
    .line 3297
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    #@18
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@1b
    const-string/jumbo v2, "Permission Denial: "

    #@1e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@21
    move-result-object v1

    #@22
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v1

    #@26
    const-string/jumbo v2, " from pid="

    #@29
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v1

    #@2d
    .line 3298
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@30
    move-result v2

    #@31
    .line 3297
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@34
    move-result-object v1

    #@35
    .line 3299
    const-string/jumbo v2, ", uid="

    #@38
    .line 3297
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3b
    move-result-object v1

    #@3c
    .line 3299
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@3f
    move-result v2

    #@40
    .line 3297
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@43
    move-result-object v1

    #@44
    .line 3300
    const-string/jumbo v2, " requires "

    #@47
    .line 3297
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v1

    #@4b
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v1

    #@4f
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52
    move-result-object v0

    #@53
    .line 3301
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "WindowManager"

    #@56
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@59
    .line 3302
    return v3
.end method

.method private checkWaitingForWindowsLocked()Z
    .locals 12

    #@0
    .prologue
    const/4 v11, 0x1

    #@1
    .line 5792
    const/4 v2, 0x0

    #@2
    .line 5793
    .local v2, "haveBootMsg":Z
    const/4 v1, 0x0

    #@3
    .line 5796
    .local v1, "haveApp":Z
    const/4 v4, 0x0

    #@4
    .line 5797
    .local v4, "haveWallpaper":Z
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@6
    invoke-virtual {v9}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@9
    move-result-object v9

    #@a
    .line 5798
    const v10, 0x112004d

    #@d
    .line 5797
    invoke-virtual {v9, v10}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@10
    move-result v9

    #@11
    if-eqz v9, :cond_3

    #@13
    .line 5799
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    #@15
    if-eqz v9, :cond_2

    #@17
    const/4 v7, 0x0

    #@18
    .line 5800
    .local v7, "wallpaperEnabled":Z
    :goto_0
    const/4 v3, 0x1

    #@19
    .line 5802
    .local v3, "haveKeyguard":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@1c
    move-result-object v8

    #@1d
    .line 5803
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@20
    move-result v0

    #@21
    .line 5804
    .local v0, "N":I
    const/4 v5, 0x0

    #@22
    .end local v3    # "haveKeyguard":Z
    .local v5, "i":I
    :goto_1
    if-ge v5, v0, :cond_8

    #@24
    .line 5805
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@27
    move-result-object v6

    #@28
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@2a
    .line 5806
    .local v6, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@2d
    move-result v9

    #@2e
    if-eqz v9, :cond_0

    #@30
    iget-boolean v9, v6, Lcom/android/server/wm/WindowState;->mObscured:Z

    #@32
    if-eqz v9, :cond_4

    #@34
    .line 5809
    :cond_0
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@37
    move-result v9

    #@38
    if-eqz v9, :cond_1

    #@3a
    .line 5810
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@3c
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@3e
    const/16 v10, 0x7e5

    #@40
    if-ne v9, v10, :cond_5

    #@42
    .line 5811
    const/4 v2, 0x1

    #@43
    .line 5804
    :cond_1
    :goto_2
    add-int/lit8 v5, v5, 0x1

    #@45
    goto :goto_1

    #@46
    .line 5799
    .end local v0    # "N":I
    .end local v5    # "i":I
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    .end local v7    # "wallpaperEnabled":Z
    .end local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_2
    const/4 v7, 0x1

    #@47
    .restart local v7    # "wallpaperEnabled":Z
    goto :goto_0

    #@48
    .line 5797
    .end local v7    # "wallpaperEnabled":Z
    :cond_3
    const/4 v7, 0x0

    #@49
    .restart local v7    # "wallpaperEnabled":Z
    goto :goto_0

    #@4a
    .line 5806
    .restart local v0    # "N":I
    .restart local v5    # "i":I
    .restart local v6    # "w":Lcom/android/server/wm/WindowState;
    .restart local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@4d
    move-result v9

    #@4e
    if-nez v9, :cond_0

    #@50
    .line 5807
    return v11

    #@51
    .line 5812
    :cond_5
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@53
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@55
    const/4 v10, 0x2

    #@56
    if-ne v9, v10, :cond_6

    #@58
    .line 5813
    const/4 v1, 0x1

    #@59
    goto :goto_2

    #@5a
    .line 5814
    :cond_6
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5c
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@5e
    const/16 v10, 0x7dd

    #@60
    if-ne v9, v10, :cond_7

    #@62
    .line 5815
    const/4 v4, 0x1

    #@63
    goto :goto_2

    #@64
    .line 5816
    :cond_7
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@66
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@68
    const/16 v10, 0x7d0

    #@6a
    if-ne v9, v10, :cond_1

    #@6c
    .line 5817
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6e
    invoke-interface {v9}, Landroid/view/WindowManagerPolicy;->isKeyguardDrawnLw()Z

    #@71
    move-result v3

    #@72
    .local v3, "haveKeyguard":Z
    goto :goto_2

    #@73
    .line 5831
    .end local v3    # "haveKeyguard":Z
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    :cond_8
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@75
    if-nez v9, :cond_9

    #@77
    if-eqz v2, :cond_c

    #@79
    .line 5838
    :cond_9
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@7b
    if-eqz v9, :cond_b

    #@7d
    if-nez v1, :cond_a

    #@7f
    if-eqz v3, :cond_d

    #@81
    .line 5839
    :cond_a
    if-eqz v7, :cond_b

    #@83
    if-eqz v4, :cond_d

    #@85
    .line 5843
    :cond_b
    const/4 v9, 0x0

    #@86
    return v9

    #@87
    .line 5832
    :cond_c
    return v11

    #@88
    .line 5840
    :cond_d
    return v11
.end method

.method private computeCompatSmallestWidth(ZILandroid/util/DisplayMetrics;II)I
    .locals 15
    .param p1, "rotated"    # Z
    .param p2, "uiMode"    # I
    .param p3, "dm"    # Landroid/util/DisplayMetrics;
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    #@0
    .prologue
    .line 7309
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@2
    move-object/from16 v0, p3

    #@4
    invoke-virtual {v1, v0}, Landroid/util/DisplayMetrics;->setTo(Landroid/util/DisplayMetrics;)V

    #@7
    .line 7310
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    #@9
    .line 7312
    .local v5, "tmpDm":Landroid/util/DisplayMetrics;
    if-eqz p1, :cond_0

    #@b
    .line 7313
    move/from16 v6, p5

    #@d
    .line 7314
    .local v6, "unrotDw":I
    move/from16 v7, p4

    #@f
    .line 7319
    .local v7, "unrotDh":I
    :goto_0
    const/4 v2, 0x0

    #@10
    const/4 v3, 0x0

    #@11
    move-object v1, p0

    #@12
    move/from16 v4, p2

    #@14
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    #@17
    move-result v9

    #@18
    .line 7320
    .local v9, "sw":I
    const/4 v10, 0x1

    #@19
    move-object v8, p0

    #@1a
    move/from16 v11, p2

    #@1c
    move-object v12, v5

    #@1d
    move v13, v7

    #@1e
    move v14, v6

    #@1f
    invoke-direct/range {v8 .. v14}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    #@22
    move-result v9

    #@23
    .line 7321
    const/4 v3, 0x2

    #@24
    move-object v1, p0

    #@25
    move v2, v9

    #@26
    move/from16 v4, p2

    #@28
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    #@2b
    move-result v9

    #@2c
    .line 7322
    const/4 v10, 0x3

    #@2d
    move-object v8, p0

    #@2e
    move/from16 v11, p2

    #@30
    move-object v12, v5

    #@31
    move v13, v7

    #@32
    move v14, v6

    #@33
    invoke-direct/range {v8 .. v14}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    #@36
    move-result v9

    #@37
    .line 7323
    return v9

    #@38
    .line 7316
    .end local v6    # "unrotDw":I
    .end local v7    # "unrotDh":I
    .end local v9    # "sw":I
    :cond_0
    move/from16 v6, p4

    #@3a
    .line 7317
    .restart local v6    # "unrotDw":I
    move/from16 v7, p5

    #@3c
    .restart local v7    # "unrotDh":I
    goto :goto_0
.end method

.method private computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .locals 6

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 9643
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@3
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@6
    move-result v1

    #@7
    .line 9644
    .local v1, "displayCount":I
    const/4 v2, 0x0

    #@8
    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_1

    #@a
    .line 9645
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@f
    move-result-object v0

    #@10
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@12
    .line 9646
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    #@15
    move-result-object v3

    #@16
    .line 9647
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_0

    #@18
    .line 9648
    return-object v3

    #@19
    .line 9644
    :cond_0
    add-int/lit8 v2, v2, 0x1

    #@1b
    goto :goto_0

    #@1c
    .line 9651
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    return-object v5
.end method

.method private computeNewConfigurationLocked()Landroid/content/res/Configuration;
    .locals 2

    #@0
    .prologue
    .line 7213
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@2
    if-nez v1, :cond_0

    #@4
    .line 7214
    const/4 v1, 0x0

    #@5
    return-object v1

    #@6
    .line 7216
    :cond_0
    new-instance v0, Landroid/content/res/Configuration;

    #@8
    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    #@b
    .line 7217
    .local v0, "config":Landroid/content/res/Configuration;
    const/4 v1, 0x0

    #@c
    iput v1, v0, Landroid/content/res/Configuration;->fontScale:F

    #@e
    .line 7218
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@11
    .line 7219
    return-object v0
.end method

.method private computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIIFLandroid/content/res/Configuration;)V
    .locals 14
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotated"    # Z
    .param p3, "uiMode"    # I
    .param p4, "dw"    # I
    .param p5, "dh"    # I
    .param p6, "density"    # F
    .param p7, "outConfig"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 7270
    if-eqz p2, :cond_0

    #@2
    .line 7271
    move/from16 v5, p5

    #@4
    .line 7272
    .local v5, "unrotDw":I
    move/from16 v6, p4

    #@6
    .line 7277
    .local v6, "unrotDh":I
    :goto_0
    const/high16 v1, 0x40000000    # 2.0f

    #@8
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@a
    .line 7278
    const/high16 v1, 0x40000000    # 2.0f

    #@c
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    #@e
    .line 7279
    const/4 v1, 0x0

    #@f
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    #@11
    .line 7280
    const/4 v1, 0x0

    #@12
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    #@14
    .line 7281
    const/4 v3, 0x0

    #@15
    move-object v1, p0

    #@16
    move-object v2, p1

    #@17
    move/from16 v4, p3

    #@19
    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    #@1c
    .line 7282
    const/4 v9, 0x1

    #@1d
    move-object v7, p0

    #@1e
    move-object v8, p1

    #@1f
    move/from16 v10, p3

    #@21
    move v11, v6

    #@22
    move v12, v5

    #@23
    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    #@26
    .line 7283
    const/4 v3, 0x2

    #@27
    move-object v1, p0

    #@28
    move-object v2, p1

    #@29
    move/from16 v4, p3

    #@2b
    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    #@2e
    .line 7284
    const/4 v9, 0x3

    #@2f
    move-object v7, p0

    #@30
    move-object v8, p1

    #@31
    move/from16 v10, p3

    #@33
    move v11, v6

    #@34
    move v12, v5

    #@35
    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    #@38
    .line 7285
    move-object/from16 v0, p7

    #@3a
    iget v1, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@3c
    invoke-static {v1}, Landroid/content/res/Configuration;->resetScreenLayout(I)I

    #@3f
    move-result v2

    #@40
    .line 7286
    .local v2, "sl":I
    const/4 v3, 0x0

    #@41
    move-object v1, p0

    #@42
    move/from16 v4, p6

    #@44
    move/from16 v7, p3

    #@46
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    #@49
    move-result v2

    #@4a
    .line 7287
    const/4 v9, 0x1

    #@4b
    move-object v7, p0

    #@4c
    move v8, v2

    #@4d
    move/from16 v10, p6

    #@4f
    move v11, v6

    #@50
    move v12, v5

    #@51
    move/from16 v13, p3

    #@53
    invoke-direct/range {v7 .. v13}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    #@56
    move-result v2

    #@57
    .line 7288
    const/4 v3, 0x2

    #@58
    move-object v1, p0

    #@59
    move/from16 v4, p6

    #@5b
    move/from16 v7, p3

    #@5d
    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    #@60
    move-result v2

    #@61
    .line 7289
    const/4 v9, 0x3

    #@62
    move-object v7, p0

    #@63
    move v8, v2

    #@64
    move/from16 v10, p6

    #@66
    move v11, v6

    #@67
    move v12, v5

    #@68
    move/from16 v13, p3

    #@6a
    invoke-direct/range {v7 .. v13}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    #@6d
    move-result v2

    #@6e
    .line 7290
    iget v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    #@70
    int-to-float v1, v1

    #@71
    div-float v1, v1, p6

    #@73
    float-to-int v1, v1

    #@74
    move-object/from16 v0, p7

    #@76
    iput v1, v0, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    #@78
    .line 7291
    move-object/from16 v0, p7

    #@7a
    iput v2, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@7c
    .line 7262
    return-void

    #@7d
    .line 7274
    .end local v2    # "sl":I
    .end local v5    # "unrotDw":I
    .end local v6    # "unrotDh":I
    :cond_0
    move/from16 v5, p4

    #@7f
    .line 7275
    .restart local v5    # "unrotDw":I
    move/from16 v6, p5

    #@81
    .restart local v6    # "unrotDh":I
    goto :goto_0
.end method

.method private configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 9038
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@5
    move-result-object v1

    #@6
    .line 9039
    iget v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@8
    .line 9040
    iget v3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@a
    .line 9041
    iget v4, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@c
    .line 9038
    invoke-interface {v0, v1, v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setInitialDisplaySize(Landroid/view/Display;III)V

    #@f
    .line 9043
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@12
    move-result-object v6

    #@13
    .line 9044
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@15
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@18
    move-result-object v1

    #@19
    .line 9045
    iget v2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    #@1b
    iget v3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    #@1d
    .line 9046
    iget v4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    #@1f
    iget v5, v6, Landroid/view/DisplayInfo;->overscanBottom:I

    #@21
    .line 9044
    invoke-interface/range {v0 .. v5}, Landroid/view/WindowManagerPolicy;->setDisplayOverscan(Landroid/view/Display;IIII)V

    #@24
    .line 9037
    return-void
.end method

.method private static convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V
    .locals 2
    .param p0, "crop"    # Landroid/graphics/Rect;
    .param p1, "rot"    # I
    .param p2, "dw"    # I
    .param p3, "dh"    # I

    #@0
    .prologue
    .line 6122
    const/4 v1, 0x1

    #@1
    if-ne p1, v1, :cond_1

    #@3
    .line 6123
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@5
    .line 6124
    .local v0, "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->right:I

    #@7
    sub-int v1, p2, v1

    #@9
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@b
    .line 6125
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@d
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@f
    .line 6126
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@11
    sub-int v1, p2, v1

    #@13
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@15
    .line 6127
    iput v0, p0, Landroid/graphics/Rect;->left:I

    #@17
    .line 6121
    .end local v0    # "tmp":I
    :cond_0
    :goto_0
    return-void

    #@18
    .line 6128
    :cond_1
    const/4 v1, 0x2

    #@19
    if-ne p1, v1, :cond_2

    #@1b
    .line 6129
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@1d
    .line 6130
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@1f
    sub-int v1, p3, v1

    #@21
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@23
    .line 6131
    sub-int v1, p3, v0

    #@25
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@27
    .line 6132
    iget v0, p0, Landroid/graphics/Rect;->right:I

    #@29
    .line 6133
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@2b
    sub-int v1, p2, v1

    #@2d
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@2f
    .line 6134
    sub-int v1, p2, v0

    #@31
    iput v1, p0, Landroid/graphics/Rect;->left:I

    #@33
    goto :goto_0

    #@34
    .line 6135
    .end local v0    # "tmp":I
    :cond_2
    const/4 v1, 0x3

    #@35
    if-ne p1, v1, :cond_0

    #@37
    .line 6136
    iget v0, p0, Landroid/graphics/Rect;->top:I

    #@39
    .line 6137
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->left:I

    #@3b
    iput v1, p0, Landroid/graphics/Rect;->top:I

    #@3d
    .line 6138
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    #@3f
    sub-int v1, p3, v1

    #@41
    iput v1, p0, Landroid/graphics/Rect;->left:I

    #@43
    .line 6139
    iget v1, p0, Landroid/graphics/Rect;->right:I

    #@45
    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    #@47
    .line 6140
    sub-int v1, p3, v0

    #@49
    iput v1, p0, Landroid/graphics/Rect;->right:I

    #@4b
    goto :goto_0
.end method

.method private createSurfaceControl(Landroid/view/Surface;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I
    .locals 2
    .param p1, "outSurface"    # Landroid/view/Surface;
    .param p2, "result"    # I
    .param p3, "win"    # Lcom/android/server/wm/WindowState;
    .param p4, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    #@0
    .prologue
    .line 3029
    iget-boolean v1, p3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@2
    if-nez v1, :cond_0

    #@4
    .line 3030
    or-int/lit8 p2, p2, 0x4

    #@6
    .line 3032
    :cond_0
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->createSurfaceLocked()Lcom/android/server/wm/WindowSurfaceController;

    #@9
    move-result-object v0

    #@a
    .line 3033
    .local v0, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-eqz v0, :cond_1

    #@c
    .line 3034
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowSurfaceController;->getSurface(Landroid/view/Surface;)V

    #@f
    .line 3041
    :goto_0
    return p2

    #@10
    .line 3039
    :cond_1
    invoke-virtual {p1}, Landroid/view/Surface;->release()V

    #@13
    goto :goto_0
.end method

.method private createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;
    .locals 9
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "userId"    # I
    .param p4, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p5, "bounds"    # Landroid/graphics/Rect;
    .param p6, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v7, 0x0

    #@2
    .line 3407
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@4
    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@7
    move-result-object v2

    #@8
    check-cast v2, Lcom/android/server/wm/TaskStack;

    #@a
    .line 3408
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_0

    #@c
    .line 3409
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@e
    new-instance v3, Ljava/lang/StringBuilder;

    #@10
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@13
    const-string/jumbo v4, "addAppToken: invalid stackId="

    #@16
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v3

    #@1a
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v3

    #@1e
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21
    move-result-object v3

    #@22
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@25
    throw v1

    #@26
    .line 3411
    :cond_0
    const/4 v1, 0x2

    #@27
    new-array v1, v1, [Ljava/lang/Object;

    #@29
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@2c
    move-result-object v3

    #@2d
    aput-object v3, v1, v7

    #@2f
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@32
    move-result-object v3

    #@33
    aput-object v3, v1, v8

    #@35
    const/16 v3, 0x7919

    #@37
    invoke-static {v3, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    #@3a
    .line 3412
    new-instance v0, Lcom/android/server/wm/Task;

    #@3c
    move v1, p1

    #@3d
    move v3, p3

    #@3e
    move-object v4, p0

    #@3f
    move-object v5, p5

    #@40
    move-object v6, p6

    #@41
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/Task;-><init>(ILcom/android/server/wm/TaskStack;ILcom/android/server/wm/WindowManagerService;Landroid/graphics/Rect;Landroid/content/res/Configuration;)V

    #@44
    .line 3413
    .local v0, "task":Lcom/android/server/wm/Task;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@46
    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@49
    .line 3414
    iget-boolean v1, p4, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@4b
    if-eqz v1, :cond_1

    #@4d
    move v1, v7

    #@4e
    :goto_0
    iget-boolean v3, p4, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    #@50
    invoke-virtual {v2, v0, v1, v3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;ZZ)V

    #@53
    .line 3415
    return-object v0

    #@54
    :cond_1
    move v1, v8

    #@55
    .line 3414
    goto :goto_0
.end method

.method static dipToPixel(ILandroid/util/DisplayMetrics;)I
    .locals 2
    .param p0, "dip"    # I
    .param p1, "displayMetrics"    # Landroid/util/DisplayMetrics;

    #@0
    .prologue
    .line 10970
    int-to-float v0, p0

    #@1
    const/4 v1, 0x1

    #@2
    invoke-static {v1, v0, p1}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    #@5
    move-result v0

    #@6
    float-to-int v0, v0

    #@7
    return v0
.end method

.method private displayReady(I)V
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 7915
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 7916
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 7917
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    .line 7918
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@b
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->addDisplayLocked(I)V

    #@e
    .line 7919
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->initializeDisplayBaseInfo()V

    #@11
    .line 7920
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@13
    if-eqz v1, :cond_0

    #@15
    .line 7921
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@17
    invoke-virtual {v1}, Lcom/android/server/wm/TaskTapPointerEventListener;->init()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1a
    :cond_0
    monitor-exit v2

    #@1b
    .line 7914
    return-void

    #@1c
    .line 7915
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1d
    monitor-exit v2

    #@1e
    throw v1
.end method

.method private static excludeWindowTypeFromTapOutTask(I)Z
    .locals 1
    .param p0, "windowType"    # I

    #@0
    .prologue
    .line 1840
    sparse-switch p0, :sswitch_data_0

    #@3
    .line 1846
    const/4 v0, 0x0

    #@4
    return v0

    #@5
    .line 1844
    :sswitch_0
    const/4 v0, 0x1

    #@6
    return v0

    #@7
    .line 1840
    nop

    #@8
    :sswitch_data_0
    .sparse-switch
        0x7d0 -> :sswitch_0
        0x7dc -> :sswitch_0
        0x7e3 -> :sswitch_0
    .end sparse-switch
.end method

.method private findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I
    .locals 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1098
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v2

    #@4
    .line 1099
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@7
    move-result v3

    #@8
    add-int/lit8 v0, v3, -0x1

    #@a
    .local v0, "j":I
    :goto_0
    if-ltz v0, :cond_1

    #@c
    .line 1100
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v1

    #@10
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@12
    .line 1101
    .local v1, "wentry":Lcom/android/server/wm/WindowState;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@14
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@16
    if-ne v3, v4, :cond_0

    #@18
    .line 1102
    return v0

    #@19
    .line 1099
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@1b
    goto :goto_0

    #@1c
    .line 1105
    .end local v1    # "wentry":Lcom/android/server/wm/WindowState;
    :cond_1
    const/4 v3, -0x1

    #@1d
    return v3
.end method

.method private findWindow(I)Lcom/android/server/wm/WindowState;
    .locals 8
    .param p1, "hashCode"    # I

    #@0
    .prologue
    .line 7173
    const/4 v6, -0x1

    #@1
    if-ne p1, v6, :cond_0

    #@3
    .line 7175
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@6
    move-result-object v6

    #@7
    return-object v6

    #@8
    .line 7178
    :cond_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@a
    monitor-enter v7

    #@b
    .line 7179
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@d
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    #@10
    move-result v1

    #@11
    .line 7180
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    #@12
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v1, :cond_3

    #@14
    .line 7181
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@16
    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@19
    move-result-object v6

    #@1a
    check-cast v6, Lcom/android/server/wm/DisplayContent;

    #@1c
    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1f
    move-result-object v5

    #@20
    .line 7182
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@23
    move-result v2

    #@24
    .line 7183
    .local v2, "numWindows":I
    const/4 v4, 0x0

    #@25
    .local v4, "winNdx":I
    :goto_1
    if-ge v4, v2, :cond_2

    #@27
    .line 7184
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2a
    move-result-object v3

    #@2b
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@2d
    .line 7185
    .local v3, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@30
    move-result v6

    #@31
    if-ne v6, p1, :cond_1

    #@33
    monitor-exit v7

    #@34
    .line 7186
    return-object v3

    #@35
    .line 7183
    :cond_1
    add-int/lit8 v4, v4, 0x1

    #@37
    goto :goto_1

    #@38
    .line 7180
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v0, v0, 0x1

    #@3a
    goto :goto_0

    #@3b
    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    monitor-exit v7

    #@3c
    .line 7192
    const/4 v6, 0x0

    #@3d
    return-object v6

    #@3e
    .line 7178
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_0
    move-exception v6

    #@3f
    monitor-exit v7

    #@40
    throw v6
.end method

.method private finishPositioning()V
    .locals 3

    #@0
    .prologue
    .line 7605
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 7606
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 7607
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@9
    invoke-virtual {v0}, Lcom/android/server/wm/TaskPositioner;->unregister()V

    #@c
    .line 7608
    const/4 v0, 0x0

    #@d
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@f
    .line 7609
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@11
    const/4 v2, 0x1

    #@12
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15
    :cond_0
    monitor-exit v1

    #@16
    .line 7601
    return-void

    #@17
    .line 7605
    :catchall_0
    move-exception v0

    #@18
    monitor-exit v1

    #@19
    throw v0
.end method

.method static fixScale(F)F
    .locals 1
    .param p0, "scale"    # F

    #@0
    .prologue
    .line 5500
    const/4 v0, 0x0

    #@1
    cmpg-float v0, p0, v0

    #@3
    if-gez v0, :cond_1

    #@5
    const/4 p0, 0x0

    #@6
    .line 5502
    :cond_0
    :goto_0
    invoke-static {p0}, Ljava/lang/Math;->abs(F)F

    #@9
    move-result v0

    #@a
    return v0

    #@b
    .line 5501
    :cond_1
    const/high16 v0, 0x41a00000    # 20.0f

    #@d
    cmpl-float v0, p0, v0

    #@f
    if-lez v0, :cond_0

    #@11
    const/high16 p0, 0x41a00000    # 20.0f

    #@13
    goto :goto_0
.end method

.method private getAppSpecifiedOrientation()I
    .locals 14

    #@0
    .prologue
    .line 3567
    const/4 v7, -0x1

    #@1
    .line 3568
    .local v7, "lastOrientation":I
    const/4 v3, 0x0

    #@2
    .line 3569
    .local v3, "findingBehind":Z
    const/4 v6, 0x0

    #@3
    .line 3570
    .local v6, "lastFullscreen":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v1

    #@7
    .line 3571
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@a
    move-result-object v10

    #@b
    .line 3572
    .local v10, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/4 v13, 0x3

    #@c
    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    #@f
    move-result v13

    #@10
    if-nez v13, :cond_1

    #@12
    .line 3573
    const/4 v13, 0x2

    #@13
    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    #@16
    move-result v5

    #@17
    .line 3575
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1a
    move-result-object v13

    #@1b
    iget-object v13, v13, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@1d
    invoke-virtual {v13}, Lcom/android/server/wm/DockedStackDividerController;->isMinimizedDock()Z

    #@20
    move-result v2

    #@21
    .line 3576
    .local v2, "dockMinimized":Z
    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    #@24
    move-result v13

    #@25
    add-int/lit8 v9, v13, -0x1

    #@27
    .end local v3    # "findingBehind":Z
    .end local v6    # "lastFullscreen":Z
    .local v9, "taskNdx":I
    :goto_1
    if-ltz v9, :cond_b

    #@29
    .line 3577
    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@2c
    move-result-object v13

    #@2d
    check-cast v13, Lcom/android/server/wm/Task;

    #@2f
    iget-object v12, v13, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@31
    .line 3578
    .local v12, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v12}, Lcom/android/server/wm/AppTokenList;->size()I

    #@34
    move-result v13

    #@35
    add-int/lit8 v4, v13, -0x1

    #@37
    .line 3579
    .local v4, "firstToken":I
    move v11, v4

    #@38
    .local v11, "tokenNdx":I
    :goto_2
    if-ltz v11, :cond_a

    #@3a
    .line 3580
    invoke-virtual {v12, v11}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v0

    #@3e
    check-cast v0, Lcom/android/server/wm/AppWindowToken;

    #@40
    .line 3586
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v3, :cond_0

    #@42
    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@44
    if-eqz v13, :cond_2

    #@46
    .line 3592
    :cond_0
    if-ne v11, v4, :cond_4

    #@48
    .line 3596
    const/4 v13, 0x3

    #@49
    if-eq v7, v13, :cond_4

    #@4b
    if-eqz v6, :cond_4

    #@4d
    .line 3599
    return v7

    #@4e
    .line 3572
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "dockMinimized":Z
    .end local v4    # "firstToken":I
    .end local v9    # "taskNdx":I
    .end local v11    # "tokenNdx":I
    .end local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    .restart local v3    # "findingBehind":Z
    .restart local v6    # "lastFullscreen":Z
    :cond_1
    const/4 v5, 0x1

    #@4f
    .local v5, "inMultiWindow":Z
    goto :goto_0

    #@50
    .line 3586
    .end local v3    # "findingBehind":Z
    .end local v5    # "inMultiWindow":Z
    .end local v6    # "lastFullscreen":Z
    .restart local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v2    # "dockMinimized":Z
    .restart local v4    # "firstToken":I
    .restart local v9    # "taskNdx":I
    .restart local v11    # "tokenNdx":I
    .restart local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_2
    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@52
    if-eqz v13, :cond_0

    #@54
    .line 3579
    :cond_3
    :goto_3
    add-int/lit8 v11, v11, -0x1

    #@56
    goto :goto_2

    #@57
    .line 3604
    :cond_4
    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@59
    if-nez v13, :cond_3

    #@5b
    .line 3613
    if-eqz v5, :cond_5

    #@5d
    iget-object v13, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@5f
    invoke-virtual {v13}, Lcom/android/server/wm/Task;->isHomeTask()Z

    #@62
    move-result v13

    #@63
    if-eqz v13, :cond_3

    #@65
    if-eqz v2, :cond_3

    #@67
    .line 3617
    :cond_5
    if-nez v11, :cond_6

    #@69
    .line 3619
    iget v7, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@6b
    .line 3622
    :cond_6
    iget v8, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@6d
    .line 3626
    .local v8, "or":I
    iget-boolean v6, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@6f
    .line 3627
    .local v6, "lastFullscreen":Z
    if-eqz v6, :cond_7

    #@71
    const/4 v13, 0x3

    #@72
    if-eq v8, v13, :cond_7

    #@74
    .line 3630
    return v8

    #@75
    .line 3633
    :cond_7
    const/4 v13, -0x1

    #@76
    if-eq v8, v13, :cond_8

    #@78
    const/4 v13, 0x3

    #@79
    if-eq v8, v13, :cond_8

    #@7b
    .line 3636
    return v8

    #@7c
    .line 3638
    :cond_8
    const/4 v13, 0x3

    #@7d
    if-ne v8, v13, :cond_9

    #@7f
    const/4 v13, 0x1

    #@80
    :goto_4
    or-int/2addr v3, v13

    #@81
    .local v3, "findingBehind":Z
    goto :goto_3

    #@82
    .end local v3    # "findingBehind":Z
    :cond_9
    const/4 v13, 0x0

    #@83
    goto :goto_4

    #@84
    .line 3576
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "lastFullscreen":Z
    .end local v8    # "or":I
    :cond_a
    add-int/lit8 v9, v9, -0x1

    #@86
    goto :goto_1

    #@87
    .line 3647
    .end local v4    # "firstToken":I
    .end local v11    # "tokenNdx":I
    .end local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_b
    if-eqz v5, :cond_c

    #@89
    const/4 v13, -0x1

    #@8a
    :goto_5
    return v13

    #@8b
    :cond_c
    iget v13, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@8d
    goto :goto_5
.end method

.method private getFocusedWindow()Lcom/android/server/wm/WindowState;
    .locals 2

    #@0
    .prologue
    .line 7779
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 7780
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    move-result-object v1

    #@7
    monitor-exit v0

    #@8
    return-object v1

    #@9
    .line 7779
    :catchall_0
    move-exception v1

    #@a
    monitor-exit v0

    #@b
    throw v1
.end method

.method private getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .locals 1

    #@0
    .prologue
    .line 7785
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@2
    return-object v0
.end method

.method private getForcedDisplayDensityForUserLocked(I)I
    .locals 6
    .param p1, "userId"    # I

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v4, 0x0

    #@2
    .line 8984
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@7
    move-result-object v2

    #@8
    .line 8985
    const-string/jumbo v3, "display_density_forced"

    #@b
    .line 8984
    invoke-static {v2, v3, p1}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    #@e
    move-result-object v0

    #@f
    .line 8986
    .local v0, "densityStr":Ljava/lang/String;
    if-eqz v0, :cond_0

    #@11
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    #@14
    move-result v2

    #@15
    if-nez v2, :cond_1

    #@17
    .line 8987
    :cond_0
    const-string/jumbo v2, "ro.config.density_override"

    #@1a
    invoke-static {v2, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1d
    move-result-object v0

    #@1e
    .line 8989
    :cond_1
    if-eqz v0, :cond_2

    #@20
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    #@23
    move-result v2

    #@24
    if-lez v2, :cond_2

    #@26
    .line 8991
    :try_start_0
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@29
    move-result v2

    #@2a
    return v2

    #@2b
    .line 8992
    :catch_0
    move-exception v1

    #@2c
    .line 8995
    :cond_2
    return v4
.end method

.method private getNonDecorInsetsLocked(Landroid/graphics/Rect;)V
    .locals 5
    .param p1, "outInsets"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11008
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@3
    move-result-object v0

    #@4
    .line 11009
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6
    iget v2, v0, Landroid/view/DisplayInfo;->rotation:I

    #@8
    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@a
    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@c
    invoke-interface {v1, v2, v3, v4, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorInsetsLw(IIILandroid/graphics/Rect;)V

    #@f
    .line 11007
    return-void
.end method

.method static getPropertyInt([Ljava/lang/String;IIILandroid/util/DisplayMetrics;)I
    .locals 4
    .param p0, "tokens"    # [Ljava/lang/String;
    .param p1, "index"    # I
    .param p2, "defUnits"    # I
    .param p3, "defDps"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;

    #@0
    .prologue
    .line 9884
    array-length v3, p0

    #@1
    if-ge p1, v3, :cond_0

    #@3
    .line 9885
    aget-object v1, p0, p1

    #@5
    .line 9886
    .local v1, "str":Ljava/lang/String;
    if-eqz v1, :cond_0

    #@7
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    #@a
    move-result v3

    #@b
    if-lez v3, :cond_0

    #@d
    .line 9888
    :try_start_0
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    #@10
    move-result v2

    #@11
    .line 9889
    .local v2, "val":I
    return v2

    #@12
    .line 9890
    .end local v2    # "val":I
    :catch_0
    move-exception v0

    #@13
    .line 9894
    .end local v1    # "str":Ljava/lang/String;
    :cond_0
    if-nez p2, :cond_1

    #@15
    .line 9895
    return p3

    #@16
    .line 9897
    :cond_1
    int-to-float v3, p3

    #@17
    invoke-static {p2, v3, p4}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    #@1a
    move-result v3

    #@1b
    float-to-int v2, v3

    #@1c
    .line 9898
    .restart local v2    # "val":I
    return v2
.end method

.method private getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;
    .locals 5
    .param p1, "token"    # Lcom/android/server/wm/WindowToken;
    .param p2, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 1115
    new-instance v3, Lcom/android/server/wm/WindowList;

    #@2
    invoke-direct {v3}, Lcom/android/server/wm/WindowList;-><init>()V

    #@5
    .line 1116
    .local v3, "windowList":Lcom/android/server/wm/WindowList;
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@7
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@a
    move-result v0

    #@b
    .line 1117
    .local v0, "count":I
    const/4 v1, 0x0

    #@c
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@e
    .line 1118
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@10
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@13
    move-result-object v2

    #@14
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@16
    .line 1119
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@19
    move-result-object v4

    #@1a
    if-ne v4, p2, :cond_0

    #@1c
    .line 1120
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@1f
    .line 1117
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@21
    goto :goto_0

    #@22
    .line 1123
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    return-object v3
.end method

.method private handleDisplayChangedLocked(I)V
    .locals 2
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 10806
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    .line 10807
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@6
    .line 10808
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    #@9
    .line 10810
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@b
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    #@e
    .line 10805
    return-void
.end method

.method private handleDisplayRemovedLocked(I)V
    .locals 2
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 10783
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    .line 10784
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@6
    .line 10785
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isAnimating()Z

    #@9
    move-result v1

    #@a
    if-eqz v1, :cond_0

    #@c
    .line 10786
    const/4 v1, 0x1

    #@d
    iput-boolean v1, v0, Lcom/android/server/wm/DisplayContent;->mDeferredRemoval:Z

    #@f
    .line 10787
    return-void

    #@10
    .line 10790
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@12
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->delete(I)V

    #@15
    .line 10791
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->close()V

    #@18
    .line 10792
    if-nez p1, :cond_1

    #@1a
    .line 10793
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@1c
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@1f
    .line 10794
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@21
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@24
    .line 10797
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@26
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->removeDisplayLocked(I)V

    #@29
    .line 10798
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@2b
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    #@2e
    .line 10782
    return-void
.end method

.method private handleTapOutsideTask(Lcom/android/server/wm/DisplayContent;II)V
    .locals 8
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "x"    # I
    .param p3, "y"    # I

    #@0
    .prologue
    .line 7533
    const/4 v2, -0x1

    #@1
    .line 7534
    .local v2, "taskId":I
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v4

    #@4
    .line 7535
    :try_start_0
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->findTaskForControlPoint(II)Lcom/android/server/wm/Task;

    #@7
    move-result-object v1

    #@8
    .line 7536
    .local v1, "task":Lcom/android/server/wm/Task;
    if-eqz v1, :cond_2

    #@a
    .line 7538
    invoke-virtual {v1}, Lcom/android/server/wm/Task;->getTopVisibleAppMainWindow()Lcom/android/server/wm/WindowState;

    #@d
    move-result-object v3

    #@e
    int-to-float v5, p2

    #@f
    int-to-float v6, p3

    #@10
    const/4 v7, 0x1

    #@11
    .line 7537
    invoke-direct {p0, v3, v7, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@14
    move-result v3

    #@15
    if-nez v3, :cond_0

    #@17
    monitor-exit v4

    #@18
    .line 7539
    return-void

    #@19
    .line 7541
    :cond_0
    :try_start_1
    iget v2, v1, Lcom/android/server/wm/Task;->mTaskId:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1b
    :goto_0
    monitor-exit v4

    #@1c
    .line 7546
    if-ltz v2, :cond_1

    #@1e
    .line 7548
    :try_start_2
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@20
    invoke-interface {v3, v2}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    #@23
    .line 7532
    :cond_1
    :goto_1
    return-void

    #@24
    .line 7543
    :cond_2
    :try_start_3
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->taskIdFromPoint(II)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@27
    move-result v2

    #@28
    goto :goto_0

    #@29
    .line 7534
    .end local v1    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@2a
    monitor-exit v4

    #@2b
    throw v3

    #@2c
    .line 7549
    .restart local v1    # "task":Lcom/android/server/wm/Task;
    :catch_0
    move-exception v0

    #@2d
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method private indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I
    .locals 3
    .param p1, "targetWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "windows"    # Lcom/android/server/wm/WindowList;

    #@0
    .prologue
    .line 1133
    invoke-virtual {p2}, Lcom/android/server/wm/WindowList;->size()I

    #@3
    move-result v2

    #@4
    add-int/lit8 v0, v2, -0x1

    #@6
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_2

    #@8
    .line 1134
    invoke-virtual {p2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@b
    move-result-object v1

    #@c
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@e
    .line 1135
    .local v1, "w":Lcom/android/server/wm/WindowState;
    if-ne v1, p1, :cond_0

    #@10
    .line 1136
    return v0

    #@11
    .line 1138
    :cond_0
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@16
    move-result v2

    #@17
    if-nez v2, :cond_1

    #@19
    .line 1139
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@1b
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    #@1e
    move-result v2

    #@1f
    if-ltz v2, :cond_1

    #@21
    .line 1140
    return v0

    #@22
    .line 1133
    :cond_1
    add-int/lit8 v0, v0, -0x1

    #@24
    goto :goto_0

    #@25
    .line 1144
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    const/4 v2, -0x1

    #@26
    return v2
.end method

.method private initPolicy()V
    .locals 4

    #@0
    .prologue
    .line 926
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    #@3
    move-result-object v0

    #@4
    new-instance v1, Lcom/android/server/wm/WindowManagerService$4;

    #@6
    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@9
    .line 933
    const-wide/16 v2, 0x0

    #@b
    .line 926
    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    #@e
    .line 925
    return-void
.end method

.method private isSystemSecure()Z
    .locals 3

    #@0
    .prologue
    .line 6881
    const-string/jumbo v0, "1"

    #@3
    const-string/jumbo v1, "ro.secure"

    #@6
    const-string/jumbo v2, "1"

    #@9
    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@c
    move-result-object v1

    #@d
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@10
    move-result v0

    #@11
    if-eqz v0, :cond_0

    #@13
    .line 6882
    const-string/jumbo v0, "0"

    #@16
    const-string/jumbo v1, "ro.debuggable"

    #@19
    const-string/jumbo v2, "0"

    #@1c
    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1f
    move-result-object v1

    #@20
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@23
    move-result v0

    #@24
    .line 6881
    :goto_0
    return v0

    #@25
    :cond_0
    const/4 v0, 0x0

    #@26
    goto :goto_0
.end method

.method static logSurface(Landroid/view/SurfaceControl;Ljava/lang/String;Ljava/lang/String;)V
    .locals 3
    .param p0, "s"    # Landroid/view/SurfaceControl;
    .param p1, "title"    # Ljava/lang/String;
    .param p2, "msg"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2587
    new-instance v1, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    const-string/jumbo v2, "  SURFACE "

    #@8
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b
    move-result-object v1

    #@c
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v1

    #@10
    const-string/jumbo v2, ": "

    #@13
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v1

    #@17
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v1

    #@1b
    const-string/jumbo v2, " / "

    #@1e
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@21
    move-result-object v1

    #@22
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v1

    #@26
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v0

    #@2a
    .line 2588
    .local v0, "str":Ljava/lang/String;
    const-string/jumbo v1, "WindowManager"

    #@2d
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@30
    .line 2586
    return-void
.end method

.method static logSurface(Lcom/android/server/wm/WindowState;Ljava/lang/String;Z)V
    .locals 3
    .param p0, "w"    # Lcom/android/server/wm/WindowState;
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "withStackTrace"    # Z

    #@0
    .prologue
    .line 2578
    new-instance v1, Ljava/lang/StringBuilder;

    #@2
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@5
    const-string/jumbo v2, "  SURFACE "

    #@8
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b
    move-result-object v1

    #@c
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v1

    #@10
    const-string/jumbo v2, ": "

    #@13
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@16
    move-result-object v1

    #@17
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v1

    #@1b
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1e
    move-result-object v0

    #@1f
    .line 2579
    .local v0, "str":Ljava/lang/String;
    if-eqz p2, :cond_0

    #@21
    .line 2580
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@23
    invoke-static {v1, v0}, Lcom/android/server/wm/WindowManagerService;->logWithStack(Ljava/lang/String;Ljava/lang/String;)V

    #@26
    .line 2577
    :goto_0
    return-void

    #@27
    .line 2582
    :cond_0
    const-string/jumbo v1, "WindowManager"

    #@2a
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@2d
    goto :goto_0
.end method

.method static logWithStack(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .param p0, "tag"    # Ljava/lang/String;
    .param p1, "s"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2592
    const/4 v0, 0x0

    #@1
    .line 2597
    .local v0, "e":Ljava/lang/RuntimeException;
    invoke-static {p0, p1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@4
    .line 2591
    return-void
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)Lcom/android/server/wm/WindowManagerService;
    .locals 8
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "haveInputMethods"    # Z
    .param p3, "showBootMsgs"    # Z
    .param p4, "onlyCore"    # Z

    #@0
    .prologue
    .line 914
    const/4 v0, 0x1

    #@1
    new-array v1, v0, [Lcom/android/server/wm/WindowManagerService;

    #@3
    .line 915
    .local v1, "holder":[Lcom/android/server/wm/WindowManagerService;
    invoke-static {}, Lcom/android/server/DisplayThread;->getHandler()Landroid/os/Handler;

    #@6
    move-result-object v7

    #@7
    new-instance v0, Lcom/android/server/wm/WindowManagerService$3;

    #@9
    move-object v2, p0

    #@a
    move-object v3, p1

    #@b
    move v4, p2

    #@c
    move v5, p3

    #@d
    move v6, p4

    #@e
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService$3;-><init>([Lcom/android/server/wm/WindowManagerService;Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    #@11
    .line 921
    const-wide/16 v2, 0x0

    #@13
    .line 915
    invoke-virtual {v7, v0, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    #@16
    .line 922
    const/4 v0, 0x0

    #@17
    aget-object v0, v1, v0

    #@19
    return-object v0
.end method

.method private newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;
    .locals 7
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 10682
    new-instance v0, Lcom/android/server/wm/DisplayContent;

    #@2
    invoke-direct {v0, p1, p0}, Lcom/android/server/wm/DisplayContent;-><init>(Landroid/view/Display;Lcom/android/server/wm/WindowManagerService;)V

    #@5
    .line 10683
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@8
    move-result v1

    #@9
    .line 10685
    .local v1, "displayId":I
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v4, v1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@e
    .line 10687
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@11
    move-result-object v2

    #@12
    .line 10688
    .local v2, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v3, Landroid/graphics/Rect;

    #@14
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@17
    .line 10689
    .local v3, "rect":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@19
    iget-object v5, v2, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    #@1b
    iget-object v6, v2, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    #@1d
    invoke-virtual {v4, v5, v6, v3}, Lcom/android/server/wm/DisplaySettings;->getOverscanLocked(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Rect;)V

    #@20
    .line 10690
    iget v4, v3, Landroid/graphics/Rect;->left:I

    #@22
    iput v4, v2, Landroid/view/DisplayInfo;->overscanLeft:I

    #@24
    .line 10691
    iget v4, v3, Landroid/graphics/Rect;->top:I

    #@26
    iput v4, v2, Landroid/view/DisplayInfo;->overscanTop:I

    #@28
    .line 10692
    iget v4, v3, Landroid/graphics/Rect;->right:I

    #@2a
    iput v4, v2, Landroid/view/DisplayInfo;->overscanRight:I

    #@2c
    .line 10693
    iget v4, v3, Landroid/graphics/Rect;->bottom:I

    #@2e
    iput v4, v2, Landroid/view/DisplayInfo;->overscanBottom:I

    #@30
    .line 10694
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@32
    invoke-virtual {v4, v1, v2}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    #@35
    .line 10695
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    #@38
    .line 10698
    if-nez v1, :cond_0

    #@3a
    .line 10699
    new-instance v4, Lcom/android/server/wm/TaskTapPointerEventListener;

    #@3c
    invoke-direct {v4, p0, v0}, Lcom/android/server/wm/TaskTapPointerEventListener;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;)V

    #@3f
    iput-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@41
    .line 10700
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    #@43
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@46
    .line 10701
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@48
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@4b
    .line 10704
    :cond_0
    return-object v0
.end method

.method private notifyFocusChanged()V
    .locals 5

    #@0
    .prologue
    .line 7159
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 7160
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v3

    #@9
    if-eqz v3, :cond_0

    #@b
    monitor-exit v4

    #@c
    .line 7161
    return-void

    #@d
    .line 7163
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v3

    #@13
    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@15
    .line 7164
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@17
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    #@1a
    move-result-object v2

    #@1b
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1d
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4

    #@1e
    .line 7166
    array-length v0, v2

    #@1f
    .line 7167
    .local v0, "N":I
    const/4 v1, 0x0

    #@20
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@22
    .line 7168
    aget-object v3, v2, v1

    #@24
    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->focusChanged()V

    #@27
    .line 7167
    add-int/lit8 v1, v1, 0x1

    #@29
    goto :goto_0

    #@2a
    .line 7159
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_0
    move-exception v3

    #@2b
    monitor-exit v4

    #@2c
    throw v3

    #@2d
    .line 7157
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :cond_1
    return-void
.end method

.method private notifyWindowsChanged()V
    .locals 5

    #@0
    .prologue
    .line 7144
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 7145
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v3

    #@9
    if-eqz v3, :cond_0

    #@b
    monitor-exit v4

    #@c
    .line 7146
    return-void

    #@d
    .line 7148
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v3

    #@13
    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@15
    .line 7149
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@17
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    #@1a
    move-result-object v2

    #@1b
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@1d
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4

    #@1e
    .line 7151
    array-length v0, v2

    #@1f
    .line 7152
    .local v0, "N":I
    const/4 v1, 0x0

    #@20
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@22
    .line 7153
    aget-object v3, v2, v1

    #@24
    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->windowsChanged()V

    #@27
    .line 7152
    add-int/lit8 v1, v1, 0x1

    #@29
    goto :goto_0

    #@2a
    .line 7144
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_0
    move-exception v3

    #@2b
    monitor-exit v4

    #@2c
    throw v3

    #@2d
    .line 7142
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :cond_1
    return-void
.end method

.method private onConfigurationChanged()[I
    .locals 6

    #@0
    .prologue
    .line 3790
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->onConfigurationChanged()V

    #@5
    .line 3792
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@8
    move-result-object v0

    #@9
    .line 3793
    .local v0, "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@b
    invoke-virtual {v4, v0}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    #@e
    move-result v4

    #@f
    if-nez v4, :cond_0

    #@11
    .line 3797
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@13
    invoke-virtual {v4, v0}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    #@16
    .line 3799
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@18
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContentList;->size()I

    #@1b
    move-result v4

    #@1c
    add-int/lit8 v1, v4, -0x1

    #@1e
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    #@20
    .line 3800
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@22
    invoke-virtual {v4, v1}, Lcom/android/server/wm/DisplayContentList;->remove(I)Ljava/lang/Object;

    #@25
    move-result-object v4

    #@26
    check-cast v4, Lcom/android/server/wm/DisplayContent;

    #@28
    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@2b
    .line 3799
    add-int/lit8 v1, v1, -0x1

    #@2d
    goto :goto_0

    #@2e
    .line 3803
    :cond_1
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@31
    move-result-object v4

    #@32
    invoke-virtual {v4}, Lcom/android/server/wm/DockedStackDividerController;->onConfigurationChanged()V

    #@35
    .line 3804
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@37
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@3a
    .line 3805
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@3c
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@3f
    move-result v4

    #@40
    add-int/lit8 v3, v4, -0x1

    #@42
    .local v3, "stackNdx":I
    :goto_1
    if-ltz v3, :cond_3

    #@44
    .line 3806
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@46
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@49
    move-result-object v2

    #@4a
    check-cast v2, Lcom/android/server/wm/TaskStack;

    #@4c
    .line 3807
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->onConfigurationChanged()Z

    #@4f
    move-result v4

    #@50
    if-eqz v4, :cond_2

    #@52
    .line 3808
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@54
    iget v5, v2, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@56
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@59
    move-result-object v5

    #@5a
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@5d
    .line 3805
    :cond_2
    add-int/lit8 v3, v3, -0x1

    #@5f
    goto :goto_1

    #@60
    .line 3811
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_3
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@62
    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    #@65
    move-result v4

    #@66
    if-eqz v4, :cond_4

    #@68
    .line 3812
    const/4 v4, 0x0

    #@69
    .line 3811
    :goto_2
    return-object v4

    #@6a
    .line 3812
    :cond_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    #@6c
    invoke-static {v4}, Lcom/android/internal/util/ArrayUtils;->convertToIntArray(Ljava/util/List;)[I

    #@6f
    move-result-object v4

    #@70
    goto :goto_2
.end method

.method private placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1072
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v1

    #@4
    .line 1073
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v0

    #@8
    .line 1077
    .local v0, "i":I
    add-int/lit8 v2, v0, 0x1

    #@a
    invoke-virtual {v1, v2, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@d
    .line 1078
    const/4 v2, 0x1

    #@e
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@10
    .line 1071
    return-void
.end method

.method private placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .locals 5
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1082
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v1

    #@4
    .line 1083
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v0

    #@8
    .line 1087
    .local v0, "i":I
    if-gez v0, :cond_0

    #@a
    .line 1088
    const-string/jumbo v2, "WindowManager"

    #@d
    new-instance v3, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v4, "placeWindowBefore: Unable to find "

    #@15
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v3

    #@19
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v3

    #@1d
    const-string/jumbo v4, " in "

    #@20
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v3

    #@24
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v3

    #@28
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b
    move-result-object v3

    #@2c
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@2f
    .line 1089
    const/4 v0, 0x0

    #@30
    .line 1091
    :cond_0
    invoke-virtual {v1, v0, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@33
    .line 1092
    const/4 v2, 0x1

    #@34
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@36
    .line 1081
    return-void
.end method

.method private prepareFreezingAllTaskBounds()V
    .locals 5

    #@0
    .prologue
    .line 3780
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v4

    #@6
    add-int/lit8 v0, v4, -0x1

    #@8
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    #@a
    .line 3781
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@f
    move-result-object v4

    #@10
    check-cast v4, Lcom/android/server/wm/DisplayContent;

    #@12
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@15
    move-result-object v3

    #@16
    .line 3782
    .local v3, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@19
    move-result v4

    #@1a
    add-int/lit8 v2, v4, -0x1

    #@1c
    .local v2, "stackNdx":I
    :goto_1
    if-ltz v2, :cond_0

    #@1e
    .line 3783
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@21
    move-result-object v1

    #@22
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@24
    .line 3784
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->prepareFreezingTaskBounds()V

    #@27
    .line 3782
    add-int/lit8 v2, v2, -0x1

    #@29
    goto :goto_1

    #@2a
    .line 3780
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@2c
    goto :goto_0

    #@2d
    .line 3779
    .end local v2    # "stackNdx":I
    .end local v3    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    :cond_1
    return-void
.end method

.method private prepareNoneTransitionForRelaunching(Lcom/android/server/wm/AppWindowToken;)V
    .locals 2
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2228
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@3
    if-eqz v0, :cond_0

    #@5
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@7
    invoke-virtual {v0, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@a
    move-result v0

    #@b
    if-eqz v0, :cond_1

    #@d
    .line 2223
    :cond_0
    :goto_0
    return-void

    #@e
    .line 2228
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->isRelaunching()Z

    #@11
    move-result v0

    #@12
    if-eqz v0, :cond_0

    #@14
    .line 2229
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@16
    invoke-virtual {v0, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@19
    .line 2230
    invoke-virtual {p0, v1, v1}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    #@1c
    .line 2231
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    #@1f
    goto :goto_0
.end method

.method private prepareWindowReplacementTransition(Lcom/android/server/wm/AppWindowToken;)Z
    .locals 10
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v9, 0x1

    #@1
    const/4 v5, 0x0

    #@2
    .line 2196
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    #@5
    .line 2197
    const/4 v3, 0x0

    #@6
    .line 2198
    .local v3, "replacedWindow":Lcom/android/server/wm/WindowState;
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@8
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@b
    move-result v4

    #@c
    add-int/lit8 v2, v4, -0x1

    #@e
    .end local v3    # "replacedWindow":Lcom/android/server/wm/WindowState;
    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_1

    #@10
    if-nez v3, :cond_1

    #@12
    .line 2199
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@14
    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@17
    move-result-object v0

    #@18
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@1a
    .line 2200
    .local v0, "candidate":Lcom/android/server/wm/WindowState;
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@1c
    if-eqz v4, :cond_0

    #@1e
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    #@20
    if-eqz v4, :cond_0

    #@22
    .line 2201
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAnimateReplacingWindow:Z

    #@24
    .line 2200
    if-eqz v4, :cond_0

    #@26
    .line 2202
    move-object v3, v0

    #@27
    .line 2198
    :cond_0
    add-int/lit8 v2, v2, -0x1

    #@29
    goto :goto_0

    #@2a
    .line 2205
    .end local v0    # "candidate":Lcom/android/server/wm/WindowState;
    :cond_1
    if-nez v3, :cond_2

    #@2c
    .line 2208
    return v5

    #@2d
    .line 2212
    :cond_2
    iget-object v1, v3, Lcom/android/server/wm/WindowState;->mVisibleFrame:Landroid/graphics/Rect;

    #@2f
    .line 2215
    .local v1, "frame":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@31
    invoke-virtual {v4, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@34
    .line 2216
    const/16 v4, 0x12

    #@36
    invoke-virtual {p0, v4, v9}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    #@39
    .line 2217
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@3b
    iget v5, v1, Landroid/graphics/Rect;->left:I

    #@3d
    iget v6, v1, Landroid/graphics/Rect;->top:I

    #@3f
    .line 2218
    invoke-virtual {v1}, Landroid/graphics/Rect;->width()I

    #@42
    move-result v7

    #@43
    invoke-virtual {v1}, Landroid/graphics/Rect;->height()I

    #@46
    move-result v8

    #@47
    .line 2217
    invoke-virtual {v4, v5, v6, v7, v8}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V

    #@4a
    .line 2219
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    #@4d
    .line 2220
    return v9
.end method

.method private final reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I
    .locals 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "index"    # I
    .param p3, "token"    # Lcom/android/server/wm/WindowToken;

    #@0
    .prologue
    .line 4853
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@5
    move-result v0

    #@6
    .line 4854
    .local v0, "NW":I
    const/4 v1, 0x0

    #@7
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_2

    #@9
    .line 4855
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@b
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@e
    move-result-object v2

    #@f
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@11
    .line 4856
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@14
    move-result-object v3

    #@15
    .line 4857
    .local v3, "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    if-eq v3, p1, :cond_0

    #@17
    if-nez v3, :cond_1

    #@19
    .line 4858
    :cond_0
    iput-object p1, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    #@1b
    .line 4859
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@1e
    move-result p2

    #@1f
    .line 4854
    :cond_1
    add-int/lit8 v1, v1, 0x1

    #@21
    goto :goto_0

    #@22
    .line 4862
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .end local v3    # "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2
    return p2
.end method

.method private final reAddWindowLocked(ILcom/android/server/wm/WindowState;)I
    .locals 7
    .param p1, "index"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 4820
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@4
    move-result-object v4

    #@5
    .line 4822
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@7
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@a
    move-result v0

    #@b
    .line 4823
    .local v0, "NCW":I
    const/4 v3, 0x0

    #@c
    .line 4824
    .local v3, "winAdded":Z
    const/4 v2, 0x0

    #@d
    .local v2, "j":I
    :goto_0
    if-ge v2, v0, :cond_1

    #@f
    .line 4825
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@11
    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@17
    .line 4826
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_0

    #@19
    iget v5, v1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@1b
    if-ltz v5, :cond_0

    #@1d
    .line 4829
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@1f
    .line 4830
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@22
    .line 4831
    add-int/lit8 p1, p1, 0x1

    #@24
    .line 4832
    const/4 v3, 0x1

    #@25
    .line 4836
    :cond_0
    iput-boolean v6, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@27
    .line 4837
    invoke-virtual {v4, p1, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@2a
    .line 4838
    add-int/lit8 p1, p1, 0x1

    #@2c
    .line 4824
    add-int/lit8 v2, v2, 0x1

    #@2e
    goto :goto_0

    #@2f
    .line 4840
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_1
    if-nez v3, :cond_2

    #@31
    .line 4843
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@33
    .line 4844
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@36
    .line 4845
    add-int/lit8 p1, p1, 0x1

    #@38
    .line 4847
    :cond_2
    const/4 v5, 0x1

    #@39
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@3b
    .line 4848
    return p1
.end method

.method private reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 1660
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@4
    .line 1664
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    .line 1665
    .local v0, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@b
    move-result v1

    #@c
    .line 1666
    .local v1, "wpos":I
    if-ltz v1, :cond_0

    #@e
    .line 1668
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@11
    .line 1669
    const/4 v2, 0x1

    #@12
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@14
    .line 1670
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@17
    .line 1659
    :cond_0
    return-void
.end method

.method private readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/16 v11, 0x2c

    #@2
    const/4 v9, 0x0

    #@3
    const/4 v10, 0x0

    #@4
    .line 8829
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@6
    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@9
    move-result-object v7

    #@a
    .line 8830
    const-string/jumbo v8, "display_size_forced"

    #@d
    .line 8829
    invoke-static {v7, v8}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    #@10
    move-result-object v5

    #@11
    .line 8831
    .local v5, "sizeStr":Ljava/lang/String;
    if-eqz v5, :cond_0

    #@13
    invoke-virtual {v5}, Ljava/lang/String;->length()I

    #@16
    move-result v7

    #@17
    if-nez v7, :cond_1

    #@19
    .line 8832
    :cond_0
    const-string/jumbo v7, "ro.config.size_override"

    #@1c
    invoke-static {v7, v9}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1f
    move-result-object v5

    #@20
    .line 8834
    :cond_1
    if-eqz v5, :cond_3

    #@22
    invoke-virtual {v5}, Ljava/lang/String;->length()I

    #@25
    move-result v7

    #@26
    if-lez v7, :cond_3

    #@28
    .line 8835
    invoke-virtual {v5, v11}, Ljava/lang/String;->indexOf(I)I

    #@2b
    move-result v4

    #@2c
    .line 8836
    .local v4, "pos":I
    if-lez v4, :cond_3

    #@2e
    invoke-virtual {v5, v11}, Ljava/lang/String;->lastIndexOf(I)I

    #@31
    move-result v7

    #@32
    if-ne v7, v4, :cond_3

    #@34
    .line 8839
    const/4 v7, 0x0

    #@35
    :try_start_0
    invoke-virtual {v5, v7, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@38
    move-result-object v7

    #@39
    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@3c
    move-result v6

    #@3d
    .line 8840
    .local v6, "width":I
    add-int/lit8 v7, v4, 0x1

    #@3f
    invoke-virtual {v5, v7}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@42
    move-result-object v7

    #@43
    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@46
    move-result v2

    #@47
    .line 8841
    .local v2, "height":I
    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@49
    if-ne v7, v6, :cond_2

    #@4b
    .line 8842
    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@4d
    if-eq v7, v2, :cond_3

    #@4f
    .line 8843
    :cond_2
    const-string/jumbo v7, "WindowManager"

    #@52
    new-instance v8, Ljava/lang/StringBuilder;

    #@54
    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    #@57
    const-string/jumbo v9, "FORCED DISPLAY SIZE: "

    #@5a
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d
    move-result-object v8

    #@5e
    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@61
    move-result-object v8

    #@62
    const-string/jumbo v9, "x"

    #@65
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@68
    move-result-object v8

    #@69
    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@6c
    move-result-object v8

    #@6d
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@70
    move-result-object v8

    #@71
    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@74
    .line 8844
    iput v6, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@76
    .line 8845
    iput v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    #@78
    .line 8853
    .end local v2    # "height":I
    .end local v4    # "pos":I
    .end local v6    # "width":I
    :cond_3
    :goto_0
    iget v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@7a
    invoke-direct {p0, v7}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    #@7d
    move-result v0

    #@7e
    .line 8854
    .local v0, "density":I
    if-eqz v0, :cond_4

    #@80
    .line 8855
    iput v0, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@82
    .line 8859
    :cond_4
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@84
    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@87
    move-result-object v7

    #@88
    .line 8860
    const-string/jumbo v8, "display_scaling_force"

    #@8b
    .line 8859
    invoke-static {v7, v8, v10}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@8e
    move-result v3

    #@8f
    .line 8861
    .local v3, "mode":I
    if-eqz v3, :cond_5

    #@91
    .line 8862
    const-string/jumbo v7, "WindowManager"

    #@94
    const-string/jumbo v8, "FORCED DISPLAY SCALING DISABLED"

    #@97
    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@9a
    .line 8863
    const/4 v7, 0x1

    #@9b
    iput-boolean v7, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    #@9d
    .line 8827
    :cond_5
    return-void

    #@9e
    .line 8847
    .end local v0    # "density":I
    .end local v3    # "mode":I
    .restart local v4    # "pos":I
    :catch_0
    move-exception v1

    #@9f
    .local v1, "ex":Ljava/lang/NumberFormatException;
    goto :goto_0
.end method

.method private rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 29
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 9127
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v23

    #@4
    .line 9128
    .local v23, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    #@7
    move-result v4

    #@8
    .line 9130
    .local v4, "NW":I
    const/4 v8, -0x1

    #@9
    .line 9131
    .local v8, "lastBelow":I
    const/4 v9, 0x0

    #@a
    .line 9133
    .local v9, "numRemoved":I
    move-object/from16 v0, p0

    #@c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@e
    move-object/from16 v26, v0

    #@10
    move-object/from16 v0, v26

    #@12
    array-length v0, v0

    #@13
    move/from16 v26, v0

    #@15
    move/from16 v0, v26

    #@17
    if-ge v0, v4, :cond_0

    #@19
    .line 9134
    add-int/lit8 v26, v4, 0xa

    #@1b
    move/from16 v0, v26

    #@1d
    new-array v0, v0, [Lcom/android/server/wm/WindowState;

    #@1f
    move-object/from16 v26, v0

    #@21
    move-object/from16 v0, v26

    #@23
    move-object/from16 v1, p0

    #@25
    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@27
    .line 9138
    :cond_0
    const/4 v6, 0x0

    #@28
    .line 9139
    .local v6, "i":I
    :goto_0
    if-ge v6, v4, :cond_3

    #@2a
    .line 9140
    move-object/from16 v0, v23

    #@2c
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2f
    move-result-object v21

    #@30
    check-cast v21, Lcom/android/server/wm/WindowState;

    #@32
    .line 9141
    .local v21, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v21

    #@34
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@36
    move-object/from16 v26, v0

    #@38
    if-eqz v26, :cond_1

    #@3a
    .line 9142
    move-object/from16 v0, v23

    #@3c
    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@3f
    move-result-object v22

    #@40
    check-cast v22, Lcom/android/server/wm/WindowState;

    #@42
    .line 9143
    .local v22, "win":Lcom/android/server/wm/WindowState;
    const/16 v26, 0x1

    #@44
    move/from16 v0, v26

    #@46
    move-object/from16 v1, v22

    #@48
    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@4a
    .line 9144
    move-object/from16 v0, p0

    #@4c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@4e
    move-object/from16 v26, v0

    #@50
    aput-object v22, v26, v9

    #@52
    .line 9145
    const/16 v26, 0x1

    #@54
    move/from16 v0, v26

    #@56
    move-object/from16 v1, p0

    #@58
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@5a
    .line 9147
    add-int/lit8 v4, v4, -0x1

    #@5c
    .line 9148
    add-int/lit8 v9, v9, 0x1

    #@5e
    .line 9149
    goto :goto_0

    #@5f
    .line 9150
    .end local v22    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v26, v6, -0x1

    #@61
    move/from16 v0, v26

    #@63
    if-ne v8, v0, :cond_2

    #@65
    .line 9151
    move-object/from16 v0, v21

    #@67
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@69
    move-object/from16 v26, v0

    #@6b
    move-object/from16 v0, v26

    #@6d
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@6f
    move/from16 v26, v0

    #@71
    const/16 v27, 0x7dd

    #@73
    move/from16 v0, v26

    #@75
    move/from16 v1, v27

    #@77
    if-ne v0, v1, :cond_2

    #@79
    .line 9152
    move v8, v6

    #@7a
    .line 9155
    :cond_2
    add-int/lit8 v6, v6, 0x1

    #@7c
    goto :goto_0

    #@7d
    .line 9160
    .end local v21    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    add-int/lit8 v8, v8, 0x1

    #@7f
    .line 9161
    move v6, v8

    #@80
    .line 9167
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@83
    move-result-object v15

    #@84
    .line 9168
    .local v15, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    #@87
    move-result v10

    #@88
    .line 9169
    .local v10, "numStacks":I
    const/4 v14, 0x0

    #@89
    .local v14, "stackNdx":I
    :goto_1
    if-ge v14, v10, :cond_5

    #@8b
    .line 9170
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@8e
    move-result-object v26

    #@8f
    check-cast v26, Lcom/android/server/wm/TaskStack;

    #@91
    move-object/from16 v0, v26

    #@93
    iget-object v5, v0, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    #@95
    .line 9171
    .local v5, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    #@98
    move-result v3

    #@99
    .line 9172
    .local v3, "NT":I
    const/4 v7, 0x0

    #@9a
    .local v7, "j":I
    :goto_2
    if-ge v7, v3, :cond_4

    #@9c
    .line 9173
    invoke-virtual {v5, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@9f
    move-result-object v26

    #@a0
    check-cast v26, Lcom/android/server/wm/WindowToken;

    #@a2
    move-object/from16 v0, p0

    #@a4
    move-object/from16 v1, p1

    #@a6
    move-object/from16 v2, v26

    #@a8
    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    #@ab
    move-result v6

    #@ac
    .line 9172
    add-int/lit8 v7, v7, 0x1

    #@ae
    goto :goto_2

    #@af
    .line 9169
    :cond_4
    add-int/lit8 v14, v14, 0x1

    #@b1
    goto :goto_1

    #@b2
    .line 9178
    .end local v3    # "NT":I
    .end local v5    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "j":I
    :cond_5
    const/4 v14, 0x0

    #@b3
    :goto_3
    if-ge v14, v10, :cond_a

    #@b5
    .line 9179
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@b8
    move-result-object v26

    #@b9
    check-cast v26, Lcom/android/server/wm/TaskStack;

    #@bb
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@be
    move-result-object v18

    #@bf
    .line 9180
    .local v18, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    #@c2
    move-result v11

    #@c3
    .line 9181
    .local v11, "numTasks":I
    const/16 v17, 0x0

    #@c5
    .local v17, "taskNdx":I
    :goto_4
    move/from16 v0, v17

    #@c7
    if-ge v0, v11, :cond_9

    #@c9
    .line 9182
    move-object/from16 v0, v18

    #@cb
    move/from16 v1, v17

    #@cd
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@d0
    move-result-object v26

    #@d1
    check-cast v26, Lcom/android/server/wm/Task;

    #@d3
    move-object/from16 v0, v26

    #@d5
    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@d7
    move-object/from16 v20, v0

    #@d9
    .line 9183
    .local v20, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/AppTokenList;->size()I

    #@dc
    move-result v12

    #@dd
    .line 9184
    .local v12, "numTokens":I
    const/16 v19, 0x0

    #@df
    .local v19, "tokenNdx":I
    :goto_5
    move/from16 v0, v19

    #@e1
    if-ge v0, v12, :cond_8

    #@e3
    .line 9185
    move-object/from16 v0, v20

    #@e5
    move/from16 v1, v19

    #@e7
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@ea
    move-result-object v25

    #@eb
    check-cast v25, Lcom/android/server/wm/AppWindowToken;

    #@ed
    .line 9186
    .local v25, "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v25

    #@ef
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@f1
    move/from16 v26, v0

    #@f3
    if-eqz v26, :cond_6

    #@f5
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/AppWindowToken;->waitingForReplacement()Z

    #@f8
    move-result v26

    #@f9
    if-eqz v26, :cond_7

    #@fb
    .line 9189
    :cond_6
    move-object/from16 v0, p0

    #@fd
    move-object/from16 v1, p1

    #@ff
    move-object/from16 v2, v25

    #@101
    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    #@104
    move-result v6

    #@105
    .line 9184
    :cond_7
    add-int/lit8 v19, v19, 0x1

    #@107
    goto :goto_5

    #@108
    .line 9181
    .end local v25    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    add-int/lit8 v17, v17, 0x1

    #@10a
    goto :goto_4

    #@10b
    .line 9178
    .end local v12    # "numTokens":I
    .end local v19    # "tokenNdx":I
    .end local v20    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_9
    add-int/lit8 v14, v14, 0x1

    #@10d
    goto :goto_3

    #@10e
    .line 9194
    .end local v11    # "numTasks":I
    .end local v17    # "taskNdx":I
    .end local v18    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_a
    sub-int/2addr v6, v8

    #@10f
    .line 9195
    if-eq v6, v9, :cond_d

    #@111
    .line 9196
    const/16 v26, 0x1

    #@113
    move/from16 v0, v26

    #@115
    move-object/from16 v1, p1

    #@117
    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@119
    .line 9197
    const-string/jumbo v26, "WindowManager"

    #@11c
    new-instance v27, Ljava/lang/StringBuilder;

    #@11e
    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    #@121
    const-string/jumbo v28, "On display="

    #@124
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@127
    move-result-object v27

    #@128
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@12b
    move-result v28

    #@12c
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@12f
    move-result-object v27

    #@130
    const-string/jumbo v28, " Rebuild removed "

    #@133
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@136
    move-result-object v27

    #@137
    move-object/from16 v0, v27

    #@139
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@13c
    move-result-object v27

    #@13d
    .line 9198
    const-string/jumbo v28, " windows but added "

    #@140
    .line 9197
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@143
    move-result-object v27

    #@144
    move-object/from16 v0, v27

    #@146
    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@149
    move-result-object v27

    #@14a
    .line 9198
    const-string/jumbo v28, " rebuildAppWindowListLocked() "

    #@14d
    .line 9197
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@150
    move-result-object v27

    #@151
    .line 9199
    const-string/jumbo v28, " callers="

    #@154
    .line 9197
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@157
    move-result-object v27

    #@158
    .line 9199
    const/16 v28, 0xa

    #@15a
    invoke-static/range {v28 .. v28}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    #@15d
    move-result-object v28

    #@15e
    .line 9197
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@161
    move-result-object v27

    #@162
    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@165
    move-result-object v27

    #@166
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@169
    .line 9200
    const/4 v6, 0x0

    #@16a
    :goto_6
    if-ge v6, v9, :cond_c

    #@16c
    .line 9201
    move-object/from16 v0, p0

    #@16e
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@170
    move-object/from16 v26, v0

    #@172
    aget-object v24, v26, v6

    #@174
    .line 9202
    .local v24, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v24

    #@176
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    #@178
    move/from16 v26, v0

    #@17a
    if-eqz v26, :cond_b

    #@17c
    .line 9203
    new-instance v16, Ljava/io/StringWriter;

    #@17e
    invoke-direct/range {v16 .. v16}, Ljava/io/StringWriter;-><init>()V

    #@181
    .line 9204
    .local v16, "sw":Ljava/io/StringWriter;
    new-instance v13, Lcom/android/internal/util/FastPrintWriter;

    #@183
    const/16 v26, 0x0

    #@185
    const/16 v27, 0x400

    #@187
    move-object/from16 v0, v16

    #@189
    move/from16 v1, v26

    #@18b
    move/from16 v2, v27

    #@18d
    invoke-direct {v13, v0, v1, v2}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    #@190
    .line 9205
    .local v13, "pw":Ljava/io/PrintWriter;
    const-string/jumbo v26, ""

    #@193
    const/16 v27, 0x1

    #@195
    move-object/from16 v0, v24

    #@197
    move-object/from16 v1, v26

    #@199
    move/from16 v2, v27

    #@19b
    invoke-virtual {v0, v13, v1, v2}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@19e
    .line 9206
    invoke-virtual {v13}, Ljava/io/PrintWriter;->flush()V

    #@1a1
    .line 9207
    const-string/jumbo v26, "WindowManager"

    #@1a4
    new-instance v27, Ljava/lang/StringBuilder;

    #@1a6
    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    #@1a9
    const-string/jumbo v28, "This window was lost: "

    #@1ac
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1af
    move-result-object v27

    #@1b0
    move-object/from16 v0, v27

    #@1b2
    move-object/from16 v1, v24

    #@1b4
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1b7
    move-result-object v27

    #@1b8
    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1bb
    move-result-object v27

    #@1bc
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1bf
    .line 9208
    const-string/jumbo v26, "WindowManager"

    #@1c2
    invoke-virtual/range {v16 .. v16}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    #@1c5
    move-result-object v27

    #@1c6
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1c9
    .line 9209
    move-object/from16 v0, v24

    #@1cb
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1cd
    move-object/from16 v26, v0

    #@1cf
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    #@1d2
    .line 9200
    .end local v13    # "pw":Ljava/io/PrintWriter;
    .end local v16    # "sw":Ljava/io/StringWriter;
    :cond_b
    add-int/lit8 v6, v6, 0x1

    #@1d4
    goto :goto_6

    #@1d5
    .line 9212
    .end local v24    # "ws":Lcom/android/server/wm/WindowState;
    :cond_c
    const-string/jumbo v26, "WindowManager"

    #@1d8
    const-string/jumbo v27, "Current app token list:"

    #@1db
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1de
    .line 9213
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpAppTokensLocked()V

    #@1e1
    .line 9214
    const-string/jumbo v26, "WindowManager"

    #@1e4
    const-string/jumbo v27, "Final window list:"

    #@1e7
    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@1ea
    .line 9215
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked()V

    #@1ed
    .line 9217
    :cond_d
    move-object/from16 v0, p0

    #@1ef
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    #@1f1
    move-object/from16 v26, v0

    #@1f3
    const/16 v27, 0x0

    #@1f5
    invoke-static/range {v26 .. v27}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    #@1f8
    .line 9126
    return-void
.end method

.method private reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 9013
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@4
    if-nez v1, :cond_0

    #@6
    .line 9014
    return-void

    #@7
    .line 9016
    :cond_0
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    #@a
    .line 9017
    iput-boolean v2, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@c
    .line 9019
    invoke-virtual {p0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@f
    move-result v0

    #@10
    .line 9020
    .local v0, "configChanged":Z
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@12
    invoke-virtual {v1}, Landroid/content/res/Configuration;->setToDefaults()V

    #@15
    .line 9021
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@17
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@19
    invoke-virtual {v1, v4}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    #@1c
    .line 9022
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@1e
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@21
    .line 9023
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@23
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@25
    invoke-virtual {v1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    #@28
    move-result v1

    #@29
    if-eqz v1, :cond_2

    #@2b
    move v1, v2

    #@2c
    :goto_0
    or-int/2addr v0, v1

    #@2d
    .line 9025
    if-eqz v0, :cond_1

    #@2f
    .line 9026
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@31
    .line 9027
    invoke-direct {p0, v3, v3, v3}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@34
    .line 9028
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@36
    const/16 v2, 0x12

    #@38
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@3b
    .line 9029
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@3d
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    #@40
    move-result v1

    #@41
    if-nez v1, :cond_1

    #@43
    .line 9030
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    #@45
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    #@48
    .line 9034
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@4a
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@4d
    .line 9011
    return-void

    #@4e
    :cond_2
    move v1, v3

    #@4f
    .line 9023
    goto :goto_0
.end method

.method private reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I
    .locals 4
    .param p1, "curSize"    # I
    .param p2, "rotation"    # I
    .param p3, "uiMode"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;
    .param p5, "dw"    # I
    .param p6, "dh"    # I

    #@0
    .prologue
    .line 7297
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v2, p5, p6, p2, p3}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    #@5
    move-result v2

    #@6
    iput v2, p4, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    #@8
    .line 7298
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a
    invoke-interface {v2, p5, p6, p2, p3}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    #@d
    move-result v2

    #@e
    iput v2, p4, Landroid/util/DisplayMetrics;->noncompatHeightPixels:I

    #@10
    .line 7299
    const/4 v2, 0x0

    #@11
    invoke-static {p4, v2}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    #@14
    move-result v0

    #@15
    .line 7300
    .local v0, "scale":F
    iget v2, p4, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    #@17
    int-to-float v2, v2

    #@18
    div-float/2addr v2, v0

    #@19
    iget v3, p4, Landroid/util/DisplayMetrics;->density:F

    #@1b
    div-float/2addr v2, v3

    #@1c
    const/high16 v3, 0x3f000000    # 0.5f

    #@1e
    add-float/2addr v2, v3

    #@1f
    float-to-int v1, v2

    #@20
    .line 7301
    .local v1, "size":I
    if-eqz p1, :cond_0

    #@22
    if-ge v1, p1, :cond_1

    #@24
    .line 7302
    :cond_0
    move p1, v1

    #@25
    .line 7304
    :cond_1
    return p1
.end method

.method private reduceConfigLayout(IIFIII)I
    .locals 6
    .param p1, "curLayout"    # I
    .param p2, "rotation"    # I
    .param p3, "density"    # F
    .param p4, "dw"    # I
    .param p5, "dh"    # I
    .param p6, "uiMode"    # I

    #@0
    .prologue
    .line 7245
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v5, p4, p5, p2, p6}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    #@5
    move-result v4

    #@6
    .line 7246
    .local v4, "w":I
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@8
    invoke-interface {v5, p4, p5, p2, p6}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    #@b
    move-result v0

    #@c
    .line 7249
    .local v0, "h":I
    move v1, v4

    #@d
    .line 7250
    .local v1, "longSize":I
    move v2, v0

    #@e
    .line 7251
    .local v2, "shortSize":I
    if-ge v4, v0, :cond_0

    #@10
    .line 7252
    move v3, v4

    #@11
    .line 7253
    .local v3, "tmp":I
    move v1, v0

    #@12
    .line 7254
    move v2, v4

    #@13
    .line 7256
    .end local v3    # "tmp":I
    :cond_0
    int-to-float v5, v1

    #@14
    div-float/2addr v5, p3

    #@15
    float-to-int v1, v5

    #@16
    .line 7257
    int-to-float v5, v2

    #@17
    div-float/2addr v5, p3

    #@18
    float-to-int v2, v5

    #@19
    .line 7258
    invoke-static {p1, v1, v2}, Landroid/content/res/Configuration;->reduceScreenLayout(III)I

    #@1c
    move-result v5

    #@1d
    return v5
.end method

.method private relayoutVisibleWindow(Landroid/content/res/Configuration;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;II)I
    .locals 8
    .param p1, "outConfig"    # Landroid/content/res/Configuration;
    .param p2, "result"    # I
    .param p3, "win"    # Lcom/android/server/wm/WindowState;
    .param p4, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p5, "attrChanges"    # I
    .param p6, "oldVisibility"    # I

    #@0
    .prologue
    const/16 v4, 0x8

    #@2
    const/4 v7, 0x1

    #@3
    const/4 v3, 0x0

    #@4
    .line 3046
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@7
    move-result v2

    #@8
    if-nez v2, :cond_9

    #@a
    const/4 v2, 0x2

    #@b
    :goto_0
    or-int/2addr p2, v2

    #@c
    .line 3047
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@e
    if-eqz v2, :cond_0

    #@10
    .line 3048
    sget-object v2, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@12
    new-instance v5, Ljava/lang/StringBuilder;

    #@14
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@17
    const-string/jumbo v6, "relayoutVisibleWindow: "

    #@1a
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v5

    #@1e
    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@21
    move-result-object v5

    #@22
    const-string/jumbo v6, " mAnimatingExit=true, mRemoveOnExit="

    #@25
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@28
    move-result-object v5

    #@29
    .line 3049
    iget-boolean v6, p3, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    #@2b
    .line 3048
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@2e
    move-result-object v5

    #@2f
    .line 3049
    const-string/jumbo v6, ", mDestroying="

    #@32
    .line 3048
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@35
    move-result-object v5

    #@36
    .line 3049
    iget-boolean v6, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@38
    .line 3048
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@3b
    move-result-object v5

    #@3c
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3f
    move-result-object v5

    #@40
    invoke-static {v2, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@43
    .line 3051
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->cancelExitAnimationForNextAnimationLocked()V

    #@46
    .line 3052
    iput-boolean v3, p3, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@48
    .line 3054
    :cond_0
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@4a
    if-eqz v2, :cond_1

    #@4c
    .line 3055
    iput-boolean v3, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    #@4e
    .line 3056
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@50
    invoke-virtual {v2, p3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@53
    .line 3058
    :cond_1
    if-ne p6, v4, :cond_2

    #@55
    .line 3059
    iput-boolean v7, p4, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@57
    .line 3061
    :cond_2
    iput-boolean v7, p4, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@59
    .line 3062
    and-int/lit8 v2, p2, 0x2

    #@5b
    if-eqz v2, :cond_3

    #@5d
    .line 3063
    invoke-virtual {p3, p1}, Lcom/android/server/wm/WindowState;->prepareWindowToDisplayDuringRelayout(Landroid/content/res/Configuration;)V

    #@60
    .line 3065
    :cond_3
    and-int/lit8 v2, p5, 0x8

    #@62
    if-eqz v2, :cond_4

    #@64
    .line 3069
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->tryChangeFormatInPlaceLocked()Z

    #@67
    move-result v2

    #@68
    if-nez v2, :cond_4

    #@6a
    .line 3070
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->preserveSurfaceLocked()V

    #@6d
    .line 3071
    or-int/lit8 p2, p2, 0x6

    #@6f
    .line 3078
    :cond_4
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizeChanged()Z

    #@72
    move-result v2

    #@73
    if-nez v2, :cond_5

    #@75
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizing()Z

    #@78
    move-result v2

    #@79
    if-eqz v2, :cond_6

    #@7b
    .line 3079
    :cond_5
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->setDragResizing()V

    #@7e
    .line 3080
    invoke-virtual {p3, v3}, Lcom/android/server/wm/WindowState;->setResizedWhileNotDragResizing(Z)V

    #@81
    .line 3085
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@83
    if-eqz v2, :cond_6

    #@85
    iget-object v2, p3, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@87
    if-nez v2, :cond_6

    #@89
    .line 3086
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->preserveSurfaceLocked()V

    #@8c
    .line 3087
    or-int/lit8 p2, p2, 0x2

    #@8e
    .line 3090
    :cond_6
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizing()Z

    #@91
    move-result v2

    #@92
    if-eqz v2, :cond_b

    #@94
    .line 3091
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->getResizeMode()I

    #@97
    move-result v2

    #@98
    if-nez v2, :cond_a

    #@9a
    const/4 v1, 0x1

    #@9b
    .line 3092
    .local v1, "freeformResizing":Z
    :goto_1
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizing()Z

    #@9e
    move-result v2

    #@9f
    if-eqz v2, :cond_d

    #@a1
    .line 3093
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->getResizeMode()I

    #@a4
    move-result v2

    #@a5
    if-ne v2, v7, :cond_c

    #@a7
    const/4 v0, 0x1

    #@a8
    .line 3094
    .local v0, "dockedResizing":Z
    :goto_2
    if-eqz v1, :cond_e

    #@aa
    const/16 v2, 0x10

    #@ac
    :goto_3
    or-int/2addr p2, v2

    #@ad
    .line 3095
    if-eqz v0, :cond_7

    #@af
    move v3, v4

    #@b0
    :cond_7
    or-int/2addr p2, v3

    #@b1
    .line 3096
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    #@b4
    move-result v2

    #@b5
    if-eqz v2, :cond_8

    #@b7
    .line 3099
    or-int/lit8 p2, p2, 0x2

    #@b9
    .line 3101
    :cond_8
    return p2

    #@ba
    .end local v0    # "dockedResizing":Z
    .end local v1    # "freeformResizing":Z
    :cond_9
    move v2, v3

    #@bb
    .line 3046
    goto/16 :goto_0

    #@bd
    .line 3091
    :cond_a
    const/4 v1, 0x0

    #@be
    .restart local v1    # "freeformResizing":Z
    goto :goto_1

    #@bf
    .line 3090
    .end local v1    # "freeformResizing":Z
    :cond_b
    const/4 v1, 0x0

    #@c0
    .restart local v1    # "freeformResizing":Z
    goto :goto_1

    #@c1
    .line 3093
    :cond_c
    const/4 v0, 0x0

    #@c2
    .restart local v0    # "dockedResizing":Z
    goto :goto_2

    #@c3
    .line 3092
    .end local v0    # "dockedResizing":Z
    :cond_d
    const/4 v0, 0x0

    #@c4
    .restart local v0    # "dockedResizing":Z
    goto :goto_2

    #@c5
    :cond_e
    move v2, v3

    #@c6
    .line 3094
    goto :goto_3
.end method

.method private setAnimatorDurationScale(F)V
    .locals 0
    .param p1, "scale"    # F

    #@0
    .prologue
    .line 5548
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@2
    .line 5549
    invoke-static {p1}, Landroid/animation/ValueAnimator;->setDurationScale(F)V

    #@5
    .line 5547
    return-void
.end method

.method private setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    .locals 0
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "density"    # I

    #@0
    .prologue
    .line 9006
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@2
    .line 9007
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@5
    .line 9005
    return-void
.end method

.method private setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V
    .locals 4
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "mode"    # I

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 8822
    const-string/jumbo v2, "WindowManager"

    #@4
    new-instance v0, Ljava/lang/StringBuilder;

    #@6
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@9
    const-string/jumbo v3, "Using display scaling mode: "

    #@c
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f
    move-result-object v3

    #@10
    if-nez p2, :cond_0

    #@12
    const-string/jumbo v0, "auto"

    #@15
    :goto_0
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v0

    #@19
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1c
    move-result-object v0

    #@1d
    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@20
    .line 8823
    if-eqz p2, :cond_1

    #@22
    const/4 v0, 0x1

    #@23
    :goto_1
    iput-boolean v0, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    #@25
    .line 8824
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@28
    .line 8821
    return-void

    #@29
    .line 8822
    :cond_0
    const-string/jumbo v0, "off"

    #@2c
    goto :goto_0

    #@2d
    :cond_1
    move v0, v1

    #@2e
    .line 8823
    goto :goto_1
.end method

.method private setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V
    .locals 3
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "width"    # I
    .param p3, "height"    # I

    #@0
    .prologue
    .line 8869
    const-string/jumbo v0, "WindowManager"

    #@3
    new-instance v1, Ljava/lang/StringBuilder;

    #@5
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@8
    const-string/jumbo v2, "Using new display size: "

    #@b
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e
    move-result-object v1

    #@f
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@12
    move-result-object v1

    #@13
    const-string/jumbo v2, "x"

    #@16
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v1

    #@1a
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v1

    #@1e
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21
    move-result-object v1

    #@22
    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@25
    .line 8870
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@27
    .line 8871
    iput p3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@29
    .line 8872
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@2c
    .line 8868
    return-void
.end method

.method private setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    .locals 8
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    #@0
    .prologue
    .line 9072
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@3
    move-result-object v7

    #@4
    .line 9073
    .local v7, "displayInfo":Landroid/view/DisplayInfo;
    iput p2, v7, Landroid/view/DisplayInfo;->overscanLeft:I

    #@6
    .line 9074
    iput p3, v7, Landroid/view/DisplayInfo;->overscanTop:I

    #@8
    .line 9075
    iput p4, v7, Landroid/view/DisplayInfo;->overscanRight:I

    #@a
    .line 9076
    iput p5, v7, Landroid/view/DisplayInfo;->overscanBottom:I

    #@c
    .line 9078
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@e
    iget-object v1, v7, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    #@10
    iget-object v2, v7, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    #@12
    move v3, p2

    #@13
    move v4, p3

    #@14
    move v5, p4

    #@15
    move v6, p5

    #@16
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/DisplaySettings;->setOverscanLocked(Ljava/lang/String;Ljava/lang/String;IIII)V

    #@19
    .line 9080
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    #@1b
    invoke-virtual {v0}, Lcom/android/server/wm/DisplaySettings;->writeSettingsLocked()V

    #@1e
    .line 9082
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    #@21
    .line 9071
    return-void
.end method

.method private setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 2282
    const/4 v1, 0x1

    #@2
    iput-boolean v1, p1, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    #@4
    .line 2283
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@7
    .line 2287
    const/4 v1, 0x3

    #@8
    .line 2286
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@b
    move-result v0

    #@c
    .line 2288
    .local v0, "focusChanged":Z
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@e
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@11
    .line 2289
    if-eqz v0, :cond_0

    #@13
    .line 2290
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@15
    invoke-virtual {v1, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@18
    .line 2281
    :cond_0
    return-void
.end method

.method private showAuditSafeModeNotification()V
    .locals 11

    #@0
    .prologue
    const v10, 0x10405e9

    #@3
    const/4 v9, 0x0

    #@4
    const/4 v8, 0x1

    #@5
    .line 7798
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@7
    .line 7799
    new-instance v5, Landroid/content/Intent;

    #@9
    const-string/jumbo v6, "android.intent.action.VIEW"

    #@c
    .line 7800
    const-string/jumbo v7, "https://support.google.com/nexus/answer/2852139"

    #@f
    invoke-static {v7}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    #@12
    move-result-object v7

    #@13
    .line 7799
    invoke-direct {v5, v6, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    #@16
    .line 7798
    invoke-static {v4, v9, v5, v9}, Landroid/app/PendingIntent;->getActivity(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;

    #@19
    move-result-object v2

    #@1a
    .line 7802
    .local v2, "pendingIntent":Landroid/app/PendingIntent;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1c
    invoke-virtual {v4, v10}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    #@1f
    move-result-object v3

    #@20
    .line 7804
    .local v3, "title":Ljava/lang/String;
    new-instance v4, Landroid/app/Notification$Builder;

    #@22
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@24
    invoke-direct {v4, v5}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;)V

    #@27
    .line 7805
    const v5, 0x108008a

    #@2a
    .line 7804
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    #@2d
    move-result-object v4

    #@2e
    .line 7806
    const-wide/16 v6, 0x0

    #@30
    .line 7804
    invoke-virtual {v4, v6, v7}, Landroid/app/Notification$Builder;->setWhen(J)Landroid/app/Notification$Builder;

    #@33
    move-result-object v4

    #@34
    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setOngoing(Z)Landroid/app/Notification$Builder;

    #@37
    move-result-object v4

    #@38
    invoke-virtual {v4, v3}, Landroid/app/Notification$Builder;->setTicker(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    #@3b
    move-result-object v4

    #@3c
    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setLocalOnly(Z)Landroid/app/Notification$Builder;

    #@3f
    move-result-object v4

    #@40
    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setPriority(I)Landroid/app/Notification$Builder;

    #@43
    move-result-object v4

    #@44
    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setVisibility(I)Landroid/app/Notification$Builder;

    #@47
    move-result-object v4

    #@48
    .line 7812
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4a
    .line 7813
    const v6, 0x1060059

    #@4d
    .line 7812
    invoke-virtual {v5, v6}, Landroid/content/Context;->getColor(I)I

    #@50
    move-result v5

    #@51
    .line 7804
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setColor(I)Landroid/app/Notification$Builder;

    #@54
    move-result-object v4

    #@55
    invoke-virtual {v4, v3}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    #@58
    move-result-object v4

    #@59
    .line 7815
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@5b
    const v6, 0x10405ea

    #@5e
    invoke-virtual {v5, v6}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    #@61
    move-result-object v5

    #@62
    .line 7804
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    #@65
    move-result-object v4

    #@66
    invoke-virtual {v4, v2}, Landroid/app/Notification$Builder;->setContentIntent(Landroid/app/PendingIntent;)Landroid/app/Notification$Builder;

    #@69
    move-result-object v4

    #@6a
    invoke-virtual {v4}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    #@6d
    move-result-object v0

    #@6e
    .line 7819
    .local v0, "notification":Landroid/app/Notification;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@70
    .line 7820
    const-string/jumbo v5, "notification"

    #@73
    .line 7819
    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    #@76
    move-result-object v1

    #@77
    check-cast v1, Landroid/app/NotificationManager;

    #@79
    .line 7823
    .local v1, "notificationManager":Landroid/app/NotificationManager;
    sget-object v4, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    #@7b
    .line 7822
    const/4 v5, 0x0

    #@7c
    invoke-virtual {v1, v5, v10, v0, v4}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    #@7f
    .line 7797
    return-void
.end method

.method private showStrictModeViolation(II)V
    .locals 12
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    #@0
    .prologue
    .line 6074
    if-eqz p1, :cond_1

    #@2
    const/4 v4, 0x1

    #@3
    .line 6075
    .local v4, "on":Z
    :goto_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@5
    monitor-enter v9

    #@6
    .line 6079
    if-eqz v4, :cond_4

    #@8
    .line 6080
    const/4 v1, 0x0

    #@9
    .line 6081
    .local v1, "isVisible":Z
    :try_start_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    #@e
    move-result v2

    #@f
    .line 6082
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@10
    .local v0, "displayNdx":I
    :goto_1
    if-ge v0, v2, :cond_3

    #@12
    .line 6083
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@14
    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@17
    move-result-object v8

    #@18
    check-cast v8, Lcom/android/server/wm/DisplayContent;

    #@1a
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1d
    move-result-object v6

    #@1e
    .line 6084
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@21
    move-result v3

    #@22
    .line 6085
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@23
    .local v5, "winNdx":I
    :goto_2
    if-ge v5, v3, :cond_0

    #@25
    .line 6086
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@28
    move-result-object v7

    #@29
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@2b
    .line 6087
    .local v7, "ws":Lcom/android/server/wm/WindowState;
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@2d
    iget v8, v8, Lcom/android/server/wm/Session;->mPid:I

    #@2f
    if-ne v8, p2, :cond_2

    #@31
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@34
    move-result v8

    #@35
    if-eqz v8, :cond_2

    #@37
    .line 6088
    const/4 v1, 0x1

    #@38
    .line 6082
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_0
    add-int/lit8 v0, v0, 0x1

    #@3a
    goto :goto_1

    #@3b
    .line 6074
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    .end local v3    # "numWindows":I
    .end local v4    # "on":Z
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    const/4 v4, 0x0

    #@3c
    .restart local v4    # "on":Z
    goto :goto_0

    #@3d
    .line 6085
    .restart local v0    # "displayNdx":I
    .restart local v1    # "isVisible":Z
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v5, v5, 0x1

    #@3f
    goto :goto_2

    #@40
    .line 6093
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3
    if-nez v1, :cond_4

    #@42
    monitor-exit v9

    #@43
    .line 6094
    return-void

    #@44
    .line 6100
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    :cond_4
    :try_start_1
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@47
    .line 6103
    :try_start_2
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@49
    if-nez v8, :cond_5

    #@4b
    .line 6104
    new-instance v8, Lcom/android/server/wm/StrictModeFlash;

    #@4d
    .line 6105
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@50
    move-result-object v10

    #@51
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@54
    move-result-object v10

    #@55
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@57
    .line 6104
    invoke-direct {v8, v10, v11}, Lcom/android/server/wm/StrictModeFlash;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;)V

    #@5a
    iput-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@5c
    .line 6107
    :cond_5
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    #@5e
    invoke-virtual {v8, v4}, Lcom/android/server/wm/StrictModeFlash;->setVisibility(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@61
    .line 6109
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@64
    monitor-exit v9

    #@65
    .line 6073
    return-void

    #@66
    .line 6108
    :catchall_0
    move-exception v8

    #@67
    .line 6109
    :try_start_4
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@6a
    .line 6108
    throw v8
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@6b
    .line 6075
    :catchall_1
    move-exception v8

    #@6c
    monitor-exit v9

    #@6d
    throw v8
.end method

.method private startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V
    .locals 8
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/16 v7, 0x11

    #@2
    const/4 v6, 0x1

    #@3
    const/4 v4, 0x0

    #@4
    .line 4623
    iget-boolean v3, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@6
    if-nez v3, :cond_1

    #@8
    .line 4624
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@a
    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@c
    if-nez v3, :cond_0

    #@e
    .line 4625
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@10
    iput-boolean v6, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@12
    .line 4626
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@14
    iput v4, v3, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    #@16
    .line 4627
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@18
    add-int/lit8 v3, v3, 0x1

    #@1a
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@1c
    .line 4628
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@1e
    if-ne v3, v6, :cond_0

    #@20
    .line 4629
    invoke-direct {p0, v4, v4, v4}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@23
    .line 4630
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@25
    invoke-virtual {v3, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@28
    .line 4631
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2a
    const-wide/16 v4, 0x7d0

    #@2c
    invoke-virtual {v3, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@2f
    .line 4634
    :cond_0
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@31
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    #@34
    move-result v0

    #@35
    .line 4635
    .local v0, "N":I
    const/4 v1, 0x0

    #@36
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    #@38
    .line 4636
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@3a
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v2

    #@3e
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@40
    .line 4637
    .local v2, "w":Lcom/android/server/wm/WindowState;
    iput-boolean v6, v2, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@42
    .line 4635
    add-int/lit8 v1, v1, 0x1

    #@44
    goto :goto_0

    #@45
    .line 4620
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    return-void
.end method

.method private startFreezingDisplayLocked(ZII)V
    .locals 12
    .param p1, "inTransaction"    # Z
    .param p2, "exitAnim"    # I
    .param p3, "enterAnim"    # I

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 9716
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@3
    if-eqz v1, :cond_0

    #@5
    .line 9717
    return-void

    #@6
    .line 9720
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@8
    if-eqz v1, :cond_4

    #@a
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@c
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->isScreenOn()Z

    #@f
    move-result v1

    #@10
    if-eqz v1, :cond_4

    #@12
    .line 9730
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@14
    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    #@17
    .line 9732
    const/4 v1, 0x1

    #@18
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@1a
    .line 9733
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@1d
    move-result-wide v4

    #@1e
    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@20
    .line 9734
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@22
    .line 9736
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1}, Lcom/android/server/wm/InputMonitor;->freezeInputDispatchingLw()V

    #@27
    .line 9741
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@29
    invoke-interface {v1, v3, v3}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    #@2c
    .line 9743
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2e
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@31
    move-result v1

    #@32
    if-eqz v1, :cond_1

    #@34
    .line 9744
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@36
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->freeze()V

    #@39
    .line 9753
    :cond_1
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@3b
    .line 9754
    iput p3, p0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@3d
    .line 9755
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@40
    move-result-object v2

    #@41
    .line 9756
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@44
    move-result v8

    #@45
    .line 9758
    .local v8, "displayId":I
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@47
    invoke-virtual {v1, v8}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@4a
    move-result-object v0

    #@4b
    .line 9759
    .local v0, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v0, :cond_2

    #@4d
    .line 9760
    invoke-virtual {v0}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@50
    .line 9764
    :cond_2
    const/4 v6, 0x0

    #@51
    .line 9765
    .local v6, "isSecure":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@54
    move-result-object v10

    #@55
    .line 9766
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    #@58
    move-result v7

    #@59
    .line 9767
    .local v7, "N":I
    const/4 v9, 0x0

    #@5a
    .local v9, "i":I
    :goto_0
    if-ge v9, v7, :cond_3

    #@5c
    .line 9768
    invoke-virtual {v10, v9}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@5f
    move-result-object v11

    #@60
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@62
    .line 9769
    .local v11, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual {v11}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    #@65
    move-result v1

    #@66
    if-eqz v1, :cond_5

    #@68
    iget-object v1, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6a
    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@6c
    and-int/lit16 v1, v1, 0x2000

    #@6e
    if-eqz v1, :cond_5

    #@70
    .line 9770
    const/4 v6, 0x1

    #@71
    .line 9776
    .end local v11    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    #@74
    .line 9777
    new-instance v0, Lcom/android/server/wm/ScreenRotationAnimation;

    #@76
    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@78
    .line 9778
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@7a
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@7c
    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->isDefaultOrientationForced()Z

    #@7f
    move-result v5

    #@80
    move v4, p1

    #@81
    .line 9777
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/ScreenRotationAnimation;-><init>(Landroid/content/Context;Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceSession;ZZZ)V

    #@84
    .line 9779
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@86
    invoke-virtual {v1, v8, v0}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@89
    .line 9715
    return-void

    #@8a
    .line 9723
    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "isSecure":Z
    .end local v7    # "N":I
    .end local v8    # "displayId":I
    .end local v9    # "i":I
    .end local v10    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    return-void

    #@8b
    .line 9767
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "isSecure":Z
    .restart local v7    # "N":I
    .restart local v8    # "displayId":I
    .restart local v9    # "i":I
    .restart local v10    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v11    # "ws":Lcom/android/server/wm/WindowState;
    :cond_5
    add-int/lit8 v9, v9, 0x1

    #@8d
    goto :goto_0
.end method

.method private startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    .locals 9
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "resize"    # Z
    .param p3, "startX"    # F
    .param p4, "startY"    # F

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v7, 0x0

    #@2
    const/4 v6, 0x0

    #@3
    .line 7558
    if-eqz p1, :cond_0

    #@5
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getAppToken()Landroid/view/IApplicationToken;

    #@8
    move-result-object v3

    #@9
    if-nez v3, :cond_1

    #@b
    .line 7559
    :cond_0
    const-string/jumbo v3, "WindowManager"

    #@e
    new-instance v4, Ljava/lang/StringBuilder;

    #@10
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@13
    const-string/jumbo v5, "startPositioningLocked: Bad window "

    #@16
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@19
    move-result-object v4

    #@1a
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1d
    move-result-object v4

    #@1e
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21
    move-result-object v4

    #@22
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@25
    .line 7560
    return v7

    #@26
    .line 7562
    :cond_1
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    #@28
    if-nez v3, :cond_2

    #@2a
    .line 7563
    const-string/jumbo v3, "WindowManager"

    #@2d
    new-instance v4, Ljava/lang/StringBuilder;

    #@2f
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@32
    const-string/jumbo v5, "startPositioningLocked: "

    #@35
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@38
    move-result-object v4

    #@39
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3c
    move-result-object v4

    #@3d
    const-string/jumbo v5, " has no input channel, "

    #@40
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@43
    move-result-object v4

    #@44
    .line 7564
    const-string/jumbo v5, " probably being removed"

    #@47
    .line 7563
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v4

    #@4b
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4e
    move-result-object v4

    #@4f
    invoke-static {v3, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    #@52
    .line 7565
    return v7

    #@53
    .line 7568
    :cond_2
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@56
    move-result-object v1

    #@57
    .line 7569
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_3

    #@59
    .line 7570
    const-string/jumbo v3, "WindowManager"

    #@5c
    new-instance v4, Ljava/lang/StringBuilder;

    #@5e
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@61
    const-string/jumbo v5, "startPositioningLocked: Invalid display content "

    #@64
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v4

    #@68
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@6b
    move-result-object v4

    #@6c
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6f
    move-result-object v4

    #@70
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@73
    .line 7571
    return v7

    #@74
    .line 7574
    :cond_3
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@77
    move-result-object v0

    #@78
    .line 7575
    .local v0, "display":Landroid/view/Display;
    new-instance v3, Lcom/android/server/wm/TaskPositioner;

    #@7a
    invoke-direct {v3, p0}, Lcom/android/server/wm/TaskPositioner;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    #@7d
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@7f
    .line 7576
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@81
    invoke-virtual {v3, v0}, Lcom/android/server/wm/TaskPositioner;->register(Landroid/view/Display;)V

    #@84
    .line 7577
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@86
    invoke-virtual {v3, v8}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@89
    .line 7583
    move-object v2, p1

    #@8a
    .line 7584
    .local v2, "transferFocusFromWin":Lcom/android/server/wm/WindowState;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@8c
    if-eqz v3, :cond_4

    #@8e
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@90
    if-eq v3, p1, :cond_4

    #@92
    .line 7585
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@94
    iget-object v3, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@96
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@98
    if-ne v3, v4, :cond_4

    #@9a
    .line 7586
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@9c
    .line 7588
    :cond_4
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@9e
    .line 7589
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    #@a0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@a2
    iget-object v5, v5, Lcom/android/server/wm/TaskPositioner;->mServerChannel:Landroid/view/InputChannel;

    #@a4
    .line 7588
    invoke-virtual {v3, v4, v5}, Lcom/android/server/input/InputManagerService;->transferTouchFocus(Landroid/view/InputChannel;Landroid/view/InputChannel;)Z

    #@a7
    move-result v3

    #@a8
    if-nez v3, :cond_5

    #@aa
    .line 7590
    const-string/jumbo v3, "WindowManager"

    #@ad
    const-string/jumbo v4, "startPositioningLocked: Unable to transfer touch focus"

    #@b0
    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    #@b3
    .line 7591
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@b5
    invoke-virtual {v3}, Lcom/android/server/wm/TaskPositioner;->unregister()V

    #@b8
    .line 7592
    iput-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@ba
    .line 7593
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@bc
    invoke-virtual {v3, v8}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@bf
    .line 7594
    return v7

    #@c0
    .line 7597
    :cond_5
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    #@c2
    invoke-virtual {v3, p1, p2, p3, p4}, Lcom/android/server/wm/TaskPositioner;->startDragLocked(Lcom/android/server/wm/WindowState;ZFF)V

    #@c5
    .line 7598
    return v8
.end method

.method private startScrollingTask(Lcom/android/server/wm/DisplayContent;II)V
    .locals 9
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "startX"    # I
    .param p3, "startY"    # I

    #@0
    .prologue
    .line 7516
    const/4 v2, 0x0

    #@1
    .line 7517
    .local v2, "task":Lcom/android/server/wm/Task;
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v5

    #@4
    .line 7518
    :try_start_0
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->taskIdFromPoint(II)I

    #@7
    move-result v3

    #@8
    .line 7519
    .local v3, "taskId":I
    if-ltz v3, :cond_0

    #@a
    .line 7520
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v4

    #@10
    move-object v0, v4

    #@11
    check-cast v0, Lcom/android/server/wm/Task;

    #@13
    move-object v2, v0

    #@14
    .line 7522
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :cond_0
    if-eqz v2, :cond_1

    #@16
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->isDockedInEffect()Z

    #@19
    move-result v4

    #@1a
    if-eqz v4, :cond_1

    #@1c
    .line 7523
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->getTopVisibleAppMainWindow()Lcom/android/server/wm/WindowState;

    #@1f
    move-result-object v4

    #@20
    int-to-float v6, p2

    #@21
    int-to-float v7, p3

    #@22
    const/4 v8, 0x0

    #@23
    .line 7522
    invoke-direct {p0, v4, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@26
    move-result v4

    #@27
    if-eqz v4, :cond_1

    #@29
    monitor-exit v5

    #@2a
    .line 7528
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@2c
    iget v5, v2, Lcom/android/server/wm/Task;->mTaskId:I

    #@2e
    invoke-interface {v4, v5}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@31
    .line 7512
    :goto_0
    return-void

    #@32
    :cond_1
    monitor-exit v5

    #@33
    .line 7524
    return-void

    #@34
    .line 7517
    .end local v3    # "taskId":I
    :catchall_0
    move-exception v4

    #@35
    monitor-exit v5

    #@36
    throw v4

    #@37
    .line 7529
    .restart local v3    # "taskId":I
    :catch_0
    move-exception v1

    #@38
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method private tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I
    .locals 6
    .param p1, "interestingPos"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 1636
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v3

    #@4
    .line 1637
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3, p2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@7
    move-result v4

    #@8
    .line 1638
    .local v4, "wpos":I
    if-ltz v4, :cond_3

    #@a
    .line 1639
    if-ge v4, p1, :cond_0

    #@c
    add-int/lit8 p1, p1, -0x1

    #@e
    .line 1641
    :cond_0
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@11
    .line 1642
    const/4 v5, 0x1

    #@12
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@14
    .line 1643
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@16
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@19
    move-result v0

    #@1a
    .line 1644
    .local v0, "NC":I
    :cond_1
    :goto_0
    if-lez v0, :cond_3

    #@1c
    .line 1645
    add-int/lit8 v0, v0, -0x1

    #@1e
    .line 1646
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@20
    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@23
    move-result-object v2

    #@24
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@26
    .line 1647
    .local v2, "cw":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@29
    move-result v1

    #@2a
    .line 1648
    .local v1, "cpos":I
    if-ltz v1, :cond_1

    #@2c
    .line 1649
    if-ge v1, p1, :cond_2

    #@2e
    add-int/lit8 p1, p1, -0x1

    #@30
    .line 1652
    :cond_2
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    #@33
    goto :goto_0

    #@34
    .line 1656
    .end local v0    # "NC":I
    .end local v1    # "cpos":I
    .end local v2    # "cw":Lcom/android/server/wm/WindowState;
    :cond_3
    return p1
.end method

.method private transferStartingWindow(Landroid/os/IBinder;Lcom/android/server/wm/AppWindowToken;)Z
    .locals 11
    .param p1, "transferFrom"    # Landroid/os/IBinder;
    .param p2, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v9, 0x0

    #@1
    const/4 v10, 0x1

    #@2
    const/4 v8, 0x0

    #@3
    .line 4149
    if-nez p1, :cond_0

    #@5
    .line 4150
    return v9

    #@6
    .line 4152
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@9
    move-result-object v5

    #@a
    .line 4153
    .local v5, "ttoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v5, :cond_1

    #@c
    .line 4154
    return v9

    #@d
    .line 4156
    :cond_1
    iget-object v1, v5, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@f
    .line 4157
    .local v1, "startingWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_6

    #@11
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@13
    if-eqz v7, :cond_6

    #@15
    .line 4160
    iput-boolean v10, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@17
    .line 4165
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@1a
    move-result-wide v2

    #@1b
    .line 4168
    .local v2, "origId":J
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@1d
    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@1f
    .line 4169
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@21
    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@23
    .line 4170
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@25
    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@27
    .line 4171
    iput-boolean v9, v5, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@29
    .line 4172
    iput-object v1, p2, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@2b
    .line 4173
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    #@2d
    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    #@2f
    .line 4174
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@31
    .line 4175
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@33
    .line 4176
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@35
    .line 4177
    iput-boolean v10, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@37
    .line 4178
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@39
    .line 4179
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mRootToken:Lcom/android/server/wm/WindowToken;

    #@3b
    .line 4180
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@3d
    .line 4185
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@40
    move-result-object v7

    #@41
    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@44
    .line 4186
    iput-boolean v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@46
    .line 4189
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@48
    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@4b
    .line 4190
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@4d
    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@50
    .line 4191
    invoke-direct {p0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@53
    .line 4198
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@55
    if-eqz v7, :cond_2

    #@57
    .line 4199
    iput-boolean v10, p2, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    #@59
    .line 4200
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@5b
    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    #@5d
    .line 4202
    :cond_2
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@5f
    if-eqz v7, :cond_3

    #@61
    .line 4203
    iput-boolean v10, p2, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@63
    .line 4205
    :cond_3
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@65
    if-nez v7, :cond_4

    #@67
    .line 4206
    iput-boolean v9, p2, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@69
    .line 4207
    iput-boolean v9, p2, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@6b
    .line 4209
    :cond_4
    iget-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@6d
    iget-boolean v8, v5, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@6f
    if-eq v7, v8, :cond_5

    #@71
    .line 4210
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@73
    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@75
    .line 4211
    invoke-virtual {p2}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@78
    .line 4213
    :cond_5
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@7a
    .line 4214
    iget-object v8, p2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@7c
    iget-object v9, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@7e
    .line 4213
    invoke-virtual {v7, v8, v9}, Lcom/android/server/wm/AppWindowAnimator;->transferCurrentAnimation(Lcom/android/server/wm/AppWindowAnimator;Lcom/android/server/wm/WindowStateAnimator;)V

    #@81
    .line 4216
    const/4 v7, 0x3

    #@82
    invoke-virtual {p0, v7, v10}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@85
    .line 4218
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@88
    move-result-object v7

    #@89
    iput-boolean v10, v7, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@8b
    .line 4219
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@8d
    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@90
    .line 4220
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@93
    .line 4221
    return v10

    #@94
    .line 4222
    .end local v2    # "origId":J
    :cond_6
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@96
    if-eqz v7, :cond_7

    #@98
    .line 4227
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@9a
    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@9c
    .line 4228
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@9e
    .line 4229
    iput-boolean v10, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@a0
    .line 4230
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@a2
    const/4 v8, 0x5

    #@a3
    invoke-virtual {v7, v8, p2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@a6
    move-result-object v0

    #@a7
    .line 4234
    .local v0, "m":Landroid/os/Message;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@a9
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z

    #@ac
    .line 4235
    return v10

    #@ad
    .line 4237
    .end local v0    # "m":Landroid/os/Message;
    :cond_7
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@af
    .line 4238
    .local v4, "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    iget-object v6, p2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@b1
    .line 4239
    .local v6, "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@b3
    if-eqz v7, :cond_9

    #@b5
    .line 4241
    iget-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@b7
    if-eqz v7, :cond_8

    #@b9
    .line 4242
    iget-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@bb
    invoke-virtual {v7}, Landroid/view/SurfaceControl;->destroy()V

    #@be
    .line 4244
    :cond_8
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@c0
    iput-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@c2
    .line 4245
    iget v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    #@c4
    iput v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    #@c6
    .line 4246
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    #@c8
    iput-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    #@ca
    .line 4247
    iput-object v8, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    #@cc
    .line 4249
    :cond_9
    return v9
.end method

.method private tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;ZZ)Z
    .locals 6
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p3, "isDefaultDisplay"    # Z
    .param p4, "focusMayChange"    # Z

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v4, 0x0

    #@2
    const/4 v3, 0x1

    #@3
    .line 2994
    const/4 v0, 0x2

    #@4
    .line 2995
    .local v0, "transit":I
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6
    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    #@8
    const/4 v2, 0x3

    #@9
    if-ne v1, v2, :cond_0

    #@b
    .line 2996
    const/4 v0, 0x5

    #@c
    .line 2998
    :cond_0
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    #@f
    move-result v1

    #@10
    if-eqz v1, :cond_2

    #@12
    invoke-virtual {p2, v0, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@15
    move-result v1

    #@16
    if-eqz v1, :cond_2

    #@18
    .line 2999
    move p4, p3

    #@19
    .line 3000
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@1b
    .line 3001
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1d
    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    #@1f
    .line 3020
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@21
    if-eqz v1, :cond_1

    #@23
    .line 3021
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@26
    move-result v1

    #@27
    if-nez v1, :cond_1

    #@29
    .line 3022
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@2b
    invoke-virtual {v1, p1, v0}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@2e
    .line 3024
    :cond_1
    return p4

    #@2f
    .line 3002
    :cond_2
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@31
    invoke-virtual {v1}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_3

    #@37
    .line 3005
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@39
    .line 3006
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@3b
    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    #@3d
    goto :goto_0

    #@3e
    .line 3007
    :cond_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@40
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WallpaperController;->isWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    #@43
    move-result v1

    #@44
    if-eqz v1, :cond_4

    #@46
    .line 3011
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@48
    .line 3012
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@4a
    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    #@4c
    goto :goto_0

    #@4d
    .line 3014
    :cond_4
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@4f
    if-ne v1, p1, :cond_5

    #@51
    .line 3015
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@53
    .line 3017
    :cond_5
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->destroyOrSaveSurface()V

    #@56
    goto :goto_0
.end method

.method private updateCircularDisplayMaskIfNeeded()V
    .locals 7

    #@0
    .prologue
    .line 5977
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@5
    move-result-object v4

    #@6
    invoke-virtual {v4}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    #@9
    move-result-object v4

    #@a
    invoke-virtual {v4}, Landroid/content/res/Configuration;->isScreenRound()Z

    #@d
    move-result v4

    #@e
    if-eqz v4, :cond_0

    #@10
    .line 5978
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@12
    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@15
    move-result-object v4

    #@16
    .line 5979
    const v5, 0x1120086

    #@19
    .line 5978
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@1c
    move-result v4

    #@1d
    .line 5977
    if-eqz v4, :cond_0

    #@1f
    .line 5981
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@21
    monitor-enter v4

    #@22
    .line 5982
    :try_start_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@24
    .local v0, "currentUserId":I
    monitor-exit v4

    #@25
    .line 5987
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@27
    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@2a
    move-result-object v4

    #@2b
    .line 5988
    const-string/jumbo v5, "accessibility_display_inversion_enabled"

    #@2e
    const/4 v6, 0x0

    #@2f
    .line 5987
    invoke-static {v4, v5, v6, v0}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    #@32
    move-result v1

    #@33
    .line 5989
    .local v1, "inversionState":I
    const/4 v4, 0x1

    #@34
    if-ne v1, v4, :cond_1

    #@36
    const/4 v3, 0x0

    #@37
    .line 5990
    .local v3, "showMask":I
    :goto_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@39
    const/16 v5, 0x23

    #@3b
    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    #@3e
    move-result-object v2

    #@3f
    .line 5991
    .local v2, "m":Landroid/os/Message;
    iput v3, v2, Landroid/os/Message;->arg1:I

    #@41
    .line 5992
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@43
    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@46
    .line 5975
    .end local v0    # "currentUserId":I
    .end local v1    # "inversionState":I
    .end local v2    # "m":Landroid/os/Message;
    .end local v3    # "showMask":I
    :cond_0
    return-void

    #@47
    .line 5981
    :catchall_0
    move-exception v5

    #@48
    monitor-exit v4

    #@49
    throw v5

    #@4a
    .line 5989
    .restart local v0    # "currentUserId":I
    .restart local v1    # "inversionState":I
    :cond_1
    const/4 v3, 0x1

    #@4b
    .restart local v3    # "showMask":I
    goto :goto_0
.end method

.method private updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .locals 8
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    const/4 v5, 0x1

    #@2
    const/4 v6, 0x0

    #@3
    .line 3672
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@5
    if-nez v4, :cond_0

    #@7
    .line 3673
    return-object v7

    #@8
    .line 3675
    :cond_0
    const/4 v2, 0x0

    #@9
    .line 3677
    .local v2, "config":Landroid/content/res/Configuration;
    invoke-virtual {p0, v6}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@c
    move-result v4

    #@d
    if-eqz v4, :cond_3

    #@f
    .line 3678
    if-eqz p2, :cond_1

    #@11
    .line 3679
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@14
    move-result-object v1

    #@15
    .line 3680
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_1

    #@17
    .line 3681
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@1a
    .line 3684
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;

    #@1d
    move-result-object v2

    #@1e
    .line 3709
    .end local v2    # "config":Landroid/content/res/Configuration;
    :cond_2
    :goto_0
    return-object v2

    #@1f
    .line 3686
    .restart local v2    # "config":Landroid/content/res/Configuration;
    :cond_3
    if-eqz p1, :cond_2

    #@21
    .line 3691
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@23
    invoke-virtual {v4}, Landroid/content/res/Configuration;->setToDefaults()V

    #@26
    .line 3692
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@28
    invoke-virtual {v4, p1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    #@2b
    .line 3693
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@2d
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    #@30
    .line 3694
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@32
    invoke-virtual {p1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    #@35
    move-result v4

    #@36
    if-eqz v4, :cond_2

    #@38
    .line 3695
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@3a
    .line 3696
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3d
    move-result-object v3

    #@3e
    .line 3697
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iput-boolean v5, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@40
    .line 3698
    const/4 v4, 0x2

    #@41
    new-array v0, v4, [I

    #@43
    .line 3699
    .local v0, "anim":[I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@46
    move-result v4

    #@47
    if-eqz v4, :cond_4

    #@49
    .line 3700
    aput v6, v0, v5

    #@4b
    aput v6, v0, v6

    #@4d
    .line 3704
    :goto_1
    aget v4, v0, v6

    #@4f
    aget v5, v0, v5

    #@51
    invoke-direct {p0, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@54
    .line 3705
    new-instance v2, Landroid/content/res/Configuration;

    #@56
    .end local v2    # "config":Landroid/content/res/Configuration;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    #@58
    invoke-direct {v2, v4}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    #@5b
    .local v2, "config":Landroid/content/res/Configuration;
    goto :goto_0

    #@5c
    .line 3702
    .local v2, "config":Landroid/content/res/Configuration;
    :cond_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5e
    invoke-interface {v4, v0}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    #@61
    goto :goto_1
.end method


# virtual methods
.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZLandroid/graphics/Rect;Landroid/content/res/Configuration;IZZI)V
    .locals 14
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showForAllUsers"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I
    .param p10, "voiceInteraction"    # Z
    .param p11, "launchTaskBehind"    # Z
    .param p12, "taskBounds"    # Landroid/graphics/Rect;
    .param p13, "config"    # Landroid/content/res/Configuration;
    .param p14, "taskResizeMode"    # I
    .param p15, "alwaysFocusable"    # Z
    .param p16, "homeTask"    # Z
    .param p17, "targetSdkVersion"    # I

    #@0
    .prologue
    .line 3424
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3425
    const-string/jumbo v3, "addAppToken()"

    #@6
    .line 3424
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 3426
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 3437
    :cond_0
    :try_start_0
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->getKeyDispatchingTimeout()J
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@18
    move-result-wide v2

    #@19
    const-wide/32 v4, 0xf4240

    #@1c
    mul-long v10, v2, v4

    #@1e
    .line 3443
    .local v10, "inputDispatchingTimeoutNanos":J
    :goto_0
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@20
    monitor-enter v13

    #@21
    .line 3444
    :try_start_1
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@24
    move-result-object v2

    #@25
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@28
    move-result-object v6

    #@29
    .line 3445
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v6, :cond_1

    #@2b
    .line 3446
    const-string/jumbo v2, "WindowManager"

    #@2e
    new-instance v3, Ljava/lang/StringBuilder;

    #@30
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@33
    const-string/jumbo v4, "Attempted to add existing app token: "

    #@36
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@39
    move-result-object v3

    #@3a
    move-object/from16 v0, p2

    #@3c
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3f
    move-result-object v3

    #@40
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@43
    move-result-object v3

    #@44
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@47
    monitor-exit v13

    #@48
    .line 3447
    return-void

    #@49
    .line 3438
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v10    # "inputDispatchingTimeoutNanos":J
    :catch_0
    move-exception v9

    #@4a
    .line 3439
    .local v9, "ex":Landroid/os/RemoteException;
    const-string/jumbo v2, "WindowManager"

    #@4d
    const-string/jumbo v3, "Could not get dispatching timeout."

    #@50
    invoke-static {v2, v3, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@53
    .line 3440
    const-wide v10, 0x12a05f200L

    #@58
    .restart local v10    # "inputDispatchingTimeoutNanos":J
    goto :goto_0

    #@59
    .line 3449
    .end local v9    # "ex":Landroid/os/RemoteException;
    .restart local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1
    :try_start_2
    new-instance v6, Lcom/android/server/wm/AppWindowToken;

    #@5b
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p2

    #@5d
    move/from16 v1, p10

    #@5f
    invoke-direct {v6, p0, v0, v1}, Lcom/android/server/wm/AppWindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IApplicationToken;Z)V

    #@62
    .line 3450
    .restart local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    iput-wide v10, v6, Lcom/android/server/wm/AppWindowToken;->inputDispatchingTimeoutNanos:J

    #@64
    .line 3451
    move/from16 v0, p6

    #@66
    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@68
    .line 3452
    move/from16 v0, p7

    #@6a
    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    #@6c
    .line 3453
    move/from16 v0, p17

    #@6e
    iput v0, v6, Lcom/android/server/wm/AppWindowToken;->targetSdk:I

    #@70
    .line 3454
    move/from16 v0, p5

    #@72
    iput v0, v6, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@74
    .line 3455
    move/from16 v0, p9

    #@76
    and-int/lit16 v2, v0, 0x480

    #@78
    if-eqz v2, :cond_3

    #@7a
    const/4 v2, 0x1

    #@7b
    :goto_1
    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    #@7d
    .line 3457
    move/from16 v0, p11

    #@7f
    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    #@81
    .line 3458
    move/from16 v0, p15

    #@83
    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->mAlwaysFocusable:Z

    #@85
    .line 3462
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@87
    move/from16 v0, p3

    #@89
    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8c
    move-result-object v12

    #@8d
    check-cast v12, Lcom/android/server/wm/Task;

    #@8f
    .line 3463
    .local v12, "task":Lcom/android/server/wm/Task;
    if-nez v12, :cond_2

    #@91
    move-object v2, p0

    #@92
    move/from16 v3, p3

    #@94
    move/from16 v4, p4

    #@96
    move/from16 v5, p8

    #@98
    move-object/from16 v7, p12

    #@9a
    move-object/from16 v8, p13

    #@9c
    .line 3464
    invoke-direct/range {v2 .. v8}, Lcom/android/server/wm/WindowManagerService;->createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;

    #@9f
    move-result-object v12

    #@a0
    .line 3466
    :cond_2
    move/from16 v0, p14

    #@a2
    move/from16 v1, p16

    #@a4
    invoke-virtual {v12, p1, v6, v0, v1}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;IZ)V

    #@a7
    .line 3468
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@a9
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@ac
    move-result-object v3

    #@ad
    invoke-virtual {v2, v3, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@b0
    .line 3471
    const/4 v2, 0x1

    #@b1
    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@b3
    .line 3472
    const/4 v2, 0x1

    #@b4
    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@b6
    monitor-exit v13

    #@b7
    .line 3423
    return-void

    #@b8
    .line 3455
    .end local v12    # "task":Lcom/android/server/wm/Task;
    :cond_3
    const/4 v2, 0x0

    #@b9
    goto :goto_1

    #@ba
    .line 3443
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v2

    #@bb
    monitor-exit v13

    #@bc
    throw v2
.end method

.method public addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Landroid/view/WindowManagerPolicy$InputConsumer;
    .locals 4
    .param p1, "looper"    # Landroid/os/Looper;
    .param p2, "inputEventReceiverFactory"    # Landroid/view/InputEventReceiver$Factory;

    #@0
    .prologue
    .line 10024
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10025
    :try_start_0
    new-instance v0, Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;

    #@5
    invoke-direct {v0, p0, p1, p2}, Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)V

    #@8
    .line 10027
    .local v0, "inputConsumerImpl":Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@a
    .line 10028
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@c
    const/4 v3, 0x1

    #@d
    invoke-virtual {v1, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 10029
    return-object v0

    #@12
    .line 10024
    .end local v0    # "inputConsumerImpl":Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .locals 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    .line 1619
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@4
    move-result v0

    #@5
    .line 1620
    .local v0, "pos":I
    if-ltz v0, :cond_0

    #@7
    .line 1621
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@9
    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@b
    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@d
    .line 1625
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@10
    move-result-object v1

    #@11
    invoke-virtual {v1, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    #@14
    .line 1626
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@16
    .line 1627
    add-int/lit8 v1, v0, 0x1

    #@18
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@1b
    .line 1628
    return-void

    #@1c
    .line 1630
    :cond_0
    const/4 v1, 0x0

    #@1d
    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1f
    .line 1631
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@22
    .line 1632
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@25
    .line 1618
    return-void
.end method

.method public addTask(IIZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    #@0
    .prologue
    .line 5083
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5086
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v2

    #@9
    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5087
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_0

    #@d
    monitor-exit v4

    #@e
    .line 5089
    return-void

    #@f
    .line 5091
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@17
    .line 5092
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v1, v2, p3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;Z)V

    #@1a
    .line 5093
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@1d
    move-result-object v0

    #@1e
    .line 5094
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    #@1f
    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@21
    .line 5095
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@23
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@26
    monitor-exit v4

    #@27
    .line 5082
    return-void

    #@28
    .line 5083
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@29
    monitor-exit v4

    #@2a
    throw v3
.end method

.method public addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/InputChannel;)I
    .locals 37
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "viewVisibility"    # I
    .param p6, "displayId"    # I
    .param p7, "outContentInsets"    # Landroid/graphics/Rect;
    .param p8, "outStableInsets"    # Landroid/graphics/Rect;
    .param p9, "outOutsets"    # Landroid/graphics/Rect;
    .param p10, "outInputChannel"    # Landroid/view/InputChannel;

    #@0
    .prologue
    .line 1853
    const/4 v3, 0x1

    #@1
    new-array v0, v3, [I

    #@3
    move-object/from16 v23, v0

    #@5
    .line 1854
    .local v23, "appOp":[I
    move-object/from16 v0, p0

    #@7
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    move-object/from16 v0, p4

    #@b
    move-object/from16 v1, v23

    #@d
    invoke-interface {v3, v0, v1}, Landroid/view/WindowManagerPolicy;->checkAddPermission(Landroid/view/WindowManager$LayoutParams;[I)I

    #@10
    move-result v32

    #@11
    .line 1855
    .local v32, "res":I
    if-eqz v32, :cond_0

    #@13
    .line 1856
    return v32

    #@14
    .line 1859
    :cond_0
    const/16 v29, 0x0

    #@16
    .line 1860
    .local v29, "reportNewConfig":Z
    const/4 v7, 0x0

    #@17
    .line 1862
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p4

    #@19
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@1b
    move/from16 v34, v0

    #@1d
    .line 1864
    .local v34, "type":I
    move-object/from16 v0, p0

    #@1f
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@21
    move-object/from16 v36, v0

    #@23
    monitor-enter v36

    #@24
    .line 1865
    :try_start_0
    move-object/from16 v0, p0

    #@26
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@28
    if-nez v3, :cond_1

    #@2a
    .line 1866
    new-instance v3, Ljava/lang/IllegalStateException;

    #@2c
    const-string/jumbo v4, "Display has not been initialialized"

    #@2f
    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    #@32
    throw v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@33
    .line 1864
    .end local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@34
    monitor-exit v36

    #@35
    throw v3

    #@36
    .line 1869
    .restart local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :cond_1
    :try_start_1
    move-object/from16 v0, p0

    #@38
    move/from16 v1, p6

    #@3a
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@3d
    move-result-object v12

    #@3e
    .line 1870
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v12, :cond_2

    #@40
    .line 1871
    const-string/jumbo v3, "WindowManager"

    #@43
    new-instance v4, Ljava/lang/StringBuilder;

    #@45
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@48
    const-string/jumbo v5, "Attempted to add window to a display that does not exist: "

    #@4b
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v4

    #@4f
    move/from16 v0, p6

    #@51
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@54
    move-result-object v4

    #@55
    .line 1872
    const-string/jumbo v5, ".  Aborting."

    #@58
    .line 1871
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5b
    move-result-object v4

    #@5c
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@5f
    move-result-object v4

    #@60
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@63
    .line 1873
    const/16 v3, -0x9

    #@65
    monitor-exit v36

    #@66
    return v3

    #@67
    .line 1875
    :cond_2
    :try_start_2
    move-object/from16 v0, p1

    #@69
    iget v3, v0, Lcom/android/server/wm/Session;->mUid:I

    #@6b
    invoke-virtual {v12, v3}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@6e
    move-result v3

    #@6f
    if-nez v3, :cond_3

    #@71
    .line 1876
    const-string/jumbo v3, "WindowManager"

    #@74
    new-instance v4, Ljava/lang/StringBuilder;

    #@76
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@79
    const-string/jumbo v5, "Attempted to add window to a display for which the application does not have access: "

    #@7c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v4

    #@80
    move/from16 v0, p6

    #@82
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@85
    move-result-object v4

    #@86
    .line 1877
    const-string/jumbo v5, ".  Aborting."

    #@89
    .line 1876
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8c
    move-result-object v4

    #@8d
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@90
    move-result-object v4

    #@91
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@94
    .line 1878
    const/16 v3, -0x9

    #@96
    monitor-exit v36

    #@97
    return v3

    #@98
    .line 1881
    :cond_3
    :try_start_3
    move-object/from16 v0, p0

    #@9a
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@9c
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@9f
    move-result-object v4

    #@a0
    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    #@a3
    move-result v3

    #@a4
    if-eqz v3, :cond_4

    #@a6
    .line 1882
    const-string/jumbo v3, "WindowManager"

    #@a9
    new-instance v4, Ljava/lang/StringBuilder;

    #@ab
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@ae
    const-string/jumbo v5, "Window "

    #@b1
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b4
    move-result-object v4

    #@b5
    move-object/from16 v0, p2

    #@b7
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@ba
    move-result-object v4

    #@bb
    const-string/jumbo v5, " is already added"

    #@be
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c1
    move-result-object v4

    #@c2
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c5
    move-result-object v4

    #@c6
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@c9
    .line 1883
    const/4 v3, -0x5

    #@ca
    monitor-exit v36

    #@cb
    return v3

    #@cc
    .line 1886
    :cond_4
    const/16 v3, 0x3e8

    #@ce
    move/from16 v0, v34

    #@d0
    if-lt v0, v3, :cond_6

    #@d2
    const/16 v3, 0x7cf

    #@d4
    move/from16 v0, v34

    #@d6
    if-gt v0, v3, :cond_6

    #@d8
    .line 1887
    :try_start_4
    move-object/from16 v0, p4

    #@da
    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@dc
    const/4 v4, 0x0

    #@dd
    const/4 v5, 0x0

    #@de
    move-object/from16 v0, p0

    #@e0
    invoke-virtual {v0, v4, v3, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@e3
    move-result-object v7

    #@e4
    .line 1888
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    if-nez v7, :cond_5

    #@e6
    .line 1889
    const-string/jumbo v3, "WindowManager"

    #@e9
    new-instance v4, Ljava/lang/StringBuilder;

    #@eb
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@ee
    const-string/jumbo v5, "Attempted to add window with token that is not a window: "

    #@f1
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f4
    move-result-object v4

    #@f5
    .line 1890
    move-object/from16 v0, p4

    #@f7
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@f9
    .line 1889
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@fc
    move-result-object v4

    #@fd
    .line 1890
    const-string/jumbo v5, ".  Aborting."

    #@100
    .line 1889
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@103
    move-result-object v4

    #@104
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@107
    move-result-object v4

    #@108
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@10b
    .line 1891
    const/4 v3, -0x2

    #@10c
    monitor-exit v36

    #@10d
    return v3

    #@10e
    .line 1893
    :cond_5
    :try_start_5
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@110
    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    #@112
    const/16 v4, 0x3e8

    #@114
    if-lt v3, v4, :cond_6

    #@116
    .line 1894
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@118
    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    #@11a
    const/16 v4, 0x7cf

    #@11c
    if-gt v3, v4, :cond_6

    #@11e
    .line 1895
    const-string/jumbo v3, "WindowManager"

    #@121
    new-instance v4, Ljava/lang/StringBuilder;

    #@123
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@126
    const-string/jumbo v5, "Attempted to add window with token that is a sub-window: "

    #@129
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12c
    move-result-object v4

    #@12d
    .line 1896
    move-object/from16 v0, p4

    #@12f
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@131
    .line 1895
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@134
    move-result-object v4

    #@135
    .line 1896
    const-string/jumbo v5, ".  Aborting."

    #@138
    .line 1895
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13b
    move-result-object v4

    #@13c
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@13f
    move-result-object v4

    #@140
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@143
    .line 1897
    const/4 v3, -0x2

    #@144
    monitor-exit v36

    #@145
    return v3

    #@146
    .line 1901
    .end local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :cond_6
    const/16 v3, 0x7ee

    #@148
    move/from16 v0, v34

    #@14a
    if-ne v0, v3, :cond_7

    #@14c
    :try_start_6
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isPrivate()Z

    #@14f
    move-result v3

    #@150
    if-eqz v3, :cond_8

    #@152
    .line 1906
    :cond_7
    const/16 v22, 0x0

    #@154
    .line 1907
    .local v22, "addToken":Z
    move-object/from16 v0, p0

    #@156
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@158
    move-object/from16 v0, p4

    #@15a
    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@15c
    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@15f
    move-result-object v6

    #@160
    check-cast v6, Lcom/android/server/wm/WindowToken;

    #@162
    .line 1908
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    const/16 v24, 0x0

    #@164
    .line 1909
    .local v24, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v6, :cond_11

    #@166
    .line 1910
    const/4 v3, 0x1

    #@167
    move/from16 v0, v34

    #@169
    if-lt v0, v3, :cond_9

    #@16b
    const/16 v3, 0x63

    #@16d
    move/from16 v0, v34

    #@16f
    if-gt v0, v3, :cond_9

    #@171
    .line 1911
    const-string/jumbo v3, "WindowManager"

    #@174
    new-instance v4, Ljava/lang/StringBuilder;

    #@176
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@179
    const-string/jumbo v5, "Attempted to add application window with unknown token "

    #@17c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@17f
    move-result-object v4

    #@180
    .line 1912
    move-object/from16 v0, p4

    #@182
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@184
    .line 1911
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@187
    move-result-object v4

    #@188
    .line 1912
    const-string/jumbo v5, ".  Aborting."

    #@18b
    .line 1911
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18e
    move-result-object v4

    #@18f
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@192
    move-result-object v4

    #@193
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@196
    .line 1913
    const/4 v3, -0x1

    #@197
    monitor-exit v36

    #@198
    return v3

    #@199
    .line 1902
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v22    # "addToken":Z
    .end local v24    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    :try_start_7
    const-string/jumbo v3, "WindowManager"

    #@19c
    const-string/jumbo v4, "Attempted to add private presentation window to a non-private display.  Aborting."

    #@19f
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    #@1a2
    .line 1903
    const/4 v3, -0x8

    #@1a3
    monitor-exit v36

    #@1a4
    return v3

    #@1a5
    .line 1915
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v22    # "addToken":Z
    .restart local v24    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_9
    const/16 v3, 0x7db

    #@1a7
    move/from16 v0, v34

    #@1a9
    if-ne v0, v3, :cond_a

    #@1ab
    .line 1916
    :try_start_8
    const-string/jumbo v3, "WindowManager"

    #@1ae
    new-instance v4, Ljava/lang/StringBuilder;

    #@1b0
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@1b3
    const-string/jumbo v5, "Attempted to add input method window with unknown token "

    #@1b6
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1b9
    move-result-object v4

    #@1ba
    .line 1917
    move-object/from16 v0, p4

    #@1bc
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@1be
    .line 1916
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c1
    move-result-object v4

    #@1c2
    .line 1917
    const-string/jumbo v5, ".  Aborting."

    #@1c5
    .line 1916
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c8
    move-result-object v4

    #@1c9
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1cc
    move-result-object v4

    #@1cd
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    #@1d0
    .line 1918
    const/4 v3, -0x1

    #@1d1
    monitor-exit v36

    #@1d2
    return v3

    #@1d3
    .line 1920
    :cond_a
    const/16 v3, 0x7ef

    #@1d5
    move/from16 v0, v34

    #@1d7
    if-ne v0, v3, :cond_b

    #@1d9
    .line 1921
    :try_start_9
    const-string/jumbo v3, "WindowManager"

    #@1dc
    new-instance v4, Ljava/lang/StringBuilder;

    #@1de
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@1e1
    const-string/jumbo v5, "Attempted to add voice interaction window with unknown token "

    #@1e4
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1e7
    move-result-object v4

    #@1e8
    .line 1922
    move-object/from16 v0, p4

    #@1ea
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@1ec
    .line 1921
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1ef
    move-result-object v4

    #@1f0
    .line 1922
    const-string/jumbo v5, ".  Aborting."

    #@1f3
    .line 1921
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f6
    move-result-object v4

    #@1f7
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1fa
    move-result-object v4

    #@1fb
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    #@1fe
    .line 1923
    const/4 v3, -0x1

    #@1ff
    monitor-exit v36

    #@200
    return v3

    #@201
    .line 1925
    :cond_b
    const/16 v3, 0x7dd

    #@203
    move/from16 v0, v34

    #@205
    if-ne v0, v3, :cond_c

    #@207
    .line 1926
    :try_start_a
    const-string/jumbo v3, "WindowManager"

    #@20a
    new-instance v4, Ljava/lang/StringBuilder;

    #@20c
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@20f
    const-string/jumbo v5, "Attempted to add wallpaper window with unknown token "

    #@212
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@215
    move-result-object v4

    #@216
    .line 1927
    move-object/from16 v0, p4

    #@218
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@21a
    .line 1926
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@21d
    move-result-object v4

    #@21e
    .line 1927
    const-string/jumbo v5, ".  Aborting."

    #@221
    .line 1926
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@224
    move-result-object v4

    #@225
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@228
    move-result-object v4

    #@229
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    #@22c
    .line 1928
    const/4 v3, -0x1

    #@22d
    monitor-exit v36

    #@22e
    return v3

    #@22f
    .line 1930
    :cond_c
    const/16 v3, 0x7e7

    #@231
    move/from16 v0, v34

    #@233
    if-ne v0, v3, :cond_d

    #@235
    .line 1931
    :try_start_b
    const-string/jumbo v3, "WindowManager"

    #@238
    new-instance v4, Ljava/lang/StringBuilder;

    #@23a
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@23d
    const-string/jumbo v5, "Attempted to add Dream window with unknown token "

    #@240
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@243
    move-result-object v4

    #@244
    .line 1932
    move-object/from16 v0, p4

    #@246
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@248
    .line 1931
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@24b
    move-result-object v4

    #@24c
    .line 1932
    const-string/jumbo v5, ".  Aborting."

    #@24f
    .line 1931
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@252
    move-result-object v4

    #@253
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@256
    move-result-object v4

    #@257
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    #@25a
    .line 1933
    const/4 v3, -0x1

    #@25b
    monitor-exit v36

    #@25c
    return v3

    #@25d
    .line 1935
    :cond_d
    const/16 v3, 0x7f3

    #@25f
    move/from16 v0, v34

    #@261
    if-ne v0, v3, :cond_e

    #@263
    .line 1936
    :try_start_c
    const-string/jumbo v3, "WindowManager"

    #@266
    new-instance v4, Ljava/lang/StringBuilder;

    #@268
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@26b
    const-string/jumbo v5, "Attempted to add QS dialog window with unknown token "

    #@26e
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@271
    move-result-object v4

    #@272
    .line 1937
    move-object/from16 v0, p4

    #@274
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@276
    .line 1936
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@279
    move-result-object v4

    #@27a
    .line 1937
    const-string/jumbo v5, ".  Aborting."

    #@27d
    .line 1936
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@280
    move-result-object v4

    #@281
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@284
    move-result-object v4

    #@285
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    #@288
    .line 1938
    const/4 v3, -0x1

    #@289
    monitor-exit v36

    #@28a
    return v3

    #@28b
    .line 1940
    :cond_e
    const/16 v3, 0x7f0

    #@28d
    move/from16 v0, v34

    #@28f
    if-ne v0, v3, :cond_f

    #@291
    .line 1941
    :try_start_d
    const-string/jumbo v3, "WindowManager"

    #@294
    new-instance v4, Ljava/lang/StringBuilder;

    #@296
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@299
    const-string/jumbo v5, "Attempted to add Accessibility overlay window with unknown token "

    #@29c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@29f
    move-result-object v4

    #@2a0
    .line 1942
    move-object/from16 v0, p4

    #@2a2
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@2a4
    .line 1941
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2a7
    move-result-object v4

    #@2a8
    .line 1942
    const-string/jumbo v5, ".  Aborting."

    #@2ab
    .line 1941
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2ae
    move-result-object v4

    #@2af
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b2
    move-result-object v4

    #@2b3
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_0

    #@2b6
    .line 1943
    const/4 v3, -0x1

    #@2b7
    monitor-exit v36

    #@2b8
    return v3

    #@2b9
    .line 1945
    :cond_f
    :try_start_e
    new-instance v6, Lcom/android/server/wm/WindowToken;

    #@2bb
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p4

    #@2bd
    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@2bf
    const/4 v4, -0x1

    #@2c0
    const/4 v5, 0x0

    #@2c1
    move-object/from16 v0, p0

    #@2c3
    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@2c6
    .line 1946
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v22, 0x1

    #@2c8
    .line 2009
    .end local v24    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_10
    :goto_0
    new-instance v2, Lcom/android/server/wm/WindowState;

    #@2ca
    .line 2010
    const/4 v3, 0x0

    #@2cb
    aget v8, v23, v3

    #@2cd
    move-object/from16 v3, p0

    #@2cf
    move-object/from16 v4, p1

    #@2d1
    move-object/from16 v5, p2

    #@2d3
    move/from16 v9, p3

    #@2d5
    move-object/from16 v10, p4

    #@2d7
    move/from16 v11, p5

    #@2d9
    .line 2009
    invoke-direct/range {v2 .. v12}, Lcom/android/server/wm/WindowState;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/Session;Landroid/view/IWindow;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowState;IILandroid/view/WindowManager$LayoutParams;ILcom/android/server/wm/DisplayContent;)V

    #@2dc
    .line 2011
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDeathRecipient:Lcom/android/server/wm/WindowState$DeathRecipient;

    #@2de
    if-nez v3, :cond_1b

    #@2e0
    .line 2014
    const-string/jumbo v3, "WindowManager"

    #@2e3
    new-instance v4, Ljava/lang/StringBuilder;

    #@2e5
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@2e8
    const-string/jumbo v5, "Adding window client "

    #@2eb
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2ee
    move-result-object v4

    #@2ef
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@2f2
    move-result-object v5

    #@2f3
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2f6
    move-result-object v4

    #@2f7
    .line 2015
    const-string/jumbo v5, " that is dead, aborting."

    #@2fa
    .line 2014
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2fd
    move-result-object v4

    #@2fe
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@301
    move-result-object v4

    #@302
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_0

    #@305
    .line 2016
    const/4 v3, -0x4

    #@306
    monitor-exit v36

    #@307
    return v3

    #@308
    .line 1947
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .restart local v24    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_11
    const/4 v3, 0x1

    #@309
    move/from16 v0, v34

    #@30b
    if-lt v0, v3, :cond_14

    #@30d
    const/16 v3, 0x63

    #@30f
    move/from16 v0, v34

    #@311
    if-gt v0, v3, :cond_14

    #@313
    .line 1948
    :try_start_f
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@315
    move-object/from16 v24, v0

    #@317
    .line 1949
    .local v24, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v24, :cond_12

    #@319
    .line 1950
    const-string/jumbo v3, "WindowManager"

    #@31c
    new-instance v4, Ljava/lang/StringBuilder;

    #@31e
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@321
    const-string/jumbo v5, "Attempted to add window with non-application token "

    #@324
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@327
    move-result-object v4

    #@328
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@32b
    move-result-object v4

    #@32c
    .line 1951
    const-string/jumbo v5, ".  Aborting."

    #@32f
    .line 1950
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@332
    move-result-object v4

    #@333
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@336
    move-result-object v4

    #@337
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_0

    #@33a
    .line 1952
    const/4 v3, -0x3

    #@33b
    monitor-exit v36

    #@33c
    return v3

    #@33d
    .line 1953
    :cond_12
    :try_start_10
    move-object/from16 v0, v24

    #@33f
    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@341
    if-eqz v3, :cond_13

    #@343
    .line 1954
    const-string/jumbo v3, "WindowManager"

    #@346
    new-instance v4, Ljava/lang/StringBuilder;

    #@348
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@34b
    const-string/jumbo v5, "Attempted to add window with exiting application token "

    #@34e
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@351
    move-result-object v4

    #@352
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@355
    move-result-object v4

    #@356
    .line 1955
    const-string/jumbo v5, ".  Aborting."

    #@359
    .line 1954
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@35c
    move-result-object v4

    #@35d
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@360
    move-result-object v4

    #@361
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_0

    #@364
    .line 1956
    const/4 v3, -0x4

    #@365
    monitor-exit v36

    #@366
    return v3

    #@367
    .line 1958
    :cond_13
    const/4 v3, 0x3

    #@368
    move/from16 v0, v34

    #@36a
    if-ne v0, v3, :cond_10

    #@36c
    :try_start_11
    move-object/from16 v0, v24

    #@36e
    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_0

    #@370
    if-eqz v3, :cond_10

    #@372
    .line 1962
    const/4 v3, -0x6

    #@373
    monitor-exit v36

    #@374
    return v3

    #@375
    .line 1964
    .local v24, "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_14
    const/16 v3, 0x7db

    #@377
    move/from16 v0, v34

    #@379
    if-ne v0, v3, :cond_15

    #@37b
    .line 1965
    :try_start_12
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@37d
    const/16 v4, 0x7db

    #@37f
    if-eq v3, v4, :cond_10

    #@381
    .line 1966
    const-string/jumbo v3, "WindowManager"

    #@384
    new-instance v4, Ljava/lang/StringBuilder;

    #@386
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@389
    const-string/jumbo v5, "Attempted to add input method window with bad token "

    #@38c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@38f
    move-result-object v4

    #@390
    .line 1967
    move-object/from16 v0, p4

    #@392
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@394
    .line 1966
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@397
    move-result-object v4

    #@398
    .line 1967
    const-string/jumbo v5, ".  Aborting."

    #@39b
    .line 1966
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@39e
    move-result-object v4

    #@39f
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3a2
    move-result-object v4

    #@3a3
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_0

    #@3a6
    .line 1968
    const/4 v3, -0x1

    #@3a7
    monitor-exit v36

    #@3a8
    return v3

    #@3a9
    .line 1970
    :cond_15
    const/16 v3, 0x7ef

    #@3ab
    move/from16 v0, v34

    #@3ad
    if-ne v0, v3, :cond_16

    #@3af
    .line 1971
    :try_start_13
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@3b1
    const/16 v4, 0x7ef

    #@3b3
    if-eq v3, v4, :cond_10

    #@3b5
    .line 1972
    const-string/jumbo v3, "WindowManager"

    #@3b8
    new-instance v4, Ljava/lang/StringBuilder;

    #@3ba
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@3bd
    const-string/jumbo v5, "Attempted to add voice interaction window with bad token "

    #@3c0
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3c3
    move-result-object v4

    #@3c4
    .line 1973
    move-object/from16 v0, p4

    #@3c6
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@3c8
    .line 1972
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3cb
    move-result-object v4

    #@3cc
    .line 1973
    const-string/jumbo v5, ".  Aborting."

    #@3cf
    .line 1972
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3d2
    move-result-object v4

    #@3d3
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3d6
    move-result-object v4

    #@3d7
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_0

    #@3da
    .line 1974
    const/4 v3, -0x1

    #@3db
    monitor-exit v36

    #@3dc
    return v3

    #@3dd
    .line 1976
    :cond_16
    const/16 v3, 0x7dd

    #@3df
    move/from16 v0, v34

    #@3e1
    if-ne v0, v3, :cond_17

    #@3e3
    .line 1977
    :try_start_14
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@3e5
    const/16 v4, 0x7dd

    #@3e7
    if-eq v3, v4, :cond_10

    #@3e9
    .line 1978
    const-string/jumbo v3, "WindowManager"

    #@3ec
    new-instance v4, Ljava/lang/StringBuilder;

    #@3ee
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@3f1
    const-string/jumbo v5, "Attempted to add wallpaper window with bad token "

    #@3f4
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3f7
    move-result-object v4

    #@3f8
    .line 1979
    move-object/from16 v0, p4

    #@3fa
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@3fc
    .line 1978
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3ff
    move-result-object v4

    #@400
    .line 1979
    const-string/jumbo v5, ".  Aborting."

    #@403
    .line 1978
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@406
    move-result-object v4

    #@407
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@40a
    move-result-object v4

    #@40b
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_0

    #@40e
    .line 1980
    const/4 v3, -0x1

    #@40f
    monitor-exit v36

    #@410
    return v3

    #@411
    .line 1982
    :cond_17
    const/16 v3, 0x7e7

    #@413
    move/from16 v0, v34

    #@415
    if-ne v0, v3, :cond_18

    #@417
    .line 1983
    :try_start_15
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@419
    const/16 v4, 0x7e7

    #@41b
    if-eq v3, v4, :cond_10

    #@41d
    .line 1984
    const-string/jumbo v3, "WindowManager"

    #@420
    new-instance v4, Ljava/lang/StringBuilder;

    #@422
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@425
    const-string/jumbo v5, "Attempted to add Dream window with bad token "

    #@428
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42b
    move-result-object v4

    #@42c
    .line 1985
    move-object/from16 v0, p4

    #@42e
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@430
    .line 1984
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@433
    move-result-object v4

    #@434
    .line 1985
    const-string/jumbo v5, ".  Aborting."

    #@437
    .line 1984
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@43a
    move-result-object v4

    #@43b
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@43e
    move-result-object v4

    #@43f
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_0

    #@442
    .line 1986
    const/4 v3, -0x1

    #@443
    monitor-exit v36

    #@444
    return v3

    #@445
    .line 1988
    :cond_18
    const/16 v3, 0x7f0

    #@447
    move/from16 v0, v34

    #@449
    if-ne v0, v3, :cond_19

    #@44b
    .line 1989
    :try_start_16
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@44d
    const/16 v4, 0x7f0

    #@44f
    if-eq v3, v4, :cond_10

    #@451
    .line 1990
    const-string/jumbo v3, "WindowManager"

    #@454
    new-instance v4, Ljava/lang/StringBuilder;

    #@456
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@459
    const-string/jumbo v5, "Attempted to add Accessibility overlay window with bad token "

    #@45c
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@45f
    move-result-object v4

    #@460
    .line 1991
    move-object/from16 v0, p4

    #@462
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@464
    .line 1990
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@467
    move-result-object v4

    #@468
    .line 1991
    const-string/jumbo v5, ".  Aborting."

    #@46b
    .line 1990
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@46e
    move-result-object v4

    #@46f
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@472
    move-result-object v4

    #@473
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_0

    #@476
    .line 1992
    const/4 v3, -0x1

    #@477
    monitor-exit v36

    #@478
    return v3

    #@479
    .line 1994
    :cond_19
    const/16 v3, 0x7f3

    #@47b
    move/from16 v0, v34

    #@47d
    if-ne v0, v3, :cond_1a

    #@47f
    .line 1995
    :try_start_17
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    #@481
    const/16 v4, 0x7f3

    #@483
    if-eq v3, v4, :cond_10

    #@485
    .line 1996
    const-string/jumbo v3, "WindowManager"

    #@488
    new-instance v4, Ljava/lang/StringBuilder;

    #@48a
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@48d
    const-string/jumbo v5, "Attempted to add QS dialog window with bad token "

    #@490
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@493
    move-result-object v4

    #@494
    .line 1997
    move-object/from16 v0, p4

    #@496
    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@498
    .line 1996
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@49b
    move-result-object v4

    #@49c
    .line 1997
    const-string/jumbo v5, ".  Aborting."

    #@49f
    .line 1996
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a2
    move-result-object v4

    #@4a3
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4a6
    move-result-object v4

    #@4a7
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_0

    #@4aa
    .line 1998
    const/4 v3, -0x1

    #@4ab
    monitor-exit v36

    #@4ac
    return v3

    #@4ad
    .line 2000
    :cond_1a
    :try_start_18
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@4af
    if-eqz v3, :cond_10

    #@4b1
    .line 2001
    const-string/jumbo v3, "WindowManager"

    #@4b4
    new-instance v4, Ljava/lang/StringBuilder;

    #@4b6
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@4b9
    const-string/jumbo v5, "Non-null appWindowToken for system window of type="

    #@4bc
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4bf
    move-result-object v4

    #@4c0
    move/from16 v0, v34

    #@4c2
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4c5
    move-result-object v4

    #@4c6
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4c9
    move-result-object v4

    #@4ca
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@4cd
    .line 2004
    const/4 v3, 0x0

    #@4ce
    move-object/from16 v0, p4

    #@4d0
    iput-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@4d2
    .line 2005
    new-instance v6, Lcom/android/server/wm/WindowToken;

    #@4d4
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/4 v3, 0x0

    #@4d5
    const/4 v4, -0x1

    #@4d6
    const/4 v5, 0x0

    #@4d7
    move-object/from16 v0, p0

    #@4d9
    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@4dc
    .line 2006
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v22, 0x1

    #@4de
    goto/16 :goto_0

    #@4e0
    .line 2019
    .end local v24    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_1b
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@4e3
    move-result-object v3

    #@4e4
    if-nez v3, :cond_1c

    #@4e6
    .line 2020
    const-string/jumbo v3, "WindowManager"

    #@4e9
    const-string/jumbo v4, "Adding window to Display that has been removed."

    #@4ec
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_0

    #@4ef
    .line 2021
    const/16 v3, -0x9

    #@4f1
    monitor-exit v36

    #@4f2
    return v3

    #@4f3
    .line 2024
    :cond_1c
    :try_start_19
    move-object/from16 v0, p0

    #@4f5
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@4f7
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4f9
    invoke-interface {v3, v4}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    #@4fc
    .line 2025
    move-object/from16 v0, p0

    #@4fe
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@500
    move-object/from16 v0, p4

    #@502
    invoke-interface {v3, v0}, Landroid/view/WindowManagerPolicy;->checkShowToOwnerOnly(Landroid/view/WindowManager$LayoutParams;)Z

    #@505
    move-result v3

    #@506
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setShowToOwnerOnlyLocked(Z)V

    #@509
    .line 2027
    move-object/from16 v0, p0

    #@50b
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@50d
    move-object/from16 v0, p4

    #@50f
    invoke-interface {v3, v2, v0}, Landroid/view/WindowManagerPolicy;->prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_0

    #@512
    move-result v32

    #@513
    .line 2028
    if-eqz v32, :cond_1d

    #@515
    monitor-exit v36

    #@516
    .line 2029
    return v32

    #@517
    .line 2032
    :cond_1d
    if-eqz p10, :cond_2f

    #@519
    .line 2033
    :try_start_1a
    move-object/from16 v0, p4

    #@51b
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    #@51d
    and-int/lit8 v3, v3, 0x2

    #@51f
    if-nez v3, :cond_2e

    #@521
    const/16 v28, 0x1

    #@523
    .line 2034
    .local v28, "openInputChannels":Z
    :goto_1
    if-eqz v28, :cond_1e

    #@525
    .line 2035
    move-object/from16 v0, p10

    #@527
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowState;->openInputChannel(Landroid/view/InputChannel;)V

    #@52a
    .line 2040
    :cond_1e
    const/16 v32, 0x0

    #@52c
    .line 2042
    invoke-static/range {v34 .. v34}, Lcom/android/server/wm/WindowManagerService;->excludeWindowTypeFromTapOutTask(I)Z

    #@52f
    move-result v3

    #@530
    if-eqz v3, :cond_1f

    #@532
    .line 2043
    iget-object v3, v12, Lcom/android/server/wm/DisplayContent;->mTapExcludedWindows:Ljava/util/ArrayList;

    #@534
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@537
    .line 2046
    :cond_1f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@53a
    move-result-wide v30

    #@53b
    .line 2048
    .local v30, "origId":J
    if-eqz v22, :cond_20

    #@53d
    .line 2049
    move-object/from16 v0, p0

    #@53f
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@541
    move-object/from16 v0, p4

    #@543
    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    #@545
    invoke-virtual {v3, v4, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@548
    .line 2051
    :cond_20
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->attach()V

    #@54b
    .line 2052
    move-object/from16 v0, p0

    #@54d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@54f
    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@552
    move-result-object v4

    #@553
    invoke-virtual {v3, v4, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@556
    .line 2053
    iget v3, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@558
    const/4 v4, -0x1

    #@559
    if-eq v3, v4, :cond_21

    #@55b
    .line 2054
    move-object/from16 v0, p0

    #@55d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@55f
    iget v4, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@561
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@564
    move-result v5

    #@565
    .line 2055
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@568
    move-result-object v8

    #@569
    .line 2054
    invoke-virtual {v3, v4, v5, v8}, Landroid/app/AppOpsManager;->startOpNoThrow(IILjava/lang/String;)I

    #@56c
    move-result v33

    #@56d
    .line 2056
    .local v33, "startOpResult":I
    if-eqz v33, :cond_21

    #@56f
    .line 2057
    const/4 v3, 0x3

    #@570
    move/from16 v0, v33

    #@572
    if-eq v0, v3, :cond_21

    #@574
    .line 2058
    const/4 v3, 0x0

    #@575
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V

    #@578
    .line 2062
    .end local v33    # "startOpResult":I
    :cond_21
    const/4 v3, 0x3

    #@579
    move/from16 v0, v34

    #@57b
    if-ne v0, v3, :cond_22

    #@57d
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@57f
    if-eqz v3, :cond_22

    #@581
    .line 2063
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@583
    iput-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@585
    .line 2068
    :cond_22
    const/16 v27, 0x1

    #@587
    .line 2070
    .local v27, "imMayMove":Z
    const/16 v3, 0x7db

    #@589
    move/from16 v0, v34

    #@58b
    if-ne v0, v3, :cond_30

    #@58d
    .line 2071
    const/4 v3, 0x1

    #@58e
    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@590
    .line 2072
    move-object/from16 v0, p0

    #@592
    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@594
    .line 2073
    move-object/from16 v0, p0

    #@596
    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    #@599
    .line 2074
    const/16 v27, 0x0

    #@59b
    .line 2099
    :cond_23
    :goto_2
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->applyScrollIfNeeded()V

    #@59e
    .line 2103
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->applyAdjustForImeIfNeeded()V

    #@5a1
    .line 2105
    const/16 v3, 0x7f2

    #@5a3
    move/from16 v0, v34

    #@5a5
    if-ne v0, v3, :cond_24

    #@5a7
    .line 2106
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@5aa
    move-result-object v3

    #@5ab
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@5ae
    move-result-object v3

    #@5af
    invoke-virtual {v3, v2}, Lcom/android/server/wm/DockedStackDividerController;->setWindow(Lcom/android/server/wm/WindowState;)V

    #@5b2
    .line 2109
    :cond_24
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@5b4
    move-object/from16 v35, v0

    #@5b6
    .line 2110
    .local v35, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v3, 0x1

    #@5b7
    move-object/from16 v0, v35

    #@5b9
    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@5bb
    .line 2111
    const/4 v3, 0x1

    #@5bc
    move-object/from16 v0, v35

    #@5be
    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@5c0
    .line 2113
    if-eqz v24, :cond_25

    #@5c2
    move-object/from16 v0, p0

    #@5c4
    move-object/from16 v1, v24

    #@5c6
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->prepareWindowReplacementTransition(Lcom/android/server/wm/AppWindowToken;)Z

    #@5c9
    move-result v3

    #@5ca
    if-eqz v3, :cond_34

    #@5cc
    .line 2120
    :cond_25
    :goto_3
    iget-boolean v3, v12, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    #@5ce
    if-eqz v3, :cond_36

    #@5d0
    .line 2121
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@5d3
    move-result-object v25

    #@5d4
    .line 2123
    .local v25, "displayInfo":Landroid/view/DisplayInfo;
    if-eqz v24, :cond_35

    #@5d6
    move-object/from16 v0, v24

    #@5d8
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@5da
    if-eqz v3, :cond_35

    #@5dc
    .line 2124
    move-object/from16 v0, p0

    #@5de
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@5e0
    .line 2125
    .local v15, "taskBounds":Landroid/graphics/Rect;
    move-object/from16 v0, v24

    #@5e2
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@5e4
    move-object/from16 v0, p0

    #@5e6
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@5e8
    invoke-virtual {v3, v4}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V

    #@5eb
    .line 2129
    .end local v15    # "taskBounds":Landroid/graphics/Rect;
    :goto_4
    move-object/from16 v0, p0

    #@5ed
    iget-object v13, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5ef
    iget-object v14, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5f1
    move-object/from16 v0, p0

    #@5f3
    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@5f5
    move/from16 v16, v0

    #@5f7
    .line 2130
    move-object/from16 v0, v25

    #@5f9
    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@5fb
    move/from16 v17, v0

    #@5fd
    move-object/from16 v0, v25

    #@5ff
    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@601
    move/from16 v18, v0

    #@603
    move-object/from16 v19, p7

    #@605
    move-object/from16 v20, p8

    #@607
    move-object/from16 v21, p9

    #@609
    .line 2129
    invoke-interface/range {v13 .. v21}, Landroid/view/WindowManagerPolicy;->getInsetHintLw(Landroid/view/WindowManager$LayoutParams;Landroid/graphics/Rect;IIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    #@60c
    move-result v3

    #@60d
    if-eqz v3, :cond_26

    #@60f
    .line 2132
    const/16 v32, 0x4

    #@611
    .line 2139
    .end local v25    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_26
    :goto_5
    move-object/from16 v0, p0

    #@613
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@615
    if-eqz v3, :cond_27

    #@617
    .line 2140
    or-int/lit8 v32, v32, 0x1

    #@619
    .line 2142
    :cond_27
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@61b
    if-eqz v3, :cond_37

    #@61d
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@61f
    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@621
    if-eqz v3, :cond_37

    #@623
    .line 2146
    :goto_6
    move-object/from16 v0, p0

    #@625
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@627
    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@62a
    .line 2148
    const/16 v26, 0x0

    #@62c
    .line 2149
    .local v26, "focusChanged":Z
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    #@62f
    move-result v3

    #@630
    if-eqz v3, :cond_28

    #@632
    .line 2150
    const/4 v3, 0x1

    #@633
    .line 2151
    const/4 v4, 0x0

    #@634
    .line 2150
    move-object/from16 v0, p0

    #@636
    invoke-virtual {v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@639
    move-result v26

    #@63a
    .line 2152
    .local v26, "focusChanged":Z
    if-eqz v26, :cond_28

    #@63c
    .line 2153
    const/16 v27, 0x0

    #@63e
    .line 2157
    .end local v26    # "focusChanged":Z
    :cond_28
    if-eqz v27, :cond_29

    #@640
    .line 2158
    const/4 v3, 0x0

    #@641
    move-object/from16 v0, p0

    #@643
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@646
    .line 2161
    :cond_29
    move-object/from16 v0, p0

    #@648
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@64a
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@64d
    move-result-object v4

    #@64e
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@651
    .line 2165
    if-eqz v26, :cond_2a

    #@653
    .line 2166
    move-object/from16 v0, p0

    #@655
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@657
    move-object/from16 v0, p0

    #@659
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@65b
    const/4 v5, 0x0

    #@65c
    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    #@65f
    .line 2168
    :cond_2a
    move-object/from16 v0, p0

    #@661
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@663
    const/4 v4, 0x0

    #@664
    invoke-virtual {v3, v4}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@667
    .line 2173
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    #@66a
    move-result v3

    #@66b
    if-eqz v3, :cond_2b

    #@66d
    const/4 v3, 0x0

    #@66e
    move-object/from16 v0, p0

    #@670
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@673
    move-result v3

    #@674
    if-eqz v3, :cond_2b

    #@676
    .line 2174
    const/16 v29, 0x1

    #@678
    .line 2176
    :cond_2b
    move-object/from16 v0, p4

    #@67a
    iget-wide v4, v0, Landroid/view/WindowManager$LayoutParams;->removeTimeoutMilliseconds:J

    #@67c
    const-wide/16 v8, 0x0

    #@67e
    cmp-long v3, v4, v8

    #@680
    if-lez v3, :cond_2c

    #@682
    .line 2177
    move-object/from16 v0, p0

    #@684
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@686
    .line 2178
    move-object/from16 v0, p0

    #@688
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@68a
    const/16 v5, 0x34

    #@68c
    invoke-virtual {v4, v5, v2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@68f
    move-result-object v4

    #@690
    .line 2179
    move-object/from16 v0, p4

    #@692
    iget-wide v8, v0, Landroid/view/WindowManager$LayoutParams;->removeTimeoutMilliseconds:J

    #@694
    .line 2177
    invoke-virtual {v3, v4, v8, v9}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_0

    #@697
    :cond_2c
    monitor-exit v36

    #@698
    .line 2183
    if-eqz v29, :cond_2d

    #@69a
    .line 2184
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@69d
    .line 2187
    :cond_2d
    invoke-static/range {v30 .. v31}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@6a0
    .line 2189
    return v32

    #@6a1
    .line 2033
    .end local v27    # "imMayMove":Z
    .end local v28    # "openInputChannels":Z
    .end local v30    # "origId":J
    .end local v35    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_2e
    const/16 v28, 0x0

    #@6a3
    goto/16 :goto_1

    #@6a5
    .line 2032
    :cond_2f
    const/16 v28, 0x0

    #@6a7
    goto/16 :goto_1

    #@6a9
    .line 2075
    .restart local v27    # "imMayMove":Z
    .restart local v28    # "openInputChannels":Z
    .restart local v30    # "origId":J
    :cond_30
    const/16 v3, 0x7dc

    #@6ab
    move/from16 v0, v34

    #@6ad
    if-ne v0, v3, :cond_31

    #@6af
    .line 2076
    :try_start_1b
    move-object/from16 v0, p0

    #@6b1
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@6b3
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@6b6
    .line 2077
    const/4 v3, 0x1

    #@6b7
    move-object/from16 v0, p0

    #@6b9
    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@6bc
    .line 2078
    const/4 v3, 0x1

    #@6bd
    move-object/from16 v0, p0

    #@6bf
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@6c2
    move-result v3

    #@6c3
    move-object/from16 v0, p0

    #@6c5
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@6c8
    .line 2079
    const/16 v27, 0x0

    #@6ca
    goto/16 :goto_2

    #@6cc
    .line 2081
    :cond_31
    const/4 v3, 0x1

    #@6cd
    move-object/from16 v0, p0

    #@6cf
    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    #@6d2
    .line 2082
    const/16 v3, 0x7dd

    #@6d4
    move/from16 v0, v34

    #@6d6
    if-ne v0, v3, :cond_32

    #@6d8
    .line 2083
    move-object/from16 v0, p0

    #@6da
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@6dc
    invoke-virtual {v3}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    #@6df
    .line 2084
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@6e1
    or-int/lit8 v3, v3, 0x4

    #@6e3
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@6e5
    goto/16 :goto_2

    #@6e7
    .line 2085
    :cond_32
    move-object/from16 v0, p4

    #@6e9
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@6eb
    const/high16 v4, 0x100000

    #@6ed
    and-int/2addr v3, v4

    #@6ee
    if-eqz v3, :cond_33

    #@6f0
    .line 2086
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@6f2
    or-int/lit8 v3, v3, 0x4

    #@6f4
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@6f6
    goto/16 :goto_2

    #@6f8
    .line 2087
    :cond_33
    move-object/from16 v0, p0

    #@6fa
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@6fc
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WallpaperController;->isBelowWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    #@6ff
    move-result v3

    #@700
    if-eqz v3, :cond_23

    #@702
    .line 2093
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@704
    or-int/lit8 v3, v3, 0x4

    #@706
    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@708
    goto/16 :goto_2

    #@70a
    .line 2117
    .restart local v35    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_34
    move-object/from16 v0, p0

    #@70c
    move-object/from16 v1, v24

    #@70e
    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->prepareNoneTransitionForRelaunching(Lcom/android/server/wm/AppWindowToken;)V

    #@711
    goto/16 :goto_3

    #@713
    .line 2127
    .restart local v25    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_35
    const/4 v15, 0x0

    #@714
    .local v15, "taskBounds":Landroid/graphics/Rect;
    goto/16 :goto_4

    #@716
    .line 2135
    .end local v15    # "taskBounds":Landroid/graphics/Rect;
    .end local v25    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_36
    invoke-virtual/range {p7 .. p7}, Landroid/graphics/Rect;->setEmpty()V

    #@719
    .line 2136
    invoke-virtual/range {p8 .. p8}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_0

    #@71c
    goto/16 :goto_5

    #@71e
    .line 2143
    :cond_37
    or-int/lit8 v32, v32, 0x2

    #@720
    goto/16 :goto_6
.end method

.method public addWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@0
    .prologue
    .line 7131
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 7132
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 7130
    return-void

    #@a
    .line 7131
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public addWindowToken(Landroid/os/IBinder;I)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I

    #@0
    .prologue
    .line 3319
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3320
    const-string/jumbo v2, "addWindowToken()"

    #@6
    .line 3319
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3321
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3324
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 3325
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 3326
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 3327
    const-string/jumbo v1, "WindowManager"

    #@25
    new-instance v3, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    const-string/jumbo v4, "Attempted to add existing input method token: "

    #@2d
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@34
    move-result-object v3

    #@35
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@38
    move-result-object v3

    #@39
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3c
    monitor-exit v2

    #@3d
    .line 3328
    return-void

    #@3e
    .line 3330
    :cond_1
    :try_start_1
    new-instance v0, Lcom/android/server/wm/WindowToken;

    #@40
    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    const/4 v1, 0x1

    #@41
    invoke-direct {v0, p0, p1, p2, v1}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    #@44
    .line 3331
    .restart local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@46
    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@49
    .line 3332
    const/16 v1, 0x7dd

    #@4b
    if-ne p2, v1, :cond_2

    #@4d
    .line 3333
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@4f
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WallpaperController;->addWallpaperToken(Lcom/android/server/wm/WindowToken;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@52
    :cond_2
    monitor-exit v2

    #@53
    .line 3318
    return-void

    #@54
    .line 3324
    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@55
    monitor-exit v2

    #@56
    throw v1
.end method

.method adjustAnimationBackground(Lcom/android/server/wm/WindowStateAnimator;)I
    .locals 4
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    #@0
    .prologue
    .line 9470
    iget-object v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@2
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@5
    move-result-object v2

    #@6
    .line 9471
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@9
    move-result v3

    #@a
    add-int/lit8 v0, v3, -0x1

    #@c
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    #@e
    .line 9472
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v1

    #@12
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@14
    .line 9473
    .local v1, "testWin":Lcom/android/server/wm/WindowState;
    iget-boolean v3, v1, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@16
    if-eqz v3, :cond_0

    #@18
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@1b
    move-result v3

    #@1c
    if-eqz v3, :cond_0

    #@1e
    .line 9474
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@20
    iget v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@22
    return v3

    #@23
    .line 9471
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@25
    goto :goto_0

    #@26
    .line 9477
    .end local v1    # "testWin":Lcom/android/server/wm/WindowState;
    :cond_1
    iget v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@28
    return v3
.end method

.method adjustForImeIfNeeded(Lcom/android/server/wm/DisplayContent;)V
    .locals 23
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    .line 7615
    move-object/from16 v0, p0

    #@2
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@4
    .line 7616
    .local v5, "imeWin":Lcom/android/server/wm/WindowState;
    if-eqz v5, :cond_3

    #@6
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@9
    move-result v1

    #@a
    if-eqz v1, :cond_3

    #@c
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@f
    move-result v1

    #@10
    if-eqz v1, :cond_3

    #@12
    .line 7617
    move-object/from16 v0, p1

    #@14
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@16
    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->isImeHideRequested()Z

    #@19
    move-result v1

    #@1a
    if-eqz v1, :cond_2

    #@1c
    const/16 v19, 0x0

    #@1e
    .line 7618
    .local v19, "imeVisible":Z
    :goto_0
    const/4 v1, 0x3

    #@1f
    move-object/from16 v0, p0

    #@21
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    #@24
    move-result v10

    #@25
    .line 7619
    .local v10, "dockVisible":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getImeFocusStackLocked()Lcom/android/server/wm/TaskStack;

    #@28
    move-result-object v18

    #@29
    .line 7620
    .local v18, "imeTargetStack":Lcom/android/server/wm/TaskStack;
    if-eqz v10, :cond_4

    #@2b
    if-eqz v18, :cond_4

    #@2d
    .line 7621
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/TaskStack;->getDockSide()I

    #@30
    move-result v15

    #@31
    .line 7622
    .local v15, "imeDockSide":I
    :goto_1
    const/4 v1, 0x2

    #@32
    if-ne v15, v1, :cond_5

    #@34
    const/16 v17, 0x1

    #@36
    .line 7623
    .local v17, "imeOnTop":Z
    :goto_2
    const/4 v1, 0x4

    #@37
    if-ne v15, v1, :cond_6

    #@39
    const/4 v2, 0x1

    #@3a
    .line 7624
    .local v2, "imeOnBottom":Z
    :goto_3
    move-object/from16 v0, p1

    #@3c
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@3e
    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->isMinimizedDock()Z

    #@41
    move-result v13

    #@42
    .line 7625
    .local v13, "dockMinimized":Z
    move-object/from16 v0, p0

    #@44
    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@46
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getInputMethodWindowVisibleHeightLw()I

    #@49
    move-result v6

    #@4a
    .line 7626
    .local v6, "imeHeight":I
    if-eqz v19, :cond_8

    #@4c
    .line 7627
    move-object/from16 v0, p1

    #@4e
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@50
    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->getImeHeightAdjustedFor()I

    #@53
    move-result v1

    #@54
    if-eq v6, v1, :cond_7

    #@56
    const/16 v16, 0x1

    #@58
    .line 7635
    .local v16, "imeHeightChanged":Z
    :goto_4
    if-eqz v19, :cond_1

    #@5a
    if-eqz v10, :cond_1

    #@5c
    if-nez v17, :cond_0

    #@5e
    if-eqz v2, :cond_1

    #@60
    :cond_0
    if-eqz v13, :cond_9

    #@62
    .line 7649
    :cond_1
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@65
    move-result-object v22

    #@66
    .line 7650
    .local v22, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual/range {v22 .. v22}, Ljava/util/ArrayList;->size()I

    #@69
    move-result v1

    #@6a
    add-int/lit8 v14, v1, -0x1

    #@6c
    .local v14, "i":I
    :goto_5
    if-ltz v14, :cond_10

    #@6e
    .line 7651
    move-object/from16 v0, v22

    #@70
    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@73
    move-result-object v21

    #@74
    check-cast v21, Lcom/android/server/wm/TaskStack;

    #@76
    .line 7652
    .local v21, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v10, :cond_f

    #@78
    const/4 v1, 0x0

    #@79
    :goto_6
    move-object/from16 v0, v21

    #@7b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->resetAdjustedForIme(Z)V

    #@7e
    .line 7650
    add-int/lit8 v14, v14, -0x1

    #@80
    goto :goto_5

    #@81
    .line 7617
    .end local v2    # "imeOnBottom":Z
    .end local v6    # "imeHeight":I
    .end local v10    # "dockVisible":Z
    .end local v13    # "dockMinimized":Z
    .end local v14    # "i":I
    .end local v15    # "imeDockSide":I
    .end local v16    # "imeHeightChanged":Z
    .end local v17    # "imeOnTop":Z
    .end local v18    # "imeTargetStack":Lcom/android/server/wm/TaskStack;
    .end local v19    # "imeVisible":Z
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v22    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    :cond_2
    const/16 v19, 0x1

    #@83
    .restart local v19    # "imeVisible":Z
    goto :goto_0

    #@84
    .line 7616
    .end local v19    # "imeVisible":Z
    :cond_3
    const/16 v19, 0x0

    #@86
    .restart local v19    # "imeVisible":Z
    goto :goto_0

    #@87
    .line 7621
    .restart local v10    # "dockVisible":Z
    .restart local v18    # "imeTargetStack":Lcom/android/server/wm/TaskStack;
    :cond_4
    const/4 v15, -0x1

    #@88
    goto :goto_1

    #@89
    .line 7622
    .restart local v15    # "imeDockSide":I
    :cond_5
    const/16 v17, 0x0

    #@8b
    .restart local v17    # "imeOnTop":Z
    goto :goto_2

    #@8c
    .line 7623
    :cond_6
    const/4 v2, 0x0

    #@8d
    .restart local v2    # "imeOnBottom":Z
    goto :goto_3

    #@8e
    .line 7627
    .restart local v6    # "imeHeight":I
    .restart local v13    # "dockMinimized":Z
    :cond_7
    const/16 v16, 0x0

    #@90
    .restart local v16    # "imeHeightChanged":Z
    goto :goto_4

    #@91
    .line 7626
    .end local v16    # "imeHeightChanged":Z
    :cond_8
    const/16 v16, 0x0

    #@93
    .restart local v16    # "imeHeightChanged":Z
    goto :goto_4

    #@94
    .line 7636
    :cond_9
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@97
    move-result-object v22

    #@98
    .line 7637
    .restart local v22    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual/range {v22 .. v22}, Ljava/util/ArrayList;->size()I

    #@9b
    move-result v1

    #@9c
    add-int/lit8 v14, v1, -0x1

    #@9e
    .restart local v14    # "i":I
    :goto_7
    if-ltz v14, :cond_e

    #@a0
    .line 7638
    move-object/from16 v0, v22

    #@a2
    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@a5
    move-result-object v21

    #@a6
    check-cast v21, Lcom/android/server/wm/TaskStack;

    #@a8
    .line 7639
    .restart local v21    # "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/TaskStack;->getDockSide()I

    #@ab
    move-result v1

    #@ac
    const/4 v3, 0x4

    #@ad
    if-ne v1, v3, :cond_b

    #@af
    const/16 v20, 0x1

    #@b1
    .line 7640
    .local v20, "isDockedOnBottom":Z
    :goto_8
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    #@b4
    move-result v1

    #@b5
    if-eqz v1, :cond_d

    #@b7
    if-nez v2, :cond_a

    #@b9
    if-eqz v20, :cond_d

    #@bb
    .line 7641
    :cond_a
    if-eqz v2, :cond_c

    #@bd
    move/from16 v1, v16

    #@bf
    :goto_9
    move-object/from16 v0, v21

    #@c1
    invoke-virtual {v0, v5, v1}, Lcom/android/server/wm/TaskStack;->setAdjustedForIme(Lcom/android/server/wm/WindowState;Z)V

    #@c4
    .line 7637
    :goto_a
    add-int/lit8 v14, v14, -0x1

    #@c6
    goto :goto_7

    #@c7
    .line 7639
    .end local v20    # "isDockedOnBottom":Z
    :cond_b
    const/16 v20, 0x0

    #@c9
    .restart local v20    # "isDockedOnBottom":Z
    goto :goto_8

    #@ca
    .line 7641
    :cond_c
    const/4 v1, 0x0

    #@cb
    goto :goto_9

    #@cc
    .line 7643
    :cond_d
    const/4 v1, 0x0

    #@cd
    move-object/from16 v0, v21

    #@cf
    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->resetAdjustedForIme(Z)V

    #@d2
    goto :goto_a

    #@d3
    .line 7646
    .end local v20    # "isDockedOnBottom":Z
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_e
    move-object/from16 v0, p1

    #@d5
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@d7
    .line 7647
    const/4 v3, 0x1

    #@d8
    const/4 v4, 0x1

    #@d9
    .line 7646
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/wm/DockedStackDividerController;->setAdjustedForIme(ZZZLcom/android/server/wm/WindowState;I)V

    #@dc
    .line 7614
    :goto_b
    return-void

    #@dd
    .line 7652
    .restart local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_f
    const/4 v1, 0x1

    #@de
    goto :goto_6

    #@df
    .line 7654
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_10
    move-object/from16 v0, p1

    #@e1
    iget-object v7, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@e3
    .line 7655
    const/4 v8, 0x0

    #@e4
    const/4 v9, 0x0

    #@e5
    move-object v11, v5

    #@e6
    move v12, v6

    #@e7
    .line 7654
    invoke-virtual/range {v7 .. v12}, Lcom/android/server/wm/DockedStackDividerController;->setAdjustedForIme(ZZZLcom/android/server/wm/WindowState;I)V

    #@ea
    goto :goto_b
.end method

.method public animateResizePinnedStack(Landroid/graphics/Rect;I)V
    .locals 8
    .param p1, "bounds"    # Landroid/graphics/Rect;
    .param p2, "animationDuration"    # I

    #@0
    .prologue
    .line 10936
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 10937
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    const/4 v1, 0x4

    #@6
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@9
    move-result-object v2

    #@a
    check-cast v2, Lcom/android/server/wm/TaskStack;

    #@c
    .line 10938
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_0

    #@e
    .line 10939
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@10
    const-string/jumbo v1, "animateResizePinnedStack: stackId 4 not found."

    #@13
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    monitor-exit v6

    #@17
    .line 10940
    return-void

    #@18
    .line 10942
    :cond_0
    :try_start_1
    new-instance v3, Landroid/graphics/Rect;

    #@1a
    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    #@1d
    .line 10943
    .local v3, "originalBounds":Landroid/graphics/Rect;
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    #@20
    .line 10944
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    #@23
    move-result-object v7

    #@24
    new-instance v0, Lcom/android/server/wm/WindowManagerService$10;

    #@26
    move-object v1, p0

    #@27
    move-object v4, p1

    #@28
    move v5, p2

    #@29
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService$10;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/TaskStack;Landroid/graphics/Rect;Landroid/graphics/Rect;I)V

    #@2c
    invoke-virtual {v7, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v6

    #@30
    .line 10935
    return-void

    #@31
    .line 10936
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "originalBounds":Landroid/graphics/Rect;
    :catchall_0
    move-exception v0

    #@32
    monitor-exit v6

    #@33
    throw v0
.end method

.method public attachStack(IIZ)Landroid/graphics/Rect;
    .locals 9
    .param p1, "stackId"    # I
    .param p2, "displayId"    # I
    .param p3, "onTop"    # Z

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    .line 4989
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4
    move-result-wide v2

    #@5
    .line 4991
    .local v2, "origId":J
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@7
    monitor-enter v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@8
    .line 4992
    :try_start_1
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@a
    invoke-virtual {v5, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@d
    move-result-object v1

    #@e
    check-cast v1, Lcom/android/server/wm/DisplayContent;

    #@10
    .line 4993
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_2

    #@12
    .line 4994
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@14
    invoke-virtual {v5, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@17
    move-result-object v4

    #@18
    check-cast v4, Lcom/android/server/wm/TaskStack;

    #@1a
    .line 4995
    .local v4, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v4, :cond_0

    #@1c
    .line 4997
    new-instance v4, Lcom/android/server/wm/TaskStack;

    #@1e
    .end local v4    # "stack":Lcom/android/server/wm/TaskStack;
    invoke-direct {v4, p0, p1}, Lcom/android/server/wm/TaskStack;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    #@21
    .line 4998
    .restart local v4    # "stack":Lcom/android/server/wm/TaskStack;
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@23
    invoke-virtual {v5, p1, v4}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@26
    .line 4999
    const/4 v5, 0x3

    #@27
    if-ne p1, v5, :cond_0

    #@29
    .line 5000
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2c
    move-result-object v5

    #@2d
    iget-object v5, v5, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@2f
    .line 5001
    const/4 v7, 0x1

    #@30
    .line 5000
    invoke-virtual {v5, v7}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    #@33
    .line 5004
    :cond_0
    invoke-virtual {v4, v1}, Lcom/android/server/wm/TaskStack;->attachDisplayContent(Lcom/android/server/wm/DisplayContent;)V

    #@36
    .line 5005
    invoke-virtual {v1, v4, p3}, Lcom/android/server/wm/DisplayContent;->attachStack(Lcom/android/server/wm/TaskStack;Z)V

    #@39
    .line 5006
    invoke-virtual {v4}, Lcom/android/server/wm/TaskStack;->getRawFullscreen()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@3c
    move-result v5

    #@3d
    if-eqz v5, :cond_1

    #@3f
    :try_start_2
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@40
    .line 5015
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@43
    .line 5007
    return-object v8

    #@44
    .line 5009
    :cond_1
    :try_start_3
    new-instance v0, Landroid/graphics/Rect;

    #@46
    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    #@49
    .line 5010
    .local v0, "bounds":Landroid/graphics/Rect;
    invoke-virtual {v4, v0}, Lcom/android/server/wm/TaskStack;->getRawBounds(Landroid/graphics/Rect;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@4c
    :try_start_4
    monitor-exit v6
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@4d
    .line 5015
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@50
    .line 5011
    return-object v0

    #@51
    .end local v0    # "bounds":Landroid/graphics/Rect;
    .end local v4    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_2
    :try_start_5
    monitor-exit v6
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@52
    .line 5015
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@55
    .line 5017
    return-object v8

    #@56
    .line 4991
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v5

    #@57
    :try_start_6
    monitor-exit v6

    #@58
    throw v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    #@59
    .line 5014
    :catchall_1
    move-exception v5

    #@5a
    .line 5015
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@5d
    .line 5014
    throw v5
.end method

.method public cancelTaskThumbnailTransition(I)V
    .locals 3
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5074
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5075
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5076
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    #@d
    .line 5077
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->cancelTaskThumbnailTransition()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    .line 5073
    return-void

    #@12
    .line 5074
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method public cancelTaskWindowTransition(I)V
    .locals 3
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5064
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5065
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5066
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    #@d
    .line 5067
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->cancelTaskWindowTransition()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    .line 5063
    return-void

    #@12
    .line 5064
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method checkDrawnWindowsLocked()V
    .locals 4

    #@0
    .prologue
    .line 9383
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@2
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    #@5
    move-result v2

    #@6
    if-nez v2, :cond_0

    #@8
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallback:Ljava/lang/Runnable;

    #@a
    if-nez v2, :cond_1

    #@c
    .line 9384
    :cond_0
    return-void

    #@d
    .line 9386
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@f
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@12
    move-result v2

    #@13
    add-int/lit8 v0, v2, -0x1

    #@15
    .local v0, "j":I
    :goto_0
    if-ltz v0, :cond_4

    #@17
    .line 9387
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@19
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1c
    move-result-object v1

    #@1d
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@1f
    .line 9392
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@21
    if-nez v2, :cond_3

    #@23
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@25
    if-eqz v2, :cond_3

    #@27
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    #@29
    if-eqz v2, :cond_3

    #@2b
    .line 9396
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->hasDrawnLw()Z

    #@2e
    move-result v2

    #@2f
    if-eqz v2, :cond_2

    #@31
    .line 9399
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@33
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@36
    .line 9386
    :cond_2
    :goto_1
    add-int/lit8 v0, v0, -0x1

    #@38
    goto :goto_0

    #@39
    .line 9395
    :cond_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@3b
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@3e
    goto :goto_1

    #@3f
    .line 9402
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@41
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    #@44
    move-result v2

    #@45
    if-eqz v2, :cond_5

    #@47
    .line 9404
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@49
    const/16 v3, 0x18

    #@4b
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@4e
    .line 9405
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@50
    const/16 v3, 0x21

    #@52
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@55
    .line 9382
    :cond_5
    return-void
.end method

.method public clearForcedDisplayDensity(I)V
    .locals 8
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8953
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8954
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8953
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8956
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 8959
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8960
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 8962
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 8964
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8965
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 8966
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_2

    #@2c
    .line 8968
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    #@2e
    .line 8967
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@31
    .line 8969
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@33
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@36
    move-result-object v1

    #@37
    .line 8970
    const-string/jumbo v5, "display_density_forced"

    #@3a
    const-string/jumbo v6, ""

    #@3d
    iget v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@3f
    .line 8969
    invoke-static {v1, v5, v6, v7}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@42
    :cond_2
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@43
    .line 8974
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@46
    .line 8952
    return-void

    #@47
    .line 8964
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@48
    :try_start_3
    monitor-exit v4

    #@49
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@4a
    .line 8973
    :catchall_1
    move-exception v1

    #@4b
    .line 8974
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4e
    .line 8973
    throw v1
.end method

.method public clearForcedDisplaySize(I)V
    .locals 7
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8877
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8878
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8877
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8880
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 8883
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8884
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 8886
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 8888
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8889
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 8890
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_2

    #@2c
    .line 8891
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@2e
    .line 8892
    iget v5, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@30
    .line 8891
    invoke-direct {p0, v0, v1, v5}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    #@33
    .line 8893
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@35
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@38
    move-result-object v1

    #@39
    .line 8894
    const-string/jumbo v5, "display_size_forced"

    #@3c
    const-string/jumbo v6, ""

    #@3f
    .line 8893
    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@42
    :cond_2
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@43
    .line 8898
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@46
    .line 8876
    return-void

    #@47
    .line 8888
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@48
    :try_start_3
    monitor-exit v4

    #@49
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@4a
    .line 8897
    :catchall_1
    move-exception v1

    #@4b
    .line 8898
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4e
    .line 8897
    throw v1
.end method

.method public clearWindowContentFrameStats(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 10085
    const-string/jumbo v2, "android.permission.FRAME_STATS"

    #@4
    .line 10086
    const-string/jumbo v3, "clearWindowContentFrameStats()"

    #@7
    .line 10085
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v2

    #@b
    if-nez v2, :cond_0

    #@d
    .line 10087
    new-instance v2, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v3, "Requires FRAME_STATS permission"

    #@12
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v2

    #@16
    .line 10089
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@18
    monitor-enter v3

    #@19
    .line 10090
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    invoke-virtual {v2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1e
    move-result-object v1

    #@1f
    check-cast v1, Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@21
    .line 10091
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_1

    #@23
    monitor-exit v3

    #@24
    .line 10092
    return v4

    #@25
    .line 10094
    :cond_1
    :try_start_1
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@27
    iget-object v0, v2, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    .line 10095
    .local v0, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v0, :cond_2

    #@2b
    monitor-exit v3

    #@2c
    .line 10096
    return v4

    #@2d
    .line 10098
    :cond_2
    :try_start_2
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfaceController;->clearWindowContentFrameStats()Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@30
    move-result v2

    #@31
    monitor-exit v3

    #@32
    return v2

    #@33
    .line 10089
    .end local v0    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v2

    #@34
    monitor-exit v3

    #@35
    throw v2
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 9
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    .line 5481
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v8

    #@3
    .line 5482
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    #@8
    move-result v2

    #@9
    .line 5483
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@a
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v2, :cond_2

    #@c
    .line 5484
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@e
    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@11
    move-result-object v7

    #@12
    check-cast v7, Lcom/android/server/wm/DisplayContent;

    #@14
    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@17
    move-result-object v6

    #@18
    .line 5485
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@1b
    move-result v3

    #@1c
    .line 5486
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@1d
    .local v5, "winNdx":I
    :goto_1
    if-ge v5, v3, :cond_1

    #@1f
    .line 5487
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@22
    move-result-object v4

    #@23
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@25
    .line 5488
    .local v4, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v7, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    if-eqz v7, :cond_0

    #@29
    .line 5490
    :try_start_1
    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@2b
    invoke-interface {v7, p1}, Landroid/view/IWindow;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2e
    .line 5486
    :cond_0
    :goto_2
    add-int/lit8 v5, v5, 0x1

    #@30
    goto :goto_1

    #@31
    .line 5483
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@33
    goto :goto_0

    #@34
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_2
    monitor-exit v8

    #@35
    .line 5480
    return-void

    #@36
    .line 5481
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_0
    move-exception v7

    #@37
    monitor-exit v8

    #@38
    throw v7

    #@39
    .line 5491
    .restart local v0    # "displayNdx":I
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    :catch_0
    move-exception v1

    #@3a
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_2
.end method

.method public computeNewConfiguration()Landroid/content/res/Configuration;
    .locals 2

    #@0
    .prologue
    .line 7207
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 7208
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    move-result-object v1

    #@7
    monitor-exit v0

    #@8
    return-object v1

    #@9
    .line 7207
    :catchall_0
    move-exception v1

    #@a
    monitor-exit v0

    #@b
    throw v1
.end method

.method computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V
    .locals 24
    .param p1, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 7392
    move-object/from16 v0, p1

    #@2
    iget v3, v0, Landroid/content/res/Configuration;->uiMode:I

    #@4
    .line 7391
    move-object/from16 v0, p0

    #@6
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    #@9
    move-result-object v4

    #@a
    .line 7394
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v7, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    #@c
    .line 7395
    .local v7, "dw":I
    iget v8, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    #@e
    .line 7396
    .local v8, "dh":I
    if-gt v7, v8, :cond_3

    #@10
    const/4 v3, 0x1

    #@11
    :goto_0
    move-object/from16 v0, p1

    #@13
    iput v3, v0, Landroid/content/res/Configuration;->orientation:I

    #@15
    .line 7399
    move-object/from16 v0, p0

    #@17
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@19
    move-object/from16 v0, p0

    #@1b
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@1d
    move-object/from16 v0, p1

    #@1f
    iget v9, v0, Landroid/content/res/Configuration;->uiMode:I

    #@21
    invoke-interface {v3, v7, v8, v6, v9}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(IIII)I

    #@24
    move-result v3

    #@25
    int-to-float v3, v3

    #@26
    .line 7400
    move-object/from16 v0, p0

    #@28
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@2a
    iget v6, v6, Landroid/util/DisplayMetrics;->density:F

    #@2c
    .line 7399
    div-float/2addr v3, v6

    #@2d
    float-to-int v3, v3

    #@2e
    .line 7398
    move-object/from16 v0, p1

    #@30
    iput v3, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    #@32
    .line 7402
    move-object/from16 v0, p0

    #@34
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@36
    move-object/from16 v0, p0

    #@38
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@3a
    move-object/from16 v0, p1

    #@3c
    iget v9, v0, Landroid/content/res/Configuration;->uiMode:I

    #@3e
    invoke-interface {v3, v7, v8, v6, v9}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(IIII)I

    #@41
    move-result v3

    #@42
    int-to-float v3, v3

    #@43
    .line 7403
    move-object/from16 v0, p0

    #@45
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@47
    iget v6, v6, Landroid/util/DisplayMetrics;->density:F

    #@49
    .line 7402
    div-float/2addr v3, v6

    #@4a
    float-to-int v3, v3

    #@4b
    .line 7401
    move-object/from16 v0, p1

    #@4d
    iput v3, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    #@4f
    .line 7404
    move-object/from16 v0, p0

    #@51
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@53
    const/4 v6, 0x1

    #@54
    if-eq v3, v6, :cond_4

    #@56
    .line 7405
    move-object/from16 v0, p0

    #@58
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@5a
    const/4 v6, 0x3

    #@5b
    if-ne v3, v6, :cond_5

    #@5d
    const/4 v5, 0x1

    #@5e
    .line 7407
    .local v5, "rotated":Z
    :goto_1
    move-object/from16 v0, p1

    #@60
    iget v6, v0, Landroid/content/res/Configuration;->uiMode:I

    #@62
    .line 7408
    move-object/from16 v0, p0

    #@64
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@66
    iget v9, v3, Landroid/util/DisplayMetrics;->density:F

    #@68
    move-object/from16 v3, p0

    #@6a
    move-object/from16 v10, p1

    #@6c
    .line 7407
    invoke-direct/range {v3 .. v10}, Lcom/android/server/wm/WindowManagerService;->computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIIFLandroid/content/res/Configuration;)V

    #@6f
    .line 7410
    move-object/from16 v0, p1

    #@71
    iget v3, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@73
    and-int/lit16 v6, v3, -0x301

    #@75
    .line 7411
    iget v3, v4, Landroid/view/DisplayInfo;->flags:I

    #@77
    and-int/lit8 v3, v3, 0x10

    #@79
    if-eqz v3, :cond_6

    #@7b
    .line 7412
    const/16 v3, 0x200

    #@7d
    .line 7410
    :goto_2
    or-int/2addr v3, v6

    #@7e
    move-object/from16 v0, p1

    #@80
    iput v3, v0, Landroid/content/res/Configuration;->screenLayout:I

    #@82
    .line 7415
    move-object/from16 v0, p1

    #@84
    iget v3, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    #@86
    int-to-float v3, v3

    #@87
    move-object/from16 v0, p0

    #@89
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@8b
    div-float/2addr v3, v6

    #@8c
    float-to-int v3, v3

    #@8d
    move-object/from16 v0, p1

    #@8f
    iput v3, v0, Landroid/content/res/Configuration;->compatScreenWidthDp:I

    #@91
    .line 7416
    move-object/from16 v0, p1

    #@93
    iget v3, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    #@95
    int-to-float v3, v3

    #@96
    move-object/from16 v0, p0

    #@98
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@9a
    div-float/2addr v3, v6

    #@9b
    float-to-int v3, v3

    #@9c
    move-object/from16 v0, p1

    #@9e
    iput v3, v0, Landroid/content/res/Configuration;->compatScreenHeightDp:I

    #@a0
    .line 7417
    move-object/from16 v0, p1

    #@a2
    iget v11, v0, Landroid/content/res/Configuration;->uiMode:I

    #@a4
    .line 7418
    move-object/from16 v0, p0

    #@a6
    iget-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@a8
    move-object/from16 v9, p0

    #@aa
    move v10, v5

    #@ab
    move v13, v7

    #@ac
    move v14, v8

    #@ad
    .line 7417
    invoke-direct/range {v9 .. v14}, Lcom/android/server/wm/WindowManagerService;->computeCompatSmallestWidth(ZILandroid/util/DisplayMetrics;II)I

    #@b0
    move-result v3

    #@b1
    move-object/from16 v0, p1

    #@b3
    iput v3, v0, Landroid/content/res/Configuration;->compatSmallestScreenWidthDp:I

    #@b5
    .line 7419
    iget v3, v4, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    #@b7
    move-object/from16 v0, p1

    #@b9
    iput v3, v0, Landroid/content/res/Configuration;->densityDpi:I

    #@bb
    .line 7423
    const/4 v3, 0x1

    #@bc
    move-object/from16 v0, p1

    #@be
    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@c0
    .line 7424
    const/4 v3, 0x1

    #@c1
    move-object/from16 v0, p1

    #@c3
    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    #@c5
    .line 7425
    const/4 v3, 0x1

    #@c6
    move-object/from16 v0, p1

    #@c8
    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@ca
    .line 7427
    const/16 v19, 0x0

    #@cc
    .line 7428
    .local v19, "keyboardPresence":I
    const/16 v21, 0x0

    #@ce
    .line 7429
    .local v21, "navigationPresence":I
    move-object/from16 v0, p0

    #@d0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@d2
    invoke-virtual {v3}, Lcom/android/server/input/InputManagerService;->getInputDevices()[Landroid/view/InputDevice;

    #@d5
    move-result-object v16

    #@d6
    .line 7430
    .local v16, "devices":[Landroid/view/InputDevice;
    move-object/from16 v0, v16

    #@d8
    array-length v0, v0

    #@d9
    move/from16 v20, v0

    #@db
    .line 7431
    .local v20, "len":I
    const/16 v18, 0x0

    #@dd
    .local v18, "i":I
    :goto_3
    move/from16 v0, v18

    #@df
    move/from16 v1, v20

    #@e1
    if-ge v0, v1, :cond_a

    #@e3
    .line 7432
    aget-object v15, v16, v18

    #@e5
    .line 7433
    .local v15, "device":Landroid/view/InputDevice;
    invoke-virtual {v15}, Landroid/view/InputDevice;->isVirtual()Z

    #@e8
    move-result v3

    #@e9
    if-nez v3, :cond_2

    #@eb
    .line 7434
    invoke-virtual {v15}, Landroid/view/InputDevice;->getSources()I

    #@ee
    move-result v23

    #@ef
    .line 7435
    .local v23, "sources":I
    invoke-virtual {v15}, Landroid/view/InputDevice;->isExternal()Z

    #@f2
    move-result v3

    #@f3
    if-eqz v3, :cond_7

    #@f5
    .line 7436
    const/16 v22, 0x2

    #@f7
    .line 7439
    .local v22, "presenceFlag":I
    :goto_4
    move-object/from16 v0, p0

    #@f9
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    #@fb
    if-eqz v3, :cond_8

    #@fd
    .line 7440
    move/from16 v0, v23

    #@ff
    and-int/lit16 v3, v0, 0x1002

    #@101
    .line 7441
    const/16 v6, 0x1002

    #@103
    .line 7440
    if-ne v3, v6, :cond_0

    #@105
    .line 7442
    const/4 v3, 0x3

    #@106
    move-object/from16 v0, p1

    #@108
    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@10a
    .line 7448
    :cond_0
    :goto_5
    const v3, 0x10004

    #@10d
    and-int v3, v3, v23

    #@10f
    const v6, 0x10004

    #@112
    if-ne v3, v6, :cond_9

    #@114
    .line 7449
    const/4 v3, 0x3

    #@115
    move-object/from16 v0, p1

    #@117
    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@119
    .line 7450
    or-int v21, v21, v22

    #@11b
    .line 7457
    :cond_1
    :goto_6
    invoke-virtual {v15}, Landroid/view/InputDevice;->getKeyboardType()I

    #@11e
    move-result v3

    #@11f
    const/4 v6, 0x2

    #@120
    if-ne v3, v6, :cond_2

    #@122
    .line 7458
    const/4 v3, 0x2

    #@123
    move-object/from16 v0, p1

    #@125
    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    #@127
    .line 7459
    or-int v19, v19, v22

    #@129
    .line 7431
    .end local v22    # "presenceFlag":I
    .end local v23    # "sources":I
    :cond_2
    add-int/lit8 v18, v18, 0x1

    #@12b
    goto :goto_3

    #@12c
    .line 7397
    .end local v5    # "rotated":Z
    .end local v15    # "device":Landroid/view/InputDevice;
    .end local v16    # "devices":[Landroid/view/InputDevice;
    .end local v18    # "i":I
    .end local v19    # "keyboardPresence":I
    .end local v20    # "len":I
    .end local v21    # "navigationPresence":I
    :cond_3
    const/4 v3, 0x2

    #@12d
    goto/16 :goto_0

    #@12f
    .line 7404
    :cond_4
    const/4 v5, 0x1

    #@130
    .restart local v5    # "rotated":Z
    goto/16 :goto_1

    #@132
    .line 7405
    .end local v5    # "rotated":Z
    :cond_5
    const/4 v5, 0x0

    #@133
    .restart local v5    # "rotated":Z
    goto/16 :goto_1

    #@135
    .line 7413
    :cond_6
    const/16 v3, 0x100

    #@137
    goto/16 :goto_2

    #@139
    .line 7437
    .restart local v15    # "device":Landroid/view/InputDevice;
    .restart local v16    # "devices":[Landroid/view/InputDevice;
    .restart local v18    # "i":I
    .restart local v19    # "keyboardPresence":I
    .restart local v20    # "len":I
    .restart local v21    # "navigationPresence":I
    .restart local v23    # "sources":I
    :cond_7
    const/16 v22, 0x1

    #@13b
    .restart local v22    # "presenceFlag":I
    goto :goto_4

    #@13c
    .line 7445
    :cond_8
    const/4 v3, 0x1

    #@13d
    move-object/from16 v0, p1

    #@13f
    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    #@141
    goto :goto_5

    #@142
    .line 7451
    :cond_9
    move/from16 v0, v23

    #@144
    and-int/lit16 v3, v0, 0x201

    #@146
    const/16 v6, 0x201

    #@148
    if-ne v3, v6, :cond_1

    #@14a
    .line 7452
    move-object/from16 v0, p1

    #@14c
    iget v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@14e
    const/4 v6, 0x1

    #@14f
    if-ne v3, v6, :cond_1

    #@151
    .line 7453
    const/4 v3, 0x2

    #@152
    move-object/from16 v0, p1

    #@154
    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@156
    .line 7454
    or-int v21, v21, v22

    #@158
    goto :goto_6

    #@159
    .line 7464
    .end local v15    # "device":Landroid/view/InputDevice;
    .end local v22    # "presenceFlag":I
    .end local v23    # "sources":I
    :cond_a
    move-object/from16 v0, p1

    #@15b
    iget v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@15d
    const/4 v6, 0x1

    #@15e
    if-ne v3, v6, :cond_b

    #@160
    move-object/from16 v0, p0

    #@162
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@164
    if-eqz v3, :cond_b

    #@166
    .line 7465
    const/4 v3, 0x2

    #@167
    move-object/from16 v0, p1

    #@169
    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    #@16b
    .line 7466
    or-int/lit8 v21, v21, 0x1

    #@16d
    .line 7470
    :cond_b
    move-object/from16 v0, p1

    #@16f
    iget v3, v0, Landroid/content/res/Configuration;->keyboard:I

    #@171
    const/4 v6, 0x1

    #@172
    if-eq v3, v6, :cond_d

    #@174
    const/16 v17, 0x1

    #@176
    .line 7471
    .local v17, "hardKeyboardAvailable":Z
    :goto_7
    move-object/from16 v0, p0

    #@178
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    #@17a
    move/from16 v0, v17

    #@17c
    if-eq v0, v3, :cond_c

    #@17e
    .line 7472
    move/from16 v0, v17

    #@180
    move-object/from16 v1, p0

    #@182
    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    #@184
    .line 7473
    move-object/from16 v0, p0

    #@186
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@188
    const/16 v6, 0x16

    #@18a
    invoke-virtual {v3, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@18d
    .line 7474
    move-object/from16 v0, p0

    #@18f
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@191
    const/16 v6, 0x16

    #@193
    invoke-virtual {v3, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@196
    .line 7478
    :cond_c
    const/4 v3, 0x1

    #@197
    move-object/from16 v0, p1

    #@199
    iput v3, v0, Landroid/content/res/Configuration;->keyboardHidden:I

    #@19b
    .line 7479
    const/4 v3, 0x1

    #@19c
    move-object/from16 v0, p1

    #@19e
    iput v3, v0, Landroid/content/res/Configuration;->hardKeyboardHidden:I

    #@1a0
    .line 7480
    const/4 v3, 0x1

    #@1a1
    move-object/from16 v0, p1

    #@1a3
    iput v3, v0, Landroid/content/res/Configuration;->navigationHidden:I

    #@1a5
    .line 7481
    move-object/from16 v0, p0

    #@1a7
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1a9
    move-object/from16 v0, p1

    #@1ab
    move/from16 v1, v19

    #@1ad
    move/from16 v2, v21

    #@1af
    invoke-interface {v3, v0, v1, v2}, Landroid/view/WindowManagerPolicy;->adjustConfigurationLw(Landroid/content/res/Configuration;II)V

    #@1b2
    .line 7390
    return-void

    #@1b3
    .line 7470
    .end local v17    # "hardKeyboardAvailable":Z
    :cond_d
    const/16 v17, 0x0

    #@1b5
    .restart local v17    # "hardKeyboardAvailable":Z
    goto :goto_7
.end method

.method public continueSurfaceLayout()V
    .locals 2

    #@0
    .prologue
    .line 5272
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5273
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->continueLayout()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 5271
    return-void

    #@a
    .line 5272
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public createDisplayContentLocked(Landroid/view/Display;)V
    .locals 2
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 10708
    if-nez p1, :cond_0

    #@2
    .line 10709
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@4
    const-string/jumbo v1, "getDisplayContent: display must not be null"

    #@7
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@a
    throw v0

    #@b
    .line 10711
    :cond_0
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@e
    move-result v0

    #@f
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@12
    .line 10707
    return-void
.end method

.method public createWallpaperInputConsumer(Landroid/view/InputChannel;)V
    .locals 3
    .param p1, "inputChannel"    # Landroid/view/InputChannel;

    #@0
    .prologue
    .line 10046
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 10047
    :try_start_0
    new-instance v0, Lcom/android/server/wm/InputConsumerImpl;

    #@5
    const-string/jumbo v2, "wallpaper input"

    #@8
    invoke-direct {v0, p0, v2, p1}, Lcom/android/server/wm/InputConsumerImpl;-><init>(Lcom/android/server/wm/WindowManagerService;Ljava/lang/String;Landroid/view/InputChannel;)V

    #@b
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@d
    .line 10048
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@f
    iget-object v0, v0, Lcom/android/server/wm/InputConsumerImpl;->mWindowHandle:Lcom/android/server/input/InputWindowHandle;

    #@11
    const/4 v2, 0x1

    #@12
    iput-boolean v2, v0, Lcom/android/server/input/InputWindowHandle;->hasWallpaper:Z

    #@14
    .line 10049
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@16
    const/4 v2, 0x1

    #@17
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1a
    monitor-exit v1

    #@1b
    .line 10045
    return-void

    #@1c
    .line 10046
    :catchall_0
    move-exception v0

    #@1d
    monitor-exit v1

    #@1e
    throw v0
.end method

.method createWatermarkInTransaction()V
    .locals 13

    #@0
    .prologue
    .line 9902
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    #@2
    if-eqz v9, :cond_0

    #@4
    .line 9903
    return-void

    #@5
    .line 9906
    :cond_0
    new-instance v2, Ljava/io/File;

    #@7
    const-string/jumbo v9, "/system/etc/setup.conf"

    #@a
    invoke-direct {v2, v9}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    #@d
    .line 9907
    .local v2, "file":Ljava/io/File;
    const/4 v3, 0x0

    #@e
    .line 9908
    .local v3, "in":Ljava/io/FileInputStream;
    const/4 v5, 0x0

    #@f
    .line 9910
    .local v5, "ind":Ljava/io/DataInputStream;
    :try_start_0
    new-instance v4, Ljava/io/FileInputStream;

    #@11
    invoke-direct {v4, v2}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@14
    .line 9911
    .end local v3    # "in":Ljava/io/FileInputStream;
    .local v4, "in":Ljava/io/FileInputStream;
    :try_start_1
    new-instance v6, Ljava/io/DataInputStream;

    #@16
    invoke-direct {v6, v4}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_a
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_c
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@19
    .line 9912
    .local v6, "ind":Ljava/io/DataInputStream;
    :try_start_2
    invoke-virtual {v6}, Ljava/io/DataInputStream;->readLine()Ljava/lang/String;

    #@1c
    .end local v5    # "ind":Ljava/io/DataInputStream;
    move-result-object v7

    #@1d
    .line 9913
    .local v7, "line":Ljava/lang/String;
    if-eqz v7, :cond_1

    #@1f
    .line 9914
    const-string/jumbo v9, "%"

    #@22
    invoke-virtual {v7, v9}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    #@25
    move-result-object v8

    #@26
    .line 9915
    .local v8, "toks":[Ljava/lang/String;
    if-eqz v8, :cond_1

    #@28
    array-length v9, v8

    #@29
    if-lez v9, :cond_1

    #@2b
    .line 9916
    new-instance v9, Lcom/android/server/wm/Watermark;

    #@2d
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@30
    move-result-object v10

    #@31
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@34
    move-result-object v10

    #@35
    .line 9917
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@37
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@39
    .line 9916
    invoke-direct {v9, v10, v11, v12, v8}, Lcom/android/server/wm/Watermark;-><init>(Landroid/view/Display;Landroid/util/DisplayMetrics;Landroid/view/SurfaceSession;[Ljava/lang/String;)V

    #@3c
    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_b
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_d
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@3e
    .line 9923
    .end local v8    # "toks":[Ljava/lang/String;
    :cond_1
    if-eqz v6, :cond_4

    #@40
    .line 9925
    :try_start_3
    invoke-virtual {v6}, Ljava/io/DataInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    #@43
    :cond_2
    :goto_0
    move-object v5, v6

    #@44
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@45
    .line 9901
    .end local v4    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .end local v7    # "line":Ljava/lang/String;
    :cond_3
    :goto_1
    return-void

    #@46
    .line 9926
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    .restart local v7    # "line":Ljava/lang/String;
    :catch_0
    move-exception v1

    #@47
    .local v1, "e":Ljava/io/IOException;
    goto :goto_0

    #@48
    .line 9928
    .end local v1    # "e":Ljava/io/IOException;
    :cond_4
    if-eqz v4, :cond_2

    #@4a
    .line 9930
    :try_start_4
    invoke-virtual {v4}, Ljava/io/FileInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1

    #@4d
    goto :goto_0

    #@4e
    .line 9931
    :catch_1
    move-exception v1

    #@4f
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_0

    #@50
    .line 9921
    .end local v1    # "e":Ljava/io/IOException;
    .end local v4    # "in":Ljava/io/FileInputStream;
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .end local v7    # "line":Ljava/lang/String;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_2
    move-exception v1

    #@51
    .line 9923
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v1    # "e":Ljava/io/IOException;
    :goto_2
    if-eqz v5, :cond_5

    #@53
    .line 9925
    :try_start_5
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    #@56
    goto :goto_1

    #@57
    .line 9926
    :catch_3
    move-exception v1

    #@58
    goto :goto_1

    #@59
    .line 9928
    :cond_5
    if-eqz v3, :cond_3

    #@5b
    .line 9930
    :try_start_6
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_4

    #@5e
    goto :goto_1

    #@5f
    .line 9931
    :catch_4
    move-exception v1

    #@60
    goto :goto_1

    #@61
    .line 9920
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catch_5
    move-exception v0

    #@62
    .line 9923
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .local v0, "e":Ljava/io/FileNotFoundException;
    :goto_3
    if-eqz v5, :cond_6

    #@64
    .line 9925
    :try_start_7
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_6

    #@67
    goto :goto_1

    #@68
    .line 9926
    :catch_6
    move-exception v1

    #@69
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_1

    #@6a
    .line 9928
    .end local v1    # "e":Ljava/io/IOException;
    :cond_6
    if-eqz v3, :cond_3

    #@6c
    .line 9930
    :try_start_8
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_7

    #@6f
    goto :goto_1

    #@70
    .line 9931
    :catch_7
    move-exception v1

    #@71
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_1

    #@72
    .line 9922
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catchall_0
    move-exception v9

    #@73
    .line 9923
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    :goto_4
    if-eqz v5, :cond_8

    #@75
    .line 9925
    :try_start_9
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_9
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_8

    #@78
    .line 9922
    :cond_7
    :goto_5
    throw v9

    #@79
    .line 9926
    :catch_8
    move-exception v1

    #@7a
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_5

    #@7b
    .line 9928
    .end local v1    # "e":Ljava/io/IOException;
    :cond_8
    if-eqz v3, :cond_7

    #@7d
    .line 9930
    :try_start_a
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_9

    #@80
    goto :goto_5

    #@81
    .line 9931
    :catch_9
    move-exception v1

    #@82
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_5

    #@83
    .line 9922
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catchall_1
    move-exception v9

    #@84
    move-object v3, v4

    #@85
    .end local v4    # "in":Ljava/io/FileInputStream;
    .local v3, "in":Ljava/io/FileInputStream;
    goto :goto_4

    #@86
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catchall_2
    move-exception v9

    #@87
    move-object v5, v6

    #@88
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@89
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    #@8a
    .line 9920
    .end local v3    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_a
    move-exception v0

    #@8b
    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v3, v4

    #@8c
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_3

    #@8d
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catch_b
    move-exception v0

    #@8e
    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v5, v6

    #@8f
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@90
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_3

    #@91
    .line 9921
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_c
    move-exception v1

    #@92
    .restart local v1    # "e":Ljava/io/IOException;
    move-object v3, v4

    #@93
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_2

    #@94
    .end local v1    # "e":Ljava/io/IOException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catch_d
    move-exception v1

    #@95
    .restart local v1    # "e":Ljava/io/IOException;
    move-object v5, v6

    #@96
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    #@97
    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_2
.end method

.method public deferSurfaceLayout()V
    .locals 2

    #@0
    .prologue
    .line 5263
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5264
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->deferLayout()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 5262
    return-void

    #@a
    .line 5263
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method destroyPreservedSurfaceLocked()V
    .locals 3

    #@0
    .prologue
    .line 8646
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    #@2
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@5
    move-result v2

    #@6
    add-int/lit8 v0, v2, -0x1

    #@8
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    #@a
    .line 8647
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    #@c
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v1

    #@10
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@12
    .line 8648
    .local v1, "w":Lcom/android/server/wm/WindowState;
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@14
    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->destroyPreservedSurfaceLocked()V

    #@17
    .line 8646
    add-int/lit8 v0, v0, -0x1

    #@19
    goto :goto_0

    #@1a
    .line 8650
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    #@1c
    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    #@1f
    .line 8645
    return-void
.end method

.method public detachStack(I)V
    .locals 4
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5030
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v3

    #@3
    .line 5031
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v1

    #@9
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5032
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_1

    #@d
    .line 5033
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@10
    move-result-object v0

    #@11
    .line 5034
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1

    #@13
    .line 5035
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->isAnimating()Z

    #@16
    move-result v2

    #@17
    if-eqz v2, :cond_0

    #@19
    .line 5036
    const/4 v2, 0x1

    #@1a
    iput-boolean v2, v1, Lcom/android/server/wm/TaskStack;->mDeferDetach:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    monitor-exit v3

    #@1d
    .line 5037
    return-void

    #@1e
    .line 5039
    :cond_0
    :try_start_1
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@21
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    monitor-exit v3

    #@22
    .line 5029
    return-void

    #@23
    .line 5030
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v2

    #@24
    monitor-exit v3

    #@25
    throw v2
.end method

.method detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    .locals 2
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "stack"    # Lcom/android/server/wm/TaskStack;

    #@0
    .prologue
    .line 5021
    invoke-virtual {p1, p2}, Lcom/android/server/wm/DisplayContent;->detachStack(Lcom/android/server/wm/TaskStack;)V

    #@3
    .line 5022
    invoke-virtual {p2}, Lcom/android/server/wm/TaskStack;->detachDisplay()V

    #@6
    .line 5023
    iget v0, p2, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@8
    const/4 v1, 0x3

    #@9
    if-ne v0, v1, :cond_0

    #@b
    .line 5024
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@e
    move-result-object v0

    #@f
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@11
    .line 5025
    const/4 v1, 0x0

    #@12
    .line 5024
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    #@15
    .line 5020
    :cond_0
    return-void
.end method

.method public detectSafeMode()Z
    .locals 12

    #@0
    .prologue
    .line 7827
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@2
    .line 7828
    const-wide/16 v10, 0x3e8

    #@4
    .line 7827
    invoke-virtual {v8, v10, v11}, Lcom/android/server/wm/InputMonitor;->waitForInputDevicesReady(J)Z

    #@7
    move-result v8

    #@8
    if-nez v8, :cond_0

    #@a
    .line 7829
    const-string/jumbo v8, "WindowManager"

    #@d
    const-string/jumbo v9, "Devices still not ready after waiting 1000 milliseconds before attempting to detect safe mode."

    #@10
    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@13
    .line 7835
    :cond_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@15
    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@18
    move-result-object v8

    #@19
    const-string/jumbo v9, "safe_boot_disallowed"

    #@1c
    const/4 v10, 0x0

    #@1d
    .line 7834
    invoke-static {v8, v9, v10}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    #@20
    move-result v8

    #@21
    if-eqz v8, :cond_1

    #@23
    .line 7836
    const/4 v8, 0x0

    #@24
    return v8

    #@25
    .line 7839
    :cond_1
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@27
    const/4 v9, -0x1

    #@28
    const/16 v10, -0x100

    #@2a
    .line 7840
    const/16 v11, 0x52

    #@2c
    .line 7839
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@2f
    move-result v4

    #@30
    .line 7841
    .local v4, "menuState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@32
    const/4 v9, -0x1

    #@33
    const/16 v10, -0x100

    #@35
    const/16 v11, 0x2f

    #@37
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@3a
    move-result v5

    #@3b
    .line 7842
    .local v5, "sState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@3d
    const/4 v9, -0x1

    #@3e
    const/16 v10, 0x201

    #@40
    .line 7843
    const/16 v11, 0x17

    #@42
    .line 7842
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@45
    move-result v2

    #@46
    .line 7844
    .local v2, "dpadState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@48
    const/4 v9, -0x1

    #@49
    const v10, 0x10004

    #@4c
    .line 7845
    const/16 v11, 0x110

    #@4e
    .line 7844
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getScanCodeState(III)I

    #@51
    move-result v6

    #@52
    .line 7846
    .local v6, "trackballState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@54
    const/4 v9, -0x1

    #@55
    const/16 v10, -0x100

    #@57
    .line 7847
    const/16 v11, 0x19

    #@59
    .line 7846
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    #@5c
    move-result v7

    #@5d
    .line 7848
    .local v7, "volumeDownState":I
    if-gtz v4, :cond_2

    #@5f
    if-lez v5, :cond_5

    #@61
    :cond_2
    const/4 v8, 0x1

    #@62
    :goto_0
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@64
    .line 7851
    :try_start_0
    const-string/jumbo v8, "persist.sys.safemode"

    #@67
    const/4 v9, 0x0

    #@68
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@6b
    move-result v8

    #@6c
    if-nez v8, :cond_3

    #@6e
    .line 7852
    const-string/jumbo v8, "ro.sys.safemode"

    #@71
    const/4 v9, 0x0

    #@72
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@75
    move-result v8

    #@76
    if-eqz v8, :cond_4

    #@78
    .line 7853
    :cond_3
    const-string/jumbo v8, "persist.sys.audit_safemode"

    #@7b
    const/4 v9, 0x0

    #@7c
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@7f
    move-result v0

    #@80
    .line 7855
    .local v0, "auditSafeMode":I
    if-nez v0, :cond_7

    #@82
    .line 7856
    const/4 v8, 0x1

    #@83
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@85
    .line 7857
    const-string/jumbo v8, "persist.sys.safemode"

    #@88
    const-string/jumbo v9, ""

    #@8b
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    #@8e
    .line 7873
    .end local v0    # "auditSafeMode":I
    :cond_4
    :goto_1
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@90
    if-eqz v8, :cond_9

    #@92
    .line 7874
    const-string/jumbo v8, "WindowManager"

    #@95
    new-instance v9, Ljava/lang/StringBuilder;

    #@97
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@9a
    const-string/jumbo v10, "SAFE MODE ENABLED (menu="

    #@9d
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a0
    move-result-object v9

    #@a1
    invoke-virtual {v9, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@a4
    move-result-object v9

    #@a5
    const-string/jumbo v10, " s="

    #@a8
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ab
    move-result-object v9

    #@ac
    invoke-virtual {v9, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@af
    move-result-object v9

    #@b0
    .line 7875
    const-string/jumbo v10, " dpad="

    #@b3
    .line 7874
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b6
    move-result-object v9

    #@b7
    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@ba
    move-result-object v9

    #@bb
    .line 7875
    const-string/jumbo v10, " trackball="

    #@be
    .line 7874
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c1
    move-result-object v9

    #@c2
    invoke-virtual {v9, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c5
    move-result-object v9

    #@c6
    .line 7875
    const-string/jumbo v10, ")"

    #@c9
    .line 7874
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@cc
    move-result-object v9

    #@cd
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@d0
    move-result-object v9

    #@d1
    invoke-static {v8, v9}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@d4
    .line 7876
    const-string/jumbo v8, "ro.sys.safemode"

    #@d7
    const-string/jumbo v9, "1"

    #@da
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    #@dd
    .line 7880
    :goto_2
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@df
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@e1
    invoke-interface {v8, v9}, Landroid/view/WindowManagerPolicy;->setSafeMode(Z)V

    #@e4
    .line 7881
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@e6
    return v8

    #@e7
    .line 7848
    :cond_5
    if-gtz v2, :cond_2

    #@e9
    if-gtz v6, :cond_2

    #@eb
    .line 7849
    if-lez v7, :cond_6

    #@ed
    const/4 v8, 0x1

    #@ee
    goto/16 :goto_0

    #@f0
    :cond_6
    const/4 v8, 0x0

    #@f1
    goto/16 :goto_0

    #@f3
    .line 7860
    .restart local v0    # "auditSafeMode":I
    :cond_7
    :try_start_1
    const-string/jumbo v8, "ro.build.date.utc"

    #@f6
    const/4 v9, 0x0

    #@f7
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    #@fa
    move-result v1

    #@fb
    .line 7862
    .local v1, "buildDate":I
    if-lt v0, v1, :cond_8

    #@fd
    .line 7863
    const/4 v8, 0x1

    #@fe
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@100
    .line 7864
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->showAuditSafeModeNotification()V

    #@103
    goto :goto_1

    #@104
    .line 7871
    .end local v0    # "auditSafeMode":I
    .end local v1    # "buildDate":I
    :catch_0
    move-exception v3

    #@105
    .local v3, "e":Ljava/lang/IllegalArgumentException;
    goto :goto_1

    #@106
    .line 7866
    .end local v3    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v0    # "auditSafeMode":I
    .restart local v1    # "buildDate":I
    :cond_8
    const-string/jumbo v8, "persist.sys.safemode"

    #@109
    const-string/jumbo v9, ""

    #@10c
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    #@10f
    .line 7867
    const-string/jumbo v8, "persist.sys.audit_safemode"

    #@112
    const-string/jumbo v9, ""

    #@115
    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/IllegalArgumentException; {:try_start_1 .. :try_end_1} :catch_0

    #@118
    goto/16 :goto_1

    #@11a
    .line 7878
    .end local v0    # "auditSafeMode":I
    .end local v1    # "buildDate":I
    :cond_9
    const-string/jumbo v8, "WindowManager"

    #@11d
    const-string/jumbo v9, "SAFE MODE not enabled"

    #@120
    invoke-static {v8, v9}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@123
    goto :goto_2
.end method

.method public disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;

    #@0
    .prologue
    .line 5344
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5346
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5350
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@17
    move-result v0

    #@18
    const/16 v1, 0x3e8

    #@1a
    if-eq v0, v1, :cond_1

    #@1c
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->isKeyguardSecure()Z

    #@1f
    move-result v0

    #@20
    if-eqz v0, :cond_1

    #@22
    .line 5351
    const-string/jumbo v0, "WindowManager"

    #@25
    const-string/jumbo v1, "current mode is SecurityMode, ignore disableKeyguard"

    #@28
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@2b
    .line 5352
    return-void

    #@2c
    .line 5356
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUserHandle()Landroid/os/UserHandle;

    #@2f
    move-result-object v0

    #@30
    invoke-virtual {v0}, Landroid/os/UserHandle;->getIdentifier()I

    #@33
    move-result v0

    #@34
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@36
    if-eq v0, v1, :cond_2

    #@38
    .line 5357
    const-string/jumbo v0, "WindowManager"

    #@3b
    const-string/jumbo v1, "non-current user, ignore disableKeyguard"

    #@3e
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@41
    .line 5358
    return-void

    #@42
    .line 5361
    :cond_2
    if-nez p1, :cond_3

    #@44
    .line 5362
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@46
    const-string/jumbo v1, "token == null"

    #@49
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@4c
    throw v0

    #@4d
    .line 5365
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@4f
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@51
    .line 5366
    new-instance v2, Landroid/util/Pair;

    #@53
    invoke-direct {v2, p1, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    #@56
    const/4 v3, 0x1

    #@57
    .line 5365
    invoke-virtual {v1, v3, v2}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@5a
    move-result-object v1

    #@5b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    #@5e
    .line 5343
    return-void
.end method

.method public dismissKeyguard()V
    .locals 2

    #@0
    .prologue
    .line 5433
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5435
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5437
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 5438
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@19
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->dismissKeyguardLw()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    monitor-exit v1

    #@1d
    .line 5432
    return-void

    #@1e
    .line 5437
    :catchall_0
    move-exception v0

    #@1f
    monitor-exit v1

    #@20
    throw v0
.end method

.method dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V
    .locals 2
    .param p1, "session"    # Lcom/android/server/wm/Session;

    #@0
    .prologue
    .line 5584
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    const/16 v1, 0x22

    #@4
    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@7
    move-result-object v0

    #@8
    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    #@b
    .line 5583
    return-void
.end method

.method public displayReady()V
    .locals 7

    #@0
    .prologue
    .line 7885
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    #@2
    const/4 v3, 0x0

    #@3
    array-length v5, v4

    #@4
    :goto_0
    if-ge v3, v5, :cond_0

    #@6
    aget-object v0, v4, v3

    #@8
    .line 7886
    .local v0, "display":Landroid/view/Display;
    invoke-virtual {v0}, Landroid/view/Display;->getDisplayId()I

    #@b
    move-result v6

    #@c
    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    #@f
    .line 7885
    add-int/lit8 v3, v3, 0x1

    #@11
    goto :goto_0

    #@12
    .line 7889
    .end local v0    # "display":Landroid/view/Display;
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@14
    monitor-enter v4

    #@15
    .line 7890
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@18
    move-result-object v1

    #@19
    .line 7891
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V

    #@1c
    .line 7892
    const/4 v3, 0x1

    #@1d
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1f
    monitor-exit v4

    #@20
    .line 7896
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@22
    const/4 v4, 0x0

    #@23
    invoke-interface {v3, v4}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    #@26
    .line 7900
    :goto_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@28
    monitor-enter v4

    #@29
    .line 7901
    :try_start_2
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2b
    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    #@2e
    move-result-object v3

    #@2f
    .line 7902
    const-string/jumbo v5, "android.hardware.touchscreen"

    #@32
    .line 7901
    invoke-virtual {v3, v5}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    #@35
    move-result v3

    #@36
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    #@38
    .line 7903
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3b
    move-result-object v3

    #@3c
    invoke-direct {p0, v3}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@3f
    monitor-exit v4

    #@40
    .line 7907
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@42
    const/4 v4, 0x0

    #@43
    invoke-interface {v3, v4}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    #@46
    .line 7911
    :goto_2
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateCircularDisplayMaskIfNeeded()V

    #@49
    .line 7884
    return-void

    #@4a
    .line 7889
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v3

    #@4b
    monitor-exit v4

    #@4c
    throw v3

    #@4d
    .line 7900
    .restart local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1
    move-exception v3

    #@4e
    monitor-exit v4

    #@4f
    throw v3

    #@50
    .line 7908
    :catch_0
    move-exception v2

    #@51
    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_2

    #@52
    .line 7897
    .end local v2    # "e":Landroid/os/RemoteException;
    :catch_1
    move-exception v2

    #@53
    .restart local v2    # "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    const/4 v0, 0x0

    #@2
    .line 10526
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@4
    const-string/jumbo v3, "android.permission.DUMP"

    #@7
    invoke-virtual {v1, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@a
    move-result v1

    #@b
    if-eqz v1, :cond_0

    #@d
    .line 10528
    new-instance v0, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v1, "Permission Denial: can\'t dump WindowManager from from pid="

    #@15
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v0

    #@19
    .line 10529
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@1c
    move-result v1

    #@1d
    .line 10528
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@20
    move-result-object v0

    #@21
    .line 10530
    const-string/jumbo v1, ", uid="

    #@24
    .line 10528
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v0

    #@28
    .line 10530
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@2b
    move-result v1

    #@2c
    .line 10528
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2f
    move-result-object v0

    #@30
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@33
    move-result-object v0

    #@34
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@37
    .line 10531
    return-void

    #@38
    .line 10534
    :cond_0
    const/4 v5, 0x0

    #@39
    .line 10536
    .local v5, "dumpAll":Z
    const/4 v4, 0x0

    #@3a
    .line 10537
    .local v4, "opti":I
    :goto_0
    array-length v1, p3

    #@3b
    if-ge v4, v1, :cond_1

    #@3d
    .line 10538
    aget-object v6, p3, v4

    #@3f
    .line 10539
    .local v6, "opt":Ljava/lang/String;
    if-eqz v6, :cond_1

    #@41
    invoke-virtual {v6}, Ljava/lang/String;->length()I

    #@44
    move-result v1

    #@45
    if-gtz v1, :cond_3

    #@47
    .line 10571
    .end local v6    # "opt":Ljava/lang/String;
    :cond_1
    array-length v1, p3

    #@48
    if-ge v4, v1, :cond_17

    #@4a
    .line 10572
    aget-object v2, p3, v4

    #@4c
    .line 10573
    .local v2, "cmd":Ljava/lang/String;
    add-int/lit8 v4, v4, 0x1

    #@4e
    .line 10574
    const-string/jumbo v0, "lastanr"

    #@51
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@54
    move-result v0

    #@55
    if-nez v0, :cond_2

    #@57
    const-string/jumbo v0, "l"

    #@5a
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@5d
    move-result v0

    #@5e
    if-eqz v0, :cond_6

    #@60
    .line 10575
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@62
    monitor-enter v0

    #@63
    .line 10576
    :try_start_0
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@66
    monitor-exit v0

    #@67
    .line 10578
    return-void

    #@68
    .line 10539
    .end local v2    # "cmd":Ljava/lang/String;
    .restart local v6    # "opt":Ljava/lang/String;
    :cond_3
    invoke-virtual {v6, v7}, Ljava/lang/String;->charAt(I)C

    #@6b
    move-result v1

    #@6c
    const/16 v3, 0x2d

    #@6e
    if-ne v1, v3, :cond_1

    #@70
    .line 10542
    add-int/lit8 v4, v4, 0x1

    #@72
    .line 10543
    const-string/jumbo v1, "-a"

    #@75
    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@78
    move-result v1

    #@79
    if-eqz v1, :cond_4

    #@7b
    .line 10544
    const/4 v5, 0x1

    #@7c
    goto :goto_0

    #@7d
    .line 10545
    :cond_4
    const-string/jumbo v1, "-h"

    #@80
    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@83
    move-result v1

    #@84
    if-eqz v1, :cond_5

    #@86
    .line 10546
    const-string/jumbo v0, "Window manager dump options:"

    #@89
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@8c
    .line 10547
    const-string/jumbo v0, "  [-a] [-h] [cmd] ..."

    #@8f
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@92
    .line 10548
    const-string/jumbo v0, "  cmd may be one of:"

    #@95
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@98
    .line 10549
    const-string/jumbo v0, "    l[astanr]: last ANR information"

    #@9b
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@9e
    .line 10550
    const-string/jumbo v0, "    p[policy]: policy state"

    #@a1
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@a4
    .line 10551
    const-string/jumbo v0, "    a[animator]: animator state"

    #@a7
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@aa
    .line 10552
    const-string/jumbo v0, "    s[essions]: active sessions"

    #@ad
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@b0
    .line 10553
    const-string/jumbo v0, "    surfaces: active surfaces (debugging enabled only)"

    #@b3
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@b6
    .line 10554
    const-string/jumbo v0, "    d[isplays]: active display contents"

    #@b9
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@bc
    .line 10555
    const-string/jumbo v0, "    t[okens]: token list"

    #@bf
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@c2
    .line 10556
    const-string/jumbo v0, "    w[indows]: window list"

    #@c5
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@c8
    .line 10557
    const-string/jumbo v0, "  cmd may also be a NAME to dump windows.  NAME may"

    #@cb
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@ce
    .line 10558
    const-string/jumbo v0, "    be a partial substring in a window name, a"

    #@d1
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@d4
    .line 10559
    const-string/jumbo v0, "    Window hex object identifier, or"

    #@d7
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@da
    .line 10560
    const-string/jumbo v0, "    \"all\" for all windows, or"

    #@dd
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@e0
    .line 10561
    const-string/jumbo v0, "    \"visible\" for the visible windows."

    #@e3
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@e6
    .line 10562
    const-string/jumbo v0, "    \"visible-apps\" for the visible app windows."

    #@e9
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@ec
    .line 10563
    const-string/jumbo v0, "  -a: include all available server state."

    #@ef
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@f2
    .line 10564
    return-void

    #@f3
    .line 10566
    :cond_5
    new-instance v1, Ljava/lang/StringBuilder;

    #@f5
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    #@f8
    const-string/jumbo v3, "Unknown argument: "

    #@fb
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fe
    move-result-object v1

    #@ff
    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@102
    move-result-object v1

    #@103
    const-string/jumbo v3, "; use -h for help"

    #@106
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@109
    move-result-object v1

    #@10a
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10d
    move-result-object v1

    #@10e
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@111
    goto/16 :goto_0

    #@113
    .line 10575
    .end local v6    # "opt":Ljava/lang/String;
    .restart local v2    # "cmd":Ljava/lang/String;
    :catchall_0
    move-exception v1

    #@114
    monitor-exit v0

    #@115
    throw v1

    #@116
    .line 10579
    :cond_6
    const-string/jumbo v0, "policy"

    #@119
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@11c
    move-result v0

    #@11d
    if-nez v0, :cond_7

    #@11f
    const-string/jumbo v0, "p"

    #@122
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@125
    move-result v0

    #@126
    if-eqz v0, :cond_8

    #@128
    .line 10580
    :cond_7
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@12a
    monitor-enter v0

    #@12b
    .line 10581
    const/4 v1, 0x1

    #@12c
    :try_start_1
    invoke-virtual {p0, p2, p3, v1}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@12f
    monitor-exit v0

    #@130
    .line 10583
    return-void

    #@131
    .line 10580
    :catchall_1
    move-exception v1

    #@132
    monitor-exit v0

    #@133
    throw v1

    #@134
    .line 10584
    :cond_8
    const-string/jumbo v0, "animator"

    #@137
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@13a
    move-result v0

    #@13b
    if-nez v0, :cond_9

    #@13d
    const-string/jumbo v0, "a"

    #@140
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@143
    move-result v0

    #@144
    if-eqz v0, :cond_a

    #@146
    .line 10585
    :cond_9
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@148
    monitor-enter v0

    #@149
    .line 10586
    const/4 v1, 0x1

    #@14a
    :try_start_2
    invoke-virtual {p0, p2, p3, v1}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@14d
    monitor-exit v0

    #@14e
    .line 10588
    return-void

    #@14f
    .line 10585
    :catchall_2
    move-exception v1

    #@150
    monitor-exit v0

    #@151
    throw v1

    #@152
    .line 10589
    :cond_a
    const-string/jumbo v0, "sessions"

    #@155
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@158
    move-result v0

    #@159
    if-nez v0, :cond_b

    #@15b
    const-string/jumbo v0, "s"

    #@15e
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@161
    move-result v0

    #@162
    if-eqz v0, :cond_c

    #@164
    .line 10590
    :cond_b
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@166
    monitor-enter v0

    #@167
    .line 10591
    const/4 v1, 0x1

    #@168
    :try_start_3
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    #@16b
    monitor-exit v0

    #@16c
    .line 10593
    return-void

    #@16d
    .line 10590
    :catchall_3
    move-exception v1

    #@16e
    monitor-exit v0

    #@16f
    throw v1

    #@170
    .line 10594
    :cond_c
    const-string/jumbo v0, "surfaces"

    #@173
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@176
    move-result v0

    #@177
    if-eqz v0, :cond_d

    #@179
    .line 10595
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17b
    monitor-enter v0

    #@17c
    .line 10596
    const/4 v1, 0x0

    #@17d
    :try_start_4
    invoke-static {p2, v1}, Lcom/android/server/wm/WindowSurfaceController$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    #@180
    monitor-exit v0

    #@181
    .line 10598
    return-void

    #@182
    .line 10595
    :catchall_4
    move-exception v1

    #@183
    monitor-exit v0

    #@184
    throw v1

    #@185
    .line 10599
    :cond_d
    const-string/jumbo v0, "displays"

    #@188
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@18b
    move-result v0

    #@18c
    if-nez v0, :cond_e

    #@18e
    const-string/jumbo v0, "d"

    #@191
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@194
    move-result v0

    #@195
    if-eqz v0, :cond_f

    #@197
    .line 10600
    :cond_e
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@199
    monitor-enter v0

    #@19a
    .line 10601
    const/4 v1, 0x1

    #@19b
    :try_start_5
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    #@19e
    monitor-exit v0

    #@19f
    .line 10603
    return-void

    #@1a0
    .line 10600
    :catchall_5
    move-exception v1

    #@1a1
    monitor-exit v0

    #@1a2
    throw v1

    #@1a3
    .line 10604
    :cond_f
    const-string/jumbo v0, "tokens"

    #@1a6
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1a9
    move-result v0

    #@1aa
    if-nez v0, :cond_10

    #@1ac
    const-string/jumbo v0, "t"

    #@1af
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1b2
    move-result v0

    #@1b3
    if-eqz v0, :cond_11

    #@1b5
    .line 10605
    :cond_10
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b7
    monitor-enter v0

    #@1b8
    .line 10606
    const/4 v1, 0x1

    #@1b9
    :try_start_6
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    #@1bc
    monitor-exit v0

    #@1bd
    .line 10608
    return-void

    #@1be
    .line 10605
    :catchall_6
    move-exception v1

    #@1bf
    monitor-exit v0

    #@1c0
    throw v1

    #@1c1
    .line 10609
    :cond_11
    const-string/jumbo v0, "windows"

    #@1c4
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1c7
    move-result v0

    #@1c8
    if-nez v0, :cond_12

    #@1ca
    const-string/jumbo v0, "w"

    #@1cd
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1d0
    move-result v0

    #@1d1
    if-eqz v0, :cond_13

    #@1d3
    .line 10610
    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1d5
    monitor-enter v0

    #@1d6
    .line 10611
    const/4 v1, 0x1

    #@1d7
    const/4 v3, 0x0

    #@1d8
    :try_start_7
    invoke-virtual {p0, p2, v1, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    #@1db
    monitor-exit v0

    #@1dc
    .line 10613
    return-void

    #@1dd
    .line 10610
    :catchall_7
    move-exception v1

    #@1de
    monitor-exit v0

    #@1df
    throw v1

    #@1e0
    .line 10614
    :cond_13
    const-string/jumbo v0, "all"

    #@1e3
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1e6
    move-result v0

    #@1e7
    if-nez v0, :cond_14

    #@1e9
    const-string/jumbo v0, "a"

    #@1ec
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1ef
    move-result v0

    #@1f0
    if-eqz v0, :cond_15

    #@1f2
    .line 10615
    :cond_14
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1f4
    monitor-enter v0

    #@1f5
    .line 10616
    const/4 v1, 0x1

    #@1f6
    const/4 v3, 0x0

    #@1f7
    :try_start_8
    invoke-virtual {p0, p2, v1, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_8

    #@1fa
    monitor-exit v0

    #@1fb
    .line 10618
    return-void

    #@1fc
    .line 10615
    :catchall_8
    move-exception v1

    #@1fd
    monitor-exit v0

    #@1fe
    throw v1

    #@1ff
    :cond_15
    move-object v0, p0

    #@200
    move-object v1, p2

    #@201
    move-object v3, p3

    #@202
    .line 10621
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    #@205
    move-result v0

    #@206
    if-nez v0, :cond_16

    #@208
    .line 10622
    new-instance v0, Ljava/lang/StringBuilder;

    #@20a
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    #@20d
    const-string/jumbo v1, "Bad window command, or no windows match: "

    #@210
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@213
    move-result-object v0

    #@214
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@217
    move-result-object v0

    #@218
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@21b
    move-result-object v0

    #@21c
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@21f
    .line 10623
    const-string/jumbo v0, "Use -h for help."

    #@222
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@225
    .line 10625
    :cond_16
    return-void

    #@226
    .line 10629
    .end local v2    # "cmd":Ljava/lang/String;
    :cond_17
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@228
    monitor-enter v1

    #@229
    .line 10630
    :try_start_9
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@22c
    .line 10631
    if-eqz v5, :cond_18

    #@22e
    .line 10632
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@231
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@234
    .line 10634
    :cond_18
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    #@237
    .line 10635
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@23a
    .line 10636
    if-eqz v5, :cond_19

    #@23c
    .line 10637
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@23f
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@242
    .line 10639
    :cond_19
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    #@245
    .line 10640
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@248
    .line 10641
    if-eqz v5, :cond_1a

    #@24a
    .line 10642
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@24d
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@250
    .line 10644
    :cond_1a
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    #@253
    .line 10645
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@256
    .line 10646
    if-eqz v5, :cond_1b

    #@258
    .line 10647
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@25b
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@25e
    .line 10649
    :cond_1b
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    #@261
    .line 10650
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@264
    .line 10651
    if-eqz v5, :cond_1c

    #@266
    .line 10652
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    #@269
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@26c
    .line 10654
    :cond_1c
    if-eqz v5, :cond_1d

    #@26e
    .line 10655
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@271
    .line 10654
    :cond_1d
    invoke-static {p2, v0}, Lcom/android/server/wm/WindowSurfaceController$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@274
    .line 10657
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@277
    .line 10658
    if-eqz v5, :cond_1e

    #@279
    .line 10659
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@27c
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@27f
    .line 10661
    :cond_1e
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    #@282
    .line 10662
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@285
    .line 10663
    if-eqz v5, :cond_1f

    #@287
    .line 10664
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@28a
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@28d
    .line 10666
    :cond_1f
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    #@290
    .line 10667
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    #@293
    .line 10668
    if-eqz v5, :cond_20

    #@295
    .line 10669
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    #@298
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@29b
    .line 10671
    :cond_20
    const/4 v0, 0x0

    #@29c
    invoke-virtual {p0, p2, v5, v0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_9

    #@29f
    monitor-exit v1

    #@2a0
    .line 10525
    return-void

    #@2a1
    .line 10629
    :catchall_9
    move-exception v0

    #@2a2
    monitor-exit v1

    #@2a3
    throw v0
.end method

.method dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    #@0
    .prologue
    .line 10157
    const-string/jumbo v0, "WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10158
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@8
    const-string/jumbo v1, "    "

    #@b
    invoke-virtual {v0, p1, v1, p3}, Lcom/android/server/wm/WindowAnimator;->dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@e
    .line 10156
    return-void
.end method

.method dumpAppTokensLocked()V
    .locals 13

    #@0
    .prologue
    .line 4789
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v0

    #@6
    .line 4790
    .local v0, "numStacks":I
    const/4 v4, 0x0

    #@7
    .local v4, "stackNdx":I
    :goto_0
    if-ge v4, v0, :cond_2

    #@9
    .line 4791
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v10, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v3

    #@f
    check-cast v3, Lcom/android/server/wm/TaskStack;

    #@11
    .line 4792
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    const-string/jumbo v10, "WindowManager"

    #@14
    new-instance v11, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v12, "  Stack #"

    #@1c
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v11

    #@20
    iget v12, v3, Lcom/android/server/wm/TaskStack;->mStackId:I

    #@22
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@25
    move-result-object v11

    #@26
    const-string/jumbo v12, " tasks from bottom to top:"

    #@29
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v11

    #@2d
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@30
    move-result-object v11

    #@31
    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@34
    .line 4793
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@37
    move-result-object v7

    #@38
    .line 4794
    .local v7, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    #@3b
    move-result v1

    #@3c
    .line 4795
    .local v1, "numTasks":I
    const/4 v6, 0x0

    #@3d
    .local v6, "taskNdx":I
    :goto_1
    if-ge v6, v1, :cond_1

    #@3f
    .line 4796
    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@42
    move-result-object v5

    #@43
    check-cast v5, Lcom/android/server/wm/Task;

    #@45
    .line 4797
    .local v5, "task":Lcom/android/server/wm/Task;
    const-string/jumbo v10, "WindowManager"

    #@48
    new-instance v11, Ljava/lang/StringBuilder;

    #@4a
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@4d
    const-string/jumbo v12, "    Task #"

    #@50
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@53
    move-result-object v11

    #@54
    iget v12, v5, Lcom/android/server/wm/Task;->mTaskId:I

    #@56
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@59
    move-result-object v11

    #@5a
    const-string/jumbo v12, " activities from bottom to top:"

    #@5d
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@60
    move-result-object v11

    #@61
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@64
    move-result-object v11

    #@65
    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@68
    .line 4798
    iget-object v9, v5, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@6a
    .line 4799
    .local v9, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v9}, Lcom/android/server/wm/AppTokenList;->size()I

    #@6d
    move-result v2

    #@6e
    .line 4800
    .local v2, "numTokens":I
    const/4 v8, 0x0

    #@6f
    .local v8, "tokenNdx":I
    :goto_2
    if-ge v8, v2, :cond_0

    #@71
    .line 4801
    const-string/jumbo v11, "WindowManager"

    #@74
    new-instance v10, Ljava/lang/StringBuilder;

    #@76
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@79
    const-string/jumbo v12, "      activity #"

    #@7c
    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7f
    move-result-object v10

    #@80
    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@83
    move-result-object v10

    #@84
    const-string/jumbo v12, ": "

    #@87
    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8a
    move-result-object v12

    #@8b
    invoke-virtual {v9, v8}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@8e
    move-result-object v10

    #@8f
    check-cast v10, Lcom/android/server/wm/AppWindowToken;

    #@91
    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@93
    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@96
    move-result-object v10

    #@97
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9a
    move-result-object v10

    #@9b
    invoke-static {v11, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@9e
    .line 4800
    add-int/lit8 v8, v8, 0x1

    #@a0
    goto :goto_2

    #@a1
    .line 4795
    :cond_0
    add-int/lit8 v6, v6, 0x1

    #@a3
    goto :goto_1

    #@a4
    .line 4790
    .end local v2    # "numTokens":I
    .end local v5    # "task":Lcom/android/server/wm/Task;
    .end local v8    # "tokenNdx":I
    .end local v9    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_1
    add-int/lit8 v4, v4, 0x1

    #@a6
    goto/16 :goto_0

    #@a8
    .line 4788
    .end local v1    # "numTasks":I
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v6    # "taskNdx":I
    .end local v7    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_2
    return-void
.end method

.method dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    .locals 4
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    .line 10214
    const-string/jumbo v3, "WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)"

    #@3
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10215
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@8
    if-eqz v3, :cond_0

    #@a
    .line 10216
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@c
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@f
    move-result v2

    #@10
    .line 10217
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@11
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@13
    .line 10218
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@15
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@18
    move-result-object v0

    #@19
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@1b
    .line 10219
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v3, "  "

    #@1e
    invoke-virtual {v0, v3, p1}, Lcom/android/server/wm/DisplayContent;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    #@21
    .line 10217
    add-int/lit8 v1, v1, 0x1

    #@23
    goto :goto_0

    #@24
    .line 10222
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :cond_0
    const-string/jumbo v3, "  NO DISPLAY"

    #@27
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@2a
    .line 10213
    :cond_1
    return-void
.end method

.method dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;

    #@0
    .prologue
    .line 10481
    const-string/jumbo v0, "WINDOW MANAGER LAST ANR (dumpsys window lastanr)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10482
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@8
    if-nez v0, :cond_0

    #@a
    .line 10483
    const-string/jumbo v0, "  <no ANR has occurred since boot>"

    #@d
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@10
    .line 10480
    :goto_0
    return-void

    #@11
    .line 10485
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@13
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@16
    goto :goto_0
.end method

.method dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    #@0
    .prologue
    .line 10152
    const-string/jumbo v0, "WINDOW MANAGER POLICY STATE (dumpsys window policy)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10153
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@8
    const-string/jumbo v1, "    "

    #@b
    invoke-interface {v0, v1, p1, p2}, Landroid/view/WindowManagerPolicy;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    #@e
    .line 10151
    return-void
.end method

.method dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    .locals 3
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    .line 10205
    const-string/jumbo v2, "WINDOW MANAGER SESSIONS (dumpsys window sessions)"

    #@3
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10206
    const/4 v0, 0x0

    #@7
    .local v0, "i":I
    :goto_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@9
    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    #@c
    move-result v2

    #@d
    if-ge v0, v2, :cond_0

    #@f
    .line 10207
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@11
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/Session;

    #@17
    .line 10208
    .local v1, "s":Lcom/android/server/wm/Session;
    const-string/jumbo v2, "  Session "

    #@1a
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@1d
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@20
    const/16 v2, 0x3a

    #@22
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(C)V

    #@25
    .line 10209
    const-string/jumbo v2, "    "

    #@28
    invoke-virtual {v1, p1, v2}, Lcom/android/server/wm/Session;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@2b
    .line 10206
    add-int/lit8 v0, v0, 0x1

    #@2d
    goto :goto_0

    #@2e
    .line 10204
    .end local v1    # "s":Lcom/android/server/wm/Session;
    :cond_0
    return-void
.end method

.method dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    .locals 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    #@0
    .prologue
    const/16 v5, 0x3a

    #@2
    .line 10162
    const-string/jumbo v3, "WINDOW MANAGER TOKENS (dumpsys window tokens)"

    #@5
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@8
    .line 10163
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@a
    invoke-virtual {v3}, Ljava/util/HashMap;->isEmpty()Z

    #@d
    move-result v3

    #@e
    if-nez v3, :cond_1

    #@10
    .line 10164
    const-string/jumbo v3, "  All tokens:"

    #@13
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@16
    .line 10165
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@18
    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@1b
    move-result-object v3

    #@1c
    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    #@1f
    move-result-object v1

    #@20
    .line 10166
    .local v1, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@23
    move-result v3

    #@24
    if-eqz v3, :cond_1

    #@26
    .line 10167
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@29
    move-result-object v2

    #@2a
    check-cast v2, Lcom/android/server/wm/WindowToken;

    #@2c
    .line 10168
    .local v2, "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  "

    #@2f
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@32
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@35
    .line 10169
    if-eqz p2, :cond_0

    #@37
    .line 10170
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(C)V

    #@3a
    .line 10171
    const-string/jumbo v3, "    "

    #@3d
    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@40
    goto :goto_0

    #@41
    .line 10173
    :cond_0
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@44
    goto :goto_0

    #@45
    .line 10177
    .end local v1    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@47
    const-string/jumbo v4, "  "

    #@4a
    invoke-virtual {v3, p1, v4, p2}, Lcom/android/server/wm/WallpaperController;->dumpTokens(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@4d
    .line 10178
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@4f
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    #@52
    move-result v3

    #@53
    if-nez v3, :cond_3

    #@55
    .line 10179
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@58
    .line 10180
    const-string/jumbo v3, "  Finishing start of application tokens:"

    #@5b
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@5e
    .line 10181
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@60
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@63
    move-result v3

    #@64
    add-int/lit8 v0, v3, -0x1

    #@66
    .local v0, "i":I
    :goto_1
    if-ltz v0, :cond_3

    #@68
    .line 10182
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    #@6a
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@6d
    move-result-object v2

    #@6e
    check-cast v2, Lcom/android/server/wm/WindowToken;

    #@70
    .line 10183
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  Finished Starting #"

    #@73
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@76
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    #@79
    .line 10184
    const/16 v3, 0x20

    #@7b
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(C)V

    #@7e
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@81
    .line 10185
    if-eqz p2, :cond_2

    #@83
    .line 10186
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(C)V

    #@86
    .line 10187
    const-string/jumbo v3, "    "

    #@89
    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@8c
    .line 10181
    :goto_2
    add-int/lit8 v0, v0, -0x1

    #@8e
    goto :goto_1

    #@8f
    .line 10189
    :cond_2
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@92
    goto :goto_2

    #@93
    .line 10193
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@95
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@98
    move-result v3

    #@99
    if-eqz v3, :cond_5

    #@9b
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@9d
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@a0
    move-result v3

    #@a1
    if-eqz v3, :cond_5

    #@a3
    .line 10161
    :cond_4
    :goto_3
    return-void

    #@a4
    .line 10194
    :cond_5
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@a7
    .line 10195
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@a9
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    #@ac
    move-result v3

    #@ad
    if-lez v3, :cond_6

    #@af
    .line 10196
    const-string/jumbo v3, "  mOpeningApps="

    #@b2
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@b5
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@b7
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@ba
    .line 10198
    :cond_6
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@bc
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    #@bf
    move-result v3

    #@c0
    if-lez v3, :cond_4

    #@c2
    .line 10199
    const-string/jumbo v3, "  mClosingApps="

    #@c5
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@c8
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@ca
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@cd
    goto :goto_3
.end method

.method dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 13
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    #@0
    .prologue
    .line 10421
    new-instance v10, Lcom/android/server/wm/WindowList;

    #@2
    invoke-direct {v10}, Lcom/android/server/wm/WindowList;-><init>()V

    #@5
    .line 10422
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    const-string/jumbo v11, "apps"

    #@8
    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@b
    move-result v11

    #@c
    if-nez v11, :cond_0

    #@e
    const-string/jumbo v11, "visible"

    #@11
    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@14
    move-result v11

    #@15
    if-nez v11, :cond_0

    #@17
    const-string/jumbo v11, "visible-apps"

    #@1a
    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@1d
    move-result v11

    #@1e
    if-eqz v11, :cond_7

    #@20
    .line 10423
    :cond_0
    const-string/jumbo v11, "apps"

    #@23
    invoke-virtual {p2, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@26
    move-result v1

    #@27
    .line 10424
    .local v1, "appsOnly":Z
    const-string/jumbo v11, "visible"

    #@2a
    invoke-virtual {p2, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@2d
    move-result v6

    #@2e
    .line 10425
    .local v6, "visibleOnly":Z
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@30
    monitor-enter v12

    #@31
    .line 10426
    if-eqz v1, :cond_1

    #@33
    .line 10427
    const/4 v11, 0x1

    #@34
    :try_start_0
    invoke-virtual {p0, p1, v11}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    #@37
    .line 10430
    :cond_1
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@39
    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    #@3c
    move-result v4

    #@3d
    .line 10431
    .local v4, "numDisplays":I
    const/4 v2, 0x0

    #@3e
    .local v2, "displayNdx":I
    :goto_0
    if-ge v2, v4, :cond_6

    #@40
    .line 10433
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@42
    invoke-virtual {v11, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@45
    move-result-object v11

    #@46
    check-cast v11, Lcom/android/server/wm/DisplayContent;

    #@48
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@4b
    move-result-object v9

    #@4c
    .line 10434
    .local v9, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@4f
    move-result v11

    #@50
    add-int/lit8 v8, v11, -0x1

    #@52
    .local v8, "winNdx":I
    :goto_1
    if-ltz v8, :cond_5

    #@54
    .line 10435
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@57
    move-result-object v7

    #@58
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@5a
    .line 10436
    .local v7, "w":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_2

    #@5c
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@5e
    invoke-virtual {v11}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    #@61
    move-result v11

    #@62
    if-eqz v11, :cond_4

    #@64
    .line 10437
    :cond_2
    if-eqz v1, :cond_3

    #@66
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@68
    if-eqz v11, :cond_4

    #@6a
    .line 10438
    :cond_3
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6d
    .line 10434
    :cond_4
    add-int/lit8 v8, v8, -0x1

    #@6f
    goto :goto_1

    #@70
    .line 10431
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    :cond_5
    add-int/lit8 v2, v2, 0x1

    #@72
    goto :goto_0

    #@73
    .end local v1    # "appsOnly":Z
    .end local v6    # "visibleOnly":Z
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    .end local p2    # "name":Ljava/lang/String;
    :cond_6
    monitor-exit v12

    #@74
    .line 10470
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    #@77
    move-result v11

    #@78
    if-gtz v11, :cond_b

    #@7a
    .line 10471
    const/4 v11, 0x0

    #@7b
    return v11

    #@7c
    .line 10425
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .restart local v1    # "appsOnly":Z
    .restart local v6    # "visibleOnly":Z
    .restart local p2    # "name":Ljava/lang/String;
    :catchall_0
    move-exception v11

    #@7d
    monitor-exit v12

    #@7e
    throw v11

    #@7f
    .line 10444
    .end local v1    # "appsOnly":Z
    .end local v6    # "visibleOnly":Z
    :cond_7
    const/4 v5, 0x0

    #@80
    .line 10447
    .local v5, "objectId":I
    const/16 v11, 0x10

    #@82
    :try_start_1
    invoke-static {p2, v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I
    :try_end_1
    .catch Ljava/lang/RuntimeException; {:try_start_1 .. :try_end_1} :catch_0

    #@85
    move-result v5

    #@86
    .line 10448
    const/4 p2, 0x0

    #@87
    .line 10451
    .end local p2    # "name":Ljava/lang/String;
    :goto_2
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@89
    monitor-enter v12

    #@8a
    .line 10452
    :try_start_2
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@8c
    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    #@8f
    move-result v4

    #@90
    .line 10453
    .restart local v4    # "numDisplays":I
    const/4 v2, 0x0

    #@91
    .restart local v2    # "displayNdx":I
    :goto_3
    if-ge v2, v4, :cond_6

    #@93
    .line 10455
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@95
    invoke-virtual {v11, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@98
    move-result-object v11

    #@99
    check-cast v11, Lcom/android/server/wm/DisplayContent;

    #@9b
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@9e
    move-result-object v9

    #@9f
    .line 10456
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@a2
    move-result v11

    #@a3
    add-int/lit8 v8, v11, -0x1

    #@a5
    .restart local v8    # "winNdx":I
    :goto_4
    if-ltz v8, :cond_a

    #@a7
    .line 10457
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@aa
    move-result-object v7

    #@ab
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@ad
    .line 10458
    .restart local v7    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p2, :cond_9

    #@af
    .line 10459
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@b1
    invoke-virtual {v11}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@b4
    move-result-object v11

    #@b5
    invoke-interface {v11}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    #@b8
    move-result-object v11

    #@b9
    invoke-virtual {v11, p2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    #@bc
    move-result v11

    #@bd
    if-eqz v11, :cond_8

    #@bf
    .line 10460
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    #@c2
    .line 10456
    :cond_8
    :goto_5
    add-int/lit8 v8, v8, -0x1

    #@c4
    goto :goto_4

    #@c5
    .line 10449
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    .restart local p2    # "name":Ljava/lang/String;
    :catch_0
    move-exception v3

    #@c6
    .local v3, "e":Ljava/lang/RuntimeException;
    goto :goto_2

    #@c7
    .line 10462
    .end local v3    # "e":Ljava/lang/RuntimeException;
    .end local p2    # "name":Ljava/lang/String;
    .restart local v2    # "displayNdx":I
    .restart local v4    # "numDisplays":I
    .restart local v7    # "w":Lcom/android/server/wm/WindowState;
    .restart local v8    # "winNdx":I
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_9
    invoke-static {v7}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@ca
    move-result v11

    #@cb
    if-ne v11, v5, :cond_8

    #@cd
    .line 10463
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@d0
    goto :goto_5

    #@d1
    .line 10451
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :catchall_1
    move-exception v11

    #@d2
    monitor-exit v12

    #@d3
    throw v11

    #@d4
    .line 10453
    .restart local v2    # "displayNdx":I
    .restart local v4    # "numDisplays":I
    .restart local v8    # "winNdx":I
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_a
    add-int/lit8 v2, v2, 0x1

    #@d6
    goto :goto_3

    #@d7
    .line 10474
    .end local v5    # "objectId":I
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_b
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@d9
    monitor-enter v11

    #@da
    .line 10475
    :try_start_3
    move/from16 v0, p5

    #@dc
    invoke-virtual {p0, p1, v0, v10}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    #@df
    monitor-exit v11

    #@e0
    .line 10477
    const/4 v11, 0x1

    #@e1
    return v11

    #@e2
    .line 10474
    :catchall_2
    move-exception v12

    #@e3
    monitor-exit v11

    #@e4
    throw v12
.end method

.method dumpWindowsLocked()V
    .locals 8

    #@0
    .prologue
    .line 4808
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v2

    #@6
    .line 4809
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@9
    .line 4810
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v0

    #@f
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@11
    .line 4811
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v5, "WindowManager"

    #@14
    new-instance v6, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v7, " Display #"

    #@1c
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v6

    #@20
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@23
    move-result v7

    #@24
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@27
    move-result-object v6

    #@28
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b
    move-result-object v6

    #@2c
    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@2f
    .line 4812
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@32
    move-result-object v4

    #@33
    .line 4813
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@36
    move-result v5

    #@37
    add-int/lit8 v3, v5, -0x1

    #@39
    .local v3, "winNdx":I
    :goto_1
    if-ltz v3, :cond_0

    #@3b
    .line 4814
    const-string/jumbo v5, "WindowManager"

    #@3e
    new-instance v6, Ljava/lang/StringBuilder;

    #@40
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@43
    const-string/jumbo v7, "  #"

    #@46
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@49
    move-result-object v6

    #@4a
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4d
    move-result-object v6

    #@4e
    const-string/jumbo v7, ": "

    #@51
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@54
    move-result-object v6

    #@55
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@58
    move-result-object v7

    #@59
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5c
    move-result-object v6

    #@5d
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@60
    move-result-object v6

    #@61
    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@64
    .line 4813
    add-int/lit8 v3, v3, -0x1

    #@66
    goto :goto_1

    #@67
    .line 4809
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@69
    goto :goto_0

    #@6a
    .line 4807
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1
    return-void
.end method

.method dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 10228
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string/jumbo v0, "WINDOW MANAGER WINDOWS (dumpsys window windows)"

    #@3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6
    .line 10229
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    #@9
    .line 10227
    return-void
.end method

.method dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .locals 10
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 10234
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v3

    #@6
    .line 10235
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v3, :cond_5

    #@9
    .line 10236
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v8

    #@f
    check-cast v8, Lcom/android/server/wm/DisplayContent;

    #@11
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@14
    move-result-object v7

    #@15
    .line 10237
    .local v7, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@18
    move-result v8

    #@19
    add-int/lit8 v6, v8, -0x1

    #@1b
    .local v6, "winNdx":I
    :goto_1
    if-ltz v6, :cond_4

    #@1d
    .line 10238
    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@20
    move-result-object v4

    #@21
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@23
    .line 10239
    .local v4, "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_0

    #@25
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@28
    move-result v8

    #@29
    if-eqz v8, :cond_2

    #@2b
    .line 10240
    :cond_0
    const-string/jumbo v8, "  Window #"

    #@2e
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@31
    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(I)V

    #@34
    const/16 v8, 0x20

    #@36
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@39
    .line 10241
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@3c
    const-string/jumbo v8, ":"

    #@3f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@42
    .line 10242
    const-string/jumbo v9, "    "

    #@45
    if-nez p2, :cond_1

    #@47
    if-eqz p3, :cond_3

    #@49
    :cond_1
    const/4 v8, 0x1

    #@4a
    :goto_2
    invoke-virtual {v4, p1, v9, v8}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@4d
    .line 10237
    :cond_2
    add-int/lit8 v6, v6, -0x1

    #@4f
    goto :goto_1

    #@50
    .line 10242
    :cond_3
    const/4 v8, 0x0

    #@51
    goto :goto_2

    #@52
    .line 10235
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_4
    add-int/lit8 v1, v1, 0x1

    #@54
    goto :goto_0

    #@55
    .line 10246
    .end local v6    # "winNdx":I
    .end local v7    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_5
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@57
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@5a
    move-result v8

    #@5b
    if-lez v8, :cond_8

    #@5d
    .line 10247
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@60
    .line 10248
    const-string/jumbo v8, "  Input method dialogs:"

    #@63
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@66
    .line 10249
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@68
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@6b
    move-result v8

    #@6c
    add-int/lit8 v2, v8, -0x1

    #@6e
    .local v2, "i":I
    :goto_3
    if-ltz v2, :cond_8

    #@70
    .line 10250
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@72
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@75
    move-result-object v4

    #@76
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@78
    .line 10251
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_6

    #@7a
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@7d
    move-result v8

    #@7e
    if-eqz v8, :cond_7

    #@80
    .line 10252
    :cond_6
    const-string/jumbo v8, "  IM Dialog #"

    #@83
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@86
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@89
    const-string/jumbo v8, ": "

    #@8c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@8f
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@92
    .line 10249
    :cond_7
    add-int/lit8 v2, v2, -0x1

    #@94
    goto :goto_3

    #@95
    .line 10256
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_8
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@97
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@9a
    move-result v8

    #@9b
    if-lez v8, :cond_c

    #@9d
    .line 10257
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@a0
    .line 10258
    const-string/jumbo v8, "  Remove pending for:"

    #@a3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@a6
    .line 10259
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@a8
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@ab
    move-result v8

    #@ac
    add-int/lit8 v2, v8, -0x1

    #@ae
    .restart local v2    # "i":I
    :goto_4
    if-ltz v2, :cond_c

    #@b0
    .line 10260
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@b2
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@b5
    move-result-object v4

    #@b6
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@b8
    .line 10261
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_9

    #@ba
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@bd
    move-result v8

    #@be
    if-eqz v8, :cond_a

    #@c0
    .line 10262
    :cond_9
    const-string/jumbo v8, "  Remove #"

    #@c3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@c6
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@c9
    const/16 v8, 0x20

    #@cb
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@ce
    .line 10263
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@d1
    .line 10264
    if-eqz p2, :cond_b

    #@d3
    .line 10265
    const-string/jumbo v8, ":"

    #@d6
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@d9
    .line 10266
    const-string/jumbo v8, "    "

    #@dc
    const/4 v9, 0x1

    #@dd
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@e0
    .line 10259
    :cond_a
    :goto_5
    add-int/lit8 v2, v2, -0x1

    #@e2
    goto :goto_4

    #@e3
    .line 10268
    :cond_b
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@e6
    goto :goto_5

    #@e7
    .line 10273
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_c
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@e9
    if-eqz v8, :cond_e

    #@eb
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@ed
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@f0
    move-result v8

    #@f1
    if-lez v8, :cond_e

    #@f3
    .line 10274
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@f6
    .line 10275
    const-string/jumbo v8, "  Windows force removing:"

    #@f9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@fc
    .line 10276
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@fe
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@101
    move-result v8

    #@102
    add-int/lit8 v2, v8, -0x1

    #@104
    .restart local v2    # "i":I
    :goto_6
    if-ltz v2, :cond_e

    #@106
    .line 10277
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@108
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@10b
    move-result-object v4

    #@10c
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@10e
    .line 10278
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    const-string/jumbo v8, "  Removing #"

    #@111
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@114
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@117
    const/16 v8, 0x20

    #@119
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@11c
    .line 10279
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@11f
    .line 10280
    if-eqz p2, :cond_d

    #@121
    .line 10281
    const-string/jumbo v8, ":"

    #@124
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@127
    .line 10282
    const-string/jumbo v8, "    "

    #@12a
    const/4 v9, 0x1

    #@12b
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@12e
    .line 10276
    :goto_7
    add-int/lit8 v2, v2, -0x1

    #@130
    goto :goto_6

    #@131
    .line 10284
    :cond_d
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@134
    goto :goto_7

    #@135
    .line 10288
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_e
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@137
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@13a
    move-result v8

    #@13b
    if-lez v8, :cond_12

    #@13d
    .line 10289
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@140
    .line 10290
    const-string/jumbo v8, "  Windows waiting to destroy their surface:"

    #@143
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@146
    .line 10291
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@148
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@14b
    move-result v8

    #@14c
    add-int/lit8 v2, v8, -0x1

    #@14e
    .restart local v2    # "i":I
    :goto_8
    if-ltz v2, :cond_12

    #@150
    .line 10292
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    #@152
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@155
    move-result-object v4

    #@156
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@158
    .line 10293
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_f

    #@15a
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@15d
    move-result v8

    #@15e
    if-eqz v8, :cond_10

    #@160
    .line 10294
    :cond_f
    const-string/jumbo v8, "  Destroy #"

    #@163
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@166
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@169
    const/16 v8, 0x20

    #@16b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@16e
    .line 10295
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@171
    .line 10296
    if-eqz p2, :cond_11

    #@173
    .line 10297
    const-string/jumbo v8, ":"

    #@176
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@179
    .line 10298
    const-string/jumbo v8, "    "

    #@17c
    const/4 v9, 0x1

    #@17d
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@180
    .line 10291
    :cond_10
    :goto_9
    add-int/lit8 v2, v2, -0x1

    #@182
    goto :goto_8

    #@183
    .line 10300
    :cond_11
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@186
    goto :goto_9

    #@187
    .line 10305
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_12
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@189
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@18c
    move-result v8

    #@18d
    if-lez v8, :cond_16

    #@18f
    .line 10306
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@192
    .line 10307
    const-string/jumbo v8, "  Windows losing focus:"

    #@195
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@198
    .line 10308
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@19a
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@19d
    move-result v8

    #@19e
    add-int/lit8 v2, v8, -0x1

    #@1a0
    .restart local v2    # "i":I
    :goto_a
    if-ltz v2, :cond_16

    #@1a2
    .line 10309
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@1a4
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1a7
    move-result-object v4

    #@1a8
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@1aa
    .line 10310
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_13

    #@1ac
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@1af
    move-result v8

    #@1b0
    if-eqz v8, :cond_14

    #@1b2
    .line 10311
    :cond_13
    const-string/jumbo v8, "  Losing #"

    #@1b5
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@1b8
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@1bb
    const/16 v8, 0x20

    #@1bd
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@1c0
    .line 10312
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@1c3
    .line 10313
    if-eqz p2, :cond_15

    #@1c5
    .line 10314
    const-string/jumbo v8, ":"

    #@1c8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@1cb
    .line 10315
    const-string/jumbo v8, "    "

    #@1ce
    const/4 v9, 0x1

    #@1cf
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@1d2
    .line 10308
    :cond_14
    :goto_b
    add-int/lit8 v2, v2, -0x1

    #@1d4
    goto :goto_a

    #@1d5
    .line 10317
    :cond_15
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@1d8
    goto :goto_b

    #@1d9
    .line 10322
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_16
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1db
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@1de
    move-result v8

    #@1df
    if-lez v8, :cond_1a

    #@1e1
    .line 10323
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@1e4
    .line 10324
    const-string/jumbo v8, "  Windows waiting to resize:"

    #@1e7
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@1ea
    .line 10325
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1ec
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@1ef
    move-result v8

    #@1f0
    add-int/lit8 v2, v8, -0x1

    #@1f2
    .restart local v2    # "i":I
    :goto_c
    if-ltz v2, :cond_1a

    #@1f4
    .line 10326
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@1f6
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@1f9
    move-result-object v4

    #@1fa
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@1fc
    .line 10327
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_17

    #@1fe
    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@201
    move-result v8

    #@202
    if-eqz v8, :cond_18

    #@204
    .line 10328
    :cond_17
    const-string/jumbo v8, "  Resizing #"

    #@207
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@20a
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@20d
    const/16 v8, 0x20

    #@20f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@212
    .line 10329
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@215
    .line 10330
    if-eqz p2, :cond_19

    #@217
    .line 10331
    const-string/jumbo v8, ":"

    #@21a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@21d
    .line 10332
    const-string/jumbo v8, "    "

    #@220
    const/4 v9, 0x1

    #@221
    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    #@224
    .line 10325
    :cond_18
    :goto_d
    add-int/lit8 v2, v2, -0x1

    #@226
    goto :goto_c

    #@227
    .line 10334
    :cond_19
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@22a
    goto :goto_d

    #@22b
    .line 10339
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1a
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@22d
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@230
    move-result v8

    #@231
    if-lez v8, :cond_1b

    #@233
    .line 10340
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@236
    .line 10341
    const-string/jumbo v8, "  Clients waiting for these windows to be drawn:"

    #@239
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@23c
    .line 10342
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@23e
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    #@241
    move-result v8

    #@242
    add-int/lit8 v2, v8, -0x1

    #@244
    .restart local v2    # "i":I
    :goto_e
    if-ltz v2, :cond_1b

    #@246
    .line 10343
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    #@248
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@24b
    move-result-object v5

    #@24c
    check-cast v5, Lcom/android/server/wm/WindowState;

    #@24e
    .line 10344
    .local v5, "win":Lcom/android/server/wm/WindowState;
    const-string/jumbo v8, "  Waiting #"

    #@251
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@254
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    #@257
    const/16 v8, 0x20

    #@259
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    #@25c
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@25f
    .line 10342
    add-int/lit8 v2, v2, -0x1

    #@261
    goto :goto_e

    #@262
    .line 10347
    .end local v2    # "i":I
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_1b
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@265
    .line 10348
    const-string/jumbo v8, "  mCurConfiguration="

    #@268
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@26b
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@26d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@270
    .line 10349
    const-string/jumbo v8, "  mHasPermanentDpad="

    #@273
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@276
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    #@278
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@27b
    .line 10350
    const-string/jumbo v8, "  mCurrentFocus="

    #@27e
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@281
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@283
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@286
    .line 10351
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@288
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@28a
    if-eq v8, v9, :cond_1c

    #@28c
    .line 10352
    const-string/jumbo v8, "  mLastFocus="

    #@28f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@292
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    #@294
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@297
    .line 10354
    :cond_1c
    const-string/jumbo v8, "  mFocusedApp="

    #@29a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@29d
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@29f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@2a2
    .line 10355
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@2a4
    if-eqz v8, :cond_1d

    #@2a6
    .line 10356
    const-string/jumbo v8, "  mInputMethodTarget="

    #@2a9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2ac
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@2ae
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@2b1
    .line 10358
    :cond_1d
    const-string/jumbo v8, "  mInTouchMode="

    #@2b4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2b7
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@2b9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@2bc
    .line 10359
    const-string/jumbo v8, " mLayoutSeq="

    #@2bf
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2c2
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@2c4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@2c7
    .line 10360
    const-string/jumbo v8, "  mLastDisplayFreezeDuration="

    #@2ca
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2cd
    .line 10361
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@2cf
    int-to-long v8, v8

    #@2d0
    invoke-static {v8, v9, p1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    #@2d3
    .line 10362
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@2d5
    if-eqz v8, :cond_1e

    #@2d7
    .line 10363
    const-string/jumbo v8, " due to "

    #@2da
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2dd
    .line 10364
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@2df
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@2e2
    .line 10366
    :cond_1e
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@2e5
    .line 10367
    const-string/jumbo v8, "  mLastWakeLockHoldingWindow="

    #@2e8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2eb
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    #@2ed
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@2f0
    .line 10368
    const-string/jumbo v8, " mLastWakeLockObscuringWindow="

    #@2f3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@2f6
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    #@2f8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    #@2fb
    .line 10369
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@2fe
    .line 10371
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@300
    const-string/jumbo v9, "  "

    #@303
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/InputMonitor;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@306
    .line 10373
    if-eqz p2, :cond_24

    #@308
    .line 10374
    const-string/jumbo v8, "  mSystemDecorLayer="

    #@30b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@30e
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    #@310
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@313
    .line 10375
    const-string/jumbo v8, " mScreenRect="

    #@316
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@319
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    #@31b
    invoke-virtual {v8}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    #@31e
    move-result-object v8

    #@31f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@322
    .line 10376
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@324
    if-eqz v8, :cond_1f

    #@326
    .line 10377
    const-string/jumbo v8, "  mLastStatusBarVisibility=0x"

    #@329
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@32c
    .line 10378
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@32e
    invoke-static {v8}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@331
    move-result-object v8

    #@332
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@335
    .line 10380
    :cond_1f
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@337
    if-eqz v8, :cond_20

    #@339
    .line 10381
    const-string/jumbo v8, "  mInputMethodWindow="

    #@33c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@33f
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@341
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    #@344
    .line 10383
    :cond_20
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@346
    const-string/jumbo v9, "  "

    #@349
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WindowSurfacePlacer;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@34c
    .line 10384
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@34e
    const-string/jumbo v9, "  "

    #@351
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WallpaperController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@354
    .line 10385
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@356
    const-string/jumbo v9, "  "

    #@359
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WindowLayersController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@35c
    .line 10386
    const-string/jumbo v8, "  mSystemBooted="

    #@35f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@362
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@364
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@367
    .line 10387
    const-string/jumbo v8, " mDisplayEnabled="

    #@36a
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@36d
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@36f
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@372
    .line 10388
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    #@375
    move-result v8

    #@376
    if-eqz v8, :cond_23

    #@378
    .line 10389
    const-string/jumbo v8, "  layoutNeeded on displays="

    #@37b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@37e
    .line 10390
    const/4 v1, 0x0

    #@37f
    :goto_f
    if-ge v1, v3, :cond_22

    #@381
    .line 10391
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@383
    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@386
    move-result-object v0

    #@387
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@389
    .line 10392
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v8, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@38b
    if-eqz v8, :cond_21

    #@38d
    .line 10393
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@390
    move-result v8

    #@391
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@394
    .line 10390
    :cond_21
    add-int/lit8 v1, v1, 0x1

    #@396
    goto :goto_f

    #@397
    .line 10396
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_22
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    #@39a
    .line 10398
    :cond_23
    const-string/jumbo v8, "  mTransactionSequence="

    #@39d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3a0
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    #@3a2
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@3a5
    .line 10399
    const-string/jumbo v8, "  mDisplayFrozen="

    #@3a8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3ab
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@3ad
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@3b0
    .line 10400
    const-string/jumbo v8, " windows="

    #@3b3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3b6
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@3b8
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3bb
    .line 10401
    const-string/jumbo v8, " client="

    #@3be
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3c1
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@3c3
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@3c6
    .line 10402
    const-string/jumbo v8, " apps="

    #@3c9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3cc
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@3ce
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3d1
    .line 10403
    const-string/jumbo v8, " waitingForConfig="

    #@3d4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3d7
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@3d9
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@3dc
    .line 10404
    const-string/jumbo v8, "  mRotation="

    #@3df
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3e2
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@3e4
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3e7
    .line 10405
    const-string/jumbo v8, " mAltOrientation="

    #@3ea
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3ed
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@3ef
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@3f2
    .line 10406
    const-string/jumbo v8, "  mLastWindowForcedOrientation="

    #@3f5
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@3f8
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@3fa
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    #@3fd
    .line 10407
    const-string/jumbo v8, " mForcedAppOrientation="

    #@400
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@403
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@405
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@408
    .line 10408
    const-string/jumbo v8, "  mDeferredRotationPauseCount="

    #@40b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@40e
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@410
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    #@413
    .line 10409
    const-string/jumbo v8, "  Animation settings: disabled="

    #@416
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@419
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@41b
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    #@41e
    .line 10410
    const-string/jumbo v8, " window="

    #@421
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@424
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@426
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    #@429
    .line 10411
    const-string/jumbo v8, " transition="

    #@42c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@42f
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@431
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    #@434
    .line 10412
    const-string/jumbo v8, " animator="

    #@437
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@43a
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@43c
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    #@43f
    .line 10413
    const-string/jumbo v8, " mSkipAppTransitionAnimation="

    #@442
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    #@445
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@447
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    #@44a
    .line 10414
    const-string/jumbo v8, "  mLayoutToAnim:"

    #@44d
    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@450
    .line 10415
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@452
    const-string/jumbo v9, "    "

    #@455
    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/AppTransition;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    #@458
    .line 10233
    :cond_24
    return-void
.end method

.method public enableScreenAfterBoot()V
    .locals 5

    #@0
    .prologue
    .line 5730
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5739
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    monitor-exit v1

    #@8
    .line 5740
    return-void

    #@9
    .line 5742
    :cond_0
    const/4 v0, 0x1

    #@a
    :try_start_1
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@c
    .line 5743
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hideBootMessagesLocked()V

    #@f
    .line 5746
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@11
    const-wide/16 v2, 0x7530

    #@13
    const/16 v4, 0x17

    #@15
    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@18
    monitor-exit v1

    #@19
    .line 5749
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1b
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemBooted()V

    #@1e
    .line 5751
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@21
    .line 5729
    return-void

    #@22
    .line 5730
    :catchall_0
    move-exception v0

    #@23
    monitor-exit v1

    #@24
    throw v0
.end method

.method public enableScreenIfNeeded()V
    .locals 2

    #@0
    .prologue
    .line 5756
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5757
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->enableScreenIfNeededLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 5755
    return-void

    #@8
    .line 5756
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method enableScreenIfNeededLocked()V
    .locals 2

    #@0
    .prologue
    .line 5770
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 5771
    return-void

    #@5
    .line 5773
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@7
    if-nez v0, :cond_1

    #@9
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@b
    if-eqz v0, :cond_2

    #@d
    .line 5776
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@f
    const/16 v1, 0x10

    #@11
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@14
    .line 5761
    return-void

    #@15
    .line 5774
    :cond_2
    return-void
.end method

.method public endProlongedAnimations()V
    .locals 5

    #@0
    .prologue
    .line 4015
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 4016
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@5
    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@8
    move-result-object v3

    #@9
    invoke-interface {v3}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@c
    move-result-object v2

    #@d
    .local v2, "win$iterator":Ljava/util/Iterator;
    :cond_0
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    #@10
    move-result v3

    #@11
    if-eqz v3, :cond_1

    #@13
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@16
    move-result-object v1

    #@17
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@19
    .line 4017
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v0, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1b
    .line 4018
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@1d
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@1f
    if-eqz v3, :cond_0

    #@21
    .line 4019
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@23
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowAnimator;->endProlongedAnimation()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@26
    goto :goto_0

    #@27
    .line 4015
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "win$iterator":Ljava/util/Iterator;
    :catchall_0
    move-exception v3

    #@28
    monitor-exit v4

    #@29
    throw v3

    #@2a
    .line 4022
    .restart local v2    # "win$iterator":Ljava/util/Iterator;
    :cond_1
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2c
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->notifyProlongedAnimationsEnded()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v4

    #@30
    .line 4014
    return-void
.end method

.method public executeAppTransition()V
    .locals 4

    #@0
    .prologue
    .line 4028
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4029
    const-string/jumbo v3, "executeAppTransition()"

    #@6
    .line 4028
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 4030
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 4033
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 4036
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1a
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@1d
    move-result v2

    #@1e
    if-eqz v2, :cond_1

    #@20
    .line 4037
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@22
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->setReady()V

    #@25
    .line 4038
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@28
    move-result-wide v0

    #@29
    .line 4040
    .local v0, "origId":J
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@2b
    invoke-virtual {v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2e
    .line 4042
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@31
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@32
    .line 4027
    return-void

    #@33
    .line 4041
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@34
    .line 4042
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@37
    .line 4041
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@38
    .line 4033
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@39
    monitor-exit v3

    #@3a
    throw v2
.end method

.method public exitKeyguardSecurely(Landroid/view/IOnKeyguardExitResult;)V
    .locals 2
    .param p1, "callback"    # Landroid/view/IOnKeyguardExitResult;

    #@0
    .prologue
    .line 5389
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5391
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5394
    :cond_0
    if-nez p1, :cond_1

    #@16
    .line 5395
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v1, "callback == null"

    #@1b
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v0

    #@1f
    .line 5398
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@21
    new-instance v1, Lcom/android/server/wm/WindowManagerService$7;

    #@23
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$7;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IOnKeyguardExitResult;)V

    #@26
    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->exitKeyguardSecurely(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V

    #@29
    .line 5388
    return-void
.end method

.method findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 3310
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@3
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@6
    move-result-object v0

    #@7
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@9
    .line 3311
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-nez v0, :cond_0

    #@b
    .line 3312
    return-object v2

    #@c
    .line 3314
    :cond_0
    iget-object v1, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@e
    return-object v1
.end method

.method findDesiredInputMethodWindowIndexLocked(Z)I
    .locals 15
    .param p1, "willMove"    # Z

    #@0
    .prologue
    .line 1474
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@3
    move-result-object v12

    #@4
    .line 1475
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    const/4 v9, 0x0

    #@5
    .line 1477
    .local v9, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    #@8
    move-result v13

    #@9
    add-int/lit8 v6, v13, -0x1

    #@b
    .local v6, "i":I
    :goto_0
    if-ltz v6, :cond_0

    #@d
    .line 1478
    invoke-virtual {v12, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@10
    move-result-object v11

    #@11
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@13
    .line 1482
    .local v11, "win":Lcom/android/server/wm/WindowState;
    invoke-static {v11}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    #@16
    move-result v13

    #@17
    if-eqz v13, :cond_2

    #@19
    .line 1483
    move-object v9, v11

    #@1a
    .line 1491
    .local v9, "w":Lcom/android/server/wm/WindowState;
    if-nez p1, :cond_0

    #@1c
    .line 1492
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1e
    iget v13, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    #@20
    const/4 v14, 0x3

    #@21
    if-ne v13, v14, :cond_0

    #@23
    .line 1493
    if-lez v6, :cond_0

    #@25
    .line 1494
    add-int/lit8 v13, v6, -0x1

    #@27
    invoke-virtual {v12, v13}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2a
    move-result-object v10

    #@2b
    check-cast v10, Lcom/android/server/wm/WindowState;

    #@2d
    .line 1495
    .local v10, "wb":Lcom/android/server/wm/WindowState;
    iget-object v13, v10, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2f
    iget-object v14, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@31
    if-ne v13, v14, :cond_0

    #@33
    invoke-static {v10}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    #@36
    move-result v13

    #@37
    if-eqz v13, :cond_0

    #@39
    .line 1496
    add-int/lit8 v6, v6, -0x1

    #@3b
    .line 1497
    move-object v9, v10

    #@3c
    .line 1514
    .end local v9    # "w":Lcom/android/server/wm/WindowState;
    .end local v10    # "wb":Lcom/android/server/wm/WindowState;
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@3e
    .line 1515
    .local v0, "curTarget":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_3

    #@40
    .line 1516
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@43
    move-result v13

    #@44
    .line 1515
    if-eqz v13, :cond_3

    #@46
    .line 1517
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isClosing()Z

    #@49
    move-result v13

    #@4a
    .line 1515
    if-eqz v13, :cond_3

    #@4c
    .line 1518
    if-eqz v9, :cond_1

    #@4e
    iget-object v13, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@50
    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@52
    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@54
    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@56
    if-le v13, v14, :cond_3

    #@58
    .line 1520
    :cond_1
    invoke-virtual {v12, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@5b
    move-result v13

    #@5c
    add-int/lit8 v13, v13, 0x1

    #@5e
    return v13

    #@5f
    .line 1477
    .end local v0    # "curTarget":Lcom/android/server/wm/WindowState;
    .local v9, "w":Lcom/android/server/wm/WindowState;
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v6, v6, -0x1

    #@61
    goto :goto_0

    #@62
    .line 1526
    .end local v9    # "w":Lcom/android/server/wm/WindowState;
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    .restart local v0    # "curTarget":Lcom/android/server/wm/WindowState;
    :cond_3
    if-eqz p1, :cond_b

    #@64
    if-eqz v9, :cond_b

    #@66
    .line 1527
    if-nez v0, :cond_6

    #@68
    const/4 v8, 0x0

    #@69
    .line 1528
    .local v8, "token":Lcom/android/server/wm/AppWindowToken;
    :goto_1
    if-eqz v8, :cond_b

    #@6b
    .line 1534
    const/4 v5, 0x0

    #@6c
    .line 1535
    .local v5, "highestTarget":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    #@6d
    .line 1536
    .local v4, "highestPos":I
    iget-object v13, v8, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6f
    iget-boolean v13, v13, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    #@71
    if-nez v13, :cond_4

    #@73
    iget-object v13, v8, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@75
    iget-object v13, v13, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@77
    if-eqz v13, :cond_5

    #@79
    .line 1537
    :cond_4
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7c
    move-result-object v1

    #@7d
    .line 1538
    .local v1, "curWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@80
    move-result v7

    #@81
    .line 1539
    .end local v5    # "highestTarget":Lcom/android/server/wm/WindowState;
    .local v7, "pos":I
    :goto_2
    if-ltz v7, :cond_5

    #@83
    .line 1540
    invoke-virtual {v1, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@86
    move-result-object v11

    #@87
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@89
    .line 1541
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@8b
    if-eq v13, v8, :cond_7

    #@8d
    .line 1555
    .end local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v7    # "pos":I
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    if-eqz v5, :cond_b

    #@8f
    .line 1561
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@91
    invoke-virtual {v13}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@94
    move-result v13

    #@95
    if-eqz v13, :cond_a

    #@97
    .line 1564
    const/4 v13, 0x1

    #@98
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@9a
    .line 1565
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@9c
    .line 1566
    add-int/lit8 v13, v4, 0x1

    #@9e
    return v13

    #@9f
    .line 1527
    .end local v4    # "highestPos":I
    .end local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_6
    iget-object v8, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@a1
    goto :goto_1

    #@a2
    .line 1544
    .restart local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .restart local v4    # "highestPos":I
    .restart local v7    # "pos":I
    .restart local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_7
    iget-boolean v13, v11, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@a4
    if-nez v13, :cond_9

    #@a6
    .line 1545
    if-eqz v5, :cond_8

    #@a8
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@aa
    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@ac
    .line 1546
    iget-object v14, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@ae
    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@b0
    .line 1545
    if-le v13, v14, :cond_9

    #@b2
    .line 1547
    :cond_8
    move-object v5, v11

    #@b3
    .line 1548
    .local v5, "highestTarget":Lcom/android/server/wm/WindowState;
    move v4, v7

    #@b4
    .line 1551
    .end local v5    # "highestTarget":Lcom/android/server/wm/WindowState;
    :cond_9
    add-int/lit8 v7, v7, -0x1

    #@b6
    goto :goto_2

    #@b7
    .line 1567
    .end local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v7    # "pos":I
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_a
    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@b9
    invoke-virtual {v13}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    #@bc
    move-result v13

    #@bd
    if-eqz v13, :cond_b

    #@bf
    .line 1568
    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@c1
    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@c3
    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@c5
    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    #@c7
    if-le v13, v14, :cond_b

    #@c9
    .line 1573
    const/4 v13, 0x1

    #@ca
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@cc
    .line 1574
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@ce
    .line 1575
    add-int/lit8 v13, v4, 0x1

    #@d0
    return v13

    #@d1
    .line 1582
    .end local v4    # "highestPos":I
    .end local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_b
    if-eqz v9, :cond_f

    #@d3
    .line 1583
    if-eqz p1, :cond_c

    #@d5
    .line 1586
    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@d7
    .line 1587
    const/4 v13, 0x0

    #@d8
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    #@da
    .line 1588
    iget-object v13, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@dc
    if-eqz v13, :cond_d

    #@de
    .line 1589
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@e0
    .line 1590
    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@e2
    iget-object v14, v14, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@e4
    iget v14, v14, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    #@e6
    .line 1589
    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    #@e9
    .line 1600
    :cond_c
    :goto_3
    iget-object v13, v9, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    #@eb
    iget-object v13, v13, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@ed
    invoke-virtual {v13}, Lcom/android/server/wm/DockedStackDividerController;->getWindow()Lcom/android/server/wm/WindowState;

    #@f0
    move-result-object v3

    #@f1
    .line 1601
    .local v3, "dockedDivider":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_e

    #@f3
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@f6
    move-result v13

    #@f7
    if-eqz v13, :cond_e

    #@f9
    .line 1602
    invoke-virtual {v12, v3}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    #@fc
    move-result v2

    #@fd
    .line 1603
    .local v2, "dividerIndex":I
    if-lez v2, :cond_e

    #@ff
    if-le v2, v6, :cond_e

    #@101
    .line 1604
    add-int/lit8 v13, v2, 0x1

    #@103
    return v13

    #@104
    .line 1592
    .end local v2    # "dividerIndex":I
    .end local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_d
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@106
    const/4 v14, 0x0

    #@107
    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    #@10a
    goto :goto_3

    #@10b
    .line 1607
    .restart local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_e
    add-int/lit8 v13, v6, 0x1

    #@10d
    return v13

    #@10e
    .line 1609
    .end local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_f
    if-eqz p1, :cond_10

    #@110
    .line 1612
    const/4 v13, 0x0

    #@111
    iput-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@113
    .line 1613
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@115
    const/4 v14, 0x0

    #@116
    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    #@119
    .line 1615
    :cond_10
    const/4 v13, -0x1

    #@11a
    return v13
.end method

.method findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v11, 0x0

    #@1
    .line 9655
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@4
    move-result-object v7

    #@5
    .line 9656
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@8
    move-result v9

    #@9
    add-int/lit8 v0, v9, -0x1

    #@b
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_8

    #@d
    .line 9657
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@10
    move-result-object v6

    #@11
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@13
    .line 9665
    .local v6, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    #@16
    move-result v9

    #@17
    if-nez v9, :cond_1

    #@19
    .line 9656
    :cond_0
    add-int/lit8 v0, v0, -0x1

    #@1b
    goto :goto_0

    #@1c
    .line 9669
    :cond_1
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1e
    .line 9672
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v8, :cond_2

    #@20
    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@22
    if-nez v9, :cond_0

    #@24
    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@26
    if-nez v9, :cond_0

    #@28
    .line 9680
    :cond_2
    if-eqz v8, :cond_4

    #@2a
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@2c
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@2e
    const/4 v10, 0x3

    #@2f
    if-eq v9, v10, :cond_4

    #@31
    .line 9681
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@33
    if-eqz v9, :cond_4

    #@35
    .line 9682
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    #@38
    move-result-object v2

    #@39
    .line 9683
    .local v2, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@3c
    move-result v9

    #@3d
    add-int/lit8 v1, v9, -0x1

    #@3f
    .local v1, "taskNdx":I
    :goto_1
    if-ltz v1, :cond_4

    #@41
    .line 9684
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v9

    #@45
    check-cast v9, Lcom/android/server/wm/Task;

    #@47
    iget-object v5, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@49
    .line 9685
    .local v5, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    #@4c
    move-result v9

    #@4d
    add-int/lit8 v4, v9, -0x1

    #@4f
    .line 9686
    .local v4, "tokenNdx":I
    :goto_2
    if-ltz v4, :cond_3

    #@51
    .line 9687
    invoke-virtual {v5, v4}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@54
    move-result-object v3

    #@55
    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    #@57
    .line 9688
    .local v3, "token":Lcom/android/server/wm/AppWindowToken;
    if-ne v8, v3, :cond_5

    #@59
    .line 9699
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_3
    if-ltz v4, :cond_7

    #@5b
    .line 9708
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_4
    return-object v6

    #@5c
    .line 9691
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@5e
    if-ne v9, v3, :cond_6

    #@60
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->windowsAreFocusable()Z

    #@63
    move-result v9

    #@64
    if-eqz v9, :cond_6

    #@66
    .line 9696
    return-object v11

    #@67
    .line 9686
    :cond_6
    add-int/lit8 v4, v4, -0x1

    #@69
    goto :goto_2

    #@6a
    .line 9683
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_7
    add-int/lit8 v1, v1, -0x1

    #@6c
    goto :goto_1

    #@6d
    .line 9712
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    return-object v11
.end method

.method public finishDrawingWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 3138
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 3140
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 3141
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 3144
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_1

    #@e
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@10
    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->finishDrawingLocked()Z

    #@13
    move-result v3

    #@14
    if-eqz v3, :cond_1

    #@16
    .line 3145
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@18
    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@1a
    const/high16 v5, 0x100000

    #@1c
    and-int/2addr v3, v5

    #@1d
    if-eqz v3, :cond_0

    #@1f
    .line 3146
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@22
    move-result-object v3

    #@23
    iget v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@25
    or-int/lit8 v5, v5, 0x4

    #@27
    iput v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@29
    .line 3149
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@2c
    .line 3150
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@2e
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@31
    :cond_1
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@32
    .line 3154
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@35
    .line 3137
    return-void

    #@36
    .line 3140
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@37
    :try_start_3
    monitor-exit v4

    #@38
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@39
    .line 3153
    :catchall_1
    move-exception v3

    #@3a
    .line 3154
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@3d
    .line 3153
    throw v3
.end method

.method public freezeRotation(I)V
    .locals 6
    .param p1, "rotation"    # I

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    const/4 v4, -0x1

    #@2
    .line 6463
    const-string/jumbo v2, "android.permission.SET_ORIENTATION"

    #@5
    .line 6464
    const-string/jumbo v3, "freezeRotation()"

    #@8
    .line 6463
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v2

    #@c
    if-nez v2, :cond_0

    #@e
    .line 6465
    new-instance v2, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v3, "Requires SET_ORIENTATION permission"

    #@13
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v2

    #@17
    .line 6467
    :cond_0
    if-lt p1, v4, :cond_1

    #@19
    const/4 v2, 0x3

    #@1a
    if-le p1, v2, :cond_2

    #@1c
    .line 6468
    :cond_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    #@1e
    const-string/jumbo v3, "Rotation argument must be -1 or a valid rotation constant."

    #@21
    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@24
    throw v2

    #@25
    .line 6474
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@28
    move-result-wide v0

    #@29
    .line 6476
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2b
    .line 6477
    if-ne p1, v4, :cond_3

    #@2d
    iget p1, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2f
    .line 6476
    .end local p1    # "rotation":I
    :cond_3
    const/4 v3, 0x1

    #@30
    invoke-interface {v2, v3, p1}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@33
    .line 6479
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@36
    .line 6482
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@39
    .line 6462
    return-void

    #@3a
    .line 6478
    :catchall_0
    move-exception v2

    #@3b
    .line 6479
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@3e
    .line 6478
    throw v2
.end method

.method public getAnimationScale(I)F
    .locals 1
    .param p1, "which"    # I

    #@0
    .prologue
    .line 5562
    packed-switch p1, :pswitch_data_0

    #@3
    .line 5567
    const/4 v0, 0x0

    #@4
    return v0

    #@5
    .line 5563
    :pswitch_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@7
    return v0

    #@8
    .line 5564
    :pswitch_1
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@a
    return v0

    #@b
    .line 5565
    :pswitch_2
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@d
    return v0

    #@e
    .line 5562
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public getAnimationScales()[F
    .locals 3

    #@0
    .prologue
    .line 5572
    const/4 v0, 0x3

    #@1
    new-array v0, v0, [F

    #@3
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@5
    const/4 v2, 0x0

    #@6
    aput v1, v0, v2

    #@8
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@a
    const/4 v2, 0x1

    #@b
    aput v1, v0, v2

    #@d
    .line 5573
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@f
    const/4 v2, 0x2

    #@10
    aput v1, v0, v2

    #@12
    .line 5572
    return-object v0
.end method

.method public getAppOrientation(Landroid/view/IApplicationToken;)I
    .locals 3
    .param p1, "token"    # Landroid/view/IApplicationToken;

    #@0
    .prologue
    .line 3835
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 3836
    :try_start_0
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@6
    move-result-object v1

    #@7
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@a
    move-result-object v0

    #@b
    .line 3837
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_0

    #@d
    .line 3838
    const/4 v1, -0x1

    #@e
    monitor-exit v2

    #@f
    return v1

    #@10
    .line 3841
    :cond_0
    :try_start_1
    iget v1, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@12
    monitor-exit v2

    #@13
    return v1

    #@14
    .line 3835
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@15
    monitor-exit v2

    #@16
    throw v1
.end method

.method public getBaseDisplayDensity(I)I
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8915
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8916
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8917
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 8918
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15
    monitor-exit v2

    #@16
    return v1

    #@17
    :cond_0
    monitor-exit v2

    #@18
    .line 8921
    const/4 v1, -0x1

    #@19
    return v1

    #@1a
    .line 8915
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1b
    monitor-exit v2

    #@1c
    throw v1
.end method

.method public getBaseDisplaySize(ILandroid/graphics/Point;)V
    .locals 3
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    #@0
    .prologue
    .line 8748
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8749
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8750
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 8751
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@15
    iput v1, p2, Landroid/graphics/Point;->x:I

    #@17
    .line 8752
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@19
    iput v1, p2, Landroid/graphics/Point;->y:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1b
    :cond_0
    monitor-exit v2

    #@1c
    .line 8747
    return-void

    #@1d
    .line 8748
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1e
    monitor-exit v2

    #@1f
    throw v1
.end method

.method public getBoundsForNewConfiguration(I)Landroid/graphics/Rect;
    .locals 4
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 3771
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v3

    #@3
    .line 3772
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v1

    #@9
    check-cast v1, Lcom/android/server/wm/TaskStack;

    #@b
    .line 3773
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    new-instance v0, Landroid/graphics/Rect;

    #@d
    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    #@10
    .line 3774
    .local v0, "outBounds":Landroid/graphics/Rect;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TaskStack;->getBoundsForNewConfiguration(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@13
    monitor-exit v3

    #@14
    .line 3775
    return-object v0

    #@15
    .line 3771
    .end local v0    # "outBounds":Landroid/graphics/Rect;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v2

    #@16
    monitor-exit v3

    #@17
    throw v2
.end method

.method public getCameraLensCoverState()I
    .locals 6

    #@0
    .prologue
    const/4 v5, -0x1

    #@1
    const/4 v4, 0x0

    #@2
    .line 5623
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@4
    const/16 v2, -0x100

    #@6
    .line 5624
    const/16 v3, 0x9

    #@8
    .line 5623
    invoke-virtual {v1, v5, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    #@b
    move-result v0

    #@c
    .line 5625
    .local v0, "sw":I
    if-lez v0, :cond_0

    #@e
    .line 5627
    const/4 v1, 0x1

    #@f
    return v1

    #@10
    .line 5628
    :cond_0
    if-nez v0, :cond_1

    #@12
    .line 5630
    return v4

    #@13
    .line 5633
    :cond_1
    return v5
.end method

.method public getCurrentAnimatorScale()F
    .locals 2

    #@0
    .prologue
    .line 5578
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5579
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    const/4 v0, 0x0

    #@8
    :goto_0
    monitor-exit v1

    #@9
    return v0

    #@a
    :cond_0
    :try_start_1
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    goto :goto_0

    #@d
    .line 5578
    :catchall_0
    move-exception v0

    #@e
    monitor-exit v1

    #@f
    throw v0
.end method

.method public getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;
    .locals 1

    #@0
    .prologue
    .line 10733
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@4
    move-result-object v0

    #@5
    return-object v0
.end method

.method public getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;
    .locals 1

    #@0
    .prologue
    .line 10741
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;
    .locals 1

    #@0
    .prologue
    .line 10737
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 10721
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v1

    #@6
    check-cast v1, Lcom/android/server/wm/DisplayContent;

    #@8
    .line 10722
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_0

    #@a
    .line 10723
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@c
    invoke-virtual {v2, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    #@f
    move-result-object v0

    #@10
    .line 10724
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_0

    #@12
    .line 10725
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;

    #@15
    move-result-object v1

    #@16
    .line 10728
    .end local v0    # "display":Landroid/view/Display;
    :cond_0
    return-object v1
.end method

.method public getDockedDividerInsetsLw()I
    .locals 1

    #@0
    .prologue
    .line 10148
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@7
    move-result-object v0

    #@8
    invoke-virtual {v0}, Lcom/android/server/wm/DockedStackDividerController;->getContentInsets()I

    #@b
    move-result v0

    #@c
    return v0
.end method

.method public getDockedStackSide()I
    .locals 3

    #@0
    .prologue
    .line 10903
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10904
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v1

    #@7
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDockedStackVisibleForUserLocked()Lcom/android/server/wm/TaskStack;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@a
    move-result-object v0

    #@b
    .line 10906
    .local v0, "dockedStack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@d
    const/4 v1, -0x1

    #@e
    :goto_0
    monitor-exit v2

    #@f
    return v1

    #@10
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDockSide()I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@13
    move-result v1

    #@14
    goto :goto_0

    #@15
    .line 10903
    .end local v0    # "dockedStack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@16
    monitor-exit v2

    #@17
    throw v1
.end method

.method getDragLayerLocked()I
    .locals 2

    #@0
    .prologue
    .line 555
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    const/16 v1, 0x7e0

    #@4
    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@7
    move-result v0

    #@8
    mul-int/lit16 v0, v0, 0x2710

    #@a
    add-int/lit16 v0, v0, 0x3e8

    #@c
    return v0
.end method

.method getImeFocusStackLocked()Lcom/android/server/wm/TaskStack;
    .locals 2

    #@0
    .prologue
    const/4 v0, 0x0

    #@1
    .line 7793
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@3
    if-eqz v1, :cond_0

    #@5
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@7
    iget-object v1, v1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 7794
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@d
    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@f
    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@11
    .line 7793
    :cond_0
    return-object v0
.end method

.method public getInitialDisplayDensity(I)I
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 8904
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8905
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8906
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 8907
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15
    monitor-exit v2

    #@16
    return v1

    #@17
    :cond_0
    monitor-exit v2

    #@18
    .line 8910
    const/4 v1, -0x1

    #@19
    return v1

    #@1a
    .line 8904
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1b
    monitor-exit v2

    #@1c
    throw v1
.end method

.method public getInitialDisplaySize(ILandroid/graphics/Point;)V
    .locals 3
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    #@0
    .prologue
    .line 8737
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 8738
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    .line 8739
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@9
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@c
    move-result v1

    #@d
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    #@10
    move-result v1

    #@11
    if-eqz v1, :cond_0

    #@13
    .line 8740
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@15
    iput v1, p2, Landroid/graphics/Point;->x:I

    #@17
    .line 8741
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@19
    iput v1, p2, Landroid/graphics/Point;->y:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1b
    :cond_0
    monitor-exit v2

    #@1c
    .line 8736
    return-void

    #@1d
    .line 8737
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@1e
    monitor-exit v2

    #@1f
    throw v1
.end method

.method public getInputMonitor()Lcom/android/server/wm/InputMonitor;
    .locals 1

    #@0
    .prologue
    .line 1053
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@2
    return-object v0
.end method

.method public getLidState()I
    .locals 5

    #@0
    .prologue
    const/4 v4, -0x1

    #@1
    const/4 v3, 0x0

    #@2
    .line 5600
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@4
    const/16 v2, -0x100

    #@6
    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    #@9
    move-result v0

    #@a
    .line 5602
    .local v0, "sw":I
    if-lez v0, :cond_0

    #@c
    .line 5604
    return v3

    #@d
    .line 5605
    :cond_0
    if-nez v0, :cond_1

    #@f
    .line 5607
    const/4 v1, 0x1

    #@10
    return v1

    #@11
    .line 5610
    :cond_1
    return v4
.end method

.method public getOrientationLocked()I
    .locals 9

    #@0
    .prologue
    const/4 v8, 0x3

    #@1
    const/4 v7, -0x1

    #@2
    const/4 v0, 0x0

    #@3
    .line 3503
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@5
    if-eqz v6, :cond_0

    #@7
    .line 3504
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@9
    if-eq v6, v7, :cond_9

    #@b
    .line 3512
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@d
    return v6

    #@e
    .line 3516
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@11
    move-result-object v5

    #@12
    .line 3517
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@15
    move-result v6

    #@16
    add-int/lit8 v1, v6, -0x1

    #@18
    .local v1, "pos":I
    :goto_0
    if-ltz v1, :cond_1

    #@1a
    .line 3518
    invoke-virtual {v5, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1d
    move-result-object v3

    #@1e
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@20
    .line 3519
    .local v3, "win":Lcom/android/server/wm/WindowState;
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@22
    if-eqz v6, :cond_3

    #@24
    .line 3538
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    iput v7, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@26
    .line 3540
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@28
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    #@2b
    move-result v6

    #@2c
    if-eqz v6, :cond_9

    #@2e
    .line 3544
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@30
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->getWinShowWhenLockedLw()Landroid/view/WindowManagerPolicy$WindowState;

    #@33
    move-result-object v4

    #@34
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@36
    .line 3545
    .local v4, "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_7

    #@38
    .line 3547
    .local v0, "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :goto_1
    if-eqz v0, :cond_8

    #@3a
    .line 3548
    iget v2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    #@3c
    .line 3549
    .local v2, "req":I
    if-ne v2, v8, :cond_2

    #@3e
    .line 3550
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@40
    .line 3554
    :cond_2
    return v2

    #@41
    .line 3524
    .end local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "req":I
    .end local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .restart local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    #@44
    move-result v6

    #@45
    if-eqz v6, :cond_4

    #@47
    iget-boolean v6, v3, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    #@49
    if-eqz v6, :cond_4

    #@4b
    .line 3527
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4d
    iget v2, v6, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    #@4f
    .line 3528
    .restart local v2    # "req":I
    if-eq v2, v7, :cond_4

    #@51
    if-ne v2, v8, :cond_5

    #@53
    .line 3517
    .end local v2    # "req":I
    :cond_4
    add-int/lit8 v1, v1, -0x1

    #@55
    goto :goto_0

    #@56
    .line 3533
    .restart local v2    # "req":I
    :cond_5
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@58
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5a
    invoke-interface {v6, v7}, Landroid/view/WindowManagerPolicy;->isKeyguardHostWindow(Landroid/view/WindowManager$LayoutParams;)Z

    #@5d
    move-result v6

    #@5e
    if-eqz v6, :cond_6

    #@60
    .line 3534
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@62
    .line 3536
    :cond_6
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    #@64
    return v2

    #@65
    .line 3546
    .end local v2    # "req":I
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    .restart local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    :cond_7
    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@67
    goto :goto_1

    #@68
    .line 3558
    .restart local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    #@6a
    return v6

    #@6b
    .line 3563
    .end local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "pos":I
    .end local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_9
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getAppSpecifiedOrientation()I

    #@6e
    move-result v6

    #@6f
    return v6
.end method

.method public getPendingAppTransition()I
    .locals 1

    #@0
    .prologue
    .line 3914
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@2
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public getPreferredOptionsPanelGravity()I
    .locals 8

    #@0
    .prologue
    const v7, 0x800053

    #@3
    const/16 v6, 0x55

    #@5
    const/16 v5, 0x51

    #@7
    .line 6801
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@9
    monitor-enter v3

    #@a
    .line 6802
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getRotation()I

    #@d
    move-result v1

    #@e
    .line 6805
    .local v1, "rotation":I
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@11
    move-result-object v0

    #@12
    .line 6806
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v2, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@14
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    if-ge v2, v4, :cond_0

    #@18
    .line 6808
    packed-switch v1, :pswitch_data_0

    #@1b
    :pswitch_0
    monitor-exit v3

    #@1c
    .line 6811
    return v5

    #@1d
    :pswitch_1
    monitor-exit v3

    #@1e
    .line 6813
    return v6

    #@1f
    :pswitch_2
    monitor-exit v3

    #@20
    .line 6815
    return v5

    #@21
    :pswitch_3
    monitor-exit v3

    #@22
    .line 6817
    return v7

    #@23
    .line 6822
    :cond_0
    packed-switch v1, :pswitch_data_1

    #@26
    :pswitch_4
    monitor-exit v3

    #@27
    .line 6825
    return v6

    #@28
    :pswitch_5
    monitor-exit v3

    #@29
    .line 6827
    return v5

    #@2a
    :pswitch_6
    monitor-exit v3

    #@2b
    .line 6829
    return v7

    #@2c
    :pswitch_7
    monitor-exit v3

    #@2d
    .line 6831
    return v5

    #@2e
    .line 6801
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "rotation":I
    :catchall_0
    move-exception v2

    #@2f
    monitor-exit v3

    #@30
    throw v2

    #@31
    .line 6808
    nop

    #@32
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch

    #@3e
    .line 6822
    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_7
    .end packed-switch
.end method

.method public getRotation()I
    .locals 1

    #@0
    .prologue
    .line 6723
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2
    return v0
.end method

.method public getSmallestWidthForTaskBounds(Landroid/graphics/Rect;)I
    .locals 2
    .param p1, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11057
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 11058
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@a
    move-result-object v0

    #@b
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->getSmallestWidthDpForBounds(Landroid/graphics/Rect;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@e
    move-result v0

    #@f
    monitor-exit v1

    #@10
    return v0

    #@11
    .line 11057
    :catchall_0
    move-exception v0

    #@12
    monitor-exit v1

    #@13
    throw v0
.end method

.method public getStableInsets(Landroid/graphics/Rect;)V
    .locals 2
    .param p1, "outInsets"    # Landroid/graphics/Rect;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    #@0
    .prologue
    .line 10997
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 10998
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getStableInsetsLocked(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 10996
    return-void

    #@8
    .line 10997
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method getStableInsetsLocked(Landroid/graphics/Rect;)V
    .locals 5
    .param p1, "outInsets"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11003
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@3
    move-result-object v0

    #@4
    .line 11004
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@6
    iget v2, v0, Landroid/view/DisplayInfo;->rotation:I

    #@8
    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@a
    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@c
    invoke-interface {v1, v2, v3, v4, p1}, Landroid/view/WindowManagerPolicy;->getStableInsetsLw(IIILandroid/graphics/Rect;)V

    #@f
    .line 11002
    return-void
.end method

.method public getStackBounds(ILandroid/graphics/Rect;)V
    .locals 3
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5133
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5134
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5135
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_0

    #@d
    .line 5136
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 5137
    return-void

    #@12
    .line 5139
    :cond_0
    :try_start_1
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v2

    #@16
    .line 5132
    return-void

    #@17
    .line 5133
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@18
    monitor-exit v2

    #@19
    throw v1
.end method

.method public getStackDockedModeBounds(ILandroid/graphics/Rect;Z)V
    .locals 3
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .param p3, "ignoreVisibility"    # Z

    #@0
    .prologue
    .line 5121
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5122
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5123
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_0

    #@d
    .line 5124
    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/TaskStack;->getStackDockedModeBoundsLocked(Landroid/graphics/Rect;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 5125
    return-void

    #@12
    .line 5127
    :cond_0
    :try_start_1
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v2

    #@16
    .line 5120
    return-void

    #@17
    .line 5121
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@18
    monitor-exit v2

    #@19
    throw v1
.end method

.method public getTaskBounds(ILandroid/graphics/Rect;)V
    .locals 3
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5278
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5279
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5280
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    #@d
    .line 5281
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 5282
    return-void

    #@12
    .line 5284
    :cond_0
    :try_start_1
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v2

    #@16
    .line 5277
    return-void

    #@17
    .line 5278
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@18
    monitor-exit v2

    #@19
    throw v1
.end method

.method public getTransitionAnimationScaleLocked()F
    .locals 1

    #@0
    .prologue
    .line 5557
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    const/4 v0, 0x0

    #@5
    :goto_0
    return v0

    #@6
    :cond_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@8
    goto :goto_0
.end method

.method public getWindowAnimationScaleLocked()F
    .locals 1

    #@0
    .prologue
    .line 5553
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    const/4 v0, 0x0

    #@5
    :goto_0
    return v0

    #@6
    :cond_0
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@8
    goto :goto_0
.end method

.method public getWindowContentFrameStats(Landroid/os/IBinder;)Landroid/view/WindowContentFrameStats;
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 10104
    const-string/jumbo v3, "android.permission.FRAME_STATS"

    #@4
    .line 10105
    const-string/jumbo v4, "getWindowContentFrameStats()"

    #@7
    .line 10104
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v3

    #@b
    if-nez v3, :cond_0

    #@d
    .line 10106
    new-instance v3, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v4, "Requires FRAME_STATS permission"

    #@12
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v3

    #@16
    .line 10108
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@18
    monitor-enter v4

    #@19
    .line 10109
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1e
    move-result-object v2

    #@1f
    check-cast v2, Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@21
    .line 10110
    .local v2, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_1

    #@23
    monitor-exit v4

    #@24
    .line 10111
    return-object v5

    #@25
    .line 10113
    :cond_1
    :try_start_1
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@27
    iget-object v1, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    .line 10114
    .local v1, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v1, :cond_2

    #@2b
    monitor-exit v4

    #@2c
    .line 10115
    return-object v5

    #@2d
    .line 10117
    :cond_2
    :try_start_2
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@2f
    if-nez v3, :cond_3

    #@31
    .line 10118
    new-instance v3, Landroid/view/WindowContentFrameStats;

    #@33
    invoke-direct {v3}, Landroid/view/WindowContentFrameStats;-><init>()V

    #@36
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@38
    .line 10120
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    #@3a
    .line 10121
    .local v0, "stats":Landroid/view/WindowContentFrameStats;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowSurfaceController;->getWindowContentFrameStats(Landroid/view/WindowContentFrameStats;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@3d
    move-result v3

    #@3e
    if-nez v3, :cond_4

    #@40
    monitor-exit v4

    #@41
    .line 10122
    return-object v5

    #@42
    :cond_4
    monitor-exit v4

    #@43
    .line 10124
    return-object v0

    #@44
    .line 10108
    .end local v0    # "stats":Landroid/view/WindowContentFrameStats;
    .end local v1    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    .end local v2    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@45
    monitor-exit v4

    #@46
    throw v3
.end method

.method public getWindowDisplayFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .locals 3
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outDisplayFrame"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 2650
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2651
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    .line 2652
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_0

    #@a
    .line 2653
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@d
    monitor-exit v2

    #@e
    .line 2654
    return-void

    #@f
    .line 2656
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    #@11
    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@14
    monitor-exit v2

    #@15
    .line 2649
    return-void

    #@16
    .line 2650
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@17
    monitor-exit v2

    #@18
    throw v1
.end method

.method public getWindowId(Landroid/os/IBinder;)Landroid/view/IWindowId;
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2673
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 2674
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@9
    move-result-object v0

    #@a
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@c
    .line 2675
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@e
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mWindowId:Landroid/view/IWindowId;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    return-object v1

    #@12
    .line 2673
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method public getWindowListLocked(I)Lcom/android/server/wm/WindowList;
    .locals 2
    .param p1, "displayId"    # I

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 10759
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@4
    move-result-object v0

    #@5
    .line 10760
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@a
    move-result-object v1

    #@b
    :cond_0
    return-object v1
.end method

.method public getWindowListLocked(Landroid/view/Display;)Lcom/android/server/wm/WindowList;
    .locals 1
    .param p1, "display"    # Landroid/view/Display;

    #@0
    .prologue
    .line 10750
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    #@3
    move-result v0

    #@4
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getWindowListLocked(I)Lcom/android/server/wm/WindowList;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method

.method public getWindowManagerLock()Ljava/lang/Object;
    .locals 1

    #@0
    .prologue
    .line 10815
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    return-object v0
.end method

.method handleAnimatingStoppedAndTransitionLocked()I
    .locals 12

    #@0
    .prologue
    const/4 v11, 0x1

    #@1
    const/4 v10, 0x0

    #@2
    .line 9246
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@4
    invoke-virtual {v9}, Lcom/android/server/wm/AppTransition;->setIdle()V

    #@7
    .line 9248
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@9
    invoke-interface {v9}, Ljava/util/List;->size()I

    #@c
    move-result v9

    #@d
    add-int/lit8 v1, v9, -0x1

    #@f
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    #@11
    .line 9249
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@13
    invoke-interface {v9, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@16
    move-result-object v6

    #@17
    check-cast v6, Landroid/os/IBinder;

    #@19
    .line 9250
    .local v6, "token":Landroid/os/IBinder;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1b
    invoke-virtual {v9, v6}, Lcom/android/server/wm/AppTransition;->notifyAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    #@1e
    .line 9248
    add-int/lit8 v1, v1, -0x1

    #@20
    goto :goto_0

    #@21
    .line 9252
    .end local v6    # "token":Landroid/os/IBinder;
    :cond_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    #@23
    invoke-interface {v9}, Ljava/util/List;->clear()V

    #@26
    .line 9254
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@28
    invoke-virtual {v9}, Lcom/android/server/wm/WallpaperController;->hideDeferredWallpapersIfNeeded()V

    #@2b
    .line 9257
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2e
    move-result-object v9

    #@2f
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    #@32
    move-result-object v3

    #@33
    .line 9258
    .local v3, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    #@36
    move-result v9

    #@37
    add-int/lit8 v2, v9, -0x1

    #@39
    .local v2, "stackNdx":I
    :goto_1
    if-ltz v2, :cond_3

    #@3b
    .line 9259
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@3e
    move-result-object v9

    #@3f
    check-cast v9, Lcom/android/server/wm/TaskStack;

    #@41
    invoke-virtual {v9}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@44
    move-result-object v5

    #@45
    .line 9260
    .local v5, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@48
    move-result v9

    #@49
    add-int/lit8 v4, v9, -0x1

    #@4b
    .local v4, "taskNdx":I
    :goto_2
    if-ltz v4, :cond_2

    #@4d
    .line 9261
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@50
    move-result-object v9

    #@51
    check-cast v9, Lcom/android/server/wm/Task;

    #@53
    iget-object v8, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@55
    .line 9262
    .local v8, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v8}, Lcom/android/server/wm/AppTokenList;->size()I

    #@58
    move-result v9

    #@59
    add-int/lit8 v7, v9, -0x1

    #@5b
    .local v7, "tokenNdx":I
    :goto_3
    if-ltz v7, :cond_1

    #@5d
    .line 9263
    invoke-virtual {v8, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@60
    move-result-object v9

    #@61
    check-cast v9, Lcom/android/server/wm/AppWindowToken;

    #@63
    iput-boolean v10, v9, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    #@65
    .line 9262
    add-int/lit8 v7, v7, -0x1

    #@67
    goto :goto_3

    #@68
    .line 9260
    :cond_1
    add-int/lit8 v4, v4, -0x1

    #@6a
    goto :goto_2

    #@6b
    .line 9258
    .end local v7    # "tokenNdx":I
    .end local v8    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_2
    add-int/lit8 v2, v2, -0x1

    #@6d
    goto :goto_1

    #@6e
    .line 9267
    .end local v4    # "taskNdx":I
    .end local v5    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked()V

    #@71
    .line 9269
    const/4 v0, 0x1

    #@72
    .line 9272
    .local v0, "changes":I
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@75
    .line 9273
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@77
    iput-boolean v11, v9, Lcom/android/server/wm/WindowSurfacePlacer;->mWallpaperMayChange:Z

    #@79
    .line 9277
    iput-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    #@7b
    .line 9279
    return v0
.end method

.method public handleDisplayAdded(I)V
    .locals 3
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 10768
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10769
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    #@5
    invoke-virtual {v1, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    #@8
    move-result-object v0

    #@9
    .line 10770
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_0

    #@b
    .line 10771
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    #@e
    .line 10772
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    #@11
    .line 10774
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@13
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    monitor-exit v2

    #@17
    .line 10767
    return-void

    #@18
    .line 10768
    .end local v0    # "display":Landroid/view/Display;
    :catchall_0
    move-exception v1

    #@19
    monitor-exit v2

    #@1a
    throw v1
.end method

.method hasDockedTasksForUser(I)Z
    .locals 8
    .param p1, "userId"    # I

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    .line 5706
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@3
    const/4 v6, 0x3

    #@4
    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@7
    move-result-object v2

    #@8
    check-cast v2, Lcom/android/server/wm/TaskStack;

    #@a
    .line 5707
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_0

    #@c
    .line 5708
    return v7

    #@d
    .line 5711
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@10
    move-result-object v4

    #@11
    .line 5712
    .local v4, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/4 v0, 0x0

    #@12
    .line 5713
    .local v0, "hasUserTask":Z
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@15
    move-result v5

    #@16
    add-int/lit8 v1, v5, -0x1

    #@18
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    #@1a
    if-eqz v0, :cond_2

    #@1c
    .line 5717
    :cond_1
    return v0

    #@1d
    .line 5714
    :cond_2
    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@20
    move-result-object v3

    #@21
    check-cast v3, Lcom/android/server/wm/Task;

    #@23
    .line 5715
    .local v3, "task":Lcom/android/server/wm/Task;
    iget v5, v3, Lcom/android/server/wm/Task;->mUserId:I

    #@25
    if-ne v5, p1, :cond_3

    #@27
    const/4 v0, 0x1

    #@28
    .line 5713
    :goto_1
    add-int/lit8 v1, v1, -0x1

    #@2a
    goto :goto_0

    #@2b
    .line 5715
    :cond_3
    const/4 v0, 0x0

    #@2c
    goto :goto_1
.end method

.method public hasNavigationBar()Z
    .locals 1

    #@0
    .prologue
    .line 10066
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hasNavigationBar()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public hideBootMessagesLocked()V
    .locals 1

    #@0
    .prologue
    .line 5962
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 5963
    const/4 v0, 0x0

    #@5
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@7
    .line 5964
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hideBootMessages()V

    #@c
    .line 5953
    :cond_0
    return-void
.end method

.method public inKeyguardRestrictedInputMode()Z
    .locals 1

    #@0
    .prologue
    .line 5412
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->inKeyguardRestrictedKeyInputMode()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public inputMethodClientHasFocus(Lcom/android/internal/view/IInputMethodClient;)Z
    .locals 10
    .param p1, "client"    # Lcom/android/internal/view/IInputMethodClient;

    #@0
    .prologue
    const/4 v9, 0x1

    #@1
    const/4 v8, 0x0

    #@2
    .line 8676
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v5

    #@5
    .line 8679
    const/4 v4, 0x0

    #@6
    :try_start_0
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@9
    move-result v1

    #@a
    .line 8680
    .local v1, "idx":I
    if-lez v1, :cond_2

    #@c
    .line 8682
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@f
    move-result-object v4

    #@10
    add-int/lit8 v6, v1, -0x1

    #@12
    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@15
    move-result-object v2

    #@16
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@18
    .line 8688
    .local v2, "imFocus":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_2

    #@1a
    .line 8691
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@1c
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@1e
    const/4 v6, 0x3

    #@1f
    if-ne v4, v6, :cond_0

    #@21
    .line 8692
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@23
    if-eqz v4, :cond_0

    #@25
    .line 8695
    const/4 v0, 0x0

    #@26
    .local v0, "i":I
    :goto_0
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@28
    iget-object v4, v4, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@2a
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@2d
    move-result v4

    #@2e
    if-ge v0, v4, :cond_0

    #@30
    .line 8696
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@32
    iget-object v4, v4, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@34
    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@37
    move-result-object v3

    #@38
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@3a
    .line 8697
    .local v3, "w":Lcom/android/server/wm/WindowState;
    if-eq v3, v2, :cond_1

    #@3c
    .line 8698
    const-string/jumbo v4, "WindowManager"

    #@3f
    new-instance v6, Ljava/lang/StringBuilder;

    #@41
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@44
    const-string/jumbo v7, "Switching to real app window: "

    #@47
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4a
    move-result-object v6

    #@4b
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4e
    move-result-object v6

    #@4f
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@52
    move-result-object v6

    #@53
    invoke-static {v4, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@56
    .line 8699
    move-object v2, v3

    #@57
    .line 8712
    .end local v0    # "i":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_0
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@59
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@5b
    if-eqz v4, :cond_2

    #@5d
    .line 8713
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@5f
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@61
    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    #@64
    move-result-object v4

    #@65
    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@68
    move-result-object v6

    #@69
    if-ne v4, v6, :cond_2

    #@6b
    monitor-exit v5

    #@6c
    .line 8714
    return v9

    #@6d
    .line 8695
    .restart local v0    # "i":I
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@6f
    goto :goto_0

    #@70
    .line 8727
    .end local v0    # "i":I
    .end local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_2
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@72
    if-eqz v4, :cond_3

    #@74
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@76
    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@78
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@7a
    if-eqz v4, :cond_3

    #@7c
    .line 8728
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@7e
    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@80
    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    #@82
    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    #@85
    move-result-object v4

    #@86
    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@89
    move-result-object v6

    #@8a
    if-ne v4, v6, :cond_3

    #@8c
    monitor-exit v5

    #@8d
    .line 8729
    return v9

    #@8e
    :cond_3
    monitor-exit v5

    #@8f
    .line 8732
    return v8

    #@90
    .line 8676
    .end local v1    # "idx":I
    :catchall_0
    move-exception v4

    #@91
    monitor-exit v5

    #@92
    throw v4
.end method

.method isCurrentProfileLocked(I)Z
    .locals 3
    .param p1, "userId"    # I

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    .line 5722
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@3
    if-ne p1, v1, :cond_0

    #@5
    return v2

    #@6
    .line 5723
    :cond_0
    const/4 v0, 0x0

    #@7
    .local v0, "i":I
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@9
    array-length v1, v1

    #@a
    if-ge v0, v1, :cond_2

    #@c
    .line 5724
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@e
    aget v1, v1, v0

    #@10
    if-ne v1, p1, :cond_1

    #@12
    return v2

    #@13
    .line 5723
    :cond_1
    add-int/lit8 v0, v0, 0x1

    #@15
    goto :goto_0

    #@16
    .line 5726
    :cond_2
    const/4 v1, 0x0

    #@17
    return v1
.end method

.method public isKeyguardLocked()Z
    .locals 1

    #@0
    .prologue
    .line 5417
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public isKeyguardSecure()Z
    .locals 4

    #@0
    .prologue
    .line 5422
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    #@3
    move-result v2

    #@4
    .line 5423
    .local v2, "userId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@7
    move-result-wide v0

    #@8
    .line 5425
    .local v0, "origId":J
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a
    invoke-interface {v3, v2}, Landroid/view/WindowManagerPolicy;->isKeyguardSecure(I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@d
    move-result v3

    #@e
    .line 5427
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@11
    .line 5425
    return v3

    #@12
    .line 5426
    :catchall_0
    move-exception v3

    #@13
    .line 5427
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@16
    .line 5426
    throw v3
.end method

.method public isRotationFrozen()Z
    .locals 2

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    .line 6728
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getUserRotationMode()I

    #@6
    move-result v1

    #@7
    if-ne v1, v0, :cond_0

    #@9
    :goto_0
    return v0

    #@a
    :cond_0
    const/4 v0, 0x0

    #@b
    goto :goto_0
.end method

.method public isSafeModeEnabled()Z
    .locals 1

    #@0
    .prologue
    .line 10080
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    #@2
    return v0
.end method

.method isScreenCaptureDisabledLocked(I)Z
    .locals 2
    .param p1, "userId"    # I

    #@0
    .prologue
    .line 2239
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Ljava/lang/Boolean;

    #@8
    .line 2240
    .local v0, "disabled":Ljava/lang/Boolean;
    if-nez v0, :cond_0

    #@a
    .line 2241
    const/4 v1, 0x0

    #@b
    return v1

    #@c
    .line 2243
    :cond_0
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    #@f
    move-result v1

    #@10
    return v1
.end method

.method isSecureLocked(Lcom/android/server/wm/WindowState;)Z
    .locals 3
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v1, 0x0

    #@2
    .line 2247
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@6
    and-int/lit16 v0, v0, 0x2000

    #@8
    if-eqz v0, :cond_0

    #@a
    .line 2248
    return v2

    #@b
    .line 2250
    :cond_0
    iget v0, p1, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    #@d
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    #@10
    move-result v0

    #@11
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->isScreenCaptureDisabledLocked(I)Z

    #@14
    move-result v0

    #@15
    if-eqz v0, :cond_1

    #@17
    .line 2251
    return v2

    #@18
    .line 2253
    :cond_1
    return v1
.end method

.method isStackVisibleLocked(I)Z
    .locals 2
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 4965
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@8
    .line 4966
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_0

    #@a
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    #@d
    move-result v1

    #@e
    :goto_0
    return v1

    #@f
    :cond_0
    const/4 v1, 0x0

    #@10
    goto :goto_0
.end method

.method public isValidTaskId(I)Z
    .locals 2
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5290
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5291
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result-object v0

    #@9
    if-eqz v0, :cond_0

    #@b
    const/4 v0, 0x1

    #@c
    :goto_0
    monitor-exit v1

    #@d
    return v0

    #@e
    :cond_0
    const/4 v0, 0x0

    #@f
    goto :goto_0

    #@10
    .line 5290
    :catchall_0
    move-exception v0

    #@11
    monitor-exit v1

    #@12
    throw v0
.end method

.method public isViewServerRunning()Z
    .locals 3

    #@0
    .prologue
    const/4 v0, 0x0

    #@1
    .line 6918
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v1

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 6919
    return v0

    #@8
    .line 6922
    :cond_0
    const-string/jumbo v1, "android.permission.DUMP"

    #@b
    const-string/jumbo v2, "isViewServerRunning"

    #@e
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v1

    #@12
    if-nez v1, :cond_1

    #@14
    .line 6923
    return v0

    #@15
    .line 6926
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@17
    if-eqz v1, :cond_2

    #@19
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1b
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    #@1e
    move-result v0

    #@1f
    :cond_2
    return v0
.end method

.method public keyguardGoingAway(I)V
    .locals 3
    .param p1, "flags"    # I

    #@0
    .prologue
    .line 5444
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5446
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5450
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 5451
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@19
    const/4 v2, 0x1

    #@1a
    iput-boolean v2, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAway:Z

    #@1c
    .line 5452
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@1e
    iput p1, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAwayFlags:I

    #@20
    .line 5453
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@22
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@25
    monitor-exit v1

    #@26
    .line 5443
    return-void

    #@27
    .line 5450
    :catchall_0
    move-exception v0

    #@28
    monitor-exit v1

    #@29
    throw v0
.end method

.method public keyguardWaitingForActivityDrawn()V
    .locals 2

    #@0
    .prologue
    .line 5459
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5460
    const/4 v1, 0x1

    #@4
    :try_start_0
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 5457
    return-void

    #@8
    .line 5459
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method public lockDeviceNow()V
    .locals 1

    #@0
    .prologue
    .line 5617
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->lockNow(Landroid/os/Bundle;)V

    #@4
    .line 5616
    return-void
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .locals 1
    .param p1, "options"    # Landroid/os/Bundle;

    #@0
    .prologue
    .line 10071
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->lockNow(Landroid/os/Bundle;)V

    #@5
    .line 10070
    return-void
.end method

.method logWindowList(Lcom/android/server/wm/WindowList;Ljava/lang/String;)V
    .locals 4
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;
    .param p2, "prefix"    # Ljava/lang/String;

    #@0
    .prologue
    .line 1675
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    #@3
    move-result v0

    #@4
    .line 1676
    .local v0, "N":I
    :goto_0
    if-lez v0, :cond_0

    #@6
    .line 1677
    add-int/lit8 v0, v0, -0x1

    #@8
    .line 1678
    const-string/jumbo v1, "WindowManager"

    #@b
    new-instance v2, Ljava/lang/StringBuilder;

    #@d
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@10
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@13
    move-result-object v2

    #@14
    const-string/jumbo v3, "#"

    #@17
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v2

    #@1b
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v2

    #@1f
    const-string/jumbo v3, ": "

    #@22
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v2

    #@26
    invoke-virtual {p1, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@29
    move-result-object v3

    #@2a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v2

    #@2e
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@31
    move-result-object v2

    #@32
    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    #@35
    goto :goto_0

    #@36
    .line 1674
    :cond_0
    return-void
.end method

.method makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V
    .locals 5
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/16 v4, 0xb

    #@2
    const/4 v3, 0x1

    #@3
    const/4 v2, 0x0

    #@4
    .line 9224
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@7
    move-result v0

    #@8
    if-nez v0, :cond_0

    #@a
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@c
    const/4 v1, 0x2

    #@d
    if-eq v0, v1, :cond_0

    #@f
    .line 9226
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@11
    .line 9227
    iput v2, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@13
    .line 9228
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@15
    iput-boolean v2, v0, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    #@17
    .line 9229
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@19
    if-nez v0, :cond_0

    #@1b
    .line 9230
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@1d
    .line 9233
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1f
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@22
    .line 9234
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@24
    .line 9235
    const-wide/16 v2, 0x7d0

    #@26
    .line 9234
    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@29
    .line 9220
    :cond_0
    return-void
.end method

.method public monitor()V
    .locals 1

    #@0
    .prologue
    .line 10678
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    monitor-exit v0

    #@4
    .line 10677
    return-void
.end method

.method moveInputMethodDialogsLocked(I)V
    .locals 9
    .param p1, "pos"    # I

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    .line 1683
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@3
    .line 1686
    .local v1, "dialogs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@6
    move-result-object v5

    #@7
    .line 1687
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    #@a
    move-result v0

    #@b
    .line 1689
    .local v0, "N":I
    const/4 v2, 0x0

    #@c
    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    #@e
    .line 1690
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v7

    #@12
    check-cast v7, Lcom/android/server/wm/WindowState;

    #@14
    invoke-direct {p0, p1, v7}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@17
    move-result p1

    #@18
    .line 1689
    add-int/lit8 v2, v2, 0x1

    #@1a
    goto :goto_0

    #@1b
    .line 1697
    :cond_0
    if-ltz p1, :cond_4

    #@1d
    .line 1698
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@1f
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@21
    .line 1700
    .local v3, "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@23
    if-eqz v7, :cond_2

    #@25
    .line 1701
    :goto_1
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    #@28
    move-result v7

    #@29
    if-ge p1, v7, :cond_2

    #@2b
    .line 1702
    invoke-virtual {v5, p1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@2e
    move-result-object v6

    #@2f
    check-cast v6, Lcom/android/server/wm/WindowState;

    #@31
    .line 1703
    .local v6, "wp":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@33
    if-eq v6, v7, :cond_1

    #@35
    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@37
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@39
    if-ne v7, v8, :cond_2

    #@3b
    .line 1704
    :cond_1
    add-int/lit8 p1, p1, 0x1

    #@3d
    .line 1705
    goto :goto_1

    #@3e
    .line 1711
    .end local v6    # "wp":Lcom/android/server/wm/WindowState;
    :cond_2
    const/4 v2, 0x0

    #@3f
    :goto_2
    if-ge v2, v0, :cond_3

    #@41
    .line 1712
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v4

    #@45
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@47
    .line 1713
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iput-object v3, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@49
    .line 1714
    invoke-direct {p0, p1, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@4c
    move-result p1

    #@4d
    .line 1711
    add-int/lit8 v2, v2, 0x1

    #@4f
    goto :goto_2

    #@50
    .line 1720
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    return-void

    #@51
    .line 1722
    .end local v3    # "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_4
    const/4 v2, 0x0

    #@52
    :goto_3
    if-ge v2, v0, :cond_5

    #@54
    .line 1723
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@57
    move-result-object v4

    #@58
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@5a
    .line 1724
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    iput-object v8, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@5c
    .line 1725
    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    #@5f
    .line 1722
    add-int/lit8 v2, v2, 0x1

    #@61
    goto :goto_3

    #@62
    .line 1682
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_5
    return-void
.end method

.method moveInputMethodWindowsIfNeededLocked(Z)Z
    .locals 14
    .param p1, "needAssignLayers"    # Z

    #@0
    .prologue
    const/4 v13, 0x1

    #@1
    const/4 v12, -0x1

    #@2
    const/4 v11, 0x0

    #@3
    const/4 v10, 0x0

    #@4
    .line 1734
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@6
    .line 1735
    .local v6, "imWin":Lcom/android/server/wm/WindowState;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@8
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    #@b
    move-result v0

    #@c
    .line 1736
    .local v0, "DN":I
    if-nez v6, :cond_0

    #@e
    if-nez v0, :cond_0

    #@10
    .line 1737
    return v10

    #@11
    .line 1741
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@14
    move-result-object v8

    #@15
    .line 1743
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    #@18
    move-result v5

    #@19
    .line 1744
    .local v5, "imPos":I
    if-ltz v5, :cond_d

    #@1b
    .line 1750
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@1e
    move-result v1

    #@1f
    .line 1751
    .local v1, "N":I
    if-ge v5, v1, :cond_5

    #@21
    .line 1752
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@24
    move-result-object v4

    #@25
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@27
    .line 1756
    :goto_0
    if-eqz v6, :cond_6

    #@29
    move-object v2, v6

    #@2a
    .line 1758
    .local v2, "baseImWin":Lcom/android/server/wm/WindowState;
    :goto_1
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@2c
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@2f
    move-result v9

    #@30
    if-lez v9, :cond_1

    #@32
    .line 1759
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@34
    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@37
    move-result-object v3

    #@38
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@3a
    .line 1760
    .local v3, "cw":Lcom/android/server/wm/WindowState;
    iget v9, v3, Lcom/android/server/wm/WindowState;->mSubLayer:I

    #@3c
    if-gez v9, :cond_1

    #@3e
    move-object v2, v3

    #@3f
    .line 1763
    .end local v3    # "cw":Lcom/android/server/wm/WindowState;
    :cond_1
    if-ne v4, v2, :cond_9

    #@41
    .line 1766
    add-int/lit8 v7, v5, 0x1

    #@43
    .line 1767
    .local v7, "pos":I
    :goto_2
    if-ge v7, v1, :cond_2

    #@45
    .line 1768
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@48
    move-result-object v9

    #@49
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@4b
    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@4d
    if-nez v9, :cond_7

    #@4f
    .line 1773
    :cond_2
    add-int/lit8 v7, v7, 0x1

    #@51
    .line 1775
    :goto_3
    if-ge v7, v1, :cond_3

    #@53
    .line 1776
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@56
    move-result-object v9

    #@57
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@59
    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@5b
    if-eqz v9, :cond_8

    #@5d
    .line 1781
    :cond_3
    if-lt v7, v1, :cond_9

    #@5f
    .line 1784
    if-eqz v6, :cond_4

    #@61
    .line 1785
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@63
    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@65
    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@67
    .line 1787
    :cond_4
    return v10

    #@68
    .line 1752
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v7    # "pos":I
    :cond_5
    const/4 v4, 0x0

    #@69
    .local v4, "firstImWin":Lcom/android/server/wm/WindowState;
    goto :goto_0

    #@6a
    .line 1757
    .end local v4    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_6
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@6c
    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@6f
    move-result-object v9

    #@70
    check-cast v9, Lcom/android/server/wm/WindowState;

    #@72
    move-object v2, v9

    #@73
    goto :goto_1

    #@74
    .line 1771
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .restart local v7    # "pos":I
    :cond_7
    add-int/lit8 v7, v7, 0x1

    #@76
    goto :goto_2

    #@77
    .line 1779
    :cond_8
    add-int/lit8 v7, v7, 0x1

    #@79
    goto :goto_3

    #@7a
    .line 1791
    .end local v7    # "pos":I
    :cond_9
    if-eqz v6, :cond_c

    #@7c
    .line 1796
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@7f
    move-result v5

    #@80
    .line 1801
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@82
    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@84
    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@86
    .line 1802
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@89
    .line 1807
    if-lez v0, :cond_a

    #@8b
    add-int/lit8 v9, v5, 0x1

    #@8d
    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@90
    .line 1832
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_a
    :goto_4
    if-eqz p1, :cond_b

    #@92
    .line 1833
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@94
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@97
    .line 1836
    :cond_b
    return v13

    #@98
    .line 1809
    .restart local v1    # "N":I
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_c
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@9b
    goto :goto_4

    #@9c
    .line 1816
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_d
    if-eqz v6, :cond_e

    #@9e
    .line 1818
    invoke-direct {p0, v10, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    #@a1
    .line 1819
    iput-object v11, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    #@a3
    .line 1820
    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    #@a6
    .line 1825
    if-lez v0, :cond_a

    #@a8
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@ab
    goto :goto_4

    #@ac
    .line 1827
    :cond_e
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    #@af
    goto :goto_4
.end method

.method moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    .locals 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    #@0
    .prologue
    const/4 v10, 0x1

    #@1
    const/4 v11, 0x0

    #@2
    .line 4867
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@5
    move-result-object v8

    #@6
    .line 4868
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@8
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    #@b
    .line 4870
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@e
    .line 4873
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@10
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    #@13
    move-result v3

    #@14
    .line 4874
    .local v3, "tmpSize":I
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    #@17
    move-result v7

    #@18
    .line 4875
    .local v7, "winSize":I
    const/4 v1, 0x0

    #@19
    .local v1, "tmpNdx":I
    const/4 v5, 0x0

    #@1a
    .line 4876
    .local v5, "winNdx":I
    :goto_0
    if-ge v1, v3, :cond_2

    #@1c
    if-ge v5, v7, :cond_2

    #@1e
    .line 4880
    :goto_1
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@20
    add-int/lit8 v2, v1, 0x1

    #@22
    .end local v1    # "tmpNdx":I
    .local v2, "tmpNdx":I
    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@25
    move-result-object v0

    #@26
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@28
    .line 4881
    .local v0, "tmp":Lcom/android/server/wm/WindowState;
    if-ge v2, v3, :cond_0

    #@2a
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@2c
    if-eqz v9, :cond_0

    #@2e
    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@30
    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@32
    if-eqz v9, :cond_0

    #@34
    move v1, v2

    #@35
    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_1

    #@36
    .line 4885
    .end local v1    # "tmpNdx":I
    .restart local v2    # "tmpNdx":I
    :cond_0
    :goto_2
    add-int/lit8 v6, v5, 0x1

    #@38
    .end local v5    # "winNdx":I
    .local v6, "winNdx":I
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3b
    move-result-object v4

    #@3c
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@3e
    .line 4886
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-ge v6, v7, :cond_1

    #@40
    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@42
    if-eqz v9, :cond_1

    #@44
    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@46
    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@48
    if-eqz v9, :cond_1

    #@4a
    move v5, v6

    #@4b
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    goto :goto_2

    #@4c
    .line 4888
    .end local v5    # "winNdx":I
    .restart local v6    # "winNdx":I
    :cond_1
    if-eq v0, v4, :cond_5

    #@4e
    .line 4890
    iput-boolean v10, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@50
    move v5, v6

    #@51
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    #@52
    .line 4894
    .end local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .end local v2    # "tmpNdx":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v1    # "tmpNdx":I
    :cond_2
    if-eq v1, v5, :cond_3

    #@54
    .line 4896
    iput-boolean v10, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@56
    .line 4898
    :cond_3
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    #@58
    invoke-virtual {v9}, Ljava/util/ArrayList;->clear()V

    #@5b
    .line 4900
    const/4 v9, 0x3

    #@5c
    invoke-virtual {p0, v9, v11}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@5f
    move-result v9

    #@60
    if-nez v9, :cond_4

    #@62
    .line 4902
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@64
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@67
    move-result-object v10

    #@68
    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@6b
    .line 4905
    :cond_4
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@6d
    invoke-virtual {v9}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@70
    .line 4906
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@72
    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@75
    .line 4907
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@77
    invoke-virtual {v9, v11}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@7a
    .line 4866
    return-void

    #@7b
    .end local v1    # "tmpNdx":I
    .end local v5    # "winNdx":I
    .restart local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .restart local v2    # "tmpNdx":I
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "winNdx":I
    :cond_5
    move v5, v6

    #@7c
    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    #@7d
    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_0
.end method

.method public moveTaskToBottom(I)V
    .locals 8
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 4943
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 4945
    .local v0, "origId":J
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 4946
    :try_start_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@9
    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@c
    move-result-object v3

    #@d
    check-cast v3, Lcom/android/server/wm/Task;

    #@f
    .line 4947
    .local v3, "task":Lcom/android/server/wm/Task;
    if-nez v3, :cond_0

    #@11
    .line 4948
    const-string/jumbo v4, "WindowManager"

    #@14
    new-instance v6, Ljava/lang/StringBuilder;

    #@16
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@19
    const-string/jumbo v7, "moveTaskToBottom: taskId="

    #@1c
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1f
    move-result-object v6

    #@20
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@23
    move-result-object v6

    #@24
    .line 4949
    const-string/jumbo v7, " not found in mTaskIdToTask"

    #@27
    .line 4948
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2a
    move-result-object v6

    #@2b
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2e
    move-result-object v6

    #@2f
    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@32
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@33
    .line 4960
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@36
    .line 4950
    return-void

    #@37
    .line 4952
    :cond_0
    :try_start_3
    iget-object v2, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@39
    .line 4953
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->moveTaskToBottom(Lcom/android/server/wm/Task;)V

    #@3c
    .line 4954
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@3e
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@41
    move-result v4

    #@42
    if-eqz v4, :cond_1

    #@44
    .line 4955
    const/4 v4, 0x1

    #@45
    invoke-virtual {v3, v4}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    #@48
    .line 4957
    :cond_1
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@4b
    move-result-object v4

    #@4c
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@4f
    :try_start_4
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@50
    .line 4960
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@53
    .line 4942
    return-void

    #@54
    .line 4945
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v4

    #@55
    :try_start_5
    monitor-exit v5

    #@56
    throw v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@57
    .line 4959
    :catchall_1
    move-exception v4

    #@58
    .line 4960
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@5b
    .line 4959
    throw v4
.end method

.method public moveTaskToStack(IIZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    #@0
    .prologue
    .line 5100
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5103
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v2

    #@9
    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5104
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_0

    #@d
    monitor-exit v4

    #@e
    .line 5106
    return-void

    #@f
    .line 5108
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/TaskStack;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@17
    .line 5109
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_1

    #@19
    monitor-exit v4

    #@1a
    .line 5111
    return-void

    #@1b
    .line 5113
    :cond_1
    :try_start_2
    invoke-virtual {v2, v1, p3}, Lcom/android/server/wm/Task;->moveTaskToStack(Lcom/android/server/wm/TaskStack;Z)V

    #@1e
    .line 5114
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@21
    move-result-object v0

    #@22
    .line 5115
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    #@23
    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@25
    .line 5116
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@27
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@2a
    monitor-exit v4

    #@2b
    .line 5099
    return-void

    #@2c
    .line 5100
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@2d
    monitor-exit v4

    #@2e
    throw v3
.end method

.method public moveTaskToTop(I)V
    .locals 8
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 4912
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 4914
    .local v2, "origId":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 4915
    :try_start_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@9
    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@c
    move-result-object v5

    #@d
    check-cast v5, Lcom/android/server/wm/Task;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@f
    .line 4916
    .local v5, "task":Lcom/android/server/wm/Task;
    if-nez v5, :cond_0

    #@11
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@12
    .line 4938
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@15
    .line 4918
    return-void

    #@16
    .line 4920
    :cond_0
    :try_start_3
    iget-object v4, v5, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@18
    .line 4921
    .local v4, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v5}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@1b
    move-result-object v0

    #@1c
    .line 4922
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v6, 0x1

    #@1d
    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    #@20
    .line 4923
    iget-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    #@22
    if-eqz v6, :cond_1

    #@24
    .line 4924
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getHomeStack()Lcom/android/server/wm/TaskStack;

    #@27
    move-result-object v1

    #@28
    .line 4925
    .local v1, "homeStack":Lcom/android/server/wm/TaskStack;
    if-eq v1, v4, :cond_1

    #@2a
    .line 4928
    const/4 v6, 0x0

    #@2b
    invoke-virtual {v0, v1, v6}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    #@2e
    .line 4931
    .end local v1    # "homeStack":Lcom/android/server/wm/TaskStack;
    :cond_1
    invoke-virtual {v4, v5}, Lcom/android/server/wm/TaskStack;->moveTaskToTop(Lcom/android/server/wm/Task;)V

    #@31
    .line 4932
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@33
    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@36
    move-result v6

    #@37
    if-eqz v6, :cond_2

    #@39
    .line 4933
    const/4 v6, 0x0

    #@3a
    invoke-virtual {v5, v6}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    #@3d
    .line 4935
    :cond_2
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@40
    :try_start_4
    monitor-exit v7
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@41
    .line 4938
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@44
    .line 4911
    return-void

    #@45
    .line 4914
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v5    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v6

    #@46
    :try_start_5
    monitor-exit v7

    #@47
    throw v6
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@48
    .line 4937
    :catchall_1
    move-exception v6

    #@49
    .line 4938
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4c
    .line 4937
    throw v6
.end method

.method needsLayout()Z
    .locals 4

    #@0
    .prologue
    .line 9456
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@5
    move-result v2

    #@6
    .line 9457
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    #@7
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v2, :cond_1

    #@9
    .line 9458
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@e
    move-result-object v0

    #@f
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@11
    .line 9459
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@13
    if-eqz v3, :cond_0

    #@15
    .line 9460
    const/4 v3, 0x1

    #@16
    return v3

    #@17
    .line 9457
    :cond_0
    add-int/lit8 v1, v1, 0x1

    #@19
    goto :goto_0

    #@1a
    .line 9463
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    const/4 v3, 0x0

    #@1b
    return v3
.end method

.method public notifyActivityDrawnForKeyguard()V
    .locals 2

    #@0
    .prologue
    .line 5467
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5468
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 5469
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@9
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->notifyActivityDrawnForKeyguardLw()V

    #@c
    .line 5470
    const/4 v0, 0x0

    #@d
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    :cond_0
    monitor-exit v1

    #@10
    .line 5464
    return-void

    #@11
    .line 5467
    :catchall_0
    move-exception v0

    #@12
    monitor-exit v1

    #@13
    throw v0
.end method

.method public notifyAppRelaunching(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 10129
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10130
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@6
    move-result-object v0

    #@7
    .line 10131
    .local v0, "appWindow":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@9
    .line 10132
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->startRelaunching()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    :cond_0
    monitor-exit v2

    #@d
    .line 10128
    return-void

    #@e
    .line 10129
    .end local v0    # "appWindow":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@f
    monitor-exit v2

    #@10
    throw v1
.end method

.method public notifyAppRelaunchingFinished(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 10138
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10139
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@6
    move-result-object v0

    #@7
    .line 10140
    .local v0, "appWindow":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@9
    .line 10141
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->finishRelaunching()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    :cond_0
    monitor-exit v2

    #@d
    .line 10137
    return-void

    #@e
    .line 10138
    .end local v0    # "appWindow":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@f
    monitor-exit v2

    #@10
    throw v1
.end method

.method public notifyAppStopped(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "stopped"    # Z

    #@0
    .prologue
    .line 4444
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4445
    const-string/jumbo v2, "notifyAppStopped()"

    #@6
    .line 4444
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 4446
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 4449
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 4451
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v0

    #@1c
    .line 4452
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_1

    #@1e
    .line 4453
    const-string/jumbo v1, "WindowManager"

    #@21
    new-instance v3, Ljava/lang/StringBuilder;

    #@23
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@26
    const-string/jumbo v4, "Attempted to set visibility of non-existing app token: "

    #@29
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v3

    #@2d
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@34
    move-result-object v3

    #@35
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    monitor-exit v2

    #@39
    .line 4454
    return-void

    #@3a
    .line 4456
    :cond_1
    :try_start_1
    invoke-virtual {v0, p2}, Lcom/android/server/wm/AppWindowToken;->notifyAppStopped(Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@3d
    monitor-exit v2

    #@3e
    .line 4443
    return-void

    #@3f
    .line 4449
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@40
    monitor-exit v2

    #@41
    throw v1
.end method

.method notifyHardKeyboardStatusChange()V
    .locals 4

    #@0
    .prologue
    .line 7487
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v3

    #@3
    .line 7488
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

    #@5
    .line 7489
    .local v1, "listener":Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@7
    .local v0, "available":Z
    monitor-exit v3

    #@8
    .line 7491
    if-eqz v1, :cond_0

    #@a
    .line 7492
    invoke-interface {v1, v0}, Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;->onHardKeyboardStatusChange(Z)V

    #@d
    .line 7484
    :cond_0
    return-void

    #@e
    .line 7487
    .end local v0    # "available":Z
    .end local v1    # "listener":Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    :catchall_0
    move-exception v2

    #@f
    monitor-exit v3

    #@10
    throw v2
.end method

.method okToDisplay()Z
    .locals 1

    #@0
    .prologue
    .line 3306
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@2
    if-nez v0, :cond_0

    #@4
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@6
    if-eqz v0, :cond_0

    #@8
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@a
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isScreenOn()Z

    #@d
    move-result v0

    #@e
    :goto_0
    return v0

    #@f
    :cond_0
    const/4 v0, 0x0

    #@10
    goto :goto_0
.end method

.method public onDisplayAdded(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 10764
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1b

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 10763
    return-void
.end method

.method public onDisplayChanged(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 10802
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1d

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 10801
    return-void
.end method

.method public onDisplayRemoved(I)V
    .locals 4
    .param p1, "displayId"    # I

    #@0
    .prologue
    .line 10779
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@4
    const/16 v2, 0x1c

    #@6
    const/4 v3, 0x0

    #@7
    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@a
    move-result-object v1

    #@b
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@e
    .line 10778
    return-void
.end method

.method public onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "rectangle"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 2661
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2662
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 2663
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@9
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@c
    move-result-object v0

    #@d
    check-cast v0, Lcom/android/server/wm/WindowState;

    #@f
    .line 2665
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@11
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@14
    move-result v1

    #@15
    if-nez v1, :cond_0

    #@17
    .line 2666
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@19
    invoke-virtual {v1, p2}, Lcom/android/server/wm/AccessibilityController;->onRectangleOnScreenRequestedLocked(Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :cond_0
    monitor-exit v2

    #@1d
    .line 2660
    return-void

    #@1e
    .line 2661
    :catchall_0
    move-exception v1

    #@1f
    monitor-exit v2

    #@20
    throw v1
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 3
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    #@0
    .prologue
    .line 1060
    :try_start_0
    invoke-super {p0, p1, p2, p3, p4}, Landroid/view/IWindowManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    #@3
    move-result v1

    #@4
    return v1

    #@5
    .line 1061
    :catch_0
    move-exception v0

    #@6
    .line 1064
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v1, v0, Ljava/lang/SecurityException;

    #@8
    if-nez v1, :cond_0

    #@a
    .line 1065
    const-string/jumbo v1, "WindowManager"

    #@d
    const-string/jumbo v2, "Window Manager Crash"

    #@10
    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@13
    .line 1067
    :cond_0
    throw v0
.end method

.method public openSession(Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)Landroid/view/IWindowSession;
    .locals 3
    .param p1, "callback"    # Landroid/view/IWindowSessionCallback;
    .param p2, "client"    # Lcom/android/internal/view/IInputMethodClient;
    .param p3, "inputContext"    # Lcom/android/internal/view/IInputContext;

    #@0
    .prologue
    .line 8668
    if-nez p2, :cond_0

    #@2
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@4
    const-string/jumbo v2, "null client"

    #@7
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@a
    throw v1

    #@b
    .line 8669
    :cond_0
    if-nez p3, :cond_1

    #@d
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    const-string/jumbo v2, "null inputContext"

    #@12
    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@15
    throw v1

    #@16
    .line 8670
    :cond_1
    new-instance v0, Lcom/android/server/wm/Session;

    #@18
    invoke-direct {v0, p0, p1, p2, p3}, Lcom/android/server/wm/Session;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)V

    #@1b
    .line 8671
    .local v0, "session":Lcom/android/server/wm/Session;
    return-object v0
.end method

.method public outOfMemoryWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)Z
    .locals 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 3122
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4
    move-result-wide v0

    #@5
    .line 3125
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@7
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@8
    .line 3126
    const/4 v3, 0x0

    #@9
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    move-result-object v2

    #@d
    .line 3127
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_0

    #@f
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@10
    .line 3133
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@13
    .line 3128
    return v5

    #@14
    .line 3130
    :cond_0
    :try_start_3
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@16
    const-string/jumbo v5, "from-client"

    #@19
    const/4 v6, 0x0

    #@1a
    invoke-virtual {p0, v3, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@1d
    move-result v3

    #@1e
    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@1f
    .line 3133
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@22
    .line 3130
    return v3

    #@23
    .line 3125
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@24
    :try_start_5
    monitor-exit v4

    #@25
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@26
    .line 3132
    :catchall_1
    move-exception v3

    #@27
    .line 3133
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2a
    .line 3132
    throw v3
.end method

.method public overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "enterAnim"    # I
    .param p3, "exitAnim"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;

    #@0
    .prologue
    .line 3920
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 3921
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 3919
    return-void

    #@a
    .line 3920
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Z)V
    .locals 9
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "targetWidth"    # I
    .param p5, "targetHeight"    # I
    .param p6, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p7, "scaleUp"    # Z

    #@0
    .prologue
    .line 3957
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v8

    #@3
    .line 3958
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    move-object v1, p1

    #@6
    move v2, p2

    #@7
    move v3, p3

    #@8
    move v4, p4

    #@9
    move v5, p5

    #@a
    move-object v6, p6

    #@b
    move/from16 v7, p7

    #@d
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v8

    #@11
    .line 3956
    return-void

    #@12
    .line 3957
    :catchall_0
    move-exception v0

    #@13
    monitor-exit v8

    #@14
    throw v0
.end method

.method public overridePendingAppTransitionClipReveal(IIII)V
    .locals 2
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    #@0
    .prologue
    .line 3938
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 3939
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 3937
    return-void

    #@a
    .line 3938
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionInPlace(Ljava/lang/String;I)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "anim"    # I

    #@0
    .prologue
    .line 3998
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 3999
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/AppTransition;->overrideInPlaceAppTransition(Ljava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 3997
    return-void

    #@a
    .line 3998
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionMultiThumb([Landroid/view/AppTransitionAnimationSpec;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V
    .locals 2
    .param p1, "specs"    # [Landroid/view/AppTransitionAnimationSpec;
    .param p2, "onAnimationStartedCallback"    # Landroid/os/IRemoteCallback;
    .param p3, "onAnimationFinishedCallback"    # Landroid/os/IRemoteCallback;
    .param p4, "scaleUp"    # Z

    #@0
    .prologue
    .line 3967
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 3968
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumb([Landroid/view/AppTransitionAnimationSpec;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V

    #@8
    .line 3970
    invoke-virtual {p0, p1, p4}, Lcom/android/server/wm/WindowManagerService;->prolongAnimationsFromSpecs([Landroid/view/AppTransitionAnimationSpec;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    monitor-exit v1

    #@c
    .line 3966
    return-void

    #@d
    .line 3967
    :catchall_0
    move-exception v0

    #@e
    monitor-exit v1

    #@f
    throw v0
.end method

.method public overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V
    .locals 2
    .param p1, "specsFuture"    # Landroid/view/IAppTransitionAnimationSpecsFuture;
    .param p2, "callback"    # Landroid/os/IRemoteCallback;
    .param p3, "scaleUp"    # Z

    #@0
    .prologue
    .line 4007
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 4008
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 4006
    return-void

    #@a
    .line 4007
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionScaleUp(IIII)V
    .locals 2
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    #@0
    .prologue
    .line 3929
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 3930
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionScaleUp(IIII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 3928
    return-void

    #@a
    .line 3929
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    .locals 7
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p5, "scaleUp"    # Z

    #@0
    .prologue
    .line 3947
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 3948
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5
    move-object v1, p1

    #@6
    move v2, p2

    #@7
    move v3, p3

    #@8
    move-object v4, p4

    #@9
    move v5, p5

    #@a
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@d
    monitor-exit v6

    #@e
    .line 3946
    return-void

    #@f
    .line 3947
    :catchall_0
    move-exception v0

    #@10
    monitor-exit v6

    #@11
    throw v0
.end method

.method public pauseKeyDispatching(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "_token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 7735
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 7736
    const-string/jumbo v2, "pauseKeyDispatching()"

    #@6
    .line 7735
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 7737
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 7740
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 7741
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 7742
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 7743
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->pauseDispatchingLw(Lcom/android/server/wm/WindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    :cond_1
    monitor-exit v2

    #@28
    .line 7734
    return-void

    #@29
    .line 7740
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@2a
    monitor-exit v2

    #@2b
    throw v1
.end method

.method pauseRotationLocked()V
    .locals 1

    #@0
    .prologue
    .line 6531
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@2
    add-int/lit8 v0, v0, 0x1

    #@4
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@6
    .line 6530
    return-void
.end method

.method public performBootTimeout()V
    .locals 3

    #@0
    .prologue
    .line 5780
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5781
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    if-eqz v0, :cond_0

    #@7
    monitor-exit v1

    #@8
    .line 5782
    return-void

    #@9
    .line 5784
    :cond_0
    :try_start_1
    const-string/jumbo v0, "WindowManager"

    #@c
    const-string/jumbo v2, "***** BOOT TIMEOUT: forcing display enabled"

    #@f
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@12
    .line 5785
    const/4 v0, 0x1

    #@13
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@15
    monitor-exit v1

    #@16
    .line 5787
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@19
    .line 5779
    return-void

    #@1a
    .line 5780
    :catchall_0
    move-exception v0

    #@1b
    monitor-exit v1

    #@1c
    throw v0
.end method

.method public performDeferredDestroyWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 3105
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 3108
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 3109
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 3110
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_0

    #@e
    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@10
    if-eqz v3, :cond_1

    #@12
    :cond_0
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@13
    .line 3117
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@16
    .line 3111
    return-void

    #@17
    .line 3114
    :cond_1
    :try_start_3
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@19
    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->destroyDeferredSurfaceLocked()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@1c
    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@1d
    .line 3117
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@20
    .line 3104
    return-void

    #@21
    .line 3108
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@22
    :try_start_5
    monitor-exit v4

    #@23
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@24
    .line 3116
    :catchall_1
    move-exception v3

    #@25
    .line 3117
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@28
    .line 3116
    throw v3
.end method

.method public performEnableScreen()V
    .locals 10

    #@0
    .prologue
    const/4 v9, 0x0

    #@1
    .line 5847
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v5

    #@4
    .line 5854
    :try_start_0
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    if-eqz v4, :cond_0

    #@8
    monitor-exit v5

    #@9
    .line 5855
    return-void

    #@a
    .line 5857
    :cond_0
    :try_start_1
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    #@c
    if-nez v4, :cond_1

    #@e
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@10
    if-eqz v4, :cond_2

    #@12
    .line 5862
    :cond_1
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@14
    if-nez v4, :cond_3

    #@16
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkWaitingForWindowsLocked()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@19
    move-result v4

    #@1a
    if-eqz v4, :cond_3

    #@1c
    monitor-exit v5

    #@1d
    .line 5863
    return-void

    #@1e
    :cond_2
    monitor-exit v5

    #@1f
    .line 5858
    return-void

    #@20
    .line 5866
    :cond_3
    :try_start_2
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    #@22
    if-nez v4, :cond_5

    #@24
    .line 5868
    const-string/jumbo v4, "Stop bootanim"

    #@27
    const-wide/16 v6, 0x20

    #@29
    const/4 v8, 0x0

    #@2a
    invoke-static {v6, v7, v4, v8}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@2d
    .line 5870
    :try_start_3
    const-string/jumbo v4, "SurfaceFlinger"

    #@30
    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    #@33
    move-result-object v3

    #@34
    .line 5871
    .local v3, "surfaceFlinger":Landroid/os/IBinder;
    if-eqz v3, :cond_4

    #@36
    .line 5873
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@39
    move-result-object v0

    #@3a
    .line 5874
    .local v0, "data":Landroid/os/Parcel;
    const-string/jumbo v4, "android.ui.ISurfaceComposer"

    #@3d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    #@40
    .line 5875
    const/4 v4, 0x1

    #@41
    .line 5876
    const/4 v6, 0x0

    #@42
    const/4 v7, 0x0

    #@43
    .line 5875
    invoke-interface {v3, v4, v0, v6, v7}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    #@46
    .line 5877
    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@49
    .line 5882
    .end local v0    # "data":Landroid/os/Parcel;
    .end local v3    # "surfaceFlinger":Landroid/os/IBinder;
    :cond_4
    :goto_0
    const/4 v4, 0x1

    #@4a
    :try_start_4
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    #@4c
    .line 5885
    :cond_5
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    #@4e
    if-nez v4, :cond_6

    #@50
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    #@53
    move-result v4

    #@54
    if-eqz v4, :cond_7

    #@56
    .line 5890
    :cond_6
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@59
    move-result-wide v6

    #@5a
    const/16 v4, 0x791f

    #@5c
    invoke-static {v4, v6, v7}, Landroid/util/EventLog;->writeEvent(IJ)I

    #@5f
    .line 5891
    const-string/jumbo v4, "Stop bootanim"

    #@62
    const-wide/16 v6, 0x20

    #@64
    const/4 v8, 0x0

    #@65
    invoke-static {v6, v7, v4, v8}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    #@68
    .line 5892
    const/4 v4, 0x1

    #@69
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@6b
    .line 5896
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@6d
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    #@6f
    invoke-virtual {v4, v6}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@72
    monitor-exit v5

    #@73
    .line 5900
    :try_start_5
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@75
    invoke-interface {v4}, Landroid/app/IActivityManager;->bootAnimationComplete()V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    #@78
    .line 5904
    :goto_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@7a
    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->enableScreenAfterBoot()V

    #@7d
    .line 5907
    invoke-virtual {p0, v9, v9}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@80
    .line 5846
    return-void

    #@81
    .line 5879
    :catch_0
    move-exception v2

    #@82
    .line 5880
    .local v2, "ex":Landroid/os/RemoteException;
    :try_start_6
    const-string/jumbo v4, "WindowManager"

    #@85
    const-string/jumbo v6, "Boot completed: SurfaceFlinger is dead!"

    #@88
    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@8b
    goto :goto_0

    #@8c
    .line 5847
    .end local v2    # "ex":Landroid/os/RemoteException;
    :catchall_0
    move-exception v4

    #@8d
    monitor-exit v5

    #@8e
    throw v4

    #@8f
    :cond_7
    monitor-exit v5

    #@90
    .line 5887
    return-void

    #@91
    .line 5901
    :catch_1
    move-exception v1

    #@92
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method public pokeDrawLock(Lcom/android/server/wm/Session;Landroid/os/IBinder;)V
    .locals 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 2680
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2681
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    .line 2682
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@a
    .line 2683
    iget-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    #@c
    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowState;->pokeDrawLockLw(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    :cond_0
    monitor-exit v2

    #@10
    .line 2679
    return-void

    #@11
    .line 2680
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@12
    monitor-exit v2

    #@13
    throw v1
.end method

.method public positionTaskInStack(IIILandroid/graphics/Rect;Landroid/content/res/Configuration;)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "position"    # I
    .param p4, "bounds"    # Landroid/graphics/Rect;
    .param p5, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 5182
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v4

    #@3
    .line 5185
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v2

    #@9
    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5186
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_0

    #@d
    monitor-exit v4

    #@e
    .line 5189
    return-void

    #@f
    .line 5191
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@14
    move-result-object v1

    #@15
    check-cast v1, Lcom/android/server/wm/TaskStack;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@17
    .line 5192
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_1

    #@19
    monitor-exit v4

    #@1a
    .line 5195
    return-void

    #@1b
    .line 5197
    :cond_1
    :try_start_2
    invoke-virtual {v2, v1, p3, p4, p5}, Lcom/android/server/wm/Task;->positionTaskInStack(Lcom/android/server/wm/TaskStack;ILandroid/graphics/Rect;Landroid/content/res/Configuration;)V

    #@1e
    .line 5198
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@21
    move-result-object v0

    #@22
    .line 5199
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    #@23
    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@25
    .line 5200
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@27
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@2a
    monitor-exit v4

    #@2b
    .line 5181
    return-void

    #@2c
    .line 5182
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v3

    #@2d
    monitor-exit v4

    #@2e
    throw v3
.end method

.method public prepareAppTransition(IZ)V
    .locals 3
    .param p1, "transit"    # I
    .param p2, "alwaysKeepCurrent"    # Z

    #@0
    .prologue
    .line 3899
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3900
    const-string/jumbo v2, "prepareAppTransition()"

    #@6
    .line 3899
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3901
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3903
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 3904
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@1a
    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/AppTransition;->prepareAppTransitionLocked(IZ)Z

    #@1d
    move-result v0

    #@1e
    .line 3906
    .local v0, "prepared":Z
    if-eqz v0, :cond_1

    #@20
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@23
    move-result v1

    #@24
    if-eqz v1, :cond_1

    #@26
    .line 3907
    const/4 v1, 0x0

    #@27
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@29
    :cond_1
    monitor-exit v2

    #@2a
    .line 3898
    return-void

    #@2b
    .line 3903
    .end local v0    # "prepared":Z
    :catchall_0
    move-exception v1

    #@2c
    monitor-exit v2

    #@2d
    throw v1
.end method

.method prepareDragSurface(Landroid/view/IWindow;Landroid/view/SurfaceSession;IIILandroid/view/Surface;)Landroid/os/IBinder;
    .locals 20
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "session"    # Landroid/view/SurfaceSession;
    .param p3, "flags"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "outSurface"    # Landroid/view/Surface;

    #@0
    .prologue
    .line 7671
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@3
    move-result v10

    #@4
    .line 7672
    .local v10, "callerPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@7
    move-result v11

    #@8
    .line 7673
    .local v11, "callerUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@b
    move-result-wide v16

    #@c
    .line 7674
    .local v16, "origId":J
    const/16 v18, 0x0

    #@e
    .line 7677
    .local v18, "token":Landroid/os/IBinder;
    :try_start_0
    move-object/from16 v0, p0

    #@10
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@12
    move-object/from16 v19, v0

    #@14
    monitor-enter v19
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    #@15
    .line 7679
    :try_start_1
    move-object/from16 v0, p0

    #@17
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@19
    if-nez v3, :cond_2

    #@1b
    .line 7681
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1e
    move-result-object v13

    #@1f
    .line 7682
    .local v13, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@22
    move-result-object v12

    #@23
    .line 7684
    .local v12, "display":Landroid/view/Display;
    new-instance v2, Landroid/view/SurfaceControl;

    #@25
    const-string/jumbo v4, "drag surface"

    #@28
    .line 7685
    const/4 v7, -0x3

    #@29
    const/4 v8, 0x4

    #@2a
    move-object/from16 v3, p2

    #@2c
    move/from16 v5, p4

    #@2e
    move/from16 v6, p5

    #@30
    .line 7684
    invoke-direct/range {v2 .. v8}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    #@33
    .line 7686
    .local v2, "surface":Landroid/view/SurfaceControl;
    invoke-virtual {v12}, Landroid/view/Display;->getLayerStack()I

    #@36
    move-result v3

    #@37
    invoke-virtual {v2, v3}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    #@3a
    .line 7687
    const/high16 v9, 0x3f800000    # 1.0f

    #@3c
    .line 7688
    .local v9, "alpha":F
    move/from16 v0, p3

    #@3e
    and-int/lit16 v3, v0, 0x200

    #@40
    if-nez v3, :cond_0

    #@42
    .line 7689
    const v9, 0x3f350481    # 0.7071f

    #@45
    .line 7691
    :cond_0
    invoke-virtual {v2, v9}, Landroid/view/SurfaceControl;->setAlpha(F)V

    #@48
    .line 7695
    move-object/from16 v0, p6

    #@4a
    invoke-virtual {v0, v2}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    #@4d
    .line 7696
    invoke-interface/range {p1 .. p1}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@50
    move-result-object v8

    #@51
    .line 7697
    .local v8, "winBinder":Landroid/os/IBinder;
    new-instance v5, Landroid/os/Binder;

    #@53
    invoke-direct {v5}, Landroid/os/Binder;-><init>()V
    :try_end_1
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    #@56
    .line 7698
    .local v5, "token":Landroid/os/IBinder;
    :try_start_2
    new-instance v3, Lcom/android/server/wm/DragState;

    #@58
    .end local v18    # "token":Landroid/os/IBinder;
    move-object/from16 v4, p0

    #@5a
    move-object v6, v2

    #@5b
    move/from16 v7, p3

    #@5d
    invoke-direct/range {v3 .. v8}, Lcom/android/server/wm/DragState;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;Landroid/view/SurfaceControl;ILandroid/os/IBinder;)V

    #@60
    move-object/from16 v0, p0

    #@62
    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@64
    .line 7699
    move-object/from16 v0, p0

    #@66
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@68
    iput v10, v3, Lcom/android/server/wm/DragState;->mPid:I

    #@6a
    .line 7700
    move-object/from16 v0, p0

    #@6c
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@6e
    iput v11, v3, Lcom/android/server/wm/DragState;->mUid:I

    #@70
    .line 7701
    move-object/from16 v0, p0

    #@72
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@74
    iput v9, v3, Lcom/android/server/wm/DragState;->mOriginalAlpha:F

    #@76
    .line 7702
    new-instance v18, Landroid/os/Binder;

    #@78
    invoke-direct/range {v18 .. v18}, Landroid/os/Binder;-><init>()V

    #@7b
    move-object/from16 v0, p0

    #@7d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@7f
    move-object/from16 v0, v18

    #@81
    iput-object v0, v3, Lcom/android/server/wm/DragState;->mToken:Landroid/os/IBinder;
    :try_end_2
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@83
    .line 7705
    .end local v5    # "token":Landroid/os/IBinder;
    .local v18, "token":Landroid/os/IBinder;
    :try_start_3
    move-object/from16 v0, p0

    #@85
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@87
    const/16 v4, 0x14

    #@89
    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    #@8c
    .line 7706
    move-object/from16 v0, p0

    #@8e
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@90
    const/16 v4, 0x14

    #@92
    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@95
    move-result-object v15

    #@96
    .line 7707
    .local v15, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    #@98
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@9a
    const-wide/16 v6, 0x1388

    #@9c
    invoke-virtual {v3, v15, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_3
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    #@9f
    move-object/from16 v5, v18

    #@a1
    .end local v2    # "surface":Landroid/view/SurfaceControl;
    .end local v8    # "winBinder":Landroid/os/IBinder;
    .end local v9    # "alpha":F
    .end local v12    # "display":Landroid/view/Display;
    .end local v13    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "msg":Landroid/os/Message;
    .end local v18    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    :cond_1
    :goto_0
    :try_start_4
    monitor-exit v19
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@a2
    .line 7720
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@a5
    .line 7723
    return-object v5

    #@a6
    .line 7709
    .end local v5    # "token":Landroid/os/IBinder;
    .local v18, "token":Landroid/os/IBinder;
    :cond_2
    :try_start_5
    const-string/jumbo v3, "WindowManager"

    #@a9
    const-string/jumbo v4, "Drag already in progress"

    #@ac
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    #@af
    move-object/from16 v5, v18

    #@b1
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_0

    #@b2
    .line 7711
    .end local v5    # "token":Landroid/os/IBinder;
    .end local v18    # "token":Landroid/os/IBinder;
    :catch_0
    move-exception v14

    #@b3
    .local v14, "e":Landroid/view/Surface$OutOfResourcesException;
    move-object/from16 v5, v18

    #@b5
    .line 7712
    .restart local v5    # "token":Landroid/os/IBinder;
    :goto_1
    :try_start_6
    const-string/jumbo v3, "WindowManager"

    #@b8
    new-instance v4, Ljava/lang/StringBuilder;

    #@ba
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@bd
    const-string/jumbo v6, "Can\'t allocate drag surface w="

    #@c0
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c3
    move-result-object v4

    #@c4
    move/from16 v0, p4

    #@c6
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@c9
    move-result-object v4

    #@ca
    const-string/jumbo v6, " h="

    #@cd
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@d0
    move-result-object v4

    #@d1
    move/from16 v0, p5

    #@d3
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@d6
    move-result-object v4

    #@d7
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@da
    move-result-object v4

    #@db
    invoke-static {v3, v4, v14}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@de
    .line 7713
    move-object/from16 v0, p0

    #@e0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@e2
    if-eqz v3, :cond_1

    #@e4
    .line 7714
    move-object/from16 v0, p0

    #@e6
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    #@e8
    invoke-virtual {v3}, Lcom/android/server/wm/DragState;->reset()V

    #@eb
    .line 7715
    const/4 v3, 0x0

    #@ec
    move-object/from16 v0, p0

    #@ee
    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@f0
    goto :goto_0

    #@f1
    .line 7677
    .end local v14    # "e":Landroid/view/Surface$OutOfResourcesException;
    :catchall_0
    move-exception v3

    #@f2
    :goto_2
    :try_start_7
    monitor-exit v19

    #@f3
    throw v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    #@f4
    .line 7719
    :catchall_1
    move-exception v3

    #@f5
    .line 7720
    :goto_3
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@f8
    .line 7719
    throw v3

    #@f9
    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v18    # "token":Landroid/os/IBinder;
    :catchall_2
    move-exception v3

    #@fa
    move-object/from16 v5, v18

    #@fc
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_3

    #@fd
    .line 7677
    .end local v5    # "token":Landroid/os/IBinder;
    .end local v18    # "token":Landroid/os/IBinder;
    :catchall_3
    move-exception v3

    #@fe
    move-object/from16 v5, v18

    #@100
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_2

    #@101
    .line 7711
    .restart local v2    # "surface":Landroid/view/SurfaceControl;
    .restart local v8    # "winBinder":Landroid/os/IBinder;
    .restart local v9    # "alpha":F
    .restart local v12    # "display":Landroid/view/Display;
    .restart local v13    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catch_1
    move-exception v14

    #@102
    .restart local v14    # "e":Landroid/view/Surface$OutOfResourcesException;
    goto :goto_1
.end method

.method public prepareFreezingTaskBounds(I)V
    .locals 5
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5170
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5171
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5172
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@d
    .line 5173
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "prepareFreezingTaskBounds: stackId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5174
    const-string/jumbo v4, " not found."

    #@22
    .line 5173
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5170
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5176
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->prepareFreezingTaskBounds()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@34
    monitor-exit v2

    #@35
    .line 5169
    return-void
.end method

.method prolongAnimationsFromSpecs([Landroid/view/AppTransitionAnimationSpec;Z)V
    .locals 9
    .param p1, "specs"    # [Landroid/view/AppTransitionAnimationSpec;
    .param p2, "scaleUp"    # Z

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    const/4 v7, -0x1

    #@2
    .line 3979
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    #@4
    invoke-virtual {v5}, Landroid/util/SparseIntArray;->clear()V

    #@7
    .line 3980
    array-length v5, p1

    #@8
    add-int/lit8 v1, v5, -0x1

    #@a
    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    #@c
    .line 3981
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    #@e
    aget-object v6, p1, v1

    #@10
    iget v6, v6, Landroid/view/AppTransitionAnimationSpec;->taskId:I

    #@12
    invoke-virtual {v5, v6, v8}, Landroid/util/SparseIntArray;->put(II)V

    #@15
    .line 3980
    add-int/lit8 v1, v1, -0x1

    #@17
    goto :goto_0

    #@18
    .line 3983
    :cond_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@1d
    move-result-object v5

    #@1e
    invoke-interface {v5}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@21
    move-result-object v4

    #@22
    .local v4, "win$iterator":Ljava/util/Iterator;
    :cond_1
    :goto_1
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    #@25
    move-result v5

    #@26
    if-eqz v5, :cond_3

    #@28
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@2b
    move-result-object v3

    #@2c
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@2e
    .line 3984
    .local v3, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    #@31
    move-result-object v2

    #@32
    .line 3985
    .local v2, "task":Lcom/android/server/wm/Task;
    if-eqz v2, :cond_1

    #@34
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    #@36
    iget v6, v2, Lcom/android/server/wm/Task;->mTaskId:I

    #@38
    invoke-virtual {v5, v6, v7}, Landroid/util/SparseIntArray;->get(II)I

    #@3b
    move-result v5

    #@3c
    if-eq v5, v7, :cond_1

    #@3e
    .line 3986
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->inFreeformWorkspace()Z

    #@41
    move-result v5

    #@42
    .line 3985
    if-eqz v5, :cond_1

    #@44
    .line 3987
    iget-object v0, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@46
    .line 3988
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_1

    #@48
    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@4a
    if-eqz v5, :cond_1

    #@4c
    .line 3989
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@4e
    if-eqz p2, :cond_2

    #@50
    .line 3990
    const/4 v5, 0x2

    #@51
    .line 3989
    :goto_2
    invoke-virtual {v6, v5}, Lcom/android/server/wm/AppWindowAnimator;->startProlongAnimation(I)V

    #@54
    goto :goto_1

    #@55
    .line 3990
    :cond_2
    const/4 v5, 0x1

    #@56
    goto :goto_2

    #@57
    .line 3975
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    return-void
.end method

.method public rebootSafeMode(Z)V
    .locals 1
    .param p1, "confirm"    # Z

    #@0
    .prologue
    .line 5656
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->rebootSafeMode(Landroid/content/Context;Z)V

    #@5
    .line 5655
    return-void
.end method

.method final rebuildAppWindowListLocked()V
    .locals 1

    #@0
    .prologue
    .line 9123
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v0

    #@4
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@7
    .line 9122
    return-void
.end method

.method reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    .locals 23
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p2, "operation"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    #@0
    .prologue
    .line 9482
    move-object/from16 v0, p1

    #@2
    iget-object v15, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@4
    .line 9483
    .local v15, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    const/4 v10, 0x0

    #@5
    .line 9484
    .local v10, "leakedSurface":Z
    const/4 v9, 0x0

    #@6
    .line 9486
    .local v9, "killedApps":Z
    const/16 v20, 0x3

    #@8
    move/from16 v0, v20

    #@a
    new-array v0, v0, [Ljava/lang/Object;

    #@c
    move-object/from16 v20, v0

    #@e
    move-object/from16 v0, p1

    #@10
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@12
    move-object/from16 v21, v0

    #@14
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->toString()Ljava/lang/String;

    #@17
    move-result-object v21

    #@18
    const/16 v22, 0x0

    #@1a
    aput-object v21, v20, v22

    #@1c
    .line 9487
    move-object/from16 v0, p1

    #@1e
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@20
    move-object/from16 v21, v0

    #@22
    move-object/from16 v0, v21

    #@24
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@26
    move/from16 v21, v0

    #@28
    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@2b
    move-result-object v21

    #@2c
    const/16 v22, 0x1

    #@2e
    aput-object v21, v20, v22

    #@30
    const/16 v21, 0x2

    #@32
    aput-object p2, v20, v21

    #@34
    .line 9486
    const/16 v21, 0x7918

    #@36
    move/from16 v0, v21

    #@38
    move-object/from16 v1, v20

    #@3a
    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    #@3d
    .line 9489
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@40
    move-result-wide v4

    #@41
    .line 9494
    .local v4, "callingIdentity":J
    :try_start_0
    const-string/jumbo v20, "WindowManager"

    #@44
    const-string/jumbo v21, "Out of memory for surface!  Looking for leaks..."

    #@47
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@4a
    .line 9495
    move-object/from16 v0, p0

    #@4c
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@4e
    move-object/from16 v20, v0

    #@50
    invoke-virtual/range {v20 .. v20}, Landroid/util/SparseArray;->size()I

    #@53
    move-result v11

    #@54
    .line 9496
    .local v11, "numDisplays":I
    const/4 v6, 0x0

    #@55
    .local v6, "displayNdx":I
    :goto_0
    if-ge v6, v11, :cond_4

    #@57
    .line 9497
    move-object/from16 v0, p0

    #@59
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@5b
    move-object/from16 v20, v0

    #@5d
    move-object/from16 v0, v20

    #@5f
    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@62
    move-result-object v20

    #@63
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@65
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@68
    move-result-object v17

    #@69
    .line 9498
    .local v17, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    #@6c
    move-result v12

    #@6d
    .line 9499
    .local v12, "numWindows":I
    const/16 v16, 0x0

    #@6f
    .local v16, "winNdx":I
    :goto_1
    move/from16 v0, v16

    #@71
    if-ge v0, v12, :cond_3

    #@73
    .line 9500
    move-object/from16 v0, v17

    #@75
    move/from16 v1, v16

    #@77
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@7a
    move-result-object v18

    #@7b
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@7d
    .line 9501
    .local v18, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    #@7f
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@81
    move-object/from16 v19, v0

    #@83
    .line 9502
    .local v19, "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v19

    #@85
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@87
    move-object/from16 v20, v0

    #@89
    if-nez v20, :cond_1

    #@8b
    .line 9499
    :cond_0
    :goto_2
    add-int/lit8 v16, v16, 0x1

    #@8d
    goto :goto_1

    #@8e
    .line 9505
    :cond_1
    move-object/from16 v0, p0

    #@90
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    #@92
    move-object/from16 v20, v0

    #@94
    move-object/from16 v0, v19

    #@96
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@98
    move-object/from16 v21, v0

    #@9a
    invoke-virtual/range {v20 .. v21}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@9d
    move-result v20

    #@9e
    if-nez v20, :cond_2

    #@a0
    .line 9506
    const-string/jumbo v20, "WindowManager"

    #@a3
    new-instance v21, Ljava/lang/StringBuilder;

    #@a5
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@a8
    const-string/jumbo v22, "LEAKED SURFACE (session doesn\'t exist): "

    #@ab
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ae
    move-result-object v21

    #@af
    move-object/from16 v0, v21

    #@b1
    move-object/from16 v1, v18

    #@b3
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@b6
    move-result-object v21

    #@b7
    .line 9507
    const-string/jumbo v22, " surface="

    #@ba
    .line 9506
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bd
    move-result-object v21

    #@be
    .line 9507
    move-object/from16 v0, v19

    #@c0
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@c2
    move-object/from16 v22, v0

    #@c4
    .line 9506
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@c7
    move-result-object v21

    #@c8
    .line 9508
    const-string/jumbo v22, " token="

    #@cb
    .line 9506
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ce
    move-result-object v21

    #@cf
    .line 9508
    move-object/from16 v0, v18

    #@d1
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@d3
    move-object/from16 v22, v0

    #@d5
    .line 9506
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@d8
    move-result-object v21

    #@d9
    .line 9509
    const-string/jumbo v22, " pid="

    #@dc
    .line 9506
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@df
    move-result-object v21

    #@e0
    .line 9509
    move-object/from16 v0, v18

    #@e2
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@e4
    move-object/from16 v22, v0

    #@e6
    move-object/from16 v0, v22

    #@e8
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@ea
    move/from16 v22, v0

    #@ec
    .line 9506
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@ef
    move-result-object v21

    #@f0
    .line 9510
    const-string/jumbo v22, " uid="

    #@f3
    .line 9506
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@f6
    move-result-object v21

    #@f7
    .line 9510
    move-object/from16 v0, v18

    #@f9
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@fb
    move-object/from16 v22, v0

    #@fd
    move-object/from16 v0, v22

    #@ff
    iget v0, v0, Lcom/android/server/wm/Session;->mUid:I

    #@101
    move/from16 v22, v0

    #@103
    .line 9506
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@106
    move-result-object v21

    #@107
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10a
    move-result-object v21

    #@10b
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@10e
    .line 9511
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    #@111
    .line 9512
    move-object/from16 v0, p0

    #@113
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@115
    move-object/from16 v20, v0

    #@117
    move-object/from16 v0, v20

    #@119
    move-object/from16 v1, v18

    #@11b
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@11e
    .line 9513
    const/4 v10, 0x1

    #@11f
    goto/16 :goto_2

    #@121
    .line 9514
    :cond_2
    move-object/from16 v0, v18

    #@123
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@125
    move-object/from16 v20, v0

    #@127
    if-eqz v20, :cond_0

    #@129
    move-object/from16 v0, v18

    #@12b
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@12d
    move-object/from16 v20, v0

    #@12f
    move-object/from16 v0, v20

    #@131
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@133
    move/from16 v20, v0

    #@135
    if-eqz v20, :cond_0

    #@137
    .line 9515
    const-string/jumbo v20, "WindowManager"

    #@13a
    new-instance v21, Ljava/lang/StringBuilder;

    #@13c
    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    #@13f
    const-string/jumbo v22, "LEAKED SURFACE (app token hidden): "

    #@142
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@145
    move-result-object v21

    #@146
    move-object/from16 v0, v21

    #@148
    move-object/from16 v1, v18

    #@14a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@14d
    move-result-object v21

    #@14e
    .line 9516
    const-string/jumbo v22, " surface="

    #@151
    .line 9515
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@154
    move-result-object v21

    #@155
    .line 9516
    move-object/from16 v0, v19

    #@157
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@159
    move-object/from16 v22, v0

    #@15b
    .line 9515
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@15e
    move-result-object v21

    #@15f
    .line 9517
    const-string/jumbo v22, " token="

    #@162
    .line 9515
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@165
    move-result-object v21

    #@166
    .line 9517
    move-object/from16 v0, v18

    #@168
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@16a
    move-object/from16 v22, v0

    #@16c
    .line 9515
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@16f
    move-result-object v21

    #@170
    .line 9518
    const-string/jumbo v22, " saved="

    #@173
    .line 9515
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@176
    move-result-object v21

    #@177
    .line 9518
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->hasSavedSurface()Z

    #@17a
    move-result v22

    #@17b
    .line 9515
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    #@17e
    move-result-object v21

    #@17f
    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@182
    move-result-object v21

    #@183
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@186
    .line 9520
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    #@189
    .line 9521
    const/4 v10, 0x1

    #@18a
    goto/16 :goto_2

    #@18c
    .line 9496
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    .end local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :cond_3
    add-int/lit8 v6, v6, 0x1

    #@18e
    goto/16 :goto_0

    #@190
    .line 9526
    .end local v12    # "numWindows":I
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    if-nez v10, :cond_a

    #@192
    .line 9527
    const-string/jumbo v20, "WindowManager"

    #@195
    const-string/jumbo v21, "No leaked surfaces; killing applicatons!"

    #@198
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@19b
    .line 9528
    new-instance v13, Landroid/util/SparseIntArray;

    #@19d
    invoke-direct {v13}, Landroid/util/SparseIntArray;-><init>()V

    #@1a0
    .line 9529
    .local v13, "pidCandidates":Landroid/util/SparseIntArray;
    const/4 v6, 0x0

    #@1a1
    :goto_3
    if-ge v6, v11, :cond_a

    #@1a3
    .line 9530
    move-object/from16 v0, p0

    #@1a5
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1a7
    move-object/from16 v20, v0

    #@1a9
    move-object/from16 v0, v20

    #@1ab
    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@1ae
    move-result-object v20

    #@1af
    check-cast v20, Lcom/android/server/wm/DisplayContent;

    #@1b1
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@1b4
    move-result-object v17

    #@1b5
    .line 9531
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    #@1b8
    move-result v12

    #@1b9
    .line 9532
    .restart local v12    # "numWindows":I
    const/16 v16, 0x0

    #@1bb
    .restart local v16    # "winNdx":I
    :goto_4
    move/from16 v0, v16

    #@1bd
    if-ge v0, v12, :cond_7

    #@1bf
    .line 9533
    move-object/from16 v0, v17

    #@1c1
    move/from16 v1, v16

    #@1c3
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@1c6
    move-result-object v18

    #@1c7
    check-cast v18, Lcom/android/server/wm/WindowState;

    #@1c9
    .line 9534
    .restart local v18    # "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@1cb
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    #@1cd
    move-object/from16 v20, v0

    #@1cf
    move-object/from16 v0, v20

    #@1d1
    move-object/from16 v1, v18

    #@1d3
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@1d6
    move-result v20

    #@1d7
    if-eqz v20, :cond_6

    #@1d9
    .line 9532
    :cond_5
    :goto_5
    add-int/lit8 v16, v16, 0x1

    #@1db
    goto :goto_4

    #@1dc
    .line 9537
    :cond_6
    move-object/from16 v0, v18

    #@1de
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1e0
    move-object/from16 v19, v0

    #@1e2
    .line 9538
    .restart local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v19

    #@1e4
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@1e6
    move-object/from16 v20, v0

    #@1e8
    if-eqz v20, :cond_5

    #@1ea
    .line 9539
    move-object/from16 v0, v19

    #@1ec
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@1ee
    move-object/from16 v20, v0

    #@1f0
    move-object/from16 v0, v20

    #@1f2
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@1f4
    move/from16 v20, v0

    #@1f6
    move-object/from16 v0, v19

    #@1f8
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    #@1fa
    move-object/from16 v21, v0

    #@1fc
    move-object/from16 v0, v21

    #@1fe
    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    #@200
    move/from16 v21, v0

    #@202
    move/from16 v0, v20

    #@204
    move/from16 v1, v21

    #@206
    invoke-virtual {v13, v0, v1}, Landroid/util/SparseIntArray;->append(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@209
    goto :goto_5

    #@20a
    .line 9573
    .end local v6    # "displayNdx":I
    .end local v11    # "numDisplays":I
    .end local v12    # "numWindows":I
    .end local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    .end local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_0
    move-exception v20

    #@20b
    .line 9574
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@20e
    .line 9573
    throw v20

    #@20f
    .line 9542
    .restart local v6    # "displayNdx":I
    .restart local v11    # "numDisplays":I
    .restart local v12    # "numWindows":I
    .restart local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v16    # "winNdx":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_7
    :try_start_1
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    #@212
    move-result v20

    #@213
    if-lez v20, :cond_9

    #@215
    .line 9543
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    #@218
    move-result v20

    #@219
    move/from16 v0, v20

    #@21b
    new-array v14, v0, [I

    #@21d
    .line 9544
    .local v14, "pids":[I
    const/4 v8, 0x0

    #@21e
    .local v8, "i":I
    :goto_6
    array-length v0, v14

    #@21f
    move/from16 v20, v0

    #@221
    move/from16 v0, v20

    #@223
    if-ge v8, v0, :cond_8

    #@225
    .line 9545
    invoke-virtual {v13, v8}, Landroid/util/SparseIntArray;->keyAt(I)I

    #@228
    move-result v20

    #@229
    aput v20, v14, v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@22b
    .line 9544
    add-int/lit8 v8, v8, 0x1

    #@22d
    goto :goto_6

    #@22e
    .line 9548
    :cond_8
    :try_start_2
    move-object/from16 v0, p0

    #@230
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@232
    move-object/from16 v20, v0

    #@234
    const-string/jumbo v21, "Free memory"

    #@237
    move-object/from16 v0, v20

    #@239
    move-object/from16 v1, v21

    #@23b
    move/from16 v2, p3

    #@23d
    invoke-interface {v0, v14, v1, v2}, Landroid/app/IActivityManager;->killPids([ILjava/lang/String;Z)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@240
    move-result v20

    #@241
    if-eqz v20, :cond_9

    #@243
    .line 9549
    const/4 v9, 0x1

    #@244
    .line 9529
    .end local v8    # "i":I
    .end local v14    # "pids":[I
    :cond_9
    :goto_7
    add-int/lit8 v6, v6, 0x1

    #@246
    goto/16 :goto_3

    #@248
    .line 9557
    .end local v12    # "numWindows":I
    .end local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_a
    if-nez v10, :cond_b

    #@24a
    if-eqz v9, :cond_d

    #@24c
    .line 9560
    :cond_b
    :try_start_3
    const-string/jumbo v20, "WindowManager"

    #@24f
    const-string/jumbo v21, "Looks like we have reclaimed some memory, clearing surface for retry."

    #@252
    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@255
    .line 9561
    if-eqz v15, :cond_c

    #@257
    .line 9564
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    #@25a
    .line 9565
    move-object/from16 v0, p1

    #@25c
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@25e
    move-object/from16 v20, v0

    #@260
    move-object/from16 v0, v20

    #@262
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@264
    move-object/from16 v20, v0

    #@266
    move-object/from16 v0, p0

    #@268
    move-object/from16 v1, v20

    #@26a
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@26d
    .line 9569
    :cond_c
    :try_start_4
    move-object/from16 v0, p1

    #@26f
    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    #@271
    move-object/from16 v20, v0

    #@273
    move-object/from16 v0, v20

    #@275
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@277
    move-object/from16 v20, v0

    #@279
    invoke-interface/range {v20 .. v20}, Landroid/view/IWindow;->dispatchGetNewSurface()V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@27c
    .line 9574
    :cond_d
    :goto_8
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@27f
    .line 9577
    if-nez v10, :cond_e

    #@281
    .end local v9    # "killedApps":Z
    :goto_9
    return v9

    #@282
    .restart local v9    # "killedApps":Z
    :cond_e
    const/4 v9, 0x1

    #@283
    goto :goto_9

    #@284
    .line 9570
    :catch_0
    move-exception v7

    #@285
    .local v7, "e":Landroid/os/RemoteException;
    goto :goto_8

    #@286
    .line 9551
    .end local v7    # "e":Landroid/os/RemoteException;
    .restart local v8    # "i":I
    .restart local v12    # "numWindows":I
    .restart local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v14    # "pids":[I
    .restart local v16    # "winNdx":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :catch_1
    move-exception v7

    #@287
    .restart local v7    # "e":Landroid/os/RemoteException;
    goto :goto_7
.end method

.method public reenableKeyguard(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 5371
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 5373
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 5376
    :cond_0
    if-nez p1, :cond_1

    #@16
    .line 5377
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v1, "token == null"

    #@1b
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v0

    #@1f
    .line 5380
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@21
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    #@23
    .line 5381
    const/4 v2, 0x2

    #@24
    .line 5380
    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@27
    move-result-object v1

    #@28
    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    #@2b
    .line 5370
    return-void
.end method

.method public reevaluateStatusBarVisibility()V
    .locals 4

    #@0
    .prologue
    .line 9991
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 9992
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@7
    invoke-interface {v1, v3}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    #@a
    move-result v0

    #@b
    .line 9993
    .local v0, "visibility":I
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)Z

    #@e
    move-result v1

    #@f
    if-eqz v1, :cond_0

    #@11
    .line 9994
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@13
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    :cond_0
    monitor-exit v2

    #@17
    .line 9990
    return-void

    #@18
    .line 9991
    .end local v0    # "visibility":I
    :catchall_0
    move-exception v1

    #@19
    monitor-exit v2

    #@1a
    throw v1
.end method

.method public registerDockedStackListener(Landroid/view/IDockedStackListener;)V
    .locals 2
    .param p1, "listener"    # Landroid/view/IDockedStackListener;

    #@0
    .prologue
    .line 10975
    const-string/jumbo v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    #@3
    .line 10976
    const-string/jumbo v1, "registerDockedStackListener()"

    #@6
    .line 10975
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 10977
    return-void

    #@d
    .line 10980
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@10
    move-result-object v0

    #@11
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@13
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->registerDockedStackListener(Landroid/view/IDockedStackListener;)V

    #@16
    .line 10974
    return-void
.end method

.method public registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    #@0
    .prologue
    .line 5589
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->registerInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@5
    .line 5588
    return-void
.end method

.method public registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V
    .locals 3
    .param p1, "shortcutCode"    # J
    .param p3, "shortcutKeyReceiver"    # Lcom/android/internal/policy/IShortcutService;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    #@0
    .prologue
    .line 11152
    const-string/jumbo v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    #@3
    .line 11153
    const-string/jumbo v1, "registerShortcutKey"

    #@6
    .line 11152
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 11154
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    .line 11155
    const-string/jumbo v1, "Requires REGISTER_WINDOW_MANAGER_LISTENERS permission"

    #@11
    .line 11154
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 11157
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@17
    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V

    #@1a
    .line 11151
    return-void
.end method

.method public relayoutWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/content/res/Configuration;Landroid/view/Surface;)I
    .locals 28
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "requestedWidth"    # I
    .param p6, "requestedHeight"    # I
    .param p7, "viewVisibility"    # I
    .param p8, "flags"    # I
    .param p9, "outFrame"    # Landroid/graphics/Rect;
    .param p10, "outOverscanInsets"    # Landroid/graphics/Rect;
    .param p11, "outContentInsets"    # Landroid/graphics/Rect;
    .param p12, "outVisibleInsets"    # Landroid/graphics/Rect;
    .param p13, "outStableInsets"    # Landroid/graphics/Rect;
    .param p14, "outOutsets"    # Landroid/graphics/Rect;
    .param p15, "outBackdropFrame"    # Landroid/graphics/Rect;
    .param p16, "outConfig"    # Landroid/content/res/Configuration;
    .param p17, "outSurface"    # Landroid/view/Surface;

    #@0
    .prologue
    .line 2752
    const/4 v6, 0x0

    #@1
    .line 2755
    .local v6, "result":I
    move-object/from16 v0, p0

    #@3
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@5
    const-string/jumbo v5, "android.permission.STATUS_BAR"

    #@8
    invoke-virtual {v4, v5}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@b
    move-result v4

    #@c
    if-nez v4, :cond_0

    #@e
    const/16 v16, 0x1

    #@10
    .line 2758
    .local v16, "hasStatusBarPermission":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@13
    move-result-wide v20

    #@14
    .line 2759
    .local v20, "origId":J
    move-object/from16 v0, p0

    #@16
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@18
    move-object/from16 v25, v0

    #@1a
    monitor-enter v25

    #@1b
    .line 2760
    const/4 v4, 0x0

    #@1c
    :try_start_0
    move-object/from16 v0, p0

    #@1e
    move-object/from16 v1, p1

    #@20
    move-object/from16 v2, p2

    #@22
    invoke-virtual {v0, v1, v2, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@25
    move-result-object v7

    #@26
    .line 2761
    .local v7, "win":Lcom/android/server/wm/WindowState;
    if-nez v7, :cond_1

    #@28
    .line 2762
    const/4 v4, 0x0

    #@29
    monitor-exit v25

    #@2a
    return v4

    #@2b
    .line 2755
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    .end local v16    # "hasStatusBarPermission":Z
    .end local v20    # "origId":J
    :cond_0
    const/16 v16, 0x0

    #@2d
    .restart local v16    # "hasStatusBarPermission":Z
    goto :goto_0

    #@2e
    .line 2765
    .restart local v7    # "win":Lcom/android/server/wm/WindowState;
    .restart local v20    # "origId":J
    :cond_1
    :try_start_1
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@30
    .line 2766
    .local v8, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/16 v4, 0x8

    #@32
    move/from16 v0, p7

    #@34
    if-eq v0, v4, :cond_2

    #@36
    .line 2767
    move/from16 v0, p5

    #@38
    move/from16 v1, p6

    #@3a
    invoke-virtual {v7, v0, v1}, Lcom/android/server/wm/WindowState;->setRequestedSize(II)V

    #@3d
    .line 2770
    :cond_2
    const/4 v9, 0x0

    #@3e
    .line 2771
    .local v9, "attrChanges":I
    const/4 v14, 0x0

    #@3f
    .line 2772
    .local v14, "flagChanges":I
    if-eqz p4, :cond_7

    #@41
    .line 2773
    move-object/from16 v0, p0

    #@43
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@45
    move-object/from16 v0, p4

    #@47
    invoke-interface {v4, v0}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    #@4a
    .line 2775
    iget v4, v7, Lcom/android/server/wm/WindowState;->mSeq:I

    #@4c
    move/from16 v0, p3

    #@4e
    if-ne v0, v4, :cond_4

    #@50
    .line 2776
    move-object/from16 v0, p4

    #@52
    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->systemUiVisibility:I

    #@54
    .line 2777
    move-object/from16 v0, p4

    #@56
    iget v5, v0, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    #@58
    .line 2776
    or-int v19, v4, v5

    #@5a
    .line 2778
    .local v19, "systemUiVisibility":I
    const/high16 v4, 0x3ff0000

    #@5c
    and-int v4, v4, v19

    #@5e
    if-eqz v4, :cond_3

    #@60
    .line 2779
    if-nez v16, :cond_3

    #@62
    .line 2780
    const v4, -0x3ff0001

    #@65
    and-int v19, v19, v4

    #@67
    .line 2783
    :cond_3
    move/from16 v0, v19

    #@69
    iput v0, v7, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@6b
    .line 2785
    .end local v19    # "systemUiVisibility":I
    :cond_4
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@6d
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@6f
    move-object/from16 v0, p4

    #@71
    iget v5, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    #@73
    if-eq v4, v5, :cond_5

    #@75
    .line 2786
    new-instance v4, Ljava/lang/IllegalArgumentException;

    #@77
    .line 2787
    const-string/jumbo v5, "Window type can not be changed after the window is added."

    #@7a
    .line 2786
    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@7d
    throw v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@7e
    .line 2759
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v9    # "attrChanges":I
    .end local v14    # "flagChanges":I
    :catchall_0
    move-exception v4

    #@7f
    monitor-exit v25

    #@80
    throw v4

    #@81
    .line 2791
    .restart local v7    # "win":Lcom/android/server/wm/WindowState;
    .restart local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v9    # "attrChanges":I
    .restart local v14    # "flagChanges":I
    :cond_5
    :try_start_2
    move-object/from16 v0, p4

    #@83
    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@85
    and-int/lit16 v4, v4, 0x2000

    #@87
    if-eqz v4, :cond_6

    #@89
    .line 2793
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@8b
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->x:I

    #@8d
    move-object/from16 v0, p4

    #@8f
    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->x:I

    #@91
    .line 2794
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@93
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->y:I

    #@95
    move-object/from16 v0, p4

    #@97
    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->y:I

    #@99
    .line 2795
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@9b
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->width:I

    #@9d
    move-object/from16 v0, p4

    #@9f
    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    #@a1
    .line 2796
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@a3
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->height:I

    #@a5
    move-object/from16 v0, p4

    #@a7
    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    #@a9
    .line 2799
    :cond_6
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@ab
    iget v5, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@ad
    move-object/from16 v0, p4

    #@af
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@b1
    move/from16 v26, v0

    #@b3
    xor-int v14, v5, v26

    #@b5
    iput v14, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@b7
    .line 2800
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@b9
    move-object/from16 v0, p4

    #@bb
    invoke-virtual {v4, v0}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    #@be
    move-result v9

    #@bf
    .line 2801
    and-int/lit16 v4, v9, 0x4001

    #@c1
    if-eqz v4, :cond_7

    #@c3
    .line 2803
    const/4 v4, 0x1

    #@c4
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    #@c6
    .line 2809
    :cond_7
    and-int/lit8 v4, p8, 0x2

    #@c8
    if-eqz v4, :cond_19

    #@ca
    const/4 v4, 0x1

    #@cb
    :goto_1
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceDestroyDeferred:Z

    #@cd
    .line 2811
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@cf
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    #@d1
    and-int/lit16 v4, v4, 0x80

    #@d3
    if-eqz v4, :cond_1a

    #@d5
    const/4 v4, 0x1

    #@d6
    .line 2810
    :goto_2
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mEnforceSizeCompat:Z

    #@d8
    .line 2812
    and-int/lit16 v4, v9, 0x80

    #@da
    if-eqz v4, :cond_8

    #@dc
    .line 2813
    move-object/from16 v0, p4

    #@de
    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->alpha:F

    #@e0
    iput v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mAlpha:F

    #@e2
    .line 2815
    :cond_8
    iget v4, v7, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    #@e4
    iget v5, v7, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    #@e6
    invoke-virtual {v7, v4, v5}, Lcom/android/server/wm/WindowState;->setWindowScale(II)V

    #@e9
    .line 2817
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@eb
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@ed
    iget v4, v4, Landroid/graphics/Rect;->left:I

    #@ef
    if-nez v4, :cond_9

    #@f1
    .line 2818
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@f3
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@f5
    iget v4, v4, Landroid/graphics/Rect;->top:I

    #@f7
    if-eqz v4, :cond_1b

    #@f9
    .line 2821
    :cond_9
    :goto_3
    const/4 v4, 0x0

    #@fa
    invoke-virtual {v8, v4}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    #@fd
    .line 2824
    :cond_a
    const v4, 0x20008

    #@100
    and-int/2addr v4, v14

    #@101
    if-eqz v4, :cond_1c

    #@103
    const/16 v17, 0x1

    #@105
    .line 2825
    .local v17, "imMayMove":Z
    :goto_4
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    #@108
    move-result v18

    #@109
    .line 2826
    .local v18, "isDefaultDisplay":Z
    if-eqz v18, :cond_1f

    #@10b
    iget v4, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@10d
    move/from16 v0, p7

    #@10f
    if-ne v4, v0, :cond_b

    #@111
    .line 2827
    and-int/lit8 v4, v14, 0x8

    #@113
    if-eqz v4, :cond_1d

    #@115
    .line 2826
    :cond_b
    const/4 v15, 0x1

    #@116
    .line 2830
    .local v15, "focusMayChange":Z
    :goto_5
    iget v4, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@118
    move/from16 v0, p7

    #@11a
    if-eq v4, v0, :cond_21

    #@11c
    .line 2831
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@11e
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@120
    const/high16 v5, 0x100000

    #@122
    and-int/2addr v4, v5

    #@123
    if-eqz v4, :cond_20

    #@125
    const/16 v24, 0x1

    #@127
    .line 2832
    .local v24, "wallpaperMayMove":Z
    :goto_6
    const/high16 v4, 0x100000

    #@129
    and-int/2addr v4, v14

    #@12a
    if-eqz v4, :cond_22

    #@12c
    const/4 v4, 0x1

    #@12d
    :goto_7
    or-int v24, v24, v4

    #@12f
    .line 2833
    .local v24, "wallpaperMayMove":Z
    and-int/lit16 v4, v14, 0x2000

    #@131
    if-eqz v4, :cond_c

    #@133
    iget-object v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@135
    if-eqz v4, :cond_c

    #@137
    .line 2834
    iget-object v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@139
    move-object/from16 v0, p0

    #@13b
    invoke-virtual {v0, v7}, Lcom/android/server/wm/WindowManagerService;->isSecureLocked(Lcom/android/server/wm/WindowState;)Z

    #@13e
    move-result v5

    #@13f
    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowSurfaceController;->setSecure(Z)V

    #@142
    .line 2837
    :cond_c
    const/4 v4, 0x1

    #@143
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    #@145
    .line 2838
    const/4 v4, 0x1

    #@146
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mInRelayout:Z

    #@148
    .line 2840
    iget v10, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@14a
    .line 2841
    .local v10, "oldVisibility":I
    move/from16 v0, p7

    #@14c
    iput v0, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    #@14e
    .line 2848
    if-nez p7, :cond_d

    #@150
    .line 2849
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@152
    if-eqz v4, :cond_23

    #@154
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@156
    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@158
    if-eqz v4, :cond_23

    #@15a
    .line 2872
    :cond_d
    const/4 v4, 0x0

    #@15b
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    #@15d
    .line 2873
    const/4 v4, 0x0

    #@15e
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    #@160
    .line 2875
    if-eqz v10, :cond_26

    #@162
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    #@165
    move-result v23

    #@166
    .line 2883
    :goto_8
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    #@169
    move-result v4

    #@16a
    if-eqz v4, :cond_e

    #@16c
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@16e
    if-eqz v4, :cond_27

    #@170
    .line 2903
    .end local v15    # "focusMayChange":Z
    :cond_e
    :goto_9
    invoke-virtual/range {p17 .. p17}, Landroid/view/Surface;->release()V

    #@173
    .line 2907
    :goto_a
    if-eqz v15, :cond_f

    #@175
    .line 2909
    const/4 v4, 0x3

    #@176
    .line 2910
    const/4 v5, 0x0

    #@177
    .line 2909
    move-object/from16 v0, p0

    #@179
    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@17c
    move-result v4

    #@17d
    if-eqz v4, :cond_f

    #@17f
    .line 2911
    const/16 v17, 0x0

    #@181
    .line 2918
    :cond_f
    and-int/lit8 v4, v6, 0x2

    #@183
    if-eqz v4, :cond_29

    #@185
    const/16 v22, 0x1

    #@187
    .line 2919
    .local v22, "toBeDisplayed":Z
    :goto_b
    if-eqz v17, :cond_11

    #@189
    const/4 v4, 0x0

    #@18a
    move-object/from16 v0, p0

    #@18c
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@18f
    move-result v4

    #@190
    if-nez v4, :cond_10

    #@192
    if-eqz v22, :cond_11

    #@194
    .line 2925
    :cond_10
    move-object/from16 v0, p0

    #@196
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@198
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@19b
    move-result-object v5

    #@19c
    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@19f
    .line 2928
    :cond_11
    if-eqz v24, :cond_12

    #@1a1
    .line 2929
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1a4
    move-result-object v4

    #@1a5
    iget v5, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@1a7
    or-int/lit8 v5, v5, 0x4

    #@1a9
    iput v5, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@1ab
    .line 2933
    :cond_12
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@1ae
    .line 2934
    and-int/lit8 v4, p8, 0x1

    #@1b0
    if-eqz v4, :cond_2a

    #@1b2
    const/4 v4, 0x1

    #@1b3
    :goto_c
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@1b5
    .line 2935
    const/4 v4, 0x0

    #@1b6
    move-object/from16 v0, p0

    #@1b8
    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@1bb
    move-result v11

    #@1bc
    .line 2936
    .local v11, "configChanged":Z
    move-object/from16 v0, p0

    #@1be
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@1c0
    invoke-virtual {v4}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@1c3
    .line 2937
    if-eqz v22, :cond_13

    #@1c5
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@1c7
    if-eqz v4, :cond_13

    #@1c9
    .line 2938
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@1cc
    move-result-object v12

    #@1cd
    .line 2939
    .local v12, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, p0

    #@1cf
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@1d1
    .line 2940
    iget v5, v12, Landroid/view/DisplayInfo;->logicalWidth:I

    #@1d3
    iget v0, v12, Landroid/view/DisplayInfo;->logicalHeight:I

    #@1d5
    move/from16 v26, v0

    #@1d7
    const/16 v27, 0x0

    #@1d9
    .line 2939
    move/from16 v0, v26

    #@1db
    move/from16 v1, v27

    #@1dd
    invoke-virtual {v4, v7, v5, v0, v1}, Lcom/android/server/wm/WallpaperController;->updateWallpaperOffset(Lcom/android/server/wm/WindowState;IIZ)Z

    #@1e0
    .line 2942
    .end local v12    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_13
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1e2
    if-eqz v4, :cond_14

    #@1e4
    .line 2943
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@1e6
    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@1e9
    .line 2945
    :cond_14
    iget-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mReportSurfaceResized:Z

    #@1eb
    if-eqz v4, :cond_15

    #@1ed
    .line 2946
    const/4 v4, 0x0

    #@1ee
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mReportSurfaceResized:Z

    #@1f0
    .line 2947
    or-int/lit8 v6, v6, 0x20

    #@1f2
    .line 2949
    :cond_15
    move-object/from16 v0, p0

    #@1f4
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1f6
    invoke-interface {v4, v7}, Landroid/view/WindowManagerPolicy;->isNavBarForcedShownLw(Landroid/view/WindowManagerPolicy$WindowState;)Z

    #@1f9
    move-result v4

    #@1fa
    if-eqz v4, :cond_16

    #@1fc
    .line 2950
    or-int/lit8 v6, v6, 0x40

    #@1fe
    .line 2952
    :cond_16
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    #@201
    move-result v4

    #@202
    if-nez v4, :cond_17

    #@204
    .line 2953
    const/4 v4, 0x0

    #@205
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mResizedWhileGone:Z

    #@207
    .line 2955
    :cond_17
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    #@209
    move-object/from16 v0, p9

    #@20b
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@20e
    .line 2956
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    #@210
    move-object/from16 v0, p10

    #@212
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@215
    .line 2957
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@217
    move-object/from16 v0, p11

    #@219
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@21c
    .line 2958
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    #@21e
    move-object/from16 v0, p12

    #@220
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@223
    .line 2959
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    #@225
    move-object/from16 v0, p13

    #@227
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@22a
    .line 2960
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    #@22c
    move-object/from16 v0, p14

    #@22e
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@231
    .line 2961
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@233
    invoke-virtual {v7, v4}, Lcom/android/server/wm/WindowState;->getBackdropFrame(Landroid/graphics/Rect;)Landroid/graphics/Rect;

    #@236
    move-result-object v4

    #@237
    move-object/from16 v0, p15

    #@239
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@23c
    .line 2973
    move-object/from16 v0, p0

    #@23e
    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    #@240
    if-eqz v4, :cond_2b

    #@242
    const/4 v4, 0x1

    #@243
    :goto_d
    or-int/2addr v6, v4

    #@244
    .line 2975
    move-object/from16 v0, p0

    #@246
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@248
    const/4 v5, 0x1

    #@249
    invoke-virtual {v4, v5}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@24c
    .line 2980
    const/4 v4, 0x0

    #@24d
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mInRelayout:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@24f
    monitor-exit v25

    #@250
    .line 2983
    if-eqz v11, :cond_18

    #@252
    .line 2984
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@255
    .line 2986
    :cond_18
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@258
    .line 2987
    return v6

    #@259
    .line 2809
    .end local v10    # "oldVisibility":I
    .end local v11    # "configChanged":Z
    .end local v17    # "imMayMove":Z
    .end local v18    # "isDefaultDisplay":Z
    .end local v22    # "toBeDisplayed":Z
    .end local v24    # "wallpaperMayMove":Z
    :cond_19
    const/4 v4, 0x0

    #@25a
    goto/16 :goto_1

    #@25c
    .line 2811
    :cond_1a
    const/4 v4, 0x0

    #@25d
    goto/16 :goto_2

    #@25f
    .line 2819
    :cond_1b
    :try_start_3
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@261
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@263
    iget v4, v4, Landroid/graphics/Rect;->right:I

    #@265
    if-nez v4, :cond_9

    #@267
    .line 2820
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@269
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    #@26b
    iget v4, v4, Landroid/graphics/Rect;->bottom:I

    #@26d
    if-eqz v4, :cond_a

    #@26f
    goto/16 :goto_3

    #@271
    .line 2824
    :cond_1c
    const/16 v17, 0x0

    #@273
    .restart local v17    # "imMayMove":Z
    goto/16 :goto_4

    #@275
    .line 2828
    .restart local v18    # "isDefaultDisplay":Z
    :cond_1d
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    #@277
    if-eqz v4, :cond_1e

    #@279
    const/4 v15, 0x0

    #@27a
    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_5

    #@27c
    .end local v15    # "focusMayChange":Z
    :cond_1e
    const/4 v15, 0x1

    #@27d
    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_5

    #@27f
    .line 2826
    .end local v15    # "focusMayChange":Z
    :cond_1f
    const/4 v15, 0x0

    #@280
    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_5

    #@282
    .line 2831
    :cond_20
    const/16 v24, 0x0

    #@284
    .local v24, "wallpaperMayMove":Z
    goto/16 :goto_6

    #@286
    .line 2830
    .end local v24    # "wallpaperMayMove":Z
    :cond_21
    const/16 v24, 0x0

    #@288
    .restart local v24    # "wallpaperMayMove":Z
    goto/16 :goto_6

    #@28a
    .line 2832
    :cond_22
    const/4 v4, 0x0

    #@28b
    goto/16 :goto_7

    #@28d
    .restart local v10    # "oldVisibility":I
    .local v24, "wallpaperMayMove":Z
    :cond_23
    move-object/from16 v4, p0

    #@28f
    move-object/from16 v5, p16

    #@291
    .line 2850
    invoke-direct/range {v4 .. v10}, Lcom/android/server/wm/WindowManagerService;->relayoutVisibleWindow(Landroid/content/res/Configuration;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;II)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@294
    move-result v6

    #@295
    .line 2853
    :try_start_4
    move-object/from16 v0, p0

    #@297
    move-object/from16 v1, p17

    #@299
    invoke-direct {v0, v1, v6, v7, v8}, Lcom/android/server/wm/WindowManagerService;->createSurfaceControl(Landroid/view/Surface;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@29c
    move-result v6

    #@29d
    .line 2863
    and-int/lit8 v4, v6, 0x2

    #@29f
    if-eqz v4, :cond_24

    #@2a1
    .line 2864
    move/from16 v15, v18

    #@2a3
    .line 2866
    .end local v15    # "focusMayChange":Z
    :cond_24
    :try_start_5
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@2a5
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    #@2a7
    const/16 v5, 0x7db

    #@2a9
    if-ne v4, v5, :cond_25

    #@2ab
    move-object/from16 v0, p0

    #@2ad
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@2af
    if-nez v4, :cond_25

    #@2b1
    .line 2867
    move-object/from16 v0, p0

    #@2b3
    iput-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@2b5
    .line 2868
    const/16 v17, 0x1

    #@2b7
    .line 2870
    :cond_25
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->adjustStartingWindowFlags()V

    #@2ba
    goto/16 :goto_a

    #@2bc
    .line 2854
    .restart local v15    # "focusMayChange":Z
    :catch_0
    move-exception v13

    #@2bd
    .line 2855
    .local v13, "e":Ljava/lang/Exception;
    move-object/from16 v0, p0

    #@2bf
    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@2c1
    const/4 v5, 0x1

    #@2c2
    invoke-virtual {v4, v5}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@2c5
    .line 2857
    const-string/jumbo v4, "WindowManager"

    #@2c8
    new-instance v5, Ljava/lang/StringBuilder;

    #@2ca
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@2cd
    const-string/jumbo v26, "Exception thrown when creating surface for client "

    #@2d0
    move-object/from16 v0, v26

    #@2d2
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d5
    move-result-object v5

    #@2d6
    move-object/from16 v0, p2

    #@2d8
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2db
    move-result-object v5

    #@2dc
    .line 2858
    const-string/jumbo v26, " ("

    #@2df
    .line 2857
    move-object/from16 v0, v26

    #@2e1
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e4
    move-result-object v5

    #@2e5
    .line 2858
    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@2e7
    move-object/from16 v26, v0

    #@2e9
    invoke-virtual/range {v26 .. v26}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@2ec
    move-result-object v26

    #@2ed
    .line 2857
    move-object/from16 v0, v26

    #@2ef
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    #@2f2
    move-result-object v5

    #@2f3
    .line 2858
    const-string/jumbo v26, ")"

    #@2f6
    .line 2857
    move-object/from16 v0, v26

    #@2f8
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2fb
    move-result-object v5

    #@2fc
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2ff
    move-result-object v5

    #@300
    invoke-static {v4, v5, v13}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@303
    .line 2860
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@306
    .line 2861
    const/4 v4, 0x0

    #@307
    monitor-exit v25

    #@308
    return v4

    #@309
    .line 2875
    .end local v13    # "e":Ljava/lang/Exception;
    :cond_26
    const/16 v23, 0x0

    #@30b
    .local v23, "usingSavedSurfaceBeforeVisible":Z
    goto/16 :goto_8

    #@30d
    .line 2884
    .end local v23    # "usingSavedSurfaceBeforeVisible":Z
    :cond_27
    if-nez v23, :cond_e

    #@30f
    .line 2896
    :try_start_6
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    #@311
    if-nez v4, :cond_28

    #@313
    .line 2897
    move-object/from16 v0, p0

    #@315
    move/from16 v1, v18

    #@317
    invoke-direct {v0, v7, v8, v1, v15}, Lcom/android/server/wm/WindowManagerService;->tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;ZZ)Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@31a
    move-result v15

    #@31b
    .line 2900
    .end local v15    # "focusMayChange":Z
    :cond_28
    const/4 v6, 0x4

    #@31c
    goto/16 :goto_9

    #@31e
    .line 2918
    :cond_29
    const/16 v22, 0x0

    #@320
    .restart local v22    # "toBeDisplayed":Z
    goto/16 :goto_b

    #@322
    .line 2934
    :cond_2a
    const/4 v4, 0x0

    #@323
    goto/16 :goto_c

    #@325
    .line 2973
    .restart local v11    # "configChanged":Z
    :cond_2b
    const/4 v4, 0x0

    #@326
    goto/16 :goto_d
.end method

.method public removeAppStartingWindow(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 4253
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 4254
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@5
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@8
    move-result-object v1

    #@9
    check-cast v1, Lcom/android/server/wm/WindowToken;

    #@b
    iget-object v0, v1, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@d
    .line 4255
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    monitor-exit v2

    #@11
    .line 4252
    return-void

    #@12
    .line 4253
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method public removeAppToken(Landroid/os/IBinder;)V
    .locals 14
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 4688
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4689
    const-string/jumbo v2, "removeAppToken()"

    #@6
    .line 4688
    invoke-direct {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 4690
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 4693
    :cond_0
    const/4 v1, 0x0

    #@16
    .line 4694
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    const/4 v12, 0x0

    #@17
    .line 4695
    .local v12, "startingToken":Lcom/android/server/wm/AppWindowToken;
    const/4 v8, 0x0

    #@18
    .line 4697
    .local v8, "delayed":Z
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@1b
    move-result-wide v10

    #@1c
    .line 4698
    .local v10, "origId":J
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1e
    monitor-enter v13

    #@1f
    .line 4699
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@21
    invoke-virtual {v0, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@24
    move-result-object v7

    #@25
    check-cast v7, Lcom/android/server/wm/WindowToken;

    #@27
    .line 4700
    .local v7, "basewtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_8

    #@29
    iget-object v1, v7, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    #@2b
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_8

    #@2d
    .line 4703
    iget-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    #@2f
    .line 4702
    const/4 v2, 0x0

    #@30
    const/4 v3, 0x0

    #@31
    .line 4703
    const/4 v4, -0x1

    #@32
    const/4 v5, 0x1

    #@33
    move-object v0, p0

    #@34
    .line 4702
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    #@37
    move-result v8

    #@38
    .line 4704
    .local v8, "delayed":Z
    const/4 v0, 0x0

    #@39
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@3b
    .line 4705
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@3d
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@40
    .line 4706
    const/4 v0, 0x0

    #@41
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@43
    .line 4707
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@45
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@48
    move-result v0

    #@49
    if-eqz v0, :cond_6

    #@4b
    .line 4708
    const/4 v8, 0x1

    #@4c
    .line 4719
    .end local v8    # "delayed":Z
    :cond_1
    :goto_0
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@4e
    iget-object v9, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@50
    .line 4720
    .local v9, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v8, :cond_2

    #@52
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@54
    invoke-virtual {v0}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    #@57
    move-result v0

    #@58
    if-eqz v0, :cond_7

    #@5a
    .line 4730
    :cond_2
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@5c
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    #@5f
    .line 4731
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@61
    const/4 v2, 0x0

    #@62
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    #@64
    .line 4732
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->removeAppFromTaskLocked()V

    #@67
    .line 4735
    :goto_1
    const/4 v0, 0x1

    #@68
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@6a
    .line 4736
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@6c
    if-eqz v0, :cond_3

    #@6e
    .line 4737
    move-object v12, v1

    #@6f
    .line 4739
    .end local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_3
    const/4 v0, 0x1

    #@70
    const/4 v2, 0x1

    #@71
    invoke-virtual {p0, v1, v0, v2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@74
    .line 4740
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@76
    if-ne v0, v1, :cond_4

    #@78
    .line 4742
    const/4 v0, 0x0

    #@79
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@7b
    .line 4743
    const/4 v0, 0x0

    #@7c
    const/4 v2, 0x1

    #@7d
    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@80
    .line 4744
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@82
    const/4 v2, 0x0

    #@83
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    #@86
    .line 4750
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_4
    :goto_2
    if-nez v8, :cond_5

    #@88
    if-eqz v1, :cond_5

    #@8a
    .line 4751
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@8d
    .line 4755
    :cond_5
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@90
    monitor-exit v13

    #@91
    .line 4757
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@94
    .line 4687
    return-void

    #@95
    .line 4709
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v8    # "delayed":Z
    .restart local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_6
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@97
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@9a
    move-result v0

    #@9b
    if-eqz v0, :cond_1

    #@9d
    .line 4710
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@9f
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@a2
    .line 4711
    const/4 v8, 0x1

    #@a3
    .local v8, "delayed":Z
    goto :goto_0

    #@a4
    .line 4724
    .end local v8    # "delayed":Z
    .restart local v9    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_7
    iget-object v0, v9, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    #@a6
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->add(Ljava/lang/Object;)Z

    #@a9
    .line 4725
    const/4 v0, 0x1

    #@aa
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@ac
    goto :goto_1

    #@ad
    .line 4698
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v7    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v0

    #@ae
    monitor-exit v13

    #@af
    throw v0

    #@b0
    .line 4747
    .restart local v7    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .restart local v8    # "delayed":Z
    .restart local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_8
    :try_start_2
    const-string/jumbo v0, "WindowManager"

    #@b3
    new-instance v2, Ljava/lang/StringBuilder;

    #@b5
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@b8
    const-string/jumbo v3, "Attempted to remove non-existing app token: "

    #@bb
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@be
    move-result-object v2

    #@bf
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@c2
    move-result-object v2

    #@c3
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c6
    move-result-object v2

    #@c7
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@ca
    goto :goto_2
.end method

.method removeInputConsumer()Z
    .locals 4

    #@0
    .prologue
    const/4 v3, 0x1

    #@1
    .line 10034
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v1

    #@4
    .line 10035
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@6
    if-eqz v0, :cond_0

    #@8
    .line 10036
    const/4 v0, 0x0

    #@9
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@b
    .line 10037
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@d
    const/4 v2, 0x1

    #@e
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v1

    #@12
    .line 10038
    return v3

    #@13
    .line 10040
    :cond_0
    const/4 v0, 0x0

    #@14
    monitor-exit v1

    #@15
    return v0

    #@16
    .line 10034
    :catchall_0
    move-exception v0

    #@17
    monitor-exit v1

    #@18
    throw v0
.end method

.method public removeRotationWatcher(Landroid/view/IRotationWatcher;)V
    .locals 8
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    #@0
    .prologue
    .line 6766
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v4

    #@4
    .line 6767
    .local v4, "watcherBinder":Landroid/os/IBinder;
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v6

    #@7
    .line 6768
    const/4 v1, 0x0

    #@8
    .local v1, "i":I
    :goto_0
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@a
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@d
    move-result v5

    #@e
    if-ge v1, v5, :cond_2

    #@10
    .line 6769
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@12
    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@15
    move-result-object v3

    #@16
    check-cast v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@18
    .line 6770
    .local v3, "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@1a
    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@1d
    move-result-object v5

    #@1e
    if-ne v4, v5, :cond_1

    #@20
    .line 6771
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@22
    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    #@25
    move-result-object v2

    #@26
    check-cast v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@28
    .line 6772
    .local v2, "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@2a
    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@2d
    move-result-object v0

    #@2e
    .line 6773
    .local v0, "binder":Landroid/os/IBinder;
    if-eqz v0, :cond_0

    #@30
    .line 6774
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->deathRecipient:Landroid/os/IBinder$DeathRecipient;

    #@32
    const/4 v7, 0x0

    #@33
    invoke-interface {v0, v5, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@36
    .line 6776
    :cond_0
    add-int/lit8 v1, v1, -0x1

    #@38
    .line 6768
    .end local v0    # "binder":Landroid/os/IBinder;
    .end local v2    # "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_1
    add-int/lit8 v1, v1, 0x1

    #@3a
    goto :goto_0

    #@3b
    .end local v3    # "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_2
    monitor-exit v6

    #@3c
    .line 6765
    return-void

    #@3d
    .line 6767
    :catchall_0
    move-exception v5

    #@3e
    monitor-exit v6

    #@3f
    throw v5
.end method

.method public removeStack(I)V
    .locals 2
    .param p1, "stackId"    # I

    #@0
    .prologue
    .line 5046
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 5047
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 5045
    return-void

    #@a
    .line 5046
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public removeTask(I)V
    .locals 3
    .param p1, "taskId"    # I

    #@0
    .prologue
    .line 5052
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5053
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@b
    .line 5054
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    monitor-exit v2

    #@e
    .line 5056
    return-void

    #@f
    .line 5058
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->removeLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@12
    monitor-exit v2

    #@13
    .line 5051
    return-void

    #@14
    .line 5052
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@15
    monitor-exit v2

    #@16
    throw v1
.end method

.method public removeWallpaperInputConsumer()V
    .locals 3

    #@0
    .prologue
    .line 10055
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 10056
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 10057
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@9
    invoke-virtual {v0}, Lcom/android/server/wm/InputConsumerImpl;->disposeChannelsLw()V

    #@c
    .line 10058
    const/4 v0, 0x0

    #@d
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    #@f
    .line 10059
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@11
    const/4 v2, 0x1

    #@12
    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@15
    :cond_0
    monitor-exit v1

    #@16
    .line 10054
    return-void

    #@17
    .line 10055
    :catchall_0
    move-exception v0

    #@18
    monitor-exit v1

    #@19
    throw v0
.end method

.method public removeWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .locals 3
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 2295
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 2296
    const/4 v1, 0x0

    #@4
    :try_start_0
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@7
    move-result-object v0

    #@8
    .line 2297
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_0

    #@a
    monitor-exit v2

    #@b
    .line 2298
    return-void

    #@c
    .line 2300
    :cond_0
    :try_start_1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@f
    monitor-exit v2

    #@10
    .line 2294
    return-void

    #@11
    .line 2295
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v1

    #@12
    monitor-exit v2

    #@13
    throw v1
.end method

.method public removeWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .locals 2
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    #@0
    .prologue
    .line 7137
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 7138
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    #@5
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 7136
    return-void

    #@a
    .line 7137
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V
    .locals 14
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    const/4 v13, 0x1

    #@1
    const/4 v12, 0x0

    #@2
    const/4 v11, 0x0

    #@3
    .line 2447
    iget-boolean v7, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@5
    if-eqz v7, :cond_0

    #@7
    .line 2451
    return-void

    #@8
    .line 2454
    :cond_0
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@a
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@d
    move-result v7

    #@e
    add-int/lit8 v3, v7, -0x1

    #@10
    .local v3, "i":I
    :goto_0
    if-ltz v3, :cond_1

    #@12
    .line 2455
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    #@14
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@17
    move-result-object v1

    #@18
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@1a
    .line 2456
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    const-string/jumbo v7, "WindowManager"

    #@1d
    new-instance v8, Ljava/lang/StringBuilder;

    #@1f
    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    #@22
    const-string/jumbo v9, "Force-removing child win "

    #@25
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@28
    move-result-object v8

    #@29
    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v8

    #@2d
    const-string/jumbo v9, " from container "

    #@30
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@33
    move-result-object v8

    #@34
    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@37
    move-result-object v8

    #@38
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3b
    move-result-object v8

    #@3c
    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@3f
    .line 2457
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    #@42
    .line 2454
    add-int/lit8 v3, v3, -0x1

    #@44
    goto :goto_0

    #@45
    .line 2460
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_1
    iput-boolean v13, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    #@47
    .line 2462
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@49
    if-ne v7, p1, :cond_2

    #@4b
    .line 2463
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@4e
    .line 2472
    :cond_2
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@50
    iget v5, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    #@52
    .line 2473
    .local v5, "type":I
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService;->excludeWindowTypeFromTapOutTask(I)Z

    #@55
    move-result v7

    #@56
    if-eqz v7, :cond_3

    #@58
    .line 2474
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@5b
    move-result-object v2

    #@5c
    .line 2475
    .local v2, "displaycontent":Lcom/android/server/wm/DisplayContent;
    iget-object v7, v2, Lcom/android/server/wm/DisplayContent;->mTapExcludedWindows:Ljava/util/ArrayList;

    #@5e
    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@61
    .line 2477
    .end local v2    # "displaycontent":Lcom/android/server/wm/DisplayContent;
    :cond_3
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@63
    invoke-interface {v7, p1}, Landroid/view/WindowManagerPolicy;->removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    #@66
    .line 2478
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->removeLocked()V

    #@69
    .line 2481
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6b
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@6d
    invoke-interface {v8}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@70
    move-result-object v8

    #@71
    invoke-virtual {v7, v8}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@74
    .line 2482
    iget v7, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@76
    const/4 v8, -0x1

    #@77
    if-eq v7, v8, :cond_4

    #@79
    .line 2483
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@7b
    iget v8, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@7d
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@80
    move-result v9

    #@81
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@84
    move-result-object v10

    #@85
    invoke-virtual {v7, v8, v9, v10}, Landroid/app/AppOpsManager;->finishOp(IILjava/lang/String;)V

    #@88
    .line 2486
    :cond_4
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    #@8a
    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@8d
    .line 2487
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@8f
    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@92
    .line 2488
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    #@94
    .line 2491
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@96
    if-ne v7, p1, :cond_b

    #@98
    .line 2492
    iput-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@9a
    .line 2497
    :cond_5
    :goto_1
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    #@9c
    .line 2498
    .local v4, "token":Lcom/android/server/wm/WindowToken;
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@9e
    .line 2500
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@a0
    invoke-virtual {v7, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@a3
    .line 2501
    if-eqz v0, :cond_6

    #@a5
    .line 2502
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@a7
    invoke-virtual {v7, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@aa
    .line 2507
    :cond_6
    iget-object v7, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@ac
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@af
    move-result v7

    #@b0
    if-nez v7, :cond_7

    #@b2
    .line 2508
    iget-boolean v7, v4, Lcom/android/server/wm/WindowToken;->explicit:Z

    #@b4
    if-nez v7, :cond_c

    #@b6
    .line 2509
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@b8
    iget-object v8, v4, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    #@ba
    invoke-virtual {v7, v8}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@bd
    .line 2516
    :cond_7
    :goto_2
    if-eqz v0, :cond_8

    #@bf
    .line 2517
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@c1
    if-ne v7, p1, :cond_d

    #@c3
    .line 2519
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@c6
    .line 2533
    :cond_8
    :goto_3
    const/16 v7, 0x7dd

    #@c8
    if-ne v5, v7, :cond_f

    #@ca
    .line 2534
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@cc
    invoke-virtual {v7}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    #@cf
    .line 2535
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@d2
    move-result-object v7

    #@d3
    iget v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@d5
    or-int/lit8 v8, v8, 0x4

    #@d7
    iput v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@d9
    .line 2542
    :cond_9
    :goto_4
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    #@dc
    move-result-object v6

    #@dd
    .line 2543
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    if-eqz v6, :cond_a

    #@df
    .line 2544
    invoke-virtual {v6, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    #@e2
    .line 2545
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@e4
    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->isInLayout()Z

    #@e7
    move-result v7

    #@e8
    if-nez v7, :cond_a

    #@ea
    .line 2546
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@ec
    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@ef
    .line 2547
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@f2
    .line 2548
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@f4
    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@f7
    .line 2549
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@f9
    if-eqz v7, :cond_a

    #@fb
    .line 2550
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@fd
    invoke-virtual {v7}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@100
    .line 2555
    :cond_a
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@102
    invoke-virtual {v7, v13}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@105
    .line 2446
    return-void

    #@106
    .line 2493
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "token":Lcom/android/server/wm/WindowToken;
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_b
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@108
    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    #@10a
    const/16 v8, 0x7dc

    #@10c
    if-ne v7, v8, :cond_5

    #@10e
    .line 2494
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    #@110
    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@113
    goto :goto_1

    #@114
    .line 2510
    .restart local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "token":Lcom/android/server/wm/WindowToken;
    :cond_c
    if-eqz v0, :cond_7

    #@116
    .line 2511
    iput-boolean v12, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    #@118
    .line 2512
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    #@11b
    goto :goto_2

    #@11c
    .line 2521
    :cond_d
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@11e
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@121
    move-result v7

    #@122
    if-nez v7, :cond_e

    #@124
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@126
    if-eqz v7, :cond_e

    #@128
    .line 2525
    iput-object v11, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@12a
    goto :goto_3

    #@12b
    .line 2526
    :cond_e
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@12d
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@130
    move-result v7

    #@131
    if-ne v7, v13, :cond_8

    #@133
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    #@135
    if-eqz v7, :cond_8

    #@137
    .line 2529
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@13a
    goto :goto_3

    #@13b
    .line 2537
    :cond_f
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@13d
    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->flags:I

    #@13f
    const/high16 v8, 0x100000

    #@141
    and-int/2addr v7, v8

    #@142
    if-eqz v7, :cond_9

    #@144
    .line 2538
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@147
    move-result-object v7

    #@148
    iget v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@14a
    or-int/lit8 v8, v8, 0x4

    #@14c
    iput v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    #@14e
    goto :goto_4
.end method

.method removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    .locals 1
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 2305
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/WindowState;Z)V

    #@4
    .line 2304
    return-void
.end method

.method removeWindowLocked(Lcom/android/server/wm/WindowState;Z)V
    .locals 11
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "keepVisibleDeadWindow"    # Z

    #@0
    .prologue
    .line 2309
    const/4 v9, 0x1

    #@1
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mWindowRemovalAllowed:Z

    #@3
    .line 2313
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5
    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    #@7
    const/4 v10, 0x3

    #@8
    if-ne v9, v10, :cond_1

    #@a
    const/4 v3, 0x1

    #@b
    .line 2314
    .local v3, "startingWindow":Z
    :goto_0
    if-eqz v3, :cond_0

    #@d
    .line 2324
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@10
    move-result-wide v4

    #@11
    .line 2326
    .local v4, "origId":J
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->disposeInputChannel()V

    #@14
    .line 2343
    const/4 v7, 0x0

    #@15
    .line 2347
    .local v7, "wasVisible":Z
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@17
    if-eqz v9, :cond_f

    #@19
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@1c
    move-result v9

    #@1d
    if-eqz v9, :cond_f

    #@1f
    .line 2348
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@21
    .line 2349
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    #@23
    if-eqz v9, :cond_2

    #@25
    .line 2358
    const/4 v9, 0x1

    #@26
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@28
    .line 2359
    const/4 v9, 0x1

    #@29
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mReplacingRemoveRequested:Z

    #@2b
    .line 2360
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2e
    .line 2361
    return-void

    #@2f
    .line 2313
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v3    # "startingWindow":Z
    .end local v4    # "origId":J
    .end local v7    # "wasVisible":Z
    :cond_1
    const/4 v3, 0x0

    #@30
    goto :goto_0

    #@31
    .line 2364
    .restart local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v3    # "startingWindow":Z
    .restart local v4    # "origId":J
    .restart local v7    # "wasVisible":Z
    :cond_2
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    #@34
    move-result v9

    #@35
    if-eqz v9, :cond_3

    #@37
    iget-boolean v9, v0, Lcom/android/server/wm/AppWindowToken;->allDrawnExcludingSaved:Z

    #@39
    if-eqz v9, :cond_4

    #@3b
    .line 2380
    :cond_3
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    #@3e
    move-result v7

    #@3f
    .line 2382
    .local v7, "wasVisible":Z
    if-eqz p2, :cond_5

    #@41
    .line 2386
    const/4 v9, 0x1

    #@42
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAppDied:Z

    #@44
    .line 2387
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@47
    .line 2388
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@49
    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@4c
    .line 2392
    const/4 v9, 0x0

    #@4d
    invoke-virtual {p1, v9}, Lcom/android/server/wm/WindowState;->openInputChannel(Landroid/view/InputChannel;)V

    #@50
    .line 2393
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@52
    const/4 v10, 0x1

    #@53
    invoke-virtual {v9, v10}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@56
    .line 2395
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@59
    .line 2396
    return-void

    #@5a
    .line 2375
    .local v7, "wasVisible":Z
    :cond_4
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V

    #@5d
    .line 2376
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@60
    .line 2377
    return-void

    #@61
    .line 2399
    .local v7, "wasVisible":Z
    :cond_5
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@63
    .line 2400
    .local v8, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    if-eqz v7, :cond_7

    #@65
    .line 2401
    if-nez v3, :cond_b

    #@67
    const/4 v6, 0x2

    #@68
    .line 2404
    .local v6, "transit":I
    :goto_1
    const/4 v9, 0x0

    #@69
    invoke-virtual {v8, v6, v9}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@6c
    move-result v9

    #@6d
    if-eqz v9, :cond_6

    #@6f
    .line 2405
    const/4 v9, 0x1

    #@70
    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@72
    .line 2408
    :cond_6
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@74
    if-eqz v9, :cond_7

    #@76
    .line 2409
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@79
    move-result v9

    #@7a
    if-nez v9, :cond_7

    #@7c
    .line 2410
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@7e
    invoke-virtual {v9, p1, v6}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@81
    .line 2414
    .end local v6    # "transit":I
    :cond_7
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    #@84
    move-result v9

    #@85
    if-eqz v9, :cond_8

    #@87
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->isDummyAnimation()Z

    #@8a
    move-result v9

    #@8b
    if-eqz v9, :cond_c

    #@8d
    :cond_8
    const/4 v1, 0x0

    #@8e
    .line 2415
    .local v1, "isAnimating":Z
    :goto_2
    if-eqz v3, :cond_e

    #@90
    if-eqz v0, :cond_e

    #@92
    .line 2416
    iget-object v9, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@94
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@97
    move-result v9

    #@98
    const/4 v10, 0x1

    #@99
    if-ne v9, v10, :cond_d

    #@9b
    const/4 v2, 0x1

    #@9c
    .line 2422
    .local v2, "lastWindowIsStartingWindow":Z
    :goto_3
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    #@9f
    move-result v9

    #@a0
    if-eqz v9, :cond_f

    #@a2
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@a4
    if-eqz v9, :cond_f

    #@a6
    .line 2423
    if-eqz v2, :cond_9

    #@a8
    .line 2422
    if-eqz v1, :cond_f

    #@aa
    .line 2427
    :cond_9
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V

    #@ad
    .line 2428
    if-eqz v0, :cond_a

    #@af
    .line 2429
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@b2
    .line 2431
    :cond_a
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@b5
    .line 2432
    return-void

    #@b6
    .line 2401
    .end local v1    # "isAnimating":Z
    .end local v2    # "lastWindowIsStartingWindow":Z
    :cond_b
    const/4 v6, 0x5

    #@b7
    goto :goto_1

    #@b8
    .line 2414
    :cond_c
    const/4 v1, 0x1

    #@b9
    .restart local v1    # "isAnimating":Z
    goto :goto_2

    #@ba
    .line 2416
    :cond_d
    const/4 v2, 0x0

    #@bb
    .restart local v2    # "lastWindowIsStartingWindow":Z
    goto :goto_3

    #@bc
    .line 2415
    .end local v2    # "lastWindowIsStartingWindow":Z
    :cond_e
    const/4 v2, 0x0

    #@bd
    .restart local v2    # "lastWindowIsStartingWindow":Z
    goto :goto_3

    #@be
    .line 2436
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "isAnimating":Z
    .end local v2    # "lastWindowIsStartingWindow":Z
    .end local v7    # "wasVisible":Z
    .end local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_f
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    #@c1
    .line 2439
    if-eqz v7, :cond_10

    #@c3
    const/4 v9, 0x0

    #@c4
    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@c7
    move-result v9

    #@c8
    if-eqz v9, :cond_10

    #@ca
    .line 2440
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@cc
    const/16 v10, 0x12

    #@ce
    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@d1
    .line 2442
    :cond_10
    const/4 v9, 0x0

    #@d2
    const/4 v10, 0x1

    #@d3
    invoke-virtual {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@d6
    .line 2443
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@d9
    .line 2308
    return-void
.end method

.method public removeWindowToken(Landroid/os/IBinder;)V
    .locals 14
    .param p1, "token"    # Landroid/os/IBinder;

    #@0
    .prologue
    const/16 v13, 0x7dd

    #@2
    .line 3340
    const-string/jumbo v9, "android.permission.MANAGE_APP_TOKENS"

    #@5
    .line 3341
    const-string/jumbo v10, "removeWindowToken()"

    #@8
    .line 3340
    invoke-direct {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v9

    #@c
    if-nez v9, :cond_0

    #@e
    .line 3342
    new-instance v9, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v10, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v9, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v9

    #@17
    .line 3345
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@1a
    move-result-wide v6

    #@1b
    .line 3346
    .local v6, "origId":J
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1d
    monitor-enter v10

    #@1e
    .line 3347
    const/4 v3, 0x0

    #@1f
    .line 3348
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    :try_start_0
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@21
    invoke-virtual {v9, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    #@24
    move-result-object v8

    #@25
    check-cast v8, Lcom/android/server/wm/WindowToken;

    #@27
    .line 3349
    .local v8, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v8, :cond_9

    #@29
    .line 3350
    const/4 v2, 0x0

    #@2a
    .line 3351
    .local v2, "delayed":Z
    iget-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@2c
    if-nez v9, :cond_8

    #@2e
    .line 3352
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@30
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    #@33
    move-result v0

    #@34
    .line 3353
    .local v0, "N":I
    const/4 v1, 0x0

    #@35
    .line 3355
    .local v1, "changed":Z
    const/4 v4, 0x0

    #@36
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v4, "i":I
    :goto_0
    if-ge v4, v0, :cond_4

    #@38
    .line 3356
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    #@3a
    invoke-virtual {v9, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3d
    move-result-object v5

    #@3e
    check-cast v5, Lcom/android/server/wm/WindowState;

    #@40
    .line 3357
    .local v5, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@43
    move-result-object v3

    #@44
    .line 3359
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@46
    invoke-virtual {v9}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    #@49
    move-result v9

    #@4a
    if-eqz v9, :cond_1

    #@4c
    .line 3360
    const/4 v2, 0x1

    #@4d
    .line 3363
    :cond_1
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@50
    move-result v9

    #@51
    if-eqz v9, :cond_3

    #@53
    .line 3364
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@55
    const/4 v11, 0x2

    #@56
    .line 3365
    const/4 v12, 0x0

    #@57
    .line 3364
    invoke-virtual {v9, v11, v12}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@5a
    .line 3367
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@5c
    if-eqz v9, :cond_2

    #@5e
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    #@61
    move-result v9

    #@62
    if-eqz v9, :cond_2

    #@64
    .line 3368
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@66
    .line 3369
    const/4 v11, 0x2

    #@67
    .line 3368
    invoke-virtual {v9, v5, v11}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@6a
    .line 3371
    :cond_2
    const/4 v1, 0x1

    #@6b
    .line 3372
    if-eqz v3, :cond_3

    #@6d
    .line 3373
    const/4 v9, 0x1

    #@6e
    iput-boolean v9, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@70
    .line 3355
    :cond_3
    add-int/lit8 v4, v4, 0x1

    #@72
    goto :goto_0

    #@73
    .line 3378
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_4
    const/4 v9, 0x1

    #@74
    iput-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    #@76
    .line 3380
    if-eqz v1, :cond_5

    #@78
    .line 3381
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@7a
    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@7d
    .line 3382
    const/4 v9, 0x0

    #@7e
    .line 3383
    const/4 v11, 0x0

    #@7f
    .line 3382
    invoke-virtual {p0, v9, v11}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@82
    .line 3386
    :cond_5
    if-eqz v2, :cond_7

    #@84
    if-eqz v3, :cond_7

    #@86
    .line 3387
    iget-object v9, v3, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    #@88
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@8b
    .line 3395
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v4    # "i":I
    :cond_6
    :goto_1
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@8d
    const/4 v11, 0x1

    #@8e
    invoke-virtual {v9, v11}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@91
    .end local v2    # "delayed":Z
    :goto_2
    monitor-exit v10

    #@92
    .line 3400
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@95
    .line 3339
    return-void

    #@96
    .line 3388
    .restart local v0    # "N":I
    .restart local v1    # "changed":Z
    .restart local v2    # "delayed":Z
    .restart local v4    # "i":I
    :cond_7
    :try_start_1
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    #@98
    if-ne v9, v13, :cond_6

    #@9a
    .line 3389
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@9c
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WallpaperController;->removeWallpaperToken(Lcom/android/server/wm/WindowToken;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@9f
    goto :goto_1

    #@a0
    .line 3346
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v2    # "delayed":Z
    .end local v4    # "i":I
    .end local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v9

    #@a1
    monitor-exit v10

    #@a2
    throw v9

    #@a3
    .line 3391
    .restart local v2    # "delayed":Z
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :cond_8
    :try_start_2
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    #@a5
    if-ne v9, v13, :cond_6

    #@a7
    .line 3392
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@a9
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WallpaperController;->removeWallpaperToken(Lcom/android/server/wm/WindowToken;)V

    #@ac
    goto :goto_1

    #@ad
    .line 3397
    .end local v2    # "delayed":Z
    :cond_9
    const-string/jumbo v9, "WindowManager"

    #@b0
    new-instance v11, Ljava/lang/StringBuilder;

    #@b2
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    #@b5
    const-string/jumbo v12, "Attempted to remove non-existing token: "

    #@b8
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bb
    move-result-object v11

    #@bc
    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@bf
    move-result-object v11

    #@c0
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@c3
    move-result-object v11

    #@c4
    invoke-static {v9, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@c7
    goto :goto_2
.end method

.method repositionChild(Lcom/android/server/wm/Session;Landroid/view/IWindow;IIIIJLandroid/graphics/Rect;)V
    .locals 11
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "left"    # I
    .param p4, "top"    # I
    .param p5, "right"    # I
    .param p6, "bottom"    # I
    .param p7, "frameNumber"    # J
    .param p9, "outFrame"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 2691
    const-string/jumbo v5, "repositionChild"

    #@3
    const-wide/16 v6, 0x20

    #@5
    invoke-static {v6, v7, v5}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@8
    .line 2692
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@b
    move-result-wide v2

    #@c
    .line 2695
    .local v2, "origId":J
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@e
    monitor-enter v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@f
    .line 2696
    const/4 v5, 0x0

    #@10
    :try_start_1
    invoke-virtual {p0, p1, p2, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@13
    move-result-object v4

    #@14
    .line 2697
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_0

    #@16
    :try_start_2
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@17
    .line 2741
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1a
    .line 2742
    const-wide/16 v6, 0x20

    #@1c
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    #@1f
    .line 2698
    return-void

    #@20
    .line 2700
    :cond_0
    :try_start_3
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    #@22
    if-nez v5, :cond_1

    #@24
    .line 2701
    new-instance v5, Ljava/lang/IllegalArgumentException;

    #@26
    .line 2702
    new-instance v7, Ljava/lang/StringBuilder;

    #@28
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    #@2b
    const-string/jumbo v8, "repositionChild called but window is notattached to a parent win="

    #@2e
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@31
    move-result-object v7

    #@32
    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@35
    move-result-object v7

    #@36
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@39
    move-result-object v7

    #@3a
    .line 2701
    invoke-direct {v5, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@3d
    throw v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@3e
    .line 2695
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v5

    #@3f
    :try_start_4
    monitor-exit v6

    #@40
    throw v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@41
    .line 2740
    :catchall_1
    move-exception v5

    #@42
    .line 2741
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@45
    .line 2742
    const-wide/16 v6, 0x20

    #@47
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    #@4a
    .line 2740
    throw v5

    #@4b
    .line 2706
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_1
    :try_start_5
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@4d
    iput p3, v5, Landroid/view/WindowManager$LayoutParams;->x:I

    #@4f
    .line 2707
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@51
    iput p4, v5, Landroid/view/WindowManager$LayoutParams;->y:I

    #@53
    .line 2708
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@55
    sub-int v7, p5, p3

    #@57
    iput v7, v5, Landroid/view/WindowManager$LayoutParams;->width:I

    #@59
    .line 2709
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5b
    sub-int v7, p6, p4

    #@5d
    iput v7, v5, Landroid/view/WindowManager$LayoutParams;->height:I

    #@5f
    .line 2710
    iget v5, v4, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    #@61
    iget v7, v4, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    #@63
    invoke-virtual {v4, v5, v7}, Lcom/android/server/wm/WindowState;->setWindowScale(II)V

    #@66
    .line 2712
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@68
    if-eqz v5, :cond_3

    #@6a
    .line 2717
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@6d
    .line 2721
    :try_start_6
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    #@6f
    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    #@71
    invoke-virtual {v4, v5, v7}, Lcom/android/server/wm/WindowState;->applyGravityAndUpdateFrame(Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    #@74
    .line 2722
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@76
    invoke-virtual {v5}, Lcom/android/server/wm/WindowStateAnimator;->computeShownFrameLocked()V

    #@79
    .line 2724
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@7b
    const/4 v7, 0x0

    #@7c
    invoke-virtual {v5, v7}, Lcom/android/server/wm/WindowStateAnimator;->setSurfaceBoundariesLocked(Z)V

    #@7f
    .line 2726
    const-wide/16 v8, 0x0

    #@81
    cmp-long v5, p7, v8

    #@83
    if-lez v5, :cond_2

    #@85
    .line 2727
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@87
    move-wide/from16 v0, p7

    #@89
    invoke-virtual {v5, v0, v1}, Lcom/android/server/wm/WindowStateAnimator;->deferTransactionUntilParentFrame(J)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    #@8c
    .line 2731
    :cond_2
    :try_start_7
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@8f
    .line 2738
    :cond_3
    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    #@91
    move-object/from16 p9, v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    #@93
    :try_start_8
    monitor-exit v6
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    #@94
    .line 2741
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@97
    .line 2742
    const-wide/16 v6, 0x20

    #@99
    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    #@9c
    .line 2690
    return-void

    #@9d
    .line 2730
    :catchall_2
    move-exception v5

    #@9e
    .line 2731
    :try_start_9
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@a1
    .line 2730
    throw v5
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0
.end method

.method public requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    .locals 3
    .param p1, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p2, "deviceId"    # I

    #@0
    .prologue
    .line 10987
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@3
    move-result-object v1

    #@4
    .line 10988
    .local v1, "focusedWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_0

    #@6
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@8
    if-eqz v2, :cond_0

    #@a
    .line 10989
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@d
    move-result-object v2

    #@e
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@10
    invoke-interface {v2, p1, p2}, Landroid/view/IWindow;->requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@13
    .line 10985
    .end local v1    # "focusedWindow":Lcom/android/server/wm/WindowState;
    :cond_0
    :goto_0
    return-void

    #@14
    .line 10991
    :catch_0
    move-exception v0

    #@15
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public requestAssistScreenshot(Lcom/android/internal/app/IAssistScreenshotReceiver;)Z
    .locals 2
    .param p1, "receiver"    # Lcom/android/internal/app/IAssistScreenshotReceiver;

    #@0
    .prologue
    .line 6151
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    #@3
    .line 6152
    const-string/jumbo v1, "requestAssistScreenshot()"

    #@6
    .line 6151
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 6153
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 6156
    :cond_0
    invoke-static {}, Lcom/android/server/FgThread;->getHandler()Landroid/os/Handler;

    #@18
    move-result-object v0

    #@19
    new-instance v1, Lcom/android/server/wm/WindowManagerService$8;

    #@1b
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$8;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/internal/app/IAssistScreenshotReceiver;)V

    #@1e
    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    #@21
    .line 6168
    const/4 v0, 0x1

    #@22
    return v0
.end method

.method requestTraversal()V
    .locals 2

    #@0
    .prologue
    .line 9442
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 9443
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    monitor-exit v1

    #@9
    .line 9441
    return-void

    #@a
    .line 9442
    :catchall_0
    move-exception v0

    #@b
    monitor-exit v1

    #@c
    throw v0
.end method

.method public resizeStack(ILandroid/graphics/Rect;Landroid/util/SparseArray;Landroid/util/SparseArray;Landroid/util/SparseArray;)Z
    .locals 5
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Landroid/graphics/Rect;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/content/res/Configuration;",
            ">;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/graphics/Rect;",
            ">;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/graphics/Rect;",
            ">;)Z"
        }
    .end annotation

    #@0
    .prologue
    .line 5154
    .local p3, "configs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/content/res/Configuration;>;"
    .local p4, "taskBounds":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/graphics/Rect;>;"
    .local p5, "taskTempInsetBounds":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/graphics/Rect;>;"
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5155
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/TaskStack;

    #@b
    .line 5156
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_0

    #@d
    .line 5157
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "resizeStack: stackId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5158
    const-string/jumbo v4, " not found."

    #@22
    .line 5157
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5154
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5160
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2, p3, p4, p5}, Lcom/android/server/wm/TaskStack;->setBounds(Landroid/graphics/Rect;Landroid/util/SparseArray;Landroid/util/SparseArray;Landroid/util/SparseArray;)Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_1

    #@37
    .line 5161
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    #@3a
    move-result v1

    #@3b
    .line 5160
    if-eqz v1, :cond_1

    #@3d
    .line 5162
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@40
    move-result-object v1

    #@41
    const/4 v3, 0x1

    #@42
    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@44
    .line 5163
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@46
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@49
    .line 5165
    :cond_1
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getRawFullscreen()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@4c
    move-result v1

    #@4d
    monitor-exit v2

    #@4e
    return v1
.end method

.method public resizeTask(ILandroid/graphics/Rect;Landroid/content/res/Configuration;ZZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .param p3, "configuration"    # Landroid/content/res/Configuration;
    .param p4, "relayout"    # Z
    .param p5, "forced"    # Z

    #@0
    .prologue
    .line 5211
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5212
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5213
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    .line 5214
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "resizeTask: taskId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5215
    const-string/jumbo v4, " not found."

    #@22
    .line 5214
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5211
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5218
    .restart local v0    # "task":Lcom/android/server/wm/Task;
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2, p3, p5}, Lcom/android/server/wm/Task;->resizeLocked(Landroid/graphics/Rect;Landroid/content/res/Configuration;Z)Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_1

    #@37
    if-eqz p4, :cond_1

    #@39
    .line 5219
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@3c
    move-result-object v1

    #@3d
    const/4 v3, 0x1

    #@3e
    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@40
    .line 5220
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@42
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@45
    :cond_1
    monitor-exit v2

    #@46
    .line 5210
    return-void
.end method

.method restorePointerIconLocked(Lcom/android/server/wm/DisplayContent;FF)V
    .locals 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "latestX"    # F
    .param p3, "latestY"    # F

    #@0
    .prologue
    .line 11132
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@2
    invoke-virtual {v2, p2, p3}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->updatePosition(FF)V

    #@5
    .line 11135
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;

    #@8
    move-result-object v1

    #@9
    .line 11136
    .local v1, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_0

    #@b
    .line 11138
    :try_start_0
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@d
    .line 11139
    invoke-virtual {v1, p2}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    #@10
    move-result v3

    #@11
    .line 11140
    invoke-virtual {v1, p3}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    #@14
    move-result v4

    #@15
    .line 11138
    invoke-interface {v2, v3, v4}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@18
    .line 11130
    :goto_0
    return-void

    #@19
    .line 11141
    :catch_0
    move-exception v0

    #@1a
    .line 11142
    .local v0, "e":Landroid/os/RemoteException;
    const-string/jumbo v2, "WindowManager"

    #@1d
    const-string/jumbo v3, "unable to restore pointer icon"

    #@20
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@23
    goto :goto_0

    #@24
    .line 11145
    .end local v0    # "e":Landroid/os/RemoteException;
    :cond_0
    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;

    #@27
    move-result-object v2

    #@28
    const/16 v3, 0x3e8

    #@2a
    invoke-virtual {v2, v3}, Landroid/hardware/input/InputManager;->setPointerIconType(I)V

    #@2d
    goto :goto_0
.end method

.method public resumeKeyDispatching(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "_token"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 7750
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 7751
    const-string/jumbo v2, "resumeKeyDispatching()"

    #@6
    .line 7750
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 7752
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 7755
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 7756
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    #@1a
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@1d
    move-result-object v0

    #@1e
    check-cast v0, Lcom/android/server/wm/WindowToken;

    #@20
    .line 7757
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_1

    #@22
    .line 7758
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@24
    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->resumeDispatchingLw(Lcom/android/server/wm/WindowToken;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@27
    :cond_1
    monitor-exit v2

    #@28
    .line 7749
    return-void

    #@29
    .line 7755
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_0
    move-exception v1

    #@2a
    monitor-exit v2

    #@2b
    throw v1
.end method

.method resumeRotationLocked()V
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 6538
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@3
    if-lez v1, :cond_0

    #@5
    .line 6539
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@7
    add-int/lit8 v1, v1, -0x1

    #@9
    iput v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@b
    .line 6540
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@d
    if-nez v1, :cond_0

    #@f
    .line 6541
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@12
    move-result v0

    #@13
    .line 6542
    .local v0, "changed":Z
    if-eqz v0, :cond_0

    #@15
    .line 6543
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@17
    const/16 v2, 0x12

    #@19
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@1c
    .line 6537
    .end local v0    # "changed":Z
    :cond_0
    return-void
.end method

.method public saveANRStateLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/WindowState;Ljava/lang/String;)V
    .locals 8
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "windowState"    # Lcom/android/server/wm/WindowState;
    .param p3, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    const/16 v7, 0x26

    #@2
    const/4 v6, 0x1

    #@3
    const/4 v5, 0x0

    #@4
    .line 10500
    new-instance v1, Ljava/io/StringWriter;

    #@6
    invoke-direct {v1}, Ljava/io/StringWriter;-><init>()V

    #@9
    .line 10501
    .local v1, "sw":Ljava/io/StringWriter;
    new-instance v0, Lcom/android/internal/util/FastPrintWriter;

    #@b
    const/4 v2, 0x0

    #@c
    const/16 v3, 0x400

    #@e
    invoke-direct {v0, v1, v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    #@11
    .line 10502
    .local v0, "pw":Ljava/io/PrintWriter;
    new-instance v2, Ljava/lang/StringBuilder;

    #@13
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@16
    const-string/jumbo v3, "  ANR time: "

    #@19
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v2

    #@1d
    invoke-static {}, Ljava/text/DateFormat;->getInstance()Ljava/text/DateFormat;

    #@20
    move-result-object v3

    #@21
    new-instance v4, Ljava/util/Date;

    #@23
    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    #@26
    invoke-virtual {v3, v4}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v2

    #@2e
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@31
    move-result-object v2

    #@32
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@35
    .line 10503
    if-eqz p1, :cond_0

    #@37
    .line 10504
    new-instance v2, Ljava/lang/StringBuilder;

    #@39
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@3c
    const-string/jumbo v3, "  Application at fault: "

    #@3f
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@42
    move-result-object v2

    #@43
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->stringName:Ljava/lang/String;

    #@45
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@48
    move-result-object v2

    #@49
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4c
    move-result-object v2

    #@4d
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@50
    .line 10506
    :cond_0
    if-eqz p2, :cond_1

    #@52
    .line 10507
    new-instance v2, Ljava/lang/StringBuilder;

    #@54
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@57
    const-string/jumbo v3, "  Window at fault: "

    #@5a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5d
    move-result-object v2

    #@5e
    iget-object v3, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@60
    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@63
    move-result-object v3

    #@64
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v2

    #@68
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6b
    move-result-object v2

    #@6c
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@6f
    .line 10509
    :cond_1
    if-eqz p3, :cond_2

    #@71
    .line 10510
    new-instance v2, Ljava/lang/StringBuilder;

    #@73
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@76
    const-string/jumbo v3, "  Reason: "

    #@79
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7c
    move-result-object v2

    #@7d
    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@80
    move-result-object v2

    #@81
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@84
    move-result-object v2

    #@85
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@88
    .line 10512
    :cond_2
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    #@8b
    .line 10513
    invoke-virtual {p0, v0, v6, v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    #@8e
    .line 10514
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    #@91
    .line 10515
    const-string/jumbo v2, "Last ANR continued"

    #@94
    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@97
    .line 10516
    invoke-virtual {p0, v0, v6}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    #@9a
    .line 10517
    invoke-virtual {v0}, Ljava/io/PrintWriter;->close()V

    #@9d
    .line 10518
    invoke-virtual {v1}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    #@a0
    move-result-object v2

    #@a1
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    #@a3
    .line 10520
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@a5
    invoke-virtual {v2, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@a8
    .line 10521
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@aa
    const-wide/32 v4, 0x6ddd00

    #@ad
    invoke-virtual {v2, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@b0
    .line 10499
    return-void
.end method

.method scheduleAnimationLocked()V
    .locals 2

    #@0
    .prologue
    .line 9449
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    #@2
    if-nez v0, :cond_0

    #@4
    .line 9450
    const/4 v0, 0x1

    #@5
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    #@7
    .line 9451
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    #@9
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@b
    iget-object v1, v1, Lcom/android/server/wm/WindowAnimator;->mAnimationFrameCallback:Landroid/view/Choreographer$FrameCallback;

    #@d
    invoke-virtual {v0, v1}, Landroid/view/Choreographer;->postFrameCallback(Landroid/view/Choreographer$FrameCallback;)V

    #@10
    .line 9448
    :cond_0
    return-void
.end method

.method public scheduleClearReplacingWindowIfNeeded(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "replacing"    # Z

    #@0
    .prologue
    .line 10876
    const/4 v0, 0x0

    #@1
    .line 10877
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 10878
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@7
    move-result-object v0

    #@8
    .line 10879
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_0

    #@a
    .line 10880
    const-string/jumbo v1, "WindowManager"

    #@d
    new-instance v3, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v4, "Attempted to reset replacing window on non-existing app token "

    #@15
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v3

    #@19
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v3

    #@1d
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@20
    move-result-object v3

    #@21
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@24
    monitor-exit v2

    #@25
    .line 10882
    return-void

    #@26
    .line 10884
    :cond_0
    if-eqz p2, :cond_1

    #@28
    .line 10885
    :try_start_1
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleReplacingWindowTimeouts(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2b
    :goto_0
    monitor-exit v2

    #@2c
    .line 10875
    return-void

    #@2d
    .line 10887
    :cond_1
    :try_start_2
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->resetReplacingWindows()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@30
    goto :goto_0

    #@31
    .line 10877
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@32
    monitor-exit v2

    #@33
    throw v1
.end method

.method scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    .locals 4
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/4 v3, 0x6

    #@1
    const/4 v2, 0x0

    #@2
    .line 4762
    if-nez p1, :cond_0

    #@4
    .line 4763
    return-void

    #@5
    .line 4765
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@7
    invoke-virtual {v1, v3, p1}, Lcom/android/server/wm/WindowManagerService$H;->hasMessages(ILjava/lang/Object;)Z

    #@a
    move-result v1

    #@b
    if-eqz v1, :cond_1

    #@d
    .line 4767
    return-void

    #@e
    .line 4770
    :cond_1
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@10
    if-nez v1, :cond_3

    #@12
    .line 4771
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@14
    if-eqz v1, :cond_2

    #@16
    .line 4776
    iput-object v2, p1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@18
    .line 4778
    :cond_2
    return-void

    #@19
    .line 4784
    :cond_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1b
    invoke-virtual {v1, v3, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@1e
    move-result-object v0

    #@1f
    .line 4785
    .local v0, "m":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@21
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@24
    .line 4761
    return-void
.end method

.method scheduleReplacingWindowTimeouts(Lcom/android/server/wm/AppWindowToken;)V
    .locals 4
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;

    #@0
    .prologue
    const/16 v1, 0x2e

    #@2
    .line 10893
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    #@4
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@7
    move-result v0

    #@8
    if-nez v0, :cond_0

    #@a
    .line 10894
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    #@c
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@f
    .line 10896
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@11
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@14
    .line 10897
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@16
    .line 10898
    const-wide/16 v2, 0x7d0

    #@18
    .line 10897
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@1b
    .line 10892
    return-void
.end method

.method public screenshotApplications(Landroid/os/IBinder;IIIF)Landroid/graphics/Bitmap;
    .locals 10
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "frameScale"    # F

    #@0
    .prologue
    const-wide/16 v8, 0x20

    #@2
    .line 6183
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    #@5
    .line 6184
    const-string/jumbo v1, "screenshotApplications()"

    #@8
    .line 6183
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v0

    #@c
    if-nez v0, :cond_0

    #@e
    .line 6185
    new-instance v0, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    #@13
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v0

    #@17
    .line 6188
    :cond_0
    :try_start_0
    const-string/jumbo v0, "screenshotApplications"

    #@1a
    const-wide/16 v2, 0x20

    #@1c
    invoke-static {v2, v3, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@1f
    .line 6190
    sget-object v7, Landroid/graphics/Bitmap$Config;->RGB_565:Landroid/graphics/Bitmap$Config;

    #@21
    .line 6189
    const/4 v5, 0x0

    #@22
    move-object v0, p0

    #@23
    move-object v1, p1

    #@24
    move v2, p2

    #@25
    move v3, p3

    #@26
    move v4, p4

    #@27
    move v6, p5

    #@28
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/wm/WindowManagerService;->screenshotApplicationsInner(Landroid/os/IBinder;IIIZFLandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2b
    move-result-object v0

    #@2c
    .line 6192
    invoke-static {v8, v9}, Landroid/os/Trace;->traceEnd(J)V

    #@2f
    .line 6189
    return-object v0

    #@30
    .line 6191
    :catchall_0
    move-exception v0

    #@31
    .line 6192
    invoke-static {v8, v9}, Landroid/os/Trace;->traceEnd(J)V

    #@34
    .line 6191
    throw v0
.end method

.method screenshotApplicationsInner(Landroid/os/IBinder;IIIZFLandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;
    .locals 41
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "includeFullDisplay"    # Z
    .param p6, "frameScale"    # F
    .param p7, "config"    # Landroid/graphics/Bitmap$Config;

    #@0
    .prologue
    .line 6199
    move-object/from16 v0, p0

    #@2
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v5

    #@5
    .line 6200
    :try_start_0
    move-object/from16 v0, p0

    #@7
    move/from16 v1, p2

    #@9
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@c
    move-result-object v19

    #@d
    .line 6201
    .local v19, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v19, :cond_0

    #@f
    .line 6204
    const/4 v6, 0x0

    #@10
    monitor-exit v5

    #@11
    return-object v6

    #@12
    :cond_0
    monitor-exit v5

    #@13
    .line 6207
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@16
    move-result-object v20

    #@17
    .line 6208
    .local v20, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v20

    #@19
    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@1b
    move/from16 v21, v0

    #@1d
    .line 6209
    .local v21, "dw":I
    move-object/from16 v0, v20

    #@1f
    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@21
    move/from16 v18, v0

    #@23
    .line 6210
    .local v18, "dh":I
    if-eqz v21, :cond_1

    #@25
    if-nez v18, :cond_2

    #@27
    .line 6213
    :cond_1
    const/4 v5, 0x0

    #@28
    return-object v5

    #@29
    .line 6199
    .end local v18    # "dh":I
    .end local v19    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v20    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v21    # "dw":I
    :catchall_0
    move-exception v6

    #@2a
    monitor-exit v5

    #@2b
    throw v6

    #@2c
    .line 6216
    .restart local v18    # "dh":I
    .restart local v19    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v20    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v21    # "dw":I
    :cond_2
    const/4 v13, 0x0

    #@2d
    .line 6218
    .local v13, "bm":Landroid/graphics/Bitmap;
    const/4 v8, 0x0

    #@2e
    .line 6219
    .local v8, "maxLayer":I
    new-instance v22, Landroid/graphics/Rect;

    #@30
    invoke-direct/range {v22 .. v22}, Landroid/graphics/Rect;-><init>()V

    #@33
    .line 6220
    .local v22, "frame":Landroid/graphics/Rect;
    new-instance v32, Landroid/graphics/Rect;

    #@35
    invoke-direct/range {v32 .. v32}, Landroid/graphics/Rect;-><init>()V

    #@38
    .line 6224
    .local v32, "stackBounds":Landroid/graphics/Rect;
    if-nez p1, :cond_4

    #@3a
    .line 6225
    const/16 v31, 0x1

    #@3c
    .line 6226
    .local v31, "screenshotReady":Z
    const/4 v7, 0x0

    #@3d
    .line 6232
    .local v7, "minLayer":I
    :goto_0
    const/4 v12, 0x0

    #@3e
    .line 6235
    .local v12, "appWin":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    #@40
    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@42
    monitor-enter v6

    #@43
    .line 6237
    :try_start_1
    move-object/from16 v0, p0

    #@45
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@47
    if-eqz v5, :cond_5

    #@49
    move-object/from16 v0, p0

    #@4b
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@4d
    iget-object v0, v5, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@4f
    move-object/from16 v24, v0

    #@51
    .line 6243
    :goto_1
    if-eqz v24, :cond_7

    #@53
    .line 6244
    move-object/from16 v0, v24

    #@55
    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@57
    if-eqz v5, :cond_7

    #@59
    .line 6245
    move-object/from16 v0, v24

    #@5b
    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@5d
    invoke-interface {v5}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@60
    move-result-object v5

    #@61
    move-object/from16 v0, p1

    #@63
    if-ne v5, v0, :cond_7

    #@65
    .line 6246
    move-object/from16 v0, p0

    #@67
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    #@69
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isInMultiWindowMode()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@6c
    move-result v5

    #@6d
    if-eqz v5, :cond_6

    #@6f
    const/16 v25, 0x0

    #@71
    .local v25, "includeImeInScreenshot":Z
    :goto_2
    monitor-exit v6

    #@72
    .line 6249
    move-object/from16 v0, p0

    #@74
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@76
    const/4 v6, 0x2

    #@77
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@7a
    move-result v5

    #@7b
    add-int/lit8 v5, v5, 0x1

    #@7d
    mul-int/lit16 v5, v5, 0x2710

    #@7f
    add-int/lit16 v11, v5, 0x3e8

    #@81
    .line 6252
    .local v11, "aboveAppLayer":I
    move-object/from16 v0, p0

    #@83
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@85
    move-object/from16 v38, v0

    #@87
    monitor-enter v38

    #@88
    .line 6254
    const/4 v12, 0x0

    #@89
    .line 6255
    :try_start_2
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@8c
    move-result-object v36

    #@8d
    .line 6256
    .local v36, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/WindowList;->size()I

    #@90
    move-result v5

    #@91
    add-int/lit8 v23, v5, -0x1

    #@93
    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .local v23, "i":I
    :goto_3
    if-ltz v23, :cond_e

    #@95
    .line 6257
    move-object/from16 v0, v36

    #@97
    move/from16 v1, v23

    #@99
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@9c
    move-result-object v37

    #@9d
    check-cast v37, Lcom/android/server/wm/WindowState;

    #@9f
    .line 6258
    .local v37, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v37

    #@a1
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@a3
    if-nez v5, :cond_8

    #@a5
    .line 6256
    :cond_3
    :goto_4
    add-int/lit8 v23, v23, -0x1

    #@a7
    goto :goto_3

    #@a8
    .line 6228
    .end local v7    # "minLayer":I
    .end local v11    # "aboveAppLayer":I
    .end local v23    # "i":I
    .end local v25    # "includeImeInScreenshot":Z
    .end local v31    # "screenshotReady":Z
    .end local v36    # "windows":Lcom/android/server/wm/WindowList;
    .end local v37    # "ws":Lcom/android/server/wm/WindowState;
    :cond_4
    const/16 v31, 0x0

    #@aa
    .line 6229
    .restart local v31    # "screenshotReady":Z
    const v7, 0x7fffffff

    #@ad
    .restart local v7    # "minLayer":I
    goto :goto_0

    #@ae
    .line 6237
    .restart local v12    # "appWin":Lcom/android/server/wm/WindowState;
    :cond_5
    const/16 v24, 0x0

    #@b0
    .local v24, "imeTargetAppToken":Lcom/android/server/wm/AppWindowToken;
    goto :goto_1

    #@b1
    .line 6246
    .end local v24    # "imeTargetAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_6
    const/16 v25, 0x1

    #@b3
    .restart local v25    # "includeImeInScreenshot":Z
    goto :goto_2

    #@b4
    .line 6243
    .end local v25    # "includeImeInScreenshot":Z
    :cond_7
    const/16 v25, 0x0

    #@b6
    .restart local v25    # "includeImeInScreenshot":Z
    goto :goto_2

    #@b7
    .line 6235
    .end local v25    # "includeImeInScreenshot":Z
    :catchall_1
    move-exception v5

    #@b8
    monitor-exit v6

    #@b9
    throw v5

    #@ba
    .line 6261
    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v11    # "aboveAppLayer":I
    .restart local v23    # "i":I
    .restart local v25    # "includeImeInScreenshot":Z
    .restart local v36    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v37    # "ws":Lcom/android/server/wm/WindowState;
    :cond_8
    :try_start_3
    move-object/from16 v0, v37

    #@bc
    iget v5, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    #@be
    if-ge v5, v11, :cond_3

    #@c0
    .line 6264
    move-object/from16 v0, v37

    #@c2
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    #@c4
    if-eqz v5, :cond_f

    #@c6
    .line 6265
    if-eqz v25, :cond_3

    #@c8
    .line 6291
    :cond_9
    :goto_5
    move-object/from16 v0, v37

    #@ca
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@cc
    move-object/from16 v35, v0

    #@ce
    .line 6292
    .local v35, "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v35

    #@d0
    iget-object v5, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    #@d2
    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfaceController;->getLayer()I

    #@d5
    move-result v26

    #@d6
    .line 6293
    .local v26, "layer":I
    move/from16 v0, v26

    #@d8
    if-ge v8, v0, :cond_a

    #@da
    .line 6294
    move/from16 v8, v26

    #@dc
    .line 6296
    :cond_a
    move/from16 v0, v26

    #@de
    if-le v7, v0, :cond_b

    #@e0
    .line 6297
    move/from16 v7, v26

    #@e2
    .line 6301
    :cond_b
    if-nez p5, :cond_c

    #@e4
    move-object/from16 v0, v37

    #@e6
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@e8
    if-eqz v5, :cond_11

    #@ea
    .line 6316
    :cond_c
    :goto_6
    move-object/from16 v0, v37

    #@ec
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@ee
    if-eqz v5, :cond_d

    #@f0
    move-object/from16 v0, v37

    #@f2
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@f4
    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@f6
    move-object/from16 v0, p1

    #@f8
    if-ne v5, v0, :cond_d

    #@fa
    .line 6317
    invoke-virtual/range {v37 .. v37}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    #@fd
    move-result v5

    #@fe
    .line 6316
    if-eqz v5, :cond_d

    #@100
    .line 6317
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    #@103
    move-result v5

    #@104
    .line 6316
    if-eqz v5, :cond_d

    #@106
    .line 6318
    const/16 v31, 0x1

    #@108
    .line 6321
    :cond_d
    move-object/from16 v0, v37

    #@10a
    move-object/from16 v1, v20

    #@10c
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->isObscuringFullscreen(Landroid/view/DisplayInfo;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    #@10f
    move-result v5

    #@110
    if-eqz v5, :cond_3

    #@112
    .line 6326
    .end local v26    # "layer":I
    .end local v35    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v37    # "ws":Lcom/android/server/wm/WindowState;
    :cond_e
    if-eqz p1, :cond_12

    #@114
    if-nez v12, :cond_12

    #@116
    .line 6330
    const/4 v5, 0x0

    #@117
    monitor-exit v38

    #@118
    return-object v5

    #@119
    .line 6268
    .restart local v37    # "ws":Lcom/android/server/wm/WindowState;
    :cond_f
    :try_start_4
    move-object/from16 v0, v37

    #@11b
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    #@11d
    if-eqz v5, :cond_10

    #@11f
    .line 6269
    if-nez v12, :cond_9

    #@121
    goto :goto_4

    #@122
    .line 6280
    :cond_10
    if-eqz p1, :cond_9

    #@124
    .line 6281
    move-object/from16 v0, v37

    #@126
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@128
    if-eqz v5, :cond_3

    #@12a
    move-object/from16 v0, v37

    #@12c
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@12e
    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@130
    move-object/from16 v0, p1

    #@132
    if-ne v5, v0, :cond_3

    #@134
    .line 6286
    move-object/from16 v12, v37

    #@136
    .local v12, "appWin":Lcom/android/server/wm/WindowState;
    goto :goto_5

    #@137
    .line 6302
    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v26    # "layer":I
    .restart local v35    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    :cond_11
    move-object/from16 v0, v37

    #@139
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@13b
    move-object/from16 v34, v0

    #@13d
    .line 6303
    .local v34, "wf":Landroid/graphics/Rect;
    move-object/from16 v0, v37

    #@13f
    iget-object v15, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@141
    .line 6304
    .local v15, "cr":Landroid/graphics/Rect;
    move-object/from16 v0, v34

    #@143
    iget v5, v0, Landroid/graphics/Rect;->left:I

    #@145
    iget v6, v15, Landroid/graphics/Rect;->left:I

    #@147
    add-int v27, v5, v6

    #@149
    .line 6305
    .local v27, "left":I
    move-object/from16 v0, v34

    #@14b
    iget v5, v0, Landroid/graphics/Rect;->top:I

    #@14d
    iget v6, v15, Landroid/graphics/Rect;->top:I

    #@14f
    add-int v33, v5, v6

    #@151
    .line 6306
    .local v33, "top":I
    move-object/from16 v0, v34

    #@153
    iget v5, v0, Landroid/graphics/Rect;->right:I

    #@155
    iget v6, v15, Landroid/graphics/Rect;->right:I

    #@157
    sub-int v29, v5, v6

    #@159
    .line 6307
    .local v29, "right":I
    move-object/from16 v0, v34

    #@15b
    iget v5, v0, Landroid/graphics/Rect;->bottom:I

    #@15d
    iget v6, v15, Landroid/graphics/Rect;->bottom:I

    #@15f
    sub-int v14, v5, v6

    #@161
    .line 6308
    .local v14, "bottom":I
    move-object/from16 v0, v22

    #@163
    move/from16 v1, v27

    #@165
    move/from16 v2, v33

    #@167
    move/from16 v3, v29

    #@169
    invoke-virtual {v0, v1, v2, v3, v14}, Landroid/graphics/Rect;->union(IIII)V

    #@16c
    .line 6309
    move-object/from16 v0, v37

    #@16e
    move-object/from16 v1, v32

    #@170
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->getVisibleBounds(Landroid/graphics/Rect;)V

    #@173
    .line 6310
    move-object/from16 v0, v22

    #@175
    move-object/from16 v1, v32

    #@177
    invoke-static {v0, v1}, Landroid/graphics/Rect;->intersects(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    #@17a
    move-result v5

    #@17b
    if-nez v5, :cond_c

    #@17d
    .line 6312
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    #@180
    goto/16 :goto_6

    #@182
    .line 6252
    .end local v13    # "bm":Landroid/graphics/Bitmap;
    .end local v14    # "bottom":I
    .end local v15    # "cr":Landroid/graphics/Rect;
    .end local v23    # "i":I
    .end local v26    # "layer":I
    .end local v27    # "left":I
    .end local v29    # "right":I
    .end local v33    # "top":I
    .end local v34    # "wf":Landroid/graphics/Rect;
    .end local v35    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v36    # "windows":Lcom/android/server/wm/WindowList;
    .end local v37    # "ws":Lcom/android/server/wm/WindowState;
    :catchall_2
    move-exception v5

    #@183
    monitor-exit v38

    #@184
    throw v5

    #@185
    .line 6333
    .restart local v13    # "bm":Landroid/graphics/Bitmap;
    .restart local v23    # "i":I
    .restart local v36    # "windows":Lcom/android/server/wm/WindowList;
    :cond_12
    if-nez v31, :cond_14

    #@187
    .line 6334
    :try_start_5
    const-string/jumbo v6, "WindowManager"

    #@18a
    new-instance v5, Ljava/lang/StringBuilder;

    #@18c
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@18f
    const-string/jumbo v39, "Failed to capture screenshot of "

    #@192
    move-object/from16 v0, v39

    #@194
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@197
    move-result-object v5

    #@198
    move-object/from16 v0, p1

    #@19a
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@19d
    move-result-object v5

    #@19e
    .line 6335
    const-string/jumbo v39, " appWin="

    #@1a1
    .line 6334
    move-object/from16 v0, v39

    #@1a3
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a6
    move-result-object v39

    #@1a7
    .line 6335
    if-nez v12, :cond_13

    #@1a9
    const-string/jumbo v5, "null"

    #@1ac
    .line 6334
    :goto_7
    move-object/from16 v0, v39

    #@1ae
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1b1
    move-result-object v5

    #@1b2
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1b5
    move-result-object v5

    #@1b6
    invoke-static {v6, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    #@1b9
    .line 6337
    const/4 v5, 0x0

    #@1ba
    monitor-exit v38

    #@1bb
    return-object v5

    #@1bc
    .line 6335
    :cond_13
    :try_start_6
    new-instance v5, Ljava/lang/StringBuilder;

    #@1be
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@1c1
    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c4
    move-result-object v5

    #@1c5
    const-string/jumbo v40, " drawState="

    #@1c8
    move-object/from16 v0, v40

    #@1ca
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1cd
    move-result-object v5

    #@1ce
    .line 6336
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@1d0
    move-object/from16 v40, v0

    #@1d2
    move-object/from16 v0, v40

    #@1d4
    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    #@1d6
    move/from16 v40, v0

    #@1d8
    .line 6335
    move/from16 v0, v40

    #@1da
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1dd
    move-result-object v5

    #@1de
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    #@1e1
    move-result-object v5

    #@1e2
    goto :goto_7

    #@1e3
    .line 6345
    :cond_14
    if-nez v8, :cond_15

    #@1e5
    .line 6348
    const/4 v5, 0x0

    #@1e6
    monitor-exit v38

    #@1e7
    return-object v5

    #@1e8
    .line 6351
    :cond_15
    if-nez p5, :cond_17

    #@1ea
    .line 6353
    const/4 v5, 0x0

    #@1eb
    const/4 v6, 0x0

    #@1ec
    :try_start_7
    move-object/from16 v0, v22

    #@1ee
    move/from16 v1, v21

    #@1f0
    move/from16 v2, v18

    #@1f2
    invoke-virtual {v0, v5, v6, v1, v2}, Landroid/graphics/Rect;->intersect(IIII)Z

    #@1f5
    move-result v5

    #@1f6
    if-nez v5, :cond_16

    #@1f8
    .line 6354
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->setEmpty()V

    #@1fb
    .line 6360
    :cond_16
    :goto_8
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->isEmpty()Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    #@1fe
    move-result v5

    #@1ff
    if-eqz v5, :cond_18

    #@201
    .line 6361
    const/4 v5, 0x0

    #@202
    monitor-exit v38

    #@203
    return-object v5

    #@204
    .line 6358
    :cond_17
    const/4 v5, 0x0

    #@205
    const/4 v6, 0x0

    #@206
    :try_start_8
    move-object/from16 v0, v22

    #@208
    move/from16 v1, v21

    #@20a
    move/from16 v2, v18

    #@20c
    invoke-virtual {v0, v5, v6, v1, v2}, Landroid/graphics/Rect;->set(IIII)V

    #@20f
    goto :goto_8

    #@210
    .line 6364
    :cond_18
    if-gez p3, :cond_19

    #@212
    .line 6365
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->width()I

    #@215
    move-result v5

    #@216
    int-to-float v5, v5

    #@217
    mul-float v5, v5, p6

    #@219
    float-to-int v0, v5

    #@21a
    move/from16 p3, v0

    #@21c
    .line 6367
    :cond_19
    if-gez p4, :cond_1a

    #@21e
    .line 6368
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->height()I

    #@221
    move-result v5

    #@222
    int-to-float v5, v5

    #@223
    mul-float v5, v5, p6

    #@225
    float-to-int v0, v5

    #@226
    move/from16 p4, v0

    #@228
    .line 6373
    :cond_1a
    new-instance v4, Landroid/graphics/Rect;

    #@22a
    move-object/from16 v0, v22

    #@22c
    invoke-direct {v4, v0}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    #@22f
    .line 6374
    .local v4, "crop":Landroid/graphics/Rect;
    move/from16 v0, p3

    #@231
    int-to-float v5, v0

    #@232
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->width()I

    #@235
    move-result v6

    #@236
    int-to-float v6, v6

    #@237
    div-float/2addr v5, v6

    #@238
    move/from16 v0, p4

    #@23a
    int-to-float v6, v0

    #@23b
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->height()I

    #@23e
    move-result v39

    #@23f
    move/from16 v0, v39

    #@241
    int-to-float v0, v0

    #@242
    move/from16 v39, v0

    #@244
    div-float v6, v6, v39

    #@246
    cmpg-float v5, v5, v6

    #@248
    if-gez v5, :cond_1d

    #@24a
    .line 6375
    move/from16 v0, p3

    #@24c
    int-to-float v5, v0

    #@24d
    move/from16 v0, p4

    #@24f
    int-to-float v6, v0

    #@250
    div-float/2addr v5, v6

    #@251
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->height()I

    #@254
    move-result v6

    #@255
    int-to-float v6, v6

    #@256
    mul-float/2addr v5, v6

    #@257
    float-to-int v0, v5

    #@258
    move/from16 v17, v0

    #@25a
    .line 6376
    .local v17, "cropWidth":I
    iget v5, v4, Landroid/graphics/Rect;->left:I

    #@25c
    add-int v5, v5, v17

    #@25e
    iput v5, v4, Landroid/graphics/Rect;->right:I

    #@260
    .line 6383
    .end local v17    # "cropWidth":I
    :goto_9
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@263
    move-result-object v5

    #@264
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@267
    move-result-object v5

    #@268
    invoke-virtual {v5}, Landroid/view/Display;->getRotation()I

    #@26b
    move-result v10

    #@26c
    .line 6385
    .local v10, "rot":I
    const/4 v5, 0x1

    #@26d
    if-eq v10, v5, :cond_1b

    #@26f
    const/4 v5, 0x3

    #@270
    if-ne v10, v5, :cond_1c

    #@272
    .line 6386
    :cond_1b
    const/4 v5, 0x1

    #@273
    if-ne v10, v5, :cond_1e

    #@275
    const/4 v10, 0x3

    #@276
    .line 6391
    :cond_1c
    :goto_a
    move/from16 v0, v21

    #@278
    move/from16 v1, v18

    #@27a
    invoke-static {v4, v10, v0, v1}, Lcom/android/server/wm/WindowManagerService;->convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V

    #@27d
    .line 6407
    move-object/from16 v0, p0

    #@27f
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@281
    const/4 v6, 0x0

    #@282
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@285
    move-result-object v30

    #@286
    .line 6408
    .local v30, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v30, :cond_1f

    #@288
    .line 6409
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    #@28b
    move-result v9

    #@28c
    .line 6415
    :goto_b
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@28f
    .line 6416
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransactionSync()V

    #@292
    move/from16 v5, p3

    #@294
    move/from16 v6, p4

    #@296
    .line 6418
    invoke-static/range {v4 .. v10}, Landroid/view/SurfaceControl;->screenshot(Landroid/graphics/Rect;IIIIZI)Landroid/graphics/Bitmap;

    #@299
    move-result-object v13

    #@29a
    .line 6420
    .local v13, "bm":Landroid/graphics/Bitmap;
    if-nez v13, :cond_20

    #@29c
    .line 6421
    const-string/jumbo v5, "WindowManager"

    #@29f
    new-instance v6, Ljava/lang/StringBuilder;

    #@2a1
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@2a4
    const-string/jumbo v39, "Screenshot failure taking screenshot for ("

    #@2a7
    move-object/from16 v0, v39

    #@2a9
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2ac
    move-result-object v6

    #@2ad
    move/from16 v0, v21

    #@2af
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2b2
    move-result-object v6

    #@2b3
    const-string/jumbo v39, "x"

    #@2b6
    move-object/from16 v0, v39

    #@2b8
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2bb
    move-result-object v6

    #@2bc
    move/from16 v0, v18

    #@2be
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2c1
    move-result-object v6

    #@2c2
    .line 6422
    const-string/jumbo v39, ") to layer "

    #@2c5
    .line 6421
    move-object/from16 v0, v39

    #@2c7
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2ca
    move-result-object v6

    #@2cb
    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2ce
    move-result-object v6

    #@2cf
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2d2
    move-result-object v6

    #@2d3
    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    #@2d6
    .line 6423
    const/4 v5, 0x0

    #@2d7
    monitor-exit v38

    #@2d8
    return-object v5

    #@2d9
    .line 6378
    .end local v10    # "rot":I
    .end local v30    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .local v13, "bm":Landroid/graphics/Bitmap;
    :cond_1d
    move/from16 v0, p4

    #@2db
    int-to-float v5, v0

    #@2dc
    move/from16 v0, p3

    #@2de
    int-to-float v6, v0

    #@2df
    div-float/2addr v5, v6

    #@2e0
    :try_start_9
    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->width()I

    #@2e3
    move-result v6

    #@2e4
    int-to-float v6, v6

    #@2e5
    mul-float/2addr v5, v6

    #@2e6
    float-to-int v0, v5

    #@2e7
    move/from16 v16, v0

    #@2e9
    .line 6379
    .local v16, "cropHeight":I
    iget v5, v4, Landroid/graphics/Rect;->top:I

    #@2eb
    add-int v5, v5, v16

    #@2ed
    iput v5, v4, Landroid/graphics/Rect;->bottom:I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    #@2ef
    goto/16 :goto_9

    #@2f1
    .line 6386
    .end local v16    # "cropHeight":I
    .restart local v10    # "rot":I
    :cond_1e
    const/4 v10, 0x1

    #@2f2
    goto :goto_a

    #@2f3
    .line 6408
    .restart local v30    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_1f
    const/4 v9, 0x0

    #@2f4
    .local v9, "inRotation":Z
    goto :goto_b

    #@2f5
    .end local v9    # "inRotation":Z
    .local v13, "bm":Landroid/graphics/Bitmap;
    :cond_20
    monitor-exit v38

    #@2f6
    .line 6450
    move-object/from16 v0, p7

    #@2f8
    invoke-virtual {v13, v0}, Landroid/graphics/Bitmap;->createAshmemBitmap(Landroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;

    #@2fb
    move-result-object v28

    #@2fc
    .line 6451
    .local v28, "ret":Landroid/graphics/Bitmap;
    invoke-virtual {v13}, Landroid/graphics/Bitmap;->recycle()V

    #@2ff
    .line 6452
    return-object v28
.end method

.method public scrollTask(ILandroid/graphics/Rect;)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 5243
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5244
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5245
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    .line 5246
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "scrollTask: taskId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    .line 5247
    const-string/jumbo v4, " not found."

    #@22
    .line 5246
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2d
    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2e
    .line 5243
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@2f
    monitor-exit v2

    #@30
    throw v1

    #@31
    .line 5250
    .restart local v0    # "task":Lcom/android/server/wm/Task;
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->scrollLocked(Landroid/graphics/Rect;)Z

    #@34
    move-result v1

    #@35
    if-eqz v1, :cond_1

    #@37
    .line 5251
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@3a
    move-result-object v1

    #@3b
    const/4 v3, 0x1

    #@3c
    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@3e
    .line 5252
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@40
    invoke-virtual {v1}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@43
    .line 5253
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@45
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@48
    :cond_1
    monitor-exit v2

    #@49
    .line 5242
    return-void
.end method

.method sendNewConfiguration()V
    .locals 3

    #@0
    .prologue
    .line 7201
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@2
    const/4 v2, 0x0

    #@3
    invoke-interface {v1, v2}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@6
    .line 7199
    :goto_0
    return-void

    #@7
    .line 7202
    :catch_0
    move-exception v0

    #@8
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public setAnimationScale(IF)V
    .locals 2
    .param p1, "which"    # I
    .param p2, "scale"    # F

    #@0
    .prologue
    .line 5507
    const-string/jumbo v0, "android.permission.SET_ANIMATION_SCALE"

    #@3
    .line 5508
    const-string/jumbo v1, "setAnimationScale()"

    #@6
    .line 5507
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 5509
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires SET_ANIMATION_SCALE permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 5512
    :cond_0
    invoke-static {p2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@18
    move-result p2

    #@19
    .line 5513
    packed-switch p1, :pswitch_data_0

    #@1c
    .line 5520
    :goto_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1e
    const/16 v1, 0xe

    #@20
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@23
    .line 5506
    return-void

    #@24
    .line 5514
    :pswitch_0
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@26
    goto :goto_0

    #@27
    .line 5515
    :pswitch_1
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@29
    goto :goto_0

    #@2a
    .line 5516
    :pswitch_2
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@2c
    goto :goto_0

    #@2d
    .line 5513
    nop

    #@2e
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public setAnimationScales([F)V
    .locals 5
    .param p1, "scales"    # [F

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    const/4 v3, 0x2

    #@2
    const/4 v2, 0x1

    #@3
    .line 5525
    const-string/jumbo v0, "android.permission.SET_ANIMATION_SCALE"

    #@6
    .line 5526
    const-string/jumbo v1, "setAnimationScale()"

    #@9
    .line 5525
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@c
    move-result v0

    #@d
    if-nez v0, :cond_0

    #@f
    .line 5527
    new-instance v0, Ljava/lang/SecurityException;

    #@11
    const-string/jumbo v1, "Requires SET_ANIMATION_SCALE permission"

    #@14
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@17
    throw v0

    #@18
    .line 5530
    :cond_0
    if-eqz p1, :cond_3

    #@1a
    .line 5531
    array-length v0, p1

    #@1b
    if-lt v0, v2, :cond_1

    #@1d
    .line 5532
    const/4 v0, 0x0

    #@1e
    aget v0, p1, v0

    #@20
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@23
    move-result v0

    #@24
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    #@26
    .line 5534
    :cond_1
    array-length v0, p1

    #@27
    if-lt v0, v3, :cond_2

    #@29
    .line 5535
    aget v0, p1, v2

    #@2b
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@2e
    move-result v0

    #@2f
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    #@31
    .line 5537
    :cond_2
    array-length v0, p1

    #@32
    const/4 v1, 0x3

    #@33
    if-lt v0, v1, :cond_3

    #@35
    .line 5538
    aget v0, p1, v3

    #@37
    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    #@3a
    move-result v0

    #@3b
    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    #@3d
    .line 5539
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V

    #@40
    .line 5544
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@42
    const/16 v1, 0xe

    #@44
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@47
    .line 5524
    return-void
.end method

.method public setAppFullscreen(Landroid/os/IBinder;Z)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "toOpaque"    # Z

    #@0
    .prologue
    .line 4260
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 4261
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@6
    move-result-object v0

    #@7
    .line 4262
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@9
    .line 4263
    iput-boolean p2, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    #@b
    .line 4264
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setWindowOpaqueLocked(Landroid/os/IBinder;Z)V

    #@e
    .line 4265
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@10
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@13
    :cond_0
    monitor-exit v2

    #@14
    .line 4259
    return-void

    #@15
    .line 4260
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@16
    monitor-exit v2

    #@17
    throw v1
.end method

.method public setAppOrientation(Landroid/view/IApplicationToken;I)V
    .locals 5
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "requestedOrientation"    # I

    #@0
    .prologue
    .line 3817
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3818
    const-string/jumbo v2, "setAppOrientation()"

    #@6
    .line 3817
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3819
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3822
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 3823
    :try_start_0
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    #@1b
    move-result-object v1

    #@1c
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1f
    move-result-object v0

    #@20
    .line 3824
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_1

    #@22
    .line 3825
    const-string/jumbo v1, "WindowManager"

    #@25
    new-instance v3, Ljava/lang/StringBuilder;

    #@27
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@2a
    const-string/jumbo v4, "Attempted to set orientation of non-existing app token: "

    #@2d
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@34
    move-result-object v3

    #@35
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@38
    move-result-object v3

    #@39
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3c
    monitor-exit v2

    #@3d
    .line 3826
    return-void

    #@3e
    .line 3829
    :cond_1
    :try_start_1
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@40
    monitor-exit v2

    #@41
    .line 3816
    return-void

    #@42
    .line 3822
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@43
    monitor-exit v2

    #@44
    throw v1
.end method

.method public setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;Z)Z
    .locals 20
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "transferFrom"    # Landroid/os/IBinder;
    .param p11, "createIfNeeded"    # Z

    #@0
    .prologue
    .line 4053
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4054
    const-string/jumbo v4, "setAppStartingWindow()"

    #@6
    .line 4053
    move-object/from16 v0, p0

    #@8
    invoke-direct {v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v3

    #@c
    if-nez v3, :cond_0

    #@e
    .line 4055
    new-instance v3, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v3

    #@17
    .line 4058
    :cond_0
    move-object/from16 v0, p0

    #@19
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1b
    move-object/from16 v19, v0

    #@1d
    monitor-enter v19

    #@1e
    .line 4063
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@21
    move-result-object v18

    #@22
    .line 4064
    .local v18, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v18, :cond_1

    #@24
    .line 4065
    const-string/jumbo v3, "WindowManager"

    #@27
    new-instance v4, Ljava/lang/StringBuilder;

    #@29
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    #@2c
    const-string/jumbo v5, "Attempted to set icon of non-existing app token: "

    #@2f
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v4

    #@33
    move-object/from16 v0, p1

    #@35
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@38
    move-result-object v4

    #@39
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3c
    move-result-object v4

    #@3d
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@40
    .line 4066
    const/4 v3, 0x0

    #@41
    monitor-exit v19

    #@42
    return v3

    #@43
    .line 4072
    :cond_1
    :try_start_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@46
    move-result v3

    #@47
    if-nez v3, :cond_2

    #@49
    .line 4073
    const/4 v3, 0x0

    #@4a
    monitor-exit v19

    #@4b
    return v3

    #@4c
    .line 4076
    :cond_2
    :try_start_2
    move-object/from16 v0, v18

    #@4e
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@50
    if-eqz v3, :cond_3

    #@52
    .line 4077
    const/4 v3, 0x0

    #@53
    monitor-exit v19

    #@54
    return v3

    #@55
    .line 4086
    :cond_3
    if-eqz p3, :cond_8

    #@57
    .line 4087
    :try_start_3
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    #@5a
    move-result-object v3

    #@5b
    .line 4088
    sget-object v4, Lcom/android/internal/R$styleable;->Window:[I

    #@5d
    move-object/from16 v0, p0

    #@5f
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@61
    .line 4087
    move-object/from16 v0, p2

    #@63
    move/from16 v1, p3

    #@65
    invoke-virtual {v3, v0, v1, v4, v5}, Lcom/android/server/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/server/AttributeCache$Entry;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@68
    move-result-object v12

    #@69
    .line 4089
    .local v12, "ent":Lcom/android/server/AttributeCache$Entry;
    if-nez v12, :cond_4

    #@6b
    .line 4092
    const/4 v3, 0x0

    #@6c
    monitor-exit v19

    #@6d
    return v3

    #@6e
    .line 4094
    :cond_4
    :try_start_4
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@70
    .line 4095
    const/4 v4, 0x5

    #@71
    const/4 v5, 0x0

    #@72
    .line 4094
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    #@75
    move-result v16

    #@76
    .line 4096
    .local v16, "windowIsTranslucent":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@78
    .line 4097
    const/4 v4, 0x4

    #@79
    const/4 v5, 0x0

    #@7a
    .line 4096
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    #@7d
    move-result v15

    #@7e
    .line 4098
    .local v15, "windowIsFloating":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@80
    .line 4099
    const/16 v4, 0xe

    #@82
    const/4 v5, 0x0

    #@83
    .line 4098
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    #@86
    move-result v17

    #@87
    .line 4100
    .local v17, "windowShowWallpaper":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    #@89
    .line 4101
    const/16 v4, 0xc

    #@8b
    const/4 v5, 0x0

    #@8c
    .line 4100
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    #@8f
    move-result v14

    #@90
    .line 4105
    .local v14, "windowDisableStarting":Z
    if-eqz v16, :cond_5

    #@92
    .line 4106
    const/4 v3, 0x0

    #@93
    monitor-exit v19

    #@94
    return v3

    #@95
    .line 4108
    :cond_5
    if-nez v15, :cond_6

    #@97
    if-eqz v14, :cond_7

    #@99
    .line 4109
    :cond_6
    const/4 v3, 0x0

    #@9a
    monitor-exit v19

    #@9b
    return v3

    #@9c
    .line 4111
    :cond_7
    if-eqz v17, :cond_8

    #@9e
    .line 4112
    :try_start_5
    move-object/from16 v0, p0

    #@a0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    #@a2
    invoke-virtual {v3}, Lcom/android/server/wm/WallpaperController;->getWallpaperTarget()Lcom/android/server/wm/WindowState;

    #@a5
    move-result-object v3

    #@a6
    if-nez v3, :cond_9

    #@a8
    .line 4118
    const/high16 v3, 0x100000

    #@aa
    or-int p9, p9, v3

    #@ac
    .line 4125
    .end local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v14    # "windowDisableStarting":Z
    .end local v15    # "windowIsFloating":Z
    .end local v16    # "windowIsTranslucent":Z
    .end local v17    # "windowShowWallpaper":Z
    :cond_8
    move-object/from16 v0, p0

    #@ae
    move-object/from16 v1, p10

    #@b0
    move-object/from16 v2, v18

    #@b2
    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->transferStartingWindow(Landroid/os/IBinder;Lcom/android/server/wm/AppWindowToken;)Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    #@b5
    move-result v3

    #@b6
    if-eqz v3, :cond_a

    #@b8
    .line 4126
    const/4 v3, 0x1

    #@b9
    monitor-exit v19

    #@ba
    return v3

    #@bb
    .line 4120
    .restart local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .restart local v14    # "windowDisableStarting":Z
    .restart local v15    # "windowIsFloating":Z
    .restart local v16    # "windowIsTranslucent":Z
    .restart local v17    # "windowShowWallpaper":Z
    :cond_9
    const/4 v3, 0x0

    #@bc
    monitor-exit v19

    #@bd
    return v3

    #@be
    .line 4131
    .end local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v14    # "windowDisableStarting":Z
    .end local v15    # "windowIsFloating":Z
    .end local v16    # "windowIsTranslucent":Z
    .end local v17    # "windowShowWallpaper":Z
    :cond_a
    if-nez p11, :cond_b

    #@c0
    .line 4132
    const/4 v3, 0x0

    #@c1
    monitor-exit v19

    #@c2
    return v3

    #@c3
    .line 4136
    :cond_b
    :try_start_6
    new-instance v3, Lcom/android/server/wm/StartingData;

    #@c5
    move-object/from16 v4, p2

    #@c7
    move/from16 v5, p3

    #@c9
    move-object/from16 v6, p4

    #@cb
    move-object/from16 v7, p5

    #@cd
    move/from16 v8, p6

    #@cf
    move/from16 v9, p7

    #@d1
    move/from16 v10, p8

    #@d3
    move/from16 v11, p9

    #@d5
    invoke-direct/range {v3 .. v11}, Lcom/android/server/wm/StartingData;-><init>(Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIII)V

    #@d8
    move-object/from16 v0, v18

    #@da
    iput-object v3, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    #@dc
    .line 4138
    move-object/from16 v0, p0

    #@de
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@e0
    const/4 v4, 0x5

    #@e1
    move-object/from16 v0, v18

    #@e3
    invoke-virtual {v3, v4, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    #@e6
    move-result-object v13

    #@e7
    .line 4143
    .local v13, "m":Landroid/os/Message;
    move-object/from16 v0, p0

    #@e9
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@eb
    invoke-virtual {v3, v13}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    #@ee
    monitor-exit v19

    #@ef
    .line 4145
    const/4 v3, 0x1

    #@f0
    return v3

    #@f1
    .line 4058
    .end local v13    # "m":Landroid/os/Message;
    .end local v18    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v3

    #@f2
    monitor-exit v19

    #@f3
    throw v3
.end method

.method public setAppTask(Landroid/os/IBinder;IILandroid/graphics/Rect;Landroid/content/res/Configuration;IZ)V
    .locals 12
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "taskId"    # I
    .param p3, "stackId"    # I
    .param p4, "taskBounds"    # Landroid/graphics/Rect;
    .param p5, "config"    # Landroid/content/res/Configuration;
    .param p6, "taskResizeMode"    # I
    .param p7, "homeTask"    # Z

    #@0
    .prologue
    .line 3479
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3480
    const-string/jumbo v3, "setAppTask()"

    #@6
    .line 3479
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 3481
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 3484
    :cond_0
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v11

    #@18
    .line 3485
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v6

    #@1c
    .line 3486
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v6, :cond_1

    #@1e
    .line 3487
    const-string/jumbo v2, "WindowManager"

    #@21
    new-instance v3, Ljava/lang/StringBuilder;

    #@23
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@26
    const-string/jumbo v4, "Attempted to set task id of non-existing app token: "

    #@29
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2c
    move-result-object v3

    #@2d
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@30
    move-result-object v3

    #@31
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@34
    move-result-object v3

    #@35
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    monitor-exit v11

    #@39
    .line 3488
    return-void

    #@3a
    .line 3490
    :cond_1
    :try_start_1
    iget-object v10, v6, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@3c
    .line 3491
    .local v10, "oldTask":Lcom/android/server/wm/Task;
    invoke-virtual {v10, v6}, Lcom/android/server/wm/Task;->removeAppToken(Lcom/android/server/wm/AppWindowToken;)Z

    #@3f
    .line 3493
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@41
    invoke-virtual {v2, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@44
    move-result-object v9

    #@45
    check-cast v9, Lcom/android/server/wm/Task;

    #@47
    .line 3494
    .local v9, "newTask":Lcom/android/server/wm/Task;
    if-nez v9, :cond_2

    #@49
    .line 3496
    iget v5, v10, Lcom/android/server/wm/Task;->mUserId:I

    #@4b
    move-object v2, p0

    #@4c
    move v3, p2

    #@4d
    move v4, p3

    #@4e
    move-object/from16 v7, p4

    #@50
    move-object/from16 v8, p5

    #@52
    .line 3495
    invoke-direct/range {v2 .. v8}, Lcom/android/server/wm/WindowManagerService;->createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;

    #@55
    move-result-object v9

    #@56
    .line 3498
    :cond_2
    const v2, 0x7fffffff

    #@59
    move/from16 v0, p6

    #@5b
    move/from16 v1, p7

    #@5d
    invoke-virtual {v9, v2, v6, v0, v1}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;IZ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@60
    monitor-exit v11

    #@61
    .line 3478
    return-void

    #@62
    .line 3484
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v9    # "newTask":Lcom/android/server/wm/Task;
    .end local v10    # "oldTask":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v2

    #@63
    monitor-exit v11

    #@64
    throw v2
.end method

.method public setAppVisibility(Landroid/os/IBinder;Z)V
    .locals 12
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v0, 0x0

    #@2
    .line 4462
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@5
    .line 4463
    const-string/jumbo v4, "setAppVisibility()"

    #@8
    .line 4462
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@b
    move-result v3

    #@c
    if-nez v3, :cond_0

    #@e
    .line 4464
    new-instance v0, Ljava/lang/SecurityException;

    #@10
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@13
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@16
    throw v0

    #@17
    .line 4469
    :cond_0
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@19
    monitor-enter v11

    #@1a
    .line 4470
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1d
    move-result-object v1

    #@1e
    .line 4471
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_1

    #@20
    .line 4472
    const-string/jumbo v0, "WindowManager"

    #@23
    new-instance v2, Ljava/lang/StringBuilder;

    #@25
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@28
    const-string/jumbo v3, "Attempted to set visibility of non-existing app token: "

    #@2b
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@2e
    move-result-object v2

    #@2f
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@32
    move-result-object v2

    #@33
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@36
    move-result-object v2

    #@37
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3a
    monitor-exit v11

    #@3b
    .line 4473
    return-void

    #@3c
    .line 4481
    :cond_1
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@3e
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@41
    .line 4482
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@43
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    #@46
    .line 4483
    const/4 v3, 0x0

    #@47
    iput-boolean v3, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@49
    .line 4484
    if-eqz p2, :cond_7

    #@4b
    :goto_0
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@4d
    .line 4486
    if-nez p2, :cond_8

    #@4f
    .line 4490
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->removeAllDeadWindows()V

    #@52
    .line 4491
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->setVisibleBeforeClientHidden()V

    #@55
    .line 4530
    :cond_2
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    #@58
    move-result v0

    #@59
    if-eqz v0, :cond_e

    #@5b
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@5d
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@60
    move-result v0

    #@61
    if-eqz v0, :cond_e

    #@63
    .line 4535
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@65
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    #@67
    if-eqz v0, :cond_3

    #@69
    .line 4536
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6b
    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@6d
    if-nez v0, :cond_3

    #@6f
    .line 4537
    const-string/jumbo v0, "WindowManager"

    #@72
    new-instance v2, Ljava/lang/StringBuilder;

    #@74
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@77
    const-string/jumbo v3, "Will NOT set dummy animation on: "

    #@7a
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7d
    move-result-object v2

    #@7e
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@81
    move-result-object v2

    #@82
    .line 4538
    const-string/jumbo v3, ", using null transfered animation!"

    #@85
    .line 4537
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@88
    move-result-object v2

    #@89
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8c
    move-result-object v2

    #@8d
    invoke-static {v0, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    #@90
    .line 4540
    :cond_3
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@92
    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    #@94
    if-nez v0, :cond_5

    #@96
    .line 4541
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    #@98
    if-eqz v0, :cond_4

    #@9a
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    #@9c
    .line 4540
    if-eqz v0, :cond_5

    #@9e
    .line 4544
    :cond_4
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@a0
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->setDummyAnimation()V

    #@a3
    .line 4546
    :cond_5
    const/4 v0, 0x1

    #@a4
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@a6
    .line 4547
    if-eqz p2, :cond_d

    #@a8
    .line 4548
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@aa
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@ad
    .line 4549
    const/4 v0, 0x1

    #@ae
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    #@b0
    .line 4554
    :goto_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@b2
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    #@b5
    move-result v0

    #@b6
    const/16 v2, 0x10

    #@b8
    if-ne v0, v2, :cond_6

    #@ba
    .line 4557
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@bd
    move-result-object v0

    #@be
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    #@c1
    move-result-object v10

    #@c2
    .line 4558
    .local v10, "win":Lcom/android/server/wm/WindowState;
    if-eqz v10, :cond_6

    #@c4
    .line 4559
    iget-object v7, v10, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@c6
    .line 4560
    .local v7, "focusedToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v7, :cond_6

    #@c8
    .line 4564
    const/4 v0, 0x1

    #@c9
    iput-boolean v0, v7, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@cb
    .line 4565
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@cd
    invoke-virtual {v0, v7}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@d0
    .end local v7    # "focusedToken":Lcom/android/server/wm/AppWindowToken;
    .end local v10    # "win":Lcom/android/server/wm/WindowState;
    :cond_6
    monitor-exit v11

    #@d1
    .line 4569
    return-void

    #@d2
    :cond_7
    move v0, v2

    #@d3
    .line 4484
    goto/16 :goto_0

    #@d5
    .line 4492
    :cond_8
    if-eqz p2, :cond_2

    #@d7
    .line 4493
    :try_start_2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@d9
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    #@dc
    move-result v0

    #@dd
    if-nez v0, :cond_9

    #@df
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@e1
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isReady()Z

    #@e4
    move-result v0

    #@e5
    if-eqz v0, :cond_9

    #@e7
    .line 4497
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@e9
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@ec
    .line 4499
    :cond_9
    const/4 v0, 0x0

    #@ed
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    #@ef
    .line 4502
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@f1
    if-nez v0, :cond_a

    #@f3
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppStopped:Z

    #@f5
    if-eqz v0, :cond_c

    #@f7
    .line 4503
    :cond_a
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    #@fa
    .line 4506
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@fc
    if-eqz v0, :cond_b

    #@fe
    .line 4507
    const/4 v0, 0x1

    #@ff
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    #@101
    .line 4510
    :cond_b
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@103
    if-eqz v0, :cond_c

    #@105
    .line 4517
    const/4 v0, 0x0

    #@106
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@108
    .line 4518
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@10b
    .line 4521
    :cond_c
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->requestUpdateWallpaperIfNeeded()V

    #@10e
    .line 4525
    const/4 v0, 0x0

    #@10f
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppStopped:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@111
    goto/16 :goto_1

    #@113
    .line 4469
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v0

    #@114
    monitor-exit v11

    #@115
    throw v0

    #@116
    .line 4551
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_d
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@118
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    #@11b
    .line 4552
    const/4 v0, 0x0

    #@11c
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    #@11e
    goto :goto_2

    #@11f
    .line 4572
    :cond_e
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@122
    move-result-wide v8

    #@123
    .line 4573
    .local v8, "origId":J
    const/4 v0, 0x0

    #@124
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    #@126
    .line 4575
    iget-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    #@128
    .line 4574
    const/4 v2, 0x0

    #@129
    const/4 v4, -0x1

    #@12a
    .line 4575
    const/4 v5, 0x1

    #@12b
    move-object v0, p0

    #@12c
    move v3, p2

    #@12d
    .line 4574
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    #@130
    .line 4576
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    #@133
    .line 4577
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@136
    monitor-exit v11

    #@137
    .line 4461
    return-void
.end method

.method public setCurrentProfileIds([I)V
    .locals 2
    .param p1, "currentProfileIds"    # [I

    #@0
    .prologue
    .line 5660
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5661
    :try_start_0
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 5659
    return-void

    #@7
    .line 5660
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method public setCurrentUser(I[I)V
    .locals 8
    .param p1, "newUserId"    # I
    .param p2, "currentProfileIds"    # [I

    #@0
    .prologue
    .line 5666
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 5667
    :try_start_0
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@5
    .line 5668
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    #@7
    .line 5669
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    #@9
    invoke-virtual {v5, p1}, Lcom/android/server/wm/AppTransition;->setCurrentUser(I)V

    #@c
    .line 5670
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@e
    invoke-interface {v5, p1}, Landroid/view/WindowManagerPolicy;->setCurrentUserLw(I)V

    #@11
    .line 5675
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@13
    const/4 v7, 0x1

    #@14
    invoke-interface {v5, v7}, Landroid/view/WindowManagerPolicy;->enableKeyguard(Z)V

    #@17
    .line 5678
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@19
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@1c
    move-result v3

    #@1d
    .line 5679
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    #@1e
    .local v1, "displayNdx":I
    :goto_0
    if-ge v1, v3, :cond_0

    #@20
    .line 5680
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@22
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@25
    move-result-object v0

    #@26
    check-cast v0, Lcom/android/server/wm/DisplayContent;

    #@28
    .line 5681
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->switchUserStacks()V

    #@2b
    .line 5682
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    #@2e
    .line 5679
    add-int/lit8 v1, v1, 0x1

    #@30
    goto :goto_0

    #@31
    .line 5684
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@33
    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@36
    .line 5687
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@39
    move-result-object v0

    #@3a
    .line 5688
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    #@3c
    .line 5689
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->hasDockedTasksForUser(I)Z

    #@3f
    move-result v7

    #@40
    .line 5688
    invoke-virtual {v5, v7}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    #@43
    .line 5693
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    #@45
    if-eqz v5, :cond_1

    #@47
    .line 5694
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    #@4a
    move-result v2

    #@4b
    .line 5695
    .local v2, "forcedDensity":I
    if-eqz v2, :cond_2

    #@4d
    move v4, v2

    #@4e
    .line 5697
    .local v4, "targetDensity":I
    :goto_1
    invoke-direct {p0, v0, v4}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@51
    .end local v2    # "forcedDensity":I
    .end local v4    # "targetDensity":I
    :cond_1
    monitor-exit v6

    #@52
    .line 5665
    return-void

    #@53
    .line 5696
    .restart local v2    # "forcedDensity":I
    :cond_2
    :try_start_1
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@55
    goto :goto_1

    #@56
    .line 5666
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "forcedDensity":I
    .end local v3    # "numDisplays":I
    :catchall_0
    move-exception v5

    #@57
    monitor-exit v6

    #@58
    throw v5
.end method

.method public setDockedStackCreateState(ILandroid/graphics/Rect;)V
    .locals 2
    .param p1, "mode"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 4970
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 4971
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setDockedStackCreateStateLocked(ILandroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 4969
    return-void

    #@8
    .line 4970
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method setDockedStackCreateStateLocked(ILandroid/graphics/Rect;)V
    .locals 0
    .param p1, "mode"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 4976
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateMode:I

    #@2
    .line 4977
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateBounds:Landroid/graphics/Rect;

    #@4
    .line 4975
    return-void
.end method

.method public setDockedStackDividerTouchRegion(Landroid/graphics/Rect;)V
    .locals 2
    .param p1, "touchRegion"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 10920
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 10921
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@a
    move-result-object v0

    #@b
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->setTouchRegion(Landroid/graphics/Rect;)V

    #@e
    .line 10923
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusTaskRegionLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v1

    #@12
    .line 10919
    return-void

    #@13
    .line 10920
    :catchall_0
    move-exception v0

    #@14
    monitor-exit v1

    #@15
    throw v0
.end method

.method public setDockedStackResizing(Z)V
    .locals 2
    .param p1, "resizing"    # Z

    #@0
    .prologue
    .line 10912
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 10913
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@a
    move-result-object v0

    #@b
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->setResizing(Z)V

    #@e
    .line 10914
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    monitor-exit v1

    #@12
    .line 10911
    return-void

    #@13
    .line 10912
    :catchall_0
    move-exception v0

    #@14
    monitor-exit v1

    #@15
    throw v0
.end method

.method public setEventDispatching(Z)V
    .locals 2
    .param p1, "enabled"    # Z

    #@0
    .prologue
    .line 7765
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 7766
    const-string/jumbo v1, "setEventDispatching()"

    #@6
    .line 7765
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v0

    #@a
    if-nez v0, :cond_0

    #@c
    .line 7767
    new-instance v0, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v1, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v0

    #@15
    .line 7770
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v1

    #@18
    .line 7771
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    #@1a
    .line 7772
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@1c
    if-eqz v0, :cond_1

    #@1e
    .line 7773
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@20
    invoke-virtual {v0, p1}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@23
    :cond_1
    monitor-exit v1

    #@24
    .line 7764
    return-void

    #@25
    .line 7770
    :catchall_0
    move-exception v0

    #@26
    monitor-exit v1

    #@27
    throw v0
.end method

.method setFocusTaskRegionLocked()V
    .locals 3

    #@0
    .prologue
    .line 3846
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@2
    if-eqz v2, :cond_0

    #@4
    .line 3847
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@6
    iget-object v1, v2, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    #@8
    .line 3848
    .local v1, "task":Lcom/android/server/wm/Task;
    invoke-virtual {v1}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@b
    move-result-object v0

    #@c
    .line 3849
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_0

    #@e
    .line 3850
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->setTouchExcludeRegion(Lcom/android/server/wm/Task;)V

    #@11
    .line 3845
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "task":Lcom/android/server/wm/Task;
    :cond_0
    return-void
.end method

.method public setFocusedApp(Landroid/os/IBinder;Z)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "moveFocusNow"    # Z

    #@0
    .prologue
    .line 3857
    const-string/jumbo v4, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3858
    const-string/jumbo v5, "setFocusedApp()"

    #@6
    .line 3857
    invoke-direct {p0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v4

    #@a
    if-nez v4, :cond_0

    #@c
    .line 3859
    new-instance v4, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v5, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v4

    #@15
    .line 3862
    :cond_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v5

    #@18
    .line 3864
    if-nez p1, :cond_4

    #@1a
    .line 3866
    const/4 v1, 0x0

    #@1b
    .line 3876
    :cond_1
    :goto_0
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@1d
    if-eq v4, v1, :cond_5

    #@1f
    const/4 v0, 0x1

    #@20
    .line 3877
    .local v0, "changed":Z
    :goto_1
    if-eqz v0, :cond_2

    #@22
    .line 3878
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    #@24
    .line 3879
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@26
    invoke-virtual {v4, v1}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    #@29
    .line 3880
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusTaskRegionLocked()V

    #@2c
    .line 3883
    :cond_2
    if-eqz p2, :cond_3

    #@2e
    if-eqz v0, :cond_3

    #@30
    .line 3884
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@33
    move-result-wide v2

    #@34
    .line 3885
    .local v2, "origId":J
    const/4 v4, 0x0

    #@35
    const/4 v6, 0x1

    #@36
    invoke-virtual {p0, v4, v6}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@39
    .line 3886
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@3c
    .end local v2    # "origId":J
    :cond_3
    monitor-exit v5

    #@3d
    .line 3856
    return-void

    #@3e
    .line 3868
    .end local v0    # "changed":Z
    :cond_4
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@41
    move-result-object v1

    #@42
    .line 3869
    .local v1, "newFocus":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_1

    #@44
    .line 3870
    const-string/jumbo v4, "WindowManager"

    #@47
    new-instance v6, Ljava/lang/StringBuilder;

    #@49
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@4c
    const-string/jumbo v7, "Attempted to set focus to non-existing app token: "

    #@4f
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@52
    move-result-object v6

    #@53
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@56
    move-result-object v6

    #@57
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@5a
    move-result-object v6

    #@5b
    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@5e
    goto :goto_0

    #@5f
    .line 3862
    .end local v1    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v4

    #@60
    monitor-exit v5

    #@61
    throw v4

    #@62
    .line 3876
    :cond_5
    const/4 v0, 0x0

    #@63
    .restart local v0    # "changed":Z
    goto :goto_1
.end method

.method public setForceResizableTasks(Z)V
    .locals 2
    .param p1, "forceResizableTasks"    # Z

    #@0
    .prologue
    .line 10964
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 10965
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mForceResizableTasks:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 10963
    return-void

    #@7
    .line 10964
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method public setForcedDisplayDensity(II)V
    .locals 8
    .param p1, "displayId"    # I
    .param p2, "density"    # I

    #@0
    .prologue
    .line 8926
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8927
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8926
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8929
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 8932
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8933
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 8935
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 8937
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8938
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 8939
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_2

    #@2c
    .line 8940
    invoke-direct {p0, v0, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@2f
    .line 8941
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@31
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@34
    move-result-object v1

    #@35
    .line 8942
    const-string/jumbo v5, "display_density_forced"

    #@38
    .line 8943
    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@3b
    move-result-object v6

    #@3c
    iget v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    #@3e
    .line 8941
    invoke-static {v1, v5, v6, v7}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@41
    :cond_2
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@42
    .line 8947
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@45
    .line 8925
    return-void

    #@46
    .line 8937
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@47
    :try_start_3
    monitor-exit v4

    #@48
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@49
    .line 8946
    :catchall_1
    move-exception v1

    #@4a
    .line 8947
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4d
    .line 8946
    throw v1
.end method

.method public setForcedDisplayScalingMode(II)V
    .locals 6
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    #@0
    .prologue
    .line 8794
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8795
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8794
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v1

    #@9
    if-eqz v1, :cond_0

    #@b
    .line 8797
    new-instance v1, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v1

    #@14
    .line 8800
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8801
    new-instance v1, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v4, "Can only set the default display"

    #@1b
    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v1

    #@1f
    .line 8803
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v2

    #@23
    .line 8805
    .local v2, "ident":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8806
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@29
    move-result-object v0

    #@2a
    .line 8807
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_4

    #@2c
    .line 8808
    if-ltz p2, :cond_2

    #@2e
    const/4 v1, 0x1

    #@2f
    if-le p2, v1, :cond_3

    #@31
    .line 8809
    :cond_2
    const/4 p2, 0x0

    #@32
    .line 8811
    :cond_3
    invoke-direct {p0, v0, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@35
    .line 8812
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@37
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@3a
    move-result-object v1

    #@3b
    .line 8813
    const-string/jumbo v5, "display_scaling_force"

    #@3e
    .line 8812
    invoke-static {v1, v5, p2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@41
    :cond_4
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@42
    .line 8817
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@45
    .line 8793
    return-void

    #@46
    .line 8805
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v1

    #@47
    :try_start_3
    monitor-exit v4

    #@48
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@49
    .line 8816
    :catchall_1
    move-exception v1

    #@4a
    .line 8817
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4d
    .line 8816
    throw v1
.end method

.method public setForcedDisplaySize(III)V
    .locals 11
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I

    #@0
    .prologue
    .line 8759
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 8760
    const-string/jumbo v7, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 8759
    invoke-virtual {v6, v7}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v6

    #@9
    if-eqz v6, :cond_0

    #@b
    .line 8762
    new-instance v6, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v7, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v6

    #@14
    .line 8765
    :cond_0
    if-eqz p1, :cond_1

    #@16
    .line 8766
    new-instance v6, Ljava/lang/IllegalArgumentException;

    #@18
    const-string/jumbo v7, "Can only set the default display"

    #@1b
    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@1e
    throw v6

    #@1f
    .line 8768
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@22
    move-result-wide v4

    #@23
    .line 8770
    .local v4, "ident":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@25
    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@26
    .line 8773
    const/16 v2, 0xc8

    #@28
    .line 8774
    .local v2, "MIN_WIDTH":I
    const/16 v1, 0xc8

    #@2a
    .line 8775
    .local v1, "MIN_HEIGHT":I
    const/4 v0, 0x2

    #@2b
    .line 8776
    .local v0, "MAX_SCALE":I
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@2e
    move-result-object v3

    #@2f
    .line 8777
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_2

    #@31
    .line 8778
    const/16 v6, 0xc8

    #@33
    invoke-static {p2, v6}, Ljava/lang/Math;->max(II)I

    #@36
    move-result v6

    #@37
    .line 8779
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    #@39
    mul-int/lit8 v8, v8, 0x2

    #@3b
    .line 8778
    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    #@3e
    move-result p2

    #@3f
    .line 8780
    const/16 v6, 0xc8

    #@41
    invoke-static {p3, v6}, Ljava/lang/Math;->max(II)I

    #@44
    move-result v6

    #@45
    .line 8781
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    #@47
    mul-int/lit8 v8, v8, 0x2

    #@49
    .line 8780
    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    #@4c
    move-result p3

    #@4d
    .line 8782
    invoke-direct {p0, v3, p2, p3}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    #@50
    .line 8783
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@52
    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    #@55
    move-result-object v6

    #@56
    .line 8784
    const-string/jumbo v8, "display_size_forced"

    #@59
    new-instance v9, Ljava/lang/StringBuilder;

    #@5b
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@5e
    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@61
    move-result-object v9

    #@62
    const-string/jumbo v10, ","

    #@65
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@68
    move-result-object v9

    #@69
    invoke-virtual {v9, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@6c
    move-result-object v9

    #@6d
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@70
    move-result-object v9

    #@71
    .line 8783
    invoke-static {v6, v8, v9}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@74
    :cond_2
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@75
    .line 8788
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@78
    .line 8758
    return-void

    #@79
    .line 8770
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v6

    #@7a
    :try_start_3
    monitor-exit v7

    #@7b
    throw v6
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@7c
    .line 8787
    .end local v0    # "MAX_SCALE":I
    .end local v1    # "MIN_HEIGHT":I
    .end local v2    # "MIN_WIDTH":I
    :catchall_1
    move-exception v6

    #@7d
    .line 8788
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@80
    .line 8787
    throw v6
.end method

.method setHoldScreenLocked(Lcom/android/server/wm/Session;)V
    .locals 6
    .param p1, "newHoldScreen"    # Lcom/android/server/wm/Session;

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 9410
    if-eqz p1, :cond_2

    #@3
    const/4 v0, 0x1

    #@4
    .line 9412
    .local v0, "hold":Z
    :goto_0
    if-eqz v0, :cond_0

    #@6
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    #@8
    if-eq v2, p1, :cond_0

    #@a
    .line 9413
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@c
    new-instance v3, Landroid/os/WorkSource;

    #@e
    iget v4, p1, Lcom/android/server/wm/Session;->mUid:I

    #@10
    invoke-direct {v3, v4}, Landroid/os/WorkSource;-><init>(I)V

    #@13
    invoke-virtual {v2, v3}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    #@16
    .line 9415
    :cond_0
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    #@18
    .line 9417
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@1a
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    #@1d
    move-result v1

    #@1e
    .line 9418
    .local v1, "state":Z
    if-eq v0, v1, :cond_1

    #@20
    .line 9419
    if-eqz v0, :cond_3

    #@22
    .line 9424
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@24
    iget-object v2, v2, Lcom/android/server/wm/WindowSurfacePlacer;->mHoldScreenWindow:Lcom/android/server/wm/WindowState;

    #@26
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    #@28
    .line 9425
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    #@2a
    .line 9426
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@2c
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->acquire()V

    #@2f
    .line 9427
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@31
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStartedLw()V

    #@34
    .line 9409
    :cond_1
    :goto_1
    return-void

    #@35
    .line 9410
    .end local v0    # "hold":Z
    .end local v1    # "state":Z
    :cond_2
    const/4 v0, 0x0

    #@36
    goto :goto_0

    #@37
    .line 9433
    .restart local v0    # "hold":Z
    .restart local v1    # "state":Z
    :cond_3
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    #@39
    .line 9434
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@3b
    iget-object v2, v2, Lcom/android/server/wm/WindowSurfacePlacer;->mObsuringWindow:Lcom/android/server/wm/WindowState;

    #@3d
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    #@3f
    .line 9435
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@41
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStoppedLw()V

    #@44
    .line 9436
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    #@46
    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    #@49
    goto :goto_1
.end method

.method public setInTouchMode(Z)V
    .locals 2
    .param p1, "mode"    # Z

    #@0
    .prologue
    .line 5970
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 5971
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@5
    monitor-exit v0

    #@6
    .line 5969
    return-void

    #@7
    .line 5970
    :catchall_0
    move-exception v1

    #@8
    monitor-exit v0

    #@9
    throw v1
.end method

.method setInsetsWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
    .locals 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "touchableInsets"    # I
    .param p4, "contentInsets"    # Landroid/graphics/Rect;
    .param p5, "visibleInsets"    # Landroid/graphics/Rect;
    .param p6, "touchableRegion"    # Landroid/graphics/Region;

    #@0
    .prologue
    .line 2619
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 2621
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 2622
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 2628
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_1

    #@e
    .line 2629
    const/4 v3, 0x0

    #@f
    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    #@11
    .line 2630
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    #@13
    invoke-virtual {v3, p4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@16
    .line 2631
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    #@18
    invoke-virtual {v3, p5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@1b
    .line 2632
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    #@1d
    invoke-virtual {v3, p6}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    #@20
    .line 2633
    iput p3, v2, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    #@22
    .line 2634
    iget v3, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@24
    const/high16 v5, 0x3f800000    # 1.0f

    #@26
    cmpl-float v3, v3, v5

    #@28
    if-eqz v3, :cond_0

    #@2a
    .line 2635
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    #@2c
    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@2e
    invoke-virtual {v3, v5}, Landroid/graphics/Rect;->scale(F)V

    #@31
    .line 2636
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    #@33
    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@35
    invoke-virtual {v3, v5}, Landroid/graphics/Rect;->scale(F)V

    #@38
    .line 2637
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    #@3a
    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    #@3c
    invoke-virtual {v3, v5}, Landroid/graphics/Region;->scale(F)V

    #@3f
    .line 2639
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@42
    .line 2640
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@44
    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@47
    :cond_1
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@48
    .line 2644
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@4b
    .line 2618
    return-void

    #@4c
    .line 2621
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@4d
    :try_start_3
    monitor-exit v4

    #@4e
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@4f
    .line 2643
    :catchall_1
    move-exception v3

    #@50
    .line 2644
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@53
    .line 2643
    throw v3
.end method

.method public setNewConfiguration(Landroid/content/res/Configuration;)[I
    .locals 3
    .param p1, "config"    # Landroid/content/res/Configuration;

    #@0
    .prologue
    .line 3749
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3750
    const-string/jumbo v2, "setNewConfiguration()"

    #@6
    .line 3749
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3751
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3754
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v2

    #@18
    .line 3755
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@1a
    if-eqz v1, :cond_1

    #@1c
    .line 3756
    const/4 v1, 0x0

    #@1d
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@1f
    .line 3757
    const-string/jumbo v1, "new-config"

    #@22
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@24
    .line 3759
    :cond_1
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@26
    invoke-virtual {v1, p1}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@29
    move-result v1

    #@2a
    if-eqz v1, :cond_2

    #@2c
    const/4 v0, 0x1

    #@2d
    .line 3760
    .local v0, "configChanged":Z
    :goto_0
    if-nez v0, :cond_3

    #@2f
    .line 3761
    const/4 v1, 0x0

    #@30
    monitor-exit v2

    #@31
    return-object v1

    #@32
    .line 3759
    .end local v0    # "configChanged":Z
    :cond_2
    const/4 v0, 0x0

    #@33
    .restart local v0    # "configChanged":Z
    goto :goto_0

    #@34
    .line 3763
    :cond_3
    :try_start_1
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->prepareFreezingAllTaskBounds()V

    #@37
    .line 3764
    new-instance v1, Landroid/content/res/Configuration;

    #@39
    invoke-direct {v1, p1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    #@3c
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@3e
    .line 3765
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->onConfigurationChanged()[I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@41
    move-result-object v1

    #@42
    monitor-exit v2

    #@43
    return-object v1

    #@44
    .line 3754
    .end local v0    # "configChanged":Z
    :catchall_0
    move-exception v1

    #@45
    monitor-exit v2

    #@46
    throw v1
.end method

.method public setOverscan(IIIII)V
    .locals 9
    .param p1, "displayId"    # I
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    #@0
    .prologue
    .line 9051
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    .line 9052
    const-string/jumbo v2, "android.permission.WRITE_SECURE_SETTINGS"

    #@5
    .line 9051
    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 9054
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v2, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    #@10
    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 9057
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@17
    move-result-wide v6

    #@18
    .line 9059
    .local v6, "ident":J
    :try_start_0
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1a
    monitor-enter v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@1b
    .line 9060
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    #@1e
    move-result-object v1

    #@1f
    .line 9061
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_1

    #@21
    move-object v0, p0

    #@22
    move v2, p2

    #@23
    move v3, p3

    #@24
    move v4, p4

    #@25
    move v5, p5

    #@26
    .line 9062
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@29
    :cond_1
    :try_start_2
    monitor-exit v8
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@2a
    .line 9066
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2d
    .line 9050
    return-void

    #@2e
    .line 9059
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_0
    move-exception v0

    #@2f
    :try_start_3
    monitor-exit v8

    #@30
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@31
    .line 9065
    :catchall_1
    move-exception v0

    #@32
    .line 9066
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@35
    .line 9065
    throw v0
.end method

.method public setReplacingWindow(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "animate"    # Z

    #@0
    .prologue
    .line 10824
    const/4 v0, 0x0

    #@1
    .line 10825
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 10826
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@7
    move-result-object v0

    #@8
    .line 10827
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@a
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    #@d
    move-result v1

    #@e
    if-eqz v1, :cond_0

    #@10
    .line 10832
    invoke-virtual {v0, p2}, Lcom/android/server/wm/AppWindowToken;->setReplacingWindows(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@13
    monitor-exit v2

    #@14
    .line 10823
    return-void

    #@15
    .line 10828
    :cond_0
    :try_start_1
    const-string/jumbo v1, "WindowManager"

    #@18
    new-instance v3, Ljava/lang/StringBuilder;

    #@1a
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@1d
    const-string/jumbo v4, "Attempted to set replacing window on non-existing app token "

    #@20
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v3

    #@24
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@27
    move-result-object v3

    #@28
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2b
    move-result-object v3

    #@2c
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v2

    #@30
    .line 10830
    return-void

    #@31
    .line 10825
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@32
    monitor-exit v2

    #@33
    throw v1
.end method

.method public setReplacingWindows(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "childrenOnly"    # Z

    #@0
    .prologue
    .line 10847
    const/4 v0, 0x0

    #@1
    .line 10848
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 10849
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@7
    move-result-object v0

    #@8
    .line 10850
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_0

    #@a
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    #@d
    move-result v1

    #@e
    if-eqz v1, :cond_0

    #@10
    .line 10856
    if-eqz p2, :cond_1

    #@12
    .line 10857
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->setReplacingChildren()V

    #@15
    .line 10862
    :goto_0
    const/4 v1, 0x1

    #@16
    invoke-virtual {p0, p1, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleClearReplacingWindowIfNeeded(Landroid/os/IBinder;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@19
    monitor-exit v2

    #@1a
    .line 10846
    return-void

    #@1b
    .line 10851
    :cond_0
    :try_start_1
    const-string/jumbo v1, "WindowManager"

    #@1e
    new-instance v3, Ljava/lang/StringBuilder;

    #@20
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@23
    const-string/jumbo v4, "Attempted to set replacing window on non-existing app token "

    #@26
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@29
    move-result-object v3

    #@2a
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@2d
    move-result-object v3

    #@2e
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@31
    move-result-object v3

    #@32
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@35
    monitor-exit v2

    #@36
    .line 10853
    return-void

    #@37
    .line 10859
    :cond_1
    const/4 v1, 0x0

    #@38
    :try_start_2
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppWindowToken;->setReplacingWindows(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@3b
    goto :goto_0

    #@3c
    .line 10848
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v1

    #@3d
    monitor-exit v2

    #@3e
    throw v1
.end method

.method public setResizeDimLayer(ZIF)V
    .locals 2
    .param p1, "visible"    # Z
    .param p2, "targetStackId"    # I
    .param p3, "alpha"    # F

    #@0
    .prologue
    .line 10929
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 10930
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@6
    move-result-object v0

    #@7
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@a
    move-result-object v0

    #@b
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/DockedStackDividerController;->setResizeDimLayer(ZIF)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@e
    monitor-exit v1

    #@f
    .line 10928
    return-void

    #@10
    .line 10929
    :catchall_0
    move-exception v0

    #@11
    monitor-exit v1

    #@12
    throw v0
.end method

.method public setScreenCaptureDisabled(IZ)V
    .locals 8
    .param p1, "userId"    # I
    .param p2, "disabled"    # Z

    #@0
    .prologue
    .line 2261
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    #@3
    move-result v0

    #@4
    .line 2262
    .local v0, "callingUid":I
    const/16 v5, 0x3e8

    #@6
    if-eq v0, v5, :cond_0

    #@8
    .line 2263
    new-instance v5, Ljava/lang/SecurityException;

    #@a
    const-string/jumbo v6, "Only system can call setScreenCaptureDisabled."

    #@d
    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@10
    throw v5

    #@11
    .line 2266
    :cond_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@13
    monitor-enter v6

    #@14
    .line 2267
    :try_start_0
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    #@16
    invoke-static {p2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    #@19
    move-result-object v7

    #@1a
    invoke-virtual {v5, p1, v7}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@1d
    .line 2269
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1f
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@22
    move-result v5

    #@23
    add-int/lit8 v1, v5, -0x1

    #@25
    .local v1, "displayNdx":I
    :goto_0
    if-ltz v1, :cond_3

    #@27
    .line 2270
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@29
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@2c
    move-result-object v5

    #@2d
    check-cast v5, Lcom/android/server/wm/DisplayContent;

    #@2f
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@32
    move-result-object v4

    #@33
    .line 2271
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@36
    move-result v5

    #@37
    add-int/lit8 v3, v5, -0x1

    #@39
    .local v3, "winNdx":I
    :goto_1
    if-ltz v3, :cond_2

    #@3b
    .line 2272
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@3e
    move-result-object v2

    #@3f
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@41
    .line 2273
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v5, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@43
    if-eqz v5, :cond_1

    #@45
    iget v5, v2, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    #@47
    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    #@4a
    move-result v5

    #@4b
    if-ne p1, v5, :cond_1

    #@4d
    .line 2274
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@4f
    invoke-virtual {v5, p2}, Lcom/android/server/wm/WindowStateAnimator;->setSecureLocked(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@52
    .line 2271
    :cond_1
    add-int/lit8 v3, v3, -0x1

    #@54
    goto :goto_1

    #@55
    .line 2269
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_2
    add-int/lit8 v1, v1, -0x1

    #@57
    goto :goto_0

    #@58
    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3
    monitor-exit v6

    #@59
    .line 2260
    return-void

    #@5a
    .line 2266
    .end local v1    # "displayNdx":I
    :catchall_0
    move-exception v5

    #@5b
    monitor-exit v6

    #@5c
    throw v5
.end method

.method public setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
    .locals 1
    .param p1, "value"    # Ljava/lang/String;

    #@0
    .prologue
    .line 6118
    const-string/jumbo v0, "persist.sys.strictmode.visual"

    #@3
    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    #@6
    .line 6117
    return-void
.end method

.method public setTaskDockedResizing(IZ)V
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "resizing"    # Z

    #@0
    .prologue
    .line 5232
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 5233
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 5234
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_0

    #@d
    .line 5235
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    #@f
    new-instance v3, Ljava/lang/StringBuilder;

    #@11
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v4, "setTaskDockedResizing: taskId "

    #@17
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v3

    #@1b
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@1e
    move-result-object v3

    #@1f
    const-string/jumbo v4, " not found."

    #@22
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v3

    #@26
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@29
    move-result-object v3

    #@2a
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@2d
    monitor-exit v2

    #@2e
    .line 5236
    return-void

    #@2f
    .line 5238
    :cond_0
    const/4 v1, 0x1

    #@30
    :try_start_1
    invoke-virtual {v0, p2, v1}, Lcom/android/server/wm/Task;->setDragResizing(ZI)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@33
    monitor-exit v2

    #@34
    .line 5231
    return-void

    #@35
    .line 5232
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@36
    monitor-exit v2

    #@37
    throw v1
.end method

.method public setTaskResizeable(II)V
    .locals 3
    .param p1, "taskId"    # I
    .param p2, "resizeMode"    # I

    #@0
    .prologue
    .line 10955
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 10956
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8
    move-result-object v0

    #@9
    check-cast v0, Lcom/android/server/wm/Task;

    #@b
    .line 10957
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_0

    #@d
    .line 10958
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->setResizeable(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@10
    :cond_0
    monitor-exit v2

    #@11
    .line 10954
    return-void

    #@12
    .line 10955
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_0
    move-exception v1

    #@13
    monitor-exit v2

    #@14
    throw v1
.end method

.method setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z
    .locals 17
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "visible"    # Z
    .param p4, "transit"    # I
    .param p5, "performLayout"    # Z
    .param p6, "isVoiceInteraction"    # Z

    #@0
    .prologue
    .line 4288
    const/4 v9, 0x0

    #@1
    .line 4290
    .local v9, "delayed":Z
    move-object/from16 v0, p1

    #@3
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@5
    move/from16 v0, p3

    #@7
    if-ne v2, v0, :cond_0

    #@9
    .line 4291
    if-eqz p3, :cond_8

    #@b
    const/4 v2, 0x0

    #@c
    :goto_0
    move-object/from16 v0, p1

    #@e
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    #@10
    .line 4292
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    #@13
    .line 4300
    :cond_0
    const/4 v13, 0x0

    #@14
    .line 4301
    .local v13, "visibilityChanged":Z
    move-object/from16 v0, p1

    #@16
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@18
    move/from16 v0, p3

    #@1a
    if-eq v2, v0, :cond_2

    #@1c
    move-object/from16 v0, p1

    #@1e
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@20
    if-eqz v2, :cond_1

    #@22
    move-object/from16 v0, p1

    #@24
    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    #@26
    if-nez v2, :cond_2

    #@28
    .line 4302
    :cond_1
    if-eqz p3, :cond_10

    #@2a
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->waitingForReplacement()Z

    #@2d
    move-result v2

    #@2e
    .line 4301
    if-eqz v2, :cond_10

    #@30
    .line 4303
    :cond_2
    const/4 v8, 0x0

    #@31
    .line 4308
    .local v8, "changed":Z
    const/4 v11, 0x0

    #@32
    .line 4310
    .local v11, "runningAppAnimation":Z
    const/4 v2, -0x1

    #@33
    move/from16 v0, p4

    #@35
    if-eq v0, v2, :cond_6

    #@37
    .line 4311
    move-object/from16 v0, p1

    #@39
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@3b
    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@3d
    sget-object v3, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    #@3f
    if-ne v2, v3, :cond_3

    #@41
    .line 4312
    move-object/from16 v0, p1

    #@43
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@45
    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->setNullAnimation()V

    #@48
    :cond_3
    move-object/from16 v2, p0

    #@4a
    move-object/from16 v3, p1

    #@4c
    move-object/from16 v4, p2

    #@4e
    move/from16 v5, p4

    #@50
    move/from16 v6, p3

    #@52
    move/from16 v7, p6

    #@54
    .line 4314
    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    #@57
    move-result v2

    #@58
    if-eqz v2, :cond_4

    #@5a
    .line 4315
    const/4 v11, 0x1

    #@5b
    const/4 v9, 0x1

    #@5c
    .line 4317
    :cond_4
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@5f
    move-result-object v15

    #@60
    .line 4319
    .local v15, "window":Lcom/android/server/wm/WindowState;
    if-eqz v15, :cond_5

    #@62
    move-object/from16 v0, p0

    #@64
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@66
    if-eqz v2, :cond_5

    #@68
    .line 4320
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@6b
    move-result v2

    #@6c
    if-nez v2, :cond_5

    #@6e
    .line 4321
    move-object/from16 v0, p0

    #@70
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@72
    move/from16 v0, p4

    #@74
    invoke-virtual {v2, v15, v0}, Lcom/android/server/wm/AccessibilityController;->onAppWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@77
    .line 4323
    :cond_5
    const/4 v8, 0x1

    #@78
    .line 4326
    .end local v15    # "window":Lcom/android/server/wm/WindowState;
    :cond_6
    move-object/from16 v0, p1

    #@7a
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@7c
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@7f
    move-result v16

    #@80
    .line 4327
    .local v16, "windowsCount":I
    const/4 v10, 0x0

    #@81
    .local v10, "i":I
    :goto_1
    move/from16 v0, v16

    #@83
    if-ge v10, v0, :cond_d

    #@85
    .line 4328
    move-object/from16 v0, p1

    #@87
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@89
    invoke-virtual {v2, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@8c
    move-result-object v14

    #@8d
    check-cast v14, Lcom/android/server/wm/WindowState;

    #@8f
    .line 4329
    .local v14, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p1

    #@91
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@93
    if-ne v14, v2, :cond_9

    #@95
    .line 4333
    if-nez p3, :cond_7

    #@97
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@9a
    move-result v2

    #@9b
    if-eqz v2, :cond_7

    #@9d
    move-object/from16 v0, p1

    #@9f
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@a1
    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    #@a4
    move-result v2

    #@a5
    if-eqz v2, :cond_7

    #@a7
    .line 4334
    const/4 v2, 0x1

    #@a8
    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    #@aa
    .line 4335
    const/4 v2, 0x1

    #@ab
    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    #@ad
    .line 4336
    const/4 v2, 0x1

    #@ae
    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mWindowRemovalAllowed:Z

    #@b0
    .line 4327
    :cond_7
    :goto_2
    add-int/lit8 v10, v10, 0x1

    #@b2
    goto :goto_1

    #@b3
    .line 4291
    .end local v8    # "changed":Z
    .end local v10    # "i":I
    .end local v11    # "runningAppAnimation":Z
    .end local v13    # "visibilityChanged":Z
    .end local v14    # "win":Lcom/android/server/wm/WindowState;
    .end local v16    # "windowsCount":I
    :cond_8
    const/4 v2, 0x1

    #@b4
    goto/16 :goto_0

    #@b6
    .line 4343
    .restart local v8    # "changed":Z
    .restart local v10    # "i":I
    .restart local v11    # "runningAppAnimation":Z
    .restart local v13    # "visibilityChanged":Z
    .restart local v14    # "win":Lcom/android/server/wm/WindowState;
    .restart local v16    # "windowsCount":I
    :cond_9
    if-eqz p3, :cond_b

    #@b8
    .line 4344
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@bb
    move-result v2

    #@bc
    if-nez v2, :cond_7

    #@be
    .line 4345
    if-nez v11, :cond_a

    #@c0
    .line 4346
    iget-object v2, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@c2
    .line 4347
    const/4 v3, 0x1

    #@c3
    const/4 v4, 0x1

    #@c4
    .line 4346
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@c7
    .line 4349
    move-object/from16 v0, p0

    #@c9
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@cb
    if-eqz v2, :cond_a

    #@cd
    .line 4350
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@d0
    move-result v2

    #@d1
    if-nez v2, :cond_a

    #@d3
    .line 4351
    move-object/from16 v0, p0

    #@d5
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@d7
    .line 4352
    const/4 v3, 0x1

    #@d8
    .line 4351
    invoke-virtual {v2, v14, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@db
    .line 4355
    :cond_a
    const/4 v8, 0x1

    #@dc
    .line 4356
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@df
    goto :goto_2

    #@e0
    .line 4358
    :cond_b
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    #@e3
    move-result v2

    #@e4
    if-eqz v2, :cond_7

    #@e6
    .line 4359
    if-nez v11, :cond_c

    #@e8
    .line 4360
    iget-object v2, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@ea
    .line 4361
    const/4 v3, 0x2

    #@eb
    const/4 v4, 0x0

    #@ec
    .line 4360
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    #@ef
    .line 4363
    move-object/from16 v0, p0

    #@f1
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@f3
    if-eqz v2, :cond_c

    #@f5
    .line 4364
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    #@f8
    move-result v2

    #@f9
    if-nez v2, :cond_c

    #@fb
    .line 4365
    move-object/from16 v0, p0

    #@fd
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@ff
    .line 4366
    const/4 v3, 0x2

    #@100
    .line 4365
    invoke-virtual {v2, v14, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    #@103
    .line 4369
    :cond_c
    const/4 v8, 0x1

    #@104
    .line 4370
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@107
    goto :goto_2

    #@108
    .line 4374
    .end local v14    # "win":Lcom/android/server/wm/WindowState;
    :cond_d
    if-eqz p3, :cond_15

    #@10a
    const/4 v2, 0x0

    #@10b
    :goto_3
    move-object/from16 v0, p1

    #@10d
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    #@10f
    move-object/from16 v0, p1

    #@111
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    #@113
    .line 4375
    const/4 v13, 0x1

    #@114
    .line 4376
    if-nez p3, :cond_16

    #@116
    .line 4377
    const/4 v2, 0x1

    #@117
    const/4 v3, 0x1

    #@118
    move-object/from16 v0, p0

    #@11a
    move-object/from16 v1, p1

    #@11c
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@11f
    .line 4392
    :cond_e
    :goto_4
    if-eqz v8, :cond_10

    #@121
    .line 4393
    move-object/from16 v0, p0

    #@123
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@125
    invoke-virtual {v2}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    #@128
    .line 4394
    if-eqz p5, :cond_f

    #@12a
    .line 4395
    const/4 v2, 0x3

    #@12b
    .line 4396
    const/4 v3, 0x0

    #@12c
    .line 4395
    move-object/from16 v0, p0

    #@12e
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    #@131
    .line 4397
    move-object/from16 v0, p0

    #@133
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@135
    invoke-virtual {v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@138
    .line 4399
    :cond_f
    move-object/from16 v0, p0

    #@13a
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@13c
    const/4 v3, 0x0

    #@13d
    invoke-virtual {v2, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    #@140
    .line 4403
    .end local v8    # "changed":Z
    .end local v10    # "i":I
    .end local v11    # "runningAppAnimation":Z
    .end local v16    # "windowsCount":I
    :cond_10
    move-object/from16 v0, p1

    #@142
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@144
    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@146
    if-eqz v2, :cond_11

    #@148
    .line 4404
    const/4 v9, 0x1

    #@149
    .line 4407
    :cond_11
    move-object/from16 v0, p1

    #@14b
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@14d
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    #@150
    move-result v2

    #@151
    add-int/lit8 v10, v2, -0x1

    #@153
    .restart local v10    # "i":I
    :goto_5
    if-ltz v10, :cond_12

    #@155
    if-eqz v9, :cond_17

    #@157
    .line 4413
    :cond_12
    if-eqz v13, :cond_14

    #@159
    .line 4414
    if-eqz p3, :cond_13

    #@15b
    if-eqz v9, :cond_19

    #@15d
    .line 4421
    :cond_13
    :goto_6
    move-object/from16 v0, p0

    #@15f
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    #@161
    move-object/from16 v0, p1

    #@163
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@166
    move-result v2

    #@167
    if-nez v2, :cond_14

    #@169
    move-object/from16 v0, p0

    #@16b
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@16d
    move-object/from16 v0, p1

    #@16f
    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    #@172
    move-result v2

    #@173
    if-eqz v2, :cond_1a

    #@175
    .line 4430
    :cond_14
    :goto_7
    return v9

    #@176
    .line 4374
    .restart local v8    # "changed":Z
    .restart local v11    # "runningAppAnimation":Z
    .restart local v16    # "windowsCount":I
    :cond_15
    const/4 v2, 0x1

    #@177
    goto :goto_3

    #@178
    .line 4381
    :cond_16
    move-object/from16 v0, p1

    #@17a
    iget-object v12, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    #@17c
    .line 4382
    .local v12, "swin":Lcom/android/server/wm/WindowState;
    if-eqz v12, :cond_e

    #@17e
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@181
    move-result v2

    #@182
    if-nez v2, :cond_e

    #@184
    .line 4383
    const/4 v2, 0x0

    #@185
    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    #@187
    .line 4384
    const/4 v2, 0x0

    #@188
    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    #@18a
    goto :goto_4

    #@18b
    .line 4408
    .end local v8    # "changed":Z
    .end local v11    # "runningAppAnimation":Z
    .end local v12    # "swin":Lcom/android/server/wm/WindowState;
    .end local v16    # "windowsCount":I
    :cond_17
    move-object/from16 v0, p1

    #@18d
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@18f
    invoke-virtual {v2, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@192
    move-result-object v2

    #@193
    check-cast v2, Lcom/android/server/wm/WindowState;

    #@195
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@197
    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isWindowAnimationSet()Z

    #@19a
    move-result v2

    #@19b
    if-eqz v2, :cond_18

    #@19d
    .line 4409
    const/4 v9, 0x1

    #@19e
    .line 4407
    :cond_18
    add-int/lit8 v10, v10, -0x1

    #@1a0
    goto :goto_5

    #@1a1
    .line 4417
    :cond_19
    const/4 v2, 0x1

    #@1a2
    move-object/from16 v0, p1

    #@1a4
    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    #@1a6
    .line 4418
    move-object/from16 v0, p0

    #@1a8
    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    #@1aa
    move-object/from16 v0, p1

    #@1ac
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@1ae
    invoke-virtual {v2, v3}, Landroid/view/WindowManagerInternal$AppTransitionListener;->onAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    #@1b1
    goto :goto_6

    #@1b2
    .line 4425
    :cond_1a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@1b5
    move-result-object v2

    #@1b6
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    #@1b9
    move-result-object v2

    #@1ba
    invoke-virtual {v2}, Lcom/android/server/wm/DockedStackDividerController;->notifyAppVisibilityChanged()V

    #@1bd
    goto :goto_7
.end method

.method setTransparentRegionWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Region;)V
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "region"    # Landroid/graphics/Region;

    #@0
    .prologue
    .line 2601
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 2603
    .local v0, "origId":J
    :try_start_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@7
    .line 2604
    const/4 v3, 0x0

    #@8
    :try_start_1
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@b
    move-result-object v2

    #@c
    .line 2608
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_0

    #@e
    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@10
    if-eqz v3, :cond_0

    #@12
    .line 2609
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@14
    invoke-virtual {v3, p3}, Lcom/android/server/wm/WindowStateAnimator;->setTransparentRegionHintLocked(Landroid/graphics/Region;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@17
    :cond_0
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@18
    .line 2613
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1b
    .line 2600
    return-void

    #@1c
    .line 2603
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v3

    #@1d
    :try_start_3
    monitor-exit v4

    #@1e
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@1f
    .line 2612
    :catchall_1
    move-exception v3

    #@20
    .line 2613
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@23
    .line 2612
    throw v3
.end method

.method public setWindowOpaque(Landroid/os/IBinder;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    #@0
    .prologue
    .line 4271
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v0

    #@3
    .line 4272
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    monitor-exit v0

    #@7
    .line 4270
    return-void

    #@8
    .line 4271
    :catchall_0
    move-exception v1

    #@9
    monitor-exit v0

    #@a
    throw v1
.end method

.method public setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    #@0
    .prologue
    .line 4277
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@3
    move-result-object v1

    #@4
    .line 4278
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_0

    #@6
    .line 4279
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    #@9
    move-result-object v0

    #@a
    .line 4280
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_0

    #@c
    .line 4281
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@e
    invoke-virtual {v2, p2}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    #@11
    .line 4276
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :cond_0
    return-void
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 3
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    #@0
    .prologue
    .line 5923
    const/4 v0, 0x0

    #@1
    .line 5924
    .local v0, "first":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    monitor-enter v2

    #@4
    .line 5933
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    if-nez v1, :cond_0

    #@8
    monitor-exit v2

    #@9
    .line 5934
    return-void

    #@a
    .line 5936
    :cond_0
    :try_start_1
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@c
    if-nez v1, :cond_2

    #@e
    .line 5937
    if-nez p2, :cond_1

    #@10
    monitor-exit v2

    #@11
    .line 5938
    return-void

    #@12
    .line 5940
    :cond_1
    const/4 v0, 0x1

    #@13
    .line 5942
    :cond_2
    :try_start_2
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@15
    if-eqz v1, :cond_3

    #@17
    monitor-exit v2

    #@18
    .line 5943
    return-void

    #@19
    .line 5945
    :cond_3
    const/4 v1, 0x1

    #@1a
    :try_start_3
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    #@1c
    .line 5946
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1e
    invoke-interface {v1, p1, p2}, Landroid/view/WindowManagerPolicy;->showBootMessage(Ljava/lang/CharSequence;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@21
    monitor-exit v2

    #@22
    .line 5948
    if-eqz v0, :cond_4

    #@24
    .line 5949
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    #@27
    .line 5922
    :cond_4
    return-void

    #@28
    .line 5924
    :catchall_0
    move-exception v1

    #@29
    monitor-exit v2

    #@2a
    throw v1
.end method

.method public showCircularMask(Z)V
    .locals 8
    .param p1, "visible"    # Z

    #@0
    .prologue
    .line 6006
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v6

    #@3
    .line 6010
    :try_start_0
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@6
    .line 6012
    if-eqz p1, :cond_2

    #@8
    .line 6014
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@a
    if-nez v0, :cond_0

    #@c
    .line 6015
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@e
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@11
    move-result-object v0

    #@12
    .line 6016
    const v1, 0x10e008e

    #@15
    .line 6015
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    #@18
    move-result v4

    #@19
    .line 6017
    .local v4, "screenOffset":I
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@1b
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@1e
    move-result-object v0

    #@1f
    .line 6018
    const v1, 0x10500a1

    #@22
    .line 6017
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    #@25
    move-result v5

    #@26
    .line 6020
    .local v5, "maskThickness":I
    new-instance v0, Lcom/android/server/wm/CircularDisplayMask;

    #@28
    .line 6021
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@2b
    move-result-object v1

    #@2c
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@2f
    move-result-object v1

    #@30
    .line 6022
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@32
    .line 6023
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@34
    .line 6024
    const/16 v7, 0x7e2

    #@36
    .line 6023
    invoke-interface {v3, v7}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@39
    move-result v3

    #@3a
    mul-int/lit16 v3, v3, 0x2710

    #@3c
    add-int/lit8 v3, v3, 0xa

    #@3e
    .line 6020
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/CircularDisplayMask;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;III)V

    #@41
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@43
    .line 6027
    .end local v4    # "screenOffset":I
    .end local v5    # "maskThickness":I
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@45
    const/4 v1, 0x1

    #@46
    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@49
    .line 6033
    :cond_1
    :goto_0
    :try_start_2
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@4c
    monitor-exit v6

    #@4d
    .line 6005
    return-void

    #@4e
    .line 6028
    :cond_2
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@50
    if-eqz v0, :cond_1

    #@52
    .line 6029
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    #@54
    const/4 v1, 0x0

    #@55
    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V

    #@58
    .line 6030
    const/4 v0, 0x0

    #@59
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@5b
    goto :goto_0

    #@5c
    .line 6032
    :catchall_0
    move-exception v0

    #@5d
    .line 6033
    :try_start_4
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@60
    .line 6032
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@61
    .line 6006
    :catchall_1
    move-exception v0

    #@62
    monitor-exit v6

    #@63
    throw v0
.end method

.method public showEmulatorDisplayOverlay()V
    .locals 7

    #@0
    .prologue
    .line 6041
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v1

    #@3
    .line 6045
    :try_start_0
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@6
    .line 6047
    :try_start_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@8
    if-nez v0, :cond_0

    #@a
    .line 6048
    new-instance v0, Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@c
    .line 6049
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@e
    .line 6050
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@11
    move-result-object v3

    #@12
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    #@15
    move-result-object v3

    #@16
    .line 6051
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@18
    .line 6052
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1a
    .line 6053
    const/16 v6, 0x7e2

    #@1c
    .line 6052
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    #@1f
    move-result v5

    #@20
    mul-int/lit16 v5, v5, 0x2710

    #@22
    add-int/lit8 v5, v5, 0xa

    #@24
    .line 6048
    invoke-direct {v0, v2, v3, v4, v5}, Lcom/android/server/wm/EmulatorDisplayOverlay;-><init>(Landroid/content/Context;Landroid/view/Display;Landroid/view/SurfaceSession;I)V

    #@27
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@29
    .line 6056
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    #@2b
    const/4 v2, 0x1

    #@2c
    invoke-virtual {v0, v2}, Lcom/android/server/wm/EmulatorDisplayOverlay;->setVisibility(Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    .line 6058
    :try_start_2
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@32
    monitor-exit v1

    #@33
    .line 6040
    return-void

    #@34
    .line 6057
    :catchall_0
    move-exception v0

    #@35
    .line 6058
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@38
    .line 6057
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@39
    .line 6041
    :catchall_1
    move-exception v0

    #@3a
    monitor-exit v1

    #@3b
    throw v0
.end method

.method public showEmulatorDisplayOverlayIfNeeded()V
    .locals 3

    #@0
    .prologue
    .line 5997
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    #@5
    move-result-object v0

    #@6
    .line 5998
    const v1, 0x1120087

    #@9
    .line 5997
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    #@c
    move-result v0

    #@d
    if-eqz v0, :cond_0

    #@f
    .line 5999
    const-string/jumbo v0, "ro.emulator.circular"

    #@12
    const/4 v1, 0x0

    #@13
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    #@16
    move-result v0

    #@17
    .line 5997
    if-eqz v0, :cond_0

    #@19
    .line 6000
    sget-boolean v0, Landroid/os/Build;->IS_EMULATOR:Z

    #@1b
    .line 5997
    if-eqz v0, :cond_0

    #@1d
    .line 6001
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1f
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@21
    const/16 v2, 0x24

    #@23
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    #@26
    move-result-object v1

    #@27
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@2a
    .line 5996
    :cond_0
    return-void
.end method

.method showGlobalActions()V
    .locals 1

    #@0
    .prologue
    .line 5476
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->showGlobalActions()V

    #@5
    .line 5475
    return-void
.end method

.method public showRecentApps(Z)V
    .locals 1
    .param p1, "fromHome"    # Z

    #@0
    .prologue
    .line 10075
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->showRecentApps(Z)V

    #@5
    .line 10074
    return-void
.end method

.method public showStrictModeViolation(Z)V
    .locals 5
    .param p1, "on"    # Z

    #@0
    .prologue
    .line 6069
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    #@3
    move-result v0

    #@4
    .line 6070
    .local v0, "pid":I
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@6
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@8
    if-eqz p1, :cond_0

    #@a
    const/4 v1, 0x1

    #@b
    :goto_0
    const/16 v4, 0x19

    #@d
    invoke-virtual {v3, v4, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    #@10
    move-result-object v1

    #@11
    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    #@14
    .line 6068
    return-void

    #@15
    .line 6070
    :cond_0
    const/4 v1, 0x0

    #@16
    goto :goto_0
.end method

.method public shutdown(Z)V
    .locals 2
    .param p1, "confirm"    # Z

    #@0
    .prologue
    .line 5650
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "userrequested"

    #@5
    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Ljava/lang/String;Z)V

    #@8
    .line 5649
    return-void
.end method

.method public startAppFreezingScreen(Landroid/os/IBinder;I)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "configChanges"    # I

    #@0
    .prologue
    .line 4644
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4645
    const-string/jumbo v4, "setAppFreezingScreen()"

    #@6
    .line 4644
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v3

    #@a
    if-nez v3, :cond_0

    #@c
    .line 4646
    new-instance v3, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v3

    #@15
    .line 4649
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v4

    #@18
    .line 4650
    if-nez p2, :cond_1

    #@1a
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1d
    move-result v3

    #@1e
    if-eqz v3, :cond_1

    #@20
    monitor-exit v4

    #@21
    .line 4652
    return-void

    #@22
    .line 4655
    :cond_1
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@25
    move-result-object v2

    #@26
    .line 4656
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_2

    #@28
    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    #@2a
    if-nez v3, :cond_3

    #@2c
    .line 4657
    :cond_2
    const-string/jumbo v3, "WindowManager"

    #@2f
    new-instance v5, Ljava/lang/StringBuilder;

    #@31
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@34
    const-string/jumbo v6, "Attempted to freeze screen with non-existing app token: "

    #@37
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3a
    move-result-object v5

    #@3b
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@3e
    move-result-object v5

    #@3f
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@42
    move-result-object v5

    #@43
    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@46
    monitor-exit v4

    #@47
    .line 4658
    return-void

    #@48
    .line 4660
    :cond_3
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@4b
    move-result-wide v0

    #@4c
    .line 4661
    .local v0, "origId":J
    invoke-direct {p0, v2}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    #@4f
    .line 4662
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@52
    monitor-exit v4

    #@53
    .line 4643
    return-void

    #@54
    .line 4649
    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v3

    #@55
    monitor-exit v4

    #@56
    throw v3
.end method

.method public startFreezingScreen(II)V
    .locals 7
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    #@0
    .prologue
    .line 5301
    const-string/jumbo v2, "android.permission.FREEZE_SCREEN"

    #@3
    .line 5302
    const-string/jumbo v3, "startFreezingScreen()"

    #@6
    .line 5301
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 5303
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires FREEZE_SCREEN permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 5306
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 5307
    :try_start_0
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1a
    if-nez v2, :cond_1

    #@1c
    .line 5308
    const/4 v2, 0x1

    #@1d
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 5309
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@22
    move-result-wide v0

    #@23
    .line 5311
    .local v0, "origId":J
    const/4 v2, 0x0

    #@24
    :try_start_1
    invoke-direct {p0, v2, p1, p2}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@27
    .line 5312
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@29
    const/16 v4, 0x1e

    #@2b
    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@2e
    .line 5313
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@30
    const-wide/16 v4, 0x1388

    #@32
    const/16 v6, 0x1e

    #@34
    invoke-virtual {v2, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@37
    .line 5315
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@3a
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@3b
    .line 5300
    return-void

    #@3c
    .line 5314
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@3d
    .line 5315
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@40
    .line 5314
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@41
    .line 5306
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@42
    monitor-exit v3

    #@43
    throw v2
.end method

.method startMovingTask(Landroid/view/IWindow;FF)Z
    .locals 6
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "startX"    # F
    .param p3, "startY"    # F

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 7497
    const/4 v1, 0x0

    #@2
    .line 7498
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v3

    #@5
    .line 7499
    const/4 v2, 0x0

    #@6
    const/4 v4, 0x0

    #@7
    :try_start_0
    invoke-virtual {p0, v2, p1, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@a
    move-result-object v1

    #@b
    .line 7502
    .local v1, "win":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    #@c
    invoke-direct {p0, v1, v2, p2, p3}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@f
    move-result v2

    #@10
    if-nez v2, :cond_0

    #@12
    monitor-exit v3

    #@13
    .line 7503
    return v5

    #@14
    :cond_0
    monitor-exit v3

    #@15
    .line 7507
    :try_start_1
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    #@17
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    #@1a
    move-result-object v3

    #@1b
    iget v3, v3, Lcom/android/server/wm/Task;->mTaskId:I

    #@1d
    invoke-interface {v2, v3}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@20
    .line 7509
    :goto_0
    const/4 v2, 0x1

    #@21
    return v2

    #@22
    .line 7498
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v2

    #@23
    monitor-exit v3

    #@24
    throw v2

    #@25
    .line 7508
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v0

    #@26
    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method public startViewServer(I)Z
    .locals 4
    .param p1, "port"    # I

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 6848
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v1

    #@5
    if-eqz v1, :cond_0

    #@7
    .line 6849
    return v3

    #@8
    .line 6852
    :cond_0
    const-string/jumbo v1, "android.permission.DUMP"

    #@b
    const-string/jumbo v2, "startViewServer"

    #@e
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v1

    #@12
    if-nez v1, :cond_1

    #@14
    .line 6853
    return v3

    #@15
    .line 6856
    :cond_1
    const/16 v1, 0x400

    #@17
    if-ge p1, v1, :cond_2

    #@19
    .line 6857
    return v3

    #@1a
    .line 6860
    :cond_2
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1c
    if-eqz v1, :cond_4

    #@1e
    .line 6861
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@20
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    #@23
    move-result v1

    #@24
    if-nez v1, :cond_3

    #@26
    .line 6863
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@28
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    #@2b
    move-result v1

    #@2c
    return v1

    #@2d
    .line 6864
    :catch_0
    move-exception v0

    #@2e
    .line 6865
    .local v0, "e":Ljava/io/IOException;
    const-string/jumbo v1, "WindowManager"

    #@31
    const-string/jumbo v2, "View server did not start"

    #@34
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@37
    .line 6868
    .end local v0    # "e":Ljava/io/IOException;
    :cond_3
    return v3

    #@38
    .line 6872
    :cond_4
    :try_start_1
    new-instance v1, Lcom/android/server/wm/ViewServer;

    #@3a
    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/ViewServer;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    #@3d
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@3f
    .line 6873
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@41
    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    #@44
    move-result v1

    #@45
    return v1

    #@46
    .line 6874
    :catch_1
    move-exception v0

    #@47
    .line 6875
    .restart local v0    # "e":Ljava/io/IOException;
    const-string/jumbo v1, "WindowManager"

    #@4a
    const-string/jumbo v2, "View server did not start"

    #@4d
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@50
    .line 6877
    return v3
.end method

.method public statusBarVisibilityChanged(I)V
    .locals 2
    .param p1, "visibility"    # I

    #@0
    .prologue
    .line 9939
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    #@2
    const-string/jumbo v1, "android.permission.STATUS_BAR"

    #@5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    #@8
    move-result v0

    #@9
    if-eqz v0, :cond_0

    #@b
    .line 9941
    new-instance v0, Ljava/lang/SecurityException;

    #@d
    const-string/jumbo v1, "Caller does not hold permission android.permission.STATUS_BAR"

    #@10
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@13
    throw v0

    #@14
    .line 9945
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@16
    monitor-enter v1

    #@17
    .line 9946
    :try_start_0
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    #@19
    .line 9947
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1b
    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    #@1e
    move-result p1

    #@1f
    .line 9948
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@22
    monitor-exit v1

    #@23
    .line 9938
    return-void

    #@24
    .line 9945
    :catchall_0
    move-exception v0

    #@25
    monitor-exit v1

    #@26
    throw v0
.end method

.method public stopAppFreezingScreen(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "force"    # Z

    #@0
    .prologue
    .line 4668
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 4669
    const-string/jumbo v4, "setAppFreezingScreen()"

    #@6
    .line 4668
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v3

    #@a
    if-nez v3, :cond_0

    #@c
    .line 4670
    new-instance v3, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v3

    #@15
    .line 4673
    :cond_0
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v4

    #@18
    .line 4674
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    #@1b
    move-result-object v2

    #@1c
    .line 4675
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_1

    #@1e
    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@20
    if-nez v3, :cond_2

    #@22
    :cond_1
    monitor-exit v4

    #@23
    .line 4676
    return-void

    #@24
    .line 4678
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@27
    move-result-wide v0

    #@28
    .line 4681
    .local v0, "origId":J
    const/4 v3, 0x1

    #@29
    invoke-virtual {p0, v2, v3, p2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    #@2c
    .line 4682
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2f
    monitor-exit v4

    #@30
    .line 4667
    return-void

    #@31
    .line 4673
    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_0
    move-exception v3

    #@32
    monitor-exit v4

    #@33
    throw v3
.end method

.method stopFreezingDisplayLocked()V
    .locals 18

    #@0
    .prologue
    .line 9784
    move-object/from16 v0, p0

    #@2
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@4
    if-nez v3, :cond_0

    #@6
    .line 9785
    return-void

    #@7
    .line 9788
    :cond_0
    move-object/from16 v0, p0

    #@9
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@b
    if-nez v3, :cond_1

    #@d
    move-object/from16 v0, p0

    #@f
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@11
    if-lez v3, :cond_2

    #@13
    .line 9797
    :cond_1
    return-void

    #@14
    .line 9789
    :cond_2
    move-object/from16 v0, p0

    #@16
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@18
    const/4 v4, 0x1

    #@19
    if-eq v3, v4, :cond_1

    #@1b
    .line 9790
    move-object/from16 v0, p0

    #@1d
    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 9788
    if-nez v3, :cond_1

    #@21
    .line 9790
    move-object/from16 v0, p0

    #@23
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    #@25
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    #@28
    move-result v3

    #@29
    if-eqz v3, :cond_1

    #@2b
    .line 9803
    const/4 v3, 0x0

    #@2c
    move-object/from16 v0, p0

    #@2e
    iput-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    #@30
    .line 9804
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@33
    move-result-wide v4

    #@34
    move-object/from16 v0, p0

    #@36
    iget-wide v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@38
    sub-long/2addr v4, v6

    #@39
    long-to-int v3, v4

    #@3a
    move-object/from16 v0, p0

    #@3c
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@3e
    .line 9805
    new-instance v16, Ljava/lang/StringBuilder;

    #@40
    const/16 v3, 0x80

    #@42
    move-object/from16 v0, v16

    #@44
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    #@47
    .line 9806
    .local v16, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v3, "Screen frozen for "

    #@4a
    move-object/from16 v0, v16

    #@4c
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4f
    .line 9807
    move-object/from16 v0, p0

    #@51
    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    #@53
    int-to-long v4, v3

    #@54
    move-object/from16 v0, v16

    #@56
    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    #@59
    .line 9808
    move-object/from16 v0, p0

    #@5b
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@5d
    if-eqz v3, :cond_3

    #@5f
    .line 9809
    const-string/jumbo v3, " due to "

    #@62
    move-object/from16 v0, v16

    #@64
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@67
    .line 9810
    move-object/from16 v0, p0

    #@69
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@6b
    move-object/from16 v0, v16

    #@6d
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@70
    .line 9812
    :cond_3
    const-string/jumbo v3, "WindowManager"

    #@73
    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@76
    move-result-object v4

    #@77
    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@7a
    .line 9813
    move-object/from16 v0, p0

    #@7c
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@7e
    const/16 v4, 0x11

    #@80
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@83
    .line 9814
    move-object/from16 v0, p0

    #@85
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@87
    const/16 v4, 0x1e

    #@89
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@8c
    .line 9819
    const/16 v17, 0x0

    #@8e
    .line 9821
    .local v17, "updateRotation":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@91
    move-result-object v12

    #@92
    .line 9822
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@95
    move-result v13

    #@96
    .line 9824
    .local v13, "displayId":I
    move-object/from16 v0, p0

    #@98
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@9a
    invoke-virtual {v3, v13}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@9d
    move-result-object v2

    #@9e
    .line 9825
    .local v2, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v2, :cond_8

    #@a0
    .line 9826
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    #@a3
    move-result v3

    #@a4
    .line 9825
    if-eqz v3, :cond_8

    #@a6
    .line 9829
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@a9
    move-result-object v14

    #@aa
    .line 9831
    .local v14, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@ad
    move-result v15

    #@ae
    .line 9832
    .local v15, "isDimming":Z
    move-object/from16 v0, p0

    #@b0
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@b2
    move-object/from16 v0, p0

    #@b4
    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@b6
    move-object/from16 v0, p0

    #@b8
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@ba
    invoke-interface {v3, v4, v5, v15}, Landroid/view/WindowManagerPolicy;->validateRotationAnimationLw(IIZ)Z

    #@bd
    move-result v3

    #@be
    if-nez v3, :cond_4

    #@c0
    .line 9833
    const/4 v3, 0x0

    #@c1
    move-object/from16 v0, p0

    #@c3
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@c5
    const/4 v3, 0x0

    #@c6
    move-object/from16 v0, p0

    #@c8
    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@ca
    .line 9835
    :cond_4
    move-object/from16 v0, p0

    #@cc
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@ce
    const-wide/16 v4, 0x2710

    #@d0
    .line 9836
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    #@d3
    move-result v6

    #@d4
    iget v7, v14, Landroid/view/DisplayInfo;->logicalWidth:I

    #@d6
    .line 9837
    iget v8, v14, Landroid/view/DisplayInfo;->logicalHeight:I

    #@d8
    move-object/from16 v0, p0

    #@da
    iget v9, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    #@dc
    move-object/from16 v0, p0

    #@de
    iget v10, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    #@e0
    .line 9835
    invoke-virtual/range {v2 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    #@e3
    move-result v3

    #@e4
    if-eqz v3, :cond_7

    #@e6
    .line 9838
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    #@e9
    .line 9852
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "isDimming":Z
    :goto_0
    move-object/from16 v0, p0

    #@eb
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@ed
    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->thawInputDispatchingLw()V

    #@f0
    .line 9860
    const/4 v3, 0x0

    #@f1
    move-object/from16 v0, p0

    #@f3
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    #@f6
    move-result v11

    #@f7
    .line 9867
    .local v11, "configChanged":Z
    move-object/from16 v0, p0

    #@f9
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@fb
    const/16 v4, 0xf

    #@fd
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@100
    .line 9868
    move-object/from16 v0, p0

    #@102
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@104
    const-wide/16 v4, 0x7d0

    #@106
    const/16 v6, 0xf

    #@108
    invoke-virtual {v3, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@10b
    .line 9870
    move-object/from16 v0, p0

    #@10d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    #@10f
    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->release()V

    #@112
    .line 9872
    if-eqz v17, :cond_5

    #@114
    .line 9874
    const/4 v3, 0x0

    #@115
    move-object/from16 v0, p0

    #@117
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@11a
    move-result v3

    #@11b
    or-int/2addr v11, v3

    #@11c
    .line 9877
    :cond_5
    if-eqz v11, :cond_6

    #@11e
    .line 9878
    move-object/from16 v0, p0

    #@120
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@122
    const/16 v4, 0x12

    #@124
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@127
    .line 9783
    :cond_6
    return-void

    #@128
    .line 9840
    .end local v11    # "configChanged":Z
    .restart local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v15    # "isDimming":Z
    :cond_7
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@12b
    .line 9841
    move-object/from16 v0, p0

    #@12d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@12f
    const/4 v4, 0x0

    #@130
    invoke-virtual {v3, v13, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@133
    .line 9842
    const/16 v17, 0x1

    #@135
    goto :goto_0

    #@136
    .line 9845
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "isDimming":Z
    :cond_8
    if-eqz v2, :cond_9

    #@138
    .line 9846
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    #@13b
    .line 9847
    move-object/from16 v0, p0

    #@13d
    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@13f
    const/4 v4, 0x0

    #@140
    invoke-virtual {v3, v13, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    #@143
    .line 9849
    :cond_9
    const/16 v17, 0x1

    #@145
    goto :goto_0
.end method

.method public stopFreezingScreen()V
    .locals 4

    #@0
    .prologue
    .line 5323
    const-string/jumbo v2, "android.permission.FREEZE_SCREEN"

    #@3
    .line 5324
    const-string/jumbo v3, "stopFreezingScreen()"

    #@6
    .line 5323
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v2

    #@a
    if-nez v2, :cond_0

    #@c
    .line 5325
    new-instance v2, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v3, "Requires FREEZE_SCREEN permission"

    #@11
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v2

    #@15
    .line 5328
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@17
    monitor-enter v3

    #@18
    .line 5329
    :try_start_0
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1a
    if-eqz v2, :cond_1

    #@1c
    .line 5330
    const/4 v2, 0x0

    #@1d
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    #@1f
    .line 5331
    const-string/jumbo v2, "client"

    #@22
    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@24
    .line 5332
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    #@27
    move-result-wide v0

    #@28
    .line 5334
    .local v0, "origId":J
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@2b
    .line 5336
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@2e
    .end local v0    # "origId":J
    :cond_1
    monitor-exit v3

    #@2f
    .line 5322
    return-void

    #@30
    .line 5335
    .restart local v0    # "origId":J
    :catchall_0
    move-exception v2

    #@31
    .line 5336
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@34
    .line 5335
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@35
    .line 5328
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    #@36
    monitor-exit v3

    #@37
    throw v2
.end method

.method stopUsingSavedSurfaceLocked()V
    .locals 3

    #@0
    .prologue
    .line 8654
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    #@2
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    #@5
    move-result v2

    #@6
    add-int/lit8 v0, v2, -0x1

    #@8
    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    #@a
    .line 8655
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    #@c
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@f
    move-result-object v1

    #@10
    check-cast v1, Lcom/android/server/wm/AppWindowToken;

    #@12
    .line 8656
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->stopUsingSavedSurfaceLocked()V

    #@15
    .line 8654
    add-int/lit8 v0, v0, -0x1

    #@17
    goto :goto_0

    #@18
    .line 8658
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    #@1a
    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    #@1d
    .line 8653
    return-void
.end method

.method public stopViewServer()Z
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 6895
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@4
    move-result v0

    #@5
    if-eqz v0, :cond_0

    #@7
    .line 6896
    return v2

    #@8
    .line 6899
    :cond_0
    const-string/jumbo v0, "android.permission.DUMP"

    #@b
    const-string/jumbo v1, "stopViewServer"

    #@e
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@11
    move-result v0

    #@12
    if-nez v0, :cond_1

    #@14
    .line 6900
    return v2

    #@15
    .line 6903
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@17
    if-eqz v0, :cond_2

    #@19
    .line 6904
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    #@1b
    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->stop()Z

    #@1e
    move-result v0

    #@1f
    return v0

    #@20
    .line 6906
    :cond_2
    return v2
.end method

.method subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .locals 1
    .param p1, "display"    # Landroid/graphics/Rect;
    .param p2, "insets"    # Landroid/graphics/Rect;
    .param p3, "inOutBounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11044
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    #@2
    invoke-virtual {v0, p1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@5
    .line 11045
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    #@7
    invoke-virtual {v0, p2}, Landroid/graphics/Rect;->inset(Landroid/graphics/Rect;)V

    #@a
    .line 11046
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    #@c
    invoke-virtual {p3, v0}, Landroid/graphics/Rect;->intersect(Landroid/graphics/Rect;)Z

    #@f
    .line 11043
    return-void
.end method

.method public subtractNonDecorInsets(Landroid/graphics/Rect;)V
    .locals 7
    .param p1, "inOutBounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11035
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11036
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@5
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->getNonDecorInsetsLocked(Landroid/graphics/Rect;)V

    #@8
    .line 11037
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@b
    move-result-object v0

    #@c
    .line 11038
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@e
    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@10
    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@12
    const/4 v5, 0x0

    #@13
    const/4 v6, 0x0

    #@14
    invoke-virtual {v1, v5, v6, v3, v4}, Landroid/graphics/Rect;->set(IIII)V

    #@17
    .line 11039
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@19
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@1b
    invoke-virtual {p0, v1, v3, p1}, Lcom/android/server/wm/WindowManagerService;->subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    monitor-exit v2

    #@1f
    .line 11034
    return-void

    #@20
    .line 11035
    .end local v0    # "di":Landroid/view/DisplayInfo;
    :catchall_0
    move-exception v1

    #@21
    monitor-exit v2

    #@22
    throw v1
.end method

.method public subtractStableInsets(Landroid/graphics/Rect;)V
    .locals 7
    .param p1, "inOutBounds"    # Landroid/graphics/Rect;

    #@0
    .prologue
    .line 11019
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@2
    monitor-enter v2

    #@3
    .line 11020
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@5
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->getStableInsetsLocked(Landroid/graphics/Rect;)V

    #@8
    .line 11021
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    #@b
    move-result-object v0

    #@c
    .line 11022
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@e
    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    #@10
    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    #@12
    const/4 v5, 0x0

    #@13
    const/4 v6, 0x0

    #@14
    invoke-virtual {v1, v5, v6, v3, v4}, Landroid/graphics/Rect;->set(IIII)V

    #@17
    .line 11023
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    #@19
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    #@1b
    invoke-virtual {p0, v1, v3, p1}, Lcom/android/server/wm/WindowManagerService;->subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    monitor-exit v2

    #@1f
    .line 11018
    return-void

    #@20
    .line 11019
    .end local v0    # "di":Landroid/view/DisplayInfo;
    :catchall_0
    move-exception v1

    #@21
    monitor-exit v2

    #@22
    throw v1
.end method

.method public switchInputMethod(Z)V
    .locals 2
    .param p1, "forwardDirection"    # Z

    #@0
    .prologue
    .line 5641
    const-class v1, Landroid/view/inputmethod/InputMethodManagerInternal;

    #@2
    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Landroid/view/inputmethod/InputMethodManagerInternal;

    #@8
    .line 5642
    .local v0, "inputMethodManagerInternal":Landroid/view/inputmethod/InputMethodManagerInternal;
    if-eqz v0, :cond_0

    #@a
    .line 5643
    invoke-interface {v0, p1}, Landroid/view/inputmethod/InputMethodManagerInternal;->switchInputMethod(Z)V

    #@d
    .line 5639
    :cond_0
    return-void
.end method

.method public systemReady()V
    .locals 1

    #@0
    .prologue
    .line 7928
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2
    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemReady()V

    #@5
    .line 7927
    return-void
.end method

.method public thawRotation()V
    .locals 6

    #@0
    .prologue
    const/4 v5, 0x0

    #@1
    .line 6491
    const-string/jumbo v2, "android.permission.SET_ORIENTATION"

    #@4
    .line 6492
    const-string/jumbo v3, "thawRotation()"

    #@7
    .line 6491
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@a
    move-result v2

    #@b
    if-nez v2, :cond_0

    #@d
    .line 6493
    new-instance v2, Ljava/lang/SecurityException;

    #@f
    const-string/jumbo v3, "Requires SET_ORIENTATION permission"

    #@12
    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@15
    throw v2

    #@16
    .line 6498
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@19
    move-result-wide v0

    #@1a
    .line 6500
    .local v0, "origId":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@1c
    const/4 v3, 0x0

    #@1d
    .line 6501
    const/16 v4, 0x309

    #@1f
    .line 6500
    invoke-interface {v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@22
    .line 6503
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@25
    .line 6506
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@28
    .line 6490
    return-void

    #@29
    .line 6502
    :catchall_0
    move-exception v2

    #@2a
    .line 6503
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@2d
    .line 6502
    throw v2
.end method

.method public unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    #@0
    .prologue
    .line 5594
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->unregisterInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    #@5
    .line 5593
    return-void
.end method

.method unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V
    .locals 10
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "unfreezeSurfaceNow"    # Z
    .param p3, "force"    # Z

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 4583
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@3
    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@5
    if-eqz v4, :cond_7

    #@7
    .line 4586
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@9
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    #@c
    move-result v0

    #@d
    .line 4587
    .local v0, "N":I
    const/4 v2, 0x0

    #@e
    .line 4588
    .local v2, "unfrozeWindows":Z
    const/4 v1, 0x0

    #@f
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_3

    #@11
    .line 4589
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    #@13
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@16
    move-result-object v3

    #@17
    check-cast v3, Lcom/android/server/wm/WindowState;

    #@19
    .line 4590
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@1b
    if-eqz v4, :cond_1

    #@1d
    .line 4591
    iput-boolean v6, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    #@1f
    .line 4592
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@21
    if-eqz v4, :cond_0

    #@23
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@25
    if-eqz v4, :cond_2

    #@27
    .line 4598
    :cond_0
    :goto_1
    iput v6, v3, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@29
    .line 4599
    const/4 v2, 0x1

    #@2a
    .line 4600
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    #@2d
    .line 4588
    :cond_1
    add-int/lit8 v1, v1, 0x1

    #@2f
    goto :goto_0

    #@30
    .line 4593
    :cond_2
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@32
    const/4 v5, 0x2

    #@33
    if-eq v4, v5, :cond_0

    #@35
    .line 4595
    const/4 v4, 0x1

    #@36
    iput-boolean v4, v3, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@38
    .line 4596
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@3a
    iput-boolean v6, v4, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    #@3c
    goto :goto_1

    #@3d
    .line 4603
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_3
    if-nez p3, :cond_4

    #@3f
    if-eqz v2, :cond_5

    #@41
    .line 4605
    :cond_4
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@43
    iput-boolean v6, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    #@45
    .line 4606
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@47
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@4a
    move-result-wide v6

    #@4b
    .line 4607
    iget-wide v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@4d
    .line 4606
    sub-long/2addr v6, v8

    #@4e
    long-to-int v5, v6

    #@4f
    iput v5, v4, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    #@51
    .line 4608
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@53
    add-int/lit8 v4, v4, -0x1

    #@55
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    #@57
    .line 4609
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    #@59
    .line 4611
    :cond_5
    if-eqz p2, :cond_7

    #@5b
    .line 4612
    if-eqz v2, :cond_6

    #@5d
    .line 4613
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5f
    invoke-virtual {v4}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    #@62
    .line 4615
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    #@65
    .line 4582
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "unfrozeWindows":Z
    :cond_7
    return-void
.end method

.method public updateAppOpsState()V
    .locals 14

    #@0
    .prologue
    const/4 v8, 0x1

    #@1
    const/4 v9, 0x0

    #@2
    .line 2559
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    monitor-enter v10

    #@5
    .line 2560
    :try_start_0
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@7
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    #@a
    move-result v2

    #@b
    .line 2561
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    #@c
    .local v0, "displayNdx":I
    :goto_0
    if-ge v0, v2, :cond_4

    #@e
    .line 2562
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@10
    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@13
    move-result-object v7

    #@14
    check-cast v7, Lcom/android/server/wm/DisplayContent;

    #@16
    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@19
    move-result-object v6

    #@1a
    .line 2563
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    #@1d
    move-result v3

    #@1e
    .line 2564
    .local v3, "numWindows":I
    const/4 v5, 0x0

    #@1f
    .local v5, "winNdx":I
    :goto_1
    if-ge v5, v3, :cond_3

    #@21
    .line 2565
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@24
    move-result-object v4

    #@25
    check-cast v4, Lcom/android/server/wm/WindowState;

    #@27
    .line 2566
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iget v7, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@29
    const/4 v11, -0x1

    #@2a
    if-eq v7, v11, :cond_0

    #@2c
    .line 2567
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    #@2e
    iget v11, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    #@30
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    #@33
    move-result v12

    #@34
    .line 2568
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    #@37
    move-result-object v13

    #@38
    .line 2567
    invoke-virtual {v7, v11, v12, v13}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    #@3b
    move-result v1

    #@3c
    .line 2569
    .local v1, "mode":I
    if-eqz v1, :cond_1

    #@3e
    .line 2570
    const/4 v7, 0x3

    #@3f
    if-ne v1, v7, :cond_2

    #@41
    move v7, v8

    #@42
    .line 2569
    :goto_2
    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@45
    .line 2564
    .end local v1    # "mode":I
    :cond_0
    add-int/lit8 v5, v5, 0x1

    #@47
    goto :goto_1

    #@48
    .restart local v1    # "mode":I
    :cond_1
    move v7, v8

    #@49
    .line 2569
    goto :goto_2

    #@4a
    :cond_2
    move v7, v9

    #@4b
    .line 2570
    goto :goto_2

    #@4c
    .line 2561
    .end local v1    # "mode":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_3
    add-int/lit8 v0, v0, 0x1

    #@4e
    goto :goto_0

    #@4f
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4
    monitor-exit v10

    #@50
    .line 2558
    return-void

    #@51
    .line 2559
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_0
    move-exception v7

    #@52
    monitor-exit v10

    #@53
    throw v7
.end method

.method updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;
    .locals 14
    .param p1, "uiMode"    # I

    #@0
    .prologue
    .line 7329
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@3
    move-result-object v3

    #@4
    .line 7332
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@6
    const/4 v12, 0x1

    #@7
    if-eq v11, v12, :cond_1

    #@9
    .line 7333
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@b
    const/4 v12, 0x3

    #@c
    if-ne v11, v12, :cond_2

    #@e
    const/4 v10, 0x1

    #@f
    .line 7334
    .local v10, "rotated":Z
    :goto_0
    if-eqz v10, :cond_3

    #@11
    .line 7335
    iget v9, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@13
    .line 7336
    .local v9, "realdw":I
    :goto_1
    if-eqz v10, :cond_4

    #@15
    .line 7337
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@17
    .line 7338
    .local v8, "realdh":I
    :goto_2
    move v5, v9

    #@18
    .line 7339
    .local v5, "dw":I
    move v2, v8

    #@19
    .line 7341
    .local v2, "dh":I
    iget-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@1b
    if-eqz v11, :cond_0

    #@1d
    .line 7342
    if-le v9, v8, :cond_5

    #@1f
    .line 7344
    int-to-float v11, v8

    #@20
    const v12, 0x3fa66666    # 1.3f

    #@23
    div-float/2addr v11, v12

    #@24
    float-to-int v7, v11

    #@25
    .line 7345
    .local v7, "maxw":I
    if-ge v7, v9, :cond_0

    #@27
    .line 7346
    move v5, v7

    #@28
    .line 7358
    .end local v7    # "maxw":I
    :cond_0
    :goto_3
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@2a
    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2c
    invoke-interface {v11, v5, v2, v12, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    #@2f
    move-result v1

    #@30
    .line 7359
    .local v1, "appWidth":I
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@32
    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@34
    invoke-interface {v11, v5, v2, v12, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    #@37
    move-result v0

    #@38
    .line 7360
    .local v0, "appHeight":I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@3b
    move-result-object v4

    #@3c
    .line 7361
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@3e
    iput v11, v4, Landroid/view/DisplayInfo;->rotation:I

    #@40
    .line 7362
    iput v5, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    #@42
    .line 7363
    iput v2, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    #@44
    .line 7364
    iget v11, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    #@46
    iput v11, v4, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    #@48
    .line 7365
    iput v1, v4, Landroid/view/DisplayInfo;->appWidth:I

    #@4a
    .line 7366
    iput v0, v4, Landroid/view/DisplayInfo;->appHeight:I

    #@4c
    .line 7367
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    #@4e
    .line 7368
    sget-object v12, Landroid/content/res/CompatibilityInfo;->DEFAULT_COMPATIBILITY_INFO:Landroid/content/res/CompatibilityInfo;

    #@50
    const/4 v13, 0x0

    #@51
    .line 7367
    invoke-virtual {v4, v11, v12, v13}, Landroid/view/DisplayInfo;->getLogicalMetrics(Landroid/util/DisplayMetrics;Landroid/content/res/CompatibilityInfo;Landroid/content/res/Configuration;)V

    #@54
    .line 7369
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@56
    invoke-virtual {v4, v11}, Landroid/view/DisplayInfo;->getAppMetrics(Landroid/util/DisplayMetrics;)V

    #@59
    .line 7370
    iget-boolean v11, v3, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    #@5b
    if-eqz v11, :cond_6

    #@5d
    .line 7371
    iget v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@5f
    const/high16 v12, 0x40000000    # 2.0f

    #@61
    or-int/2addr v11, v12

    #@62
    iput v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@64
    .line 7376
    :goto_4
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@66
    .line 7377
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@69
    move-result v12

    #@6a
    .line 7376
    invoke-virtual {v11, v12, v4}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    #@6d
    .line 7379
    iget-object v11, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayRect:Landroid/graphics/Rect;

    #@6f
    const/4 v12, 0x0

    #@70
    const/4 v13, 0x0

    #@71
    invoke-virtual {v11, v12, v13, v5, v2}, Landroid/graphics/Rect;->set(IIII)V

    #@74
    .line 7384
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    #@76
    .line 7385
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    #@78
    .line 7384
    invoke-static {v11, v12}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    #@7b
    move-result v11

    #@7c
    iput v11, p0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    #@7e
    .line 7386
    return-object v4

    #@7f
    .line 7332
    .end local v0    # "appHeight":I
    .end local v1    # "appWidth":I
    .end local v2    # "dh":I
    .end local v4    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v5    # "dw":I
    .end local v8    # "realdh":I
    .end local v9    # "realdw":I
    .end local v10    # "rotated":Z
    :cond_1
    const/4 v10, 0x1

    #@80
    goto :goto_0

    #@81
    .line 7333
    :cond_2
    const/4 v10, 0x0

    #@82
    goto :goto_0

    #@83
    .line 7335
    .restart local v10    # "rotated":Z
    :cond_3
    iget v9, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    #@85
    .restart local v9    # "realdw":I
    goto :goto_1

    #@86
    .line 7337
    :cond_4
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    #@88
    goto :goto_2

    #@89
    .line 7350
    .restart local v2    # "dh":I
    .restart local v5    # "dw":I
    .restart local v8    # "realdh":I
    :cond_5
    int-to-float v11, v9

    #@8a
    const v12, 0x3fa66666    # 1.3f

    #@8d
    div-float/2addr v11, v12

    #@8e
    float-to-int v6, v11

    #@8f
    .line 7351
    .local v6, "maxh":I
    if-ge v6, v8, :cond_0

    #@91
    .line 7352
    move v2, v6

    #@92
    goto :goto_3

    #@93
    .line 7373
    .end local v6    # "maxh":I
    .restart local v0    # "appHeight":I
    .restart local v1    # "appWidth":I
    .restart local v4    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_6
    iget v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@95
    const v12, -0x40000001    # -1.9999999f

    #@98
    and-int/2addr v11, v12

    #@99
    iput v11, v4, Landroid/view/DisplayInfo;->flags:I

    #@9b
    goto :goto_4
.end method

.method updateFocusedWindowLocked(IZ)Z
    .locals 12
    .param p1, "mode"    # I
    .param p2, "updateInputWindows"    # Z

    #@0
    .prologue
    const-wide/16 v10, 0x20

    #@2
    const/4 v9, 0x3

    #@3
    const/4 v8, 0x2

    #@4
    const/4 v5, 0x0

    #@5
    const/4 v6, 0x1

    #@6
    .line 9581
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@9
    move-result-object v3

    #@a
    .line 9582
    .local v3, "newFocus":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@c
    if-eq v7, v3, :cond_6

    #@e
    .line 9583
    const-string/jumbo v7, "wmUpdateFocus"

    #@11
    invoke-static {v10, v11, v7}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    #@14
    .line 9586
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@16
    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@19
    .line 9587
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@1b
    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    #@1e
    .line 9589
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@21
    move-result-object v0

    #@22
    .line 9591
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eq p1, v6, :cond_0

    #@24
    .line 9592
    if-eq p1, v9, :cond_0

    #@26
    move v5, v6

    #@27
    .line 9590
    :cond_0
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    #@2a
    move-result v2

    #@2b
    .line 9593
    .local v2, "imWindowChanged":Z
    if-eqz v2, :cond_1

    #@2d
    .line 9594
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@2f
    .line 9595
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    #@32
    move-result-object v3

    #@33
    .line 9600
    :cond_1
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@35
    .line 9601
    .local v4, "oldFocus":Lcom/android/server/wm/WindowState;
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@37
    .line 9602
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    #@39
    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    #@3c
    .line 9604
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@3e
    invoke-interface {v5, v4, v3}, Landroid/view/WindowManagerPolicy;->focusChangedLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)I

    #@41
    move-result v1

    #@42
    .line 9606
    .local v1, "focusChanged":I
    if-eqz v2, :cond_2

    #@44
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    #@46
    if-eq v4, v5, :cond_2

    #@48
    .line 9608
    if-ne p1, v8, :cond_5

    #@4a
    .line 9609
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@4c
    invoke-virtual {v5, v0, v6, p2}, Lcom/android/server/wm/WindowSurfacePlacer;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    #@4f
    .line 9611
    and-int/lit8 v1, v1, -0x2

    #@51
    .line 9619
    :cond_2
    :goto_0
    and-int/lit8 v5, v1, 0x1

    #@53
    if-eqz v5, :cond_3

    #@55
    .line 9621
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@57
    .line 9622
    if-ne p1, v8, :cond_3

    #@59
    .line 9623
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@5b
    invoke-virtual {v5, v0, v6, p2}, Lcom/android/server/wm/WindowSurfacePlacer;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    #@5e
    .line 9628
    :cond_3
    if-eq p1, v6, :cond_4

    #@60
    .line 9631
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    #@62
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    #@64
    invoke-virtual {v5, v7, p2}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    #@67
    .line 9634
    :cond_4
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->adjustForImeIfNeeded(Lcom/android/server/wm/DisplayContent;)V

    #@6a
    .line 9636
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    #@6d
    .line 9637
    return v6

    #@6e
    .line 9612
    :cond_5
    if-ne p1, v9, :cond_2

    #@70
    .line 9615
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    #@72
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@75
    move-result-object v7

    #@76
    invoke-virtual {v5, v7}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    #@79
    goto :goto_0

    #@7a
    .line 9639
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "focusChanged":I
    .end local v2    # "imWindowChanged":Z
    .end local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :cond_6
    return v5
.end method

.method public updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .locals 5
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    #@0
    .prologue
    .line 3653
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    #@3
    .line 3654
    const-string/jumbo v4, "updateOrientationFromAppTokens()"

    #@6
    .line 3653
    invoke-direct {p0, v1, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    #@9
    move-result v1

    #@a
    if-nez v1, :cond_0

    #@c
    .line 3655
    new-instance v1, Ljava/lang/SecurityException;

    #@e
    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    #@11
    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    #@14
    throw v1

    #@15
    .line 3658
    :cond_0
    const/4 v0, 0x0

    #@16
    .line 3659
    .local v0, "config":Landroid/content/res/Configuration;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@19
    move-result-wide v2

    #@1a
    .line 3661
    .local v2, "ident":J
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1c
    monitor-enter v1

    #@1d
    .line 3662
    :try_start_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@20
    move-result-object v0

    #@21
    .local v0, "config":Landroid/content/res/Configuration;
    monitor-exit v1

    #@22
    .line 3666
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@25
    .line 3667
    return-object v0

    #@26
    .line 3661
    .local v0, "config":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v4

    #@27
    monitor-exit v1

    #@28
    throw v4
.end method

.method updateOrientationFromAppTokensLocked(Z)Z
    .locals 4
    .param p1, "inTransaction"    # Z

    #@0
    .prologue
    .line 3727
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v0

    #@4
    .line 3729
    .local v0, "ident":J
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getOrientationLocked()I

    #@7
    move-result v2

    #@8
    .line 3730
    .local v2, "req":I
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@a
    if-eq v2, v3, :cond_0

    #@c
    .line 3731
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@e
    .line 3734
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@10
    invoke-interface {v3, v2}, Landroid/view/WindowManagerPolicy;->setCurrentOrientationLw(I)V

    #@13
    .line 3735
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    move-result v3

    #@17
    if-eqz v3, :cond_0

    #@19
    .line 3737
    const/4 v3, 0x1

    #@1a
    .line 3743
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@1d
    .line 3737
    return v3

    #@1e
    .line 3741
    :cond_0
    const/4 v3, 0x0

    #@1f
    .line 3743
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@22
    .line 3741
    return v3

    #@23
    .line 3742
    .end local v2    # "req":I
    :catchall_0
    move-exception v3

    #@24
    .line 3743
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@27
    .line 3742
    throw v3
.end method

.method updatePointerIcon(Landroid/view/IWindow;)V
    .locals 10
    .param p1, "client"    # Landroid/view/IWindow;

    #@0
    .prologue
    .line 11093
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@2
    monitor-enter v7

    #@3
    .line 11094
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@5
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get0(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8
    move-result v6

    #@9
    if-nez v6, :cond_0

    #@b
    monitor-exit v7

    #@c
    .line 11095
    return-void

    #@d
    .line 11097
    :cond_0
    :try_start_1
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@f
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get1(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F

    #@12
    move-result v3

    #@13
    .line 11098
    .local v3, "mouseX":F
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    #@15
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get2(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@18
    move-result v4

    #@19
    .local v4, "mouseY":F
    monitor-exit v7

    #@1a
    .line 11101
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@1c
    monitor-enter v7

    #@1d
    .line 11102
    :try_start_2
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@1f
    if-eqz v6, :cond_1

    #@21
    monitor-exit v7

    #@22
    .line 11104
    return-void

    #@23
    .line 11093
    .end local v3    # "mouseX":F
    .end local v4    # "mouseY":F
    :catchall_0
    move-exception v6

    #@24
    monitor-exit v7

    #@25
    throw v6

    #@26
    .line 11106
    .restart local v3    # "mouseX":F
    .restart local v4    # "mouseY":F
    :cond_1
    const/4 v6, 0x0

    #@27
    const/4 v8, 0x0

    #@28
    :try_start_3
    invoke-virtual {p0, v6, p1, v8}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    #@2b
    move-result-object v0

    #@2c
    .line 11107
    .local v0, "callingWin":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_2

    #@2e
    .line 11108
    const-string/jumbo v6, "WindowManager"

    #@31
    new-instance v8, Ljava/lang/StringBuilder;

    #@33
    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    #@36
    const-string/jumbo v9, "Bad requesting window "

    #@39
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@3c
    move-result-object v8

    #@3d
    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@40
    move-result-object v8

    #@41
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@44
    move-result-object v8

    #@45
    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@48
    monitor-exit v7

    #@49
    .line 11109
    return-void

    #@4a
    .line 11111
    :cond_2
    :try_start_4
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    #@4d
    move-result-object v1

    #@4e
    .line 11112
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_3

    #@50
    monitor-exit v7

    #@51
    .line 11113
    return-void

    #@52
    .line 11116
    :cond_3
    :try_start_5
    invoke-virtual {v1, v3, v4}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    #@55
    move-result-object v5

    #@56
    .line 11117
    .local v5, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eq v5, v0, :cond_4

    #@58
    monitor-exit v7

    #@59
    .line 11118
    return-void

    #@5a
    .line 11121
    :cond_4
    :try_start_6
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@5c
    .line 11122
    invoke-virtual {v5, v3}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    #@5f
    move-result v8

    #@60
    .line 11123
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    #@63
    move-result v9

    #@64
    .line 11121
    invoke-interface {v6, v8, v9}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    #@67
    :goto_0
    monitor-exit v7

    #@68
    .line 11090
    return-void

    #@69
    .line 11124
    :catch_0
    move-exception v2

    #@6a
    .line 11125
    .local v2, "e":Landroid/os/RemoteException;
    :try_start_7
    const-string/jumbo v6, "WindowManager"

    #@6d
    const-string/jumbo v8, "unable to update pointer icon"

    #@70
    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    #@73
    goto :goto_0

    #@74
    .line 11101
    .end local v0    # "callingWin":Lcom/android/server/wm/WindowState;
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "e":Landroid/os/RemoteException;
    .end local v5    # "windowUnderPointer":Lcom/android/server/wm/WindowState;
    :catchall_1
    move-exception v6

    #@75
    monitor-exit v7

    #@76
    throw v6
.end method

.method updateResizingWindows(Lcom/android/server/wm/WindowState;)V
    .locals 8
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    #@0
    .prologue
    .line 9283
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    #@2
    .line 9284
    .local v3, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@4
    if-eqz v4, :cond_0

    #@6
    iget v4, p1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    #@8
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    #@a
    if-ne v4, v5, :cond_0

    #@c
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    #@f
    move-result v4

    #@10
    if-eqz v4, :cond_1

    #@12
    .line 9282
    :cond_0
    :goto_0
    return-void

    #@13
    .line 9285
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    #@16
    move-result-object v2

    #@17
    .line 9294
    .local v2, "task":Lcom/android/server/wm/Task;
    if-eqz v2, :cond_2

    #@19
    iget-object v4, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    #@1b
    invoke-virtual {v4}, Lcom/android/server/wm/TaskStack;->getBoundsAnimating()Z

    #@1e
    move-result v4

    #@1f
    if-eqz v4, :cond_2

    #@21
    .line 9295
    return-void

    #@22
    .line 9297
    :cond_2
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setInsetsChanged()Z

    #@25
    .line 9298
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    #@28
    move-result v0

    #@29
    .line 9303
    .local v0, "configChanged":Z
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDragResizeChanged()Z

    #@2c
    move-result v4

    #@2d
    if-eqz v4, :cond_4

    #@2f
    .line 9304
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDragResizingChangeReported()Z

    #@32
    move-result v4

    #@33
    if-eqz v4, :cond_3

    #@35
    const/4 v1, 0x0

    #@36
    .line 9309
    .local v1, "dragResizingChanged":Z
    :goto_1
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    #@38
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    #@3a
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@3d
    .line 9310
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mContentInsetsChanged:Z

    #@3f
    if-nez v4, :cond_5

    #@41
    .line 9311
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mVisibleInsetsChanged:Z

    #@43
    .line 9310
    if-nez v4, :cond_5

    #@45
    .line 9312
    iget-boolean v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z

    #@47
    .line 9310
    if-nez v4, :cond_5

    #@49
    .line 9313
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOutsetsChanged:Z

    #@4b
    .line 9310
    if-nez v4, :cond_5

    #@4d
    if-nez v0, :cond_5

    #@4f
    if-nez v1, :cond_5

    #@51
    .line 9316
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizingReported()Z

    #@54
    move-result v4

    #@55
    if-eqz v4, :cond_5

    #@57
    .line 9369
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@59
    if-eqz v4, :cond_0

    #@5b
    .line 9370
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    #@5e
    move-result v4

    #@5f
    if-eqz v4, :cond_0

    #@61
    .line 9374
    const/4 v4, 0x0

    #@62
    iput-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@64
    .line 9375
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@67
    move-result-wide v4

    #@68
    .line 9376
    iget-wide v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    #@6a
    .line 9375
    sub-long/2addr v4, v6

    #@6b
    long-to-int v4, v4

    #@6c
    iput v4, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@6e
    goto :goto_0

    #@6f
    .line 9304
    .end local v1    # "dragResizingChanged":Z
    :cond_3
    const/4 v1, 0x1

    #@70
    .restart local v1    # "dragResizingChanged":Z
    goto :goto_1

    #@71
    .line 9303
    .end local v1    # "dragResizingChanged":Z
    :cond_4
    const/4 v1, 0x0

    #@72
    .restart local v1    # "dragResizingChanged":Z
    goto :goto_1

    #@73
    .line 9336
    :cond_5
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@75
    if-eqz v4, :cond_6

    #@77
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mAppDied:Z

    #@79
    if-eqz v4, :cond_6

    #@7b
    .line 9337
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@7d
    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->removeAllDeadWindows()V

    #@80
    .line 9338
    return-void

    #@81
    .line 9341
    :cond_6
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastOverscanInsets:Landroid/graphics/Rect;

    #@83
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    #@85
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@88
    .line 9342
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    #@8a
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    #@8c
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@8f
    .line 9343
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastVisibleInsets:Landroid/graphics/Rect;

    #@91
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    #@93
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@96
    .line 9344
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastStableInsets:Landroid/graphics/Rect;

    #@98
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    #@9a
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@9d
    .line 9345
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastOutsets:Landroid/graphics/Rect;

    #@9f
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    #@a1
    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    #@a4
    .line 9346
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V

    #@a7
    .line 9352
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@a9
    if-nez v4, :cond_7

    #@ab
    if-nez v1, :cond_7

    #@ad
    .line 9353
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizing()Z

    #@b0
    move-result v4

    #@b1
    .line 9352
    if-eqz v4, :cond_8

    #@b3
    .line 9359
    :cond_7
    const/4 v4, 0x1

    #@b4
    iput v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    #@b6
    .line 9360
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@b8
    if-eqz v4, :cond_8

    #@ba
    .line 9361
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@bc
    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    #@bf
    .line 9364
    :cond_8
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@c1
    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    #@c4
    move-result v4

    #@c5
    if-nez v4, :cond_0

    #@c7
    .line 9367
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    #@c9
    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@cc
    goto/16 :goto_0
.end method

.method public updateRotation(ZZ)V
    .locals 0
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    #@0
    .prologue
    .line 6518
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    #@3
    .line 6517
    return-void
.end method

.method public updateRotationUnchecked(ZZ)V
    .locals 6
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    #@0
    .prologue
    .line 6553
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    #@3
    move-result-wide v2

    #@4
    .line 6555
    .local v2, "origId":J
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@6
    monitor-enter v4

    #@7
    .line 6556
    const/4 v1, 0x0

    #@8
    :try_start_0
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    #@b
    move-result v0

    #@c
    .line 6557
    .local v0, "changed":Z
    if-eqz v0, :cond_0

    #@e
    if-eqz p2, :cond_1

    #@10
    .line 6558
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@13
    move-result-object v1

    #@14
    const/4 v5, 0x1

    #@15
    iput-boolean v5, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@17
    .line 6559
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@19
    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1c
    :cond_1
    monitor-exit v4

    #@1d
    .line 6563
    if-nez v0, :cond_2

    #@1f
    if-eqz p1, :cond_3

    #@21
    .line 6564
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    #@24
    .line 6567
    :cond_3
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    #@27
    .line 6549
    return-void

    #@28
    .line 6555
    .end local v0    # "changed":Z
    :catchall_0
    move-exception v1

    #@29
    monitor-exit v4

    #@2a
    throw v1
.end method

.method public updateRotationUncheckedLocked(Z)Z
    .locals 18
    .param p1, "inTransaction"    # Z

    #@0
    .prologue
    .line 6578
    move-object/from16 v0, p0

    #@2
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    #@4
    if-lez v5, :cond_0

    #@6
    .line 6582
    const/4 v5, 0x0

    #@7
    return v5

    #@8
    .line 6586
    :cond_0
    move-object/from16 v0, p0

    #@a
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@c
    const/4 v6, 0x0

    #@d
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@10
    move-result-object v3

    #@11
    .line 6587
    .local v3, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v3, :cond_1

    #@13
    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    #@16
    move-result v5

    #@17
    if-eqz v5, :cond_1

    #@19
    .line 6592
    const/4 v5, 0x0

    #@1a
    return v5

    #@1b
    .line 6595
    :cond_1
    move-object/from16 v0, p0

    #@1d
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    #@1f
    if-nez v5, :cond_2

    #@21
    .line 6598
    const/4 v5, 0x0

    #@22
    return v5

    #@23
    .line 6606
    :cond_2
    move-object/from16 v0, p0

    #@25
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@27
    move-object/from16 v0, p0

    #@29
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@2b
    move-object/from16 v0, p0

    #@2d
    iget v7, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@2f
    invoke-interface {v5, v6, v7}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(II)I

    #@32
    move-result v4

    #@33
    .line 6607
    .local v4, "rotation":I
    move-object/from16 v0, p0

    #@35
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@37
    .line 6608
    move-object/from16 v0, p0

    #@39
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    #@3b
    .line 6607
    invoke-interface {v5, v6, v4}, Landroid/view/WindowManagerPolicy;->rotationHasCompatibleMetricsLw(II)Z

    #@3e
    move-result v5

    #@3f
    if-eqz v5, :cond_3

    #@41
    const/4 v2, 0x0

    #@42
    .line 6617
    .local v2, "altOrientation":Z
    :goto_0
    move-object/from16 v0, p0

    #@44
    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@46
    if-ne v5, v4, :cond_4

    #@48
    move-object/from16 v0, p0

    #@4a
    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@4c
    if-ne v5, v2, :cond_4

    #@4e
    .line 6619
    const/4 v5, 0x0

    #@4f
    return v5

    #@50
    .line 6607
    .end local v2    # "altOrientation":Z
    :cond_3
    const/4 v2, 0x1

    #@51
    .restart local v2    # "altOrientation":Z
    goto :goto_0

    #@52
    .line 6629
    :cond_4
    move-object/from16 v0, p0

    #@54
    iput v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@56
    .line 6630
    move-object/from16 v0, p0

    #@58
    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    #@5a
    .line 6631
    move-object/from16 v0, p0

    #@5c
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@5e
    move-object/from16 v0, p0

    #@60
    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    #@62
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->setRotationLw(I)V

    #@65
    .line 6633
    const/4 v5, 0x1

    #@66
    move-object/from16 v0, p0

    #@68
    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    #@6a
    .line 6634
    move-object/from16 v0, p0

    #@6c
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@6e
    const/16 v6, 0xb

    #@70
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    #@73
    .line 6635
    move-object/from16 v0, p0

    #@75
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    #@77
    const-wide/16 v6, 0x7d0

    #@79
    const/16 v8, 0xb

    #@7b
    invoke-virtual {v5, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    #@7e
    .line 6636
    const/4 v5, 0x1

    #@7f
    move-object/from16 v0, p0

    #@81
    iput-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    #@83
    .line 6637
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@86
    move-result-object v12

    #@87
    .line 6638
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v5, 0x1

    #@88
    iput-boolean v5, v12, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    #@8a
    .line 6639
    const/4 v5, 0x2

    #@8b
    new-array v11, v5, [I

    #@8d
    .line 6640
    .local v11, "anim":[I
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    #@90
    move-result v5

    #@91
    if-eqz v5, :cond_a

    #@93
    .line 6641
    const/4 v5, 0x0

    #@94
    const/4 v6, 0x1

    #@95
    aput v5, v11, v6

    #@97
    const/4 v5, 0x0

    #@98
    const/4 v6, 0x0

    #@99
    aput v5, v11, v6

    #@9b
    .line 6645
    :goto_1
    const/4 v5, 0x0

    #@9c
    aget v5, v11, v5

    #@9e
    const/4 v6, 0x1

    #@9f
    aget v6, v11, v6

    #@a1
    move-object/from16 v0, p0

    #@a3
    move/from16 v1, p1

    #@a5
    invoke-direct {v0, v1, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    #@a8
    .line 6648
    move-object/from16 v0, p0

    #@aa
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    #@ac
    const/4 v6, 0x0

    #@ad
    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    #@b0
    move-result-object v3

    #@b1
    .line 6655
    move-object/from16 v0, p0

    #@b3
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    #@b5
    iget v5, v5, Landroid/content/res/Configuration;->uiMode:I

    #@b7
    move-object/from16 v0, p0

    #@b9
    invoke-virtual {v0, v5}, Lcom/android/server/wm/WindowManagerService;->updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    #@bc
    .line 6657
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    #@bf
    move-result-object v13

    #@c0
    .line 6658
    .local v13, "displayInfo":Landroid/view/DisplayInfo;
    if-nez p1, :cond_5

    #@c2
    .line 6662
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    #@c5
    .line 6667
    :cond_5
    if-eqz v3, :cond_6

    #@c7
    .line 6668
    :try_start_0
    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    #@ca
    move-result v5

    #@cb
    .line 6667
    if-eqz v5, :cond_6

    #@cd
    .line 6670
    move-object/from16 v0, p0

    #@cf
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    #@d1
    .line 6671
    const-wide/16 v6, 0x2710

    #@d3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    #@d6
    move-result v8

    #@d7
    .line 6672
    iget v9, v13, Landroid/view/DisplayInfo;->logicalWidth:I

    #@d9
    iget v10, v13, Landroid/view/DisplayInfo;->logicalHeight:I

    #@db
    .line 6669
    invoke-virtual/range {v3 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->setRotationInTransaction(ILandroid/view/SurfaceSession;JFII)Z

    #@de
    move-result v5

    #@df
    if-eqz v5, :cond_6

    #@e1
    .line 6673
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    #@e4
    .line 6677
    :cond_6
    move-object/from16 v0, p0

    #@e6
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    #@e8
    invoke-virtual {v5}, Landroid/hardware/display/DisplayManagerInternal;->performTraversalInTransactionFromWindowManager()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@eb
    .line 6679
    if-nez p1, :cond_7

    #@ed
    .line 6680
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@f0
    .line 6687
    :cond_7
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@f3
    move-result-object v17

    #@f4
    .line 6688
    .local v17, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    #@f7
    move-result v5

    #@f8
    add-int/lit8 v15, v5, -0x1

    #@fa
    .local v15, "i":I
    :goto_2
    if-ltz v15, :cond_c

    #@fc
    .line 6689
    move-object/from16 v0, v17

    #@fe
    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@101
    move-result-object v16

    #@102
    check-cast v16, Lcom/android/server/wm/WindowState;

    #@104
    .line 6691
    .local v16, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v16

    #@106
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@108
    if-eqz v5, :cond_8

    #@10a
    .line 6692
    move-object/from16 v0, v16

    #@10c
    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    #@10e
    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->destroySavedSurfaces()V

    #@111
    .line 6694
    :cond_8
    move-object/from16 v0, v16

    #@113
    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    #@115
    if-eqz v5, :cond_9

    #@117
    .line 6696
    const/4 v5, 0x1

    #@118
    move-object/from16 v0, v16

    #@11a
    iput-boolean v5, v0, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    #@11c
    .line 6697
    move-object/from16 v0, p0

    #@11e
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    #@120
    const/4 v6, 0x0

    #@121
    iput-boolean v6, v5, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    #@123
    .line 6699
    :cond_9
    const/4 v5, 0x0

    #@124
    move-object/from16 v0, v16

    #@126
    iput v5, v0, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    #@128
    .line 6688
    add-int/lit8 v15, v15, -0x1

    #@12a
    goto :goto_2

    #@12b
    .line 6643
    .end local v13    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "i":I
    .end local v16    # "w":Lcom/android/server/wm/WindowState;
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_a
    move-object/from16 v0, p0

    #@12d
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    #@12f
    invoke-interface {v5, v11}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    #@132
    goto/16 :goto_1

    #@134
    .line 6678
    .restart local v13    # "displayInfo":Landroid/view/DisplayInfo;
    :catchall_0
    move-exception v5

    #@135
    .line 6679
    if-nez p1, :cond_b

    #@137
    .line 6680
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    #@13a
    .line 6678
    :cond_b
    throw v5

    #@13b
    .line 6702
    .restart local v15    # "i":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_c
    move-object/from16 v0, p0

    #@13d
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@13f
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@142
    move-result v5

    #@143
    add-int/lit8 v15, v5, -0x1

    #@145
    :goto_3
    if-ltz v15, :cond_d

    #@147
    .line 6704
    :try_start_1
    move-object/from16 v0, p0

    #@149
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@14b
    invoke-virtual {v5, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@14e
    move-result-object v5

    #@14f
    check-cast v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@151
    iget-object v5, v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    #@153
    invoke-interface {v5, v4}, Landroid/view/IRotationWatcher;->onRotationChanged(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    #@156
    .line 6702
    :goto_4
    add-int/lit8 v15, v15, -0x1

    #@158
    goto :goto_3

    #@159
    .line 6712
    :cond_d
    if-nez v3, :cond_e

    #@15b
    move-object/from16 v0, p0

    #@15d
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@15f
    if-eqz v5, :cond_e

    #@161
    .line 6713
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    #@164
    move-result v5

    #@165
    if-nez v5, :cond_e

    #@167
    .line 6714
    move-object/from16 v0, p0

    #@169
    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    #@16b
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    #@16e
    move-result-object v6

    #@16f
    invoke-virtual {v5, v6, v4}, Lcom/android/server/wm/AccessibilityController;->onRotationChangedLocked(Lcom/android/server/wm/DisplayContent;I)V

    #@172
    .line 6718
    :cond_e
    const/4 v5, 0x1

    #@173
    return v5

    #@174
    .line 6705
    :catch_0
    move-exception v14

    #@175
    .local v14, "e":Landroid/os/RemoteException;
    goto :goto_4
.end method

.method updateStatusBarVisibilityLocked(I)Z
    .locals 11
    .param p1, "visibility"    # I

    #@0
    .prologue
    .line 9954
    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@2
    if-ne v9, p1, :cond_0

    #@4
    .line 9955
    const/4 v9, 0x0

    #@5
    return v9

    #@6
    .line 9957
    :cond_0
    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@8
    xor-int/2addr v9, p1

    #@9
    and-int/lit8 v9, v9, 0x7

    #@b
    .line 9962
    not-int v10, p1

    #@c
    .line 9957
    and-int v4, v9, v10

    #@e
    .line 9964
    .local v4, "globalDiff":I
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    #@10
    .line 9965
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    #@12
    invoke-virtual {v9, p1}, Lcom/android/server/input/InputManagerService;->setSystemUiVisibility(I)V

    #@15
    .line 9966
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    #@18
    move-result-object v7

    #@19
    .line 9967
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    #@1c
    move-result v0

    #@1d
    .line 9968
    .local v0, "N":I
    const/4 v5, 0x0

    #@1e
    .local v5, "i":I
    :goto_0
    if-ge v5, v0, :cond_4

    #@20
    .line 9969
    invoke-virtual {v7, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@23
    move-result-object v8

    #@24
    check-cast v8, Lcom/android/server/wm/WindowState;

    #@26
    .line 9971
    .local v8, "ws":Lcom/android/server/wm/WindowState;
    :try_start_0
    iget v1, v8, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@28
    .line 9972
    .local v1, "curValue":I
    xor-int v9, v1, p1

    #@2a
    and-int v2, v9, v4

    #@2c
    .line 9973
    .local v2, "diff":I
    not-int v9, v2

    #@2d
    and-int/2addr v9, v1

    #@2e
    and-int v10, p1, v2

    #@30
    or-int v6, v9, v10

    #@32
    .line 9974
    .local v6, "newValue":I
    if-eq v6, v1, :cond_1

    #@34
    .line 9975
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@36
    add-int/lit8 v9, v9, 0x1

    #@38
    iput v9, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@3a
    .line 9976
    iput v6, v8, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    #@3c
    .line 9978
    :cond_1
    if-ne v6, v1, :cond_2

    #@3e
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@40
    iget-boolean v9, v9, Landroid/view/WindowManager$LayoutParams;->hasSystemUiListeners:Z

    #@42
    if-eqz v9, :cond_3

    #@44
    .line 9979
    :cond_2
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@46
    iget v10, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    #@48
    invoke-interface {v9, v10, p1, v6, v2}, Landroid/view/IWindow;->dispatchSystemUiVisibilityChanged(IIII)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    #@4b
    .line 9968
    .end local v1    # "curValue":I
    .end local v2    # "diff":I
    .end local v6    # "newValue":I
    :cond_3
    :goto_1
    add-int/lit8 v5, v5, 0x1

    #@4d
    goto :goto_0

    #@4e
    .line 9986
    .end local v8    # "ws":Lcom/android/server/wm/WindowState;
    :cond_4
    const/4 v9, 0x1

    #@4f
    return v9

    #@50
    .line 9982
    .restart local v8    # "ws":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v3

    #@51
    .local v3, "e":Landroid/os/RemoteException;
    goto :goto_1
.end method

.method updateTokenInPlaceLocked(Lcom/android/server/wm/AppWindowToken;I)V
    .locals 6
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "transit"    # I

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 4434
    const/4 v0, -0x1

    #@2
    if-eq p2, v0, :cond_1

    #@4
    .line 4435
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@6
    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    #@8
    sget-object v1, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    #@a
    if-ne v0, v1, :cond_0

    #@c
    .line 4436
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    #@e
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->setNullAnimation()V

    #@11
    .line 4438
    :cond_0
    const/4 v2, 0x0

    #@12
    move-object v0, p0

    #@13
    move-object v1, p1

    #@14
    move v3, p2

    #@15
    move v5, v4

    #@16
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    #@19
    .line 4433
    :cond_1
    return-void
.end method

.method public validateAppTokens(ILjava/util/List;)V
    .locals 19
    .param p1, "stackId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/wm/TaskGroup;",
            ">;)V"
        }
    .end annotation

    #@0
    .prologue
    .line 3224
    .local p2, "tasks":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/wm/TaskGroup;>;"
    move-object/from16 v0, p0

    #@2
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@4
    move-object/from16 v16, v0

    #@6
    monitor-enter v16

    #@7
    .line 3225
    :try_start_0
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    #@a
    move-result v15

    #@b
    add-int/lit8 v7, v15, -0x1

    #@d
    .line 3226
    .local v7, "t":I
    if-gez v7, :cond_0

    #@f
    .line 3227
    const-string/jumbo v15, "WindowManager"

    #@12
    const-string/jumbo v17, "validateAppTokens: empty task list"

    #@15
    move-object/from16 v0, v17

    #@17
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1a
    monitor-exit v16

    #@1b
    .line 3228
    return-void

    #@1c
    .line 3231
    :cond_0
    const/4 v15, 0x0

    #@1d
    :try_start_1
    move-object/from16 v0, p2

    #@1f
    invoke-interface {v0, v15}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@22
    move-result-object v9

    #@23
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    #@25
    .line 3232
    .local v9, "task":Lcom/android/server/wm/TaskGroup;
    iget v10, v9, Lcom/android/server/wm/TaskGroup;->taskId:I

    #@27
    .line 3233
    .local v10, "taskId":I
    move-object/from16 v0, p0

    #@29
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@2b
    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@2e
    move-result-object v8

    #@2f
    check-cast v8, Lcom/android/server/wm/Task;

    #@31
    .line 3234
    .local v8, "targetTask":Lcom/android/server/wm/Task;
    invoke-virtual {v8}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@34
    move-result-object v3

    #@35
    .line 3235
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_1

    #@37
    .line 3236
    const-string/jumbo v15, "WindowManager"

    #@3a
    new-instance v17, Ljava/lang/StringBuilder;

    #@3c
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@3f
    const-string/jumbo v18, "validateAppTokens: no Display for taskId="

    #@42
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@45
    move-result-object v17

    #@46
    move-object/from16 v0, v17

    #@48
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v17

    #@4c
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4f
    move-result-object v17

    #@50
    move-object/from16 v0, v17

    #@52
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@55
    monitor-exit v16

    #@56
    .line 3237
    return-void

    #@57
    .line 3240
    :cond_1
    :try_start_2
    move-object/from16 v0, p0

    #@59
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    #@5b
    move/from16 v0, p1

    #@5d
    invoke-virtual {v15, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@60
    move-result-object v15

    #@61
    check-cast v15, Lcom/android/server/wm/TaskStack;

    #@63
    invoke-virtual {v15}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    #@66
    move-result-object v5

    #@67
    .line 3242
    .local v5, "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@6a
    move-result v15

    #@6b
    add-int/lit8 v11, v15, -0x1

    #@6d
    .local v11, "taskNdx":I
    :goto_0
    if-ltz v11, :cond_5

    #@6f
    if-ltz v7, :cond_5

    #@71
    .line 3243
    invoke-virtual {v5, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@74
    move-result-object v15

    #@75
    check-cast v15, Lcom/android/server/wm/Task;

    #@77
    iget-object v6, v15, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    #@79
    .line 3244
    .local v6, "localTokens":Lcom/android/server/wm/AppTokenList;
    move-object/from16 v0, p2

    #@7b
    invoke-interface {v0, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@7e
    move-result-object v9

    #@7f
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    #@81
    .line 3245
    .restart local v9    # "task":Lcom/android/server/wm/TaskGroup;
    iget-object v13, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    #@83
    .line 3247
    .local v13, "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    move-object v4, v3

    #@84
    .line 3248
    .local v4, "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    #@86
    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    #@88
    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@8b
    move-result-object v15

    #@8c
    check-cast v15, Lcom/android/server/wm/Task;

    #@8e
    invoke-virtual {v15}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    #@91
    move-result-object v3

    #@92
    .line 3249
    if-eq v3, v4, :cond_2

    #@94
    .line 3250
    const-string/jumbo v15, "WindowManager"

    #@97
    const-string/jumbo v17, "validateAppTokens: displayContent changed in TaskGroup list!"

    #@9a
    move-object/from16 v0, v17

    #@9c
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    #@9f
    monitor-exit v16

    #@a0
    .line 3251
    return-void

    #@a1
    .line 3256
    :cond_2
    :try_start_3
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    #@a4
    move-result v15

    #@a5
    add-int/lit8 v12, v15, -0x1

    #@a7
    .local v12, "tokenNdx":I
    iget-object v15, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    #@a9
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    #@ac
    move-result v15

    #@ad
    add-int/lit8 v14, v15, -0x1

    #@af
    .line 3257
    .local v14, "v":I
    :goto_1
    if-ltz v12, :cond_4

    #@b1
    if-ltz v14, :cond_4

    #@b3
    .line 3258
    invoke-virtual {v6, v12}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    #@b6
    move-result-object v2

    #@b7
    check-cast v2, Lcom/android/server/wm/AppWindowToken;

    #@b9
    .line 3259
    .local v2, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v15, v2, Lcom/android/server/wm/AppWindowToken;->removed:Z

    #@bb
    if-eqz v15, :cond_3

    #@bd
    .line 3260
    add-int/lit8 v12, v12, -0x1

    #@bf
    .line 3261
    goto :goto_1

    #@c0
    .line 3263
    :cond_3
    invoke-interface {v13, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    #@c3
    move-result-object v15

    #@c4
    iget-object v0, v2, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    #@c6
    move-object/from16 v17, v0

    #@c8
    move-object/from16 v0, v17

    #@ca
    if-eq v15, v0, :cond_8

    #@cc
    .line 3270
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_4
    if-gez v12, :cond_5

    #@ce
    if-ltz v14, :cond_9

    #@d0
    .line 3275
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :cond_5
    if-gez v11, :cond_6

    #@d2
    if-ltz v7, :cond_7

    #@d4
    .line 3276
    :cond_6
    const-string/jumbo v15, "WindowManager"

    #@d7
    new-instance v17, Ljava/lang/StringBuilder;

    #@d9
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@dc
    const-string/jumbo v18, "validateAppTokens: Mismatch! ActivityManager="

    #@df
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e2
    move-result-object v17

    #@e3
    move-object/from16 v0, v17

    #@e5
    move-object/from16 v1, p2

    #@e7
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@ea
    move-result-object v17

    #@eb
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@ee
    move-result-object v17

    #@ef
    move-object/from16 v0, v17

    #@f1
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@f4
    .line 3277
    const-string/jumbo v15, "WindowManager"

    #@f7
    new-instance v17, Ljava/lang/StringBuilder;

    #@f9
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@fc
    const-string/jumbo v18, "validateAppTokens: Mismatch! WindowManager="

    #@ff
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@102
    move-result-object v17

    #@103
    move-object/from16 v0, v17

    #@105
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@108
    move-result-object v17

    #@109
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@10c
    move-result-object v17

    #@10d
    move-object/from16 v0, v17

    #@10f
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@112
    .line 3278
    const-string/jumbo v15, "WindowManager"

    #@115
    new-instance v17, Ljava/lang/StringBuilder;

    #@117
    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    #@11a
    const-string/jumbo v18, "validateAppTokens: Mismatch! Callers="

    #@11d
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@120
    move-result-object v17

    #@121
    const/16 v18, 0x4

    #@123
    invoke-static/range {v18 .. v18}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    #@126
    move-result-object v18

    #@127
    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@12a
    move-result-object v17

    #@12b
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@12e
    move-result-object v17

    #@12f
    move-object/from16 v0, v17

    #@131
    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@134
    :cond_7
    monitor-exit v16

    #@135
    .line 3223
    return-void

    #@136
    .line 3266
    .restart local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .restart local v12    # "tokenNdx":I
    .restart local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .restart local v14    # "v":I
    :cond_8
    add-int/lit8 v12, v12, -0x1

    #@138
    .line 3267
    add-int/lit8 v14, v14, -0x1

    #@13a
    goto/16 :goto_1

    #@13c
    .line 3242
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_9
    add-int/lit8 v11, v11, -0x1

    #@13e
    add-int/lit8 v7, v7, -0x1

    #@140
    goto/16 :goto_0

    #@142
    .line 3224
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "t":I
    .end local v8    # "targetTask":Lcom/android/server/wm/Task;
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    .end local v10    # "taskId":I
    .end local v11    # "taskNdx":I
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :catchall_0
    move-exception v15

    #@143
    monitor-exit v16

    #@144
    throw v15
.end method

.method public validateStackOrder([Ljava/lang/Integer;)V
    .locals 0
    .param p1, "remoteStackIds"    # [Ljava/lang/Integer;

    #@0
    .prologue
    .line 3283
    return-void
.end method

.method viewServerGetFocusedWindow(Ljava/net/Socket;)Z
    .locals 9
    .param p1, "client"    # Ljava/net/Socket;

    #@0
    .prologue
    .line 6997
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v7

    #@4
    if-eqz v7, :cond_0

    #@6
    .line 6998
    const/4 v7, 0x0

    #@7
    return v7

    #@8
    .line 7001
    :cond_0
    const/4 v6, 0x1

    #@9
    .line 7003
    .local v6, "result":Z
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    #@c
    move-result-object v3

    #@d
    .line 7005
    .local v3, "focusedWindow":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    #@e
    .line 7009
    .local v4, "out":Ljava/io/BufferedWriter;
    :try_start_0
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@11
    move-result-object v0

    #@12
    .line 7010
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v5, Ljava/io/BufferedWriter;

    #@14
    new-instance v7, Ljava/io/OutputStreamWriter;

    #@16
    invoke-direct {v7, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@19
    const/16 v8, 0x2000

    #@1b
    invoke-direct {v5, v7, v8}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    .line 7012
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .local v5, "out":Ljava/io/BufferedWriter;
    if-eqz v3, :cond_1

    #@20
    .line 7013
    :try_start_1
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@23
    move-result v7

    #@24
    invoke-static {v7}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@27
    move-result-object v7

    #@28
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@2b
    .line 7014
    const/16 v7, 0x20

    #@2d
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(I)V

    #@30
    .line 7015
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@32
    invoke-virtual {v7}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@35
    move-result-object v7

    #@36
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    #@39
    .line 7017
    :cond_1
    const/16 v7, 0xa

    #@3b
    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(I)V

    #@3e
    .line 7018
    invoke-virtual {v5}, Ljava/io/BufferedWriter;->flush()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@41
    .line 7022
    if-eqz v5, :cond_2

    #@43
    .line 7024
    :try_start_2
    invoke-virtual {v5}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    #@46
    :cond_2
    :goto_0
    move-object v4, v5

    #@47
    .line 7031
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v5    # "out":Ljava/io/BufferedWriter;
    :cond_3
    :goto_1
    return v6

    #@48
    .line 7025
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catch_0
    move-exception v1

    #@49
    .line 7026
    .local v1, "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@4a
    goto :goto_0

    #@4b
    .line 7019
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "e":Ljava/io/IOException;
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v2

    #@4c
    .line 7020
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .local v2, "e":Ljava/lang/Exception;
    :goto_2
    const/4 v6, 0x0

    #@4d
    .line 7022
    if-eqz v4, :cond_3

    #@4f
    .line 7024
    :try_start_3
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2

    #@52
    goto :goto_1

    #@53
    .line 7025
    :catch_2
    move-exception v1

    #@54
    .line 7026
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@55
    goto :goto_1

    #@56
    .line 7021
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "e":Ljava/lang/Exception;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catchall_0
    move-exception v7

    #@57
    .line 7022
    .end local v4    # "out":Ljava/io/BufferedWriter;
    :goto_3
    if-eqz v4, :cond_4

    #@59
    .line 7024
    :try_start_4
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_3

    #@5c
    .line 7021
    :cond_4
    :goto_4
    throw v7

    #@5d
    .line 7025
    :catch_3
    move-exception v1

    #@5e
    .line 7026
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v6, 0x0

    #@5f
    goto :goto_4

    #@60
    .line 7021
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catchall_1
    move-exception v7

    #@61
    move-object v4, v5

    #@62
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .local v4, "out":Ljava/io/BufferedWriter;
    goto :goto_3

    #@63
    .line 7019
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v2

    #@64
    .restart local v2    # "e":Ljava/lang/Exception;
    move-object v4, v5

    #@65
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    goto :goto_2
.end method

.method viewServerListWindows(Ljava/net/Socket;)Z
    .locals 15
    .param p1, "client"    # Ljava/net/Socket;

    #@0
    .prologue
    .line 6939
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v13

    #@4
    if-eqz v13, :cond_0

    #@6
    .line 6940
    const/4 v13, 0x0

    #@7
    return v13

    #@8
    .line 6943
    :cond_0
    const/4 v10, 0x1

    #@9
    .line 6945
    .local v10, "result":Z
    new-instance v12, Lcom/android/server/wm/WindowList;

    #@b
    invoke-direct {v12}, Lcom/android/server/wm/WindowList;-><init>()V

    #@e
    .line 6946
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    iget-object v14, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@10
    monitor-enter v14

    #@11
    .line 6948
    :try_start_0
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@13
    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    #@16
    move-result v7

    #@17
    .line 6949
    .local v7, "numDisplays":I
    const/4 v3, 0x0

    #@18
    .local v3, "displayNdx":I
    :goto_0
    if-ge v3, v7, :cond_1

    #@1a
    .line 6950
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    #@1c
    invoke-virtual {v13, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@1f
    move-result-object v2

    #@20
    check-cast v2, Lcom/android/server/wm/DisplayContent;

    #@22
    .line 6951
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    #@25
    move-result-object v13

    #@26
    invoke-virtual {v12, v13}, Lcom/android/server/wm/WindowList;->addAll(Ljava/util/Collection;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@29
    .line 6949
    add-int/lit8 v3, v3, 0x1

    #@2b
    goto :goto_0

    #@2c
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1
    monitor-exit v14

    #@2d
    .line 6955
    const/4 v8, 0x0

    #@2e
    .line 6959
    .local v8, "out":Ljava/io/BufferedWriter;
    :try_start_1
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@31
    move-result-object v0

    #@32
    .line 6960
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v9, Ljava/io/BufferedWriter;

    #@34
    new-instance v13, Ljava/io/OutputStreamWriter;

    #@36
    invoke-direct {v13, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@39
    const/16 v14, 0x2000

    #@3b
    invoke-direct {v9, v13, v14}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@3e
    .line 6962
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    :try_start_2
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    #@41
    move-result v1

    #@42
    .line 6963
    .local v1, "count":I
    const/4 v6, 0x0

    #@43
    .local v6, "i":I
    :goto_1
    if-ge v6, v1, :cond_2

    #@45
    .line 6964
    invoke-virtual {v12, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    #@48
    move-result-object v11

    #@49
    check-cast v11, Lcom/android/server/wm/WindowState;

    #@4b
    .line 6965
    .local v11, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v11}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    #@4e
    move-result v13

    #@4f
    invoke-static {v13}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@52
    move-result-object v13

    #@53
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@56
    .line 6966
    const/16 v13, 0x20

    #@58
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(I)V

    #@5b
    .line 6967
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    #@5d
    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    #@60
    move-result-object v13

    #@61
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    #@64
    .line 6968
    const/16 v13, 0xa

    #@66
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(I)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_4
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    #@69
    .line 6963
    add-int/lit8 v6, v6, 0x1

    #@6b
    goto :goto_1

    #@6c
    .line 6946
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v3    # "displayNdx":I
    .end local v6    # "i":I
    .end local v7    # "numDisplays":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .end local v11    # "w":Lcom/android/server/wm/WindowState;
    :catchall_0
    move-exception v13

    #@6d
    monitor-exit v14

    #@6e
    throw v13

    #@6f
    .line 6971
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v3    # "displayNdx":I
    .restart local v6    # "i":I
    .restart local v7    # "numDisplays":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :cond_2
    :try_start_3
    const-string/jumbo v13, "DONE.\n"

    #@72
    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@75
    .line 6972
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->flush()V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_4
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    #@78
    .line 6976
    if-eqz v9, :cond_3

    #@7a
    .line 6978
    :try_start_4
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    #@7d
    :cond_3
    :goto_2
    move-object v8, v9

    #@7e
    .line 6985
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v6    # "i":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    :cond_4
    :goto_3
    return v10

    #@7f
    .line 6979
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v6    # "i":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_0
    move-exception v4

    #@80
    .line 6980
    .local v4, "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@81
    goto :goto_2

    #@82
    .line 6973
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v4    # "e":Ljava/io/IOException;
    .end local v6    # "i":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v5

    #@83
    .line 6974
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v5, "e":Ljava/lang/Exception;
    :goto_4
    const/4 v10, 0x0

    #@84
    .line 6976
    if-eqz v8, :cond_4

    #@86
    .line 6978
    :try_start_5
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2

    #@89
    goto :goto_3

    #@8a
    .line 6979
    :catch_2
    move-exception v4

    #@8b
    .line 6980
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@8c
    goto :goto_3

    #@8d
    .line 6975
    .end local v4    # "e":Ljava/io/IOException;
    .end local v5    # "e":Ljava/lang/Exception;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catchall_1
    move-exception v13

    #@8e
    .line 6976
    .end local v8    # "out":Ljava/io/BufferedWriter;
    :goto_5
    if-eqz v8, :cond_5

    #@90
    .line 6978
    :try_start_6
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_3

    #@93
    .line 6975
    :cond_5
    :goto_6
    throw v13

    #@94
    .line 6979
    :catch_3
    move-exception v4

    #@95
    .line 6980
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v10, 0x0

    #@96
    goto :goto_6

    #@97
    .line 6975
    .end local v4    # "e":Ljava/io/IOException;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catchall_2
    move-exception v13

    #@98
    move-object v8, v9

    #@99
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v8, "out":Ljava/io/BufferedWriter;
    goto :goto_5

    #@9a
    .line 6973
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v5

    #@9b
    .restart local v5    # "e":Ljava/lang/Exception;
    move-object v8, v9

    #@9c
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    goto :goto_4
.end method

.method viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 17
    .param p1, "client"    # Ljava/net/Socket;
    .param p2, "command"    # Ljava/lang/String;
    .param p3, "parameters"    # Ljava/lang/String;

    #@0
    .prologue
    .line 7055
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    #@3
    move-result v14

    #@4
    if-eqz v14, :cond_0

    #@6
    .line 7056
    const/4 v14, 0x0

    #@7
    return v14

    #@8
    .line 7059
    :cond_0
    const/4 v12, 0x1

    #@9
    .line 7060
    .local v12, "success":Z
    const/4 v4, 0x0

    #@a
    .line 7061
    .local v4, "data":Landroid/os/Parcel;
    const/4 v11, 0x0

    #@b
    .line 7063
    .local v11, "reply":Landroid/os/Parcel;
    const/4 v9, 0x0

    #@c
    .line 7068
    .local v9, "out":Ljava/io/BufferedWriter;
    const/16 v14, 0x20

    #@e
    :try_start_0
    move-object/from16 v0, p3

    #@10
    invoke-virtual {v0, v14}, Ljava/lang/String;->indexOf(I)I

    #@13
    move-result v8

    #@14
    .line 7069
    .local v8, "index":I
    const/4 v14, -0x1

    #@15
    if-ne v8, v14, :cond_1

    #@17
    .line 7070
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    #@1a
    move-result v8

    #@1b
    .line 7072
    :cond_1
    const/4 v14, 0x0

    #@1c
    move-object/from16 v0, p3

    #@1e
    invoke-virtual {v0, v14, v8}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    #@21
    move-result-object v3

    #@22
    .line 7073
    .local v3, "code":Ljava/lang/String;
    const/16 v14, 0x10

    #@24
    invoke-static {v3, v14}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    #@27
    move-result-wide v14

    #@28
    long-to-int v7, v14

    #@29
    .line 7076
    .local v7, "hashCode":I
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    #@2c
    move-result v14

    #@2d
    if-ge v8, v14, :cond_2

    #@2f
    .line 7077
    add-int/lit8 v14, v8, 0x1

    #@31
    move-object/from16 v0, p3

    #@33
    invoke-virtual {v0, v14}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    #@36
    move-result-object p3

    #@37
    .line 7082
    :goto_0
    move-object/from16 v0, p0

    #@39
    invoke-direct {v0, v7}, Lcom/android/server/wm/WindowManagerService;->findWindow(I)Lcom/android/server/wm/WindowState;

    #@3c
    move-result-object v13

    #@3d
    .line 7083
    .local v13, "window":Lcom/android/server/wm/WindowState;
    if-nez v13, :cond_3

    #@3f
    .line 7084
    const/4 v14, 0x0

    #@40
    return v14

    #@41
    .line 7079
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_2
    const-string/jumbo p3, ""

    #@44
    goto :goto_0

    #@45
    .line 7087
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_3
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@48
    move-result-object v4

    #@49
    .line 7088
    .local v4, "data":Landroid/os/Parcel;
    const-string/jumbo v14, "android.view.IWindow"

    #@4c
    invoke-virtual {v4, v14}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    #@4f
    .line 7089
    move-object/from16 v0, p2

    #@51
    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@54
    .line 7090
    move-object/from16 v0, p3

    #@56
    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@59
    .line 7091
    const/4 v14, 0x1

    #@5a
    invoke-virtual {v4, v14}, Landroid/os/Parcel;->writeInt(I)V

    #@5d
    .line 7092
    invoke-static/range {p1 .. p1}, Landroid/os/ParcelFileDescriptor;->fromSocket(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;

    #@60
    move-result-object v14

    #@61
    const/4 v15, 0x0

    #@62
    invoke-virtual {v14, v4, v15}, Landroid/os/ParcelFileDescriptor;->writeToParcel(Landroid/os/Parcel;I)V

    #@65
    .line 7094
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@68
    move-result-object v11

    #@69
    .line 7096
    .local v11, "reply":Landroid/os/Parcel;
    iget-object v14, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    #@6b
    invoke-interface {v14}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@6e
    move-result-object v2

    #@6f
    .line 7098
    .local v2, "binder":Landroid/os/IBinder;
    const/4 v14, 0x1

    #@70
    const/4 v15, 0x0

    #@71
    invoke-interface {v2, v14, v4, v11, v15}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    #@74
    .line 7100
    invoke-virtual {v11}, Landroid/os/Parcel;->readException()V

    #@77
    .line 7102
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->isOutputShutdown()Z

    #@7a
    move-result v14

    #@7b
    if-nez v14, :cond_4

    #@7d
    .line 7103
    new-instance v10, Ljava/io/BufferedWriter;

    #@7f
    new-instance v14, Ljava/io/OutputStreamWriter;

    #@81
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    #@84
    move-result-object v15

    #@85
    invoke-direct {v14, v15}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    #@88
    invoke-direct {v10, v14}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@8b
    .line 7104
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v10, "out":Ljava/io/BufferedWriter;
    :try_start_1
    const-string/jumbo v14, "DONE\n"

    #@8e
    invoke-virtual {v10, v14}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    #@91
    .line 7105
    invoke-virtual {v10}, Ljava/io/BufferedWriter;->flush()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    #@94
    move-object v9, v10

    #@95
    .line 7112
    .end local v10    # "out":Ljava/io/BufferedWriter;
    :cond_4
    if-eqz v4, :cond_5

    #@97
    .line 7113
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@9a
    .line 7115
    :cond_5
    if-eqz v11, :cond_6

    #@9c
    .line 7116
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@9f
    .line 7118
    :cond_6
    if-eqz v9, :cond_7

    #@a1
    .line 7120
    :try_start_2
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    #@a4
    .line 7127
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v4    # "data":Landroid/os/Parcel;
    .end local v7    # "hashCode":I
    .end local v8    # "index":I
    .end local v11    # "reply":Landroid/os/Parcel;
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_7
    :goto_1
    return v12

    #@a5
    .line 7121
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v4    # "data":Landroid/os/Parcel;
    .restart local v7    # "hashCode":I
    .restart local v8    # "index":I
    .restart local v11    # "reply":Landroid/os/Parcel;
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :catch_0
    move-exception v5

    #@a6
    .local v5, "e":Ljava/io/IOException;
    goto :goto_1

    #@a7
    .line 7108
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v4    # "data":Landroid/os/Parcel;
    .end local v5    # "e":Ljava/io/IOException;
    .end local v7    # "hashCode":I
    .end local v8    # "index":I
    .end local v11    # "reply":Landroid/os/Parcel;
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_1
    move-exception v6

    #@a8
    .line 7109
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v6, "e":Ljava/lang/Exception;
    :goto_2
    :try_start_3
    const-string/jumbo v14, "WindowManager"

    #@ab
    new-instance v15, Ljava/lang/StringBuilder;

    #@ad
    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    #@b0
    const-string/jumbo v16, "Could not send command "

    #@b3
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b6
    move-result-object v15

    #@b7
    move-object/from16 v0, p2

    #@b9
    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@bc
    move-result-object v15

    #@bd
    const-string/jumbo v16, " with parameters "

    #@c0
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c3
    move-result-object v15

    #@c4
    move-object/from16 v0, p3

    #@c6
    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c9
    move-result-object v15

    #@ca
    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@cd
    move-result-object v15

    #@ce
    invoke-static {v14, v15, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    #@d1
    .line 7110
    const/4 v12, 0x0

    #@d2
    .line 7112
    if-eqz v4, :cond_8

    #@d4
    .line 7113
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@d7
    .line 7115
    :cond_8
    if-eqz v11, :cond_9

    #@d9
    .line 7116
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@dc
    .line 7118
    :cond_9
    if-eqz v9, :cond_7

    #@de
    .line 7120
    :try_start_4
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    #@e1
    goto :goto_1

    #@e2
    .line 7121
    :catch_2
    move-exception v5

    #@e3
    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_1

    #@e4
    .line 7111
    .end local v5    # "e":Ljava/io/IOException;
    .end local v6    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v14

    #@e5
    .line 7112
    :goto_3
    if-eqz v4, :cond_a

    #@e7
    .line 7113
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    #@ea
    .line 7115
    :cond_a
    if-eqz v11, :cond_b

    #@ec
    .line 7116
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    #@ef
    .line 7118
    :cond_b
    if-eqz v9, :cond_c

    #@f1
    .line 7120
    :try_start_5
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    #@f4
    .line 7111
    :cond_c
    :goto_4
    throw v14

    #@f5
    .line 7121
    :catch_3
    move-exception v5

    #@f6
    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_4

    #@f7
    .line 7111
    .end local v5    # "e":Ljava/io/IOException;
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v4    # "data":Landroid/os/Parcel;
    .restart local v7    # "hashCode":I
    .restart local v8    # "index":I
    .restart local v10    # "out":Ljava/io/BufferedWriter;
    .restart local v11    # "reply":Landroid/os/Parcel;
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :catchall_1
    move-exception v14

    #@f8
    move-object v9, v10

    #@f9
    .end local v10    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    goto :goto_3

    #@fa
    .line 7108
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v10    # "out":Ljava/io/BufferedWriter;
    :catch_4
    move-exception v6

    #@fb
    .restart local v6    # "e":Ljava/lang/Exception;
    move-object v9, v10

    #@fc
    .end local v10    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    goto :goto_2
.end method

.method public watchRotation(Landroid/view/IRotationWatcher;)I
    .locals 6
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    #@0
    .prologue
    .line 6733
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v2

    #@4
    .line 6734
    .local v2, "watcherBinder":Landroid/os/IBinder;
    new-instance v0, Lcom/android/server/wm/WindowManagerService$9;

    #@6
    invoke-direct {v0, p0, v2}, Lcom/android/server/wm/WindowManagerService$9;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V

    #@9
    .line 6752
    .local v0, "dr":Landroid/os/IBinder$DeathRecipient;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@b
    monitor-enter v4

    #@c
    .line 6754
    :try_start_0
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    #@f
    move-result-object v3

    #@10
    const/4 v5, 0x0

    #@11
    invoke-interface {v3, v0, v5}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    #@14
    .line 6755
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    #@16
    new-instance v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    #@18
    invoke-direct {v5, p0, p1, v0}, Lcom/android/server/wm/WindowManagerService$RotationWatcher;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRotationWatcher;Landroid/os/IBinder$DeathRecipient;)V

    #@1b
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@1e
    .line 6760
    :goto_0
    :try_start_1
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@20
    monitor-exit v4

    #@21
    return v3

    #@22
    .line 6752
    :catchall_0
    move-exception v3

    #@23
    monitor-exit v4

    #@24
    throw v3

    #@25
    .line 6756
    :catch_0
    move-exception v1

    #@26
    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_0
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .locals 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/os/IBinder;
    .param p3, "throwOnError"    # Z

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 9096
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    #@3
    invoke-virtual {v2, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@6
    move-result-object v1

    #@7
    check-cast v1, Lcom/android/server/wm/WindowState;

    #@9
    .line 9099
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_1

    #@b
    .line 9100
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@d
    .line 9101
    new-instance v2, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v3, "Requested window "

    #@15
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v2

    #@19
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@1c
    move-result-object v2

    #@1d
    const-string/jumbo v3, " does not exist"

    #@20
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@23
    move-result-object v2

    #@24
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@27
    move-result-object v2

    #@28
    .line 9100
    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@2b
    .line 9102
    .local v0, "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_0

    #@2d
    .line 9103
    throw v0

    #@2e
    .line 9105
    :cond_0
    const-string/jumbo v2, "WindowManager"

    #@31
    const-string/jumbo v3, "Failed looking up window"

    #@34
    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@37
    .line 9106
    return-object v4

    #@38
    .line 9108
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    :cond_1
    if-eqz p1, :cond_3

    #@3a
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@3c
    if-eq v2, p1, :cond_3

    #@3e
    .line 9109
    new-instance v0, Ljava/lang/IllegalArgumentException;

    #@40
    .line 9110
    new-instance v2, Ljava/lang/StringBuilder;

    #@42
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@45
    const-string/jumbo v3, "Requested window "

    #@48
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4b
    move-result-object v2

    #@4c
    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@4f
    move-result-object v2

    #@50
    const-string/jumbo v3, " is in session "

    #@53
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@56
    move-result-object v2

    #@57
    .line 9111
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    #@59
    .line 9110
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@5c
    move-result-object v2

    #@5d
    .line 9111
    const-string/jumbo v3, ", not "

    #@60
    .line 9110
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@63
    move-result-object v2

    #@64
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v2

    #@68
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6b
    move-result-object v2

    #@6c
    .line 9109
    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    #@6f
    .line 9112
    .restart local v0    # "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_2

    #@71
    .line 9113
    throw v0

    #@72
    .line 9115
    :cond_2
    const-string/jumbo v2, "WindowManager"

    #@75
    const-string/jumbo v3, "Failed looking up window"

    #@78
    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@7b
    .line 9116
    return-object v4

    #@7c
    .line 9119
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    :cond_3
    return-object v1
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    .locals 1
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "throwOnError"    # Z

    #@0
    .prologue
    .line 9091
    invoke-interface {p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    #@3
    move-result-object v0

    #@4
    invoke-virtual {p0, p1, v0, p3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    #@7
    move-result-object v0

    #@8
    return-object v0
.end method
