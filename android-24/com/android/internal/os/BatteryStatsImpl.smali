.class public Lcom/android/internal/os/BatteryStatsImpl;
.super Landroid/os/BatteryStats;
.source "BatteryStatsImpl.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/internal/os/BatteryStatsImpl$1;,
        Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;,
        Lcom/android/internal/os/BatteryStatsImpl$Clocks;,
        Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;,
        Lcom/android/internal/os/BatteryStatsImpl$Counter;,
        Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;,
        Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;,
        Lcom/android/internal/os/BatteryStatsImpl$MyHandler;,
        Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;,
        Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;,
        Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;,
        Lcom/android/internal/os/BatteryStatsImpl$TimeBase;,
        Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;,
        Lcom/android/internal/os/BatteryStatsImpl$Timer;,
        Lcom/android/internal/os/BatteryStatsImpl$Uid;
    }
.end annotation


# static fields
.field static final BATTERY_DELTA_LEVEL_FLAG:I = 0x1

.field public static final BATTERY_PLUGGED_NONE:I = 0x0

.field public static final CREATOR:Landroid/os/Parcelable$Creator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/Parcelable$Creator",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl;",
            ">;"
        }
    .end annotation
.end field

.field private static final DEBUG:Z = false

.field public static final DEBUG_ENERGY:Z = false

.field private static final DEBUG_ENERGY_CPU:Z = false

.field private static final DEBUG_HISTORY:Z = false

.field static final DELAY_UPDATE_WAKELOCKS:J = 0x1388L

.field static final DELTA_BATTERY_CHARGE_FLAG:I = 0x1000000

.field static final DELTA_BATTERY_LEVEL_FLAG:I = 0x80000

.field static final DELTA_EVENT_FLAG:I = 0x800000

.field static final DELTA_STATE2_FLAG:I = 0x200000

.field static final DELTA_STATE_FLAG:I = 0x100000

.field static final DELTA_STATE_MASK:I = -0x2000000

.field static final DELTA_TIME_ABS:I = 0x7fffd

.field static final DELTA_TIME_INT:I = 0x7fffe

.field static final DELTA_TIME_LONG:I = 0x7ffff

.field static final DELTA_TIME_MASK:I = 0x7ffff

.field static final DELTA_WAKELOCK_FLAG:I = 0x400000

.field private static final MAGIC:I = -0x458a8b8b

.field static final MAX_DAILY_ITEMS:I = 0xa

.field static final MAX_HISTORY_BUFFER:I = 0x40000

.field private static final MAX_HISTORY_ITEMS:I = 0x7d0

.field static final MAX_LEVEL_STEPS:I = 0xc8

.field static final MAX_MAX_HISTORY_BUFFER:I = 0x50000

.field private static final MAX_MAX_HISTORY_ITEMS:I = 0xbb8

.field private static final MAX_WAKELOCKS_PER_UID:I = 0x64

.field static final MSG_REPORT_CHARGING:I = 0x3

.field static final MSG_REPORT_POWER_CHANGE:I = 0x2

.field static final MSG_UPDATE_WAKELOCKS:I = 0x1

.field private static final NETWORK_STATS_DELTA:I = 0x2

.field private static final NETWORK_STATS_LAST:I = 0x0

.field private static final NETWORK_STATS_NEXT:I = 0x1

.field private static final NUM_BT_TX_LEVELS:I = 0x1

.field private static final NUM_WIFI_TX_LEVELS:I = 0x1

.field static final STATE_BATTERY_HEALTH_MASK:I = 0x7

.field static final STATE_BATTERY_HEALTH_SHIFT:I = 0x1a

.field static final STATE_BATTERY_MASK:I = -0x1000000

.field static final STATE_BATTERY_PLUG_MASK:I = 0x3

.field static final STATE_BATTERY_PLUG_SHIFT:I = 0x18

.field static final STATE_BATTERY_STATUS_MASK:I = 0x7

.field static final STATE_BATTERY_STATUS_SHIFT:I = 0x1d

.field private static final TAG:Ljava/lang/String; = "BatteryStatsImpl"

.field private static final USE_OLD_HISTORY:Z = false

.field private static final VERSION:I = 0x93


# instance fields
.field final mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

.field mActiveHistoryStates:I

.field mActiveHistoryStates2:I

.field mAudioOnNesting:I

.field mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mAudioTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field mBluetoothScanNesting:I

.field final mBluetoothScanOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

.field mCameraOnNesting:I

.field mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mCameraTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mChangedStates:I

.field mChangedStates2:I

.field final mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field mCharging:Z

.field public final mCheckinFile:Lcom/android/internal/os/AtomicFile;

.field protected mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

.field final mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field mCurStepCpuSystemTime:J

.field mCurStepCpuUserTime:J

.field mCurStepMode:I

.field mCurStepStatIOWaitTime:J

.field mCurStepStatIdleTime:J

.field mCurStepStatIrqTime:J

.field mCurStepStatSoftIrqTime:J

.field mCurStepStatSystemTime:J

.field mCurStepStatUserTime:J

.field mCurrentBatteryLevel:I

.field final mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field final mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field public final mDailyFile:Lcom/android/internal/os/AtomicFile;

.field final mDailyItems:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/os/BatteryStats$DailyItem;",
            ">;"
        }
    .end annotation
.end field

.field mDailyPackageChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/os/BatteryStats$PackageChange;",
            ">;"
        }
    .end annotation
.end field

.field mDailyStartTime:J

.field mDeviceIdleMode:I

.field mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mDeviceIdling:Z

.field mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mDeviceLightIdling:Z

.field mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mDischargeAmountScreenOff:I

.field mDischargeAmountScreenOffSinceCharge:I

.field mDischargeAmountScreenOn:I

.field mDischargeAmountScreenOnSinceCharge:I

.field private mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mDischargeCurrentLevel:I

.field mDischargePlugLevel:I

.field private mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mDischargeScreenOffUnplugLevel:I

.field mDischargeScreenOnUnplugLevel:I

.field mDischargeStartLevel:I

.field final mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field mDischargeUnplugLevel:I

.field mDistributeWakelockCpu:Z

.field final mDrawTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mEndPlatformVersion:Ljava/lang/String;

.field private mEstimatedBatteryCapacity:I

.field private final mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

.field private final mFile:Lcom/android/internal/util/JournaledFile;

.field mFlashlightOnNesting:I

.field mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mFlashlightTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final mFullTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final mFullWifiLockTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mGlobalWifiRunning:Z

.field mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mGpsNesting:I

.field public final mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

.field mHasBluetoothReporting:Z

.field mHasModemReporting:Z

.field mHasWifiReporting:Z

.field mHaveBatteryLevel:Z

.field mHighDischargeAmountSinceCharge:I

.field mHistory:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

.field mHistoryBaseTime:J

.field final mHistoryBuffer:Landroid/os/Parcel;

.field mHistoryBufferLastPos:I

.field mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

.field mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

.field private mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

.field mHistoryLastEnd:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

.field mHistoryOverflow:Z

.field final mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryTagPool:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/BatteryStats$HistoryTag;",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mInitStepMode:I

.field private mInitialAcquireWakeName:Ljava/lang/String;

.field private mInitialAcquireWakeUid:I

.field mInteractive:Z

.field mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mIsolatedUids:Landroid/util/SparseIntArray;

.field private mIteratingHistory:Z

.field private mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

.field private final mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

.field private final mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

.field private final mKernelWakelockStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field mLastChargeStepLevel:I

.field mLastChargingStateLevel:I

.field mLastDischargeStepLevel:I

.field mLastHistoryElapsedRealtime:J

.field mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field mLastHistoryStepLevel:B

.field mLastIdleTimeStart:J

.field final mLastPartialTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mLastStepCpuSystemTime:J

.field mLastStepCpuUserTime:J

.field mLastStepStatIOWaitTime:J

.field mLastStepStatIdleTime:J

.field mLastStepStatIrqTime:J

.field mLastStepStatSoftIrqTime:J

.field mLastStepStatSystemTime:J

.field mLastStepStatUserTime:J

.field mLastWakeupReason:Ljava/lang/String;

.field mLastWakeupUptimeMs:J

.field mLastWriteTime:J

.field private mLoadedNumConnectivityChange:I

.field mLongestFullIdleTime:J

.field mLongestLightIdleTime:J

.field mLowDischargeAmountSinceCharge:I

.field mMaxChargeStepLevel:I

.field mMinDischargeStepLevel:I

.field private mMobileIfaces:[Ljava/lang/String;

.field private mMobileNetworkStats:[Landroid/net/NetworkStats;

.field mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mMobileRadioActiveStartTime:J

.field mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mMobileRadioPowerState:I

.field mModStepMode:I

.field mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field final mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field final mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field private final mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

.field mNextHistoryTagIdx:I

.field mNextMaxDailyDeadline:J

.field mNextMinDailyDeadline:J

.field mNoAutoReset:Z

.field private mNumConnectivityChange:I

.field mNumHistoryItems:I

.field mNumHistoryTagChars:I

.field mOnBattery:Z

.field mOnBatteryInternal:Z

.field final mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

.field protected final mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

.field final mPartialTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mPendingWrite:Landroid/os/Parcel;

.field mPhoneDataConnectionType:I

.field final mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mPhoneOn:Z

.field mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private mPhoneServiceState:I

.field private mPhoneServiceStateRaw:I

.field mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mPhoneSignalStrengthBin:I

.field mPhoneSignalStrengthBinRaw:I

.field final mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private mPhoneSimStateRaw:I

.field private final mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

.field private mPowerProfile:Lcom/android/internal/os/PowerProfile;

.field mPowerSaveModeEnabled:Z

.field mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mReadHistoryChars:I

.field final mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field mReadHistoryStrings:[Ljava/lang/String;

.field mReadHistoryUids:[I

.field private mReadOverflow:Z

.field mRealtime:J

.field mRealtimeStart:J

.field public mRecordAllHistory:Z

.field mRecordingHistory:Z

.field mScreenBrightnessBin:I

.field final mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mScreenState:I

.field mSensorNesting:I

.field final mSensorTimers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;>;"
        }
    .end annotation
.end field

.field mShuttingDown:Z

.field mStartClockTime:J

.field mStartCount:I

.field mStartPlatformVersion:Ljava/lang/String;

.field mTempTotalCpuSystemTimeUs:J

.field mTempTotalCpuUserTimeUs:J

.field final mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field private final mTmpNetworkStatsEntry:Landroid/net/NetworkStats$Entry;

.field private final mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

.field mTrackRunningHistoryElapsedRealtime:J

.field mTrackRunningHistoryUptime:J

.field final mUidStats:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$Uid;",
            ">;"
        }
    .end annotation
.end field

.field private mUnpluggedNumConnectivityChange:I

.field mUptime:J

.field mUptimeStart:J

.field mVideoOnNesting:I

.field mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mVideoTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWakeLockImportant:Z

.field mWakeLockNesting:I

.field private final mWakeupReasonStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field final mWifiBatchedScanTimers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;>;"
        }
    .end annotation
.end field

.field mWifiFullLockNesting:I

.field private mWifiIfaces:[Ljava/lang/String;

.field mWifiMulticastNesting:I

.field final mWifiMulticastTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field private mWifiNetworkStats:[Landroid/net/NetworkStats;

.field mWifiOn:Z

.field mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mWifiRadioPowerState:I

.field final mWifiRunningTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWifiScanNesting:I

.field final mWifiScanTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWifiSignalStrengthBin:I

.field final mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mWifiState:I

.field final mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mWifiSupplState:I

.field final mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mWindowTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;


# direct methods
.method static synthetic -get0(Lcom/android/internal/os/BatteryStatsImpl;)Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    #@2
    return-object v0
.end method

.method static synthetic -get1(Lcom/android/internal/os/BatteryStatsImpl;)Lcom/android/internal/os/PowerProfile;
    .locals 1

    #@0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@2
    return-object v0
.end method

.method static constructor <clinit>()V
    .locals 1

    #@0
    .prologue
    .line 11135
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$1;

    #@2
    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$1;-><init>()V

    #@5
    .line 11134
    sput-object v0, Lcom/android/internal/os/BatteryStatsImpl;->CREATOR:Landroid/os/Parcelable$Creator;

    #@7
    .line 97
    return-void
.end method

.method public constructor <init>()V
    .locals 1

    #@0
    .prologue
    .line 589
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    #@2
    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    #@5
    invoke-direct {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    #@8
    .line 588
    return-void
.end method

.method public constructor <init>(Landroid/os/Parcel;)V
    .locals 1
    .param p1, "p"    # Landroid/os/Parcel;

    #@0
    .prologue
    .line 7604
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    #@2
    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    #@5
    invoke-direct {p0, v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Landroid/os/Parcel;)V

    #@8
    .line 7603
    return-void
.end method

.method public constructor <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V
    .locals 8
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@0
    .prologue
    const/4 v1, 0x1

    #@1
    const-wide/16 v6, 0x0

    #@3
    const/4 v4, 0x0

    #@4
    const/4 v3, -0x1

    #@5
    const/4 v2, 0x0

    #@6
    .line 592
    invoke-direct {p0}, Landroid/os/BatteryStats;-><init>()V

    #@9
    .line 141
    new-instance v0, Lcom/android/internal/os/KernelWakelockReader;

    #@b
    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    #@e
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    #@10
    .line 142
    new-instance v0, Lcom/android/internal/os/KernelWakelockStats;

    #@12
    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    #@15
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    #@17
    .line 144
    new-instance v0, Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@19
    invoke-direct {v0}, Lcom/android/internal/os/KernelUidCpuTimeReader;-><init>()V

    #@1c
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@1e
    .line 232
    new-instance v0, Landroid/util/SparseIntArray;

    #@20
    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    #@23
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    #@25
    .line 237
    new-instance v0, Landroid/util/SparseArray;

    #@27
    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    #@2a
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@2c
    .line 243
    new-instance v0, Ljava/util/ArrayList;

    #@2e
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@31
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@33
    .line 244
    new-instance v0, Ljava/util/ArrayList;

    #@35
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@38
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    #@3a
    .line 245
    new-instance v0, Ljava/util/ArrayList;

    #@3c
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@3f
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    #@41
    .line 246
    new-instance v0, Ljava/util/ArrayList;

    #@43
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@46
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    #@48
    .line 247
    new-instance v0, Landroid/util/SparseArray;

    #@4a
    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    #@4d
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    #@4f
    .line 248
    new-instance v0, Ljava/util/ArrayList;

    #@51
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@54
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    #@56
    .line 249
    new-instance v0, Ljava/util/ArrayList;

    #@58
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@5b
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    #@5d
    .line 250
    new-instance v0, Ljava/util/ArrayList;

    #@5f
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@62
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    #@64
    .line 251
    new-instance v0, Ljava/util/ArrayList;

    #@66
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@69
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    #@6b
    .line 252
    new-instance v0, Landroid/util/SparseArray;

    #@6d
    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    #@70
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    #@72
    .line 253
    new-instance v0, Ljava/util/ArrayList;

    #@74
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@77
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    #@79
    .line 254
    new-instance v0, Ljava/util/ArrayList;

    #@7b
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@7e
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    #@80
    .line 255
    new-instance v0, Ljava/util/ArrayList;

    #@82
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@85
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    #@87
    .line 256
    new-instance v0, Ljava/util/ArrayList;

    #@89
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@8c
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    #@8e
    .line 257
    new-instance v0, Ljava/util/ArrayList;

    #@90
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@93
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    #@95
    .line 260
    new-instance v0, Ljava/util/ArrayList;

    #@97
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@9a
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    #@9c
    .line 264
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@9e
    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    #@a1
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@a3
    .line 268
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@a5
    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    #@a8
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@aa
    .line 276
    new-instance v0, Landroid/os/BatteryStats$HistoryEventTracker;

    #@ac
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    #@af
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@b1
    .line 279
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    #@b3
    .line 280
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@b5
    .line 285
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@b8
    move-result-object v0

    #@b9
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@bb
    .line 286
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@bd
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@c0
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@c2
    .line 287
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@c4
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@c7
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@c9
    .line 288
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@cb
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@ce
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    #@d0
    .line 289
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@d2
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@d5
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@d7
    .line 290
    new-instance v0, Ljava/util/HashMap;

    #@d9
    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    #@dc
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@de
    .line 294
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@e0
    .line 295
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@e2
    .line 296
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@e4
    .line 297
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    #@e6
    .line 298
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@e8
    .line 299
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@ea
    .line 300
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    #@ec
    .line 301
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    #@ee
    .line 302
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    #@f0
    .line 304
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@f2
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@f5
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@f7
    .line 312
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@f9
    .line 313
    iput-byte v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    #@fb
    .line 314
    new-instance v0, Landroid/os/BatteryStats$HistoryStepDetails;

    #@fd
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@100
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@102
    .line 315
    new-instance v0, Landroid/os/BatteryStats$HistoryStepDetails;

    #@104
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@107
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@109
    .line 316
    new-instance v0, Landroid/os/BatteryStats$HistoryStepDetails;

    #@10b
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@10e
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@110
    .line 364
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@112
    .line 367
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@114
    .line 368
    const/4 v0, 0x5

    #@115
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@117
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@119
    .line 404
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    #@11b
    .line 405
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    #@11d
    .line 407
    const/4 v0, 0x5

    #@11e
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@120
    .line 406
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@122
    .line 411
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    #@124
    .line 413
    const/16 v0, 0x11

    #@126
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@128
    .line 412
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@12a
    .line 416
    const/4 v0, 0x6

    #@12b
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@12d
    .line 415
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@12f
    .line 418
    const/4 v0, 0x6

    #@130
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@132
    .line 417
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@134
    .line 439
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@136
    .line 445
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@138
    .line 451
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@13a
    .line 459
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    #@13c
    .line 460
    const/16 v0, 0x8

    #@13e
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@140
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@142
    .line 462
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    #@144
    .line 463
    const/16 v0, 0xd

    #@146
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@148
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@14a
    .line 465
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    #@14c
    .line 467
    const/4 v0, 0x5

    #@14d
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@14f
    .line 466
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@151
    .line 472
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    #@153
    .line 480
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    #@155
    .line 492
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    #@157
    .line 517
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    #@159
    .line 518
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@15b
    .line 519
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@15d
    .line 523
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    #@15f
    const/16 v1, 0xc8

    #@161
    invoke-direct {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@164
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@166
    .line 524
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    #@168
    const/16 v1, 0x190

    #@16a
    invoke-direct {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@16d
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@16f
    .line 529
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    #@171
    const/16 v1, 0xc8

    #@173
    invoke-direct {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@176
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@178
    .line 530
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    #@17a
    const/16 v1, 0x190

    #@17c
    invoke-direct {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@17f
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@181
    .line 534
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@183
    .line 535
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    #@185
    .line 536
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    #@187
    .line 538
    new-instance v0, Ljava/util/ArrayList;

    #@189
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@18c
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@18e
    .line 540
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    #@190
    .line 542
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    #@192
    .line 543
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    #@194
    .line 544
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    #@196
    .line 550
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@198
    .line 552
    new-instance v0, Landroid/net/NetworkStats$Entry;

    #@19a
    invoke-direct {v0}, Landroid/net/NetworkStats$Entry;-><init>()V

    #@19d
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpNetworkStatsEntry:Landroid/net/NetworkStats$Entry;

    #@19f
    .line 559
    new-instance v0, Ljava/util/HashMap;

    #@1a1
    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    #@1a4
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@1a6
    .line 565
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    #@1a8
    .line 566
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    #@1aa
    .line 567
    new-instance v0, Ljava/util/HashMap;

    #@1ac
    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    #@1af
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@1b1
    .line 2756
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    #@1b3
    .line 2757
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    #@1b5
    .line 3158
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    #@1b7
    .line 4392
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@1b9
    .line 4422
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@1bb
    .line 4464
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@1bd
    .line 8330
    sget-object v0, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    #@1bf
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@1c1
    .line 8331
    sget-object v0, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    #@1c3
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@1c5
    .line 8333
    new-instance v0, Lcom/android/internal/net/NetworkStatsFactory;

    #@1c7
    invoke-direct {v0}, Lcom/android/internal/net/NetworkStatsFactory;-><init>()V

    #@1ca
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

    #@1cc
    .line 9845
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    #@1ce
    .line 9846
    new-instance v0, Ljava/util/concurrent/locks/ReentrantLock;

    #@1d0
    invoke-direct {v0}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    #@1d3
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    #@1d5
    .line 593
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    #@1d8
    .line 594
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@1da
    .line 595
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Lcom/android/internal/os/AtomicFile;

    #@1dc
    .line 596
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    #@1de
    .line 597
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@1e0
    .line 598
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    #@1e2
    .line 599
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    #@1e4
    .line 600
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    #@1e7
    .line 592
    return-void
.end method

.method public constructor <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Landroid/os/Parcel;)V
    .locals 8
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;
    .param p2, "p"    # Landroid/os/Parcel;

    #@0
    .prologue
    const/4 v1, 0x1

    #@1
    const-wide/16 v6, 0x0

    #@3
    const/4 v4, 0x0

    #@4
    const/4 v3, -0x1

    #@5
    const/4 v2, 0x0

    #@6
    .line 7607
    invoke-direct {p0}, Landroid/os/BatteryStats;-><init>()V

    #@9
    .line 141
    new-instance v0, Lcom/android/internal/os/KernelWakelockReader;

    #@b
    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    #@e
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    #@10
    .line 142
    new-instance v0, Lcom/android/internal/os/KernelWakelockStats;

    #@12
    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    #@15
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    #@17
    .line 144
    new-instance v0, Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@19
    invoke-direct {v0}, Lcom/android/internal/os/KernelUidCpuTimeReader;-><init>()V

    #@1c
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@1e
    .line 232
    new-instance v0, Landroid/util/SparseIntArray;

    #@20
    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    #@23
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    #@25
    .line 237
    new-instance v0, Landroid/util/SparseArray;

    #@27
    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    #@2a
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@2c
    .line 243
    new-instance v0, Ljava/util/ArrayList;

    #@2e
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@31
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@33
    .line 244
    new-instance v0, Ljava/util/ArrayList;

    #@35
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@38
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    #@3a
    .line 245
    new-instance v0, Ljava/util/ArrayList;

    #@3c
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@3f
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    #@41
    .line 246
    new-instance v0, Ljava/util/ArrayList;

    #@43
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@46
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    #@48
    .line 247
    new-instance v0, Landroid/util/SparseArray;

    #@4a
    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    #@4d
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    #@4f
    .line 248
    new-instance v0, Ljava/util/ArrayList;

    #@51
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@54
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    #@56
    .line 249
    new-instance v0, Ljava/util/ArrayList;

    #@58
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@5b
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    #@5d
    .line 250
    new-instance v0, Ljava/util/ArrayList;

    #@5f
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@62
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    #@64
    .line 251
    new-instance v0, Ljava/util/ArrayList;

    #@66
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@69
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    #@6b
    .line 252
    new-instance v0, Landroid/util/SparseArray;

    #@6d
    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    #@70
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    #@72
    .line 253
    new-instance v0, Ljava/util/ArrayList;

    #@74
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@77
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    #@79
    .line 254
    new-instance v0, Ljava/util/ArrayList;

    #@7b
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@7e
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    #@80
    .line 255
    new-instance v0, Ljava/util/ArrayList;

    #@82
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@85
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    #@87
    .line 256
    new-instance v0, Ljava/util/ArrayList;

    #@89
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@8c
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    #@8e
    .line 257
    new-instance v0, Ljava/util/ArrayList;

    #@90
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@93
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    #@95
    .line 260
    new-instance v0, Ljava/util/ArrayList;

    #@97
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@9a
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    #@9c
    .line 264
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@9e
    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    #@a1
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@a3
    .line 268
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@a5
    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    #@a8
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@aa
    .line 276
    new-instance v0, Landroid/os/BatteryStats$HistoryEventTracker;

    #@ac
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    #@af
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@b1
    .line 279
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    #@b3
    .line 280
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@b5
    .line 285
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@b8
    move-result-object v0

    #@b9
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@bb
    .line 286
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@bd
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@c0
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@c2
    .line 287
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@c4
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@c7
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@c9
    .line 288
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@cb
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@ce
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    #@d0
    .line 289
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@d2
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@d5
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@d7
    .line 290
    new-instance v0, Ljava/util/HashMap;

    #@d9
    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    #@dc
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@de
    .line 294
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@e0
    .line 295
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@e2
    .line 296
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@e4
    .line 297
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    #@e6
    .line 298
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@e8
    .line 299
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@ea
    .line 300
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    #@ec
    .line 301
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    #@ee
    .line 302
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    #@f0
    .line 304
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@f2
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@f5
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@f7
    .line 312
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@f9
    .line 313
    iput-byte v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    #@fb
    .line 314
    new-instance v0, Landroid/os/BatteryStats$HistoryStepDetails;

    #@fd
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@100
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@102
    .line 315
    new-instance v0, Landroid/os/BatteryStats$HistoryStepDetails;

    #@104
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@107
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@109
    .line 316
    new-instance v0, Landroid/os/BatteryStats$HistoryStepDetails;

    #@10b
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@10e
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@110
    .line 364
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@112
    .line 367
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@114
    .line 368
    const/4 v0, 0x5

    #@115
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@117
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@119
    .line 404
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    #@11b
    .line 405
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    #@11d
    .line 407
    const/4 v0, 0x5

    #@11e
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@120
    .line 406
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@122
    .line 411
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    #@124
    .line 413
    const/16 v0, 0x11

    #@126
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@128
    .line 412
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@12a
    .line 416
    const/4 v0, 0x6

    #@12b
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@12d
    .line 415
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@12f
    .line 418
    const/4 v0, 0x6

    #@130
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@132
    .line 417
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@134
    .line 439
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@136
    .line 445
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@138
    .line 451
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@13a
    .line 459
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    #@13c
    .line 460
    const/16 v0, 0x8

    #@13e
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@140
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@142
    .line 462
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    #@144
    .line 463
    const/16 v0, 0xd

    #@146
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@148
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@14a
    .line 465
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    #@14c
    .line 467
    const/4 v0, 0x5

    #@14d
    new-array v0, v0, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@14f
    .line 466
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@151
    .line 472
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    #@153
    .line 480
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    #@155
    .line 492
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    #@157
    .line 517
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    #@159
    .line 518
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@15b
    .line 519
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@15d
    .line 523
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    #@15f
    const/16 v1, 0xc8

    #@161
    invoke-direct {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@164
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@166
    .line 524
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    #@168
    const/16 v1, 0x190

    #@16a
    invoke-direct {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@16d
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@16f
    .line 529
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    #@171
    const/16 v1, 0xc8

    #@173
    invoke-direct {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@176
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@178
    .line 530
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    #@17a
    const/16 v1, 0x190

    #@17c
    invoke-direct {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@17f
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@181
    .line 534
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@183
    .line 535
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    #@185
    .line 536
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    #@187
    .line 538
    new-instance v0, Ljava/util/ArrayList;

    #@189
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@18c
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@18e
    .line 540
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    #@190
    .line 542
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    #@192
    .line 543
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    #@194
    .line 544
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    #@196
    .line 550
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@198
    .line 552
    new-instance v0, Landroid/net/NetworkStats$Entry;

    #@19a
    invoke-direct {v0}, Landroid/net/NetworkStats$Entry;-><init>()V

    #@19d
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpNetworkStatsEntry:Landroid/net/NetworkStats$Entry;

    #@19f
    .line 559
    new-instance v0, Ljava/util/HashMap;

    #@1a1
    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    #@1a4
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@1a6
    .line 565
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    #@1a8
    .line 566
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    #@1aa
    .line 567
    new-instance v0, Ljava/util/HashMap;

    #@1ac
    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    #@1af
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@1b1
    .line 2756
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    #@1b3
    .line 2757
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    #@1b5
    .line 3158
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    #@1b7
    .line 4392
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@1b9
    .line 4422
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@1bb
    .line 4464
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@1bd
    .line 8330
    sget-object v0, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    #@1bf
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@1c1
    .line 8331
    sget-object v0, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    #@1c3
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@1c5
    .line 8333
    new-instance v0, Lcom/android/internal/net/NetworkStatsFactory;

    #@1c7
    invoke-direct {v0}, Lcom/android/internal/net/NetworkStatsFactory;-><init>()V

    #@1ca
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

    #@1cc
    .line 9845
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    #@1ce
    .line 9846
    new-instance v0, Ljava/util/concurrent/locks/ReentrantLock;

    #@1d0
    invoke-direct {v0}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    #@1d3
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    #@1d5
    .line 7608
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    #@1d8
    .line 7609
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@1da
    .line 7610
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Lcom/android/internal/os/AtomicFile;

    #@1dc
    .line 7611
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    #@1de
    .line 7612
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@1e0
    .line 7613
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    #@1e2
    .line 7614
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    #@1e5
    .line 7615
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->readFromParcel(Landroid/os/Parcel;)V

    #@1e8
    .line 7616
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    #@1ea
    .line 7607
    return-void
.end method

.method public constructor <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;)V
    .locals 14
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;
    .param p2, "systemDir"    # Ljava/io/File;
    .param p3, "handler"    # Landroid/os/Handler;
    .param p4, "externalSync"    # Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;
    .param p5, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    #@0
    .prologue
    .line 7511
    invoke-direct {p0}, Landroid/os/BatteryStats;-><init>()V

    #@3
    .line 141
    new-instance v2, Lcom/android/internal/os/KernelWakelockReader;

    #@5
    invoke-direct {v2}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    #@8
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    #@a
    .line 142
    new-instance v2, Lcom/android/internal/os/KernelWakelockStats;

    #@c
    invoke-direct {v2}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    #@f
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    #@11
    .line 144
    new-instance v2, Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@13
    invoke-direct {v2}, Lcom/android/internal/os/KernelUidCpuTimeReader;-><init>()V

    #@16
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@18
    .line 232
    new-instance v2, Landroid/util/SparseIntArray;

    #@1a
    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    #@1d
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    #@1f
    .line 237
    new-instance v2, Landroid/util/SparseArray;

    #@21
    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    #@24
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@26
    .line 243
    new-instance v2, Ljava/util/ArrayList;

    #@28
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@2b
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@2d
    .line 244
    new-instance v2, Ljava/util/ArrayList;

    #@2f
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@32
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    #@34
    .line 245
    new-instance v2, Ljava/util/ArrayList;

    #@36
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@39
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    #@3b
    .line 246
    new-instance v2, Ljava/util/ArrayList;

    #@3d
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@40
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    #@42
    .line 247
    new-instance v2, Landroid/util/SparseArray;

    #@44
    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    #@47
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    #@49
    .line 248
    new-instance v2, Ljava/util/ArrayList;

    #@4b
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@4e
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    #@50
    .line 249
    new-instance v2, Ljava/util/ArrayList;

    #@52
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@55
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    #@57
    .line 250
    new-instance v2, Ljava/util/ArrayList;

    #@59
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@5c
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    #@5e
    .line 251
    new-instance v2, Ljava/util/ArrayList;

    #@60
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@63
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    #@65
    .line 252
    new-instance v2, Landroid/util/SparseArray;

    #@67
    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    #@6a
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    #@6c
    .line 253
    new-instance v2, Ljava/util/ArrayList;

    #@6e
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@71
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    #@73
    .line 254
    new-instance v2, Ljava/util/ArrayList;

    #@75
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@78
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    #@7a
    .line 255
    new-instance v2, Ljava/util/ArrayList;

    #@7c
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@7f
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    #@81
    .line 256
    new-instance v2, Ljava/util/ArrayList;

    #@83
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@86
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    #@88
    .line 257
    new-instance v2, Ljava/util/ArrayList;

    #@8a
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@8d
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    #@8f
    .line 260
    new-instance v2, Ljava/util/ArrayList;

    #@91
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@94
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    #@96
    .line 264
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@98
    invoke-direct {v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    #@9b
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@9d
    .line 268
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@9f
    invoke-direct {v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    #@a2
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@a4
    .line 276
    new-instance v2, Landroid/os/BatteryStats$HistoryEventTracker;

    #@a6
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    #@a9
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@ab
    .line 279
    const/4 v2, 0x0

    #@ac
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    #@ae
    .line 280
    const/4 v2, 0x0

    #@af
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@b1
    .line 285
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@b4
    move-result-object v2

    #@b5
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@b7
    .line 286
    new-instance v2, Landroid/os/BatteryStats$HistoryItem;

    #@b9
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@bc
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@be
    .line 287
    new-instance v2, Landroid/os/BatteryStats$HistoryItem;

    #@c0
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@c3
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@c5
    .line 288
    new-instance v2, Landroid/os/BatteryStats$HistoryItem;

    #@c7
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@ca
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    #@cc
    .line 289
    new-instance v2, Landroid/os/BatteryStats$HistoryItem;

    #@ce
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@d1
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@d3
    .line 290
    new-instance v2, Ljava/util/HashMap;

    #@d5
    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V

    #@d8
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@da
    .line 294
    const/4 v2, 0x0

    #@db
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@dd
    .line 295
    const/4 v2, 0x0

    #@de
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@e0
    .line 296
    const/4 v2, -0x1

    #@e1
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@e3
    .line 297
    const/4 v2, 0x0

    #@e4
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    #@e6
    .line 298
    const/4 v2, -0x1

    #@e7
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@e9
    .line 299
    const/4 v2, -0x1

    #@ea
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@ec
    .line 300
    const-wide/16 v2, 0x0

    #@ee
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    #@f0
    .line 301
    const-wide/16 v2, 0x0

    #@f2
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    #@f4
    .line 302
    const-wide/16 v2, 0x0

    #@f6
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    #@f8
    .line 304
    new-instance v2, Landroid/os/BatteryStats$HistoryItem;

    #@fa
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@fd
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@ff
    .line 312
    const/4 v2, 0x0

    #@100
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@102
    .line 313
    const/4 v2, 0x0

    #@103
    iput-byte v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    #@105
    .line 314
    new-instance v2, Landroid/os/BatteryStats$HistoryStepDetails;

    #@107
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@10a
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@10c
    .line 315
    new-instance v2, Landroid/os/BatteryStats$HistoryStepDetails;

    #@10e
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@111
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@113
    .line 316
    new-instance v2, Landroid/os/BatteryStats$HistoryStepDetails;

    #@115
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    #@118
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@11a
    .line 364
    const/4 v2, 0x0

    #@11b
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@11d
    .line 367
    const/4 v2, -0x1

    #@11e
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@120
    .line 368
    const/4 v2, 0x5

    #@121
    new-array v2, v2, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@123
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@125
    .line 404
    const/4 v2, -0x1

    #@126
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    #@128
    .line 405
    const/4 v2, -0x1

    #@129
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    #@12b
    .line 407
    const/4 v2, 0x5

    #@12c
    new-array v2, v2, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@12e
    .line 406
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@130
    .line 411
    const/4 v2, -0x1

    #@131
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    #@133
    .line 413
    const/16 v2, 0x11

    #@135
    new-array v2, v2, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@137
    .line 412
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@139
    .line 416
    const/4 v2, 0x6

    #@13a
    new-array v2, v2, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@13c
    .line 415
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@13e
    .line 418
    const/4 v2, 0x6

    #@13f
    new-array v2, v2, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@141
    .line 417
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@143
    .line 439
    const/4 v2, 0x0

    #@144
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@146
    .line 445
    const/4 v2, 0x0

    #@147
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@149
    .line 451
    const/4 v2, 0x0

    #@14a
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@14c
    .line 459
    const/4 v2, -0x1

    #@14d
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    #@14f
    .line 460
    const/16 v2, 0x8

    #@151
    new-array v2, v2, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@153
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@155
    .line 462
    const/4 v2, -0x1

    #@156
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    #@158
    .line 463
    const/16 v2, 0xd

    #@15a
    new-array v2, v2, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@15c
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@15e
    .line 465
    const/4 v2, -0x1

    #@15f
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    #@161
    .line 467
    const/4 v2, 0x5

    #@162
    new-array v2, v2, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@164
    .line 466
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@166
    .line 472
    const/4 v2, 0x1

    #@167
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    #@169
    .line 480
    const/4 v2, 0x1

    #@16a
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    #@16c
    .line 492
    const/4 v2, 0x1

    #@16d
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    #@16f
    .line 517
    const/4 v2, 0x0

    #@170
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    #@172
    .line 518
    const/4 v2, 0x0

    #@173
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@175
    .line 519
    const/4 v2, 0x0

    #@176
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@178
    .line 523
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    #@17a
    const/16 v3, 0xc8

    #@17c
    invoke-direct {v2, v3}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@17f
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@181
    .line 524
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    #@183
    const/16 v3, 0x190

    #@185
    invoke-direct {v2, v3}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@188
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@18a
    .line 529
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    #@18c
    const/16 v3, 0xc8

    #@18e
    invoke-direct {v2, v3}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@191
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@193
    .line 530
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    #@195
    const/16 v3, 0x190

    #@197
    invoke-direct {v2, v3}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@19a
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@19c
    .line 534
    const-wide/16 v2, 0x0

    #@19e
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@1a0
    .line 535
    const-wide/16 v2, 0x0

    #@1a2
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    #@1a4
    .line 536
    const-wide/16 v2, 0x0

    #@1a6
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    #@1a8
    .line 538
    new-instance v2, Ljava/util/ArrayList;

    #@1aa
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    #@1ad
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@1af
    .line 540
    const-wide/16 v2, 0x0

    #@1b1
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    #@1b3
    .line 542
    const/4 v2, -0x1

    #@1b4
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    #@1b6
    .line 543
    const/4 v2, -0x1

    #@1b7
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    #@1b9
    .line 544
    const/4 v2, -0x1

    #@1ba
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    #@1bc
    .line 550
    const/4 v2, -0x1

    #@1bd
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@1bf
    .line 552
    new-instance v2, Landroid/net/NetworkStats$Entry;

    #@1c1
    invoke-direct {v2}, Landroid/net/NetworkStats$Entry;-><init>()V

    #@1c4
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpNetworkStatsEntry:Landroid/net/NetworkStats$Entry;

    #@1c6
    .line 559
    new-instance v2, Ljava/util/HashMap;

    #@1c8
    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V

    #@1cb
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@1cd
    .line 565
    const/4 v2, 0x0

    #@1ce
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    #@1d0
    .line 566
    const-wide/16 v2, 0x0

    #@1d2
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    #@1d4
    .line 567
    new-instance v2, Ljava/util/HashMap;

    #@1d6
    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V

    #@1d9
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@1db
    .line 2756
    const/4 v2, 0x0

    #@1dc
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    #@1de
    .line 2757
    const/4 v2, 0x0

    #@1df
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    #@1e1
    .line 3158
    const/4 v2, -0x1

    #@1e2
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    #@1e4
    .line 4392
    const/4 v2, 0x0

    #@1e5
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@1e7
    .line 4422
    const/4 v2, 0x0

    #@1e8
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@1ea
    .line 4464
    const/4 v2, 0x0

    #@1eb
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@1ed
    .line 8330
    sget-object v2, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    #@1ef
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@1f1
    .line 8331
    sget-object v2, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    #@1f3
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@1f5
    .line 8333
    new-instance v2, Lcom/android/internal/net/NetworkStatsFactory;

    #@1f7
    invoke-direct {v2}, Lcom/android/internal/net/NetworkStatsFactory;-><init>()V

    #@1fa
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

    #@1fc
    .line 9845
    const/4 v2, 0x0

    #@1fd
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    #@1ff
    .line 9846
    new-instance v2, Ljava/util/concurrent/locks/ReentrantLock;

    #@201
    invoke-direct {v2}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    #@204
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    #@206
    .line 7513
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    #@209
    .line 7515
    if-eqz p2, :cond_0

    #@20b
    .line 7516
    new-instance v2, Lcom/android/internal/util/JournaledFile;

    #@20d
    new-instance v3, Ljava/io/File;

    #@20f
    const-string/jumbo v4, "batterystats.bin"

    #@212
    move-object/from16 v0, p2

    #@214
    invoke-direct {v3, v0, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    #@217
    .line 7517
    new-instance v4, Ljava/io/File;

    #@219
    const-string/jumbo v5, "batterystats.bin.tmp"

    #@21c
    move-object/from16 v0, p2

    #@21e
    invoke-direct {v4, v0, v5}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    #@221
    .line 7516
    invoke-direct {v2, v3, v4}, Lcom/android/internal/util/JournaledFile;-><init>(Ljava/io/File;Ljava/io/File;)V

    #@224
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@226
    .line 7521
    :goto_0
    new-instance v2, Lcom/android/internal/os/AtomicFile;

    #@228
    new-instance v3, Ljava/io/File;

    #@22a
    const-string/jumbo v4, "batterystats-checkin.bin"

    #@22d
    move-object/from16 v0, p2

    #@22f
    invoke-direct {v3, v0, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    #@232
    invoke-direct {v2, v3}, Lcom/android/internal/os/AtomicFile;-><init>(Ljava/io/File;)V

    #@235
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Lcom/android/internal/os/AtomicFile;

    #@237
    .line 7522
    new-instance v2, Lcom/android/internal/os/AtomicFile;

    #@239
    new-instance v3, Ljava/io/File;

    #@23b
    const-string/jumbo v4, "batterystats-daily.xml"

    #@23e
    move-object/from16 v0, p2

    #@240
    invoke-direct {v3, v0, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    #@243
    invoke-direct {v2, v3}, Lcom/android/internal/os/AtomicFile;-><init>(Ljava/io/File;)V

    #@246
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    #@248
    .line 7523
    move-object/from16 v0, p4

    #@24a
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    #@24c
    .line 7524
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@24e
    invoke-virtual/range {p3 .. p3}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    #@251
    move-result-object v3

    #@252
    invoke-direct {v2, p0, v3}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Looper;)V

    #@255
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@257
    .line 7525
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@259
    add-int/lit8 v2, v2, 0x1

    #@25b
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@25d
    .line 7526
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@25f
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@261
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@263
    const/4 v4, 0x0

    #@264
    const/4 v5, -0x1

    #@265
    const/4 v6, 0x0

    #@266
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@269
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@26b
    .line 7527
    const/4 v8, 0x0

    #@26c
    .local v8, "i":I
    :goto_1
    const/4 v2, 0x5

    #@26d
    if-ge v8, v2, :cond_1

    #@26f
    .line 7528
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@271
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@273
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@275
    rsub-int/lit8 v5, v8, -0x64

    #@277
    .line 7529
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@279
    .line 7528
    const/4 v4, 0x0

    #@27a
    const/4 v6, 0x0

    #@27b
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@27e
    aput-object v2, v9, v8

    #@280
    .line 7527
    add-int/lit8 v8, v8, 0x1

    #@282
    goto :goto_1

    #@283
    .line 7519
    .end local v8    # "i":I
    :cond_0
    const/4 v2, 0x0

    #@284
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@286
    goto :goto_0

    #@287
    .line 7531
    .restart local v8    # "i":I
    :cond_1
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@289
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@28b
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@28d
    const/4 v4, 0x0

    #@28e
    const/16 v5, -0xa

    #@290
    const/4 v6, 0x0

    #@291
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@294
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@296
    .line 7532
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@298
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@29a
    .line 7533
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@29c
    .line 7532
    const/4 v4, 0x0

    #@29d
    const/4 v5, -0x2

    #@29e
    const/4 v6, 0x0

    #@29f
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@2a2
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2a4
    .line 7534
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2a6
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2a8
    .line 7535
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2aa
    .line 7534
    const/4 v4, 0x0

    #@2ab
    const/16 v5, -0xb

    #@2ad
    const/4 v6, 0x0

    #@2ae
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@2b1
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2b3
    .line 7536
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2b5
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2b7
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2b9
    const/4 v4, 0x0

    #@2ba
    const/16 v5, -0xe

    #@2bc
    const/4 v6, 0x0

    #@2bd
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@2c0
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2c2
    .line 7537
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2c4
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2c6
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2c8
    const/4 v4, 0x0

    #@2c9
    const/16 v5, -0xf

    #@2cb
    const/4 v6, 0x0

    #@2cc
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@2cf
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2d1
    .line 7538
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2d3
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2d5
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2d7
    const/4 v4, 0x0

    #@2d8
    const/16 v5, -0xc

    #@2da
    const/4 v6, 0x0

    #@2db
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@2de
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2e0
    .line 7539
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2e2
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2e4
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2e6
    const/4 v4, 0x0

    #@2e7
    const/4 v5, -0x3

    #@2e8
    const/4 v6, 0x0

    #@2e9
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@2ec
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2ee
    .line 7540
    const/4 v8, 0x0

    #@2ef
    :goto_2
    const/4 v2, 0x5

    #@2f0
    if-ge v8, v2, :cond_2

    #@2f2
    .line 7541
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2f4
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2f6
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2f8
    rsub-int v5, v8, -0xc8

    #@2fa
    .line 7542
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2fc
    .line 7541
    const/4 v4, 0x0

    #@2fd
    const/4 v6, 0x0

    #@2fe
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@301
    aput-object v2, v9, v8

    #@303
    .line 7540
    add-int/lit8 v8, v8, 0x1

    #@305
    goto :goto_2

    #@306
    .line 7544
    :cond_2
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@308
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@30a
    .line 7545
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@30c
    .line 7544
    const/4 v4, 0x0

    #@30d
    const/16 v5, -0xc7

    #@30f
    const/4 v6, 0x0

    #@310
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@313
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@315
    .line 7546
    const/4 v8, 0x0

    #@316
    :goto_3
    const/16 v2, 0x11

    #@318
    if-ge v8, v2, :cond_3

    #@31a
    .line 7547
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@31c
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@31e
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@320
    rsub-int v5, v8, -0x12c

    #@322
    .line 7548
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@324
    .line 7547
    const/4 v4, 0x0

    #@325
    const/4 v6, 0x0

    #@326
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@329
    aput-object v2, v9, v8

    #@32b
    .line 7546
    add-int/lit8 v8, v8, 0x1

    #@32d
    goto :goto_3

    #@32e
    .line 7550
    :cond_3
    const/4 v8, 0x0

    #@32f
    :goto_4
    const/4 v2, 0x6

    #@330
    if-ge v8, v2, :cond_4

    #@332
    .line 7551
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@334
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@336
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@338
    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@33b
    aput-object v3, v2, v8

    #@33d
    .line 7552
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@33f
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@341
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@343
    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@346
    aput-object v3, v2, v8

    #@348
    .line 7550
    add-int/lit8 v8, v8, 0x1

    #@34a
    goto :goto_4

    #@34b
    .line 7554
    :cond_4
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@34d
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@34f
    const/4 v4, 0x1

    #@350
    invoke-direct {v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    #@353
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@355
    .line 7555
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@357
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@359
    .line 7556
    const/4 v4, 0x1

    #@35a
    .line 7555
    invoke-direct {v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    #@35d
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@35f
    .line 7557
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@361
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@363
    .line 7558
    const/4 v4, 0x5

    #@364
    .line 7557
    invoke-direct {v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    #@367
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@369
    .line 7560
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@36b
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@36d
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@36f
    const/4 v4, 0x0

    #@370
    const/16 v5, -0x190

    #@372
    const/4 v6, 0x0

    #@373
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@376
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@378
    .line 7561
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@37a
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@37c
    .line 7562
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@37e
    .line 7561
    const/4 v4, 0x0

    #@37f
    const/16 v5, -0x191

    #@381
    const/4 v6, 0x0

    #@382
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@385
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@387
    .line 7563
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@389
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@38b
    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@38e
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@390
    .line 7564
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@392
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@394
    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@397
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@399
    .line 7565
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@39b
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@39d
    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@3a0
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@3a2
    .line 7566
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3a4
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3a6
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3a8
    const/4 v4, 0x0

    #@3a9
    const/4 v5, -0x4

    #@3aa
    const/4 v6, 0x0

    #@3ab
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@3ae
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3b0
    .line 7567
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3b2
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3b4
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3b6
    const/4 v4, 0x0

    #@3b7
    const/4 v5, -0x5

    #@3b8
    const/4 v6, 0x0

    #@3b9
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@3bc
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3be
    .line 7568
    const/4 v8, 0x0

    #@3bf
    :goto_5
    const/16 v2, 0x8

    #@3c1
    if-ge v8, v2, :cond_5

    #@3c3
    .line 7569
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3c5
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3c7
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3c9
    rsub-int v5, v8, -0x258

    #@3cb
    .line 7570
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3cd
    .line 7569
    const/4 v4, 0x0

    #@3ce
    const/4 v6, 0x0

    #@3cf
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@3d2
    aput-object v2, v9, v8

    #@3d4
    .line 7568
    add-int/lit8 v8, v8, 0x1

    #@3d6
    goto :goto_5

    #@3d7
    .line 7572
    :cond_5
    const/4 v8, 0x0

    #@3d8
    :goto_6
    const/16 v2, 0xd

    #@3da
    if-ge v8, v2, :cond_6

    #@3dc
    .line 7573
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3de
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3e0
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3e2
    rsub-int v5, v8, -0x2bc

    #@3e4
    .line 7574
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3e6
    .line 7573
    const/4 v4, 0x0

    #@3e7
    const/4 v6, 0x0

    #@3e8
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@3eb
    aput-object v2, v9, v8

    #@3ed
    .line 7572
    add-int/lit8 v8, v8, 0x1

    #@3ef
    goto :goto_6

    #@3f0
    .line 7576
    :cond_6
    const/4 v8, 0x0

    #@3f1
    :goto_7
    const/4 v2, 0x5

    #@3f2
    if-ge v8, v2, :cond_7

    #@3f4
    .line 7577
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3f6
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3f8
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3fa
    rsub-int v5, v8, -0x320

    #@3fc
    .line 7578
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3fe
    .line 7577
    const/4 v4, 0x0

    #@3ff
    const/4 v6, 0x0

    #@400
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@403
    aput-object v2, v9, v8

    #@405
    .line 7576
    add-int/lit8 v8, v8, 0x1

    #@407
    goto :goto_7

    #@408
    .line 7580
    :cond_7
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@40a
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@40c
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@40e
    const/4 v4, 0x0

    #@40f
    const/4 v5, -0x7

    #@410
    const/4 v6, 0x0

    #@411
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@414
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@416
    .line 7581
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@418
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@41a
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@41c
    const/4 v4, 0x0

    #@41d
    const/4 v5, -0x8

    #@41e
    const/4 v6, 0x0

    #@41f
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@422
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@424
    .line 7582
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@426
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@428
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@42a
    const/4 v4, 0x0

    #@42b
    const/16 v5, -0x9

    #@42d
    const/4 v6, 0x0

    #@42e
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@431
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@433
    .line 7583
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@435
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@437
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@439
    const/4 v4, 0x0

    #@43a
    const/16 v5, -0xd

    #@43c
    const/4 v6, 0x0

    #@43d
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@440
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@442
    .line 7584
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@444
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@446
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@448
    const/4 v4, 0x0

    #@449
    const/16 v5, -0xe

    #@44b
    const/4 v6, 0x0

    #@44c
    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@44f
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@451
    .line 7585
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@453
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@455
    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@458
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@45a
    .line 7586
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@45c
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@45e
    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@461
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@463
    .line 7587
    const/4 v2, 0x0

    #@464
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@466
    const/4 v2, 0x0

    #@467
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@469
    .line 7588
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@46b
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@46e
    move-result-wide v2

    #@46f
    const-wide/16 v4, 0x3e8

    #@471
    mul-long v12, v2, v4

    #@473
    .line 7589
    .local v12, "uptime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@475
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@478
    move-result-wide v2

    #@479
    const-wide/16 v4, 0x3e8

    #@47b
    mul-long v10, v2, v4

    #@47d
    .line 7590
    .local v10, "realtime":J
    invoke-virtual {p0, v12, v13, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->initTimes(JJ)V

    #@480
    .line 7591
    sget-object v2, Landroid/os/Build;->ID:Ljava/lang/String;

    #@482
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    #@484
    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    #@486
    .line 7592
    const/4 v2, 0x0

    #@487
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStartLevel:I

    #@489
    .line 7593
    const/4 v2, 0x0

    #@48a
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@48c
    .line 7594
    const/4 v2, -0x1

    #@48d
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@48f
    .line 7595
    const/4 v2, 0x0

    #@490
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@492
    .line 7596
    const/4 v2, 0x0

    #@493
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@495
    .line 7597
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->initDischarge()V

    #@498
    .line 7598
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    #@49b
    .line 7599
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateDailyDeadlineLocked()V

    #@49e
    .line 7600
    move-object/from16 v0, p5

    #@4a0
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    #@4a2
    .line 7512
    return-void
.end method

.method public constructor <init>(Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;)V
    .locals 6
    .param p1, "systemDir"    # Ljava/io/File;
    .param p2, "handler"    # Landroid/os/Handler;
    .param p3, "externalSync"    # Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    #@0
    .prologue
    .line 7503
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    #@2
    invoke-direct {v1}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    #@5
    const/4 v5, 0x0

    #@6
    move-object v0, p0

    #@7
    move-object v2, p1

    #@8
    move-object v3, p2

    #@9
    move-object v4, p3

    #@a
    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;)V

    #@d
    .line 7502
    return-void
.end method

.method public constructor <init>(Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;)V
    .locals 6
    .param p1, "systemDir"    # Ljava/io/File;
    .param p2, "handler"    # Landroid/os/Handler;
    .param p3, "externalSync"    # Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;
    .param p4, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    #@0
    .prologue
    .line 7508
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    #@2
    invoke-direct {v1}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    #@5
    move-object v0, p0

    #@6
    move-object v2, p1

    #@7
    move-object v3, p2

    #@8
    move-object v4, p3

    #@9
    move-object v5, p4

    #@a
    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;)V

    #@d
    .line 7507
    return-void
.end method

.method private addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V
    .locals 5
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "cmd"    # B
    .param p6, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    const/4 v4, 0x0

    #@1
    .line 2737
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    #@3
    if-eqz v0, :cond_0

    #@5
    .line 2738
    new-instance v0, Ljava/lang/IllegalStateException;

    #@7
    const-string/jumbo v1, "Can\'t do this while iterating history!"

    #@a
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    #@d
    throw v0

    #@e
    .line 2740
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@10
    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    #@13
    move-result v0

    #@14
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@16
    .line 2741
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@18
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@1a
    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    #@1d
    .line 2742
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@1f
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@21
    add-long/2addr v2, p1

    #@22
    invoke-virtual {v0, v2, v3, p5, p6}, Landroid/os/BatteryStats$HistoryItem;->setTo(JBLandroid/os/BatteryStats$HistoryItem;)V

    #@25
    .line 2743
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@27
    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@29
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@2b
    and-int/2addr v1, v2

    #@2c
    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@2e
    .line 2744
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@30
    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@32
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@34
    and-int/2addr v1, v2

    #@35
    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@37
    .line 2745
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@39
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@3b
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@3d
    invoke-virtual {p0, v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;Landroid/os/BatteryStats$HistoryItem;)V

    #@40
    .line 2746
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    #@42
    .line 2747
    iput-object v4, p6, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@44
    .line 2748
    iput-object v4, p6, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@46
    .line 2749
    const/4 v0, 0x0

    #@47
    iput v0, p6, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@49
    .line 2750
    iput-object v4, p6, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@4b
    .line 2736
    return-void
.end method

.method private addPackageChange(Landroid/os/BatteryStats$PackageChange;)V
    .locals 1
    .param p1, "pc"    # Landroid/os/BatteryStats$PackageChange;

    #@0
    .prologue
    .line 3709
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@2
    if-nez v0, :cond_0

    #@4
    .line 3710
    new-instance v0, Ljava/util/ArrayList;

    #@6
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    #@9
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@b
    .line 3712
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@d
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@10
    .line 3708
    return-void
.end method

.method private buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I
    .locals 3
    .param p1, "h"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    .line 2363
    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@2
    shl-int/lit8 v0, v0, 0x19

    #@4
    const/high16 v1, -0x2000000

    #@6
    and-int/2addr v0, v1

    #@7
    .line 2364
    iget-short v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    #@9
    shl-int/lit8 v1, v1, 0xf

    #@b
    const v2, 0x1ff8000

    #@e
    and-int/2addr v1, v2

    #@f
    .line 2363
    or-int/2addr v0, v1

    #@10
    .line 2365
    iget-char v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    #@12
    shl-int/lit8 v1, v1, 0x1

    #@14
    and-int/lit16 v1, v1, 0x7ffe

    #@16
    .line 2363
    or-int/2addr v0, v1

    #@17
    return v0
.end method

.method private buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I
    .locals 4
    .param p1, "h"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    .line 2375
    const/4 v0, 0x0

    #@1
    .line 2376
    .local v0, "plugType":I
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@3
    and-int/lit8 v1, v1, 0x1

    #@5
    if-eqz v1, :cond_1

    #@7
    .line 2377
    const/4 v0, 0x1

    #@8
    .line 2383
    :cond_0
    :goto_0
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@a
    and-int/lit8 v1, v1, 0x7

    #@c
    shl-int/lit8 v1, v1, 0x1d

    #@e
    .line 2384
    iget-byte v2, p1, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    #@10
    and-int/lit8 v2, v2, 0x7

    #@12
    shl-int/lit8 v2, v2, 0x1a

    #@14
    .line 2383
    or-int/2addr v1, v2

    #@15
    .line 2385
    and-int/lit8 v2, v0, 0x3

    #@17
    shl-int/lit8 v2, v2, 0x18

    #@19
    .line 2383
    or-int/2addr v1, v2

    #@1a
    .line 2386
    iget v2, p1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1c
    const v3, 0xffffff

    #@1f
    and-int/2addr v2, v3

    #@20
    .line 2383
    or-int/2addr v1, v2

    #@21
    return v1

    #@22
    .line 2378
    :cond_1
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@24
    and-int/lit8 v1, v1, 0x2

    #@26
    if-eqz v1, :cond_2

    #@28
    .line 2379
    const/4 v0, 0x2

    #@29
    goto :goto_0

    #@2a
    .line 2380
    :cond_2
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@2c
    and-int/lit8 v1, v1, 0x4

    #@2e
    if-eqz v1, :cond_0

    #@30
    .line 2381
    const/4 v0, 0x3

    #@31
    goto :goto_0
.end method

.method private computeHistoryStepDetails(Landroid/os/BatteryStats$HistoryStepDetails;Landroid/os/BatteryStats$HistoryStepDetails;)V
    .locals 12
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryStepDetails;
    .param p2, "last"    # Landroid/os/BatteryStats$HistoryStepDetails;

    #@0
    .prologue
    .line 2391
    if-eqz p2, :cond_0

    #@2
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@4
    .line 2395
    .local v2, "tmp":Landroid/os/BatteryStats$HistoryStepDetails;
    :goto_0
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->requestImmediateCpuUpdate()V

    #@7
    .line 2397
    if-nez p2, :cond_2

    #@9
    .line 2400
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@b
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    #@e
    move-result v0

    #@f
    .line 2401
    .local v0, "NU":I
    const/4 v1, 0x0

    #@10
    .local v1, "i":I
    :goto_1
    if-ge v1, v0, :cond_1

    #@12
    .line 2402
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@14
    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@17
    move-result-object v6

    #@18
    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@1a
    .line 2403
    .local v6, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    #@1c
    iput-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    #@1e
    .line 2404
    iget-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    #@20
    iput-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    #@22
    .line 2401
    add-int/lit8 v1, v1, 0x1

    #@24
    goto :goto_1

    #@25
    .line 2391
    .end local v0    # "NU":I
    .end local v1    # "i":I
    .end local v2    # "tmp":Landroid/os/BatteryStats$HistoryStepDetails;
    .end local v6    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    move-object v2, p1

    #@26
    .restart local v2    # "tmp":Landroid/os/BatteryStats$HistoryStepDetails;
    goto :goto_0

    #@27
    .line 2406
    .restart local v0    # "NU":I
    .restart local v1    # "i":I
    :cond_1
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    #@29
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    #@2b
    .line 2407
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    #@2d
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    #@2f
    .line 2408
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    #@31
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    #@33
    .line 2409
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    #@35
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    #@37
    .line 2410
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    #@39
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    #@3b
    .line 2411
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    #@3d
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    #@3f
    .line 2412
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    #@41
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    #@43
    .line 2413
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    #@45
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    #@47
    .line 2414
    invoke-virtual {v2}, Landroid/os/BatteryStats$HistoryStepDetails;->clear()V

    #@4a
    .line 2415
    return-void

    #@4b
    .line 2427
    .end local v0    # "NU":I
    .end local v1    # "i":I
    :cond_2
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    #@4d
    iget-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    #@4f
    sub-long/2addr v8, v10

    #@50
    long-to-int v7, v8

    #@51
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->userTime:I

    #@53
    .line 2428
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    #@55
    iget-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    #@57
    sub-long/2addr v8, v10

    #@58
    long-to-int v7, v8

    #@59
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->systemTime:I

    #@5b
    .line 2429
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    #@5d
    iget-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    #@5f
    sub-long/2addr v8, v10

    #@60
    long-to-int v7, v8

    #@61
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statUserTime:I

    #@63
    .line 2430
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    #@65
    iget-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    #@67
    sub-long/2addr v8, v10

    #@68
    long-to-int v7, v8

    #@69
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statSystemTime:I

    #@6b
    .line 2431
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    #@6d
    iget-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    #@6f
    sub-long/2addr v8, v10

    #@70
    long-to-int v7, v8

    #@71
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIOWaitTime:I

    #@73
    .line 2432
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    #@75
    iget-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    #@77
    sub-long/2addr v8, v10

    #@78
    long-to-int v7, v8

    #@79
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIrqTime:I

    #@7b
    .line 2433
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    #@7d
    iget-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    #@7f
    sub-long/2addr v8, v10

    #@80
    long-to-int v7, v8

    #@81
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statSoftIrqTime:I

    #@83
    .line 2434
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    #@85
    iget-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    #@87
    sub-long/2addr v8, v10

    #@88
    long-to-int v7, v8

    #@89
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIdlTime:I

    #@8b
    .line 2435
    const/4 v7, -0x1

    #@8c
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    #@8e
    const/4 v7, -0x1

    #@8f
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    #@91
    const/4 v7, -0x1

    #@92
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    #@94
    .line 2436
    const/4 v7, 0x0

    #@95
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    #@97
    const/4 v7, 0x0

    #@98
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    #@9a
    const/4 v7, 0x0

    #@9b
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    #@9d
    .line 2437
    const/4 v7, 0x0

    #@9e
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    #@a0
    const/4 v7, 0x0

    #@a1
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    #@a3
    const/4 v7, 0x0

    #@a4
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    #@a6
    .line 2438
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@a8
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    #@ab
    move-result v0

    #@ac
    .line 2439
    .restart local v0    # "NU":I
    const/4 v1, 0x0

    #@ad
    .restart local v1    # "i":I
    :goto_2
    if-ge v1, v0, :cond_6

    #@af
    .line 2440
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@b1
    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@b4
    move-result-object v6

    #@b5
    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@b7
    .line 2441
    .restart local v6    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    #@b9
    iget-wide v10, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    #@bb
    sub-long/2addr v8, v10

    #@bc
    long-to-int v5, v8

    #@bd
    .line 2442
    .local v5, "totalUTime":I
    iget-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    #@bf
    iget-wide v10, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    #@c1
    sub-long/2addr v8, v10

    #@c2
    long-to-int v3, v8

    #@c3
    .line 2443
    .local v3, "totalSTime":I
    add-int v4, v5, v3

    #@c5
    .line 2444
    .local v4, "totalTime":I
    iget-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    #@c7
    iput-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    #@c9
    .line 2445
    iget-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    #@cb
    iput-wide v8, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    #@cd
    .line 2446
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    #@cf
    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    #@d1
    add-int/2addr v7, v8

    #@d2
    if-gt v4, v7, :cond_3

    #@d4
    .line 2439
    :goto_3
    add-int/lit8 v1, v1, 0x1

    #@d6
    goto :goto_2

    #@d7
    .line 2449
    :cond_3
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    #@d9
    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    #@db
    add-int/2addr v7, v8

    #@dc
    if-gt v4, v7, :cond_4

    #@de
    .line 2450
    iget v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    #@e0
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    #@e2
    .line 2451
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    #@e4
    .line 2452
    iput v3, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    #@e6
    goto :goto_3

    #@e7
    .line 2454
    :cond_4
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    #@e9
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    #@eb
    .line 2455
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    #@ed
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    #@ef
    .line 2456
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    #@f1
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    #@f3
    .line 2457
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    #@f5
    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    #@f7
    add-int/2addr v7, v8

    #@f8
    if-gt v4, v7, :cond_5

    #@fa
    .line 2458
    iget v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    #@fc
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    #@fe
    .line 2459
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    #@100
    .line 2460
    iput v3, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    #@102
    goto :goto_3

    #@103
    .line 2462
    :cond_5
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    #@105
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    #@107
    .line 2463
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    #@109
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    #@10b
    .line 2464
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    #@10d
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    #@10f
    .line 2465
    iget v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    #@111
    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    #@113
    .line 2466
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    #@115
    .line 2467
    iput v3, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    #@117
    goto :goto_3

    #@118
    .line 2471
    .end local v3    # "totalSTime":I
    .end local v4    # "totalTime":I
    .end local v5    # "totalUTime":I
    .end local v6    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_6
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    #@11a
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    #@11c
    .line 2472
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    #@11e
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    #@120
    .line 2473
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    #@122
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    #@124
    .line 2474
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    #@126
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    #@128
    .line 2475
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    #@12a
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    #@12c
    .line 2476
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    #@12e
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    #@130
    .line 2477
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    #@132
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    #@134
    .line 2478
    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    #@136
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    #@138
    .line 2390
    return-void
.end method

.method private computeTimePerLevel([JI)J
    .locals 8
    .param p1, "steps"    # [J
    .param p2, "numSteps"    # I

    #@0
    .prologue
    .line 9558
    if-gtz p2, :cond_0

    #@2
    .line 9559
    const-wide/16 v4, -0x1

    #@4
    return-wide v4

    #@5
    .line 9561
    :cond_0
    const-wide/16 v2, 0x0

    #@7
    .line 9562
    .local v2, "total":J
    const/4 v0, 0x0

    #@8
    .local v0, "i":I
    :goto_0
    if-ge v0, p2, :cond_1

    #@a
    .line 9563
    aget-wide v4, p1, v0

    #@c
    const-wide v6, 0xffffffffffL

    #@11
    and-long/2addr v4, v6

    #@12
    add-long/2addr v2, v4

    #@13
    .line 9562
    add-int/lit8 v0, v0, 0x1

    #@15
    goto :goto_0

    #@16
    .line 9565
    :cond_1
    int-to-long v4, p2

    #@17
    div-long v4, v2, v4

    #@19
    return-wide v4
.end method

.method private static excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 4
    .param p0, "array"    # [Ljava/lang/String;
    .param p1, "str"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 4561
    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    #@4
    move-result v0

    #@5
    .line 4562
    .local v0, "index":I
    if-ltz v0, :cond_2

    #@7
    .line 4563
    array-length v2, p0

    #@8
    add-int/lit8 v2, v2, -0x1

    #@a
    new-array v1, v2, [Ljava/lang/String;

    #@c
    .line 4564
    .local v1, "newArray":[Ljava/lang/String;
    if-lez v0, :cond_0

    #@e
    .line 4565
    invoke-static {p0, v3, v1, v3, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    #@11
    .line 4567
    :cond_0
    array-length v2, p0

    #@12
    add-int/lit8 v2, v2, -0x1

    #@14
    if-ge v0, v2, :cond_1

    #@16
    .line 4568
    add-int/lit8 v2, v0, 0x1

    #@18
    array-length v3, p0

    #@19
    sub-int/2addr v3, v0

    #@1a
    add-int/lit8 v3, v3, -0x1

    #@1c
    invoke-static {p0, v2, v1, v0, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    #@1f
    .line 4570
    :cond_1
    return-object v1

    #@20
    .line 4572
    .end local v1    # "newArray":[Ljava/lang/String;
    :cond_2
    return-object p0
.end method

.method private fixPhoneServiceState(II)I
    .locals 2
    .param p1, "state"    # I
    .param p2, "signalBin"    # I

    #@0
    .prologue
    const/4 v1, 0x1

    #@1
    .line 3754
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    #@3
    if-ne v0, v1, :cond_0

    #@5
    .line 3757
    if-ne p1, v1, :cond_0

    #@7
    .line 3758
    if-lez p2, :cond_0

    #@9
    .line 3759
    const/4 p1, 0x0

    #@a
    .line 3763
    :cond_0
    return p1
.end method

.method private getNetworkStatsDeltaLocked([Ljava/lang/String;[Landroid/net/NetworkStats;)Landroid/net/NetworkStats;
    .locals 8
    .param p1, "ifaces"    # [Ljava/lang/String;
    .param p2, "networkStatsBuffer"    # [Landroid/net/NetworkStats;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    #@0
    .prologue
    const/4 v7, 0x1

    #@1
    const/4 v6, 0x0

    #@2
    const/4 v5, 0x2

    #@3
    const/4 v4, 0x0

    #@4
    .line 8349
    const-string/jumbo v1, "net.qtaguid_enabled"

    #@7
    invoke-static {v1, v4}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    #@a
    move-result v1

    #@b
    if-nez v1, :cond_0

    #@d
    .line 8351
    return-object v6

    #@e
    .line 8354
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

    #@10
    .line 8355
    aget-object v2, p2, v7

    #@12
    .line 8354
    const/4 v3, -0x1

    #@13
    invoke-virtual {v1, v3, p1, v4, v2}, Lcom/android/internal/net/NetworkStatsFactory;->readNetworkStatsDetail(I[Ljava/lang/String;ILandroid/net/NetworkStats;)Landroid/net/NetworkStats;

    #@16
    move-result-object v0

    #@17
    .line 8357
    .local v0, "stats":Landroid/net/NetworkStats;
    aget-object v1, p2, v4

    #@19
    .line 8358
    aget-object v2, p2, v5

    #@1b
    .line 8356
    invoke-static {v0, v1, v6, v6, v2}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;Landroid/net/NetworkStats;Landroid/net/NetworkStats$NonMonotonicObserver;Ljava/lang/Object;Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    #@1e
    move-result-object v1

    #@1f
    aput-object v1, p2, v5

    #@21
    .line 8359
    aget-object v1, p2, v4

    #@23
    aput-object v1, p2, v7

    #@25
    .line 8360
    aput-object v0, p2, v4

    #@27
    .line 8361
    aget-object v1, p2, v5

    #@29
    return-object v1
.end method

.method private static includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 3
    .param p0, "array"    # [Ljava/lang/String;
    .param p1, "str"    # Ljava/lang/String;

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 4551
    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    #@4
    move-result v1

    #@5
    if-ltz v1, :cond_0

    #@7
    .line 4552
    return-object p0

    #@8
    .line 4554
    :cond_0
    array-length v1, p0

    #@9
    add-int/lit8 v1, v1, 0x1

    #@b
    new-array v0, v1, [Ljava/lang/String;

    #@d
    .line 4555
    .local v0, "newArray":[Ljava/lang/String;
    array-length v1, p0

    #@e
    invoke-static {p0, v2, v0, v2, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    #@11
    .line 4556
    array-length v1, p0

    #@12
    aput-object p1, v0, v1

    #@14
    .line 4557
    return-object v0
.end method

.method private init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V
    .locals 9
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@0
    .prologue
    const/4 v8, 0x3

    #@1
    const/4 v7, 0x2

    #@2
    const/4 v6, 0x1

    #@3
    const/4 v5, 0x0

    #@4
    const/16 v4, 0x32

    #@6
    .line 604
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    .line 605
    new-array v0, v8, [Landroid/net/NetworkStats;

    #@a
    .line 606
    new-instance v1, Landroid/net/NetworkStats;

    #@c
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@11
    move-result-wide v2

    #@12
    invoke-direct {v1, v2, v3, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    #@15
    aput-object v1, v0, v5

    #@17
    .line 607
    new-instance v1, Landroid/net/NetworkStats;

    #@19
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@1b
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@1e
    move-result-wide v2

    #@1f
    invoke-direct {v1, v2, v3, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    #@22
    aput-object v1, v0, v6

    #@24
    .line 608
    new-instance v1, Landroid/net/NetworkStats;

    #@26
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@28
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@2b
    move-result-wide v2

    #@2c
    invoke-direct {v1, v2, v3, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    #@2f
    aput-object v1, v0, v7

    #@31
    .line 605
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileNetworkStats:[Landroid/net/NetworkStats;

    #@33
    .line 610
    new-array v0, v8, [Landroid/net/NetworkStats;

    #@35
    .line 611
    new-instance v1, Landroid/net/NetworkStats;

    #@37
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@39
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@3c
    move-result-wide v2

    #@3d
    invoke-direct {v1, v2, v3, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    #@40
    aput-object v1, v0, v5

    #@42
    .line 612
    new-instance v1, Landroid/net/NetworkStats;

    #@44
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@46
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@49
    move-result-wide v2

    #@4a
    invoke-direct {v1, v2, v3, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    #@4d
    aput-object v1, v0, v6

    #@4f
    .line 613
    new-instance v1, Landroid/net/NetworkStats;

    #@51
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@53
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@56
    move-result-wide v2

    #@57
    invoke-direct {v1, v2, v3, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    #@5a
    aput-object v1, v0, v7

    #@5c
    .line 610
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkStats:[Landroid/net/NetworkStats;

    #@5e
    .line 603
    return-void
.end method

.method private initActiveHistoryEventsLocked(JJ)V
    .locals 13
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    #@0
    .prologue
    .line 8281
    const/4 v6, 0x0

    #@1
    .local v6, "i":I
    :goto_0
    const/16 v1, 0x13

    #@3
    if-ge v6, v1, :cond_3

    #@5
    .line 8282
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    #@7
    if-nez v1, :cond_1

    #@9
    const/4 v1, 0x1

    #@a
    if-ne v6, v1, :cond_1

    #@c
    .line 8281
    :cond_0
    add-int/lit8 v6, v6, 0x1

    #@e
    goto :goto_0

    #@f
    .line 8286
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@11
    invoke-virtual {v1, v6}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    #@14
    move-result-object v0

    #@15
    .line 8287
    .local v0, "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v0, :cond_0

    #@17
    .line 8290
    invoke-virtual {v0}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@1a
    move-result-object v1

    #@1b
    invoke-interface {v1}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@1e
    move-result-object v10

    #@1f
    .local v10, "ent$iterator":Ljava/util/Iterator;
    :cond_2
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    #@22
    move-result v1

    #@23
    if-eqz v1, :cond_0

    #@25
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@28
    move-result-object v9

    #@29
    check-cast v9, Ljava/util/Map$Entry;

    #@2b
    .line 8291
    .local v9, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface {v9}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@2e
    move-result-object v12

    #@2f
    check-cast v12, Landroid/util/SparseIntArray;

    #@31
    .line 8292
    .local v12, "uids":Landroid/util/SparseIntArray;
    const/4 v11, 0x0

    #@32
    .local v11, "j":I
    :goto_1
    invoke-virtual {v12}, Landroid/util/SparseIntArray;->size()I

    #@35
    move-result v1

    #@36
    if-ge v11, v1, :cond_2

    #@38
    .line 8293
    invoke-interface {v9}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@3b
    move-result-object v7

    #@3c
    check-cast v7, Ljava/lang/String;

    #@3e
    .line 8294
    invoke-virtual {v12, v11}, Landroid/util/SparseIntArray;->keyAt(I)I

    #@41
    move-result v8

    #@42
    move-object v1, p0

    #@43
    move-wide v2, p1

    #@44
    move-wide/from16 v4, p3

    #@46
    .line 8293
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@49
    .line 8292
    add-int/lit8 v11, v11, 0x1

    #@4b
    goto :goto_1

    #@4c
    .line 8280
    .end local v0    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v9    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v10    # "ent$iterator":Ljava/util/Iterator;
    .end local v11    # "j":I
    .end local v12    # "uids":Landroid/util/SparseIntArray;
    :cond_3
    return-void
.end method

.method private noteBluetoothScanStartedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4182
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4183
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@7
    move-result-wide v0

    #@8
    .line 4184
    .local v0, "elapsedRealtime":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@b
    move-result-wide v2

    #@c
    .line 4185
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@e
    if-nez v4, :cond_0

    #@10
    .line 4186
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@12
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@14
    const/high16 v6, 0x100000

    #@16
    or-int/2addr v5, v6

    #@17
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@19
    .line 4189
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1c
    .line 4190
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1e
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@21
    .line 4192
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@23
    add-int/lit8 v4, v4, 0x1

    #@25
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@27
    .line 4193
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2a
    move-result-object v4

    #@2b
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanStartedLocked(J)V

    #@2e
    .line 4181
    return-void
.end method

.method private noteBluetoothScanStoppedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4204
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4205
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@7
    move-result-wide v0

    #@8
    .line 4206
    .local v0, "elapsedRealtime":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@b
    move-result-wide v2

    #@c
    .line 4207
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@e
    add-int/lit8 v4, v4, -0x1

    #@10
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@12
    .line 4208
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@14
    if-nez v4, :cond_0

    #@16
    .line 4209
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@18
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1a
    const v6, -0x100001

    #@1d
    and-int/2addr v5, v6

    #@1e
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@20
    .line 4212
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@23
    .line 4213
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@25
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@28
    .line 4215
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2b
    move-result-object v4

    #@2c
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanStoppedLocked(J)V

    #@2f
    .line 4203
    return-void
.end method

.method private readBatteryLevelInt(ILandroid/os/BatteryStats$HistoryItem;)V
    .locals 1
    .param p1, "batteryLevelInt"    # I
    .param p2, "out"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    .line 2369
    const/high16 v0, -0x2000000

    #@2
    and-int/2addr v0, p1

    #@3
    ushr-int/lit8 v0, v0, 0x19

    #@5
    int-to-byte v0, v0

    #@6
    iput-byte v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@8
    .line 2370
    const v0, 0x1ff8000

    #@b
    and-int/2addr v0, p1

    #@c
    ushr-int/lit8 v0, v0, 0xf

    #@e
    int-to-short v0, v0

    #@f
    iput-short v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    #@11
    .line 2371
    and-int/lit16 v0, p1, 0x7ffe

    #@13
    ushr-int/lit8 v0, v0, 0x1

    #@15
    int-to-char v0, v0

    #@16
    iput-char v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    #@18
    .line 2368
    return-void
.end method

.method private readDailyItemsLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    .locals 14
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;

    #@0
    .prologue
    const/4 v13, 0x3

    #@1
    const/4 v9, 0x2

    #@2
    const/4 v12, 0x1

    #@3
    .line 7815
    :cond_0
    :try_start_0
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    #@6
    move-result v8

    #@7
    .local v8, "type":I
    if-eq v8, v9, :cond_1

    #@9
    .line 7816
    if-ne v8, v12, :cond_0

    #@b
    .line 7820
    :cond_1
    if-eq v8, v9, :cond_3

    #@d
    .line 7821
    new-instance v9, Ljava/lang/IllegalStateException;

    #@f
    const-string/jumbo v10, "no start tag found"

    #@12
    invoke-direct {v9, v10}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    #@15
    throw v9
    :try_end_0
    .catch Ljava/lang/IllegalStateException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_4
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_3

    #@16
    .line 7841
    .end local v8    # "type":I
    :catch_0
    move-exception v1

    #@17
    .line 7842
    .local v1, "e":Ljava/lang/IllegalStateException;
    const-string/jumbo v9, "BatteryStatsImpl"

    #@1a
    new-instance v10, Ljava/lang/StringBuilder;

    #@1c
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@1f
    const-string/jumbo v11, "Failed parsing daily "

    #@22
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@25
    move-result-object v10

    #@26
    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@29
    move-result-object v10

    #@2a
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2d
    move-result-object v10

    #@2e
    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@31
    .line 7812
    .end local v1    # "e":Ljava/lang/IllegalStateException;
    :cond_2
    :goto_0
    return-void

    #@32
    .line 7824
    .restart local v8    # "type":I
    :cond_3
    :try_start_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    #@35
    move-result v6

    #@36
    .line 7825
    .local v6, "outerDepth":I
    :cond_4
    :goto_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    #@39
    move-result v8

    #@3a
    if-eq v8, v12, :cond_2

    #@3c
    .line 7826
    if-ne v8, v13, :cond_5

    #@3e
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    #@41
    move-result v9

    #@42
    if-le v9, v6, :cond_2

    #@44
    .line 7827
    :cond_5
    if-eq v8, v13, :cond_4

    #@46
    const/4 v9, 0x4

    #@47
    if-eq v8, v9, :cond_4

    #@49
    .line 7831
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    #@4c
    move-result-object v7

    #@4d
    .line 7832
    .local v7, "tagName":Ljava/lang/String;
    const-string/jumbo v9, "item"

    #@50
    invoke-virtual {v7, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@53
    move-result v9

    #@54
    if-eqz v9, :cond_6

    #@56
    .line 7833
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    :try_end_1
    .catch Ljava/lang/IllegalStateException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/NullPointerException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_2
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_5
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_4
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_1 .. :try_end_1} :catch_3

    #@59
    goto :goto_1

    #@5a
    .line 7843
    .end local v6    # "outerDepth":I
    .end local v7    # "tagName":Ljava/lang/String;
    .end local v8    # "type":I
    :catch_1
    move-exception v3

    #@5b
    .line 7844
    .local v3, "e":Ljava/lang/NullPointerException;
    const-string/jumbo v9, "BatteryStatsImpl"

    #@5e
    new-instance v10, Ljava/lang/StringBuilder;

    #@60
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@63
    const-string/jumbo v11, "Failed parsing daily "

    #@66
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@69
    move-result-object v10

    #@6a
    invoke-virtual {v10, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@6d
    move-result-object v10

    #@6e
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@71
    move-result-object v10

    #@72
    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@75
    goto :goto_0

    #@76
    .line 7835
    .end local v3    # "e":Ljava/lang/NullPointerException;
    .restart local v6    # "outerDepth":I
    .restart local v7    # "tagName":Ljava/lang/String;
    .restart local v8    # "type":I
    :cond_6
    :try_start_2
    const-string/jumbo v9, "BatteryStatsImpl"

    #@79
    new-instance v10, Ljava/lang/StringBuilder;

    #@7b
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@7e
    const-string/jumbo v11, "Unknown element under <daily-items>: "

    #@81
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@84
    move-result-object v10

    #@85
    .line 7836
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    #@88
    move-result-object v11

    #@89
    .line 7835
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8c
    move-result-object v10

    #@8d
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@90
    move-result-object v10

    #@91
    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@94
    .line 7837
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V
    :try_end_2
    .catch Ljava/lang/IllegalStateException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/lang/NullPointerException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Ljava/lang/NumberFormatException; {:try_start_2 .. :try_end_2} :catch_2
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_2 .. :try_end_2} :catch_5
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_4
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_2 .. :try_end_2} :catch_3

    #@97
    goto :goto_1

    #@98
    .line 7845
    .end local v6    # "outerDepth":I
    .end local v7    # "tagName":Ljava/lang/String;
    .end local v8    # "type":I
    :catch_2
    move-exception v4

    #@99
    .line 7846
    .local v4, "e":Ljava/lang/NumberFormatException;
    const-string/jumbo v9, "BatteryStatsImpl"

    #@9c
    new-instance v10, Ljava/lang/StringBuilder;

    #@9e
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@a1
    const-string/jumbo v11, "Failed parsing daily "

    #@a4
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a7
    move-result-object v10

    #@a8
    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@ab
    move-result-object v10

    #@ac
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@af
    move-result-object v10

    #@b0
    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@b3
    goto/16 :goto_0

    #@b5
    .line 7851
    .end local v4    # "e":Ljava/lang/NumberFormatException;
    :catch_3
    move-exception v2

    #@b6
    .line 7852
    .local v2, "e":Ljava/lang/IndexOutOfBoundsException;
    const-string/jumbo v9, "BatteryStatsImpl"

    #@b9
    new-instance v10, Ljava/lang/StringBuilder;

    #@bb
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@be
    const-string/jumbo v11, "Failed parsing daily "

    #@c1
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@c4
    move-result-object v10

    #@c5
    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@c8
    move-result-object v10

    #@c9
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@cc
    move-result-object v10

    #@cd
    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@d0
    goto/16 :goto_0

    #@d2
    .line 7849
    .end local v2    # "e":Ljava/lang/IndexOutOfBoundsException;
    :catch_4
    move-exception v0

    #@d3
    .line 7850
    .local v0, "e":Ljava/io/IOException;
    const-string/jumbo v9, "BatteryStatsImpl"

    #@d6
    new-instance v10, Ljava/lang/StringBuilder;

    #@d8
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@db
    const-string/jumbo v11, "Failed parsing daily "

    #@de
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e1
    move-result-object v10

    #@e2
    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@e5
    move-result-object v10

    #@e6
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@e9
    move-result-object v10

    #@ea
    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@ed
    goto/16 :goto_0

    #@ef
    .line 7847
    .end local v0    # "e":Ljava/io/IOException;
    :catch_5
    move-exception v5

    #@f0
    .line 7848
    .local v5, "e":Lorg/xmlpull/v1/XmlPullParserException;
    const-string/jumbo v9, "BatteryStatsImpl"

    #@f3
    new-instance v10, Ljava/lang/StringBuilder;

    #@f5
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@f8
    const-string/jumbo v11, "Failed parsing daily "

    #@fb
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@fe
    move-result-object v10

    #@ff
    invoke-virtual {v10, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@102
    move-result-object v10

    #@103
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@106
    move-result-object v10

    #@107
    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@10a
    goto/16 :goto_0
.end method

.method private readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V
    .locals 1
    .param p1, "index"    # I
    .param p2, "tag"    # Landroid/os/BatteryStats$HistoryTag;

    #@0
    .prologue
    .line 2103
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    #@2
    aget-object v0, v0, p1

    #@4
    iput-object v0, p2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@6
    .line 2104
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    #@8
    aget v0, v0, p1

    #@a
    iput v0, p2, Landroid/os/BatteryStats$HistoryTag;->uid:I

    #@c
    .line 2105
    iput p1, p2, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    #@e
    .line 2102
    return-void
.end method

.method private recordCurrentTimeChangeLocked(JJJ)V
    .locals 9
    .param p1, "currentTime"    # J
    .param p3, "elapsedRealtimeMs"    # J
    .param p5, "uptimeMs"    # J

    #@0
    .prologue
    .line 9317
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 9318
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@6
    iput-wide p1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@8
    .line 9320
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@a
    .line 9319
    const/4 v6, 0x5

    #@b
    move-object v1, p0

    #@c
    move-wide v2, p3

    #@d
    move-wide v4, p5

    #@e
    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@11
    .line 9321
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@13
    const-wide/16 v2, 0x0

    #@15
    iput-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@17
    .line 9316
    :cond_0
    return-void
.end method

.method private recordShutdownLocked(JJ)V
    .locals 9
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    #@0
    .prologue
    .line 9326
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 9327
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@6
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@9
    move-result-wide v2

    #@a
    iput-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@c
    .line 9329
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@e
    .line 9328
    const/16 v6, 0x8

    #@10
    move-object v1, p0

    #@11
    move-wide v2, p1

    #@12
    move-wide v4, p3

    #@13
    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@16
    .line 9330
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@18
    const-wide/16 v2, 0x0

    #@1a
    iput-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@1c
    .line 9325
    :cond_0
    return-void
.end method

.method private requestImmediateCpuUpdate()V
    .locals 2

    #@0
    .prologue
    const/4 v1, 0x1

    #@1
    .line 3110
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@3
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->removeMessages(I)V

    #@6
    .line 3111
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@8
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->sendEmptyMessage(I)Z

    #@b
    .line 3109
    return-void
.end method

.method private requestWakelockCpuUpdate()V
    .locals 4

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    .line 3103
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@3
    invoke-virtual {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->hasMessages(I)Z

    #@6
    move-result v1

    #@7
    if-nez v1, :cond_0

    #@9
    .line 3104
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@b
    invoke-virtual {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->obtainMessage(I)Landroid/os/Message;

    #@e
    move-result-object v0

    #@f
    .line 3105
    .local v0, "m":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@11
    const-wide/16 v2, 0x1388

    #@13
    invoke-virtual {v1, v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    #@16
    .line 3102
    .end local v0    # "m":Landroid/os/Message;
    :cond_0
    return-void
.end method

.method private resetAllStatsLocked()V
    .locals 12

    #@0
    .prologue
    .line 8181
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@5
    move-result-wide v6

    #@6
    .line 8182
    .local v6, "uptimeMillis":J
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@b
    move-result-wide v0

    #@c
    .line 8183
    .local v0, "elapsedRealtimeMillis":J
    const/4 v5, 0x0

    #@d
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@f
    .line 8184
    const-wide/16 v8, 0x3e8

    #@11
    mul-long/2addr v8, v6

    #@12
    const-wide/16 v10, 0x3e8

    #@14
    mul-long/2addr v10, v0

    #@15
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->initTimes(JJ)V

    #@18
    .line 8185
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1a
    const/4 v8, 0x0

    #@1b
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@1e
    .line 8186
    const/4 v2, 0x0

    #@1f
    .local v2, "i":I
    :goto_0
    const/4 v5, 0x5

    #@20
    if-ge v2, v5, :cond_0

    #@22
    .line 8187
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@24
    aget-object v5, v5, v2

    #@26
    const/4 v8, 0x0

    #@27
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@2a
    .line 8186
    add-int/lit8 v2, v2, 0x1

    #@2c
    goto :goto_0

    #@2d
    .line 8190
    :cond_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@2f
    if-eqz v5, :cond_1

    #@31
    .line 8191
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@33
    invoke-virtual {v5}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    #@36
    move-result-wide v8

    #@37
    double-to-int v5, v8

    #@38
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@3a
    .line 8195
    :goto_1
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3c
    const/4 v8, 0x0

    #@3d
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@40
    .line 8196
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@42
    const/4 v8, 0x0

    #@43
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@46
    .line 8197
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    #@48
    .line 8198
    const-wide/16 v8, 0x0

    #@4a
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    #@4c
    .line 8199
    const-wide/16 v8, 0x0

    #@4e
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    #@50
    .line 8200
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@52
    const/4 v8, 0x0

    #@53
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@56
    .line 8201
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@58
    const/4 v8, 0x0

    #@59
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@5c
    .line 8202
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@5e
    const/4 v8, 0x0

    #@5f
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@62
    .line 8203
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@64
    const/4 v8, 0x0

    #@65
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@68
    .line 8204
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6a
    const/4 v8, 0x0

    #@6b
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@6e
    .line 8205
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@70
    const/4 v8, 0x0

    #@71
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@74
    .line 8206
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@76
    const/4 v8, 0x0

    #@77
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@7a
    .line 8207
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@7c
    const/4 v8, 0x0

    #@7d
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@80
    .line 8208
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@82
    const/4 v8, 0x0

    #@83
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@86
    .line 8209
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@88
    const/4 v8, 0x0

    #@89
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@8c
    .line 8210
    const/4 v2, 0x0

    #@8d
    :goto_2
    const/4 v5, 0x5

    #@8e
    if-ge v2, v5, :cond_2

    #@90
    .line 8211
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@92
    aget-object v5, v5, v2

    #@94
    const/4 v8, 0x0

    #@95
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@98
    .line 8210
    add-int/lit8 v2, v2, 0x1

    #@9a
    goto :goto_2

    #@9b
    .line 8193
    :cond_1
    const/4 v5, -0x1

    #@9c
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@9e
    goto :goto_1

    #@9f
    .line 8213
    :cond_2
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@a1
    const/4 v8, 0x0

    #@a2
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@a5
    .line 8214
    const/4 v2, 0x0

    #@a6
    :goto_3
    const/16 v5, 0x11

    #@a8
    if-ge v2, v5, :cond_3

    #@aa
    .line 8215
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@ac
    aget-object v5, v5, v2

    #@ae
    const/4 v8, 0x0

    #@af
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@b2
    .line 8214
    add-int/lit8 v2, v2, 0x1

    #@b4
    goto :goto_3

    #@b5
    .line 8217
    :cond_3
    const/4 v2, 0x0

    #@b6
    :goto_4
    const/4 v5, 0x6

    #@b7
    if-ge v2, v5, :cond_4

    #@b9
    .line 8218
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@bb
    aget-object v5, v5, v2

    #@bd
    const/4 v8, 0x0

    #@be
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    #@c1
    .line 8219
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@c3
    aget-object v5, v5, v2

    #@c5
    const/4 v8, 0x0

    #@c6
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    #@c9
    .line 8217
    add-int/lit8 v2, v2, 0x1

    #@cb
    goto :goto_4

    #@cc
    .line 8221
    :cond_4
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@ce
    const/4 v8, 0x0

    #@cf
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@d2
    .line 8222
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@d4
    const/4 v8, 0x0

    #@d5
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@d8
    .line 8223
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@da
    const/4 v8, 0x0

    #@db
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    #@de
    .line 8224
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@e0
    const/4 v8, 0x0

    #@e1
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    #@e4
    .line 8225
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@e6
    const/4 v8, 0x0

    #@e7
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    #@ea
    .line 8226
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@ec
    const/4 v8, 0x0

    #@ed
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@f0
    .line 8227
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@f2
    const/4 v8, 0x0

    #@f3
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@f6
    .line 8228
    const/4 v2, 0x0

    #@f7
    :goto_5
    const/16 v5, 0x8

    #@f9
    if-ge v2, v5, :cond_5

    #@fb
    .line 8229
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@fd
    aget-object v5, v5, v2

    #@ff
    const/4 v8, 0x0

    #@100
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@103
    .line 8228
    add-int/lit8 v2, v2, 0x1

    #@105
    goto :goto_5

    #@106
    .line 8231
    :cond_5
    const/4 v2, 0x0

    #@107
    :goto_6
    const/16 v5, 0xd

    #@109
    if-ge v2, v5, :cond_6

    #@10b
    .line 8232
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@10d
    aget-object v5, v5, v2

    #@10f
    const/4 v8, 0x0

    #@110
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@113
    .line 8231
    add-int/lit8 v2, v2, 0x1

    #@115
    goto :goto_6

    #@116
    .line 8234
    :cond_6
    const/4 v2, 0x0

    #@117
    :goto_7
    const/4 v5, 0x5

    #@118
    if-ge v2, v5, :cond_7

    #@11a
    .line 8235
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@11c
    aget-object v5, v5, v2

    #@11e
    const/4 v8, 0x0

    #@11f
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    #@122
    .line 8234
    add-int/lit8 v2, v2, 0x1

    #@124
    goto :goto_7

    #@125
    .line 8237
    :cond_7
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@127
    const/4 v8, 0x0

    #@128
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    #@12b
    .line 8238
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@12d
    const/4 v8, 0x0

    #@12e
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    #@131
    .line 8239
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@133
    const/4 v8, 0x0

    #@134
    invoke-virtual {v5, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    #@137
    .line 8240
    const/4 v5, 0x0

    #@138
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUnpluggedNumConnectivityChange:I

    #@13a
    const/4 v5, 0x0

    #@13b
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    #@13d
    const/4 v5, 0x0

    #@13e
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    #@140
    .line 8242
    const/4 v2, 0x0

    #@141
    :goto_8
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@143
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    #@146
    move-result v5

    #@147
    if-ge v2, v5, :cond_9

    #@149
    .line 8243
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@14b
    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@14e
    move-result-object v5

    #@14f
    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@151
    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->reset()Z

    #@154
    move-result v5

    #@155
    if-eqz v5, :cond_8

    #@157
    .line 8244
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@159
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@15b
    invoke-virtual {v8, v2}, Landroid/util/SparseArray;->keyAt(I)I

    #@15e
    move-result v8

    #@15f
    invoke-virtual {v5, v8}, Landroid/util/SparseArray;->remove(I)V

    #@162
    .line 8245
    add-int/lit8 v2, v2, -0x1

    #@164
    .line 8242
    :cond_8
    add-int/lit8 v2, v2, 0x1

    #@166
    goto :goto_8

    #@167
    .line 8249
    :cond_9
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@169
    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    #@16c
    move-result v5

    #@16d
    if-lez v5, :cond_b

    #@16f
    .line 8250
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@171
    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@174
    move-result-object v5

    #@175
    invoke-interface {v5}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@178
    move-result-object v4

    #@179
    .local v4, "timer$iterator":Ljava/util/Iterator;
    :goto_9
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    #@17c
    move-result v5

    #@17d
    if-eqz v5, :cond_a

    #@17f
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@182
    move-result-object v3

    #@183
    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@185
    .line 8251
    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@187
    invoke-virtual {v5, v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    #@18a
    goto :goto_9

    #@18b
    .line 8253
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_a
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@18d
    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    #@190
    .line 8256
    .end local v4    # "timer$iterator":Ljava/util/Iterator;
    :cond_b
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@192
    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    #@195
    move-result v5

    #@196
    if-lez v5, :cond_d

    #@198
    .line 8257
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@19a
    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    #@19d
    move-result-object v5

    #@19e
    invoke-interface {v5}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@1a1
    move-result-object v4

    #@1a2
    .restart local v4    # "timer$iterator":Ljava/util/Iterator;
    :goto_a
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    #@1a5
    move-result v5

    #@1a6
    if-eqz v5, :cond_c

    #@1a8
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@1ab
    move-result-object v3

    #@1ac
    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@1ae
    .line 8258
    .restart local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@1b0
    invoke-virtual {v5, v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    #@1b3
    goto :goto_a

    #@1b4
    .line 8260
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_c
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@1b6
    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    #@1b9
    .line 8263
    .end local v4    # "timer$iterator":Ljava/util/Iterator;
    :cond_d
    const/4 v5, 0x0

    #@1ba
    iput-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1bc
    .line 8264
    const-wide/16 v8, 0x0

    #@1be
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    #@1c0
    const-wide/16 v8, 0x0

    #@1c2
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    #@1c4
    .line 8265
    const-wide/16 v8, 0x0

    #@1c6
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    #@1c8
    const-wide/16 v8, 0x0

    #@1ca
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    #@1cc
    .line 8266
    const-wide/16 v8, 0x0

    #@1ce
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    #@1d0
    const-wide/16 v8, 0x0

    #@1d2
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    #@1d4
    .line 8267
    const-wide/16 v8, 0x0

    #@1d6
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    #@1d8
    const-wide/16 v8, 0x0

    #@1da
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    #@1dc
    .line 8268
    const-wide/16 v8, 0x0

    #@1de
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    #@1e0
    const-wide/16 v8, 0x0

    #@1e2
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    #@1e4
    .line 8269
    const-wide/16 v8, 0x0

    #@1e6
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    #@1e8
    const-wide/16 v8, 0x0

    #@1ea
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    #@1ec
    .line 8270
    const-wide/16 v8, 0x0

    #@1ee
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    #@1f0
    const-wide/16 v8, 0x0

    #@1f2
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    #@1f4
    .line 8271
    const-wide/16 v8, 0x0

    #@1f6
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    #@1f8
    const-wide/16 v8, 0x0

    #@1fa
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    #@1fc
    .line 8272
    const-wide/16 v8, 0x0

    #@1fe
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    #@200
    const-wide/16 v8, 0x0

    #@202
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    #@204
    .line 8273
    const-wide/16 v8, 0x0

    #@206
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    #@208
    const-wide/16 v8, 0x0

    #@20a
    iput-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    #@20c
    .line 8275
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->initDischarge()V

    #@20f
    .line 8277
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    #@212
    .line 8180
    return-void
.end method

.method private scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "updateFlags"    # I

    #@0
    .prologue
    .line 9335
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 9336
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    #@6
    invoke-interface {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleSync(Ljava/lang/String;I)V

    #@9
    .line 9334
    :cond_0
    return-void
.end method

.method private startRecordingHistory(JJZ)V
    .locals 9
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "reset"    # Z

    #@0
    .prologue
    .line 9304
    const/4 v0, 0x1

    #@1
    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@3
    .line 9305
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@5
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@8
    move-result-wide v2

    #@9
    iput-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@b
    .line 9307
    if-eqz p5, :cond_1

    #@d
    const/4 v6, 0x7

    #@e
    .line 9308
    :goto_0
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@10
    move-object v1, p0

    #@11
    move-wide v2, p1

    #@12
    move-wide v4, p3

    #@13
    .line 9306
    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@16
    .line 9309
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@18
    const-wide/16 v2, 0x0

    #@1a
    iput-wide v2, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@1c
    .line 9310
    if-eqz p5, :cond_0

    #@1e
    .line 9311
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    #@21
    .line 9303
    :cond_0
    return-void

    #@22
    .line 9307
    :cond_1
    const/4 v6, 0x5

    #@23
    goto :goto_0
.end method

.method private updateAllPhoneStateLocked(III)V
    .locals 9
    .param p1, "state"    # I
    .param p2, "simState"    # I
    .param p3, "strengthBin"    # I

    #@0
    .prologue
    const/4 v7, 0x1

    #@1
    .line 3767
    const/4 v3, 0x0

    #@2
    .line 3768
    .local v3, "scanning":Z
    const/4 v2, 0x0

    #@3
    .line 3770
    .local v2, "newHistory":Z
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    #@5
    .line 3771
    iput p2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    #@7
    .line 3772
    iput p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    #@9
    .line 3774
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@e
    move-result-wide v0

    #@f
    .line 3775
    .local v0, "elapsedRealtime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@11
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@14
    move-result-wide v4

    #@15
    .line 3777
    .local v4, "uptime":J
    if-ne p2, v7, :cond_0

    #@17
    .line 3780
    if-ne p1, v7, :cond_0

    #@19
    .line 3781
    if-lez p3, :cond_0

    #@1b
    .line 3782
    const/4 p1, 0x0

    #@1c
    .line 3787
    :cond_0
    const/4 v6, 0x3

    #@1d
    if-ne p1, v6, :cond_8

    #@1f
    .line 3788
    const/4 p3, -0x1

    #@20
    .line 3808
    :cond_1
    :goto_0
    if-nez v3, :cond_2

    #@22
    .line 3810
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@24
    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    #@27
    move-result v6

    #@28
    if-eqz v6, :cond_2

    #@2a
    .line 3811
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@2c
    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@2e
    const v8, -0x200001

    #@31
    and-int/2addr v7, v8

    #@32
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@34
    .line 3814
    const/4 v2, 0x1

    #@35
    .line 3815
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@37
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@3a
    .line 3819
    :cond_2
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    #@3c
    if-eq v6, p1, :cond_3

    #@3e
    .line 3820
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@40
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@42
    iget v7, v7, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@44
    and-int/lit16 v7, v7, -0x1c1

    #@46
    .line 3821
    shl-int/lit8 v8, p1, 0x6

    #@48
    .line 3820
    or-int/2addr v7, v8

    #@49
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@4b
    .line 3824
    const/4 v2, 0x1

    #@4c
    .line 3825
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    #@4e
    .line 3828
    :cond_3
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    #@50
    if-eq v6, p3, :cond_6

    #@52
    .line 3829
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    #@54
    if-ltz v6, :cond_4

    #@56
    .line 3830
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@58
    iget v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    #@5a
    aget-object v6, v6, v7

    #@5c
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@5f
    .line 3833
    :cond_4
    if-ltz p3, :cond_9

    #@61
    .line 3834
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@63
    aget-object v6, v6, p3

    #@65
    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    #@68
    move-result v6

    #@69
    if-nez v6, :cond_5

    #@6b
    .line 3835
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6d
    aget-object v6, v6, p3

    #@6f
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@72
    .line 3837
    :cond_5
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@74
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@76
    iget v7, v7, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@78
    and-int/lit8 v7, v7, -0x39

    #@7a
    .line 3838
    shl-int/lit8 v8, p3, 0x3

    #@7c
    .line 3837
    or-int/2addr v7, v8

    #@7d
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@7f
    .line 3841
    const/4 v2, 0x1

    #@80
    .line 3845
    :goto_1
    iput p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    #@82
    .line 3848
    :cond_6
    if-eqz v2, :cond_7

    #@84
    .line 3849
    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@87
    .line 3766
    :cond_7
    return-void

    #@88
    .line 3791
    :cond_8
    if-eqz p1, :cond_1

    #@8a
    .line 3796
    if-ne p1, v7, :cond_1

    #@8c
    .line 3797
    const/4 v3, 0x1

    #@8d
    .line 3798
    const/4 p3, 0x0

    #@8e
    .line 3799
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@90
    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    #@93
    move-result v6

    #@94
    if-nez v6, :cond_1

    #@96
    .line 3800
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@98
    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@9a
    const/high16 v8, 0x200000

    #@9c
    or-int/2addr v7, v8

    #@9d
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@9f
    .line 3801
    const/4 v2, 0x1

    #@a0
    .line 3804
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@a2
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@a5
    goto/16 :goto_0

    #@a7
    .line 3843
    :cond_9
    const/4 v6, -0x1

    #@a8
    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllPhoneSignalStrengthTimersLocked(I)V

    #@ab
    goto :goto_1
.end method

.method private writeDailyItemsLocked(Lorg/xmlpull/v1/XmlSerializer;)V
    .locals 9
    .param p1, "out"    # Lorg/xmlpull/v1/XmlSerializer;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    .line 7743
    new-instance v4, Ljava/lang/StringBuilder;

    #@3
    const/16 v5, 0x40

    #@5
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    #@8
    .line 7744
    .local v4, "sb":Ljava/lang/StringBuilder;
    const/4 v5, 0x1

    #@9
    invoke-static {v5}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    #@c
    move-result-object v5

    #@d
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    #@10
    .line 7745
    const-string/jumbo v5, "daily-items"

    #@13
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@16
    .line 7746
    const/4 v1, 0x0

    #@17
    .local v1, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@19
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@1c
    move-result v5

    #@1d
    if-ge v1, v5, :cond_2

    #@1f
    .line 7747
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@21
    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@24
    move-result-object v0

    #@25
    check-cast v0, Landroid/os/BatteryStats$DailyItem;

    #@27
    .line 7748
    .local v0, "dit":Landroid/os/BatteryStats$DailyItem;
    const-string/jumbo v5, "item"

    #@2a
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@2d
    .line 7749
    const-string/jumbo v5, "start"

    #@30
    iget-wide v6, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    #@32
    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    #@35
    move-result-object v6

    #@36
    invoke-interface {p1, v8, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@39
    .line 7750
    const-string/jumbo v5, "end"

    #@3c
    iget-wide v6, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    #@3e
    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    #@41
    move-result-object v6

    #@42
    invoke-interface {p1, v8, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@45
    .line 7751
    const-string/jumbo v5, "dis"

    #@48
    iget-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    #@4a
    invoke-direct {p0, p1, v5, v6, v4}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    #@4d
    .line 7752
    const-string/jumbo v5, "chg"

    #@50
    iget-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    #@52
    invoke-direct {p0, p1, v5, v6, v4}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    #@55
    .line 7753
    iget-object v5, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@57
    if-eqz v5, :cond_1

    #@59
    .line 7754
    const/4 v2, 0x0

    #@5a
    .local v2, "j":I
    :goto_1
    iget-object v5, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@5c
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@5f
    move-result v5

    #@60
    if-ge v2, v5, :cond_1

    #@62
    .line 7755
    iget-object v5, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@64
    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@67
    move-result-object v3

    #@68
    check-cast v3, Landroid/os/BatteryStats$PackageChange;

    #@6a
    .line 7756
    .local v3, "pc":Landroid/os/BatteryStats$PackageChange;
    iget-boolean v5, v3, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    #@6c
    if-eqz v5, :cond_0

    #@6e
    .line 7757
    const-string/jumbo v5, "upd"

    #@71
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@74
    .line 7758
    const-string/jumbo v5, "pkg"

    #@77
    iget-object v6, v3, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    #@79
    invoke-interface {p1, v8, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@7c
    .line 7759
    const-string/jumbo v5, "ver"

    #@7f
    iget v6, v3, Landroid/os/BatteryStats$PackageChange;->mVersionCode:I

    #@81
    invoke-static {v6}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@84
    move-result-object v6

    #@85
    invoke-interface {p1, v8, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@88
    .line 7760
    const-string/jumbo v5, "upd"

    #@8b
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@8e
    .line 7754
    :goto_2
    add-int/lit8 v2, v2, 0x1

    #@90
    goto :goto_1

    #@91
    .line 7762
    :cond_0
    const-string/jumbo v5, "rem"

    #@94
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@97
    .line 7763
    const-string/jumbo v5, "pkg"

    #@9a
    iget-object v6, v3, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    #@9c
    invoke-interface {p1, v8, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@9f
    .line 7764
    const-string/jumbo v5, "rem"

    #@a2
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@a5
    goto :goto_2

    #@a6
    .line 7768
    .end local v2    # "j":I
    .end local v3    # "pc":Landroid/os/BatteryStats$PackageChange;
    :cond_1
    const-string/jumbo v5, "item"

    #@a9
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@ac
    .line 7746
    add-int/lit8 v1, v1, 0x1

    #@ae
    goto/16 :goto_0

    #@b0
    .line 7770
    .end local v0    # "dit":Landroid/os/BatteryStats$DailyItem;
    :cond_2
    const-string/jumbo v5, "daily-items"

    #@b3
    invoke-interface {p1, v8, v5}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@b6
    .line 7771
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    #@b9
    .line 7742
    return-void
.end method

.method private writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V
    .locals 4
    .param p1, "out"    # Lorg/xmlpull/v1/XmlSerializer;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "steps"    # Landroid/os/BatteryStats$LevelStepTracker;
    .param p4, "tmpBuilder"    # Ljava/lang/StringBuilder;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 7776
    if-eqz p3, :cond_1

    #@3
    .line 7777
    invoke-interface {p1, v3, p2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@6
    .line 7778
    const-string/jumbo v1, "n"

    #@9
    iget v2, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@b
    invoke-static {v2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    #@e
    move-result-object v2

    #@f
    invoke-interface {p1, v3, v1, v2}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@12
    .line 7779
    const/4 v0, 0x0

    #@13
    .local v0, "i":I
    :goto_0
    iget v1, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@15
    if-ge v0, v1, :cond_0

    #@17
    .line 7780
    const-string/jumbo v1, "s"

    #@1a
    invoke-interface {p1, v3, v1}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@1d
    .line 7781
    const/4 v1, 0x0

    #@1e
    invoke-virtual {p4, v1}, Ljava/lang/StringBuilder;->setLength(I)V

    #@21
    .line 7782
    invoke-virtual {p3, v0, p4}, Landroid/os/BatteryStats$LevelStepTracker;->encodeEntryAt(ILjava/lang/StringBuilder;)V

    #@24
    .line 7783
    const-string/jumbo v1, "v"

    #@27
    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@2a
    move-result-object v2

    #@2b
    invoke-interface {p1, v3, v1, v2}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@2e
    .line 7784
    const-string/jumbo v1, "s"

    #@31
    invoke-interface {p1, v3, v1}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@34
    .line 7779
    add-int/lit8 v0, v0, 0x1

    #@36
    goto :goto_0

    #@37
    .line 7786
    :cond_0
    invoke-interface {p1, v3, p2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    #@3a
    .line 7775
    .end local v0    # "i":I
    :cond_1
    return-void
.end method

.method private writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I
    .locals 5
    .param p1, "tag"    # Landroid/os/BatteryStats$HistoryTag;

    #@0
    .prologue
    .line 2086
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@2
    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@5
    move-result-object v1

    #@6
    check-cast v1, Ljava/lang/Integer;

    #@8
    .line 2088
    .local v1, "idxObj":Ljava/lang/Integer;
    if-eqz v1, :cond_0

    #@a
    .line 2089
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    #@d
    move-result v0

    #@e
    .line 2099
    .local v0, "idx":I
    :goto_0
    return v0

    #@f
    .line 2091
    .end local v0    # "idx":I
    :cond_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@11
    .line 2092
    .restart local v0    # "idx":I
    new-instance v2, Landroid/os/BatteryStats$HistoryTag;

    #@13
    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryTag;-><init>()V

    #@16
    .line 2093
    .local v2, "key":Landroid/os/BatteryStats$HistoryTag;
    invoke-virtual {v2, p1}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    #@19
    .line 2094
    iput v0, p1, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    #@1b
    .line 2095
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@1d
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@20
    move-result-object v4

    #@21
    invoke-virtual {v3, v2, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@24
    .line 2096
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@26
    add-int/lit8 v3, v3, 0x1

    #@28
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@2a
    .line 2097
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@2c
    iget-object v4, v2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@2e
    invoke-virtual {v4}, Ljava/lang/String;->length()I

    #@31
    move-result v4

    #@32
    add-int/lit8 v4, v4, 0x1

    #@34
    add-int/2addr v3, v4

    #@35
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@37
    goto :goto_0
.end method


# virtual methods
.method addHistoryBufferLocked(JJLandroid/os/BatteryStats$HistoryItem;)V
    .locals 21
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    .line 2618
    move-object/from16 v0, p0

    #@2
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    #@4
    if-eqz v3, :cond_7

    #@6
    move-object/from16 v0, p0

    #@8
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@a
    if-eqz v3, :cond_7

    #@c
    .line 2622
    move-object/from16 v0, p0

    #@e
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@10
    add-long v4, v4, p1

    #@12
    move-object/from16 v0, p0

    #@14
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@16
    iget-wide v6, v3, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@18
    sub-long v18, v4, v6

    #@1a
    .line 2623
    .local v18, "timeDiff":J
    move-object/from16 v0, p0

    #@1c
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@1e
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@20
    move-object/from16 v0, p5

    #@22
    iget v4, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@24
    move-object/from16 v0, p0

    #@26
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@28
    and-int/2addr v4, v5

    #@29
    xor-int v12, v3, v4

    #@2b
    .line 2624
    .local v12, "diffStates":I
    move-object/from16 v0, p0

    #@2d
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@2f
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@31
    move-object/from16 v0, p5

    #@33
    iget v4, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@35
    move-object/from16 v0, p0

    #@37
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@39
    and-int/2addr v4, v5

    #@3a
    xor-int v13, v3, v4

    #@3c
    .line 2625
    .local v13, "diffStates2":I
    move-object/from16 v0, p0

    #@3e
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@40
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@42
    move-object/from16 v0, p0

    #@44
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@46
    iget v4, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@48
    xor-int v14, v3, v4

    #@4a
    .line 2626
    .local v14, "lastDiffStates":I
    move-object/from16 v0, p0

    #@4c
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@4e
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@50
    move-object/from16 v0, p0

    #@52
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@54
    iget v4, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@56
    xor-int v15, v3, v4

    #@58
    .line 2632
    .local v15, "lastDiffStates2":I
    move-object/from16 v0, p0

    #@5a
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@5c
    if-ltz v3, :cond_6

    #@5e
    move-object/from16 v0, p0

    #@60
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@62
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    #@64
    if-nez v3, :cond_6

    #@66
    .line 2633
    const-wide/16 v4, 0x3e8

    #@68
    cmp-long v3, v18, v4

    #@6a
    if-gez v3, :cond_6

    #@6c
    and-int v3, v12, v14

    #@6e
    if-nez v3, :cond_6

    #@70
    .line 2634
    and-int v3, v13, v15

    #@72
    if-nez v3, :cond_6

    #@74
    .line 2635
    move-object/from16 v0, p0

    #@76
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@78
    iget-object v3, v3, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@7a
    if-eqz v3, :cond_0

    #@7c
    move-object/from16 v0, p5

    #@7e
    iget-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@80
    if-nez v3, :cond_6

    #@82
    .line 2636
    :cond_0
    move-object/from16 v0, p0

    #@84
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@86
    iget-object v3, v3, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@88
    if-eqz v3, :cond_1

    #@8a
    move-object/from16 v0, p5

    #@8c
    iget-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@8e
    if-nez v3, :cond_6

    #@90
    .line 2637
    :cond_1
    move-object/from16 v0, p0

    #@92
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@94
    iget-object v3, v3, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@96
    if-nez v3, :cond_6

    #@98
    .line 2638
    move-object/from16 v0, p0

    #@9a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@9c
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@9e
    if-eqz v3, :cond_2

    #@a0
    .line 2639
    move-object/from16 v0, p5

    #@a2
    iget v3, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@a4
    if-nez v3, :cond_6

    #@a6
    .line 2640
    :cond_2
    move-object/from16 v0, p0

    #@a8
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@aa
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@ac
    move-object/from16 v0, p5

    #@ae
    iget-byte v4, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@b0
    if-ne v3, v4, :cond_6

    #@b2
    .line 2641
    move-object/from16 v0, p0

    #@b4
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@b6
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@b8
    move-object/from16 v0, p5

    #@ba
    iget-byte v4, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@bc
    if-ne v3, v4, :cond_6

    #@be
    .line 2642
    move-object/from16 v0, p0

    #@c0
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@c2
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    #@c4
    move-object/from16 v0, p5

    #@c6
    iget-byte v4, v0, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    #@c8
    if-ne v3, v4, :cond_6

    #@ca
    .line 2643
    move-object/from16 v0, p0

    #@cc
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@ce
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@d0
    move-object/from16 v0, p5

    #@d2
    iget-byte v4, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@d4
    if-ne v3, v4, :cond_6

    #@d6
    .line 2644
    move-object/from16 v0, p0

    #@d8
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@da
    iget-short v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    #@dc
    move-object/from16 v0, p5

    #@de
    iget-short v4, v0, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    #@e0
    if-ne v3, v4, :cond_6

    #@e2
    .line 2645
    move-object/from16 v0, p0

    #@e4
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@e6
    iget-char v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    #@e8
    move-object/from16 v0, p5

    #@ea
    iget-char v4, v0, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    #@ec
    if-ne v3, v4, :cond_6

    #@ee
    .line 2651
    move-object/from16 v0, p0

    #@f0
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@f2
    move-object/from16 v0, p0

    #@f4
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@f6
    invoke-virtual {v3, v4}, Landroid/os/Parcel;->setDataSize(I)V

    #@f9
    .line 2652
    move-object/from16 v0, p0

    #@fb
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@fd
    move-object/from16 v0, p0

    #@ff
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@101
    invoke-virtual {v3, v4}, Landroid/os/Parcel;->setDataPosition(I)V

    #@104
    .line 2653
    const/4 v3, -0x1

    #@105
    move-object/from16 v0, p0

    #@107
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@109
    .line 2654
    move-object/from16 v0, p0

    #@10b
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@10d
    iget-wide v4, v3, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@10f
    move-object/from16 v0, p0

    #@111
    iget-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@113
    sub-long p1, v4, v6

    #@115
    .line 2658
    move-object/from16 v0, p0

    #@117
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@119
    iget-object v3, v3, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@11b
    if-eqz v3, :cond_3

    #@11d
    .line 2659
    move-object/from16 v0, p5

    #@11f
    iget-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@121
    move-object/from16 v0, p5

    #@123
    iput-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@125
    .line 2660
    move-object/from16 v0, p5

    #@127
    iget-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@129
    move-object/from16 v0, p0

    #@12b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@12d
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@12f
    invoke-virtual {v3, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    #@132
    .line 2665
    :cond_3
    move-object/from16 v0, p0

    #@134
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@136
    iget-object v3, v3, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@138
    if-eqz v3, :cond_4

    #@13a
    .line 2666
    move-object/from16 v0, p5

    #@13c
    iget-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@13e
    move-object/from16 v0, p5

    #@140
    iput-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@142
    .line 2667
    move-object/from16 v0, p5

    #@144
    iget-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@146
    move-object/from16 v0, p0

    #@148
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@14a
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@14c
    invoke-virtual {v3, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    #@14f
    .line 2672
    :cond_4
    move-object/from16 v0, p0

    #@151
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@153
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@155
    if-eqz v3, :cond_5

    #@157
    .line 2673
    move-object/from16 v0, p0

    #@159
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@15b
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@15d
    move-object/from16 v0, p5

    #@15f
    iput v3, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@161
    .line 2674
    move-object/from16 v0, p5

    #@163
    iget-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    #@165
    move-object/from16 v0, p5

    #@167
    iput-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@169
    .line 2675
    move-object/from16 v0, p5

    #@16b
    iget-object v3, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@16d
    move-object/from16 v0, p0

    #@16f
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@171
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@173
    invoke-virtual {v3, v4}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    #@176
    .line 2677
    :cond_5
    move-object/from16 v0, p0

    #@178
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@17a
    move-object/from16 v0, p0

    #@17c
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@17e
    invoke-virtual {v3, v4}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    #@181
    .line 2680
    :cond_6
    move-object/from16 v0, p0

    #@183
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@185
    invoke-virtual {v3}, Landroid/os/Parcel;->dataSize()I

    #@188
    move-result v11

    #@189
    .line 2681
    .local v11, "dataSize":I
    const/high16 v3, 0x40000

    #@18b
    if-lt v11, v3, :cond_10

    #@18d
    .line 2682
    move-object/from16 v0, p0

    #@18f
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    #@191
    if-nez v3, :cond_8

    #@193
    .line 2683
    const/4 v3, 0x1

    #@194
    move-object/from16 v0, p0

    #@196
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    #@198
    .line 2684
    const/4 v8, 0x0

    #@199
    move-object/from16 v3, p0

    #@19b
    move-wide/from16 v4, p1

    #@19d
    move-wide/from16 v6, p3

    #@19f
    move-object/from16 v9, p5

    #@1a1
    invoke-direct/range {v3 .. v9}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@1a4
    .line 2685
    const/4 v8, 0x6

    #@1a5
    move-object/from16 v3, p0

    #@1a7
    move-wide/from16 v4, p1

    #@1a9
    move-wide/from16 v6, p3

    #@1ab
    move-object/from16 v9, p5

    #@1ad
    invoke-direct/range {v3 .. v9}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@1b0
    .line 2686
    return-void

    #@1b1
    .line 2619
    .end local v11    # "dataSize":I
    .end local v12    # "diffStates":I
    .end local v13    # "diffStates2":I
    .end local v14    # "lastDiffStates":I
    .end local v15    # "lastDiffStates2":I
    .end local v18    # "timeDiff":J
    :cond_7
    return-void

    #@1b2
    .line 2690
    .restart local v11    # "dataSize":I
    .restart local v12    # "diffStates":I
    .restart local v13    # "diffStates2":I
    .restart local v14    # "lastDiffStates":I
    .restart local v15    # "lastDiffStates2":I
    .restart local v18    # "timeDiff":J
    :cond_8
    const/16 v17, 0x0

    #@1b4
    .line 2691
    .local v17, "writeAnyway":Z
    move-object/from16 v0, p5

    #@1b6
    iget v3, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1b8
    const/high16 v4, -0x190000

    #@1ba
    and-int/2addr v3, v4

    #@1bb
    .line 2692
    move-object/from16 v0, p0

    #@1bd
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@1bf
    .line 2691
    and-int v2, v3, v4

    #@1c1
    .line 2693
    .local v2, "curStates":I
    move-object/from16 v0, p0

    #@1c3
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@1c5
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1c7
    if-eq v3, v2, :cond_9

    #@1c9
    .line 2696
    move-object/from16 v0, p0

    #@1cb
    iget v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@1cd
    move/from16 v16, v0

    #@1cf
    .line 2697
    .local v16, "old":I
    move-object/from16 v0, p0

    #@1d1
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@1d3
    const v4, 0x18ffff

    #@1d6
    or-int/2addr v4, v2

    #@1d7
    and-int/2addr v3, v4

    #@1d8
    move-object/from16 v0, p0

    #@1da
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@1dc
    .line 2698
    move-object/from16 v0, p0

    #@1de
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@1e0
    move/from16 v0, v16

    #@1e2
    if-eq v0, v3, :cond_c

    #@1e4
    const/16 v17, 0x1

    #@1e6
    .line 2700
    .end local v16    # "old":I
    .end local v17    # "writeAnyway":Z
    :cond_9
    :goto_0
    move-object/from16 v0, p5

    #@1e8
    iget v3, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1ea
    const/high16 v4, 0x683f0000

    #@1ec
    and-int/2addr v3, v4

    #@1ed
    .line 2701
    move-object/from16 v0, p0

    #@1ef
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@1f1
    .line 2700
    and-int v10, v3, v4

    #@1f3
    .line 2702
    .local v10, "curStates2":I
    move-object/from16 v0, p0

    #@1f5
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@1f7
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1f9
    if-eq v3, v10, :cond_a

    #@1fb
    .line 2705
    move-object/from16 v0, p0

    #@1fd
    iget v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@1ff
    move/from16 v16, v0

    #@201
    .line 2706
    .restart local v16    # "old":I
    move-object/from16 v0, p0

    #@203
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@205
    const v4, -0x683f0001

    #@208
    or-int/2addr v4, v10

    #@209
    and-int/2addr v3, v4

    #@20a
    move-object/from16 v0, p0

    #@20c
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@20e
    .line 2707
    move-object/from16 v0, p0

    #@210
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@212
    move/from16 v0, v16

    #@214
    if-eq v0, v3, :cond_d

    #@216
    const/4 v3, 0x1

    #@217
    :goto_1
    or-int v17, v17, v3

    #@219
    .line 2714
    .end local v16    # "old":I
    :cond_a
    if-nez v17, :cond_f

    #@21b
    move-object/from16 v0, p0

    #@21d
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@21f
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@221
    move-object/from16 v0, p5

    #@223
    iget-byte v4, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@225
    if-ne v3, v4, :cond_f

    #@227
    .line 2715
    const/high16 v3, 0x50000

    #@229
    if-ge v11, v3, :cond_b

    #@22b
    .line 2716
    move-object/from16 v0, p0

    #@22d
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@22f
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@231
    move-object/from16 v0, p5

    #@233
    iget v4, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@235
    xor-int/2addr v3, v4

    #@236
    .line 2717
    const/high16 v4, 0x180000

    #@238
    .line 2716
    and-int/2addr v3, v4

    #@239
    if-nez v3, :cond_e

    #@23b
    .line 2720
    :cond_b
    return-void

    #@23c
    .line 2698
    .end local v10    # "curStates2":I
    .restart local v16    # "old":I
    .restart local v17    # "writeAnyway":Z
    :cond_c
    const/16 v17, 0x0

    #@23e
    goto :goto_0

    #@23f
    .line 2707
    .end local v17    # "writeAnyway":Z
    .restart local v10    # "curStates2":I
    :cond_d
    const/4 v3, 0x0

    #@240
    goto :goto_1

    #@241
    .line 2718
    .end local v16    # "old":I
    :cond_e
    move-object/from16 v0, p0

    #@243
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@245
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@247
    move-object/from16 v0, p5

    #@249
    iget v4, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@24b
    xor-int/2addr v3, v4

    #@24c
    .line 2719
    const/high16 v4, -0x68400000

    #@24e
    .line 2718
    and-int/2addr v3, v4

    #@24f
    if-eqz v3, :cond_b

    #@251
    .line 2723
    :cond_f
    const/4 v8, 0x0

    #@252
    move-object/from16 v3, p0

    #@254
    move-wide/from16 v4, p1

    #@256
    move-wide/from16 v6, p3

    #@258
    move-object/from16 v9, p5

    #@25a
    invoke-direct/range {v3 .. v9}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@25d
    .line 2724
    return-void

    #@25e
    .line 2727
    .end local v2    # "curStates":I
    .end local v10    # "curStates2":I
    :cond_10
    if-nez v11, :cond_11

    #@260
    .line 2729
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@263
    move-result-wide v4

    #@264
    move-object/from16 v0, p5

    #@266
    iput-wide v4, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@268
    .line 2730
    const/4 v8, 0x7

    #@269
    move-object/from16 v3, p0

    #@26b
    move-wide/from16 v4, p1

    #@26d
    move-wide/from16 v6, p3

    #@26f
    move-object/from16 v9, p5

    #@271
    invoke-direct/range {v3 .. v9}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@274
    .line 2732
    :cond_11
    const/4 v8, 0x0

    #@275
    move-object/from16 v3, p0

    #@277
    move-wide/from16 v4, p1

    #@279
    move-wide/from16 v6, p3

    #@27b
    move-object/from16 v9, p5

    #@27d
    invoke-direct/range {v3 .. v9}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@280
    .line 2617
    return-void
.end method

.method public addHistoryEventLocked(JJILjava/lang/String;I)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "code"    # I
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "uid"    # I

    #@0
    .prologue
    .line 2843
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@2
    iput p5, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@4
    .line 2844
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@6
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@8
    iget-object v1, v1, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    #@a
    iput-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@c
    .line 2845
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@e
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@10
    iput-object p6, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@12
    .line 2846
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@14
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@16
    iput p7, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    #@18
    .line 2847
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1b
    .line 2842
    return-void
.end method

.method addHistoryRecordInnerLocked(JJLandroid/os/BatteryStats$HistoryItem;)V
    .locals 1
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    .line 2780
    invoke-virtual/range {p0 .. p5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJLandroid/os/BatteryStats$HistoryItem;)V

    #@3
    .line 2783
    return-void
.end method

.method addHistoryRecordLocked(JJ)V
    .locals 21
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    #@0
    .prologue
    .line 2760
    move-object/from16 v0, p0

    #@2
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    #@4
    const-wide/16 v8, 0x0

    #@6
    cmp-long v4, v4, v8

    #@8
    if-eqz v4, :cond_0

    #@a
    .line 2761
    move-object/from16 v0, p0

    #@c
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    #@e
    sub-long v16, p1, v4

    #@10
    .line 2762
    .local v16, "diffElapsed":J
    move-object/from16 v0, p0

    #@12
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    #@14
    sub-long v18, p3, v4

    #@16
    .line 2763
    .local v18, "diffUptime":J
    const-wide/16 v4, 0x14

    #@18
    sub-long v4, v16, v4

    #@1a
    cmp-long v4, v18, v4

    #@1c
    if-gez v4, :cond_0

    #@1e
    .line 2764
    sub-long v4, v16, v18

    #@20
    sub-long v6, p1, v4

    #@22
    .line 2765
    .local v6, "wakeElapsedTime":J
    move-object/from16 v0, p0

    #@24
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@26
    move-object/from16 v0, p0

    #@28
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@2a
    invoke-virtual {v4, v5}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    #@2d
    .line 2766
    move-object/from16 v0, p0

    #@2f
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@31
    const/4 v5, 0x0

    #@32
    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@34
    .line 2767
    move-object/from16 v0, p0

    #@36
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@38
    const/4 v5, 0x0

    #@39
    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@3b
    .line 2768
    move-object/from16 v0, p0

    #@3d
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@3f
    const/4 v5, 0x0

    #@40
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@42
    .line 2769
    move-object/from16 v0, p0

    #@44
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@46
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@48
    const v8, 0x7fffffff

    #@4b
    and-int/2addr v5, v8

    #@4c
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@4e
    .line 2770
    move-object/from16 v0, p0

    #@50
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    #@52
    move-object/from16 v5, p0

    #@54
    move-wide/from16 v8, p3

    #@56
    invoke-virtual/range {v5 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordInnerLocked(JJLandroid/os/BatteryStats$HistoryItem;)V

    #@59
    .line 2773
    .end local v6    # "wakeElapsedTime":J
    .end local v16    # "diffElapsed":J
    .end local v18    # "diffUptime":J
    :cond_0
    move-object/from16 v0, p0

    #@5b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@5d
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@5f
    const/high16 v8, -0x80000000

    #@61
    or-int/2addr v5, v8

    #@62
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@64
    .line 2774
    move-wide/from16 v0, p1

    #@66
    move-object/from16 v2, p0

    #@68
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    #@6a
    .line 2775
    move-wide/from16 v0, p3

    #@6c
    move-object/from16 v2, p0

    #@6e
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    #@70
    .line 2776
    move-object/from16 v0, p0

    #@72
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@74
    move-object/from16 v9, p0

    #@76
    move-wide/from16 v10, p1

    #@78
    move-wide/from16 v12, p3

    #@7a
    invoke-virtual/range {v9 .. v14}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordInnerLocked(JJLandroid/os/BatteryStats$HistoryItem;)V

    #@7d
    .line 2759
    return-void
.end method

.method addHistoryRecordLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V
    .locals 5
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "cmd"    # B
    .param p6, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    .line 2851
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

    #@2
    .line 2852
    .local v0, "rec":Landroid/os/BatteryStats$HistoryItem;
    if-eqz v0, :cond_0

    #@4
    .line 2853
    iget-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    #@6
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

    #@8
    .line 2857
    :goto_0
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@a
    add-long/2addr v2, p1

    #@b
    invoke-virtual {v0, v2, v3, p5, p6}, Landroid/os/BatteryStats$HistoryItem;->setTo(JBLandroid/os/BatteryStats$HistoryItem;)V

    #@e
    .line 2859
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(Landroid/os/BatteryStats$HistoryItem;)V

    #@11
    .line 2850
    return-void

    #@12
    .line 2855
    :cond_0
    new-instance v0, Landroid/os/BatteryStats$HistoryItem;

    #@14
    .end local v0    # "rec":Landroid/os/BatteryStats$HistoryItem;
    invoke-direct {v0}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    #@17
    .restart local v0    # "rec":Landroid/os/BatteryStats$HistoryItem;
    goto :goto_0
.end method

.method addHistoryRecordLocked(Landroid/os/BatteryStats$HistoryItem;)V
    .locals 2
    .param p1, "rec"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 2863
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryItems:I

    #@3
    add-int/lit8 v0, v0, 0x1

    #@5
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryItems:I

    #@7
    .line 2864
    iput-object v1, p1, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    #@9
    .line 2865
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    #@b
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastEnd:Landroid/os/BatteryStats$HistoryItem;

    #@d
    .line 2866
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    #@f
    if-eqz v0, :cond_0

    #@11
    .line 2867
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    #@13
    iput-object p1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    #@15
    .line 2868
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    #@17
    .line 2862
    :goto_0
    return-void

    #@18
    .line 2870
    :cond_0
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    #@1a
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistory:Landroid/os/BatteryStats$HistoryItem;

    #@1c
    goto :goto_0
.end method

.method public addIsolatedUidLocked(II)V
    .locals 1
    .param p1, "isolatedUid"    # I
    .param p2, "appUid"    # I

    #@0
    .prologue
    .line 2921
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    #@2
    invoke-virtual {v0, p1, p2}, Landroid/util/SparseIntArray;->put(II)V

    #@5
    .line 2920
    return-void
.end method

.method aggregateLastWakeupUptimeLocked(J)V
    .locals 7
    .param p1, "uptimeMs"    # J

    #@0
    .prologue
    const/4 v6, 0x0

    #@1
    .line 3289
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    #@3
    if-eqz v3, :cond_0

    #@5
    .line 3290
    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    #@7
    sub-long v0, p1, v4

    #@9
    .line 3291
    .local v0, "deltaUptime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    #@b
    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@e
    move-result-object v2

    #@f
    .line 3292
    .local v2, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    const-wide/16 v4, 0x3e8

    #@11
    mul-long/2addr v4, v0

    #@12
    const/4 v3, 0x1

    #@13
    invoke-virtual {v2, v4, v5, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->add(JI)V

    #@16
    .line 3293
    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    #@18
    .line 3288
    .end local v0    # "deltaUptime":J
    .end local v2    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_0
    return-void
.end method

.method clearHistoryLocked()V
    .locals 4

    #@0
    .prologue
    const/4 v3, -0x1

    #@1
    const-wide/16 v0, 0x0

    #@3
    const/4 v2, 0x0

    #@4
    .line 2885
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@6
    .line 2886
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    #@8
    .line 2887
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    #@a
    .line 2888
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    #@c
    .line 2890
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@e
    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataSize(I)V

    #@11
    .line 2891
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@13
    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataPosition(I)V

    #@16
    .line 2892
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@18
    const/high16 v1, 0x20000

    #@1a
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataCapacity(I)V

    #@1d
    .line 2893
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@1f
    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    #@22
    .line 2894
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@24
    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    #@27
    .line 2895
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@29
    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    #@2c
    .line 2896
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@2e
    .line 2897
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@30
    .line 2898
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    #@32
    .line 2899
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    #@34
    .line 2900
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    #@36
    .line 2901
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    #@38
    .line 2874
    return-void
.end method

.method public commitCurrentHistoryBatchLocked()V
    .locals 2

    #@0
    .prologue
    .line 2614
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@2
    const/4 v1, -0x1

    #@3
    iput-byte v1, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    #@5
    .line 2613
    return-void
.end method

.method public commitPendingDataToDisk()V
    .locals 5

    #@0
    .prologue
    .line 9888
    monitor-enter p0

    #@1
    .line 9889
    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    #@3
    .line 9890
    .local v1, "next":Landroid/os/Parcel;
    const/4 v3, 0x0

    #@4
    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@6
    .line 9891
    if-nez v1, :cond_0

    #@8
    monitor-exit p0

    #@9
    .line 9892
    return-void

    #@a
    .line 9895
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    #@c
    invoke-virtual {v3}, Ljava/util/concurrent/locks/ReentrantLock;->lock()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@f
    monitor-exit p0

    #@10
    .line 9899
    :try_start_2
    new-instance v2, Ljava/io/FileOutputStream;

    #@12
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@14
    invoke-virtual {v3}, Lcom/android/internal/util/JournaledFile;->chooseForWrite()Ljava/io/File;

    #@17
    move-result-object v3

    #@18
    invoke-direct {v2, v3}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V

    #@1b
    .line 9900
    .local v2, "stream":Ljava/io/FileOutputStream;
    invoke-virtual {v1}, Landroid/os/Parcel;->marshall()[B

    #@1e
    move-result-object v3

    #@1f
    invoke-virtual {v2, v3}, Ljava/io/FileOutputStream;->write([B)V

    #@22
    .line 9901
    invoke-virtual {v2}, Ljava/io/FileOutputStream;->flush()V

    #@25
    .line 9902
    invoke-static {v2}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    #@28
    .line 9903
    invoke-virtual {v2}, Ljava/io/FileOutputStream;->close()V

    #@2b
    .line 9904
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@2d
    invoke-virtual {v3}, Lcom/android/internal/util/JournaledFile;->commit()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    #@30
    .line 9909
    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V

    #@33
    .line 9910
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    #@35
    invoke-virtual {v3}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    #@38
    .line 9886
    .end local v2    # "stream":Ljava/io/FileOutputStream;
    :goto_0
    return-void

    #@39
    .line 9888
    .end local v1    # "next":Landroid/os/Parcel;
    :catchall_0
    move-exception v3

    #@3a
    monitor-exit p0

    #@3b
    throw v3

    #@3c
    .line 9905
    .restart local v1    # "next":Landroid/os/Parcel;
    :catch_0
    move-exception v0

    #@3d
    .line 9906
    .local v0, "e":Ljava/io/IOException;
    :try_start_3
    const-string/jumbo v3, "BatteryStats"

    #@40
    const-string/jumbo v4, "Error writing battery statistics"

    #@43
    invoke-static {v3, v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@46
    .line 9907
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@48
    invoke-virtual {v3}, Lcom/android/internal/util/JournaledFile;->rollback()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    #@4b
    .line 9909
    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V

    #@4e
    .line 9910
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    #@50
    invoke-virtual {v3}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    #@53
    goto :goto_0

    #@54
    .line 9908
    .end local v0    # "e":Ljava/io/IOException;
    :catchall_1
    move-exception v3

    #@55
    .line 9909
    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V

    #@58
    .line 9910
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    #@5a
    invoke-virtual {v4}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    #@5d
    .line 9908
    throw v3
.end method

.method public computeBatteryRealtime(JI)J
    .locals 3
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 9543
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public computeBatteryScreenOffRealtime(JI)J
    .locals 3
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 9553
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public computeBatteryScreenOffUptime(JI)J
    .locals 3
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 9548
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeUptime(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public computeBatteryTimeRemaining(J)J
    .locals 6
    .param p1, "curTime"    # J

    #@0
    .prologue
    const-wide/16 v4, -0x1

    #@2
    .line 9596
    iget-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@4
    if-nez v2, :cond_0

    #@6
    .line 9597
    return-wide v4

    #@7
    .line 9612
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@9
    iget v2, v2, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@b
    const/4 v3, 0x1

    #@c
    if-ge v2, v3, :cond_1

    #@e
    .line 9613
    return-wide v4

    #@f
    .line 9615
    :cond_1
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@11
    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    #@14
    move-result-wide v0

    #@15
    .line 9616
    .local v0, "msPerLevel":J
    const-wide/16 v2, 0x0

    #@17
    cmp-long v2, v0, v2

    #@19
    if-gtz v2, :cond_2

    #@1b
    .line 9617
    return-wide v4

    #@1c
    .line 9619
    :cond_2
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@1e
    int-to-long v2, v2

    #@1f
    mul-long/2addr v2, v0

    #@20
    const-wide/16 v4, 0x3e8

    #@22
    mul-long/2addr v2, v4

    #@23
    return-wide v2
.end method

.method public computeBatteryUptime(JI)J
    .locals 3
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 9538
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeUptime(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public computeChargeTimeRemaining(J)J
    .locals 6
    .param p1, "curTime"    # J

    #@0
    .prologue
    const-wide/16 v4, -0x1

    #@2
    .line 9634
    iget-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@4
    if-eqz v2, :cond_0

    #@6
    .line 9636
    return-wide v4

    #@7
    .line 9651
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@9
    iget v2, v2, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@b
    const/4 v3, 0x1

    #@c
    if-ge v2, v3, :cond_1

    #@e
    .line 9652
    return-wide v4

    #@f
    .line 9654
    :cond_1
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@11
    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    #@14
    move-result-wide v0

    #@15
    .line 9655
    .local v0, "msPerLevel":J
    const-wide/16 v2, 0x0

    #@17
    cmp-long v2, v0, v2

    #@19
    if-gtz v2, :cond_2

    #@1b
    .line 9656
    return-wide v4

    #@1c
    .line 9658
    :cond_2
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@1e
    rsub-int/lit8 v2, v2, 0x64

    #@20
    int-to-long v2, v2

    #@21
    mul-long/2addr v2, v0

    #@22
    const-wide/16 v4, 0x3e8

    #@24
    mul-long/2addr v2, v4

    #@25
    return-wide v2
.end method

.method public computeRealtime(JI)J
    .locals 5
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 9528
    packed-switch p3, :pswitch_data_0

    #@3
    .line 9533
    const-wide/16 v0, 0x0

    #@5
    return-wide v0

    #@6
    .line 9529
    :pswitch_0
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    #@8
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    #@a
    sub-long v2, p1, v2

    #@c
    add-long/2addr v0, v2

    #@d
    return-wide v0

    #@e
    .line 9530
    :pswitch_1
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    #@10
    sub-long v0, p1, v0

    #@12
    return-wide v0

    #@13
    .line 9531
    :pswitch_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@15
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtimeStart()J

    #@18
    move-result-wide v0

    #@19
    sub-long v0, p1, v0

    #@1b
    return-wide v0

    #@1c
    .line 9528
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public computeUptime(JI)J
    .locals 5
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 9518
    packed-switch p3, :pswitch_data_0

    #@3
    .line 9523
    const-wide/16 v0, 0x0

    #@5
    return-wide v0

    #@6
    .line 9519
    :pswitch_0
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    #@8
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    #@a
    sub-long v2, p1, v2

    #@c
    add-long/2addr v0, v2

    #@d
    return-wide v0

    #@e
    .line 9520
    :pswitch_1
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    #@10
    sub-long v0, p1, v0

    #@12
    return-wide v0

    #@13
    .line 9521
    :pswitch_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@15
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptimeStart()J

    #@18
    move-result-wide v0

    #@19
    sub-long v0, p1, v0

    #@1b
    return-wide v0

    #@1c
    .line 9518
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public describeContents()I
    .locals 1

    #@0
    .prologue
    .line 9962
    const/4 v0, 0x0

    #@1
    return v0
.end method

.method public dumpLocked(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V
    .locals 1
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "flags"    # I
    .param p4, "reqUid"    # I
    .param p5, "histStart"    # J

    #@0
    .prologue
    .line 11218
    invoke-super/range {p0 .. p6}, Landroid/os/BatteryStats;->dumpLocked(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V

    #@3
    .line 11154
    return-void
.end method

.method ensureStartClockTime(J)Z
    .locals 9
    .param p1, "currentTime"    # J

    #@0
    .prologue
    const-wide v4, 0x757b12c00L

    #@5
    .line 2962
    const-wide v0, 0x757b12c00L

    #@a
    .line 2963
    .local v0, "ABOUT_ONE_YEAR":J
    cmp-long v2, p1, v4

    #@c
    if-lez v2, :cond_0

    #@e
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    #@10
    sub-long v4, p1, v4

    #@12
    cmp-long v2, v2, v4

    #@14
    if-gez v2, :cond_0

    #@16
    .line 2967
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@18
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@1b
    move-result-wide v2

    #@1c
    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    #@1e
    const-wide/16 v6, 0x3e8

    #@20
    div-long/2addr v4, v6

    #@21
    sub-long/2addr v2, v4

    #@22
    sub-long v2, p1, v2

    #@24
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    #@26
    .line 2968
    const/4 v2, 0x1

    #@27
    return v2

    #@28
    .line 2970
    :cond_0
    const/4 v2, 0x0

    #@29
    return v2
.end method

.method public finishAddingCpuLocked(IIIIIIII)V
    .locals 4
    .param p1, "totalUTime"    # I
    .param p2, "totalSTime"    # I
    .param p3, "statUserTime"    # I
    .param p4, "statSystemTime"    # I
    .param p5, "statIOWaitTime"    # I
    .param p6, "statIrqTime"    # I
    .param p7, "statSoftIrqTime"    # I
    .param p8, "statIdleTime"    # I

    #@0
    .prologue
    .line 3323
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    #@2
    int-to-long v2, p1

    #@3
    add-long/2addr v0, v2

    #@4
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    #@6
    .line 3324
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    #@8
    int-to-long v2, p2

    #@9
    add-long/2addr v0, v2

    #@a
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    #@c
    .line 3325
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    #@e
    int-to-long v2, p3

    #@f
    add-long/2addr v0, v2

    #@10
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    #@12
    .line 3326
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    #@14
    int-to-long v2, p4

    #@15
    add-long/2addr v0, v2

    #@16
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    #@18
    .line 3327
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    #@1a
    int-to-long v2, p5

    #@1b
    add-long/2addr v0, v2

    #@1c
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    #@1e
    .line 3328
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    #@20
    int-to-long v2, p6

    #@21
    add-long/2addr v0, v2

    #@22
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    #@24
    .line 3329
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    #@26
    int-to-long v2, p7

    #@27
    add-long/2addr v0, v2

    #@28
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    #@2a
    .line 3330
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    #@2c
    int-to-long v2, p8

    #@2d
    add-long/2addr v0, v2

    #@2e
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    #@30
    .line 3318
    return-void
.end method

.method public finishIteratingHistoryLocked()V
    .locals 2

    #@0
    .prologue
    .line 8103
    const/4 v0, 0x0

    #@1
    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    #@3
    .line 8104
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@5
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@7
    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    #@a
    move-result v1

    #@b
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    #@e
    .line 8105
    const/4 v0, 0x0

    #@f
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    #@11
    .line 8102
    return-void
.end method

.method public finishIteratingOldHistoryLocked()V
    .locals 2

    #@0
    .prologue
    .line 8022
    const/4 v0, 0x0

    #@1
    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    #@3
    .line 8023
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@5
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@7
    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    #@a
    move-result v1

    #@b
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    #@e
    .line 8024
    const/4 v0, 0x0

    #@f
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    #@11
    .line 8021
    return-void
.end method

.method public getAwakeTimeBattery()J
    .locals 3

    #@0
    .prologue
    .line 9509
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getBatteryUptimeLocked()J

    #@3
    move-result-wide v0

    #@4
    const/4 v2, 0x1

    #@5
    invoke-virtual {p0, v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryUptime(JI)J

    #@8
    move-result-wide v0

    #@9
    return-wide v0
.end method

.method public getAwakeTimePlugged()J
    .locals 4

    #@0
    .prologue
    .line 9513
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@5
    move-result-wide v0

    #@6
    const-wide/16 v2, 0x3e8

    #@8
    mul-long/2addr v0, v2

    #@9
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getAwakeTimeBattery()J

    #@c
    move-result-wide v2

    #@d
    sub-long/2addr v0, v2

    #@e
    return-wide v0
.end method

.method public getBatteryRealtime(J)J
    .locals 3
    .param p1, "curTime"    # J

    #@0
    .prologue
    .line 9687
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2
    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getBatteryUptime(J)J
    .locals 3
    .param p1, "curTime"    # J

    #@0
    .prologue
    .line 9682
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2
    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method protected getBatteryUptimeLocked()J
    .locals 6

    #@0
    .prologue
    .line 9677
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@4
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@7
    move-result-wide v2

    #@8
    const-wide/16 v4, 0x3e8

    #@a
    mul-long/2addr v2, v4

    #@b
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    #@e
    move-result-wide v0

    #@f
    return-wide v0
.end method

.method public getBluetoothControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    #@0
    .prologue
    .line 4782
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@2
    return-object v0
.end method

.method public getBluetoothScanTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4827
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getCameraOnTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4822
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    #@0
    .prologue
    .line 9663
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@2
    return-object v0
.end method

.method public getCurrentDailyStartTime()J
    .locals 2

    #@0
    .prologue
    .line 7960
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@2
    return-wide v0
.end method

.method public getDailyChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    #@0
    .prologue
    .line 9668
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@2
    return-object v0
.end method

.method public getDailyDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    #@0
    .prologue
    .line 9629
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@2
    return-object v0
.end method

.method public getDailyItemLocked(I)Landroid/os/BatteryStats$DailyItem;
    .locals 2
    .param p1, "daysAgo"    # I

    #@0
    .prologue
    .line 7954
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@2
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    #@5
    move-result v1

    #@6
    add-int/lit8 v1, v1, -0x1

    #@8
    sub-int v0, v1, p1

    #@a
    .line 7955
    .local v0, "index":I
    if-ltz v0, :cond_0

    #@c
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@e
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@11
    move-result-object v1

    #@12
    check-cast v1, Landroid/os/BatteryStats$DailyItem;

    #@14
    :goto_0
    return-object v1

    #@15
    :cond_0
    const/4 v1, 0x0

    #@16
    goto :goto_0
.end method

.method public getDailyPackageChanges()Ljava/util/ArrayList;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/os/BatteryStats$PackageChange;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    .line 9673
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@2
    return-object v0
.end method

.method public getDeviceIdleModeCount(II)I
    .locals 1
    .param p1, "mode"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4639
    packed-switch p1, :pswitch_data_0

    #@3
    .line 4645
    const/4 v0, 0x0

    #@4
    return v0

    #@5
    .line 4641
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@7
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@a
    move-result v0

    #@b
    return v0

    #@c
    .line 4643
    :pswitch_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@e
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@11
    move-result v0

    #@12
    return v0

    #@13
    .line 4639
    nop

    #@14
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public getDeviceIdleModeTime(IJI)J
    .locals 2
    .param p1, "mode"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    #@0
    .prologue
    .line 4629
    packed-switch p1, :pswitch_data_0

    #@3
    .line 4635
    const-wide/16 v0, 0x0

    #@5
    return-wide v0

    #@6
    .line 4631
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@8
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@b
    move-result-wide v0

    #@c
    return-wide v0

    #@d
    .line 4633
    :pswitch_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@f
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@12
    move-result-wide v0

    #@13
    return-wide v0

    #@14
    .line 4629
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public getDeviceIdlingCount(II)I
    .locals 1
    .param p1, "mode"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4669
    packed-switch p1, :pswitch_data_0

    #@3
    .line 4675
    const/4 v0, 0x0

    #@4
    return v0

    #@5
    .line 4671
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@7
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@a
    move-result v0

    #@b
    return v0

    #@c
    .line 4673
    :pswitch_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@e
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@11
    move-result v0

    #@12
    return v0

    #@13
    .line 4669
    nop

    #@14
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public getDeviceIdlingTime(IJI)J
    .locals 2
    .param p1, "mode"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    #@0
    .prologue
    .line 4659
    packed-switch p1, :pswitch_data_0

    #@3
    .line 4665
    const-wide/16 v0, 0x0

    #@5
    return-wide v0

    #@6
    .line 4661
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@8
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@b
    move-result-wide v0

    #@c
    return-wide v0

    #@d
    .line 4663
    :pswitch_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@f
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@12
    move-result-wide v0

    #@13
    return-wide v0

    #@14
    .line 4659
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public getDischargeAmount(I)I
    .locals 3
    .param p1, "which"    # I

    #@0
    .prologue
    .line 9736
    if-nez p1, :cond_1

    #@2
    .line 9737
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    #@5
    move-result v0

    #@6
    .line 9739
    .local v0, "dischargeAmount":I
    :goto_0
    if-gez v0, :cond_0

    #@8
    .line 9740
    const/4 v0, 0x0

    #@9
    .line 9742
    :cond_0
    return v0

    #@a
    .line 9738
    .end local v0    # "dischargeAmount":I
    :cond_1
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeStartLevel()I

    #@d
    move-result v1

    #@e
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeCurrentLevel()I

    #@11
    move-result v2

    #@12
    sub-int v0, v1, v2

    #@14
    goto :goto_0
.end method

.method public getDischargeAmountScreenOff()I
    .locals 3

    #@0
    .prologue
    .line 9768
    monitor-enter p0

    #@1
    .line 9769
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    #@3
    .line 9770
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@5
    if-eqz v1, :cond_0

    #@7
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@9
    const/4 v2, 0x2

    #@a
    if-eq v1, v2, :cond_0

    #@c
    .line 9771
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@e
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@10
    if-ge v1, v2, :cond_0

    #@12
    .line 9772
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@14
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    sub-int/2addr v1, v2

    #@17
    add-int/2addr v0, v1

    #@18
    :cond_0
    monitor-exit p0

    #@19
    .line 9774
    return v0

    #@1a
    .line 9768
    .end local v0    # "val":I
    :catchall_0
    move-exception v1

    #@1b
    monitor-exit p0

    #@1c
    throw v1
.end method

.method public getDischargeAmountScreenOffSinceCharge()I
    .locals 3

    #@0
    .prologue
    .line 9779
    monitor-enter p0

    #@1
    .line 9780
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    #@3
    .line 9781
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@5
    if-eqz v1, :cond_0

    #@7
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@9
    const/4 v2, 0x2

    #@a
    if-eq v1, v2, :cond_0

    #@c
    .line 9782
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@e
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@10
    if-ge v1, v2, :cond_0

    #@12
    .line 9783
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@14
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    sub-int/2addr v1, v2

    #@17
    add-int/2addr v0, v1

    #@18
    :cond_0
    monitor-exit p0

    #@19
    .line 9785
    return v0

    #@1a
    .line 9779
    .end local v0    # "val":I
    :catchall_0
    move-exception v1

    #@1b
    monitor-exit p0

    #@1c
    throw v1
.end method

.method public getDischargeAmountScreenOn()I
    .locals 3

    #@0
    .prologue
    .line 9746
    monitor-enter p0

    #@1
    .line 9747
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    #@3
    .line 9748
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@5
    if-eqz v1, :cond_0

    #@7
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@9
    const/4 v2, 0x2

    #@a
    if-ne v1, v2, :cond_0

    #@c
    .line 9749
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@e
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@10
    if-ge v1, v2, :cond_0

    #@12
    .line 9750
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@14
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    sub-int/2addr v1, v2

    #@17
    add-int/2addr v0, v1

    #@18
    :cond_0
    monitor-exit p0

    #@19
    .line 9752
    return v0

    #@1a
    .line 9746
    .end local v0    # "val":I
    :catchall_0
    move-exception v1

    #@1b
    monitor-exit p0

    #@1c
    throw v1
.end method

.method public getDischargeAmountScreenOnSinceCharge()I
    .locals 3

    #@0
    .prologue
    .line 9757
    monitor-enter p0

    #@1
    .line 9758
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    #@3
    .line 9759
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@5
    if-eqz v1, :cond_0

    #@7
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@9
    const/4 v2, 0x2

    #@a
    if-ne v1, v2, :cond_0

    #@c
    .line 9760
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@e
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@10
    if-ge v1, v2, :cond_0

    #@12
    .line 9761
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@14
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@16
    sub-int/2addr v1, v2

    #@17
    add-int/2addr v0, v1

    #@18
    :cond_0
    monitor-exit p0

    #@19
    .line 9763
    return v0

    #@1a
    .line 9757
    .end local v0    # "val":I
    :catchall_0
    move-exception v1

    #@1b
    monitor-exit p0

    #@1c
    throw v1
.end method

.method public getDischargeCoulombCounter()Landroid/os/BatteryStats$LongCounter;
    .locals 1

    #@0
    .prologue
    .line 580
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2
    return-object v0
.end method

.method public getDischargeCurrentLevel()I
    .locals 1

    #@0
    .prologue
    .line 9703
    monitor-enter p0

    #@1
    .line 9704
    :try_start_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeCurrentLevelLocked()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@4
    move-result v0

    #@5
    monitor-exit p0

    #@6
    return v0

    #@7
    .line 9703
    :catchall_0
    move-exception v0

    #@8
    monitor-exit p0

    #@9
    throw v0
.end method

.method public getDischargeCurrentLevelLocked()I
    .locals 1

    #@0
    .prologue
    .line 9709
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@2
    return v0
.end method

.method public getDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    #@0
    .prologue
    .line 9624
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@2
    return-object v0
.end method

.method public getDischargeScreenOffCoulombCounter()Landroid/os/BatteryStats$LongCounter;
    .locals 1

    #@0
    .prologue
    .line 575
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2
    return-object v0
.end method

.method public getDischargeStartLevel()I
    .locals 1

    #@0
    .prologue
    .line 9692
    monitor-enter p0

    #@1
    .line 9693
    :try_start_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeStartLevelLocked()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@4
    move-result v0

    #@5
    monitor-exit p0

    #@6
    return v0

    #@7
    .line 9692
    :catchall_0
    move-exception v0

    #@8
    monitor-exit p0

    #@9
    throw v0
.end method

.method public getDischargeStartLevelLocked()I
    .locals 1

    #@0
    .prologue
    .line 9698
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@2
    return v0
.end method

.method public getEndPlatformVersion()Ljava/lang/String;
    .locals 1

    #@0
    .prologue
    .line 4862
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method public getEstimatedBatteryCapacity()I
    .locals 1

    #@0
    .prologue
    .line 585
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@2
    return v0
.end method

.method public getFlashlightOnCount(I)J
    .locals 2
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4817
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@5
    move-result v0

    #@6
    int-to-long v0, v0

    #@7
    return-wide v0
.end method

.method public getFlashlightOnTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4812
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getGlobalWifiRunningTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4747
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getHighDischargeAmountSinceCharge()I
    .locals 3

    #@0
    .prologue
    .line 9725
    monitor-enter p0

    #@1
    .line 9726
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    #@3
    .line 9727
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@5
    if-eqz v1, :cond_0

    #@7
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@9
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@b
    if-ge v1, v2, :cond_0

    #@d
    .line 9728
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@f
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    sub-int/2addr v1, v2

    #@12
    add-int/2addr v0, v1

    #@13
    :cond_0
    monitor-exit p0

    #@14
    .line 9730
    return v0

    #@15
    .line 9725
    .end local v0    # "val":I
    :catchall_0
    move-exception v1

    #@16
    monitor-exit p0

    #@17
    throw v1
.end method

.method public getHistoryBaseTime()J
    .locals 2

    #@0
    .prologue
    .line 8110
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@2
    return-wide v0
.end method

.method public getHistoryStringPoolBytes()I
    .locals 2

    #@0
    .prologue
    .line 8067
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    #@2
    array-length v0, v0

    #@3
    mul-int/lit8 v0, v0, 0xc

    #@5
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    #@7
    mul-int/lit8 v1, v1, 0x2

    #@9
    add-int/2addr v0, v1

    #@a
    return v0
.end method

.method public getHistoryStringPoolSize()I
    .locals 1

    #@0
    .prologue
    .line 8060
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    #@2
    array-length v0, v0

    #@3
    return v0
.end method

.method public getHistoryTagPoolString(I)Ljava/lang/String;
    .locals 1
    .param p1, "index"    # I

    #@0
    .prologue
    .line 8072
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    #@2
    aget-object v0, v0, p1

    #@4
    return-object v0
.end method

.method public getHistoryTagPoolUid(I)I
    .locals 1
    .param p1, "index"    # I

    #@0
    .prologue
    .line 8077
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    #@2
    aget v0, v0, p1

    #@4
    return v0
.end method

.method public getHistoryTotalSize()I
    .locals 1

    #@0
    .prologue
    .line 8028
    const/high16 v0, 0x40000

    #@2
    return v0
.end method

.method public getHistoryUsedSize()I
    .locals 1

    #@0
    .prologue
    .line 8032
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@2
    invoke-virtual {v0}, Landroid/os/Parcel;->dataSize()I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public getInteractiveTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4616
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getIsOnBattery()Z
    .locals 1

    #@0
    .prologue
    .line 4870
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@2
    return v0
.end method

.method public getKernelWakelockStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map",
            "<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    .line 562
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@2
    return-object v0
.end method

.method public getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 3
    .param p1, "name"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2077
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@2
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@8
    .line 2078
    .local v0, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    #@a
    .line 2079
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@c
    .end local v0    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@10
    invoke-direct {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@13
    .line 2080
    .restart local v0    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@15
    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@18
    .line 2082
    :cond_0
    return-object v0
.end method

.method public getLongestDeviceIdleModeTime(I)J
    .locals 2
    .param p1, "mode"    # I

    #@0
    .prologue
    .line 4649
    packed-switch p1, :pswitch_data_0

    #@3
    .line 4655
    const-wide/16 v0, 0x0

    #@5
    return-wide v0

    #@6
    .line 4651
    :pswitch_0
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    #@8
    return-wide v0

    #@9
    .line 4653
    :pswitch_1
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    #@b
    return-wide v0

    #@c
    .line 4649
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public getLowDischargeAmountSinceCharge()I
    .locals 3

    #@0
    .prologue
    .line 9714
    monitor-enter p0

    #@1
    .line 9715
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    #@3
    .line 9716
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@5
    if-eqz v1, :cond_0

    #@7
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@9
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@b
    if-ge v1, v2, :cond_0

    #@d
    .line 9717
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@f
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@11
    sub-int/2addr v1, v2

    #@12
    add-int/lit8 v1, v1, -0x1

    #@14
    add-int/2addr v0, v1

    #@15
    :cond_0
    monitor-exit p0

    #@16
    .line 9719
    return v0

    #@17
    .line 9714
    .end local v0    # "val":I
    :catchall_0
    move-exception v1

    #@18
    monitor-exit p0

    #@19
    throw v1
.end method

.method public getMobileRadioActiveAdjustedTime(I)J
    .locals 2
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4731
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getMobileRadioActiveCount(I)I
    .locals 1
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4727
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public getMobileRadioActiveTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4723
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getMobileRadioActiveUnknownCount(I)I
    .locals 2
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4739
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    #@5
    move-result-wide v0

    #@6
    long-to-int v0, v0

    #@7
    return v0
.end method

.method public getMobileRadioActiveUnknownTime(I)J
    .locals 2
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4735
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    #@0
    .prologue
    .line 4792
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@2
    return-object v0
.end method

.method public getNetworkActivityBytes(II)J
    .locals 2
    .param p1, "type"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4832
    if-ltz p1, :cond_0

    #@2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@4
    array-length v0, v0

    #@5
    if-ge p1, v0, :cond_0

    #@7
    .line 4833
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@9
    aget-object v0, v0, p1

    #@b
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    #@e
    move-result-wide v0

    #@f
    return-wide v0

    #@10
    .line 4835
    :cond_0
    const-wide/16 v0, 0x0

    #@12
    return-wide v0
.end method

.method public getNetworkActivityPackets(II)J
    .locals 2
    .param p1, "type"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4841
    if-ltz p1, :cond_0

    #@2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@4
    array-length v0, v0

    #@5
    if-ge p1, v0, :cond_0

    #@7
    .line 4842
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@9
    aget-object v0, v0, p1

    #@b
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    #@e
    move-result-wide v0

    #@f
    return-wide v0

    #@10
    .line 4844
    :cond_0
    const-wide/16 v0, 0x0

    #@12
    return-wide v0
.end method

.method public getNextHistoryLocked(Landroid/os/BatteryStats$HistoryItem;)Z
    .locals 10
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    const/4 v6, 0x1

    #@1
    const/4 v7, 0x0

    #@2
    .line 8082
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@4
    invoke-virtual {v8}, Landroid/os/Parcel;->dataPosition()I

    #@7
    move-result v1

    #@8
    .line 8083
    .local v1, "pos":I
    if-nez v1, :cond_0

    #@a
    .line 8084
    invoke-virtual {p1}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    #@d
    .line 8086
    :cond_0
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@f
    invoke-virtual {v8}, Landroid/os/Parcel;->dataSize()I

    #@12
    move-result v8

    #@13
    if-lt v1, v8, :cond_1

    #@15
    move v0, v6

    #@16
    .line 8087
    .local v0, "end":Z
    :goto_0
    if-eqz v0, :cond_2

    #@18
    .line 8088
    return v7

    #@19
    .end local v0    # "end":Z
    :cond_1
    move v0, v7

    #@1a
    .line 8086
    goto :goto_0

    #@1b
    .line 8091
    .restart local v0    # "end":Z
    :cond_2
    iget-wide v2, p1, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@1d
    .line 8092
    .local v2, "lastRealtime":J
    iget-wide v4, p1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@1f
    .line 8093
    .local v4, "lastWalltime":J
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@21
    invoke-virtual {p0, v7, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V

    #@24
    .line 8094
    iget-byte v7, p1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    #@26
    const/4 v8, 0x5

    #@27
    if-eq v7, v8, :cond_3

    #@29
    .line 8095
    iget-byte v7, p1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    #@2b
    const/4 v8, 0x7

    #@2c
    if-eq v7, v8, :cond_3

    #@2e
    const-wide/16 v8, 0x0

    #@30
    cmp-long v7, v4, v8

    #@32
    if-eqz v7, :cond_3

    #@34
    .line 8096
    iget-wide v8, p1, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@36
    sub-long/2addr v8, v2

    #@37
    add-long/2addr v8, v4

    #@38
    iput-wide v8, p1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    #@3a
    .line 8098
    :cond_3
    return v6
.end method

.method public getNextMaxDailyDeadline()J
    .locals 2

    #@0
    .prologue
    .line 7970
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    #@2
    return-wide v0
.end method

.method public getNextMinDailyDeadline()J
    .locals 2

    #@0
    .prologue
    .line 7965
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    #@2
    return-wide v0
.end method

.method public getNextOldHistoryLocked(Landroid/os/BatteryStats$HistoryItem;)Z
    .locals 10
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    const-wide/16 v4, 0x0

    #@2
    const/4 v7, 0x1

    #@3
    const/4 v6, 0x0

    #@4
    .line 7989
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@6
    invoke-virtual {v1}, Landroid/os/Parcel;->dataPosition()I

    #@9
    move-result v1

    #@a
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@c
    invoke-virtual {v3}, Landroid/os/Parcel;->dataSize()I

    #@f
    move-result v3

    #@10
    if-lt v1, v3, :cond_2

    #@12
    move v8, v7

    #@13
    .line 7990
    .local v8, "end":Z
    :goto_0
    if-nez v8, :cond_0

    #@15
    .line 7991
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@17
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    #@19
    invoke-virtual {p0, v1, v3}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V

    #@1c
    .line 7992
    iget-boolean v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    #@1e
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    #@20
    iget-byte v1, v1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    #@22
    const/4 v9, 0x6

    #@23
    if-ne v1, v9, :cond_3

    #@25
    move v1, v7

    #@26
    :goto_1
    or-int/2addr v1, v3

    #@27
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    #@29
    .line 7994
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    #@2b
    .line 7995
    .local v0, "cur":Landroid/os/BatteryStats$HistoryItem;
    if-nez v0, :cond_5

    #@2d
    .line 7996
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    #@2f
    if-nez v1, :cond_1

    #@31
    if-eqz v8, :cond_4

    #@33
    .line 7999
    :cond_1
    :goto_2
    return v6

    #@34
    .end local v0    # "cur":Landroid/os/BatteryStats$HistoryItem;
    .end local v8    # "end":Z
    :cond_2
    move v8, v6

    #@35
    .line 7989
    goto :goto_0

    #@36
    .restart local v8    # "end":Z
    :cond_3
    move v1, v6

    #@37
    .line 7992
    goto :goto_1

    #@38
    .line 7997
    .restart local v0    # "cur":Landroid/os/BatteryStats$HistoryItem;
    :cond_4
    const-string/jumbo v1, "BatteryStatsImpl"

    #@3b
    const-string/jumbo v3, "Old history ends before new history!"

    #@3e
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@41
    goto :goto_2

    #@42
    .line 8001
    :cond_5
    invoke-virtual {p1, v0}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    #@45
    .line 8002
    iget-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    #@47
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    #@49
    .line 8003
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    #@4b
    if-nez v1, :cond_6

    #@4d
    .line 8004
    if-eqz v8, :cond_7

    #@4f
    .line 8005
    const-string/jumbo v1, "BatteryStatsImpl"

    #@52
    const-string/jumbo v3, "New history ends before old history!"

    #@55
    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@58
    .line 8017
    :cond_6
    :goto_3
    return v7

    #@59
    .line 8006
    :cond_7
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    #@5b
    invoke-virtual {p1, v1}, Landroid/os/BatteryStats$HistoryItem;->same(Landroid/os/BatteryStats$HistoryItem;)Z

    #@5e
    move-result v1

    #@5f
    if-nez v1, :cond_6

    #@61
    .line 8007
    new-instance v2, Lcom/android/internal/util/FastPrintWriter;

    #@63
    new-instance v1, Landroid/util/LogWriter;

    #@65
    const-string/jumbo v3, "BatteryStatsImpl"

    #@68
    const/4 v9, 0x5

    #@69
    invoke-direct {v1, v9, v3}, Landroid/util/LogWriter;-><init>(ILjava/lang/String;)V

    #@6c
    invoke-direct {v2, v1}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;)V

    #@6f
    .line 8008
    .local v2, "pw":Ljava/io/PrintWriter;
    const-string/jumbo v1, "Histories differ!"

    #@72
    invoke-virtual {v2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@75
    .line 8009
    const-string/jumbo v1, "Old history:"

    #@78
    invoke-virtual {v2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@7b
    .line 8010
    new-instance v1, Landroid/os/BatteryStats$HistoryPrinter;

    #@7d
    invoke-direct {v1}, Landroid/os/BatteryStats$HistoryPrinter;-><init>()V

    #@80
    move-object v3, p1

    #@81
    invoke-virtual/range {v1 .. v7}, Landroid/os/BatteryStats$HistoryPrinter;->printNextItem(Ljava/io/PrintWriter;Landroid/os/BatteryStats$HistoryItem;JZZ)V

    #@84
    .line 8011
    const-string/jumbo v1, "New history:"

    #@87
    invoke-virtual {v2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    #@8a
    .line 8012
    new-instance v1, Landroid/os/BatteryStats$HistoryPrinter;

    #@8c
    invoke-direct {v1}, Landroid/os/BatteryStats$HistoryPrinter;-><init>()V

    #@8f
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    #@91
    invoke-virtual/range {v1 .. v7}, Landroid/os/BatteryStats$HistoryPrinter;->printNextItem(Ljava/io/PrintWriter;Landroid/os/BatteryStats$HistoryItem;JZZ)V

    #@94
    .line 8014
    invoke-virtual {v2}, Ljava/io/PrintWriter;->flush()V

    #@97
    goto :goto_3
.end method

.method public getNumConnectivityChange(I)I
    .locals 2
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4679
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    #@2
    .line 4680
    .local v0, "val":I
    const/4 v1, 0x1

    #@3
    if-ne p1, v1, :cond_1

    #@5
    .line 4681
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    #@7
    sub-int/2addr v0, v1

    #@8
    .line 4685
    :cond_0
    :goto_0
    return v0

    #@9
    .line 4682
    :cond_1
    const/4 v1, 0x2

    #@a
    if-ne p1, v1, :cond_0

    #@c
    .line 4683
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUnpluggedNumConnectivityChange:I

    #@e
    sub-int/2addr v0, v1

    #@f
    goto :goto_0
.end method

.method public getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pkg"    # Ljava/lang/String;

    #@0
    .prologue
    .line 9824
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 9825
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7
    move-result-object v0

    #@8
    .line 9826
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    #@b
    move-result-object v1

    #@c
    return-object v1
.end method

.method public getParcelVersion()I
    .locals 1

    #@0
    .prologue
    .line 4866
    const/16 v0, 0x93

    #@2
    return v0
.end method

.method public getPhoneDataConnectionCount(II)I
    .locals 1
    .param p1, "dataType"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4719
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@7
    move-result v0

    #@8
    return v0
.end method

.method public getPhoneDataConnectionTime(IJI)J
    .locals 2
    .param p1, "dataType"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    #@0
    .prologue
    .line 4714
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@7
    move-result-wide v0

    #@8
    return-wide v0
.end method

.method public getPhoneOnCount(I)I
    .locals 1
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4693
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public getPhoneOnTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4689
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getPhoneSignalScanningTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4704
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getPhoneSignalStrengthCount(II)I
    .locals 1
    .param p1, "strengthBin"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4709
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@7
    move-result v0

    #@8
    return v0
.end method

.method public getPhoneSignalStrengthTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    #@0
    .prologue
    .line 4698
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@7
    move-result-wide v0

    #@8
    return-wide v0
.end method

.method public getPowerSaveModeEnabledCount(I)I
    .locals 1
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4624
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public getPowerSaveModeEnabledTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4620
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "name"    # Ljava/lang/String;

    #@0
    .prologue
    .line 9814
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 9815
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7
    move-result-object v0

    #@8
    .line 9816
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    #@b
    move-result-object v1

    #@c
    return-object v1
.end method

.method public getProcessWakeTime(IIJ)J
    .locals 7
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "realtime"    # J

    #@0
    .prologue
    const-wide/16 v2, 0x0

    #@2
    .line 3342
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@5
    move-result p1

    #@6
    .line 3343
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@8
    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@b
    move-result-object v1

    #@c
    check-cast v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@e
    .line 3344
    .local v1, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v1, :cond_1

    #@10
    .line 3345
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    #@12
    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@15
    move-result-object v0

    #@16
    check-cast v0, Landroid/os/BatteryStats$Uid$Pid;

    #@18
    .line 3346
    .local v0, "p":Landroid/os/BatteryStats$Uid$Pid;
    if-eqz v0, :cond_1

    #@1a
    .line 3347
    iget-wide v4, v0, Landroid/os/BatteryStats$Uid$Pid;->mWakeSumMs:J

    #@1c
    iget v6, v0, Landroid/os/BatteryStats$Uid$Pid;->mWakeNesting:I

    #@1e
    if-lez v6, :cond_0

    #@20
    iget-wide v2, v0, Landroid/os/BatteryStats$Uid$Pid;->mWakeStartMs:J

    #@22
    sub-long v2, p3, v2

    #@24
    :cond_0
    add-long/2addr v2, v4

    #@25
    return-wide v2

    #@26
    .line 3350
    .end local v0    # "p":Landroid/os/BatteryStats$Uid$Pid;
    :cond_1
    return-wide v2
.end method

.method public getScreenBrightnessTime(IJI)J
    .locals 2
    .param p1, "brightnessBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    #@0
    .prologue
    .line 4611
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@7
    move-result-wide v0

    #@8
    return-wide v0
.end method

.method public getScreenOnCount(I)I
    .locals 1
    .param p1, "which"    # I

    #@0
    .prologue
    .line 4606
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@5
    move-result v0

    #@6
    return v0
.end method

.method public getScreenOnTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4602
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "name"    # Ljava/lang/String;

    #@0
    .prologue
    .line 9834
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 9835
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7
    move-result-object v0

    #@8
    .line 9836
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    #@b
    move-result-object v1

    #@c
    return-object v1
.end method

.method public getStartClockTime()J
    .locals 8

    #@0
    .prologue
    .line 4849
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@3
    move-result-wide v2

    #@4
    .line 4850
    .local v2, "currentTime":J
    invoke-virtual {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->ensureStartClockTime(J)Z

    #@7
    move-result v0

    #@8
    if-eqz v0, :cond_0

    #@a
    .line 4851
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@f
    move-result-wide v4

    #@10
    .line 4852
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@12
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@15
    move-result-wide v6

    #@16
    move-object v1, p0

    #@17
    .line 4851
    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->recordCurrentTimeChangeLocked(JJJ)V

    #@1a
    .line 4854
    :cond_0
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    #@1c
    return-wide v0
.end method

.method public getStartCount()I
    .locals 1

    #@0
    .prologue
    .line 8115
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@2
    return v0
.end method

.method public getStartPlatformVersion()Ljava/lang/String;
    .locals 1

    #@0
    .prologue
    .line 4858
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    #@2
    return-object v0
.end method

.method public getUidStats()Landroid/util/SparseArray;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/SparseArray",
            "<+",
            "Landroid/os/BatteryStats$Uid;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    .line 4874
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@2
    return-object v0
.end method

.method public getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .locals 2
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 9793
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@2
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@8
    .line 9794
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-nez v0, :cond_0

    #@a
    .line 9795
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@c
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-direct {v0, p0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    #@f
    .line 9796
    .restart local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@11
    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@14
    .line 9798
    :cond_0
    return-object v0
.end method

.method public getWakeupReasonStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map",
            "<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    #@0
    .prologue
    .line 570
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@2
    return-object v0
.end method

.method public getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 3
    .param p1, "name"    # Ljava/lang/String;

    #@0
    .prologue
    .line 2064
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@2
    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@5
    move-result-object v0

    #@6
    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@8
    .line 2065
    .local v0, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    #@a
    .line 2066
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@c
    .end local v0    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@10
    invoke-direct {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@13
    .line 2067
    .restart local v0    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@15
    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@18
    .line 2069
    :cond_0
    return-object v0
.end method

.method public getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    #@0
    .prologue
    .line 4787
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@2
    return-object v0
.end method

.method public getWifiOnTime(JI)J
    .locals 3
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    #@0
    .prologue
    .line 4743
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@5
    move-result-wide v0

    #@6
    return-wide v0
.end method

.method public getWifiSignalStrengthCount(II)I
    .locals 1
    .param p1, "strengthBin"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4777
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@7
    move-result v0

    #@8
    return v0
.end method

.method public getWifiSignalStrengthTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    #@0
    .prologue
    .line 4772
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@7
    move-result-wide v0

    #@8
    return-wide v0
.end method

.method public getWifiStateCount(II)I
    .locals 1
    .param p1, "wifiState"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4757
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@7
    move-result v0

    #@8
    return v0
.end method

.method public getWifiStateTime(IJI)J
    .locals 2
    .param p1, "wifiState"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    #@0
    .prologue
    .line 4752
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@7
    move-result-wide v0

    #@8
    return-wide v0
.end method

.method public getWifiSupplStateCount(II)I
    .locals 1
    .param p1, "state"    # I
    .param p2, "which"    # I

    #@0
    .prologue
    .line 4767
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    #@7
    move-result v0

    #@8
    return v0
.end method

.method public getWifiSupplStateTime(IJI)J
    .locals 2
    .param p1, "state"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    #@0
    .prologue
    .line 4762
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    aget-object v0, v0, p1

    #@4
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    #@7
    move-result-wide v0

    #@8
    return-wide v0
.end method

.method public hasBluetoothActivityReporting()Z
    .locals 1

    #@0
    .prologue
    .line 4797
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@2
    return v0
.end method

.method public hasModemActivityReporting()Z
    .locals 1

    #@0
    .prologue
    .line 4807
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@2
    return v0
.end method

.method public hasWifiActivityReporting()Z
    .locals 1

    #@0
    .prologue
    .line 4802
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@2
    return v0
.end method

.method initDischarge()V
    .locals 2

    #@0
    .prologue
    const/4 v1, 0x0

    #@1
    .line 8141
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    #@3
    .line 8142
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    #@5
    .line 8143
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    #@7
    .line 8144
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    #@9
    .line 8145
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    #@b
    .line 8146
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    #@d
    .line 8147
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@f
    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    #@12
    .line 8148
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@14
    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    #@17
    .line 8149
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@19
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    #@1c
    .line 8150
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1e
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    #@21
    .line 8140
    return-void
.end method

.method initTimes(JJ)V
    .locals 5
    .param p1, "uptime"    # J
    .param p3, "realtime"    # J

    #@0
    .prologue
    const-wide/16 v2, 0x0

    #@2
    .line 8131
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@5
    move-result-wide v0

    #@6
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    #@8
    .line 8132
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@a
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->init(JJ)V

    #@d
    .line 8133
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@f
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->init(JJ)V

    #@12
    .line 8134
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    #@14
    .line 8135
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    #@16
    .line 8136
    iput-wide p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    #@18
    .line 8137
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    #@1a
    .line 8130
    return-void
.end method

.method public isCharging()Z
    .locals 1

    #@0
    .prologue
    .line 8123
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    #@2
    return v0
.end method

.method public isOnBattery()Z
    .locals 1

    #@0
    .prologue
    .line 8119
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@2
    return v0
.end method

.method public isScreenOn()Z
    .locals 2

    #@0
    .prologue
    .line 8127
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@2
    const/4 v1, 0x2

    #@3
    if-ne v0, v1, :cond_0

    #@5
    const/4 v0, 0x1

    #@6
    :goto_0
    return v0

    #@7
    :cond_0
    const/4 v0, 0x0

    #@8
    goto :goto_0
.end method

.method public mapUid(I)I
    .locals 3
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 2947
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    #@2
    const/4 v2, -0x1

    #@3
    invoke-virtual {v1, p1, v2}, Landroid/util/SparseIntArray;->get(II)I

    #@6
    move-result v0

    #@7
    .line 2948
    .local v0, "isolated":I
    if-lez v0, :cond_0

    #@9
    .end local v0    # "isolated":I
    :goto_0
    return v0

    #@a
    .restart local v0    # "isolated":I
    :cond_0
    move v0, p1

    #@b
    goto :goto_0
.end method

.method public noteActivityPausedLocked(I)V
    .locals 4
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4071
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4072
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7
    move-result-object v0

    #@8
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@a
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@d
    move-result-wide v2

    #@e
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteActivityPausedLocked(J)V

    #@11
    .line 4070
    return-void
.end method

.method public noteActivityResumedLocked(I)V
    .locals 4
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4066
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4067
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7
    move-result-object v0

    #@8
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@a
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@d
    move-result-wide v2

    #@e
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteActivityResumedLocked(J)V

    #@11
    .line 4065
    return-void
.end method

.method public noteAlarmFinishLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    const/16 v6, 0x400d

    #@2
    .line 3090
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    #@4
    if-nez v0, :cond_0

    #@6
    .line 3091
    return-void

    #@7
    .line 3093
    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@a
    move-result p2

    #@b
    .line 3094
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@d
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@10
    move-result-wide v2

    #@11
    .line 3095
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@13
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@16
    move-result-wide v4

    #@17
    .line 3096
    .local v4, "uptime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@19
    const/4 v1, 0x0

    #@1a
    invoke-virtual {v0, v6, p1, p2, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@1d
    move-result v0

    #@1e
    if-nez v0, :cond_1

    #@20
    .line 3097
    return-void

    #@21
    :cond_1
    move-object v1, p0

    #@22
    move-object v7, p1

    #@23
    move v8, p2

    #@24
    .line 3099
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@27
    .line 3089
    return-void
.end method

.method public noteAlarmStartLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    const v6, 0x800d

    #@3
    .line 3077
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    #@5
    if-nez v0, :cond_0

    #@7
    .line 3078
    return-void

    #@8
    .line 3080
    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@b
    move-result p2

    #@c
    .line 3081
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@11
    move-result-wide v2

    #@12
    .line 3082
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@14
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@17
    move-result-wide v4

    #@18
    .line 3083
    .local v4, "uptime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@1a
    const/4 v1, 0x0

    #@1b
    invoke-virtual {v0, v6, p1, p2, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@1e
    move-result v0

    #@1f
    if-nez v0, :cond_1

    #@21
    .line 3084
    return-void

    #@22
    :cond_1
    move-object v1, p0

    #@23
    move-object v7, p1

    #@24
    move v8, p2

    #@25
    .line 3086
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@28
    .line 3076
    return-void
.end method

.method public noteAudioOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 3983
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@2
    if-nez v4, :cond_0

    #@4
    .line 3984
    return-void

    #@5
    .line 3986
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@8
    move-result p1

    #@9
    .line 3987
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@e
    move-result-wide v0

    #@f
    .line 3988
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@11
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@14
    move-result-wide v2

    #@15
    .line 3989
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@17
    add-int/lit8 v4, v4, -0x1

    #@19
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@1b
    if-nez v4, :cond_1

    #@1d
    .line 3990
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1f
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@21
    const v6, -0x400001

    #@24
    and-int/2addr v5, v6

    #@25
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@27
    .line 3993
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@2a
    .line 3994
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2c
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@2f
    .line 3996
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@32
    move-result-object v4

    #@33
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteAudioTurnedOffLocked(J)V

    #@36
    .line 3982
    return-void
.end method

.method public noteAudioOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 3968
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3969
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3970
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 3971
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@12
    if-nez v4, :cond_0

    #@14
    .line 3972
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@16
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@18
    const/high16 v6, 0x400000

    #@1a
    or-int/2addr v5, v6

    #@1b
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1d
    .line 3975
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 3976
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@25
    .line 3978
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@27
    add-int/lit8 v4, v4, 0x1

    #@29
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@2b
    .line 3979
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2e
    move-result-object v4

    #@2f
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteAudioTurnedOnLocked(J)V

    #@32
    .line 3967
    return-void
.end method

.method public noteBluetoothScanStartedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4197
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4198
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4199
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-direct {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStartedLocked(I)V

    #@e
    .line 4198
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4196
    :cond_0
    return-void
.end method

.method public noteBluetoothScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4219
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4220
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4221
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-direct {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStoppedLocked(I)V

    #@e
    .line 4220
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4218
    :cond_0
    return-void
.end method

.method public noteCameraOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4131
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@2
    if-nez v4, :cond_0

    #@4
    .line 4132
    return-void

    #@5
    .line 4134
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@8
    move-result p1

    #@9
    .line 4135
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@e
    move-result-wide v0

    #@f
    .line 4136
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@11
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@14
    move-result-wide v2

    #@15
    .line 4137
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@17
    add-int/lit8 v4, v4, -0x1

    #@19
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@1b
    if-nez v4, :cond_1

    #@1d
    .line 4138
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1f
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@21
    const v6, -0x200001

    #@24
    and-int/2addr v5, v6

    #@25
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@27
    .line 4141
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@2a
    .line 4142
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2c
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@2f
    .line 4144
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@32
    move-result-object v4

    #@33
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteCameraTurnedOffLocked(J)V

    #@36
    .line 4130
    return-void
.end method

.method public noteCameraOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4117
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4118
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4119
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4120
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@12
    add-int/lit8 v5, v4, 0x1

    #@14
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@16
    if-nez v4, :cond_0

    #@18
    .line 4121
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1a
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1c
    const/high16 v6, 0x200000

    #@1e
    or-int/2addr v5, v6

    #@1f
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@21
    .line 4124
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@24
    .line 4125
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@26
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@29
    .line 4127
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2c
    move-result-object v4

    #@2d
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteCameraTurnedOnLocked(J)V

    #@30
    .line 4116
    return-void
.end method

.method public noteChangeWakelockFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;ILandroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    .locals 16
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "newWs"    # Landroid/os/WorkSource;
    .param p7, "newPid"    # I
    .param p8, "newName"    # Ljava/lang/String;
    .param p9, "newHistoryName"    # Ljava/lang/String;
    .param p10, "newType"    # I
    .param p11, "newUnimportantForLogging"    # Z

    #@0
    .prologue
    .line 3262
    move-object/from16 v0, p0

    #@2
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@4
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@7
    move-result-wide v10

    #@8
    .line 3263
    .local v10, "elapsedRealtime":J
    move-object/from16 v0, p0

    #@a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v12

    #@10
    .line 3267
    .local v12, "uptime":J
    invoke-virtual/range {p6 .. p6}, Landroid/os/WorkSource;->size()I

    #@13
    move-result v2

    #@14
    .line 3268
    .local v2, "NN":I
    const/4 v15, 0x0

    #@15
    .local v15, "i":I
    :goto_0
    if-ge v15, v2, :cond_0

    #@17
    .line 3269
    move-object/from16 v0, p6

    #@19
    invoke-virtual {v0, v15}, Landroid/os/WorkSource;->get(I)I

    #@1c
    move-result v4

    #@1d
    move-object/from16 v3, p0

    #@1f
    move/from16 v5, p7

    #@21
    move-object/from16 v6, p8

    #@23
    move-object/from16 v7, p9

    #@25
    move/from16 v8, p10

    #@27
    move/from16 v9, p11

    #@29
    invoke-virtual/range {v3 .. v13}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILjava/lang/String;Ljava/lang/String;IZJJ)V

    #@2c
    .line 3268
    add-int/lit8 v15, v15, 0x1

    #@2e
    goto :goto_0

    #@2f
    .line 3272
    :cond_0
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    #@32
    move-result v14

    #@33
    .line 3273
    .local v14, "NO":I
    const/4 v15, 0x0

    #@34
    :goto_1
    if-ge v15, v14, :cond_1

    #@36
    .line 3274
    move-object/from16 v0, p1

    #@38
    invoke-virtual {v0, v15}, Landroid/os/WorkSource;->get(I)I

    #@3b
    move-result v5

    #@3c
    move-object/from16 v4, p0

    #@3e
    move/from16 v6, p2

    #@40
    move-object/from16 v7, p3

    #@42
    move-object/from16 v8, p4

    #@44
    move/from16 v9, p5

    #@46
    invoke-virtual/range {v4 .. v13}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILjava/lang/String;Ljava/lang/String;IJJ)V

    #@49
    .line 3273
    add-int/lit8 v15, v15, 0x1

    #@4b
    goto :goto_1

    #@4c
    .line 3261
    :cond_1
    return-void
.end method

.method public noteConnectivityChangedLocked(ILjava/lang/String;)V
    .locals 9
    .param p1, "type"    # I
    .param p2, "extra"    # Ljava/lang/String;

    #@0
    .prologue
    .line 3550
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v2

    #@6
    .line 3551
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v4

    #@c
    .line 3552
    .local v4, "uptime":J
    const/16 v6, 0x9

    #@e
    move-object v1, p0

    #@f
    move-object v7, p2

    #@10
    move v8, p1

    #@11
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@14
    .line 3554
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    #@16
    add-int/lit8 v0, v0, 0x1

    #@18
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    #@1a
    .line 3549
    return-void
.end method

.method public noteCurrentTimeChangedLocked()V
    .locals 8

    #@0
    .prologue
    .line 2974
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@3
    move-result-wide v2

    #@4
    .line 2975
    .local v2, "currentTime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v4

    #@a
    .line 2976
    .local v4, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v6

    #@10
    .local v6, "uptime":J
    move-object v1, p0

    #@11
    .line 2977
    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->recordCurrentTimeChangeLocked(JJJ)V

    #@14
    .line 2978
    invoke-virtual {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->ensureStartClockTime(J)Z

    #@17
    .line 2973
    return-void
.end method

.method public noteDeviceIdleModeLocked(ILjava/lang/String;I)V
    .locals 13
    .param p1, "mode"    # I
    .param p2, "activeReason"    # Ljava/lang/String;
    .param p3, "activeUid"    # I

    #@0
    .prologue
    .line 3620
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v2

    #@6
    .line 3621
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v4

    #@c
    .line 3622
    .local v4, "uptime":J
    const/4 v1, 0x2

    #@d
    if-ne p1, v1, :cond_a

    #@f
    const/4 v0, 0x1

    #@10
    .line 3623
    .local v0, "nowIdling":Z
    :goto_0
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    #@12
    if-eqz v1, :cond_0

    #@14
    if-eqz v0, :cond_b

    #@16
    .line 3628
    :cond_0
    :goto_1
    const/4 v1, 0x1

    #@17
    if-ne p1, v1, :cond_c

    #@19
    const/4 v9, 0x1

    #@1a
    .line 3629
    .local v9, "nowLightIdling":Z
    :goto_2
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    #@1c
    if-eqz v1, :cond_1

    #@1e
    if-eqz v9, :cond_d

    #@20
    .line 3634
    :cond_1
    :goto_3
    if-eqz p2, :cond_3

    #@22
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    #@24
    if-nez v1, :cond_2

    #@26
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    #@28
    if-eqz v1, :cond_3

    #@2a
    .line 3635
    :cond_2
    const/16 v6, 0xa

    #@2c
    move-object v1, p0

    #@2d
    move-object v7, p2

    #@2e
    move/from16 v8, p3

    #@30
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@33
    .line 3638
    :cond_3
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    #@35
    if-eq v1, v0, :cond_4

    #@37
    .line 3639
    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    #@39
    .line 3640
    if-eqz v0, :cond_e

    #@3b
    const/16 v12, 0x8

    #@3d
    .line 3641
    .local v12, "stepState":I
    :goto_4
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@3f
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@41
    and-int/lit8 v6, v6, 0x8

    #@43
    xor-int/2addr v6, v12

    #@44
    or-int/2addr v1, v6

    #@45
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@47
    .line 3642
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@49
    and-int/lit8 v1, v1, -0x9

    #@4b
    or-int/2addr v1, v12

    #@4c
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@4e
    .line 3643
    if-eqz v0, :cond_f

    #@50
    .line 3644
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@52
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@55
    .line 3649
    .end local v12    # "stepState":I
    :cond_4
    :goto_5
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    #@57
    if-eq v1, v9, :cond_5

    #@59
    .line 3650
    iput-boolean v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    #@5b
    .line 3651
    if-eqz v9, :cond_10

    #@5d
    .line 3652
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@5f
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@62
    .line 3657
    :cond_5
    :goto_6
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    #@64
    if-eq v1, p1, :cond_9

    #@66
    .line 3658
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@68
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@6a
    iget v6, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@6c
    const v7, -0x6000001

    #@6f
    and-int/2addr v6, v7

    #@70
    .line 3659
    shl-int/lit8 v7, p1, 0x19

    #@72
    .line 3658
    or-int/2addr v6, v7

    #@73
    iput v6, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@75
    .line 3662
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@78
    .line 3663
    iget-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    #@7a
    sub-long v10, v2, v6

    #@7c
    .line 3664
    .local v10, "lastDuration":J
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    #@7e
    .line 3665
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    #@80
    const/4 v6, 0x1

    #@81
    if-ne v1, v6, :cond_11

    #@83
    .line 3666
    iget-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    #@85
    cmp-long v1, v10, v6

    #@87
    if-lez v1, :cond_6

    #@89
    .line 3667
    iput-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    #@8b
    .line 3669
    :cond_6
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@8d
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@90
    .line 3676
    :cond_7
    :goto_7
    const/4 v1, 0x1

    #@91
    if-ne p1, v1, :cond_13

    #@93
    .line 3677
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@95
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@98
    .line 3681
    :cond_8
    :goto_8
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    #@9a
    .line 3619
    .end local v10    # "lastDuration":J
    :cond_9
    return-void

    #@9b
    .line 3622
    .end local v0    # "nowIdling":Z
    .end local v9    # "nowLightIdling":Z
    :cond_a
    const/4 v0, 0x0

    #@9c
    .restart local v0    # "nowIdling":Z
    goto/16 :goto_0

    #@9e
    .line 3623
    :cond_b
    if-nez p2, :cond_0

    #@a0
    .line 3626
    const/4 v0, 0x1

    #@a1
    goto/16 :goto_1

    #@a3
    .line 3628
    :cond_c
    const/4 v9, 0x0

    #@a4
    .restart local v9    # "nowLightIdling":Z
    goto/16 :goto_2

    #@a6
    .line 3629
    :cond_d
    if-nez v0, :cond_1

    #@a8
    if-nez p2, :cond_1

    #@aa
    .line 3632
    const/4 v9, 0x1

    #@ab
    goto/16 :goto_3

    #@ad
    .line 3640
    :cond_e
    const/4 v12, 0x0

    #@ae
    .restart local v12    # "stepState":I
    goto :goto_4

    #@af
    .line 3646
    :cond_f
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@b1
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@b4
    goto :goto_5

    #@b5
    .line 3654
    .end local v12    # "stepState":I
    :cond_10
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@b7
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@ba
    goto :goto_6

    #@bb
    .line 3670
    .restart local v10    # "lastDuration":J
    :cond_11
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    #@bd
    const/4 v6, 0x2

    #@be
    if-ne v1, v6, :cond_7

    #@c0
    .line 3671
    iget-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    #@c2
    cmp-long v1, v10, v6

    #@c4
    if-lez v1, :cond_12

    #@c6
    .line 3672
    iput-wide v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    #@c8
    .line 3674
    :cond_12
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@ca
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@cd
    goto :goto_7

    #@ce
    .line 3678
    :cond_13
    const/4 v1, 0x2

    #@cf
    if-ne p1, v1, :cond_8

    #@d1
    .line 3679
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@d3
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@d6
    goto :goto_8
.end method

.method public noteEventLocked(ILjava/lang/String;I)V
    .locals 9
    .param p1, "code"    # I
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "uid"    # I

    #@0
    .prologue
    .line 2952
    invoke-virtual {p0, p3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p3

    #@4
    .line 2953
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@6
    const/4 v1, 0x0

    #@7
    invoke-virtual {v0, p1, p2, p3, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@a
    move-result v0

    #@b
    if-nez v0, :cond_0

    #@d
    .line 2954
    return-void

    #@e
    .line 2956
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@10
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@13
    move-result-wide v2

    #@14
    .line 2957
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@16
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@19
    move-result-wide v4

    #@1a
    .local v4, "uptime":J
    move-object v1, p0

    #@1b
    move v6, p1

    #@1c
    move-object v7, p2

    #@1d
    move v8, p3

    #@1e
    .line 2958
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@21
    .line 2951
    return-void
.end method

.method public noteFlashlightOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4100
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@2
    if-nez v4, :cond_0

    #@4
    .line 4101
    return-void

    #@5
    .line 4103
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@8
    move-result p1

    #@9
    .line 4104
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@e
    move-result-wide v0

    #@f
    .line 4105
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@11
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@14
    move-result-wide v2

    #@15
    .line 4106
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@17
    add-int/lit8 v4, v4, -0x1

    #@19
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@1b
    if-nez v4, :cond_1

    #@1d
    .line 4107
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1f
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@21
    const v6, -0x8000001

    #@24
    and-int/2addr v5, v6

    #@25
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@27
    .line 4110
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@2a
    .line 4111
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2c
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@2f
    .line 4113
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@32
    move-result-object v4

    #@33
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFlashlightTurnedOffLocked(J)V

    #@36
    .line 4099
    return-void
.end method

.method public noteFlashlightOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4086
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4087
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4088
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4089
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@12
    add-int/lit8 v5, v4, 0x1

    #@14
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@16
    if-nez v4, :cond_0

    #@18
    .line 4090
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1a
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1c
    const/high16 v6, 0x8000000

    #@1e
    or-int/2addr v5, v6

    #@1f
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@21
    .line 4093
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@24
    .line 4094
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@26
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@29
    .line 4096
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2c
    move-result-object v4

    #@2d
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFlashlightTurnedOnLocked(J)V

    #@30
    .line 4085
    return-void
.end method

.method public noteFullWifiLockAcquiredFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4495
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4496
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4497
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockAcquiredLocked(I)V

    #@e
    .line 4496
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4494
    :cond_0
    return-void
.end method

.method public noteFullWifiLockAcquiredLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4395
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4396
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4397
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4398
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@12
    if-nez v4, :cond_0

    #@14
    .line 4399
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@16
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@18
    const/high16 v6, 0x10000000

    #@1a
    or-int/2addr v5, v6

    #@1b
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1d
    .line 4402
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 4404
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@22
    add-int/lit8 v4, v4, 0x1

    #@24
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@26
    .line 4405
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@29
    move-result-object v4

    #@2a
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFullWifiLockAcquiredLocked(J)V

    #@2d
    .line 4394
    return-void
.end method

.method public noteFullWifiLockReleasedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4502
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4503
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4504
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockReleasedLocked(I)V

    #@e
    .line 4503
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4501
    :cond_0
    return-void
.end method

.method public noteFullWifiLockReleasedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4409
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4410
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4411
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4412
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@12
    add-int/lit8 v4, v4, -0x1

    #@14
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@16
    .line 4413
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    #@18
    if-nez v4, :cond_0

    #@1a
    .line 4414
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1c
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1e
    const v6, -0x10000001

    #@21
    and-int/2addr v5, v6

    #@22
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@24
    .line 4417
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@27
    .line 4419
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2a
    move-result-object v4

    #@2b
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFullWifiLockReleasedLocked(J)V

    #@2e
    .line 4408
    return-void
.end method

.method public noteInteractiveLocked(Z)V
    .locals 3
    .param p1, "interactive"    # Z

    #@0
    .prologue
    .line 3537
    iget-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    #@2
    if-eq v2, p1, :cond_0

    #@4
    .line 3538
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3539
    .local v0, "elapsedRealtime":J
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    #@c
    .line 3541
    if-eqz p1, :cond_1

    #@e
    .line 3542
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@10
    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@13
    .line 3536
    .end local v0    # "elapsedRealtime":J
    :cond_0
    :goto_0
    return-void

    #@14
    .line 3544
    .restart local v0    # "elapsedRealtime":J
    :cond_1
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@16
    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@19
    goto :goto_0
.end method

.method public noteJobFinishLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    const/16 v6, 0x4006

    #@2
    .line 3066
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@5
    move-result p2

    #@6
    .line 3067
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@b
    move-result-wide v2

    #@c
    .line 3068
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@11
    move-result-wide v4

    #@12
    .line 3069
    .local v4, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@15
    move-result-object v0

    #@16
    invoke-virtual {v0, p1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopJobLocked(Ljava/lang/String;J)V

    #@19
    .line 3070
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@1b
    const/4 v1, 0x0

    #@1c
    invoke-virtual {v0, v6, p1, p2, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@1f
    move-result v0

    #@20
    if-nez v0, :cond_0

    #@22
    .line 3071
    return-void

    #@23
    :cond_0
    move-object v1, p0

    #@24
    move-object v7, p1

    #@25
    move v8, p2

    #@26
    .line 3073
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@29
    .line 3065
    return-void
.end method

.method public noteJobStartLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    const v6, 0x8006

    #@3
    .line 3055
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@6
    move-result p2

    #@7
    .line 3056
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@9
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@c
    move-result-wide v2

    #@d
    .line 3057
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@f
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@12
    move-result-wide v4

    #@13
    .line 3058
    .local v4, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@16
    move-result-object v0

    #@17
    invoke-virtual {v0, p1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartJobLocked(Ljava/lang/String;J)V

    #@1a
    .line 3059
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@1c
    const/4 v1, 0x0

    #@1d
    invoke-virtual {v0, v6, p1, p2, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@20
    move-result v0

    #@21
    if-nez v0, :cond_0

    #@23
    .line 3060
    return-void

    #@24
    :cond_0
    move-object v1, p0

    #@25
    move-object v7, p1

    #@26
    move v8, p2

    #@27
    .line 3062
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@2a
    .line 3054
    return-void
.end method

.method public noteMobileRadioPowerState(IJI)V
    .locals 12
    .param p1, "powerState"    # I
    .param p2, "timestampNs"    # J
    .param p4, "uid"    # I

    #@0
    .prologue
    .line 3558
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v2

    #@6
    .line 3559
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v8

    #@c
    .line 3560
    .local v8, "uptime":J
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    #@e
    if-eq v1, p1, :cond_0

    #@10
    .line 3563
    const/4 v1, 0x2

    #@11
    if-eq p1, v1, :cond_1

    #@13
    .line 3564
    const/4 v1, 0x3

    #@14
    if-ne p1, v1, :cond_2

    #@16
    const/4 v0, 0x1

    #@17
    .line 3565
    .local v0, "active":Z
    :goto_0
    if-eqz v0, :cond_3

    #@19
    .line 3566
    const-wide/32 v10, 0xf4240

    #@1c
    div-long v6, p2, v10

    #@1e
    .local v6, "realElapsedRealtimeMs":J
    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveStartTime:J

    #@20
    .line 3567
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@22
    iget v10, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@24
    const/high16 v11, 0x2000000

    #@26
    or-int/2addr v10, v11

    #@27
    iput v10, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@29
    .line 3583
    :goto_1
    invoke-virtual {p0, v2, v3, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@2c
    .line 3584
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    #@2e
    .line 3585
    if-eqz v0, :cond_6

    #@30
    .line 3586
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@32
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@35
    .line 3587
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@37
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@3a
    .line 3557
    .end local v0    # "active":Z
    .end local v6    # "realElapsedRealtimeMs":J
    :cond_0
    :goto_2
    return-void

    #@3b
    .line 3563
    :cond_1
    const/4 v0, 0x1

    #@3c
    goto :goto_0

    #@3d
    .line 3564
    :cond_2
    const/4 v0, 0x0

    #@3e
    goto :goto_0

    #@3f
    .line 3569
    .restart local v0    # "active":Z
    :cond_3
    const-wide/32 v10, 0xf4240

    #@42
    div-long v6, p2, v10

    #@44
    .line 3570
    .restart local v6    # "realElapsedRealtimeMs":J
    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveStartTime:J

    #@46
    .line 3571
    .local v4, "lastUpdateTimeMs":J
    cmp-long v1, v6, v4

    #@48
    if-gez v1, :cond_5

    #@4a
    .line 3572
    const-string/jumbo v1, "BatteryStatsImpl"

    #@4d
    new-instance v10, Ljava/lang/StringBuilder;

    #@4f
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@52
    const-string/jumbo v11, "Data connection inactive timestamp "

    #@55
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@58
    move-result-object v10

    #@59
    invoke-virtual {v10, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@5c
    move-result-object v10

    #@5d
    .line 3573
    const-string/jumbo v11, " is before start time "

    #@60
    .line 3572
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@63
    move-result-object v10

    #@64
    invoke-virtual {v10, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    #@67
    move-result-object v10

    #@68
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@6b
    move-result-object v10

    #@6c
    invoke-static {v1, v10}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    #@6f
    .line 3574
    move-wide v6, v2

    #@70
    .line 3579
    :cond_4
    :goto_3
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@72
    iget v10, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@74
    const v11, -0x2000001

    #@77
    and-int/2addr v10, v11

    #@78
    iput v10, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@7a
    goto :goto_1

    #@7b
    .line 3575
    :cond_5
    cmp-long v1, v6, v2

    #@7d
    if-gez v1, :cond_4

    #@7f
    .line 3576
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@81
    sub-long v10, v2, v6

    #@83
    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@86
    goto :goto_3

    #@87
    .line 3589
    .end local v4    # "lastUpdateTimeMs":J
    :cond_6
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@89
    invoke-virtual {v1, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@8c
    .line 3590
    const/4 v1, 0x0

    #@8d
    invoke-virtual {p0, v6, v7, v1}, Lcom/android/internal/os/BatteryStatsImpl;->updateMobileRadioStateLocked(JLandroid/telephony/ModemActivityInfo;)V

    #@90
    .line 3591
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@92
    invoke-virtual {v1, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@95
    goto :goto_2
.end method

.method public noteNetworkInterfaceTypeLocked(Ljava/lang/String;I)V
    .locals 1
    .param p1, "iface"    # Ljava/lang/String;
    .param p2, "networkType"    # I

    #@0
    .prologue
    .line 4576
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    #@3
    move-result v0

    #@4
    if-eqz v0, :cond_0

    #@6
    return-void

    #@7
    .line 4577
    :cond_0
    invoke-static {p2}, Landroid/net/ConnectivityManager;->isNetworkTypeMobile(I)Z

    #@a
    move-result v0

    #@b
    if-eqz v0, :cond_1

    #@d
    .line 4578
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@f
    invoke-static {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    #@12
    move-result-object v0

    #@13
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@15
    .line 4584
    :goto_0
    invoke-static {p2}, Landroid/net/ConnectivityManager;->isNetworkTypeWifi(I)Z

    #@18
    move-result v0

    #@19
    if-eqz v0, :cond_2

    #@1b
    .line 4585
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@1d
    invoke-static {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    #@20
    move-result-object v0

    #@21
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@23
    .line 4575
    :goto_1
    return-void

    #@24
    .line 4581
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@26
    invoke-static {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    #@29
    move-result-object v0

    #@2a
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@2c
    goto :goto_0

    #@2d
    .line 4588
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@2f
    invoke-static {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    #@32
    move-result-object v0

    #@33
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@35
    goto :goto_1
.end method

.method public noteNetworkStatsEnabledLocked()V
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x0

    #@1
    .line 4597
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@6
    move-result-wide v0

    #@7
    invoke-virtual {p0, v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->updateMobileRadioStateLocked(JLandroid/telephony/ModemActivityInfo;)V

    #@a
    .line 4598
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->updateWifiStateLocked(Landroid/net/wifi/WifiActivityEnergyInfo;)V

    #@d
    .line 4593
    return-void
.end method

.method public notePackageInstalledLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "pkgName"    # Ljava/lang/String;
    .param p2, "versionCode"    # I

    #@0
    .prologue
    .line 3686
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v2

    #@6
    .line 3687
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v4

    #@c
    .line 3688
    .local v4, "uptime":J
    const/16 v6, 0xb

    #@e
    move-object v1, p0

    #@f
    move-object v7, p1

    #@10
    move v8, p2

    #@11
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@14
    .line 3690
    new-instance v0, Landroid/os/BatteryStats$PackageChange;

    #@16
    invoke-direct {v0}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    #@19
    .line 3691
    .local v0, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-object p1, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    #@1b
    .line 3692
    const/4 v1, 0x1

    #@1c
    iput-boolean v1, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    #@1e
    .line 3693
    iput p2, v0, Landroid/os/BatteryStats$PackageChange;->mVersionCode:I

    #@20
    .line 3694
    invoke-direct {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    #@23
    .line 3685
    return-void
.end method

.method public notePackageUninstalledLocked(Ljava/lang/String;)V
    .locals 9
    .param p1, "pkgName"    # Ljava/lang/String;

    #@0
    .prologue
    .line 3698
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v2

    #@6
    .line 3699
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v4

    #@c
    .line 3700
    .local v4, "uptime":J
    const/16 v6, 0xc

    #@e
    .line 3701
    const/4 v8, 0x0

    #@f
    move-object v1, p0

    #@10
    move-object v7, p1

    #@11
    .line 3700
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@14
    .line 3702
    new-instance v0, Landroid/os/BatteryStats$PackageChange;

    #@16
    invoke-direct {v0}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    #@19
    .line 3703
    .local v0, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-object p1, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    #@1b
    .line 3704
    const/4 v1, 0x1

    #@1c
    iput-boolean v1, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    #@1e
    .line 3705
    invoke-direct {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    #@21
    .line 3697
    return-void
.end method

.method public notePhoneDataConnectionStateLocked(IZ)V
    .locals 8
    .param p1, "dataType"    # I
    .param p2, "hasData"    # Z

    #@0
    .prologue
    .line 3868
    const/4 v0, 0x0

    #@1
    .line 3869
    .local v0, "bin":I
    if-eqz p2, :cond_0

    #@3
    .line 3870
    packed-switch p1, :pswitch_data_0

    #@6
    .line 3917
    const/16 v0, 0x10

    #@8
    .line 3922
    :cond_0
    :goto_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    #@a
    if-eq v1, v0, :cond_2

    #@c
    .line 3923
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@11
    move-result-wide v2

    #@12
    .line 3924
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@14
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@17
    move-result-wide v4

    #@18
    .line 3925
    .local v4, "uptime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1a
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1c
    iget v6, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1e
    and-int/lit16 v6, v6, -0x3e01

    #@20
    .line 3926
    shl-int/lit8 v7, v0, 0x9

    #@22
    .line 3925
    or-int/2addr v6, v7

    #@23
    iput v6, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@25
    .line 3929
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@28
    .line 3930
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    #@2a
    if-ltz v1, :cond_1

    #@2c
    .line 3931
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2e
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    #@30
    aget-object v1, v1, v6

    #@32
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@35
    .line 3934
    :cond_1
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    #@37
    .line 3935
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@39
    aget-object v1, v1, v0

    #@3b
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@3e
    .line 3867
    .end local v2    # "elapsedRealtime":J
    .end local v4    # "uptime":J
    :cond_2
    return-void

    #@3f
    .line 3872
    :pswitch_0
    const/4 v0, 0x2

    #@40
    .line 3873
    goto :goto_0

    #@41
    .line 3875
    :pswitch_1
    const/4 v0, 0x1

    #@42
    .line 3876
    goto :goto_0

    #@43
    .line 3878
    :pswitch_2
    const/4 v0, 0x3

    #@44
    .line 3879
    goto :goto_0

    #@45
    .line 3881
    :pswitch_3
    const/4 v0, 0x4

    #@46
    .line 3882
    goto :goto_0

    #@47
    .line 3884
    :pswitch_4
    const/4 v0, 0x5

    #@48
    .line 3885
    goto :goto_0

    #@49
    .line 3887
    :pswitch_5
    const/4 v0, 0x6

    #@4a
    .line 3888
    goto :goto_0

    #@4b
    .line 3890
    :pswitch_6
    const/4 v0, 0x7

    #@4c
    .line 3891
    goto :goto_0

    #@4d
    .line 3893
    :pswitch_7
    const/16 v0, 0x8

    #@4f
    .line 3894
    goto :goto_0

    #@50
    .line 3896
    :pswitch_8
    const/16 v0, 0x9

    #@52
    .line 3897
    goto :goto_0

    #@53
    .line 3899
    :pswitch_9
    const/16 v0, 0xa

    #@55
    .line 3900
    goto :goto_0

    #@56
    .line 3902
    :pswitch_a
    const/16 v0, 0xb

    #@58
    .line 3903
    goto :goto_0

    #@59
    .line 3905
    :pswitch_b
    const/16 v0, 0xc

    #@5b
    .line 3906
    goto :goto_0

    #@5c
    .line 3908
    :pswitch_c
    const/16 v0, 0xd

    #@5e
    .line 3909
    goto :goto_0

    #@5f
    .line 3911
    :pswitch_d
    const/16 v0, 0xe

    #@61
    .line 3912
    goto :goto_0

    #@62
    .line 3914
    :pswitch_e
    const/16 v0, 0xf

    #@64
    .line 3915
    goto :goto_0

    #@65
    .line 3870
    nop

    #@66
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
        :pswitch_2
        :pswitch_3
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_7
        :pswitch_8
        :pswitch_9
        :pswitch_a
        :pswitch_b
        :pswitch_c
        :pswitch_d
        :pswitch_e
    .end packed-switch
.end method

.method public notePhoneOffLocked()V
    .locals 7

    #@0
    .prologue
    .line 3729
    iget-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    #@2
    if-eqz v4, :cond_0

    #@4
    .line 3730
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3731
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 3732
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@12
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@14
    const v6, -0x800001

    #@17
    and-int/2addr v5, v6

    #@18
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1a
    .line 3735
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1d
    .line 3736
    const/4 v4, 0x0

    #@1e
    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    #@20
    .line 3737
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@25
    .line 3728
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public notePhoneOnLocked()V
    .locals 7

    #@0
    .prologue
    .line 3716
    iget-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    #@2
    if-nez v4, :cond_0

    #@4
    .line 3717
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3718
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 3719
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@12
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@14
    const/high16 v6, 0x800000

    #@16
    or-int/2addr v5, v6

    #@17
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@19
    .line 3722
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1c
    .line 3723
    const/4 v4, 0x1

    #@1d
    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    #@1f
    .line 3724
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@21
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@24
    .line 3715
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public notePhoneSignalStrengthLocked(Landroid/telephony/SignalStrength;)V
    .locals 3
    .param p1, "signalStrength"    # Landroid/telephony/SignalStrength;

    #@0
    .prologue
    .line 3863
    invoke-virtual {p1}, Landroid/telephony/SignalStrength;->getLevel()I

    #@3
    move-result v0

    #@4
    .line 3864
    .local v0, "bin":I
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    #@6
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    #@8
    invoke-direct {p0, v1, v2, v0}, Lcom/android/internal/os/BatteryStatsImpl;->updateAllPhoneStateLocked(III)V

    #@b
    .line 3861
    return-void
.end method

.method public notePhoneStateLocked(II)V
    .locals 1
    .param p1, "state"    # I
    .param p2, "simState"    # I

    #@0
    .prologue
    .line 3858
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    #@2
    invoke-direct {p0, p1, p2, v0}, Lcom/android/internal/os/BatteryStatsImpl;->updateAllPhoneStateLocked(III)V

    #@5
    .line 3857
    return-void
.end method

.method public notePowerSaveMode(Z)V
    .locals 8
    .param p1, "enabled"    # Z

    #@0
    .prologue
    .line 3597
    iget-boolean v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    #@2
    if-eq v3, p1, :cond_0

    #@4
    .line 3598
    if-eqz p1, :cond_1

    #@6
    const/4 v2, 0x4

    #@7
    .line 3599
    .local v2, "stepState":I
    :goto_0
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@9
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@b
    and-int/lit8 v6, v6, 0x4

    #@d
    xor-int/2addr v6, v2

    #@e
    or-int/2addr v3, v6

    #@f
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@11
    .line 3600
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@13
    and-int/lit8 v3, v3, -0x5

    #@15
    or-int/2addr v3, v2

    #@16
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@18
    .line 3601
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@1a
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@1d
    move-result-wide v0

    #@1e
    .line 3602
    .local v0, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@20
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@23
    move-result-wide v4

    #@24
    .line 3603
    .local v4, "uptime":J
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    #@26
    .line 3604
    if-eqz p1, :cond_2

    #@28
    .line 3605
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@2a
    iget v6, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@2c
    const/high16 v7, -0x80000000

    #@2e
    or-int/2addr v6, v7

    #@2f
    iput v6, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@31
    .line 3608
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@33
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@36
    .line 3615
    :goto_1
    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@39
    .line 3596
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "stepState":I
    .end local v4    # "uptime":J
    :cond_0
    return-void

    #@3a
    .line 3598
    :cond_1
    const/4 v2, 0x0

    #@3b
    .restart local v2    # "stepState":I
    goto :goto_0

    #@3c
    .line 3610
    .restart local v0    # "elapsedRealtime":J
    .restart local v4    # "uptime":J
    :cond_2
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@3e
    iget v6, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@40
    const v7, 0x7fffffff

    #@43
    and-int/2addr v6, v7

    #@44
    iput v6, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@46
    .line 3613
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@48
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@4b
    goto :goto_1
.end method

.method public noteProcessAnrLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    .line 3007
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p2

    #@4
    .line 3008
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    #@7
    move-result v1

    #@8
    if-eqz v1, :cond_0

    #@a
    .line 3009
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@d
    move-result-object v0

    #@e
    .line 3010
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    #@11
    move-result-object v1

    #@12
    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incNumAnrsLocked()V

    #@15
    .line 3006
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    return-void
.end method

.method public noteProcessCrashLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    .line 2999
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p2

    #@4
    .line 3000
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    #@7
    move-result v1

    #@8
    if-eqz v1, :cond_0

    #@a
    .line 3001
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@d
    move-result-object v0

    #@e
    .line 3002
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    #@11
    move-result-object v1

    #@12
    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incNumCrashesLocked()V

    #@15
    .line 2998
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    return-void
.end method

.method public noteProcessDiedLocked(II)V
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pid"    # I

    #@0
    .prologue
    .line 3334
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3335
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@6
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@9
    move-result-object v0

    #@a
    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@c
    .line 3336
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    #@e
    .line 3337
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    #@10
    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->remove(I)V

    #@13
    .line 3333
    :cond_0
    return-void
.end method

.method public noteProcessFinishLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    const/16 v6, 0x4001

    #@2
    .line 3020
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@5
    move-result p2

    #@6
    .line 3021
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@8
    const/4 v1, 0x0

    #@9
    invoke-virtual {v0, v6, p1, p2, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@c
    move-result v0

    #@d
    if-nez v0, :cond_0

    #@f
    .line 3022
    return-void

    #@10
    .line 3024
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    #@12
    if-nez v0, :cond_1

    #@14
    .line 3025
    return-void

    #@15
    .line 3027
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@17
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@1a
    move-result-wide v2

    #@1b
    .line 3028
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@1d
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@20
    move-result-wide v4

    #@21
    .local v4, "uptime":J
    move-object v1, p0

    #@22
    move-object v7, p1

    #@23
    move v8, p2

    #@24
    .line 3029
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@27
    .line 3019
    return-void
.end method

.method public noteProcessStartLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    const v6, 0x8001

    #@3
    .line 2982
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@6
    move-result p2

    #@7
    .line 2983
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    #@a
    move-result v1

    #@b
    if-eqz v1, :cond_0

    #@d
    .line 2984
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@10
    move-result-object v0

    #@11
    .line 2985
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    #@14
    move-result-object v1

    #@15
    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incStartsLocked()V

    #@18
    .line 2987
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@1a
    const/4 v7, 0x0

    #@1b
    invoke-virtual {v1, v6, p1, p2, v7}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@1e
    move-result v1

    #@1f
    if-nez v1, :cond_1

    #@21
    .line 2988
    return-void

    #@22
    .line 2990
    :cond_1
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    #@24
    if-nez v1, :cond_2

    #@26
    .line 2991
    return-void

    #@27
    .line 2993
    :cond_2
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@29
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@2c
    move-result-wide v2

    #@2d
    .line 2994
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2f
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@32
    move-result-wide v4

    #@33
    .local v4, "uptime":J
    move-object v1, p0

    #@34
    move-object v7, p1

    #@35
    move v8, p2

    #@36
    .line 2995
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@39
    .line 2981
    return-void
.end method

.method public noteResetAudioLocked()V
    .locals 9

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    .line 4032
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@3
    if-lez v6, :cond_0

    #@5
    .line 4033
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@7
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@a
    move-result-wide v0

    #@b
    .line 4034
    .local v0, "elapsedRealtime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@d
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@10
    move-result-wide v4

    #@11
    .line 4035
    .local v4, "uptime":J
    iput v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@13
    .line 4036
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@15
    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@17
    const v8, -0x400001

    #@1a
    and-int/2addr v7, v8

    #@1b
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1d
    .line 4039
    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 4040
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    #@25
    .line 4041
    const/4 v2, 0x0

    #@26
    .local v2, "i":I
    :goto_0
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@28
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    #@2b
    move-result v6

    #@2c
    if-ge v2, v6, :cond_0

    #@2e
    .line 4042
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@30
    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@33
    move-result-object v3

    #@34
    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@36
    .line 4043
    .local v3, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetAudioLocked(J)V

    #@39
    .line 4041
    add-int/lit8 v2, v2, 0x1

    #@3b
    goto :goto_0

    #@3c
    .line 4031
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "i":I
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "uptime":J
    :cond_0
    return-void
.end method

.method public noteResetBluetoothScanLocked()V
    .locals 9

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    .line 4226
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@3
    if-lez v6, :cond_0

    #@5
    .line 4227
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@8
    move-result-wide v0

    #@9
    .line 4228
    .local v0, "elapsedRealtime":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    #@c
    move-result-wide v4

    #@d
    .line 4229
    .local v4, "uptime":J
    iput v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@f
    .line 4230
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@11
    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@13
    const v8, -0x100001

    #@16
    and-int/2addr v7, v8

    #@17
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@19
    .line 4233
    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1c
    .line 4234
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1e
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    #@21
    .line 4235
    const/4 v2, 0x0

    #@22
    .local v2, "i":I
    :goto_0
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@24
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    #@27
    move-result v6

    #@28
    if-ge v2, v6, :cond_0

    #@2a
    .line 4236
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@2c
    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@2f
    move-result-object v3

    #@30
    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@32
    .line 4237
    .local v3, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetBluetoothScanLocked(J)V

    #@35
    .line 4235
    add-int/lit8 v2, v2, 0x1

    #@37
    goto :goto_0

    #@38
    .line 4225
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "i":I
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "uptime":J
    :cond_0
    return-void
.end method

.method public noteResetCameraLocked()V
    .locals 9

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    .line 4148
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@3
    if-lez v6, :cond_0

    #@5
    .line 4149
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@7
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@a
    move-result-wide v0

    #@b
    .line 4150
    .local v0, "elapsedRealtime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@d
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@10
    move-result-wide v4

    #@11
    .line 4151
    .local v4, "uptime":J
    iput v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@13
    .line 4152
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@15
    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@17
    const v8, -0x200001

    #@1a
    and-int/2addr v7, v8

    #@1b
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1d
    .line 4155
    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 4156
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    #@25
    .line 4157
    const/4 v2, 0x0

    #@26
    .local v2, "i":I
    :goto_0
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@28
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    #@2b
    move-result v6

    #@2c
    if-ge v2, v6, :cond_0

    #@2e
    .line 4158
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@30
    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@33
    move-result-object v3

    #@34
    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@36
    .line 4159
    .local v3, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetCameraLocked(J)V

    #@39
    .line 4157
    add-int/lit8 v2, v2, 0x1

    #@3b
    goto :goto_0

    #@3c
    .line 4147
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "i":I
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "uptime":J
    :cond_0
    return-void
.end method

.method public noteResetFlashlightLocked()V
    .locals 9

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    .line 4165
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@3
    if-lez v6, :cond_0

    #@5
    .line 4166
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@7
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@a
    move-result-wide v0

    #@b
    .line 4167
    .local v0, "elapsedRealtime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@d
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@10
    move-result-wide v4

    #@11
    .line 4168
    .local v4, "uptime":J
    iput v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@13
    .line 4169
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@15
    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@17
    const v8, -0x8000001

    #@1a
    and-int/2addr v7, v8

    #@1b
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1d
    .line 4172
    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 4173
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    #@25
    .line 4174
    const/4 v2, 0x0

    #@26
    .local v2, "i":I
    :goto_0
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@28
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    #@2b
    move-result v6

    #@2c
    if-ge v2, v6, :cond_0

    #@2e
    .line 4175
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@30
    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@33
    move-result-object v3

    #@34
    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@36
    .line 4176
    .local v3, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetFlashlightLocked(J)V

    #@39
    .line 4174
    add-int/lit8 v2, v2, 0x1

    #@3b
    goto :goto_0

    #@3c
    .line 4164
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "i":I
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "uptime":J
    :cond_0
    return-void
.end method

.method public noteResetVideoLocked()V
    .locals 9

    #@0
    .prologue
    const/4 v7, 0x0

    #@1
    .line 4049
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    #@3
    if-lez v6, :cond_0

    #@5
    .line 4050
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@7
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@a
    move-result-wide v0

    #@b
    .line 4051
    .local v0, "elapsedRealtime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@d
    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@10
    move-result-wide v4

    #@11
    .line 4052
    .local v4, "uptime":J
    iput v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@13
    .line 4053
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@15
    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@17
    const v8, -0x40000001    # -1.9999999f

    #@1a
    and-int/2addr v7, v8

    #@1b
    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1d
    .line 4056
    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 4057
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    #@25
    .line 4058
    const/4 v2, 0x0

    #@26
    .local v2, "i":I
    :goto_0
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@28
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    #@2b
    move-result v6

    #@2c
    if-ge v2, v6, :cond_0

    #@2e
    .line 4059
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@30
    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@33
    move-result-object v3

    #@34
    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@36
    .line 4060
    .local v3, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetVideoLocked(J)V

    #@39
    .line 4058
    add-int/lit8 v2, v2, 0x1

    #@3b
    goto :goto_0

    #@3c
    .line 4048
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "i":I
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "uptime":J
    :cond_0
    return-void
.end method

.method public noteScreenBrightnessLocked(I)V
    .locals 8
    .param p1, "brightness"    # I

    #@0
    .prologue
    .line 3501
    div-int/lit8 v0, p1, 0x33

    #@2
    .line 3502
    .local v0, "bin":I
    if-gez v0, :cond_4

    #@4
    const/4 v0, 0x0

    #@5
    .line 3504
    :cond_0
    :goto_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@7
    if-eq v1, v0, :cond_3

    #@9
    .line 3505
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@e
    move-result-wide v2

    #@f
    .line 3506
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@11
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@14
    move-result-wide v4

    #@15
    .line 3507
    .local v4, "uptime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@17
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@19
    iget v6, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1b
    and-int/lit8 v6, v6, -0x8

    #@1d
    .line 3508
    shl-int/lit8 v7, v0, 0x0

    #@1f
    .line 3507
    or-int/2addr v6, v7

    #@20
    iput v6, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@22
    .line 3511
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@25
    .line 3512
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@27
    const/4 v6, 0x2

    #@28
    if-ne v1, v6, :cond_2

    #@2a
    .line 3513
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@2c
    if-ltz v1, :cond_1

    #@2e
    .line 3514
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@30
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@32
    aget-object v1, v1, v6

    #@34
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@37
    .line 3516
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@39
    aget-object v1, v1, v0

    #@3b
    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@3e
    .line 3518
    :cond_2
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@40
    .line 3499
    .end local v2    # "elapsedRealtime":J
    .end local v4    # "uptime":J
    :cond_3
    return-void

    #@41
    .line 3503
    :cond_4
    const/4 v1, 0x5

    #@42
    if-lt v0, v1, :cond_0

    #@44
    const/4 v0, 0x4

    #@45
    goto :goto_0
.end method

.method public noteScreenStateLocked(I)V
    .locals 13
    .param p1, "state"    # I

    #@0
    .prologue
    .line 3430
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@2
    if-eq v1, p1, :cond_2

    #@4
    .line 3431
    const/4 v1, 0x1

    #@5
    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    #@8
    .line 3432
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@a
    .line 3433
    .local v0, "oldState":I
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@c
    .line 3437
    if-eqz p1, :cond_0

    #@e
    .line 3438
    add-int/lit8 v12, p1, -0x1

    #@10
    .line 3439
    .local v12, "stepState":I
    const/4 v1, 0x4

    #@11
    if-ge v12, v1, :cond_3

    #@13
    .line 3440
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@15
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@17
    and-int/lit8 v2, v2, 0x3

    #@19
    xor-int/2addr v2, v12

    #@1a
    or-int/2addr v1, v2

    #@1b
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@1d
    .line 3441
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@1f
    and-int/lit8 v1, v1, -0x4

    #@21
    or-int/2addr v1, v12

    #@22
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@24
    .line 3447
    .end local v12    # "stepState":I
    :cond_0
    :goto_0
    const/4 v1, 0x2

    #@25
    if-ne p1, v1, :cond_4

    #@27
    .line 3449
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@29
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@2c
    move-result-wide v8

    #@2d
    .line 3450
    .local v8, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2f
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@32
    move-result-wide v10

    #@33
    .line 3451
    .local v10, "uptime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@35
    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@37
    const/high16 v3, 0x100000

    #@39
    or-int/2addr v2, v3

    #@3a
    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@3c
    .line 3454
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@3f
    .line 3455
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@41
    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@44
    .line 3456
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@46
    if-ltz v1, :cond_1

    #@48
    .line 3457
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4a
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@4c
    aget-object v1, v1, v2

    #@4e
    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@51
    .line 3460
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@53
    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    #@56
    move-result v2

    #@57
    .line 3461
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@59
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@5c
    move-result-wide v4

    #@5d
    const-wide/16 v6, 0x3e8

    #@5f
    mul-long/2addr v4, v6

    #@60
    const-wide/16 v6, 0x3e8

    #@62
    mul-long/2addr v6, v8

    #@63
    .line 3460
    const/4 v3, 0x0

    #@64
    move-object v1, p0

    #@65
    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZZJJ)V

    #@68
    .line 3465
    const-string/jumbo v4, "screen"

    #@6b
    const/4 v2, -0x1

    #@6c
    const/4 v3, -0x1

    #@6d
    const/4 v5, 0x0

    #@6e
    const/4 v6, 0x0

    #@6f
    const/4 v7, 0x0

    #@70
    move-object v1, p0

    #@71
    invoke-virtual/range {v1 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILjava/lang/String;Ljava/lang/String;IZJJ)V

    #@74
    .line 3469
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@76
    if-eqz v1, :cond_2

    #@78
    .line 3470
    const/4 v1, 0x0

    #@79
    const/4 v2, 0x1

    #@7a
    invoke-virtual {p0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(ZZ)V

    #@7d
    .line 3429
    .end local v0    # "oldState":I
    .end local v8    # "elapsedRealtime":J
    .end local v10    # "uptime":J
    :cond_2
    :goto_1
    return-void

    #@7e
    .line 3443
    .restart local v0    # "oldState":I
    .restart local v12    # "stepState":I
    :cond_3
    const-string/jumbo v1, "BatteryStatsImpl"

    #@81
    new-instance v2, Ljava/lang/StringBuilder;

    #@83
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    #@86
    const-string/jumbo v3, "Unexpected screen state: "

    #@89
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8c
    move-result-object v2

    #@8d
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@90
    move-result-object v2

    #@91
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@94
    move-result-object v2

    #@95
    invoke-static {v1, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    #@98
    goto :goto_0

    #@99
    .line 3472
    .end local v12    # "stepState":I
    :cond_4
    const/4 v1, 0x2

    #@9a
    if-ne v0, v1, :cond_2

    #@9c
    .line 3474
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@9e
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@a1
    move-result-wide v8

    #@a2
    .line 3475
    .restart local v8    # "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@a4
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@a7
    move-result-wide v10

    #@a8
    .line 3476
    .restart local v10    # "uptime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@aa
    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@ac
    const v3, -0x100001

    #@af
    and-int/2addr v2, v3

    #@b0
    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@b2
    .line 3479
    invoke-virtual {p0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@b5
    .line 3480
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@b7
    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@ba
    .line 3481
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@bc
    if-ltz v1, :cond_5

    #@be
    .line 3482
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@c0
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    #@c2
    aget-object v1, v1, v2

    #@c4
    invoke-virtual {v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@c7
    .line 3485
    :cond_5
    const-string/jumbo v5, "screen"

    #@ca
    const-string/jumbo v6, "screen"

    #@cd
    const/4 v3, -0x1

    #@ce
    const/4 v4, -0x1

    #@cf
    const/4 v7, 0x0

    #@d0
    move-object v2, p0

    #@d1
    invoke-virtual/range {v2 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILjava/lang/String;Ljava/lang/String;IJJ)V

    #@d4
    .line 3488
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@d6
    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    #@d9
    move-result v2

    #@da
    .line 3489
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@dc
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@df
    move-result-wide v4

    #@e0
    const-wide/16 v6, 0x3e8

    #@e2
    mul-long/2addr v4, v6

    #@e3
    const-wide/16 v6, 0x3e8

    #@e5
    mul-long/2addr v6, v8

    #@e6
    .line 3488
    const/4 v3, 0x1

    #@e7
    move-object v1, p0

    #@e8
    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZZJJ)V

    #@eb
    .line 3492
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@ed
    if-eqz v1, :cond_2

    #@ef
    .line 3493
    const/4 v1, 0x1

    #@f0
    const/4 v2, 0x0

    #@f1
    invoke-virtual {p0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(ZZ)V

    #@f4
    goto :goto_1
.end method

.method public noteStartGpsLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 3402
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3403
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3404
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 3405
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    #@12
    if-nez v4, :cond_0

    #@14
    .line 3406
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@16
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@18
    const/high16 v6, 0x20000000

    #@1a
    or-int/2addr v5, v6

    #@1b
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1d
    .line 3409
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 3411
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    #@22
    add-int/lit8 v4, v4, 0x1

    #@24
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    #@26
    .line 3412
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@29
    move-result-object v4

    #@2a
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartGps(J)V

    #@2d
    .line 3401
    return-void
.end method

.method public noteStartSensorLocked(II)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "sensor"    # I

    #@0
    .prologue
    .line 3372
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3373
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3374
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 3375
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    #@12
    if-nez v4, :cond_0

    #@14
    .line 3376
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@16
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@18
    const/high16 v6, 0x800000

    #@1a
    or-int/2addr v5, v6

    #@1b
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1d
    .line 3379
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 3381
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    #@22
    add-int/lit8 v4, v4, 0x1

    #@24
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    #@26
    .line 3382
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@29
    move-result-object v4

    #@2a
    invoke-virtual {v4, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartSensor(IJ)V

    #@2d
    .line 3371
    return-void
.end method

.method public noteStartWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    .locals 13
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "unimportantForLogging"    # Z

    #@0
    .prologue
    .line 3250
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v8

    #@6
    .line 3251
    .local v8, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v10

    #@c
    .line 3252
    .local v10, "uptime":J
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@f
    move-result v0

    #@10
    .line 3253
    .local v0, "N":I
    const/4 v12, 0x0

    #@11
    .local v12, "i":I
    :goto_0
    if-ge v12, v0, :cond_0

    #@13
    .line 3254
    invoke-virtual {p1, v12}, Landroid/os/WorkSource;->get(I)I

    #@16
    move-result v2

    #@17
    move-object v1, p0

    #@18
    move v3, p2

    #@19
    move-object/from16 v4, p3

    #@1b
    move-object/from16 v5, p4

    #@1d
    move/from16 v6, p5

    #@1f
    move/from16 v7, p6

    #@21
    invoke-virtual/range {v1 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILjava/lang/String;Ljava/lang/String;IZJJ)V

    #@24
    .line 3253
    add-int/lit8 v12, v12, 0x1

    #@26
    goto :goto_0

    #@27
    .line 3249
    :cond_0
    return-void
.end method

.method public noteStartWakeLocked(IILjava/lang/String;Ljava/lang/String;IZJJ)V
    .locals 13
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "unimportantForLogging"    # Z
    .param p7, "elapsedRealtime"    # J
    .param p9, "uptime"    # J

    #@0
    .prologue
    .line 3162
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3163
    if-nez p5, :cond_3

    #@6
    .line 3166
    move-wide/from16 v0, p9

    #@8
    invoke-virtual {p0, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V

    #@b
    .line 3167
    if-nez p4, :cond_0

    #@d
    .line 3168
    move-object/from16 p4, p3

    #@f
    .line 3170
    :cond_0
    iget-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    #@11
    if-eqz v4, :cond_1

    #@13
    .line 3171
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@15
    const v5, 0x8005

    #@18
    .line 3172
    const/4 v6, 0x0

    #@19
    .line 3171
    move-object/from16 v0, p4

    #@1b
    invoke-virtual {v4, v5, v0, p1, v6}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@1e
    move-result v4

    #@1f
    if-eqz v4, :cond_1

    #@21
    .line 3174
    const v10, 0x8005

    #@24
    move-object v5, p0

    #@25
    move-wide/from16 v6, p7

    #@27
    move-wide/from16 v8, p9

    #@29
    move-object/from16 v11, p4

    #@2b
    move v12, p1

    #@2c
    .line 3173
    invoke-virtual/range {v5 .. v12}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@2f
    .line 3177
    :cond_1
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    #@31
    if-nez v4, :cond_7

    #@33
    .line 3178
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@35
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@37
    const/high16 v6, 0x40000000    # 2.0f

    #@39
    or-int/2addr v5, v6

    #@3a
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@3c
    .line 3181
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@3e
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@40
    iget-object v5, v5, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@42
    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@44
    .line 3182
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@46
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@48
    move-object/from16 v0, p4

    #@4a
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    #@4c
    move-object/from16 v0, p4

    #@4e
    iput-object v0, v4, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@50
    .line 3183
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@52
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@54
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    #@56
    iput p1, v4, Landroid/os/BatteryStats$HistoryTag;->uid:I

    #@58
    .line 3184
    if-eqz p6, :cond_6

    #@5a
    const/4 v4, 0x0

    #@5b
    :goto_0
    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    #@5d
    .line 3185
    move-wide/from16 v0, p7

    #@5f
    move-wide/from16 v2, p9

    #@61
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@64
    .line 3198
    :cond_2
    :goto_1
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    #@66
    add-int/lit8 v4, v4, 0x1

    #@68
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    #@6a
    .line 3200
    :cond_3
    if-ltz p1, :cond_5

    #@6c
    .line 3201
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@6e
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    #@71
    move-result v4

    #@72
    if-eqz v4, :cond_4

    #@74
    .line 3207
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->requestWakelockCpuUpdate()V

    #@77
    .line 3209
    :cond_4
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7a
    move-result-object v4

    #@7b
    move v5, p2

    #@7c
    move-object/from16 v6, p3

    #@7e
    move/from16 v7, p5

    #@80
    move-wide/from16 v8, p7

    #@82
    invoke-virtual/range {v4 .. v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartWakeLocked(ILjava/lang/String;IJ)V

    #@85
    .line 3161
    :cond_5
    return-void

    #@86
    .line 3184
    :cond_6
    const/4 v4, 0x1

    #@87
    goto :goto_0

    #@88
    .line 3186
    :cond_7
    iget-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    #@8a
    if-nez v4, :cond_2

    #@8c
    if-nez p6, :cond_2

    #@8e
    .line 3187
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@90
    iget-byte v4, v4, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    #@92
    if-nez v4, :cond_2

    #@94
    .line 3188
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@96
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@98
    if-eqz v4, :cond_8

    #@9a
    .line 3190
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    #@9c
    const/4 v5, 0x0

    #@9d
    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@9f
    .line 3191
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@a1
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@a3
    iget-object v5, v5, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@a5
    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@a7
    .line 3192
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@a9
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@ab
    move-object/from16 v0, p4

    #@ad
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    #@af
    move-object/from16 v0, p4

    #@b1
    iput-object v0, v4, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@b3
    .line 3193
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@b5
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@b7
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    #@b9
    iput p1, v4, Landroid/os/BatteryStats$HistoryTag;->uid:I

    #@bb
    .line 3194
    move-wide/from16 v0, p7

    #@bd
    move-wide/from16 v2, p9

    #@bf
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@c2
    .line 3196
    :cond_8
    const/4 v4, 0x1

    #@c3
    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    #@c5
    goto :goto_1
.end method

.method public noteStopGpsLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 3416
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3417
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3418
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 3419
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    #@12
    add-int/lit8 v4, v4, -0x1

    #@14
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    #@16
    .line 3420
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    #@18
    if-nez v4, :cond_0

    #@1a
    .line 3421
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1c
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1e
    const v6, -0x20000001

    #@21
    and-int/2addr v5, v6

    #@22
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@24
    .line 3424
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@27
    .line 3426
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2a
    move-result-object v4

    #@2b
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopGps(J)V

    #@2e
    .line 3415
    return-void
.end method

.method public noteStopSensorLocked(II)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "sensor"    # I

    #@0
    .prologue
    .line 3386
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3387
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3388
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 3389
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    #@12
    add-int/lit8 v4, v4, -0x1

    #@14
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    #@16
    .line 3390
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    #@18
    if-nez v4, :cond_0

    #@1a
    .line 3391
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1c
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1e
    const v6, -0x800001

    #@21
    and-int/2addr v5, v6

    #@22
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@24
    .line 3394
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@27
    .line 3396
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2a
    move-result-object v4

    #@2b
    invoke-virtual {v4, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopSensor(IJ)V

    #@2e
    .line 3385
    return-void
.end method

.method public noteStopWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;I)V
    .locals 12
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I

    #@0
    .prologue
    .line 3280
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v6

    #@6
    .line 3281
    .local v6, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v8

    #@c
    .line 3282
    .local v8, "uptime":J
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@f
    move-result v10

    #@10
    .line 3283
    .local v10, "N":I
    const/4 v11, 0x0

    #@11
    .local v11, "i":I
    :goto_0
    if-ge v11, v10, :cond_0

    #@13
    .line 3284
    invoke-virtual {p1, v11}, Landroid/os/WorkSource;->get(I)I

    #@16
    move-result v1

    #@17
    move-object v0, p0

    #@18
    move v2, p2

    #@19
    move-object v3, p3

    #@1a
    move-object/from16 v4, p4

    #@1c
    move/from16 v5, p5

    #@1e
    invoke-virtual/range {v0 .. v9}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILjava/lang/String;Ljava/lang/String;IJJ)V

    #@21
    .line 3283
    add-int/lit8 v11, v11, 0x1

    #@23
    goto :goto_0

    #@24
    .line 3279
    :cond_0
    return-void
.end method

.method public noteStopWakeLocked(IILjava/lang/String;Ljava/lang/String;IJJ)V
    .locals 14
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "elapsedRealtime"    # J
    .param p8, "uptime"    # J

    #@0
    .prologue
    .line 3215
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3216
    if-nez p5, :cond_2

    #@6
    .line 3217
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    #@8
    add-int/lit8 v4, v4, -0x1

    #@a
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    #@c
    .line 3218
    iget-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    #@e
    if-eqz v4, :cond_1

    #@10
    .line 3219
    if-nez p4, :cond_0

    #@12
    .line 3220
    move-object/from16 p4, p3

    #@14
    .line 3222
    :cond_0
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@16
    const/16 v5, 0x4005

    #@18
    .line 3223
    const/4 v6, 0x0

    #@19
    .line 3222
    move-object/from16 v0, p4

    #@1b
    invoke-virtual {v4, v5, v0, p1, v6}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@1e
    move-result v4

    #@1f
    if-eqz v4, :cond_1

    #@21
    .line 3225
    const/16 v10, 0x4005

    #@23
    move-object v5, p0

    #@24
    move-wide/from16 v6, p6

    #@26
    move-wide/from16 v8, p8

    #@28
    move-object/from16 v11, p4

    #@2a
    move v12, p1

    #@2b
    .line 3224
    invoke-virtual/range {v5 .. v12}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@2e
    .line 3228
    :cond_1
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    #@30
    if-nez v4, :cond_2

    #@32
    .line 3229
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@34
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@36
    const v6, -0x40000001    # -1.9999999f

    #@39
    and-int/2addr v5, v6

    #@3a
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@3c
    .line 3232
    const/4 v4, 0x0

    #@3d
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    #@3f
    .line 3233
    const/4 v4, -0x1

    #@40
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    #@42
    .line 3234
    move-wide/from16 v0, p6

    #@44
    move-wide/from16 v2, p8

    #@46
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@49
    .line 3237
    :cond_2
    if-ltz p1, :cond_4

    #@4b
    .line 3238
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@4d
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    #@50
    move-result v4

    #@51
    if-eqz v4, :cond_3

    #@53
    .line 3242
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->requestWakelockCpuUpdate()V

    #@56
    .line 3244
    :cond_3
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@59
    move-result-object v4

    #@5a
    move/from16 v5, p2

    #@5c
    move-object/from16 v6, p3

    #@5e
    move/from16 v7, p5

    #@60
    move-wide/from16 v8, p6

    #@62
    invoke-virtual/range {v4 .. v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopWakeLocked(ILjava/lang/String;IJ)V

    #@65
    .line 3214
    :cond_4
    return-void
.end method

.method public noteSyncFinishLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    const/16 v6, 0x4004

    #@2
    .line 3044
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@5
    move-result p2

    #@6
    .line 3045
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@b
    move-result-wide v2

    #@c
    .line 3046
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@11
    move-result-wide v4

    #@12
    .line 3047
    .local v4, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@15
    move-result-object v0

    #@16
    invoke-virtual {v0, p1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopSyncLocked(Ljava/lang/String;J)V

    #@19
    .line 3048
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@1b
    const/4 v1, 0x0

    #@1c
    invoke-virtual {v0, v6, p1, p2, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@1f
    move-result v0

    #@20
    if-nez v0, :cond_0

    #@22
    .line 3049
    return-void

    #@23
    :cond_0
    move-object v1, p0

    #@24
    move-object v7, p1

    #@25
    move v8, p2

    #@26
    .line 3051
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@29
    .line 3043
    return-void
.end method

.method public noteSyncStartLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    #@0
    .prologue
    const v6, 0x8004

    #@3
    .line 3033
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@6
    move-result p2

    #@7
    .line 3034
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@9
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@c
    move-result-wide v2

    #@d
    .line 3035
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@f
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@12
    move-result-wide v4

    #@13
    .line 3036
    .local v4, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@16
    move-result-object v0

    #@17
    invoke-virtual {v0, p1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartSyncLocked(Ljava/lang/String;J)V

    #@1a
    .line 3037
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@1c
    const/4 v1, 0x0

    #@1d
    invoke-virtual {v0, v6, p1, p2, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    #@20
    move-result v0

    #@21
    if-nez v0, :cond_0

    #@23
    .line 3038
    return-void

    #@24
    :cond_0
    move-object v1, p0

    #@25
    move-object v7, p1

    #@26
    move v8, p2

    #@27
    .line 3040
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@2a
    .line 3032
    return-void
.end method

.method public noteUidProcessStateLocked(II)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "state"    # I

    #@0
    .prologue
    .line 3015
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3016
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7
    move-result-object v0

    #@8
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->updateUidProcessStateLocked(I)V

    #@b
    .line 3014
    return-void
.end method

.method public noteUserActivityLocked(II)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "event"    # I

    #@0
    .prologue
    .line 3523
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 3524
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@7
    move-result p1

    #@8
    .line 3525
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@b
    move-result-object v0

    #@c
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteUserActivityLocked(I)V

    #@f
    .line 3522
    :cond_0
    return-void
.end method

.method public noteVibratorOffLocked(I)V
    .locals 1
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4081
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4082
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7
    move-result-object v0

    #@8
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVibratorOffLocked()V

    #@b
    .line 4080
    return-void
.end method

.method public noteVibratorOnLocked(IJ)V
    .locals 2
    .param p1, "uid"    # I
    .param p2, "durationMillis"    # J

    #@0
    .prologue
    .line 4076
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4077
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@7
    move-result-object v0

    #@8
    invoke-virtual {v0, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVibratorOnLocked(J)V

    #@b
    .line 4075
    return-void
.end method

.method public noteVideoOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4015
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    #@2
    if-nez v4, :cond_0

    #@4
    .line 4016
    return-void

    #@5
    .line 4018
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@8
    move-result p1

    #@9
    .line 4019
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@e
    move-result-wide v0

    #@f
    .line 4020
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@11
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@14
    move-result-wide v2

    #@15
    .line 4021
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    #@17
    add-int/lit8 v4, v4, -0x1

    #@19
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    #@1b
    if-nez v4, :cond_1

    #@1d
    .line 4022
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1f
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@21
    const v6, -0x40000001    # -1.9999999f

    #@24
    and-int/2addr v5, v6

    #@25
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@27
    .line 4025
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@2a
    .line 4026
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2c
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@2f
    .line 4028
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@32
    move-result-object v4

    #@33
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVideoTurnedOffLocked(J)V

    #@36
    .line 4014
    return-void
.end method

.method public noteVideoOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4000
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4001
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4002
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4003
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    #@12
    if-nez v4, :cond_0

    #@14
    .line 4004
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@16
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@18
    const/high16 v6, 0x40000000    # 2.0f

    #@1a
    or-int/2addr v5, v6

    #@1b
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1d
    .line 4007
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 4008
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@25
    .line 4010
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    #@27
    add-int/lit8 v4, v4, 0x1

    #@29
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    #@2b
    .line 4011
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2e
    move-result-object v4

    #@2f
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVideoTurnedOnLocked(J)V

    #@32
    .line 3999
    return-void
.end method

.method public noteWakeUpLocked(Ljava/lang/String;I)V
    .locals 9
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "reasonUid"    # I

    #@0
    .prologue
    .line 3530
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v2

    #@6
    .line 3531
    .local v2, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v4

    #@c
    .line 3532
    .local v4, "uptime":J
    const/16 v6, 0x12

    #@e
    move-object v1, p0

    #@f
    move-object v7, p1

    #@10
    move v8, p2

    #@11
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@14
    .line 3529
    return-void
.end method

.method public noteWakeupReasonLocked(Ljava/lang/String;)V
    .locals 6
    .param p1, "reason"    # Ljava/lang/String;

    #@0
    .prologue
    .line 3298
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v0

    #@6
    .line 3299
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v2

    #@c
    .line 3302
    .local v2, "uptime":J
    invoke-virtual {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V

    #@f
    .line 3303
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@11
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@13
    iget-object v5, v5, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@15
    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@17
    .line 3304
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@19
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@1b
    iput-object p1, v4, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@1d
    .line 3305
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1f
    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@21
    const/4 v5, 0x0

    #@22
    iput v5, v4, Landroid/os/BatteryStats$HistoryTag;->uid:I

    #@24
    .line 3306
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    #@26
    .line 3307
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    #@28
    .line 3308
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@2b
    .line 3297
    return-void
.end method

.method public noteWifiBatchedScanStartedFromSourceLocked(Landroid/os/WorkSource;I)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "csph"    # I

    #@0
    .prologue
    .line 4523
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4524
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4525
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-virtual {p0, v2, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStartedLocked(II)V

    #@e
    .line 4524
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4522
    :cond_0
    return-void
.end method

.method public noteWifiBatchedScanStartedLocked(II)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "csph"    # I

    #@0
    .prologue
    .line 4453
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4454
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4455
    .local v0, "elapsedRealtime":J
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@d
    move-result-object v2

    #@e
    invoke-virtual {v2, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiBatchedScanStartedLocked(IJ)V

    #@11
    .line 4452
    return-void
.end method

.method public noteWifiBatchedScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4530
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4531
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4532
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(I)V

    #@e
    .line 4531
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4529
    :cond_0
    return-void
.end method

.method public noteWifiBatchedScanStoppedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4459
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4460
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4461
    .local v0, "elapsedRealtime":J
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@d
    move-result-object v2

    #@e
    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiBatchedScanStoppedLocked(J)V

    #@11
    .line 4458
    return-void
.end method

.method public noteWifiMulticastDisabledFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4544
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4545
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4546
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiMulticastDisabledLocked(I)V

    #@e
    .line 4545
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4543
    :cond_0
    return-void
.end method

.method public noteWifiMulticastDisabledLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4481
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4482
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4483
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4484
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@12
    add-int/lit8 v4, v4, -0x1

    #@14
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@16
    .line 4485
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@18
    if-nez v4, :cond_0

    #@1a
    .line 4486
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1c
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1e
    const v6, -0x10001

    #@21
    and-int/2addr v5, v6

    #@22
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@24
    .line 4489
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@27
    .line 4491
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2a
    move-result-object v4

    #@2b
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiMulticastDisabledLocked(J)V

    #@2e
    .line 4480
    return-void
.end method

.method public noteWifiMulticastEnabledFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4537
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4538
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4539
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiMulticastEnabledLocked(I)V

    #@e
    .line 4538
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4536
    :cond_0
    return-void
.end method

.method public noteWifiMulticastEnabledLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4467
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4468
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4469
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4470
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@12
    if-nez v4, :cond_0

    #@14
    .line 4471
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@16
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@18
    const/high16 v6, 0x10000

    #@1a
    or-int/2addr v5, v6

    #@1b
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1d
    .line 4474
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 4476
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@22
    add-int/lit8 v4, v4, 0x1

    #@24
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    #@26
    .line 4477
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@29
    move-result-object v4

    #@2a
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiMulticastEnabledLocked(J)V

    #@2d
    .line 4466
    return-void
.end method

.method public noteWifiOffLocked()V
    .locals 7

    #@0
    .prologue
    .line 3954
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v0

    #@6
    .line 3955
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v2

    #@c
    .line 3956
    .local v2, "uptime":J
    iget-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    #@e
    if-eqz v4, :cond_0

    #@10
    .line 3957
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@12
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@14
    const v6, -0x10000001

    #@17
    and-int/2addr v5, v6

    #@18
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1a
    .line 3960
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1d
    .line 3961
    const/4 v4, 0x0

    #@1e
    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    #@20
    .line 3962
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@25
    .line 3963
    const-string/jumbo v4, "wifi-on"

    #@28
    const/4 v5, 0x2

    #@29
    invoke-direct {p0, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    #@2c
    .line 3953
    :cond_0
    return-void
.end method

.method public noteWifiOnLocked()V
    .locals 7

    #@0
    .prologue
    .line 3940
    iget-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    #@2
    if-nez v4, :cond_0

    #@4
    .line 3941
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 3942
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 3943
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@12
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@14
    const/high16 v6, 0x10000000

    #@16
    or-int/2addr v5, v6

    #@17
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@19
    .line 3946
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1c
    .line 3947
    const/4 v4, 0x1

    #@1d
    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    #@1f
    .line 3948
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@21
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@24
    .line 3949
    const-string/jumbo v4, "wifi-off"

    #@27
    const/4 v5, 0x2

    #@28
    invoke-direct {p0, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    #@2b
    .line 3939
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public noteWifiRadioPowerState(IJ)V
    .locals 8
    .param p1, "powerState"    # I
    .param p2, "timestampNs"    # J

    #@0
    .prologue
    const/4 v0, 0x1

    #@1
    .line 4243
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@6
    move-result-wide v2

    #@7
    .line 4244
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@9
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@c
    move-result-wide v4

    #@d
    .line 4245
    .local v4, "uptime":J
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    #@f
    if-eq v1, p1, :cond_1

    #@11
    .line 4247
    const/4 v1, 0x2

    #@12
    if-eq p1, v1, :cond_0

    #@14
    .line 4248
    const/4 v1, 0x3

    #@15
    if-ne p1, v1, :cond_2

    #@17
    .line 4249
    .local v0, "active":Z
    :cond_0
    :goto_0
    if-eqz v0, :cond_3

    #@19
    .line 4250
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1b
    iget v6, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1d
    const/high16 v7, 0x4000000

    #@1f
    or-int/2addr v6, v7

    #@20
    iput v6, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@22
    .line 4256
    :goto_1
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@25
    .line 4257
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    #@27
    .line 4242
    .end local v0    # "active":Z
    :cond_1
    return-void

    #@28
    .line 4248
    :cond_2
    const/4 v0, 0x0

    #@29
    goto :goto_0

    #@2a
    .line 4252
    .restart local v0    # "active":Z
    :cond_3
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@2c
    iget v6, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@2e
    const v7, -0x4000001

    #@31
    and-int/2addr v6, v7

    #@32
    iput v6, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@34
    goto :goto_1
.end method

.method public noteWifiRssiChangedLocked(I)V
    .locals 8
    .param p1, "newRssi"    # I

    #@0
    .prologue
    .line 4366
    const/4 v3, 0x5

    #@1
    invoke-static {p1, v3}, Landroid/net/wifi/WifiManager;->calculateSignalLevel(II)I

    #@4
    move-result v2

    #@5
    .line 4368
    .local v2, "strengthBin":I
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    #@7
    if-eq v3, v2, :cond_2

    #@9
    .line 4369
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@e
    move-result-wide v0

    #@f
    .line 4370
    .local v0, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@11
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@14
    move-result-wide v4

    #@15
    .line 4371
    .local v4, "uptime":J
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    #@17
    if-ltz v3, :cond_0

    #@19
    .line 4372
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1b
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    #@1d
    aget-object v3, v3, v6

    #@1f
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@22
    .line 4375
    :cond_0
    if-ltz v2, :cond_3

    #@24
    .line 4376
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@26
    aget-object v3, v3, v2

    #@28
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    #@2b
    move-result v3

    #@2c
    if-nez v3, :cond_1

    #@2e
    .line 4377
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@30
    aget-object v3, v3, v2

    #@32
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@35
    .line 4379
    :cond_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@37
    .line 4380
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@39
    iget v6, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@3b
    and-int/lit8 v6, v6, -0x71

    #@3d
    .line 4381
    shl-int/lit8 v7, v2, 0x4

    #@3f
    .line 4380
    or-int/2addr v6, v7

    #@40
    .line 4379
    iput v6, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@42
    .line 4384
    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@45
    .line 4388
    :goto_0
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    #@47
    .line 4365
    .end local v0    # "elapsedRealtime":J
    .end local v4    # "uptime":J
    :cond_2
    return-void

    #@48
    .line 4386
    .restart local v0    # "elapsedRealtime":J
    .restart local v4    # "uptime":J
    :cond_3
    const/4 v3, -0x1

    #@49
    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllWifiSignalStrengthTimersLocked(I)V

    #@4c
    goto :goto_0
.end method

.method public noteWifiRunningChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;)V
    .locals 7
    .param p1, "oldWs"    # Landroid/os/WorkSource;
    .param p2, "newWs"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4283
    iget-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    #@2
    if-eqz v5, :cond_1

    #@4
    .line 4284
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v2

    #@a
    .line 4285
    .local v2, "elapsedRealtime":J
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@d
    move-result v0

    #@e
    .line 4286
    .local v0, "N":I
    const/4 v1, 0x0

    #@f
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@11
    .line 4287
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@14
    move-result v5

    #@15
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@18
    move-result v4

    #@19
    .line 4288
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@1c
    move-result-object v5

    #@1d
    invoke-virtual {v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    #@20
    .line 4286
    add-int/lit8 v1, v1, 0x1

    #@22
    goto :goto_0

    #@23
    .line 4290
    .end local v4    # "uid":I
    :cond_0
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    #@26
    move-result v0

    #@27
    .line 4291
    const/4 v1, 0x0

    #@28
    :goto_1
    if-ge v1, v0, :cond_2

    #@2a
    .line 4292
    invoke-virtual {p2, v1}, Landroid/os/WorkSource;->get(I)I

    #@2d
    move-result v5

    #@2e
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@31
    move-result v4

    #@32
    .line 4293
    .restart local v4    # "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@35
    move-result-object v5

    #@36
    invoke-virtual {v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    #@39
    .line 4291
    add-int/lit8 v1, v1, 0x1

    #@3b
    goto :goto_1

    #@3c
    .line 4296
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "elapsedRealtime":J
    .end local v4    # "uid":I
    :cond_1
    const-string/jumbo v5, "BatteryStatsImpl"

    #@3f
    const-string/jumbo v6, "noteWifiRunningChangedLocked -- called while WIFI not running"

    #@42
    invoke-static {v5, v6}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@45
    .line 4282
    :cond_2
    return-void
.end method

.method public noteWifiRunningLocked(Landroid/os/WorkSource;)V
    .locals 10
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4262
    iget-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    #@2
    if-nez v5, :cond_1

    #@4
    .line 4263
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v2

    #@a
    .line 4264
    .local v2, "elapsedRealtime":J
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v6

    #@10
    .line 4265
    .local v6, "uptime":J
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@12
    iget v8, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@14
    const/high16 v9, 0x20000000

    #@16
    or-int/2addr v8, v9

    #@17
    iput v8, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@19
    .line 4268
    invoke-virtual {p0, v2, v3, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1c
    .line 4269
    const/4 v5, 0x1

    #@1d
    iput-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    #@1f
    .line 4270
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@21
    invoke-virtual {v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@24
    .line 4271
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@27
    move-result v0

    #@28
    .line 4272
    .local v0, "N":I
    const/4 v1, 0x0

    #@29
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@2b
    .line 4273
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@2e
    move-result v5

    #@2f
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@32
    move-result v4

    #@33
    .line 4274
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@36
    move-result-object v5

    #@37
    invoke-virtual {v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    #@3a
    .line 4272
    add-int/lit8 v1, v1, 0x1

    #@3c
    goto :goto_0

    #@3d
    .line 4276
    .end local v4    # "uid":I
    :cond_0
    const-string/jumbo v5, "wifi-running"

    #@40
    const/4 v8, 0x2

    #@41
    invoke-direct {p0, v5, v8}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    #@44
    .line 4261
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "elapsedRealtime":J
    .end local v6    # "uptime":J
    :goto_1
    return-void

    #@45
    .line 4278
    :cond_1
    const-string/jumbo v5, "BatteryStatsImpl"

    #@48
    const-string/jumbo v8, "noteWifiRunningLocked -- called while WIFI running"

    #@4b
    invoke-static {v5, v8}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@4e
    goto :goto_1
.end method

.method public noteWifiScanStartedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4509
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4510
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4511
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStartedLocked(I)V

    #@e
    .line 4510
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4508
    :cond_0
    return-void
.end method

.method public noteWifiScanStartedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4425
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4426
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4427
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4428
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@12
    if-nez v4, :cond_0

    #@14
    .line 4429
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@16
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@18
    const/high16 v6, 0x8000000

    #@1a
    or-int/2addr v5, v6

    #@1b
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1d
    .line 4432
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@20
    .line 4434
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@22
    add-int/lit8 v4, v4, 0x1

    #@24
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@26
    .line 4435
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@29
    move-result-object v4

    #@2a
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiScanStartedLocked(J)V

    #@2d
    .line 4424
    return-void
.end method

.method public noteWifiScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 3
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4516
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@3
    move-result v0

    #@4
    .line 4517
    .local v0, "N":I
    const/4 v1, 0x0

    #@5
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@7
    .line 4518
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@a
    move-result v2

    #@b
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStoppedLocked(I)V

    #@e
    .line 4517
    add-int/lit8 v1, v1, 0x1

    #@10
    goto :goto_0

    #@11
    .line 4515
    :cond_0
    return-void
.end method

.method public noteWifiScanStoppedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 4439
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 4440
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4441
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4442
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@12
    add-int/lit8 v4, v4, -0x1

    #@14
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@16
    .line 4443
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    #@18
    if-nez v4, :cond_0

    #@1a
    .line 4444
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1c
    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1e
    const v6, -0x8000001

    #@21
    and-int/2addr v5, v6

    #@22
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@24
    .line 4447
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@27
    .line 4449
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@2a
    move-result-object v4

    #@2b
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiScanStoppedLocked(J)V

    #@2e
    .line 4438
    return-void
.end method

.method public noteWifiStateLocked(ILjava/lang/String;)V
    .locals 4
    .param p1, "wifiState"    # I
    .param p2, "accessPoint"    # Ljava/lang/String;

    #@0
    .prologue
    .line 4323
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    #@2
    if-eq v2, p1, :cond_1

    #@4
    .line 4324
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4325
    .local v0, "elapsedRealtime":J
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    #@c
    if-ltz v2, :cond_0

    #@e
    .line 4326
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@10
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    #@12
    aget-object v2, v2, v3

    #@14
    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@17
    .line 4328
    :cond_0
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    #@19
    .line 4329
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1b
    aget-object v2, v2, p1

    #@1d
    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@20
    .line 4330
    const-string/jumbo v2, "wifi-state"

    #@23
    const/4 v3, 0x2

    #@24
    invoke-direct {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    #@27
    .line 4321
    .end local v0    # "elapsedRealtime":J
    :cond_1
    return-void
.end method

.method public noteWifiStoppedLocked(Landroid/os/WorkSource;)V
    .locals 10
    .param p1, "ws"    # Landroid/os/WorkSource;

    #@0
    .prologue
    .line 4301
    iget-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    #@2
    if-eqz v5, :cond_1

    #@4
    .line 4302
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v2

    #@a
    .line 4303
    .local v2, "elapsedRealtime":J
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v6

    #@10
    .line 4304
    .local v6, "uptime":J
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@12
    iget v8, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@14
    const v9, -0x20000001

    #@17
    and-int/2addr v8, v9

    #@18
    iput v8, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1a
    .line 4307
    invoke-virtual {p0, v2, v3, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1d
    .line 4308
    const/4 v5, 0x0

    #@1e
    iput-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    #@20
    .line 4309
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@22
    invoke-virtual {v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@25
    .line 4310
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    #@28
    move-result v0

    #@29
    .line 4311
    .local v0, "N":I
    const/4 v1, 0x0

    #@2a
    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    #@2c
    .line 4312
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    #@2f
    move-result v5

    #@30
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@33
    move-result v4

    #@34
    .line 4313
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@37
    move-result-object v5

    #@38
    invoke-virtual {v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    #@3b
    .line 4311
    add-int/lit8 v1, v1, 0x1

    #@3d
    goto :goto_0

    #@3e
    .line 4315
    .end local v4    # "uid":I
    :cond_0
    const-string/jumbo v5, "wifi-stopped"

    #@41
    const/4 v8, 0x2

    #@42
    invoke-direct {p0, v5, v8}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    #@45
    .line 4300
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "elapsedRealtime":J
    .end local v6    # "uptime":J
    :goto_1
    return-void

    #@46
    .line 4317
    :cond_1
    const-string/jumbo v5, "BatteryStatsImpl"

    #@49
    const-string/jumbo v8, "noteWifiStoppedLocked -- called while WIFI not running"

    #@4c
    invoke-static {v5, v8}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@4f
    goto :goto_1
.end method

.method public noteWifiSupplicantStateChangedLocked(IZ)V
    .locals 7
    .param p1, "supplState"    # I
    .param p2, "failedAuth"    # Z

    #@0
    .prologue
    .line 4336
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    #@2
    if-eq v4, p1, :cond_1

    #@4
    .line 4337
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@9
    move-result-wide v0

    #@a
    .line 4338
    .local v0, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@f
    move-result-wide v2

    #@10
    .line 4339
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    #@12
    if-ltz v4, :cond_0

    #@14
    .line 4340
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@16
    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    #@18
    aget-object v4, v4, v5

    #@1a
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@1d
    .line 4342
    :cond_0
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    #@1f
    .line 4343
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@21
    aget-object v4, v4, p1

    #@23
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    #@26
    .line 4344
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@28
    .line 4345
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@2a
    iget v5, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@2c
    and-int/lit8 v5, v5, -0x10

    #@2e
    .line 4346
    shl-int/lit8 v6, p1, 0x0

    #@30
    .line 4345
    or-int/2addr v5, v6

    #@31
    .line 4344
    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@33
    .line 4349
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@36
    .line 4334
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_1
    return-void
.end method

.method public prepareForDumpLocked()V
    .locals 0

    #@0
    .prologue
    .line 11147
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    #@3
    .line 11151
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    #@6
    .line 11145
    return-void
.end method

.method public pullPendingStateUpdatesLocked()V
    .locals 3

    #@0
    .prologue
    .line 8324
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@2
    if-eqz v1, :cond_0

    #@4
    .line 8325
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@6
    const/4 v2, 0x2

    #@7
    if-ne v1, v2, :cond_1

    #@9
    const/4 v0, 0x1

    #@a
    .line 8326
    .local v0, "screenOn":Z
    :goto_0
    invoke-virtual {p0, v0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(ZZ)V

    #@d
    .line 8323
    .end local v0    # "screenOn":Z
    :cond_0
    return-void

    #@e
    .line 8325
    :cond_1
    const/4 v0, 0x0

    #@f
    goto :goto_0
.end method

.method readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V
    .locals 11
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;
    .param p2, "dit"    # Landroid/os/BatteryStats$DailyItem;
    .param p3, "isCharge"    # Z
    .param p4, "tag"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NumberFormatException;,
            Lorg/xmlpull/v1/XmlPullParserException;,
            Ljava/io/IOException;
        }
    .end annotation

    #@0
    .prologue
    .line 7912
    const-string/jumbo v8, "n"

    #@3
    const/4 v9, 0x0

    #@4
    invoke-interface {p1, v9, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@7
    move-result-object v2

    #@8
    .line 7913
    .local v2, "numAttr":Ljava/lang/String;
    if-nez v2, :cond_0

    #@a
    .line 7914
    const-string/jumbo v8, "BatteryStatsImpl"

    #@d
    new-instance v9, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v10, "Missing \'n\' attribute at "

    #@15
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v9

    #@19
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getPositionDescription()Ljava/lang/String;

    #@1c
    move-result-object v10

    #@1d
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@20
    move-result-object v9

    #@21
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@24
    move-result-object v9

    #@25
    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@28
    .line 7915
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    #@2b
    .line 7916
    return-void

    #@2c
    .line 7918
    :cond_0
    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@2f
    move-result v1

    #@30
    .line 7919
    .local v1, "num":I
    new-instance v4, Landroid/os/BatteryStats$LevelStepTracker;

    #@32
    invoke-direct {v4, v1}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    #@35
    .line 7920
    .local v4, "steps":Landroid/os/BatteryStats$LevelStepTracker;
    if-eqz p3, :cond_3

    #@37
    .line 7921
    iput-object v4, p2, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    #@39
    .line 7925
    :goto_0
    const/4 v0, 0x0

    #@3a
    .line 7926
    .local v0, "i":I
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    #@3d
    move-result v3

    #@3e
    .line 7928
    .local v3, "outerDepth":I
    :cond_1
    :goto_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    #@41
    move-result v6

    #@42
    .local v6, "type":I
    const/4 v8, 0x1

    #@43
    if-eq v6, v8, :cond_5

    #@45
    .line 7929
    const/4 v8, 0x3

    #@46
    if-ne v6, v8, :cond_2

    #@48
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    #@4b
    move-result v8

    #@4c
    if-le v8, v3, :cond_5

    #@4e
    .line 7930
    :cond_2
    const/4 v8, 0x3

    #@4f
    if-eq v6, v8, :cond_1

    #@51
    const/4 v8, 0x4

    #@52
    if-eq v6, v8, :cond_1

    #@54
    .line 7934
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    #@57
    move-result-object v5

    #@58
    .line 7935
    .local v5, "tagName":Ljava/lang/String;
    const-string/jumbo v8, "s"

    #@5b
    invoke-virtual {v8, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@5e
    move-result v8

    #@5f
    if-eqz v8, :cond_4

    #@61
    .line 7936
    if-ge v0, v1, :cond_1

    #@63
    .line 7937
    const-string/jumbo v8, "v"

    #@66
    const/4 v9, 0x0

    #@67
    invoke-interface {p1, v9, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@6a
    move-result-object v7

    #@6b
    .line 7938
    .local v7, "valueAttr":Ljava/lang/String;
    if-eqz v7, :cond_1

    #@6d
    .line 7939
    invoke-virtual {v4, v0, v7}, Landroid/os/BatteryStats$LevelStepTracker;->decodeEntryAt(ILjava/lang/String;)V

    #@70
    .line 7940
    add-int/lit8 v0, v0, 0x1

    #@72
    goto :goto_1

    #@73
    .line 7923
    .end local v0    # "i":I
    .end local v3    # "outerDepth":I
    .end local v5    # "tagName":Ljava/lang/String;
    .end local v6    # "type":I
    .end local v7    # "valueAttr":Ljava/lang/String;
    :cond_3
    iput-object v4, p2, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    #@75
    goto :goto_0

    #@76
    .line 7944
    .restart local v0    # "i":I
    .restart local v3    # "outerDepth":I
    .restart local v5    # "tagName":Ljava/lang/String;
    .restart local v6    # "type":I
    :cond_4
    const-string/jumbo v8, "BatteryStatsImpl"

    #@79
    new-instance v9, Ljava/lang/StringBuilder;

    #@7b
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    #@7e
    const-string/jumbo v10, "Unknown element under <"

    #@81
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@84
    move-result-object v9

    #@85
    invoke-virtual {v9, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@88
    move-result-object v9

    #@89
    const-string/jumbo v10, ">: "

    #@8c
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8f
    move-result-object v9

    #@90
    .line 7945
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    #@93
    move-result-object v10

    #@94
    .line 7944
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@97
    move-result-object v9

    #@98
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9b
    move-result-object v9

    #@9c
    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@9f
    .line 7946
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    #@a2
    goto :goto_1

    #@a3
    .line 7949
    .end local v5    # "tagName":Ljava/lang/String;
    :cond_5
    iput v0, v4, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@a5
    .line 7911
    return-void
.end method

.method readDailyItemTagLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    .locals 10
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NumberFormatException;,
            Lorg/xmlpull/v1/XmlPullParserException;,
            Ljava/io/IOException;
        }
    .end annotation

    #@0
    .prologue
    .line 7858
    new-instance v1, Landroid/os/BatteryStats$DailyItem;

    #@2
    invoke-direct {v1}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    #@5
    .line 7859
    .local v1, "dit":Landroid/os/BatteryStats$DailyItem;
    const-string/jumbo v7, "start"

    #@8
    const/4 v8, 0x0

    #@9
    invoke-interface {p1, v8, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@c
    move-result-object v0

    #@d
    .line 7860
    .local v0, "attr":Ljava/lang/String;
    if-eqz v0, :cond_0

    #@f
    .line 7861
    invoke-static {v0}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    #@12
    move-result-wide v8

    #@13
    iput-wide v8, v1, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    #@15
    .line 7863
    :cond_0
    const-string/jumbo v7, "end"

    #@18
    const/4 v8, 0x0

    #@19
    invoke-interface {p1, v8, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@1c
    move-result-object v0

    #@1d
    .line 7864
    if-eqz v0, :cond_1

    #@1f
    .line 7865
    invoke-static {v0}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    #@22
    move-result-wide v8

    #@23
    iput-wide v8, v1, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    #@25
    .line 7867
    :cond_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    #@28
    move-result v2

    #@29
    .line 7869
    .local v2, "outerDepth":I
    :cond_2
    :goto_0
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    #@2c
    move-result v5

    #@2d
    .local v5, "type":I
    const/4 v7, 0x1

    #@2e
    if-eq v5, v7, :cond_b

    #@30
    .line 7870
    const/4 v7, 0x3

    #@31
    if-ne v5, v7, :cond_3

    #@33
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    #@36
    move-result v7

    #@37
    if-le v7, v2, :cond_b

    #@39
    .line 7871
    :cond_3
    const/4 v7, 0x3

    #@3a
    if-eq v5, v7, :cond_2

    #@3c
    const/4 v7, 0x4

    #@3d
    if-eq v5, v7, :cond_2

    #@3f
    .line 7875
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    #@42
    move-result-object v4

    #@43
    .line 7876
    .local v4, "tagName":Ljava/lang/String;
    const-string/jumbo v7, "dis"

    #@46
    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@49
    move-result v7

    #@4a
    if-eqz v7, :cond_4

    #@4c
    .line 7877
    const-string/jumbo v7, "dis"

    #@4f
    const/4 v8, 0x0

    #@50
    invoke-virtual {p0, p1, v1, v8, v7}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    #@53
    goto :goto_0

    #@54
    .line 7878
    :cond_4
    const-string/jumbo v7, "chg"

    #@57
    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@5a
    move-result v7

    #@5b
    if-eqz v7, :cond_5

    #@5d
    .line 7879
    const-string/jumbo v7, "chg"

    #@60
    const/4 v8, 0x1

    #@61
    invoke-virtual {p0, p1, v1, v8, v7}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    #@64
    goto :goto_0

    #@65
    .line 7880
    :cond_5
    const-string/jumbo v7, "upd"

    #@68
    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@6b
    move-result v7

    #@6c
    if-eqz v7, :cond_8

    #@6e
    .line 7881
    iget-object v7, v1, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@70
    if-nez v7, :cond_6

    #@72
    .line 7882
    new-instance v7, Ljava/util/ArrayList;

    #@74
    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    #@77
    iput-object v7, v1, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@79
    .line 7884
    :cond_6
    new-instance v3, Landroid/os/BatteryStats$PackageChange;

    #@7b
    invoke-direct {v3}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    #@7e
    .line 7885
    .local v3, "pc":Landroid/os/BatteryStats$PackageChange;
    const/4 v7, 0x1

    #@7f
    iput-boolean v7, v3, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    #@81
    .line 7886
    const-string/jumbo v7, "pkg"

    #@84
    const/4 v8, 0x0

    #@85
    invoke-interface {p1, v8, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@88
    move-result-object v7

    #@89
    iput-object v7, v3, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    #@8b
    .line 7887
    const-string/jumbo v7, "ver"

    #@8e
    const/4 v8, 0x0

    #@8f
    invoke-interface {p1, v8, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@92
    move-result-object v6

    #@93
    .line 7888
    .local v6, "verStr":Ljava/lang/String;
    if-eqz v6, :cond_7

    #@95
    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    #@98
    move-result v7

    #@99
    :goto_1
    iput v7, v3, Landroid/os/BatteryStats$PackageChange;->mVersionCode:I

    #@9b
    .line 7889
    iget-object v7, v1, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@9d
    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@a0
    .line 7890
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    #@a3
    goto :goto_0

    #@a4
    .line 7888
    :cond_7
    const/4 v7, 0x0

    #@a5
    goto :goto_1

    #@a6
    .line 7891
    .end local v3    # "pc":Landroid/os/BatteryStats$PackageChange;
    .end local v6    # "verStr":Ljava/lang/String;
    :cond_8
    const-string/jumbo v7, "rem"

    #@a9
    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    #@ac
    move-result v7

    #@ad
    if-eqz v7, :cond_a

    #@af
    .line 7892
    iget-object v7, v1, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@b1
    if-nez v7, :cond_9

    #@b3
    .line 7893
    new-instance v7, Ljava/util/ArrayList;

    #@b5
    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    #@b8
    iput-object v7, v1, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@ba
    .line 7895
    :cond_9
    new-instance v3, Landroid/os/BatteryStats$PackageChange;

    #@bc
    invoke-direct {v3}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    #@bf
    .line 7896
    .restart local v3    # "pc":Landroid/os/BatteryStats$PackageChange;
    const/4 v7, 0x0

    #@c0
    iput-boolean v7, v3, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    #@c2
    .line 7897
    const-string/jumbo v7, "pkg"

    #@c5
    const/4 v8, 0x0

    #@c6
    invoke-interface {p1, v8, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    #@c9
    move-result-object v7

    #@ca
    iput-object v7, v3, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    #@cc
    .line 7898
    iget-object v7, v1, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@ce
    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@d1
    .line 7899
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    #@d4
    goto/16 :goto_0

    #@d6
    .line 7901
    .end local v3    # "pc":Landroid/os/BatteryStats$PackageChange;
    :cond_a
    const-string/jumbo v7, "BatteryStatsImpl"

    #@d9
    new-instance v8, Ljava/lang/StringBuilder;

    #@db
    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    #@de
    const-string/jumbo v9, "Unknown element under <item>: "

    #@e1
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e4
    move-result-object v8

    #@e5
    .line 7902
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    #@e8
    move-result-object v9

    #@e9
    .line 7901
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@ec
    move-result-object v8

    #@ed
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@f0
    move-result-object v8

    #@f1
    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@f4
    .line 7903
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    #@f7
    goto/16 :goto_0

    #@f9
    .line 7906
    .end local v4    # "tagName":Ljava/lang/String;
    :cond_b
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@fb
    invoke-virtual {v7, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@fe
    .line 7857
    return-void
.end method

.method public readDailyStatsLocked()V
    .locals 8

    #@0
    .prologue
    .line 7791
    const-string/jumbo v5, "BatteryStatsImpl"

    #@3
    new-instance v6, Ljava/lang/StringBuilder;

    #@5
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@8
    const-string/jumbo v7, "Reading daily items from "

    #@b
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@e
    move-result-object v6

    #@f
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    #@11
    invoke-virtual {v7}, Lcom/android/internal/os/AtomicFile;->getBaseFile()Ljava/io/File;

    #@14
    move-result-object v7

    #@15
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v6

    #@19
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@1c
    move-result-object v6

    #@1d
    invoke-static {v5, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    #@20
    .line 7792
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@22
    invoke-virtual {v5}, Ljava/util/ArrayList;->clear()V

    #@25
    .line 7795
    :try_start_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    #@27
    invoke-virtual {v5}, Lcom/android/internal/os/AtomicFile;->openRead()Ljava/io/FileInputStream;
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    #@2a
    move-result-object v4

    #@2b
    .line 7800
    .local v4, "stream":Ljava/io/FileInputStream;
    :try_start_1
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    #@2e
    move-result-object v3

    #@2f
    .line 7801
    .local v3, "parser":Lorg/xmlpull/v1/XmlPullParser;
    sget-object v5, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    #@31
    invoke-virtual {v5}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    #@34
    move-result-object v5

    #@35
    invoke-interface {v3, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    #@38
    .line 7802
    invoke-direct {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemsLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    :try_end_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    #@3b
    .line 7806
    :try_start_2
    invoke-virtual {v4}, Ljava/io/FileInputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1

    #@3e
    .line 7790
    .end local v3    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    :goto_0
    return-void

    #@3f
    .line 7796
    .end local v4    # "stream":Ljava/io/FileInputStream;
    :catch_0
    move-exception v0

    #@40
    .line 7797
    .local v0, "e":Ljava/io/FileNotFoundException;
    return-void

    #@41
    .line 7807
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .restart local v3    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v4    # "stream":Ljava/io/FileInputStream;
    :catch_1
    move-exception v1

    #@42
    .local v1, "e":Ljava/io/IOException;
    goto :goto_0

    #@43
    .line 7803
    .end local v1    # "e":Ljava/io/IOException;
    .end local v3    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    :catch_2
    move-exception v2

    #@44
    .line 7806
    .local v2, "e":Lorg/xmlpull/v1/XmlPullParserException;
    :try_start_3
    invoke-virtual {v4}, Ljava/io/FileInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_3

    #@47
    goto :goto_0

    #@48
    .line 7807
    :catch_3
    move-exception v1

    #@49
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_0

    #@4a
    .line 7804
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "e":Lorg/xmlpull/v1/XmlPullParserException;
    :catchall_0
    move-exception v5

    #@4b
    .line 7806
    :try_start_4
    invoke-virtual {v4}, Ljava/io/FileInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_4

    #@4e
    .line 7804
    :goto_1
    throw v5

    #@4f
    .line 7807
    :catch_4
    move-exception v1

    #@50
    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_1
.end method

.method public readFromParcel(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "in"    # Landroid/os/Parcel;

    #@0
    .prologue
    .line 10816
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readFromParcelLocked(Landroid/os/Parcel;)V

    #@3
    .line 10815
    return-void
.end method

.method readFromParcelLocked(Landroid/os/Parcel;)V
    .locals 25
    .param p1, "in"    # Landroid/os/Parcel;

    #@0
    .prologue
    .line 10820
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@3
    move-result v17

    #@4
    .line 10821
    .local v17, "magic":I
    const v4, -0x458a8b8b

    #@7
    move/from16 v0, v17

    #@9
    if-eq v0, v4, :cond_0

    #@b
    .line 10822
    new-instance v4, Landroid/os/ParcelFormatException;

    #@d
    new-instance v5, Ljava/lang/StringBuilder;

    #@f
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    #@12
    const-string/jumbo v6, "Bad magic number: #"

    #@15
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@18
    move-result-object v5

    #@19
    invoke-static/range {v17 .. v17}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    #@1c
    move-result-object v6

    #@1d
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@20
    move-result-object v5

    #@21
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@24
    move-result-object v5

    #@25
    invoke-direct {v4, v5}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@28
    throw v4

    #@29
    .line 10825
    :cond_0
    const/4 v4, 0x0

    #@2a
    move-object/from16 v0, p0

    #@2c
    move-object/from16 v1, p1

    #@2e
    invoke-virtual {v0, v1, v4}, Lcom/android/internal/os/BatteryStatsImpl;->readHistory(Landroid/os/Parcel;Z)V

    #@31
    .line 10827
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@34
    move-result v4

    #@35
    move-object/from16 v0, p0

    #@37
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@39
    .line 10828
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@3c
    move-result-wide v4

    #@3d
    move-object/from16 v0, p0

    #@3f
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    #@41
    .line 10829
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@44
    move-result-object v4

    #@45
    move-object/from16 v0, p0

    #@47
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    #@49
    .line 10830
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@4c
    move-result-object v4

    #@4d
    move-object/from16 v0, p0

    #@4f
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    #@51
    .line 10831
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@54
    move-result-wide v4

    #@55
    move-object/from16 v0, p0

    #@57
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    #@59
    .line 10832
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@5c
    move-result-wide v4

    #@5d
    move-object/from16 v0, p0

    #@5f
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    #@61
    .line 10833
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@64
    move-result-wide v4

    #@65
    move-object/from16 v0, p0

    #@67
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    #@69
    .line 10834
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@6c
    move-result-wide v4

    #@6d
    move-object/from16 v0, p0

    #@6f
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    #@71
    .line 10835
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@74
    move-result v4

    #@75
    if-eqz v4, :cond_1

    #@77
    const/4 v4, 0x1

    #@78
    :goto_0
    move-object/from16 v0, p0

    #@7a
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@7c
    .line 10836
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@7f
    move-result v4

    #@80
    move-object/from16 v0, p0

    #@82
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@84
    .line 10837
    const/4 v4, 0x0

    #@85
    move-object/from16 v0, p0

    #@87
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@89
    .line 10838
    move-object/from16 v0, p0

    #@8b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@8d
    move-object/from16 v0, p1

    #@8f
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readFromParcel(Landroid/os/Parcel;)V

    #@92
    .line 10839
    move-object/from16 v0, p0

    #@94
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@96
    move-object/from16 v0, p1

    #@98
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readFromParcel(Landroid/os/Parcel;)V

    #@9b
    .line 10841
    const/4 v4, 0x0

    #@9c
    move-object/from16 v0, p0

    #@9e
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@a0
    .line 10842
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@a2
    move-object/from16 v0, p0

    #@a4
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@a6
    move-object/from16 v0, p0

    #@a8
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@aa
    const/4 v6, 0x0

    #@ab
    const/4 v7, -0x1

    #@ac
    const/4 v8, 0x0

    #@ad
    move-object/from16 v10, p1

    #@af
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@b2
    move-object/from16 v0, p0

    #@b4
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@b6
    .line 10843
    const/4 v13, 0x0

    #@b7
    .local v13, "i":I
    :goto_1
    const/4 v4, 0x5

    #@b8
    if-ge v13, v4, :cond_2

    #@ba
    .line 10844
    move-object/from16 v0, p0

    #@bc
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@be
    move-object/from16 v24, v0

    #@c0
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@c2
    move-object/from16 v0, p0

    #@c4
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@c6
    rsub-int/lit8 v7, v13, -0x64

    #@c8
    .line 10845
    move-object/from16 v0, p0

    #@ca
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@cc
    .line 10844
    const/4 v6, 0x0

    #@cd
    const/4 v8, 0x0

    #@ce
    move-object/from16 v10, p1

    #@d0
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@d3
    aput-object v4, v24, v13

    #@d5
    .line 10843
    add-int/lit8 v13, v13, 0x1

    #@d7
    goto :goto_1

    #@d8
    .line 10835
    .end local v13    # "i":I
    :cond_1
    const/4 v4, 0x0

    #@d9
    goto :goto_0

    #@da
    .line 10847
    .restart local v13    # "i":I
    :cond_2
    const/4 v4, 0x0

    #@db
    move-object/from16 v0, p0

    #@dd
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    #@df
    .line 10848
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@e1
    move-object/from16 v0, p0

    #@e3
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e5
    move-object/from16 v0, p0

    #@e7
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@e9
    const/4 v6, 0x0

    #@ea
    const/16 v7, -0xa

    #@ec
    const/4 v8, 0x0

    #@ed
    move-object/from16 v10, p1

    #@ef
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@f2
    move-object/from16 v0, p0

    #@f4
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@f6
    .line 10849
    const/4 v4, 0x0

    #@f7
    move-object/from16 v0, p0

    #@f9
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    #@fb
    .line 10850
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@fd
    move-object/from16 v0, p0

    #@ff
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@101
    .line 10851
    move-object/from16 v0, p0

    #@103
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@105
    .line 10850
    const/4 v6, 0x0

    #@106
    const/4 v7, -0x2

    #@107
    const/4 v8, 0x0

    #@108
    move-object/from16 v10, p1

    #@10a
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@10d
    move-object/from16 v0, p0

    #@10f
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@111
    .line 10852
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@114
    move-result-wide v4

    #@115
    move-object/from16 v0, p0

    #@117
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    #@119
    .line 10853
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@11c
    move-result-wide v4

    #@11d
    move-object/from16 v0, p0

    #@11f
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    #@121
    .line 10854
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@123
    move-object/from16 v0, p0

    #@125
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@127
    .line 10855
    move-object/from16 v0, p0

    #@129
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@12b
    .line 10854
    const/4 v6, 0x0

    #@12c
    const/16 v7, -0xe

    #@12e
    const/4 v8, 0x0

    #@12f
    move-object/from16 v10, p1

    #@131
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@134
    move-object/from16 v0, p0

    #@136
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@138
    .line 10856
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@13a
    move-object/from16 v0, p0

    #@13c
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@13e
    .line 10857
    move-object/from16 v0, p0

    #@140
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@142
    .line 10856
    const/4 v6, 0x0

    #@143
    const/16 v7, -0xb

    #@145
    const/4 v8, 0x0

    #@146
    move-object/from16 v10, p1

    #@148
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@14b
    move-object/from16 v0, p0

    #@14d
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@14f
    .line 10858
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@151
    move-object/from16 v0, p0

    #@153
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@155
    .line 10859
    move-object/from16 v0, p0

    #@157
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@159
    .line 10858
    const/4 v6, 0x0

    #@15a
    const/16 v7, -0xf

    #@15c
    const/4 v8, 0x0

    #@15d
    move-object/from16 v10, p1

    #@15f
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@162
    move-object/from16 v0, p0

    #@164
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@166
    .line 10860
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@168
    move-object/from16 v0, p0

    #@16a
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@16c
    move-object/from16 v0, p0

    #@16e
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@170
    const/4 v6, 0x0

    #@171
    const/16 v7, -0xc

    #@173
    const/4 v8, 0x0

    #@174
    move-object/from16 v10, p1

    #@176
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@179
    move-object/from16 v0, p0

    #@17b
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@17d
    .line 10861
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@17f
    move-object/from16 v0, p0

    #@181
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@183
    move-object/from16 v0, p0

    #@185
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@187
    const/4 v6, 0x0

    #@188
    const/4 v7, -0x3

    #@189
    const/4 v8, 0x0

    #@18a
    move-object/from16 v10, p1

    #@18c
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@18f
    move-object/from16 v0, p0

    #@191
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@193
    .line 10862
    const/4 v13, 0x0

    #@194
    :goto_2
    const/4 v4, 0x5

    #@195
    if-ge v13, v4, :cond_3

    #@197
    .line 10863
    move-object/from16 v0, p0

    #@199
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@19b
    move-object/from16 v24, v0

    #@19d
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@19f
    move-object/from16 v0, p0

    #@1a1
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@1a3
    rsub-int v7, v13, -0xc8

    #@1a5
    .line 10864
    move-object/from16 v0, p0

    #@1a7
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@1a9
    .line 10863
    const/4 v6, 0x0

    #@1aa
    .line 10864
    const/4 v8, 0x0

    #@1ab
    move-object/from16 v10, p1

    #@1ad
    .line 10863
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@1b0
    aput-object v4, v24, v13

    #@1b2
    .line 10862
    add-int/lit8 v13, v13, 0x1

    #@1b4
    goto :goto_2

    #@1b5
    .line 10866
    :cond_3
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1b7
    move-object/from16 v0, p0

    #@1b9
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@1bb
    .line 10867
    move-object/from16 v0, p0

    #@1bd
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@1bf
    .line 10866
    const/4 v6, 0x0

    #@1c0
    const/16 v7, -0xc7

    #@1c2
    const/4 v8, 0x0

    #@1c3
    move-object/from16 v10, p1

    #@1c5
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@1c8
    move-object/from16 v0, p0

    #@1ca
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1cc
    .line 10868
    const/4 v13, 0x0

    #@1cd
    :goto_3
    const/16 v4, 0x11

    #@1cf
    if-ge v13, v4, :cond_4

    #@1d1
    .line 10869
    move-object/from16 v0, p0

    #@1d3
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1d5
    move-object/from16 v24, v0

    #@1d7
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1d9
    move-object/from16 v0, p0

    #@1db
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@1dd
    rsub-int v7, v13, -0x12c

    #@1df
    .line 10870
    move-object/from16 v0, p0

    #@1e1
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@1e3
    .line 10869
    const/4 v6, 0x0

    #@1e4
    .line 10870
    const/4 v8, 0x0

    #@1e5
    move-object/from16 v10, p1

    #@1e7
    .line 10869
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@1ea
    aput-object v4, v24, v13

    #@1ec
    .line 10868
    add-int/lit8 v13, v13, 0x1

    #@1ee
    goto :goto_3

    #@1ef
    .line 10872
    :cond_4
    const/4 v13, 0x0

    #@1f0
    :goto_4
    const/4 v4, 0x6

    #@1f1
    if-ge v13, v4, :cond_5

    #@1f3
    .line 10873
    move-object/from16 v0, p0

    #@1f5
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1f7
    new-instance v5, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1f9
    move-object/from16 v0, p0

    #@1fb
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@1fd
    move-object/from16 v0, p1

    #@1ff
    invoke-direct {v5, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@202
    aput-object v5, v4, v13

    #@204
    .line 10874
    move-object/from16 v0, p0

    #@206
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@208
    new-instance v5, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@20a
    move-object/from16 v0, p0

    #@20c
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@20e
    move-object/from16 v0, p1

    #@210
    invoke-direct {v5, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@213
    aput-object v5, v4, v13

    #@215
    .line 10872
    add-int/lit8 v13, v13, 0x1

    #@217
    goto :goto_4

    #@218
    .line 10876
    :cond_5
    const/4 v4, 0x1

    #@219
    move-object/from16 v0, p0

    #@21b
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    #@21d
    .line 10877
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@21f
    move-object/from16 v0, p0

    #@221
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@223
    .line 10878
    move-object/from16 v0, p0

    #@225
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@227
    .line 10877
    const/4 v6, 0x0

    #@228
    const/16 v7, -0x190

    #@22a
    const/4 v8, 0x0

    #@22b
    move-object/from16 v10, p1

    #@22d
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@230
    move-object/from16 v0, p0

    #@232
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@234
    .line 10879
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@236
    move-object/from16 v0, p0

    #@238
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@23a
    .line 10880
    move-object/from16 v0, p0

    #@23c
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@23e
    .line 10879
    const/4 v6, 0x0

    #@23f
    const/16 v7, -0x191

    #@241
    const/4 v8, 0x0

    #@242
    move-object/from16 v10, p1

    #@244
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@247
    move-object/from16 v0, p0

    #@249
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@24b
    .line 10881
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@24d
    move-object/from16 v0, p0

    #@24f
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@251
    move-object/from16 v0, p1

    #@253
    invoke-direct {v4, v5, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@256
    move-object/from16 v0, p0

    #@258
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@25a
    .line 10882
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@25c
    move-object/from16 v0, p0

    #@25e
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@260
    move-object/from16 v0, p1

    #@262
    invoke-direct {v4, v5, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@265
    move-object/from16 v0, p0

    #@267
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@269
    .line 10883
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@26b
    move-object/from16 v0, p0

    #@26d
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@26f
    move-object/from16 v0, p1

    #@271
    invoke-direct {v4, v5, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@274
    move-object/from16 v0, p0

    #@276
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@278
    .line 10884
    const/4 v4, 0x1

    #@279
    move-object/from16 v0, p0

    #@27b
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    #@27d
    .line 10885
    const/4 v4, 0x0

    #@27e
    move-object/from16 v0, p0

    #@280
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    #@282
    .line 10886
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@284
    move-object/from16 v0, p0

    #@286
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@288
    move-object/from16 v0, p0

    #@28a
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@28c
    const/4 v6, 0x0

    #@28d
    const/4 v7, -0x4

    #@28e
    const/4 v8, 0x0

    #@28f
    move-object/from16 v10, p1

    #@291
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@294
    move-object/from16 v0, p0

    #@296
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@298
    .line 10887
    const/4 v4, 0x0

    #@299
    move-object/from16 v0, p0

    #@29b
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    #@29d
    .line 10888
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@29f
    move-object/from16 v0, p0

    #@2a1
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2a3
    .line 10889
    move-object/from16 v0, p0

    #@2a5
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2a7
    .line 10888
    const/4 v6, 0x0

    #@2a8
    const/4 v7, -0x5

    #@2a9
    const/4 v8, 0x0

    #@2aa
    move-object/from16 v10, p1

    #@2ac
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@2af
    move-object/from16 v0, p0

    #@2b1
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2b3
    .line 10890
    const/4 v13, 0x0

    #@2b4
    :goto_5
    const/16 v4, 0x8

    #@2b6
    if-ge v13, v4, :cond_6

    #@2b8
    .line 10891
    move-object/from16 v0, p0

    #@2ba
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2bc
    move-object/from16 v24, v0

    #@2be
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2c0
    move-object/from16 v0, p0

    #@2c2
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2c4
    rsub-int v7, v13, -0x258

    #@2c6
    .line 10892
    move-object/from16 v0, p0

    #@2c8
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2ca
    .line 10891
    const/4 v6, 0x0

    #@2cb
    .line 10892
    const/4 v8, 0x0

    #@2cc
    move-object/from16 v10, p1

    #@2ce
    .line 10891
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@2d1
    aput-object v4, v24, v13

    #@2d3
    .line 10890
    add-int/lit8 v13, v13, 0x1

    #@2d5
    goto :goto_5

    #@2d6
    .line 10894
    :cond_6
    const/4 v13, 0x0

    #@2d7
    :goto_6
    const/16 v4, 0xd

    #@2d9
    if-ge v13, v4, :cond_7

    #@2db
    .line 10895
    move-object/from16 v0, p0

    #@2dd
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2df
    move-object/from16 v24, v0

    #@2e1
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2e3
    move-object/from16 v0, p0

    #@2e5
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2e7
    rsub-int v7, v13, -0x2bc

    #@2e9
    .line 10896
    move-object/from16 v0, p0

    #@2eb
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2ed
    .line 10895
    const/4 v6, 0x0

    #@2ee
    .line 10896
    const/4 v8, 0x0

    #@2ef
    move-object/from16 v10, p1

    #@2f1
    .line 10895
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@2f4
    aput-object v4, v24, v13

    #@2f6
    .line 10894
    add-int/lit8 v13, v13, 0x1

    #@2f8
    goto :goto_6

    #@2f9
    .line 10898
    :cond_7
    const/4 v13, 0x0

    #@2fa
    :goto_7
    const/4 v4, 0x5

    #@2fb
    if-ge v13, v4, :cond_8

    #@2fd
    .line 10899
    move-object/from16 v0, p0

    #@2ff
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@301
    move-object/from16 v24, v0

    #@303
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@305
    move-object/from16 v0, p0

    #@307
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@309
    rsub-int v7, v13, -0x320

    #@30b
    .line 10900
    move-object/from16 v0, p0

    #@30d
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@30f
    .line 10899
    const/4 v6, 0x0

    #@310
    .line 10900
    const/4 v8, 0x0

    #@311
    move-object/from16 v10, p1

    #@313
    .line 10899
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@316
    aput-object v4, v24, v13

    #@318
    .line 10898
    add-int/lit8 v13, v13, 0x1

    #@31a
    goto :goto_7

    #@31b
    .line 10903
    :cond_8
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@31d
    move-object/from16 v0, p0

    #@31f
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@321
    .line 10904
    const/4 v6, 0x1

    #@322
    .line 10903
    move-object/from16 v0, p1

    #@324
    invoke-direct {v4, v5, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    #@327
    move-object/from16 v0, p0

    #@329
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@32b
    .line 10905
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@32d
    move-object/from16 v0, p0

    #@32f
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@331
    .line 10906
    const/4 v6, 0x1

    #@332
    .line 10905
    move-object/from16 v0, p1

    #@334
    invoke-direct {v4, v5, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    #@337
    move-object/from16 v0, p0

    #@339
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@33b
    .line 10907
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@33d
    move-object/from16 v0, p0

    #@33f
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@341
    .line 10908
    const/4 v6, 0x5

    #@342
    .line 10907
    move-object/from16 v0, p1

    #@344
    invoke-direct {v4, v5, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    #@347
    move-object/from16 v0, p0

    #@349
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@34b
    .line 10909
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@34e
    move-result v4

    #@34f
    if-eqz v4, :cond_a

    #@351
    const/4 v4, 0x1

    #@352
    :goto_8
    move-object/from16 v0, p0

    #@354
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@356
    .line 10910
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@359
    move-result v4

    #@35a
    if-eqz v4, :cond_b

    #@35c
    const/4 v4, 0x1

    #@35d
    :goto_9
    move-object/from16 v0, p0

    #@35f
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@361
    .line 10911
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@364
    move-result v4

    #@365
    if-eqz v4, :cond_c

    #@367
    const/4 v4, 0x1

    #@368
    :goto_a
    move-object/from16 v0, p0

    #@36a
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@36c
    .line 10913
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@36f
    move-result v4

    #@370
    move-object/from16 v0, p0

    #@372
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    #@374
    .line 10914
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@377
    move-result v4

    #@378
    move-object/from16 v0, p0

    #@37a
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    #@37c
    .line 10915
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@37f
    move-result v4

    #@380
    move-object/from16 v0, p0

    #@382
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUnpluggedNumConnectivityChange:I

    #@384
    .line 10916
    const/4 v4, 0x0

    #@385
    move-object/from16 v0, p0

    #@387
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    #@389
    .line 10917
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@38b
    move-object/from16 v0, p0

    #@38d
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@38f
    move-object/from16 v0, p0

    #@391
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@393
    const/4 v6, 0x0

    #@394
    const/4 v7, -0x7

    #@395
    const/4 v8, 0x0

    #@396
    invoke-direct/range {v4 .. v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@399
    move-object/from16 v0, p0

    #@39b
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@39d
    .line 10918
    const/4 v4, 0x0

    #@39e
    move-object/from16 v0, p0

    #@3a0
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    #@3a2
    .line 10919
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3a4
    move-object/from16 v0, p0

    #@3a6
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3a8
    move-object/from16 v0, p0

    #@3aa
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3ac
    const/4 v6, 0x0

    #@3ad
    const/4 v7, -0x8

    #@3ae
    const/4 v8, 0x0

    #@3af
    invoke-direct/range {v4 .. v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@3b2
    move-object/from16 v0, p0

    #@3b4
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3b6
    .line 10920
    const/4 v4, 0x0

    #@3b7
    move-object/from16 v0, p0

    #@3b9
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@3bb
    .line 10921
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3bd
    move-object/from16 v0, p0

    #@3bf
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3c1
    move-object/from16 v0, p0

    #@3c3
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3c5
    const/4 v6, 0x0

    #@3c6
    const/16 v7, -0x9

    #@3c8
    const/4 v8, 0x0

    #@3c9
    move-object/from16 v10, p1

    #@3cb
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@3ce
    move-object/from16 v0, p0

    #@3d0
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3d2
    .line 10922
    const/4 v4, 0x0

    #@3d3
    move-object/from16 v0, p0

    #@3d5
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@3d7
    .line 10923
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3d9
    move-object/from16 v0, p0

    #@3db
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3dd
    move-object/from16 v0, p0

    #@3df
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3e1
    const/4 v6, 0x0

    #@3e2
    const/16 v7, -0xd

    #@3e4
    const/4 v8, 0x0

    #@3e5
    move-object/from16 v10, p1

    #@3e7
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@3ea
    move-object/from16 v0, p0

    #@3ec
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3ee
    .line 10924
    const/4 v4, 0x0

    #@3ef
    move-object/from16 v0, p0

    #@3f1
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@3f3
    .line 10925
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3f5
    move-object/from16 v0, p0

    #@3f7
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@3f9
    move-object/from16 v0, p0

    #@3fb
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@3fd
    const/4 v6, 0x0

    #@3fe
    const/16 v7, -0xe

    #@400
    const/4 v8, 0x0

    #@401
    move-object/from16 v10, p1

    #@403
    invoke-direct/range {v4 .. v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@406
    move-object/from16 v0, p0

    #@408
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@40a
    .line 10926
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@40d
    move-result v4

    #@40e
    move-object/from16 v0, p0

    #@410
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@412
    .line 10927
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@415
    move-result v4

    #@416
    move-object/from16 v0, p0

    #@418
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@41a
    .line 10928
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@41d
    move-result v4

    #@41e
    move-object/from16 v0, p0

    #@420
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@422
    .line 10929
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@425
    move-result v4

    #@426
    move-object/from16 v0, p0

    #@428
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@42a
    .line 10930
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@42d
    move-result v4

    #@42e
    move-object/from16 v0, p0

    #@430
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    #@432
    .line 10931
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@435
    move-result v4

    #@436
    move-object/from16 v0, p0

    #@438
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    #@43a
    .line 10932
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@43d
    move-result v4

    #@43e
    move-object/from16 v0, p0

    #@440
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    #@442
    .line 10933
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@445
    move-result v4

    #@446
    move-object/from16 v0, p0

    #@448
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    #@44a
    .line 10934
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@44d
    move-result v4

    #@44e
    move-object/from16 v0, p0

    #@450
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    #@452
    .line 10935
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@455
    move-result v4

    #@456
    move-object/from16 v0, p0

    #@458
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    #@45a
    .line 10936
    move-object/from16 v0, p0

    #@45c
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@45e
    move-object/from16 v0, p1

    #@460
    invoke-virtual {v4, v0}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    #@463
    .line 10937
    move-object/from16 v0, p0

    #@465
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@467
    move-object/from16 v0, p1

    #@469
    invoke-virtual {v4, v0}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    #@46c
    .line 10938
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@46e
    move-object/from16 v0, p0

    #@470
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@472
    move-object/from16 v0, p1

    #@474
    invoke-direct {v4, v5, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@477
    move-object/from16 v0, p0

    #@479
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@47b
    .line 10939
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@47d
    move-object/from16 v0, p0

    #@47f
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@481
    move-object/from16 v0, p1

    #@483
    invoke-direct {v4, v5, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@486
    move-object/from16 v0, p0

    #@488
    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@48a
    .line 10940
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@48d
    move-result-wide v4

    #@48e
    move-object/from16 v0, p0

    #@490
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    #@492
    .line 10942
    move-object/from16 v0, p0

    #@494
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@496
    invoke-virtual {v4}, Ljava/util/HashMap;->clear()V

    #@499
    .line 10943
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@49c
    move-result v11

    #@49d
    .line 10944
    .local v11, "NKW":I
    const/4 v14, 0x0

    #@49e
    .local v14, "ikw":I
    :goto_b
    if-ge v14, v11, :cond_d

    #@4a0
    .line 10945
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@4a3
    move-result v4

    #@4a4
    if-eqz v4, :cond_9

    #@4a6
    .line 10946
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@4a9
    move-result-object v23

    #@4aa
    .line 10947
    .local v23, "wakelockName":Ljava/lang/String;
    new-instance v16, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@4ac
    move-object/from16 v0, p0

    #@4ae
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@4b0
    move-object/from16 v0, p0

    #@4b2
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@4b4
    move-object/from16 v0, v16

    #@4b6
    move-object/from16 v1, p1

    #@4b8
    invoke-direct {v0, v4, v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@4bb
    .line 10948
    .local v16, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    move-object/from16 v0, p0

    #@4bd
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@4bf
    move-object/from16 v0, v23

    #@4c1
    move-object/from16 v1, v16

    #@4c3
    invoke-virtual {v4, v0, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@4c6
    .line 10944
    .end local v16    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .end local v23    # "wakelockName":Ljava/lang/String;
    :cond_9
    add-int/lit8 v14, v14, 0x1

    #@4c8
    goto :goto_b

    #@4c9
    .line 10909
    .end local v11    # "NKW":I
    .end local v14    # "ikw":I
    :cond_a
    const/4 v4, 0x0

    #@4ca
    goto/16 :goto_8

    #@4cc
    .line 10910
    :cond_b
    const/4 v4, 0x0

    #@4cd
    goto/16 :goto_9

    #@4cf
    .line 10911
    :cond_c
    const/4 v4, 0x0

    #@4d0
    goto/16 :goto_a

    #@4d2
    .line 10952
    .restart local v11    # "NKW":I
    .restart local v14    # "ikw":I
    :cond_d
    move-object/from16 v0, p0

    #@4d4
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@4d6
    invoke-virtual {v4}, Ljava/util/HashMap;->clear()V

    #@4d9
    .line 10953
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@4dc
    move-result v12

    #@4dd
    .line 10954
    .local v12, "NWR":I
    const/4 v15, 0x0

    #@4de
    .local v15, "iwr":I
    :goto_c
    if-ge v15, v12, :cond_f

    #@4e0
    .line 10955
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@4e3
    move-result v4

    #@4e4
    if-eqz v4, :cond_e

    #@4e6
    .line 10956
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@4e9
    move-result-object v19

    #@4ea
    .line 10957
    .local v19, "reasonName":Ljava/lang/String;
    new-instance v20, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@4ec
    move-object/from16 v0, p0

    #@4ee
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@4f0
    move-object/from16 v0, p0

    #@4f2
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@4f4
    move-object/from16 v0, v20

    #@4f6
    move-object/from16 v1, p1

    #@4f8
    invoke-direct {v0, v4, v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@4fb
    .line 10958
    .local v20, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    move-object/from16 v0, p0

    #@4fd
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@4ff
    move-object/from16 v0, v19

    #@501
    move-object/from16 v1, v20

    #@503
    invoke-virtual {v4, v0, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@506
    .line 10954
    .end local v19    # "reasonName":Ljava/lang/String;
    .end local v20    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_e
    add-int/lit8 v15, v15, 0x1

    #@508
    goto :goto_c

    #@509
    .line 10962
    :cond_f
    move-object/from16 v0, p0

    #@50b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@50d
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@510
    .line 10963
    move-object/from16 v0, p0

    #@512
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    #@514
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@517
    .line 10964
    move-object/from16 v0, p0

    #@519
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    #@51b
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@51e
    .line 10965
    move-object/from16 v0, p0

    #@520
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    #@522
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@525
    .line 10966
    move-object/from16 v0, p0

    #@527
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    #@529
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@52c
    .line 10967
    move-object/from16 v0, p0

    #@52e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    #@530
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@533
    .line 10968
    move-object/from16 v0, p0

    #@535
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    #@537
    invoke-virtual {v4}, Landroid/util/SparseArray;->clear()V

    #@53a
    .line 10969
    move-object/from16 v0, p0

    #@53c
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    #@53e
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@541
    .line 10970
    move-object/from16 v0, p0

    #@543
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    #@545
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@548
    .line 10971
    move-object/from16 v0, p0

    #@54a
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    #@54c
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@54f
    .line 10972
    move-object/from16 v0, p0

    #@551
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    #@553
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@556
    .line 10973
    move-object/from16 v0, p0

    #@558
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    #@55a
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    #@55d
    .line 10975
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@560
    move-result v18

    #@561
    .line 10976
    .local v18, "numUids":I
    move-object/from16 v0, p0

    #@563
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@565
    invoke-virtual {v4}, Landroid/util/SparseArray;->clear()V

    #@568
    .line 10977
    const/4 v13, 0x0

    #@569
    :goto_d
    move/from16 v0, v18

    #@56b
    if-ge v13, v0, :cond_10

    #@56d
    .line 10978
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@570
    move-result v22

    #@571
    .line 10979
    .local v22, "uid":I
    new-instance v21, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@573
    move-object/from16 v0, v21

    #@575
    move-object/from16 v1, p0

    #@577
    move/from16 v2, v22

    #@579
    invoke-direct {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    #@57c
    .line 10980
    .local v21, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v0, p0

    #@57e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@580
    move-object/from16 v0, p0

    #@582
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@584
    move-object/from16 v0, v21

    #@586
    move-object/from16 v1, p1

    #@588
    invoke-virtual {v0, v4, v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readFromParcelLocked(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    #@58b
    .line 10981
    move-object/from16 v0, p0

    #@58d
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@58f
    move/from16 v0, v22

    #@591
    move-object/from16 v1, v21

    #@593
    invoke-virtual {v4, v0, v1}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    #@596
    .line 10977
    add-int/lit8 v13, v13, 0x1

    #@598
    goto :goto_d

    #@599
    .line 10819
    .end local v21    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v22    # "uid":I
    :cond_10
    return-void
.end method

.method readHistory(Landroid/os/Parcel;Z)V
    .locals 18
    .param p1, "in"    # Landroid/os/Parcel;
    .param p2, "andOldHistory"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/ParcelFormatException;
        }
    .end annotation

    #@0
    .prologue
    .line 9966
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@3
    move-result-wide v4

    #@4
    .line 9968
    .local v4, "historyBaseTime":J
    move-object/from16 v0, p0

    #@6
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@8
    const/4 v15, 0x0

    #@9
    invoke-virtual {v14, v15}, Landroid/os/Parcel;->setDataSize(I)V

    #@c
    .line 9969
    move-object/from16 v0, p0

    #@e
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@10
    const/4 v15, 0x0

    #@11
    invoke-virtual {v14, v15}, Landroid/os/Parcel;->setDataPosition(I)V

    #@14
    .line 9970
    move-object/from16 v0, p0

    #@16
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@18
    invoke-virtual {v14}, Ljava/util/HashMap;->clear()V

    #@1b
    .line 9971
    const/4 v14, 0x0

    #@1c
    move-object/from16 v0, p0

    #@1e
    iput v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@20
    .line 9972
    const/4 v14, 0x0

    #@21
    move-object/from16 v0, p0

    #@23
    iput v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@25
    .line 9974
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@28
    move-result v8

    #@29
    .line 9975
    .local v8, "numTags":I
    const/4 v6, 0x0

    #@2a
    .local v6, "i":I
    :goto_0
    if-ge v6, v8, :cond_2

    #@2c
    .line 9976
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@2f
    move-result v7

    #@30
    .line 9977
    .local v7, "idx":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@33
    move-result-object v9

    #@34
    .line 9978
    .local v9, "str":Ljava/lang/String;
    if-nez v9, :cond_0

    #@36
    .line 9979
    new-instance v14, Landroid/os/ParcelFormatException;

    #@38
    const-string/jumbo v15, "null history tag string"

    #@3b
    invoke-direct {v14, v15}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@3e
    throw v14

    #@3f
    .line 9981
    :cond_0
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@42
    move-result v13

    #@43
    .line 9982
    .local v13, "uid":I
    new-instance v12, Landroid/os/BatteryStats$HistoryTag;

    #@45
    invoke-direct {v12}, Landroid/os/BatteryStats$HistoryTag;-><init>()V

    #@48
    .line 9983
    .local v12, "tag":Landroid/os/BatteryStats$HistoryTag;
    iput-object v9, v12, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@4a
    .line 9984
    iput v13, v12, Landroid/os/BatteryStats$HistoryTag;->uid:I

    #@4c
    .line 9985
    iput v7, v12, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    #@4e
    .line 9986
    move-object/from16 v0, p0

    #@50
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@52
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    #@55
    move-result-object v15

    #@56
    invoke-virtual {v14, v12, v15}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@59
    .line 9987
    move-object/from16 v0, p0

    #@5b
    iget v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@5d
    if-lt v7, v14, :cond_1

    #@5f
    .line 9988
    add-int/lit8 v14, v7, 0x1

    #@61
    move-object/from16 v0, p0

    #@63
    iput v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    #@65
    .line 9990
    :cond_1
    move-object/from16 v0, p0

    #@67
    iget v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@69
    iget-object v15, v12, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@6b
    invoke-virtual {v15}, Ljava/lang/String;->length()I

    #@6e
    move-result v15

    #@6f
    add-int/lit8 v15, v15, 0x1

    #@71
    add-int/2addr v14, v15

    #@72
    move-object/from16 v0, p0

    #@74
    iput v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    #@76
    .line 9975
    add-int/lit8 v6, v6, 0x1

    #@78
    goto :goto_0

    #@79
    .line 9993
    .end local v7    # "idx":I
    .end local v9    # "str":Ljava/lang/String;
    .end local v12    # "tag":Landroid/os/BatteryStats$HistoryTag;
    .end local v13    # "uid":I
    :cond_2
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@7c
    move-result v2

    #@7d
    .line 9994
    .local v2, "bufSize":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->dataPosition()I

    #@80
    move-result v3

    #@81
    .line 9995
    .local v3, "curPos":I
    const/high16 v14, 0xf0000

    #@83
    if-lt v2, v14, :cond_3

    #@85
    .line 9996
    new-instance v14, Landroid/os/ParcelFormatException;

    #@87
    new-instance v15, Ljava/lang/StringBuilder;

    #@89
    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    #@8c
    const-string/jumbo v16, "File corrupt: history data buffer too large "

    #@8f
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@92
    move-result-object v15

    #@93
    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@96
    move-result-object v15

    #@97
    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9a
    move-result-object v15

    #@9b
    invoke-direct {v14, v15}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@9e
    throw v14

    #@9f
    .line 9998
    :cond_3
    and-int/lit8 v14, v2, -0x4

    #@a1
    if-eq v14, v2, :cond_4

    #@a3
    .line 9999
    new-instance v14, Landroid/os/ParcelFormatException;

    #@a5
    new-instance v15, Ljava/lang/StringBuilder;

    #@a7
    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    #@aa
    const-string/jumbo v16, "File corrupt: history data buffer not aligned "

    #@ad
    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@b0
    move-result-object v15

    #@b1
    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@b4
    move-result-object v15

    #@b5
    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@b8
    move-result-object v15

    #@b9
    invoke-direct {v14, v15}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@bc
    throw v14

    #@bd
    .line 10004
    :cond_4
    move-object/from16 v0, p0

    #@bf
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@c1
    move-object/from16 v0, p1

    #@c3
    invoke-virtual {v14, v0, v3, v2}, Landroid/os/Parcel;->appendFrom(Landroid/os/Parcel;II)V

    #@c6
    .line 10005
    add-int v14, v3, v2

    #@c8
    move-object/from16 v0, p1

    #@ca
    invoke-virtual {v0, v14}, Landroid/os/Parcel;->setDataPosition(I)V

    #@cd
    .line 10008
    if-eqz p2, :cond_5

    #@cf
    .line 10009
    invoke-virtual/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->readOldHistory(Landroid/os/Parcel;)V

    #@d2
    .line 10018
    :cond_5
    move-object/from16 v0, p0

    #@d4
    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@d6
    .line 10028
    move-object/from16 v0, p0

    #@d8
    iget-wide v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@da
    const-wide/16 v16, 0x0

    #@dc
    cmp-long v14, v14, v16

    #@de
    if-lez v14, :cond_6

    #@e0
    .line 10029
    move-object/from16 v0, p0

    #@e2
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@e4
    invoke-interface {v14}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@e7
    move-result-wide v10

    #@e8
    .line 10030
    .local v10, "oldnow":J
    move-object/from16 v0, p0

    #@ea
    iget-wide v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@ec
    sub-long/2addr v14, v10

    #@ed
    const-wide/16 v16, 0x1

    #@ef
    add-long v14, v14, v16

    #@f1
    move-object/from16 v0, p0

    #@f3
    iput-wide v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@f5
    .line 9965
    .end local v10    # "oldnow":J
    :cond_6
    return-void
.end method

.method public readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V
    .locals 18
    .param p1, "src"    # Landroid/os/Parcel;
    .param p2, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    .line 2482
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@3
    move-result v8

    #@4
    .line 2483
    .local v8, "firstToken":I
    const v14, 0x7ffff

    #@7
    and-int v5, v8, v14

    #@9
    .line 2484
    .local v5, "deltaTimeToken":I
    const/4 v14, 0x0

    #@a
    move-object/from16 v0, p2

    #@c
    iput-byte v14, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    #@e
    .line 2485
    const/4 v14, 0x1

    #@f
    move-object/from16 v0, p2

    #@11
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@13
    .line 2489
    const v14, 0x7fffd

    #@16
    if-ge v5, v14, :cond_2

    #@18
    .line 2490
    move-object/from16 v0, p2

    #@1a
    iget-wide v14, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@1c
    int-to-long v0, v5

    #@1d
    move-wide/from16 v16, v0

    #@1f
    add-long v14, v14, v16

    #@21
    move-object/from16 v0, p2

    #@23
    iput-wide v14, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@25
    .line 2510
    :goto_0
    const/high16 v14, 0x80000

    #@27
    and-int/2addr v14, v8

    #@28
    if-eqz v14, :cond_5

    #@2a
    .line 2511
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@2d
    move-result v2

    #@2e
    .line 2512
    .local v2, "batteryLevelInt":I
    move-object/from16 v0, p0

    #@30
    move-object/from16 v1, p2

    #@32
    invoke-direct {v0, v2, v1}, Lcom/android/internal/os/BatteryStatsImpl;->readBatteryLevelInt(ILandroid/os/BatteryStats$HistoryItem;)V

    #@35
    .line 2513
    move-object/from16 v0, p2

    #@37
    iget v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@39
    add-int/lit8 v14, v14, 0x1

    #@3b
    move-object/from16 v0, p2

    #@3d
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@3f
    .line 2523
    :goto_1
    const/high16 v14, 0x100000

    #@41
    and-int/2addr v14, v8

    #@42
    if-eqz v14, :cond_6

    #@44
    .line 2524
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@47
    move-result v11

    #@48
    .line 2525
    .local v11, "stateInt":I
    const/high16 v14, -0x2000000

    #@4a
    and-int/2addr v14, v8

    #@4b
    const v15, 0xffffff

    #@4e
    and-int/2addr v15, v11

    #@4f
    or-int/2addr v14, v15

    #@50
    move-object/from16 v0, p2

    #@52
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@54
    .line 2526
    shr-int/lit8 v14, v11, 0x1d

    #@56
    and-int/lit8 v14, v14, 0x7

    #@58
    int-to-byte v14, v14

    #@59
    move-object/from16 v0, p2

    #@5b
    iput-byte v14, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@5d
    .line 2528
    shr-int/lit8 v14, v11, 0x1a

    #@5f
    and-int/lit8 v14, v14, 0x7

    #@61
    int-to-byte v14, v14

    #@62
    move-object/from16 v0, p2

    #@64
    iput-byte v14, v0, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    #@66
    .line 2530
    shr-int/lit8 v14, v11, 0x18

    #@68
    and-int/lit8 v14, v14, 0x3

    #@6a
    int-to-byte v14, v14

    #@6b
    move-object/from16 v0, p2

    #@6d
    iput-byte v14, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@6f
    .line 2532
    move-object/from16 v0, p2

    #@71
    iget-byte v14, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@73
    packed-switch v14, :pswitch_data_0

    #@76
    .line 2543
    :goto_2
    move-object/from16 v0, p2

    #@78
    iget v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@7a
    add-int/lit8 v14, v14, 0x1

    #@7c
    move-object/from16 v0, p2

    #@7e
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@80
    .line 2554
    .end local v11    # "stateInt":I
    :goto_3
    const/high16 v14, 0x200000

    #@82
    and-int/2addr v14, v8

    #@83
    if-eqz v14, :cond_0

    #@85
    .line 2555
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@88
    move-result v14

    #@89
    move-object/from16 v0, p2

    #@8b
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@8d
    .line 2560
    :cond_0
    const/high16 v14, 0x400000

    #@8f
    and-int/2addr v14, v8

    #@90
    if-eqz v14, :cond_9

    #@92
    .line 2561
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@95
    move-result v10

    #@96
    .line 2562
    .local v10, "indexes":I
    const v14, 0xffff

    #@99
    and-int v12, v10, v14

    #@9b
    .line 2563
    .local v12, "wakeLockIndex":I
    shr-int/lit8 v14, v10, 0x10

    #@9d
    const v15, 0xffff

    #@a0
    and-int v13, v14, v15

    #@a2
    .line 2564
    .local v13, "wakeReasonIndex":I
    const v14, 0xffff

    #@a5
    if-eq v12, v14, :cond_7

    #@a7
    .line 2565
    move-object/from16 v0, p2

    #@a9
    iget-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@ab
    move-object/from16 v0, p2

    #@ad
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@af
    .line 2566
    move-object/from16 v0, p2

    #@b1
    iget-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@b3
    move-object/from16 v0, p0

    #@b5
    invoke-direct {v0, v12, v14}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    #@b8
    .line 2572
    :goto_4
    const v14, 0xffff

    #@bb
    if-eq v13, v14, :cond_8

    #@bd
    .line 2573
    move-object/from16 v0, p2

    #@bf
    iget-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@c1
    move-object/from16 v0, p2

    #@c3
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@c5
    .line 2574
    move-object/from16 v0, p2

    #@c7
    iget-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@c9
    move-object/from16 v0, p0

    #@cb
    invoke-direct {v0, v13, v14}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    #@ce
    .line 2580
    :goto_5
    move-object/from16 v0, p2

    #@d0
    iget v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@d2
    add-int/lit8 v14, v14, 0x1

    #@d4
    move-object/from16 v0, p2

    #@d6
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@d8
    .line 2586
    .end local v10    # "indexes":I
    .end local v12    # "wakeLockIndex":I
    .end local v13    # "wakeReasonIndex":I
    :goto_6
    const/high16 v14, 0x800000

    #@da
    and-int/2addr v14, v8

    #@db
    if-eqz v14, :cond_a

    #@dd
    .line 2587
    move-object/from16 v0, p2

    #@df
    iget-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    #@e1
    move-object/from16 v0, p2

    #@e3
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@e5
    .line 2588
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@e8
    move-result v3

    #@e9
    .line 2589
    .local v3, "codeAndIndex":I
    const v14, 0xffff

    #@ec
    and-int/2addr v14, v3

    #@ed
    move-object/from16 v0, p2

    #@ef
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@f1
    .line 2590
    shr-int/lit8 v14, v3, 0x10

    #@f3
    const v15, 0xffff

    #@f6
    and-int v9, v14, v15

    #@f8
    .line 2591
    .local v9, "index":I
    move-object/from16 v0, p2

    #@fa
    iget-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@fc
    move-object/from16 v0, p0

    #@fe
    invoke-direct {v0, v9, v14}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    #@101
    .line 2592
    move-object/from16 v0, p2

    #@103
    iget v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@105
    add-int/lit8 v14, v14, 0x1

    #@107
    move-object/from16 v0, p2

    #@109
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@10b
    .line 2600
    .end local v3    # "codeAndIndex":I
    .end local v9    # "index":I
    :goto_7
    and-int/lit8 v14, v2, 0x1

    #@10d
    if-eqz v14, :cond_b

    #@10f
    .line 2601
    move-object/from16 v0, p0

    #@111
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@113
    move-object/from16 v0, p2

    #@115
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@117
    .line 2602
    move-object/from16 v0, p2

    #@119
    iget-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@11b
    move-object/from16 v0, p1

    #@11d
    invoke-virtual {v14, v0}, Landroid/os/BatteryStats$HistoryStepDetails;->readFromParcel(Landroid/os/Parcel;)V

    #@120
    .line 2607
    :goto_8
    const/high16 v14, 0x1000000

    #@122
    and-int/2addr v14, v8

    #@123
    if-eqz v14, :cond_1

    #@125
    .line 2608
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@128
    move-result v14

    #@129
    move-object/from16 v0, p2

    #@12b
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@12d
    .line 2481
    :cond_1
    return-void

    #@12e
    .line 2491
    .end local v2    # "batteryLevelInt":I
    :cond_2
    const v14, 0x7fffd

    #@131
    if-ne v5, v14, :cond_3

    #@133
    .line 2492
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@136
    move-result-wide v14

    #@137
    move-object/from16 v0, p2

    #@139
    iput-wide v14, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@13b
    .line 2493
    move-object/from16 v0, p2

    #@13d
    iget v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@13f
    add-int/lit8 v14, v14, 0x2

    #@141
    move-object/from16 v0, p2

    #@143
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@145
    .line 2495
    move-object/from16 v0, p2

    #@147
    move-object/from16 v1, p1

    #@149
    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$HistoryItem;->readFromParcel(Landroid/os/Parcel;)V

    #@14c
    .line 2496
    return-void

    #@14d
    .line 2497
    :cond_3
    const v14, 0x7fffe

    #@150
    if-ne v5, v14, :cond_4

    #@152
    .line 2498
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@155
    move-result v4

    #@156
    .line 2499
    .local v4, "delta":I
    move-object/from16 v0, p2

    #@158
    iget-wide v14, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@15a
    int-to-long v0, v4

    #@15b
    move-wide/from16 v16, v0

    #@15d
    add-long v14, v14, v16

    #@15f
    move-object/from16 v0, p2

    #@161
    iput-wide v14, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@163
    .line 2500
    move-object/from16 v0, p2

    #@165
    iget v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@167
    add-int/lit8 v14, v14, 0x1

    #@169
    move-object/from16 v0, p2

    #@16b
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@16d
    goto/16 :goto_0

    #@16f
    .line 2503
    .end local v4    # "delta":I
    :cond_4
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@172
    move-result-wide v6

    #@173
    .line 2505
    .local v6, "delta":J
    move-object/from16 v0, p2

    #@175
    iget-wide v14, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@177
    add-long/2addr v14, v6

    #@178
    move-object/from16 v0, p2

    #@17a
    iput-wide v14, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@17c
    .line 2506
    move-object/from16 v0, p2

    #@17e
    iget v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@180
    add-int/lit8 v14, v14, 0x2

    #@182
    move-object/from16 v0, p2

    #@184
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    #@186
    goto/16 :goto_0

    #@188
    .line 2520
    .end local v6    # "delta":J
    :cond_5
    const/4 v2, 0x0

    #@189
    .restart local v2    # "batteryLevelInt":I
    goto/16 :goto_1

    #@18b
    .line 2534
    .restart local v11    # "stateInt":I
    :pswitch_0
    const/4 v14, 0x1

    #@18c
    move-object/from16 v0, p2

    #@18e
    iput-byte v14, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@190
    goto/16 :goto_2

    #@192
    .line 2537
    :pswitch_1
    const/4 v14, 0x2

    #@193
    move-object/from16 v0, p2

    #@195
    iput-byte v14, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@197
    goto/16 :goto_2

    #@199
    .line 2540
    :pswitch_2
    const/4 v14, 0x4

    #@19a
    move-object/from16 v0, p2

    #@19c
    iput-byte v14, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@19e
    goto/16 :goto_2

    #@1a0
    .line 2551
    .end local v11    # "stateInt":I
    :cond_6
    const/high16 v14, -0x2000000

    #@1a2
    and-int/2addr v14, v8

    #@1a3
    move-object/from16 v0, p2

    #@1a5
    iget v15, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1a7
    const v16, 0xffffff

    #@1aa
    and-int v15, v15, v16

    #@1ac
    or-int/2addr v14, v15

    #@1ad
    move-object/from16 v0, p2

    #@1af
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1b1
    goto/16 :goto_3

    #@1b3
    .line 2570
    .restart local v10    # "indexes":I
    .restart local v12    # "wakeLockIndex":I
    .restart local v13    # "wakeReasonIndex":I
    :cond_7
    const/4 v14, 0x0

    #@1b4
    move-object/from16 v0, p2

    #@1b6
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@1b8
    goto/16 :goto_4

    #@1ba
    .line 2578
    :cond_8
    const/4 v14, 0x0

    #@1bb
    move-object/from16 v0, p2

    #@1bd
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@1bf
    goto/16 :goto_5

    #@1c1
    .line 2582
    .end local v10    # "indexes":I
    .end local v12    # "wakeLockIndex":I
    .end local v13    # "wakeReasonIndex":I
    :cond_9
    const/4 v14, 0x0

    #@1c2
    move-object/from16 v0, p2

    #@1c4
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@1c6
    .line 2583
    const/4 v14, 0x0

    #@1c7
    move-object/from16 v0, p2

    #@1c9
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@1cb
    goto/16 :goto_6

    #@1cd
    .line 2597
    :cond_a
    const/4 v14, 0x0

    #@1ce
    move-object/from16 v0, p2

    #@1d0
    iput v14, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@1d2
    goto/16 :goto_7

    #@1d4
    .line 2604
    :cond_b
    const/4 v14, 0x0

    #@1d5
    move-object/from16 v0, p2

    #@1d7
    iput-object v14, v0, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1d9
    goto/16 :goto_8

    #@1db
    .line 2532
    nop

    #@1dc
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method public readLocked()V
    .locals 13

    #@0
    .prologue
    const/4 v12, 0x0

    #@1
    .line 9915
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    #@3
    if-eqz v1, :cond_0

    #@5
    .line 9916
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyStatsLocked()V

    #@8
    .line 9919
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@a
    if-nez v1, :cond_1

    #@c
    .line 9920
    const-string/jumbo v1, "BatteryStats"

    #@f
    const-string/jumbo v6, "readLocked: no file associated with this instance"

    #@12
    invoke-static {v1, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@15
    .line 9921
    return-void

    #@16
    .line 9924
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@18
    invoke-virtual {v1}, Landroid/util/SparseArray;->clear()V

    #@1b
    .line 9927
    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@1d
    invoke-virtual {v1}, Lcom/android/internal/util/JournaledFile;->chooseForRead()Ljava/io/File;

    #@20
    move-result-object v8

    #@21
    .line 9928
    .local v8, "file":Ljava/io/File;
    invoke-virtual {v8}, Ljava/io/File;->exists()Z

    #@24
    move-result v1

    #@25
    if-nez v1, :cond_2

    #@27
    .line 9929
    return-void

    #@28
    .line 9931
    :cond_2
    new-instance v11, Ljava/io/FileInputStream;

    #@2a
    invoke-direct {v11, v8}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    #@2d
    .line 9933
    .local v11, "stream":Ljava/io/FileInputStream;
    invoke-static {v11}, Lcom/android/internal/os/BatteryStatsHelper;->readFully(Ljava/io/FileInputStream;)[B

    #@30
    move-result-object v10

    #@31
    .line 9934
    .local v10, "raw":[B
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@34
    move-result-object v9

    #@35
    .line 9935
    .local v9, "in":Landroid/os/Parcel;
    array-length v1, v10

    #@36
    const/4 v6, 0x0

    #@37
    invoke-virtual {v9, v10, v6, v1}, Landroid/os/Parcel;->unmarshall([BII)V

    #@3a
    .line 9936
    const/4 v1, 0x0

    #@3b
    invoke-virtual {v9, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    #@3e
    .line 9937
    invoke-virtual {v11}, Ljava/io/FileInputStream;->close()V

    #@41
    .line 9939
    invoke-virtual {p0, v9}, Lcom/android/internal/os/BatteryStatsImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    #@44
    .line 9945
    .end local v8    # "file":Ljava/io/File;
    .end local v9    # "in":Landroid/os/Parcel;
    .end local v10    # "raw":[B
    .end local v11    # "stream":Ljava/io/FileInputStream;
    :goto_0
    sget-object v1, Landroid/os/Build;->ID:Ljava/lang/String;

    #@46
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    #@48
    .line 9947
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@4a
    invoke-virtual {v1}, Landroid/os/Parcel;->dataPosition()I

    #@4d
    move-result v1

    #@4e
    if-lez v1, :cond_3

    #@50
    .line 9948
    const/4 v1, 0x1

    #@51
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@53
    .line 9949
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@55
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@58
    move-result-wide v2

    #@59
    .line 9950
    .local v2, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@5b
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@5e
    move-result-wide v4

    #@5f
    .line 9954
    .local v4, "uptime":J
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@61
    const/4 v6, 0x4

    #@62
    move-object v1, p0

    #@63
    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V

    #@66
    move-object v1, p0

    #@67
    move v6, v12

    #@68
    .line 9955
    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    #@6b
    .line 9958
    .end local v2    # "elapsedRealtime":J
    .end local v4    # "uptime":J
    :cond_3
    invoke-virtual {p0, v12}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    #@6e
    .line 9914
    return-void

    #@6f
    .line 9940
    :catch_0
    move-exception v0

    #@70
    .line 9941
    .local v0, "e":Ljava/lang/Exception;
    const-string/jumbo v1, "BatteryStats"

    #@73
    const-string/jumbo v6, "Error reading battery statistics"

    #@76
    invoke-static {v1, v6, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@79
    .line 9942
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V

    #@7c
    goto :goto_0
.end method

.method readOldHistory(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "in"    # Landroid/os/Parcel;

    #@0
    .prologue
    .line 10042
    return-void
.end method

.method public readSummaryFromParcel(Landroid/os/Parcel;)V
    .locals 46
    .param p1, "in"    # Landroid/os/Parcel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/ParcelFormatException;
        }
    .end annotation

    #@0
    .prologue
    .line 10097
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@3
    move-result v41

    #@4
    .line 10098
    .local v41, "version":I
    const/16 v43, 0x93

    #@6
    move/from16 v0, v41

    #@8
    move/from16 v1, v43

    #@a
    if-eq v0, v1, :cond_0

    #@c
    .line 10099
    const-string/jumbo v43, "BatteryStats"

    #@f
    new-instance v44, Ljava/lang/StringBuilder;

    #@11
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@14
    const-string/jumbo v45, "readFromParcel: version got "

    #@17
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@1a
    move-result-object v44

    #@1b
    move-object/from16 v0, v44

    #@1d
    move/from16 v1, v41

    #@1f
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@22
    move-result-object v44

    #@23
    .line 10100
    const-string/jumbo v45, ", expected "

    #@26
    .line 10099
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@29
    move-result-object v44

    #@2a
    .line 10100
    const/16 v45, 0x93

    #@2c
    .line 10099
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@2f
    move-result-object v44

    #@30
    .line 10100
    const-string/jumbo v45, "; erasing old stats"

    #@33
    .line 10099
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@36
    move-result-object v44

    #@37
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@3a
    move-result-object v44

    #@3b
    invoke-static/range {v43 .. v44}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@3e
    .line 10101
    return-void

    #@3f
    .line 10104
    :cond_0
    const/16 v43, 0x1

    #@41
    move-object/from16 v0, p0

    #@43
    move-object/from16 v1, p1

    #@45
    move/from16 v2, v43

    #@47
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->readHistory(Landroid/os/Parcel;Z)V

    #@4a
    .line 10106
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@4d
    move-result v43

    #@4e
    move/from16 v0, v43

    #@50
    move-object/from16 v1, p0

    #@52
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@54
    .line 10107
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@57
    move-result-wide v44

    #@58
    move-wide/from16 v0, v44

    #@5a
    move-object/from16 v2, p0

    #@5c
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    #@5e
    .line 10108
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@61
    move-result-wide v44

    #@62
    move-wide/from16 v0, v44

    #@64
    move-object/from16 v2, p0

    #@66
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    #@68
    .line 10109
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@6b
    move-result-wide v44

    #@6c
    move-wide/from16 v0, v44

    #@6e
    move-object/from16 v2, p0

    #@70
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    #@72
    .line 10110
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@75
    move-result-object v43

    #@76
    move-object/from16 v0, v43

    #@78
    move-object/from16 v1, p0

    #@7a
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    #@7c
    .line 10111
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@7f
    move-result-object v43

    #@80
    move-object/from16 v0, v43

    #@82
    move-object/from16 v1, p0

    #@84
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    #@86
    .line 10112
    move-object/from16 v0, p0

    #@88
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@8a
    move-object/from16 v43, v0

    #@8c
    move-object/from16 v0, v43

    #@8e
    move-object/from16 v1, p1

    #@90
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    #@93
    .line 10113
    move-object/from16 v0, p0

    #@95
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@97
    move-object/from16 v43, v0

    #@99
    move-object/from16 v0, v43

    #@9b
    move-object/from16 v1, p1

    #@9d
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    #@a0
    .line 10114
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@a3
    move-result v43

    #@a4
    move/from16 v0, v43

    #@a6
    move-object/from16 v1, p0

    #@a8
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@aa
    .line 10115
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@ad
    move-result v43

    #@ae
    move/from16 v0, v43

    #@b0
    move-object/from16 v1, p0

    #@b2
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@b4
    .line 10116
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@b7
    move-result v43

    #@b8
    move/from16 v0, v43

    #@ba
    move-object/from16 v1, p0

    #@bc
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@be
    .line 10117
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@c1
    move-result v43

    #@c2
    move/from16 v0, v43

    #@c4
    move-object/from16 v1, p0

    #@c6
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@c8
    .line 10118
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@cb
    move-result v43

    #@cc
    move/from16 v0, v43

    #@ce
    move-object/from16 v1, p0

    #@d0
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@d2
    .line 10119
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@d5
    move-result v43

    #@d6
    move/from16 v0, v43

    #@d8
    move-object/from16 v1, p0

    #@da
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    #@dc
    .line 10120
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@df
    move-result v43

    #@e0
    move/from16 v0, v43

    #@e2
    move-object/from16 v1, p0

    #@e4
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    #@e6
    .line 10121
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@e9
    move-result v43

    #@ea
    move/from16 v0, v43

    #@ec
    move-object/from16 v1, p0

    #@ee
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    #@f0
    .line 10122
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@f3
    move-result v43

    #@f4
    move/from16 v0, v43

    #@f6
    move-object/from16 v1, p0

    #@f8
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    #@fa
    .line 10123
    move-object/from16 v0, p0

    #@fc
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@fe
    move-object/from16 v43, v0

    #@100
    move-object/from16 v0, v43

    #@102
    move-object/from16 v1, p1

    #@104
    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    #@107
    .line 10124
    move-object/from16 v0, p0

    #@109
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@10b
    move-object/from16 v43, v0

    #@10d
    move-object/from16 v0, v43

    #@10f
    move-object/from16 v1, p1

    #@111
    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    #@114
    .line 10125
    move-object/from16 v0, p0

    #@116
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@118
    move-object/from16 v43, v0

    #@11a
    move-object/from16 v0, v43

    #@11c
    move-object/from16 v1, p1

    #@11e
    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    #@121
    .line 10126
    move-object/from16 v0, p0

    #@123
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@125
    move-object/from16 v43, v0

    #@127
    move-object/from16 v0, v43

    #@129
    move-object/from16 v1, p1

    #@12b
    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    #@12e
    .line 10127
    move-object/from16 v0, p0

    #@130
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@132
    move-object/from16 v43, v0

    #@134
    move-object/from16 v0, v43

    #@136
    move-object/from16 v1, p1

    #@138
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@13b
    .line 10128
    move-object/from16 v0, p0

    #@13d
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@13f
    move-object/from16 v43, v0

    #@141
    move-object/from16 v0, v43

    #@143
    move-object/from16 v1, p1

    #@145
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@148
    .line 10129
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@14b
    move-result v7

    #@14c
    .line 10130
    .local v7, "NPKG":I
    if-lez v7, :cond_2

    #@14e
    .line 10131
    new-instance v43, Ljava/util/ArrayList;

    #@150
    move-object/from16 v0, v43

    #@152
    invoke-direct {v0, v7}, Ljava/util/ArrayList;-><init>(I)V

    #@155
    move-object/from16 v0, v43

    #@157
    move-object/from16 v1, p0

    #@159
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@15b
    .line 10132
    :goto_0
    if-lez v7, :cond_3

    #@15d
    .line 10133
    add-int/lit8 v7, v7, -0x1

    #@15f
    .line 10134
    new-instance v30, Landroid/os/BatteryStats$PackageChange;

    #@161
    invoke-direct/range {v30 .. v30}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    #@164
    .line 10135
    .local v30, "pc":Landroid/os/BatteryStats$PackageChange;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@167
    move-result-object v43

    #@168
    move-object/from16 v0, v43

    #@16a
    move-object/from16 v1, v30

    #@16c
    iput-object v0, v1, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    #@16e
    .line 10136
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@171
    move-result v43

    #@172
    if-eqz v43, :cond_1

    #@174
    const/16 v43, 0x1

    #@176
    :goto_1
    move/from16 v0, v43

    #@178
    move-object/from16 v1, v30

    #@17a
    iput-boolean v0, v1, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    #@17c
    .line 10137
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@17f
    move-result v43

    #@180
    move/from16 v0, v43

    #@182
    move-object/from16 v1, v30

    #@184
    iput v0, v1, Landroid/os/BatteryStats$PackageChange;->mVersionCode:I

    #@186
    .line 10138
    move-object/from16 v0, p0

    #@188
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@18a
    move-object/from16 v43, v0

    #@18c
    move-object/from16 v0, v43

    #@18e
    move-object/from16 v1, v30

    #@190
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@193
    goto :goto_0

    #@194
    .line 10136
    :cond_1
    const/16 v43, 0x0

    #@196
    goto :goto_1

    #@197
    .line 10141
    .end local v30    # "pc":Landroid/os/BatteryStats$PackageChange;
    :cond_2
    const/16 v43, 0x0

    #@199
    move-object/from16 v0, v43

    #@19b
    move-object/from16 v1, p0

    #@19d
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@19f
    .line 10143
    :cond_3
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@1a2
    move-result-wide v44

    #@1a3
    move-wide/from16 v0, v44

    #@1a5
    move-object/from16 v2, p0

    #@1a7
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@1a9
    .line 10144
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@1ac
    move-result-wide v44

    #@1ad
    move-wide/from16 v0, v44

    #@1af
    move-object/from16 v2, p0

    #@1b1
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    #@1b3
    .line 10145
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@1b6
    move-result-wide v44

    #@1b7
    move-wide/from16 v0, v44

    #@1b9
    move-object/from16 v2, p0

    #@1bb
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    #@1bd
    .line 10147
    move-object/from16 v0, p0

    #@1bf
    iget v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@1c1
    move/from16 v43, v0

    #@1c3
    add-int/lit8 v43, v43, 0x1

    #@1c5
    move/from16 v0, v43

    #@1c7
    move-object/from16 v1, p0

    #@1c9
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@1cb
    .line 10149
    const/16 v43, 0x0

    #@1cd
    move/from16 v0, v43

    #@1cf
    move-object/from16 v1, p0

    #@1d1
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@1d3
    .line 10150
    move-object/from16 v0, p0

    #@1d5
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1d7
    move-object/from16 v43, v0

    #@1d9
    move-object/from16 v0, v43

    #@1db
    move-object/from16 v1, p1

    #@1dd
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@1e0
    .line 10151
    const/16 v16, 0x0

    #@1e2
    .local v16, "i":I
    :goto_2
    const/16 v43, 0x5

    #@1e4
    move/from16 v0, v16

    #@1e6
    move/from16 v1, v43

    #@1e8
    if-ge v0, v1, :cond_4

    #@1ea
    .line 10152
    move-object/from16 v0, p0

    #@1ec
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1ee
    move-object/from16 v43, v0

    #@1f0
    aget-object v43, v43, v16

    #@1f2
    move-object/from16 v0, v43

    #@1f4
    move-object/from16 v1, p1

    #@1f6
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@1f9
    .line 10151
    add-int/lit8 v16, v16, 0x1

    #@1fb
    goto :goto_2

    #@1fc
    .line 10154
    :cond_4
    const/16 v43, 0x0

    #@1fe
    move/from16 v0, v43

    #@200
    move-object/from16 v1, p0

    #@202
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    #@204
    .line 10155
    move-object/from16 v0, p0

    #@206
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@208
    move-object/from16 v43, v0

    #@20a
    move-object/from16 v0, v43

    #@20c
    move-object/from16 v1, p1

    #@20e
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@211
    .line 10156
    const/16 v43, 0x0

    #@213
    move/from16 v0, v43

    #@215
    move-object/from16 v1, p0

    #@217
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    #@219
    .line 10157
    move-object/from16 v0, p0

    #@21b
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@21d
    move-object/from16 v43, v0

    #@21f
    move-object/from16 v0, v43

    #@221
    move-object/from16 v1, p1

    #@223
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@226
    .line 10158
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@229
    move-result-wide v44

    #@22a
    move-wide/from16 v0, v44

    #@22c
    move-object/from16 v2, p0

    #@22e
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    #@230
    .line 10159
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@233
    move-result-wide v44

    #@234
    move-wide/from16 v0, v44

    #@236
    move-object/from16 v2, p0

    #@238
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    #@23a
    .line 10160
    move-object/from16 v0, p0

    #@23c
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@23e
    move-object/from16 v43, v0

    #@240
    move-object/from16 v0, v43

    #@242
    move-object/from16 v1, p1

    #@244
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@247
    .line 10161
    move-object/from16 v0, p0

    #@249
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@24b
    move-object/from16 v43, v0

    #@24d
    move-object/from16 v0, v43

    #@24f
    move-object/from16 v1, p1

    #@251
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@254
    .line 10162
    move-object/from16 v0, p0

    #@256
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@258
    move-object/from16 v43, v0

    #@25a
    move-object/from16 v0, v43

    #@25c
    move-object/from16 v1, p1

    #@25e
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@261
    .line 10163
    move-object/from16 v0, p0

    #@263
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@265
    move-object/from16 v43, v0

    #@267
    move-object/from16 v0, v43

    #@269
    move-object/from16 v1, p1

    #@26b
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@26e
    .line 10164
    move-object/from16 v0, p0

    #@270
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@272
    move-object/from16 v43, v0

    #@274
    move-object/from16 v0, v43

    #@276
    move-object/from16 v1, p1

    #@278
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@27b
    .line 10165
    const/16 v16, 0x0

    #@27d
    :goto_3
    const/16 v43, 0x5

    #@27f
    move/from16 v0, v16

    #@281
    move/from16 v1, v43

    #@283
    if-ge v0, v1, :cond_5

    #@285
    .line 10166
    move-object/from16 v0, p0

    #@287
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@289
    move-object/from16 v43, v0

    #@28b
    aget-object v43, v43, v16

    #@28d
    move-object/from16 v0, v43

    #@28f
    move-object/from16 v1, p1

    #@291
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@294
    .line 10165
    add-int/lit8 v16, v16, 0x1

    #@296
    goto :goto_3

    #@297
    .line 10168
    :cond_5
    move-object/from16 v0, p0

    #@299
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@29b
    move-object/from16 v43, v0

    #@29d
    move-object/from16 v0, v43

    #@29f
    move-object/from16 v1, p1

    #@2a1
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@2a4
    .line 10169
    const/16 v16, 0x0

    #@2a6
    :goto_4
    const/16 v43, 0x11

    #@2a8
    move/from16 v0, v16

    #@2aa
    move/from16 v1, v43

    #@2ac
    if-ge v0, v1, :cond_6

    #@2ae
    .line 10170
    move-object/from16 v0, p0

    #@2b0
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2b2
    move-object/from16 v43, v0

    #@2b4
    aget-object v43, v43, v16

    #@2b6
    move-object/from16 v0, v43

    #@2b8
    move-object/from16 v1, p1

    #@2ba
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@2bd
    .line 10169
    add-int/lit8 v16, v16, 0x1

    #@2bf
    goto :goto_4

    #@2c0
    .line 10172
    :cond_6
    const/16 v16, 0x0

    #@2c2
    :goto_5
    const/16 v43, 0x6

    #@2c4
    move/from16 v0, v16

    #@2c6
    move/from16 v1, v43

    #@2c8
    if-ge v0, v1, :cond_7

    #@2ca
    .line 10173
    move-object/from16 v0, p0

    #@2cc
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2ce
    move-object/from16 v43, v0

    #@2d0
    aget-object v43, v43, v16

    #@2d2
    move-object/from16 v0, v43

    #@2d4
    move-object/from16 v1, p1

    #@2d6
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@2d9
    .line 10174
    move-object/from16 v0, p0

    #@2db
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2dd
    move-object/from16 v43, v0

    #@2df
    aget-object v43, v43, v16

    #@2e1
    move-object/from16 v0, v43

    #@2e3
    move-object/from16 v1, p1

    #@2e5
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@2e8
    .line 10172
    add-int/lit8 v16, v16, 0x1

    #@2ea
    goto :goto_5

    #@2eb
    .line 10176
    :cond_7
    const/16 v43, 0x1

    #@2ed
    move/from16 v0, v43

    #@2ef
    move-object/from16 v1, p0

    #@2f1
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    #@2f3
    .line 10177
    move-object/from16 v0, p0

    #@2f5
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2f7
    move-object/from16 v43, v0

    #@2f9
    move-object/from16 v0, v43

    #@2fb
    move-object/from16 v1, p1

    #@2fd
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@300
    .line 10178
    move-object/from16 v0, p0

    #@302
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@304
    move-object/from16 v43, v0

    #@306
    move-object/from16 v0, v43

    #@308
    move-object/from16 v1, p1

    #@30a
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@30d
    .line 10179
    move-object/from16 v0, p0

    #@30f
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@311
    move-object/from16 v43, v0

    #@313
    move-object/from16 v0, v43

    #@315
    move-object/from16 v1, p1

    #@317
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@31a
    .line 10180
    move-object/from16 v0, p0

    #@31c
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@31e
    move-object/from16 v43, v0

    #@320
    move-object/from16 v0, v43

    #@322
    move-object/from16 v1, p1

    #@324
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@327
    .line 10181
    move-object/from16 v0, p0

    #@329
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@32b
    move-object/from16 v43, v0

    #@32d
    move-object/from16 v0, v43

    #@32f
    move-object/from16 v1, p1

    #@331
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@334
    .line 10182
    const/16 v43, 0x1

    #@336
    move/from16 v0, v43

    #@338
    move-object/from16 v1, p0

    #@33a
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    #@33c
    .line 10183
    const/16 v43, 0x0

    #@33e
    move/from16 v0, v43

    #@340
    move-object/from16 v1, p0

    #@342
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    #@344
    .line 10184
    move-object/from16 v0, p0

    #@346
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@348
    move-object/from16 v43, v0

    #@34a
    move-object/from16 v0, v43

    #@34c
    move-object/from16 v1, p1

    #@34e
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@351
    .line 10185
    const/16 v43, 0x0

    #@353
    move/from16 v0, v43

    #@355
    move-object/from16 v1, p0

    #@357
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    #@359
    .line 10186
    move-object/from16 v0, p0

    #@35b
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@35d
    move-object/from16 v43, v0

    #@35f
    move-object/from16 v0, v43

    #@361
    move-object/from16 v1, p1

    #@363
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@366
    .line 10187
    const/16 v16, 0x0

    #@368
    :goto_6
    const/16 v43, 0x8

    #@36a
    move/from16 v0, v16

    #@36c
    move/from16 v1, v43

    #@36e
    if-ge v0, v1, :cond_8

    #@370
    .line 10188
    move-object/from16 v0, p0

    #@372
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@374
    move-object/from16 v43, v0

    #@376
    aget-object v43, v43, v16

    #@378
    move-object/from16 v0, v43

    #@37a
    move-object/from16 v1, p1

    #@37c
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@37f
    .line 10187
    add-int/lit8 v16, v16, 0x1

    #@381
    goto :goto_6

    #@382
    .line 10190
    :cond_8
    const/16 v16, 0x0

    #@384
    :goto_7
    const/16 v43, 0xd

    #@386
    move/from16 v0, v16

    #@388
    move/from16 v1, v43

    #@38a
    if-ge v0, v1, :cond_9

    #@38c
    .line 10191
    move-object/from16 v0, p0

    #@38e
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@390
    move-object/from16 v43, v0

    #@392
    aget-object v43, v43, v16

    #@394
    move-object/from16 v0, v43

    #@396
    move-object/from16 v1, p1

    #@398
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@39b
    .line 10190
    add-int/lit8 v16, v16, 0x1

    #@39d
    goto :goto_7

    #@39e
    .line 10193
    :cond_9
    const/16 v16, 0x0

    #@3a0
    :goto_8
    const/16 v43, 0x5

    #@3a2
    move/from16 v0, v16

    #@3a4
    move/from16 v1, v43

    #@3a6
    if-ge v0, v1, :cond_a

    #@3a8
    .line 10194
    move-object/from16 v0, p0

    #@3aa
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3ac
    move-object/from16 v43, v0

    #@3ae
    aget-object v43, v43, v16

    #@3b0
    move-object/from16 v0, v43

    #@3b2
    move-object/from16 v1, p1

    #@3b4
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@3b7
    .line 10193
    add-int/lit8 v16, v16, 0x1

    #@3b9
    goto :goto_8

    #@3ba
    .line 10196
    :cond_a
    move-object/from16 v0, p0

    #@3bc
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@3be
    move-object/from16 v43, v0

    #@3c0
    move-object/from16 v0, v43

    #@3c2
    move-object/from16 v1, p1

    #@3c4
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    #@3c7
    .line 10197
    move-object/from16 v0, p0

    #@3c9
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@3cb
    move-object/from16 v43, v0

    #@3cd
    move-object/from16 v0, v43

    #@3cf
    move-object/from16 v1, p1

    #@3d1
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    #@3d4
    .line 10198
    move-object/from16 v0, p0

    #@3d6
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@3d8
    move-object/from16 v43, v0

    #@3da
    move-object/from16 v0, v43

    #@3dc
    move-object/from16 v1, p1

    #@3de
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    #@3e1
    .line 10199
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@3e4
    move-result v43

    #@3e5
    if-eqz v43, :cond_b

    #@3e7
    const/16 v43, 0x1

    #@3e9
    :goto_9
    move/from16 v0, v43

    #@3eb
    move-object/from16 v1, p0

    #@3ed
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@3ef
    .line 10200
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@3f2
    move-result v43

    #@3f3
    if-eqz v43, :cond_c

    #@3f5
    const/16 v43, 0x1

    #@3f7
    :goto_a
    move/from16 v0, v43

    #@3f9
    move-object/from16 v1, p0

    #@3fb
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@3fd
    .line 10201
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@400
    move-result v43

    #@401
    if-eqz v43, :cond_d

    #@403
    const/16 v43, 0x1

    #@405
    :goto_b
    move/from16 v0, v43

    #@407
    move-object/from16 v1, p0

    #@409
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@40b
    .line 10203
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@40e
    move-result v43

    #@40f
    move/from16 v0, v43

    #@411
    move-object/from16 v1, p0

    #@413
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    #@415
    move/from16 v0, v43

    #@417
    move-object/from16 v1, p0

    #@419
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    #@41b
    .line 10204
    const/16 v43, 0x0

    #@41d
    move/from16 v0, v43

    #@41f
    move-object/from16 v1, p0

    #@421
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    #@423
    .line 10205
    move-object/from16 v0, p0

    #@425
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@427
    move-object/from16 v43, v0

    #@429
    move-object/from16 v0, v43

    #@42b
    move-object/from16 v1, p1

    #@42d
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@430
    .line 10206
    const/16 v43, 0x0

    #@432
    move/from16 v0, v43

    #@434
    move-object/from16 v1, p0

    #@436
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    #@438
    .line 10207
    move-object/from16 v0, p0

    #@43a
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@43c
    move-object/from16 v43, v0

    #@43e
    move-object/from16 v0, v43

    #@440
    move-object/from16 v1, p1

    #@442
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@445
    .line 10208
    const/16 v43, 0x0

    #@447
    move/from16 v0, v43

    #@449
    move-object/from16 v1, p0

    #@44b
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    #@44d
    .line 10209
    move-object/from16 v0, p0

    #@44f
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@451
    move-object/from16 v43, v0

    #@453
    move-object/from16 v0, v43

    #@455
    move-object/from16 v1, p1

    #@457
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@45a
    .line 10211
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@45d
    move-result v5

    #@45e
    .line 10212
    .local v5, "NKW":I
    const/16 v43, 0x2710

    #@460
    move/from16 v0, v43

    #@462
    if-le v5, v0, :cond_e

    #@464
    .line 10213
    new-instance v43, Landroid/os/ParcelFormatException;

    #@466
    new-instance v44, Ljava/lang/StringBuilder;

    #@468
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@46b
    const-string/jumbo v45, "File corrupt: too many kernel wake locks "

    #@46e
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@471
    move-result-object v44

    #@472
    move-object/from16 v0, v44

    #@474
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@477
    move-result-object v44

    #@478
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@47b
    move-result-object v44

    #@47c
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@47f
    throw v43

    #@480
    .line 10199
    .end local v5    # "NKW":I
    :cond_b
    const/16 v43, 0x0

    #@482
    goto/16 :goto_9

    #@484
    .line 10200
    :cond_c
    const/16 v43, 0x0

    #@486
    goto/16 :goto_a

    #@488
    .line 10201
    :cond_d
    const/16 v43, 0x0

    #@48a
    goto/16 :goto_b

    #@48c
    .line 10215
    .restart local v5    # "NKW":I
    :cond_e
    const/16 v18, 0x0

    #@48e
    .local v18, "ikw":I
    :goto_c
    move/from16 v0, v18

    #@490
    if-ge v0, v5, :cond_10

    #@492
    .line 10216
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@495
    move-result v43

    #@496
    if-eqz v43, :cond_f

    #@498
    .line 10217
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@49b
    move-result-object v25

    #@49c
    .line 10218
    .local v25, "kwltName":Ljava/lang/String;
    move-object/from16 v0, p0

    #@49e
    move-object/from16 v1, v25

    #@4a0
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@4a3
    move-result-object v43

    #@4a4
    move-object/from16 v0, v43

    #@4a6
    move-object/from16 v1, p1

    #@4a8
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@4ab
    .line 10215
    .end local v25    # "kwltName":Ljava/lang/String;
    :cond_f
    add-int/lit8 v18, v18, 0x1

    #@4ad
    goto :goto_c

    #@4ae
    .line 10222
    :cond_10
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@4b1
    move-result v13

    #@4b2
    .line 10223
    .local v13, "NWR":I
    const/16 v43, 0x2710

    #@4b4
    move/from16 v0, v43

    #@4b6
    if-le v13, v0, :cond_11

    #@4b8
    .line 10224
    new-instance v43, Landroid/os/ParcelFormatException;

    #@4ba
    new-instance v44, Ljava/lang/StringBuilder;

    #@4bc
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@4bf
    const-string/jumbo v45, "File corrupt: too many wakeup reasons "

    #@4c2
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4c5
    move-result-object v44

    #@4c6
    move-object/from16 v0, v44

    #@4c8
    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@4cb
    move-result-object v44

    #@4cc
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@4cf
    move-result-object v44

    #@4d0
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@4d3
    throw v43

    #@4d4
    .line 10226
    :cond_11
    const/16 v24, 0x0

    #@4d6
    .local v24, "iwr":I
    :goto_d
    move/from16 v0, v24

    #@4d8
    if-ge v0, v13, :cond_13

    #@4da
    .line 10227
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@4dd
    move-result v43

    #@4de
    if-eqz v43, :cond_12

    #@4e0
    .line 10228
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@4e3
    move-result-object v33

    #@4e4
    .line 10229
    .local v33, "reasonName":Ljava/lang/String;
    move-object/from16 v0, p0

    #@4e6
    move-object/from16 v1, v33

    #@4e8
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@4eb
    move-result-object v43

    #@4ec
    move-object/from16 v0, v43

    #@4ee
    move-object/from16 v1, p1

    #@4f0
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@4f3
    .line 10226
    .end local v33    # "reasonName":Ljava/lang/String;
    :cond_12
    add-int/lit8 v24, v24, 0x1

    #@4f5
    goto :goto_d

    #@4f6
    .line 10233
    :cond_13
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@4f9
    move-result v10

    #@4fa
    .line 10234
    .local v10, "NU":I
    const/16 v43, 0x2710

    #@4fc
    move/from16 v0, v43

    #@4fe
    if-le v10, v0, :cond_14

    #@500
    .line 10235
    new-instance v43, Landroid/os/ParcelFormatException;

    #@502
    new-instance v44, Ljava/lang/StringBuilder;

    #@504
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@507
    const-string/jumbo v45, "File corrupt: too many uids "

    #@50a
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@50d
    move-result-object v44

    #@50e
    move-object/from16 v0, v44

    #@510
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@513
    move-result-object v44

    #@514
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@517
    move-result-object v44

    #@518
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@51b
    throw v43

    #@51c
    .line 10237
    :cond_14
    const/16 v21, 0x0

    #@51e
    .local v21, "iu":I
    :goto_e
    move/from16 v0, v21

    #@520
    if-ge v0, v10, :cond_41

    #@522
    .line 10238
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@525
    move-result v40

    #@526
    .line 10239
    .local v40, "uid":I
    new-instance v39, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@528
    move-object/from16 v0, v39

    #@52a
    move-object/from16 v1, p0

    #@52c
    move/from16 v2, v40

    #@52e
    invoke-direct {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    #@531
    .line 10240
    .local v39, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v0, p0

    #@533
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@535
    move-object/from16 v43, v0

    #@537
    move-object/from16 v0, v43

    #@539
    move/from16 v1, v40

    #@53b
    move-object/from16 v2, v39

    #@53d
    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    #@540
    .line 10242
    const/16 v43, 0x0

    #@542
    move/from16 v0, v43

    #@544
    move-object/from16 v1, v39

    #@546
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunning:Z

    #@548
    .line 10243
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@54b
    move-result v43

    #@54c
    if-eqz v43, :cond_15

    #@54e
    .line 10244
    move-object/from16 v0, v39

    #@550
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@552
    move-object/from16 v43, v0

    #@554
    move-object/from16 v0, v43

    #@556
    move-object/from16 v1, p1

    #@558
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@55b
    .line 10246
    :cond_15
    const/16 v43, 0x0

    #@55d
    move/from16 v0, v43

    #@55f
    move-object/from16 v1, v39

    #@561
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockOut:Z

    #@563
    .line 10247
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@566
    move-result v43

    #@567
    if-eqz v43, :cond_16

    #@569
    .line 10248
    move-object/from16 v0, v39

    #@56b
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@56d
    move-object/from16 v43, v0

    #@56f
    move-object/from16 v0, v43

    #@571
    move-object/from16 v1, p1

    #@573
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@576
    .line 10250
    :cond_16
    const/16 v43, 0x0

    #@578
    move/from16 v0, v43

    #@57a
    move-object/from16 v1, v39

    #@57c
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanStarted:Z

    #@57e
    .line 10251
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@581
    move-result v43

    #@582
    if-eqz v43, :cond_17

    #@584
    .line 10252
    move-object/from16 v0, v39

    #@586
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@588
    move-object/from16 v43, v0

    #@58a
    move-object/from16 v0, v43

    #@58c
    move-object/from16 v1, p1

    #@58e
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@591
    .line 10254
    :cond_17
    const/16 v43, -0x1

    #@593
    move/from16 v0, v43

    #@595
    move-object/from16 v1, v39

    #@597
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanBinStarted:I

    #@599
    .line 10255
    const/16 v16, 0x0

    #@59b
    :goto_f
    const/16 v43, 0x5

    #@59d
    move/from16 v0, v16

    #@59f
    move/from16 v1, v43

    #@5a1
    if-ge v0, v1, :cond_19

    #@5a3
    .line 10256
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@5a6
    move-result v43

    #@5a7
    if-eqz v43, :cond_18

    #@5a9
    .line 10257
    const/16 v43, 0x0

    #@5ab
    move-object/from16 v0, v39

    #@5ad
    move/from16 v1, v16

    #@5af
    move-object/from16 v2, v43

    #@5b1
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->makeWifiBatchedScanBin(ILandroid/os/Parcel;)V

    #@5b4
    .line 10258
    move-object/from16 v0, v39

    #@5b6
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@5b8
    move-object/from16 v43, v0

    #@5ba
    aget-object v43, v43, v16

    #@5bc
    move-object/from16 v0, v43

    #@5be
    move-object/from16 v1, p1

    #@5c0
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@5c3
    .line 10255
    :cond_18
    add-int/lit8 v16, v16, 0x1

    #@5c5
    goto :goto_f

    #@5c6
    .line 10261
    :cond_19
    const/16 v43, 0x0

    #@5c8
    move/from16 v0, v43

    #@5ca
    move-object/from16 v1, v39

    #@5cc
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastEnabled:Z

    #@5ce
    .line 10262
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@5d1
    move-result v43

    #@5d2
    if-eqz v43, :cond_1a

    #@5d4
    .line 10263
    move-object/from16 v0, v39

    #@5d6
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@5d8
    move-object/from16 v43, v0

    #@5da
    move-object/from16 v0, v43

    #@5dc
    move-object/from16 v1, p1

    #@5de
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@5e1
    .line 10265
    :cond_1a
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@5e4
    move-result v43

    #@5e5
    if-eqz v43, :cond_1b

    #@5e7
    .line 10266
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createAudioTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@5ea
    move-result-object v43

    #@5eb
    move-object/from16 v0, v43

    #@5ed
    move-object/from16 v1, p1

    #@5ef
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@5f2
    .line 10268
    :cond_1b
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@5f5
    move-result v43

    #@5f6
    if-eqz v43, :cond_1c

    #@5f8
    .line 10269
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createVideoTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@5fb
    move-result-object v43

    #@5fc
    move-object/from16 v0, v43

    #@5fe
    move-object/from16 v1, p1

    #@600
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@603
    .line 10271
    :cond_1c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@606
    move-result v43

    #@607
    if-eqz v43, :cond_1d

    #@609
    .line 10272
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createFlashlightTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@60c
    move-result-object v43

    #@60d
    move-object/from16 v0, v43

    #@60f
    move-object/from16 v1, p1

    #@611
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@614
    .line 10274
    :cond_1d
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@617
    move-result v43

    #@618
    if-eqz v43, :cond_1e

    #@61a
    .line 10275
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createCameraTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@61d
    move-result-object v43

    #@61e
    move-object/from16 v0, v43

    #@620
    move-object/from16 v1, p1

    #@622
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@625
    .line 10277
    :cond_1e
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@628
    move-result v43

    #@629
    if-eqz v43, :cond_1f

    #@62b
    .line 10278
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createForegroundActivityTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@62e
    move-result-object v43

    #@62f
    move-object/from16 v0, v43

    #@631
    move-object/from16 v1, p1

    #@633
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@636
    .line 10280
    :cond_1f
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@639
    move-result v43

    #@63a
    if-eqz v43, :cond_20

    #@63c
    .line 10281
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothScanTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@63f
    move-result-object v43

    #@640
    move-object/from16 v0, v43

    #@642
    move-object/from16 v1, p1

    #@644
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@647
    .line 10283
    :cond_20
    const/16 v43, -0x1

    #@649
    move/from16 v0, v43

    #@64b
    move-object/from16 v1, v39

    #@64d
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessState:I

    #@64f
    .line 10284
    const/16 v16, 0x0

    #@651
    :goto_10
    const/16 v43, 0x6

    #@653
    move/from16 v0, v16

    #@655
    move/from16 v1, v43

    #@657
    if-ge v0, v1, :cond_22

    #@659
    .line 10285
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@65c
    move-result v43

    #@65d
    if-eqz v43, :cond_21

    #@65f
    .line 10286
    const/16 v43, 0x0

    #@661
    move-object/from16 v0, v39

    #@663
    move/from16 v1, v16

    #@665
    move-object/from16 v2, v43

    #@667
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->makeProcessState(ILandroid/os/Parcel;)V

    #@66a
    .line 10287
    move-object/from16 v0, v39

    #@66c
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@66e
    move-object/from16 v43, v0

    #@670
    aget-object v43, v43, v16

    #@672
    move-object/from16 v0, v43

    #@674
    move-object/from16 v1, p1

    #@676
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@679
    .line 10284
    :cond_21
    add-int/lit8 v16, v16, 0x1

    #@67b
    goto :goto_10

    #@67c
    .line 10290
    :cond_22
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@67f
    move-result v43

    #@680
    if-eqz v43, :cond_23

    #@682
    .line 10291
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createVibratorOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    #@685
    move-result-object v43

    #@686
    move-object/from16 v0, v43

    #@688
    move-object/from16 v1, p1

    #@68a
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@68d
    .line 10294
    :cond_23
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@690
    move-result v43

    #@691
    if-eqz v43, :cond_25

    #@693
    .line 10295
    move-object/from16 v0, v39

    #@695
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    #@697
    move-object/from16 v43, v0

    #@699
    if-nez v43, :cond_24

    #@69b
    .line 10296
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->initUserActivityLocked()V

    #@69e
    .line 10298
    :cond_24
    const/16 v16, 0x0

    #@6a0
    :goto_11
    const/16 v43, 0x4

    #@6a2
    move/from16 v0, v16

    #@6a4
    move/from16 v1, v43

    #@6a6
    if-ge v0, v1, :cond_25

    #@6a8
    .line 10299
    move-object/from16 v0, v39

    #@6aa
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    #@6ac
    move-object/from16 v43, v0

    #@6ae
    aget-object v43, v43, v16

    #@6b0
    move-object/from16 v0, v43

    #@6b2
    move-object/from16 v1, p1

    #@6b4
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@6b7
    .line 10298
    add-int/lit8 v16, v16, 0x1

    #@6b9
    goto :goto_11

    #@6ba
    .line 10303
    :cond_25
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@6bd
    move-result v43

    #@6be
    if-eqz v43, :cond_28

    #@6c0
    .line 10304
    move-object/from16 v0, v39

    #@6c2
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@6c4
    move-object/from16 v43, v0

    #@6c6
    if-nez v43, :cond_26

    #@6c8
    .line 10305
    invoke-virtual/range {v39 .. v39}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->initNetworkActivityLocked()V

    #@6cb
    .line 10307
    :cond_26
    const/16 v16, 0x0

    #@6cd
    :goto_12
    const/16 v43, 0x6

    #@6cf
    move/from16 v0, v16

    #@6d1
    move/from16 v1, v43

    #@6d3
    if-ge v0, v1, :cond_27

    #@6d5
    .line 10308
    move-object/from16 v0, v39

    #@6d7
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@6d9
    move-object/from16 v43, v0

    #@6db
    aget-object v43, v43, v16

    #@6dd
    move-object/from16 v0, v43

    #@6df
    move-object/from16 v1, p1

    #@6e1
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@6e4
    .line 10309
    move-object/from16 v0, v39

    #@6e6
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@6e8
    move-object/from16 v43, v0

    #@6ea
    aget-object v43, v43, v16

    #@6ec
    move-object/from16 v0, v43

    #@6ee
    move-object/from16 v1, p1

    #@6f0
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@6f3
    .line 10307
    add-int/lit8 v16, v16, 0x1

    #@6f5
    goto :goto_12

    #@6f6
    .line 10311
    :cond_27
    move-object/from16 v0, v39

    #@6f8
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@6fa
    move-object/from16 v43, v0

    #@6fc
    move-object/from16 v0, v43

    #@6fe
    move-object/from16 v1, p1

    #@700
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@703
    .line 10312
    move-object/from16 v0, v39

    #@705
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@707
    move-object/from16 v43, v0

    #@709
    move-object/from16 v0, v43

    #@70b
    move-object/from16 v1, p1

    #@70d
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@710
    .line 10315
    :cond_28
    move-object/from16 v0, v39

    #@712
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@714
    move-object/from16 v43, v0

    #@716
    move-object/from16 v0, v43

    #@718
    move-object/from16 v1, p1

    #@71a
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@71d
    .line 10316
    move-object/from16 v0, v39

    #@71f
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@721
    move-object/from16 v43, v0

    #@723
    move-object/from16 v0, v43

    #@725
    move-object/from16 v1, p1

    #@727
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@72a
    .line 10317
    move-object/from16 v0, v39

    #@72c
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuPower:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@72e
    move-object/from16 v43, v0

    #@730
    move-object/from16 v0, v43

    #@732
    move-object/from16 v1, p1

    #@734
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@737
    .line 10319
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@73a
    move-result v43

    #@73b
    if-eqz v43, :cond_2e

    #@73d
    .line 10320
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@740
    move-result v27

    #@741
    .line 10321
    .local v27, "numClusters":I
    move-object/from16 v0, p0

    #@743
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@745
    move-object/from16 v43, v0

    #@747
    if-eqz v43, :cond_29

    #@749
    move-object/from16 v0, p0

    #@74b
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@74d
    move-object/from16 v43, v0

    #@74f
    invoke-virtual/range {v43 .. v43}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    #@752
    move-result v43

    #@753
    move/from16 v0, v43

    #@755
    move/from16 v1, v27

    #@757
    if-eq v0, v1, :cond_29

    #@759
    .line 10322
    new-instance v43, Landroid/os/ParcelFormatException;

    #@75b
    const-string/jumbo v44, "Incompatible cpu cluster arrangement"

    #@75e
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@761
    throw v43

    #@762
    .line 10325
    :cond_29
    move/from16 v0, v27

    #@764
    new-array v0, v0, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@766
    move-object/from16 v43, v0

    #@768
    move-object/from16 v0, v43

    #@76a
    move-object/from16 v1, v39

    #@76c
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@76e
    .line 10326
    const/4 v15, 0x0

    #@76f
    .local v15, "cluster":I
    :goto_13
    move/from16 v0, v27

    #@771
    if-ge v15, v0, :cond_2f

    #@773
    .line 10327
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@776
    move-result v43

    #@777
    if-eqz v43, :cond_2c

    #@779
    .line 10328
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@77c
    move-result v9

    #@77d
    .line 10329
    .local v9, "NSB":I
    move-object/from16 v0, p0

    #@77f
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@781
    move-object/from16 v43, v0

    #@783
    if-eqz v43, :cond_2a

    #@785
    .line 10330
    move-object/from16 v0, p0

    #@787
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@789
    move-object/from16 v43, v0

    #@78b
    move-object/from16 v0, v43

    #@78d
    invoke-virtual {v0, v15}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    #@790
    move-result v43

    #@791
    move/from16 v0, v43

    #@793
    if-eq v0, v9, :cond_2a

    #@795
    .line 10331
    new-instance v43, Landroid/os/ParcelFormatException;

    #@797
    new-instance v44, Ljava/lang/StringBuilder;

    #@799
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@79c
    const-string/jumbo v45, "File corrupt: too many speed bins "

    #@79f
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@7a2
    move-result-object v44

    #@7a3
    move-object/from16 v0, v44

    #@7a5
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@7a8
    move-result-object v44

    #@7a9
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@7ac
    move-result-object v44

    #@7ad
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@7b0
    throw v43

    #@7b1
    .line 10335
    :cond_2a
    move-object/from16 v0, v39

    #@7b3
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@7b5
    move-object/from16 v43, v0

    #@7b7
    new-array v0, v9, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@7b9
    move-object/from16 v44, v0

    #@7bb
    aput-object v44, v43, v15

    #@7bd
    .line 10336
    const/16 v37, 0x0

    #@7bf
    .local v37, "speed":I
    :goto_14
    move/from16 v0, v37

    #@7c1
    if-ge v0, v9, :cond_2d

    #@7c3
    .line 10337
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@7c6
    move-result v43

    #@7c7
    if-eqz v43, :cond_2b

    #@7c9
    .line 10338
    move-object/from16 v0, v39

    #@7cb
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@7cd
    move-object/from16 v43, v0

    #@7cf
    aget-object v43, v43, v15

    #@7d1
    new-instance v44, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@7d3
    .line 10339
    move-object/from16 v0, p0

    #@7d5
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@7d7
    move-object/from16 v45, v0

    #@7d9
    .line 10338
    invoke-direct/range {v44 .. v45}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@7dc
    aput-object v44, v43, v37

    #@7de
    .line 10340
    move-object/from16 v0, v39

    #@7e0
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@7e2
    move-object/from16 v43, v0

    #@7e4
    aget-object v43, v43, v15

    #@7e6
    aget-object v43, v43, v37

    #@7e8
    move-object/from16 v0, v43

    #@7ea
    move-object/from16 v1, p1

    #@7ec
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@7ef
    .line 10336
    :cond_2b
    add-int/lit8 v37, v37, 0x1

    #@7f1
    goto :goto_14

    #@7f2
    .line 10344
    .end local v9    # "NSB":I
    .end local v37    # "speed":I
    :cond_2c
    move-object/from16 v0, v39

    #@7f4
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@7f6
    move-object/from16 v43, v0

    #@7f8
    const/16 v44, 0x0

    #@7fa
    aput-object v44, v43, v15

    #@7fc
    .line 10326
    :cond_2d
    add-int/lit8 v15, v15, 0x1

    #@7fe
    goto/16 :goto_13

    #@800
    .line 10348
    .end local v15    # "cluster":I
    .end local v27    # "numClusters":I
    :cond_2e
    const/16 v43, 0x0

    #@802
    move-object/from16 v0, v43

    #@804
    move-object/from16 v1, v39

    #@806
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@808
    .line 10351
    :cond_2f
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@80b
    move-result v11

    #@80c
    .line 10352
    .local v11, "NW":I
    const/16 v43, 0x64

    #@80e
    move/from16 v0, v43

    #@810
    if-le v11, v0, :cond_30

    #@812
    .line 10353
    new-instance v43, Landroid/os/ParcelFormatException;

    #@814
    new-instance v44, Ljava/lang/StringBuilder;

    #@816
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@819
    const-string/jumbo v45, "File corrupt: too many wake locks "

    #@81c
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@81f
    move-result-object v44

    #@820
    move-object/from16 v0, v44

    #@822
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@825
    move-result-object v44

    #@826
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@829
    move-result-object v44

    #@82a
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@82d
    throw v43

    #@82e
    .line 10355
    :cond_30
    const/16 v22, 0x0

    #@830
    .local v22, "iw":I
    :goto_15
    move/from16 v0, v22

    #@832
    if-ge v0, v11, :cond_31

    #@834
    .line 10356
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@837
    move-result-object v42

    #@838
    .line 10357
    .local v42, "wlName":Ljava/lang/String;
    move-object/from16 v0, v39

    #@83a
    move-object/from16 v1, v42

    #@83c
    move-object/from16 v2, p1

    #@83e
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readWakeSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    #@841
    .line 10355
    add-int/lit8 v22, v22, 0x1

    #@843
    goto :goto_15

    #@844
    .line 10360
    .end local v42    # "wlName":Ljava/lang/String;
    :cond_31
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@847
    move-result v8

    #@848
    .line 10361
    .local v8, "NS":I
    const/16 v43, 0x64

    #@84a
    move/from16 v0, v43

    #@84c
    if-le v8, v0, :cond_32

    #@84e
    .line 10362
    new-instance v43, Landroid/os/ParcelFormatException;

    #@850
    new-instance v44, Ljava/lang/StringBuilder;

    #@852
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@855
    const-string/jumbo v45, "File corrupt: too many syncs "

    #@858
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@85b
    move-result-object v44

    #@85c
    move-object/from16 v0, v44

    #@85e
    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@861
    move-result-object v44

    #@862
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@865
    move-result-object v44

    #@866
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@869
    throw v43

    #@86a
    .line 10364
    :cond_32
    const/16 v20, 0x0

    #@86c
    .local v20, "is":I
    :goto_16
    move/from16 v0, v20

    #@86e
    if-ge v0, v8, :cond_33

    #@870
    .line 10365
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@873
    move-result-object v26

    #@874
    .line 10366
    .local v26, "name":Ljava/lang/String;
    move-object/from16 v0, v39

    #@876
    move-object/from16 v1, v26

    #@878
    move-object/from16 v2, p1

    #@87a
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readSyncSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    #@87d
    .line 10364
    add-int/lit8 v20, v20, 0x1

    #@87f
    goto :goto_16

    #@880
    .line 10369
    .end local v26    # "name":Ljava/lang/String;
    :cond_33
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@883
    move-result v4

    #@884
    .line 10370
    .local v4, "NJ":I
    const/16 v43, 0x64

    #@886
    move/from16 v0, v43

    #@888
    if-le v4, v0, :cond_34

    #@88a
    .line 10371
    new-instance v43, Landroid/os/ParcelFormatException;

    #@88c
    new-instance v44, Ljava/lang/StringBuilder;

    #@88e
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@891
    const-string/jumbo v45, "File corrupt: too many job timers "

    #@894
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@897
    move-result-object v44

    #@898
    move-object/from16 v0, v44

    #@89a
    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@89d
    move-result-object v44

    #@89e
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8a1
    move-result-object v44

    #@8a2
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@8a5
    throw v43

    #@8a6
    .line 10373
    :cond_34
    const/16 v17, 0x0

    #@8a8
    .local v17, "ij":I
    :goto_17
    move/from16 v0, v17

    #@8aa
    if-ge v0, v4, :cond_35

    #@8ac
    .line 10374
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@8af
    move-result-object v26

    #@8b0
    .line 10375
    .restart local v26    # "name":Ljava/lang/String;
    move-object/from16 v0, v39

    #@8b2
    move-object/from16 v1, v26

    #@8b4
    move-object/from16 v2, p1

    #@8b6
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readJobSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    #@8b9
    .line 10373
    add-int/lit8 v17, v17, 0x1

    #@8bb
    goto :goto_17

    #@8bc
    .line 10378
    .end local v26    # "name":Ljava/lang/String;
    :cond_35
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@8bf
    move-result v6

    #@8c0
    .line 10379
    .local v6, "NP":I
    const/16 v43, 0x3e8

    #@8c2
    move/from16 v0, v43

    #@8c4
    if-le v6, v0, :cond_36

    #@8c6
    .line 10380
    new-instance v43, Landroid/os/ParcelFormatException;

    #@8c8
    new-instance v44, Ljava/lang/StringBuilder;

    #@8ca
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@8cd
    const-string/jumbo v45, "File corrupt: too many sensors "

    #@8d0
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@8d3
    move-result-object v44

    #@8d4
    move-object/from16 v0, v44

    #@8d6
    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@8d9
    move-result-object v44

    #@8da
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@8dd
    move-result-object v44

    #@8de
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@8e1
    throw v43

    #@8e2
    .line 10382
    :cond_36
    const/16 v20, 0x0

    #@8e4
    :goto_18
    move/from16 v0, v20

    #@8e6
    if-ge v0, v6, :cond_38

    #@8e8
    .line 10383
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@8eb
    move-result v35

    #@8ec
    .line 10384
    .local v35, "seNumber":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@8ef
    move-result v43

    #@8f0
    if-eqz v43, :cond_37

    #@8f2
    .line 10385
    const/16 v43, 0x1

    #@8f4
    move-object/from16 v0, v39

    #@8f6
    move/from16 v1, v35

    #@8f8
    move/from16 v2, v43

    #@8fa
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getSensorTimerLocked(IZ)Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@8fd
    move-result-object v43

    #@8fe
    move-object/from16 v0, v43

    #@900
    move-object/from16 v1, p1

    #@902
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@905
    .line 10382
    :cond_37
    add-int/lit8 v20, v20, 0x1

    #@907
    goto :goto_18

    #@908
    .line 10390
    .end local v35    # "seNumber":I
    :cond_38
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@90b
    move-result v6

    #@90c
    .line 10391
    const/16 v43, 0x3e8

    #@90e
    move/from16 v0, v43

    #@910
    if-le v6, v0, :cond_39

    #@912
    .line 10392
    new-instance v43, Landroid/os/ParcelFormatException;

    #@914
    new-instance v44, Ljava/lang/StringBuilder;

    #@916
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@919
    const-string/jumbo v45, "File corrupt: too many processes "

    #@91c
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@91f
    move-result-object v44

    #@920
    move-object/from16 v0, v44

    #@922
    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@925
    move-result-object v44

    #@926
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@929
    move-result-object v44

    #@92a
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@92d
    throw v43

    #@92e
    .line 10394
    :cond_39
    const/16 v19, 0x0

    #@930
    .local v19, "ip":I
    :goto_19
    move/from16 v0, v19

    #@932
    if-ge v0, v6, :cond_3a

    #@934
    .line 10395
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@937
    move-result-object v32

    #@938
    .line 10396
    .local v32, "procName":Ljava/lang/String;
    move-object/from16 v0, v39

    #@93a
    move-object/from16 v1, v32

    #@93c
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    #@93f
    move-result-object v29

    #@940
    .line 10397
    .local v29, "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@943
    move-result-wide v44

    #@944
    move-wide/from16 v0, v44

    #@946
    move-object/from16 v2, v29

    #@948
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedUserTime:J

    #@94a
    move-wide/from16 v0, v44

    #@94c
    move-object/from16 v2, v29

    #@94e
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mUserTime:J

    #@950
    .line 10398
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@953
    move-result-wide v44

    #@954
    move-wide/from16 v0, v44

    #@956
    move-object/from16 v2, v29

    #@958
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedSystemTime:J

    #@95a
    move-wide/from16 v0, v44

    #@95c
    move-object/from16 v2, v29

    #@95e
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mSystemTime:J

    #@960
    .line 10399
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@963
    move-result-wide v44

    #@964
    move-wide/from16 v0, v44

    #@966
    move-object/from16 v2, v29

    #@968
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedForegroundTime:J

    #@96a
    move-wide/from16 v0, v44

    #@96c
    move-object/from16 v2, v29

    #@96e
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mForegroundTime:J

    #@970
    .line 10400
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@973
    move-result v43

    #@974
    move/from16 v0, v43

    #@976
    move-object/from16 v1, v29

    #@978
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedStarts:I

    #@97a
    move/from16 v0, v43

    #@97c
    move-object/from16 v1, v29

    #@97e
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mStarts:I

    #@980
    .line 10401
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@983
    move-result v43

    #@984
    move/from16 v0, v43

    #@986
    move-object/from16 v1, v29

    #@988
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedNumCrashes:I

    #@98a
    move/from16 v0, v43

    #@98c
    move-object/from16 v1, v29

    #@98e
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    #@990
    .line 10402
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@993
    move-result v43

    #@994
    move/from16 v0, v43

    #@996
    move-object/from16 v1, v29

    #@998
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedNumAnrs:I

    #@99a
    move/from16 v0, v43

    #@99c
    move-object/from16 v1, v29

    #@99e
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    #@9a0
    .line 10403
    move-object/from16 v0, v29

    #@9a2
    move-object/from16 v1, p1

    #@9a4
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->readExcessivePowerFromParcelLocked(Landroid/os/Parcel;)V

    #@9a7
    .line 10394
    add-int/lit8 v19, v19, 0x1

    #@9a9
    goto :goto_19

    #@9aa
    .line 10406
    .end local v29    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v32    # "procName":Ljava/lang/String;
    :cond_3a
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@9ad
    move-result v6

    #@9ae
    .line 10407
    const/16 v43, 0x2710

    #@9b0
    move/from16 v0, v43

    #@9b2
    if-le v6, v0, :cond_3b

    #@9b4
    .line 10408
    new-instance v43, Landroid/os/ParcelFormatException;

    #@9b6
    new-instance v44, Ljava/lang/StringBuilder;

    #@9b8
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@9bb
    const-string/jumbo v45, "File corrupt: too many packages "

    #@9be
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9c1
    move-result-object v44

    #@9c2
    move-object/from16 v0, v44

    #@9c4
    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@9c7
    move-result-object v44

    #@9c8
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@9cb
    move-result-object v44

    #@9cc
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@9cf
    throw v43

    #@9d0
    .line 10410
    :cond_3b
    const/16 v19, 0x0

    #@9d2
    :goto_1a
    move/from16 v0, v19

    #@9d4
    if-ge v0, v6, :cond_40

    #@9d6
    .line 10411
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@9d9
    move-result-object v31

    #@9da
    .line 10412
    .local v31, "pkgName":Ljava/lang/String;
    move-object/from16 v0, v39

    #@9dc
    move-object/from16 v1, v31

    #@9de
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    #@9e1
    move-result-object v28

    #@9e2
    .line 10413
    .local v28, "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@9e5
    move-result v12

    #@9e6
    .line 10414
    .local v12, "NWA":I
    const/16 v43, 0x3e8

    #@9e8
    move/from16 v0, v43

    #@9ea
    if-le v12, v0, :cond_3c

    #@9ec
    .line 10415
    new-instance v43, Landroid/os/ParcelFormatException;

    #@9ee
    new-instance v44, Ljava/lang/StringBuilder;

    #@9f0
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@9f3
    const-string/jumbo v45, "File corrupt: too many wakeup alarms "

    #@9f6
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@9f9
    move-result-object v44

    #@9fa
    move-object/from16 v0, v44

    #@9fc
    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@9ff
    move-result-object v44

    #@a00
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@a03
    move-result-object v44

    #@a04
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@a07
    throw v43

    #@a08
    .line 10417
    :cond_3c
    move-object/from16 v0, v28

    #@a0a
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    #@a0c
    move-object/from16 v43, v0

    #@a0e
    invoke-virtual/range {v43 .. v43}, Landroid/util/ArrayMap;->clear()V

    #@a11
    .line 10418
    const/16 v23, 0x0

    #@a13
    .local v23, "iwa":I
    :goto_1b
    move/from16 v0, v23

    #@a15
    if-ge v0, v12, :cond_3d

    #@a17
    .line 10419
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@a1a
    move-result-object v38

    #@a1b
    .line 10420
    .local v38, "tag":Ljava/lang/String;
    new-instance v14, Lcom/android/internal/os/BatteryStatsImpl$Counter;

    #@a1d
    move-object/from16 v0, p0

    #@a1f
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@a21
    move-object/from16 v43, v0

    #@a23
    move-object/from16 v0, v43

    #@a25
    invoke-direct {v14, v0}, Lcom/android/internal/os/BatteryStatsImpl$Counter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@a28
    .line 10421
    .local v14, "c":Lcom/android/internal/os/BatteryStatsImpl$Counter;
    move-object/from16 v0, p1

    #@a2a
    invoke-virtual {v14, v0}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@a2d
    .line 10422
    move-object/from16 v0, v28

    #@a2f
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    #@a31
    move-object/from16 v43, v0

    #@a33
    move-object/from16 v0, v43

    #@a35
    move-object/from16 v1, v38

    #@a37
    invoke-virtual {v0, v1, v14}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@a3a
    .line 10418
    add-int/lit8 v23, v23, 0x1

    #@a3c
    goto :goto_1b

    #@a3d
    .line 10424
    .end local v14    # "c":Lcom/android/internal/os/BatteryStatsImpl$Counter;
    .end local v38    # "tag":Ljava/lang/String;
    :cond_3d
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@a40
    move-result v8

    #@a41
    .line 10425
    const/16 v43, 0x3e8

    #@a43
    move/from16 v0, v43

    #@a45
    if-le v8, v0, :cond_3e

    #@a47
    .line 10426
    new-instance v43, Landroid/os/ParcelFormatException;

    #@a49
    new-instance v44, Ljava/lang/StringBuilder;

    #@a4b
    invoke-direct/range {v44 .. v44}, Ljava/lang/StringBuilder;-><init>()V

    #@a4e
    const-string/jumbo v45, "File corrupt: too many services "

    #@a51
    invoke-virtual/range {v44 .. v45}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a54
    move-result-object v44

    #@a55
    move-object/from16 v0, v44

    #@a57
    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@a5a
    move-result-object v44

    #@a5b
    invoke-virtual/range {v44 .. v44}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@a5e
    move-result-object v44

    #@a5f
    invoke-direct/range {v43 .. v44}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    #@a62
    throw v43

    #@a63
    .line 10428
    :cond_3e
    const/16 v20, 0x0

    #@a65
    :goto_1c
    move/from16 v0, v20

    #@a67
    if-ge v0, v8, :cond_3f

    #@a69
    .line 10429
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    #@a6c
    move-result-object v36

    #@a6d
    .line 10430
    .local v36, "servName":Ljava/lang/String;
    move-object/from16 v0, v39

    #@a6f
    move-object/from16 v1, v31

    #@a71
    move-object/from16 v2, v36

    #@a73
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    #@a76
    move-result-object v34

    #@a77
    .line 10431
    .local v34, "s":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    #@a7a
    move-result-wide v44

    #@a7b
    move-wide/from16 v0, v44

    #@a7d
    move-object/from16 v2, v34

    #@a7f
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLoadedStartTime:J

    #@a81
    move-wide/from16 v0, v44

    #@a83
    move-object/from16 v2, v34

    #@a85
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStartTime:J

    #@a87
    .line 10432
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@a8a
    move-result v43

    #@a8b
    move/from16 v0, v43

    #@a8d
    move-object/from16 v1, v34

    #@a8f
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLoadedStarts:I

    #@a91
    move/from16 v0, v43

    #@a93
    move-object/from16 v1, v34

    #@a95
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    #@a97
    .line 10433
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    #@a9a
    move-result v43

    #@a9b
    move/from16 v0, v43

    #@a9d
    move-object/from16 v1, v34

    #@a9f
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLoadedLaunches:I

    #@aa1
    move/from16 v0, v43

    #@aa3
    move-object/from16 v1, v34

    #@aa5
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    #@aa7
    .line 10428
    add-int/lit8 v20, v20, 0x1

    #@aa9
    goto :goto_1c

    #@aaa
    .line 10410
    .end local v34    # "s":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .end local v36    # "servName":Ljava/lang/String;
    :cond_3f
    add-int/lit8 v19, v19, 0x1

    #@aac
    goto/16 :goto_1a

    #@aae
    .line 10237
    .end local v12    # "NWA":I
    .end local v23    # "iwa":I
    .end local v28    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v31    # "pkgName":Ljava/lang/String;
    :cond_40
    add-int/lit8 v21, v21, 0x1

    #@ab0
    goto/16 :goto_e

    #@ab2
    .line 10096
    .end local v4    # "NJ":I
    .end local v6    # "NP":I
    .end local v8    # "NS":I
    .end local v11    # "NW":I
    .end local v17    # "ij":I
    .end local v19    # "ip":I
    .end local v20    # "is":I
    .end local v22    # "iw":I
    .end local v39    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v40    # "uid":I
    :cond_41
    return-void
.end method

.method public recordDailyStatsIfNeededLocked(Z)V
    .locals 6
    .param p1, "settled"    # Z

    #@0
    .prologue
    .line 7671
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@3
    move-result-wide v0

    #@4
    .line 7672
    .local v0, "currentTime":J
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    #@6
    cmp-long v2, v0, v2

    #@8
    if-ltz v2, :cond_1

    #@a
    .line 7673
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    #@d
    .line 7670
    :cond_0
    :goto_0
    return-void

    #@e
    .line 7674
    :cond_1
    if-eqz p1, :cond_2

    #@10
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    #@12
    cmp-long v2, v0, v2

    #@14
    if-ltz v2, :cond_2

    #@16
    .line 7675
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    #@19
    goto :goto_0

    #@1a
    .line 7676
    :cond_2
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@1c
    const-wide/32 v4, 0x5265c00

    #@1f
    sub-long/2addr v2, v4

    #@20
    cmp-long v2, v0, v2

    #@22
    if-gez v2, :cond_0

    #@24
    .line 7677
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    #@27
    goto :goto_0
.end method

.method public recordDailyStatsLocked()V
    .locals 10

    #@0
    .prologue
    const/4 v9, 0x0

    #@1
    const/4 v8, 0x0

    #@2
    .line 7682
    new-instance v2, Landroid/os/BatteryStats$DailyItem;

    #@4
    invoke-direct {v2}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    #@7
    .line 7683
    .local v2, "item":Landroid/os/BatteryStats$DailyItem;
    iget-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@9
    iput-wide v6, v2, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    #@b
    .line 7684
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@e
    move-result-wide v6

    #@f
    iput-wide v6, v2, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    #@11
    .line 7685
    const/4 v1, 0x0

    #@12
    .line 7686
    .local v1, "hasData":Z
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@14
    iget v5, v5, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@16
    if-lez v5, :cond_0

    #@18
    .line 7687
    const/4 v1, 0x1

    #@19
    .line 7688
    new-instance v5, Landroid/os/BatteryStats$LevelStepTracker;

    #@1b
    .line 7689
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@1d
    iget v6, v6, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@1f
    .line 7690
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@21
    iget-object v7, v7, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    #@23
    .line 7688
    invoke-direct {v5, v6, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    #@26
    iput-object v5, v2, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    #@28
    .line 7692
    :cond_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@2a
    iget v5, v5, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@2c
    if-lez v5, :cond_1

    #@2e
    .line 7693
    const/4 v1, 0x1

    #@2f
    .line 7694
    new-instance v5, Landroid/os/BatteryStats$LevelStepTracker;

    #@31
    .line 7695
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@33
    iget v6, v6, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    #@35
    .line 7696
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@37
    iget-object v7, v7, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    #@39
    .line 7694
    invoke-direct {v5, v6, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    #@3c
    iput-object v5, v2, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    #@3e
    .line 7698
    :cond_1
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@40
    if-eqz v5, :cond_2

    #@42
    .line 7699
    const/4 v1, 0x1

    #@43
    .line 7700
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@45
    iput-object v5, v2, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    #@47
    .line 7701
    iput-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@49
    .line 7703
    :cond_2
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@4b
    invoke-virtual {v5}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    #@4e
    .line 7704
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@50
    invoke-virtual {v5}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    #@53
    .line 7705
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateDailyDeadlineLocked()V

    #@56
    .line 7707
    if-eqz v1, :cond_4

    #@58
    .line 7708
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@5a
    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@5d
    .line 7709
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@5f
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    #@62
    move-result v5

    #@63
    const/16 v6, 0xa

    #@65
    if-le v5, v6, :cond_3

    #@67
    .line 7710
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    #@69
    invoke-virtual {v5, v8}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    #@6c
    goto :goto_0

    #@6d
    .line 7712
    :cond_3
    new-instance v3, Ljava/io/ByteArrayOutputStream;

    #@6f
    invoke-direct {v3}, Ljava/io/ByteArrayOutputStream;-><init>()V

    #@72
    .line 7714
    .local v3, "memStream":Ljava/io/ByteArrayOutputStream;
    :try_start_0
    new-instance v4, Lcom/android/internal/util/FastXmlSerializer;

    #@74
    invoke-direct {v4}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    #@77
    .line 7715
    .local v4, "out":Lorg/xmlpull/v1/XmlSerializer;
    sget-object v5, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    #@79
    invoke-virtual {v5}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    #@7c
    move-result-object v5

    #@7d
    invoke-interface {v4, v3, v5}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    #@80
    .line 7716
    invoke-direct {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyItemsLocked(Lorg/xmlpull/v1/XmlSerializer;)V

    #@83
    .line 7717
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    #@86
    move-result-object v5

    #@87
    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$2;

    #@89
    invoke-direct {v6, p0, v3}, Lcom/android/internal/os/BatteryStatsImpl$2;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Ljava/io/ByteArrayOutputStream;)V

    #@8c
    invoke-virtual {v5, v6}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    #@8f
    .line 7681
    .end local v3    # "memStream":Ljava/io/ByteArrayOutputStream;
    .end local v4    # "out":Lorg/xmlpull/v1/XmlSerializer;
    :cond_4
    :goto_1
    return-void

    #@90
    .line 7737
    .restart local v3    # "memStream":Ljava/io/ByteArrayOutputStream;
    :catch_0
    move-exception v0

    #@91
    .local v0, "e":Ljava/io/IOException;
    goto :goto_1
.end method

.method public removeIsolatedUidLocked(I)V
    .locals 1
    .param p1, "isolatedUid"    # I

    #@0
    .prologue
    .line 2942
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    #@2
    invoke-virtual {v0, p1}, Landroid/util/SparseIntArray;->delete(I)V

    #@5
    .line 2943
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@7
    invoke-virtual {v0, p1}, Lcom/android/internal/os/KernelUidCpuTimeReader;->removeUid(I)V

    #@a
    .line 2941
    return-void
.end method

.method public removeUidStatsLocked(I)V
    .locals 1
    .param p1, "uid"    # I

    #@0
    .prologue
    .line 9805
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@2
    invoke-virtual {v0, p1}, Lcom/android/internal/os/KernelUidCpuTimeReader;->removeUid(I)V

    #@5
    .line 9806
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@7
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    #@a
    .line 9804
    return-void
.end method

.method public reportExcessiveCpuLocked(ILjava/lang/String;JJ)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "proc"    # Ljava/lang/String;
    .param p3, "overTime"    # J
    .param p5, "usedTime"    # J

    #@0
    .prologue
    .line 3362
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3363
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@6
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@9
    move-result-object v0

    #@a
    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@c
    .line 3364
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    #@e
    move-object v1, p2

    #@f
    move-wide v2, p3

    #@10
    move-wide v4, p5

    #@11
    .line 3365
    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->reportExcessiveCpuLocked(Ljava/lang/String;JJ)V

    #@14
    .line 3361
    :cond_0
    return-void
.end method

.method public reportExcessiveWakeLocked(ILjava/lang/String;JJ)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "proc"    # Ljava/lang/String;
    .param p3, "overTime"    # J
    .param p5, "usedTime"    # J

    #@0
    .prologue
    .line 3354
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@3
    move-result p1

    #@4
    .line 3355
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@6
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    #@9
    move-result-object v0

    #@a
    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@c
    .line 3356
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    #@e
    move-object v1, p2

    #@f
    move-wide v2, p3

    #@10
    move-wide v4, p5

    #@11
    .line 3357
    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->reportExcessiveWakeLocked(Ljava/lang/String;JJ)V

    #@14
    .line 3353
    :cond_0
    return-void
.end method

.method public resetAllStatsCmdLocked()V
    .locals 14

    #@0
    .prologue
    const-wide/16 v12, 0x3e8

    #@2
    const/4 v10, 0x0

    #@3
    .line 8154
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V

    #@6
    .line 8155
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v8}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v2

    #@c
    .line 8156
    .local v2, "mSecUptime":J
    mul-long v6, v2, v12

    #@e
    .line 8157
    .local v6, "uptime":J
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@10
    invoke-interface {v8}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@13
    move-result-wide v0

    #@14
    .line 8158
    .local v0, "mSecRealtime":J
    mul-long v4, v0, v12

    #@16
    .line 8159
    .local v4, "realtime":J
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@18
    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@1a
    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStartLevel:I

    #@1c
    .line 8160
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    #@1f
    .line 8161
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@22
    .line 8163
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@24
    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@26
    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@28
    .line 8162
    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@2a
    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@2c
    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@2e
    .line 8164
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@30
    invoke-virtual {v8, v6, v7, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->reset(JJ)V

    #@33
    .line 8165
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@35
    invoke-virtual {v8, v6, v7, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->reset(JJ)V

    #@38
    .line 8166
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@3a
    iget v8, v8, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@3c
    const/high16 v9, 0x80000

    #@3e
    and-int/2addr v8, v9

    #@3f
    if-nez v8, :cond_0

    #@41
    .line 8167
    iget v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@43
    const/4 v9, 0x2

    #@44
    if-ne v8, v9, :cond_1

    #@46
    .line 8168
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@48
    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@4a
    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@4c
    .line 8169
    iput v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@4e
    .line 8174
    :goto_0
    iput v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    #@50
    .line 8175
    iput v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    #@52
    .line 8177
    :cond_0
    invoke-direct {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    #@55
    .line 8153
    return-void

    #@56
    .line 8171
    :cond_1
    iput v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@58
    .line 8172
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@5a
    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@5c
    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@5e
    goto :goto_0
.end method

.method public scheduleRemoveIsolatedUidLocked(II)V
    .locals 3
    .param p1, "isolatedUid"    # I
    .param p2, "appUid"    # I

    #@0
    .prologue
    .line 2929
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    #@2
    const/4 v2, -0x1

    #@3
    invoke-virtual {v1, p1, v2}, Landroid/util/SparseIntArray;->get(II)I

    #@6
    move-result v0

    #@7
    .line 2930
    .local v0, "curUid":I
    if-ne v0, p2, :cond_0

    #@9
    .line 2931
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    #@b
    if-eqz v1, :cond_0

    #@d
    .line 2932
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    #@f
    invoke-interface {v1, p1}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToRemovedUid(I)V

    #@12
    .line 2928
    :cond_0
    return-void
.end method

.method public setBatteryStateLocked(IIIIIII)V
    .locals 19
    .param p1, "status"    # I
    .param p2, "health"    # I
    .param p3, "plugType"    # I
    .param p4, "level"    # I
    .param p5, "temp"    # I
    .param p6, "volt"    # I
    .param p7, "chargeUAh"    # I

    #@0
    .prologue
    .line 9345
    if-nez p3, :cond_7

    #@2
    const/16 v18, 0x1

    #@4
    .line 9346
    .local v18, "onBattery":Z
    :goto_0
    move-object/from16 v0, p0

    #@6
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v6

    #@c
    .line 9347
    .local v6, "uptime":J
    move-object/from16 v0, p0

    #@e
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@10
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@13
    move-result-wide v4

    #@14
    .line 9348
    .local v4, "elapsedRealtime":J
    move-object/from16 v0, p0

    #@16
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    #@18
    if-nez v3, :cond_9

    #@1a
    .line 9349
    const/4 v3, 0x1

    #@1b
    move-object/from16 v0, p0

    #@1d
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    #@1f
    .line 9354
    move-object/from16 v0, p0

    #@21
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@23
    move/from16 v0, v18

    #@25
    if-ne v0, v3, :cond_0

    #@27
    .line 9355
    if-eqz v18, :cond_8

    #@29
    .line 9356
    move-object/from16 v0, p0

    #@2b
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@2d
    iget v8, v3, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@2f
    const v10, -0x80001

    #@32
    and-int/2addr v8, v10

    #@33
    iput v8, v3, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@35
    .line 9362
    :cond_0
    :goto_1
    move-object/from16 v0, p0

    #@37
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@39
    iget v8, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@3b
    const/high16 v10, 0x1000000

    #@3d
    or-int/2addr v8, v10

    #@3e
    iput v8, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@40
    .line 9363
    move-object/from16 v0, p0

    #@42
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@44
    move/from16 v0, p1

    #@46
    int-to-byte v8, v0

    #@47
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@49
    .line 9364
    move-object/from16 v0, p0

    #@4b
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@4d
    move/from16 v0, p4

    #@4f
    int-to-byte v8, v0

    #@50
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@52
    .line 9365
    move-object/from16 v0, p0

    #@54
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@56
    move/from16 v0, p7

    #@58
    iput v0, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@5a
    .line 9367
    move/from16 v0, p4

    #@5c
    move-object/from16 v1, p0

    #@5e
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    #@60
    move/from16 v0, p4

    #@62
    move-object/from16 v1, p0

    #@64
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@66
    .line 9366
    move/from16 v0, p4

    #@68
    move-object/from16 v1, p0

    #@6a
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    #@6c
    move/from16 v0, p4

    #@6e
    move-object/from16 v1, p0

    #@70
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    #@72
    .line 9368
    move/from16 v0, p4

    #@74
    move-object/from16 v1, p0

    #@76
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    #@78
    .line 9372
    :cond_1
    :goto_2
    move-object/from16 v0, p0

    #@7a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@7c
    iget-byte v9, v3, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@7e
    .line 9373
    .local v9, "oldStatus":I
    if-eqz v18, :cond_c

    #@80
    .line 9374
    move/from16 v0, p4

    #@82
    move-object/from16 v1, p0

    #@84
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@86
    .line 9375
    move-object/from16 v0, p0

    #@88
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@8a
    if-nez v3, :cond_2

    #@8c
    .line 9376
    const/4 v3, 0x1

    #@8d
    move-object/from16 v0, p0

    #@8f
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@91
    .line 9377
    const/4 v8, 0x1

    #@92
    move-object/from16 v3, p0

    #@94
    invoke-direct/range {v3 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    #@97
    .line 9385
    :cond_2
    :goto_3
    move/from16 v0, p4

    #@99
    move-object/from16 v1, p0

    #@9b
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@9d
    .line 9386
    move-object/from16 v0, p0

    #@9f
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@a1
    if-gez v3, :cond_3

    #@a3
    .line 9387
    move/from16 v0, p4

    #@a5
    move-object/from16 v1, p0

    #@a7
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@a9
    .line 9390
    :cond_3
    move-object/from16 v0, p0

    #@ab
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@ad
    move/from16 v0, v18

    #@af
    if-eq v0, v3, :cond_d

    #@b1
    .line 9391
    move-object/from16 v0, p0

    #@b3
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@b5
    move/from16 v0, p4

    #@b7
    int-to-byte v8, v0

    #@b8
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@ba
    .line 9392
    move-object/from16 v0, p0

    #@bc
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@be
    move/from16 v0, p1

    #@c0
    int-to-byte v8, v0

    #@c1
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@c3
    .line 9393
    move-object/from16 v0, p0

    #@c5
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@c7
    move/from16 v0, p2

    #@c9
    int-to-byte v8, v0

    #@ca
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    #@cc
    .line 9394
    move-object/from16 v0, p0

    #@ce
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@d0
    move/from16 v0, p3

    #@d2
    int-to-byte v8, v0

    #@d3
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@d5
    .line 9395
    move-object/from16 v0, p0

    #@d7
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@d9
    move/from16 v0, p5

    #@db
    int-to-short v8, v0

    #@dc
    iput-short v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    #@de
    .line 9396
    move-object/from16 v0, p0

    #@e0
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@e2
    move/from16 v0, p6

    #@e4
    int-to-char v8, v0

    #@e5
    iput-char v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    #@e7
    .line 9397
    move-object/from16 v0, p0

    #@e9
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@eb
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@ed
    move/from16 v0, p7

    #@ef
    if-ge v0, v3, :cond_4

    #@f1
    .line 9399
    move-object/from16 v0, p0

    #@f3
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@f5
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@f7
    sub-int v3, v3, p7

    #@f9
    int-to-long v0, v3

    #@fa
    move-wide/from16 v16, v0

    #@fc
    .line 9400
    .local v16, "chargeDiff":J
    move-object/from16 v0, p0

    #@fe
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@100
    move-wide/from16 v0, v16

    #@102
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@105
    .line 9401
    move-object/from16 v0, p0

    #@107
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@109
    move-wide/from16 v0, v16

    #@10b
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@10e
    .line 9403
    .end local v16    # "chargeDiff":J
    :cond_4
    move-object/from16 v0, p0

    #@110
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@112
    move/from16 v0, p7

    #@114
    iput v0, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@116
    move-object/from16 v3, p0

    #@118
    move/from16 v8, v18

    #@11a
    move/from16 v10, p4

    #@11c
    move/from16 v11, p7

    #@11e
    .line 9404
    invoke-virtual/range {v3 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->setOnBatteryLocked(JJZIII)V

    #@121
    .line 9501
    :cond_5
    :goto_4
    if-nez v18, :cond_6

    #@123
    const/4 v3, 0x5

    #@124
    move/from16 v0, p1

    #@126
    if-ne v0, v3, :cond_6

    #@128
    .line 9504
    const/4 v3, 0x0

    #@129
    move-object/from16 v0, p0

    #@12b
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@12d
    .line 9344
    :cond_6
    return-void

    #@12e
    .line 9345
    .end local v4    # "elapsedRealtime":J
    .end local v6    # "uptime":J
    .end local v9    # "oldStatus":I
    .end local v18    # "onBattery":Z
    :cond_7
    const/16 v18, 0x0

    #@130
    .restart local v18    # "onBattery":Z
    goto/16 :goto_0

    #@132
    .line 9358
    .restart local v4    # "elapsedRealtime":J
    .restart local v6    # "uptime":J
    :cond_8
    move-object/from16 v0, p0

    #@134
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@136
    iget v8, v3, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@138
    const/high16 v10, 0x80000

    #@13a
    or-int/2addr v8, v10

    #@13b
    iput v8, v3, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@13d
    goto/16 :goto_1

    #@13f
    .line 9369
    :cond_9
    move-object/from16 v0, p0

    #@141
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@143
    move/from16 v0, p4

    #@145
    if-ne v3, v0, :cond_a

    #@147
    move-object/from16 v0, p0

    #@149
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@14b
    move/from16 v0, v18

    #@14d
    if-eq v3, v0, :cond_1

    #@14f
    .line 9370
    :cond_a
    const/16 v3, 0x64

    #@151
    move/from16 v0, p4

    #@153
    if-lt v0, v3, :cond_b

    #@155
    move/from16 v3, v18

    #@157
    :goto_5
    move-object/from16 v0, p0

    #@159
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    #@15c
    goto/16 :goto_2

    #@15e
    :cond_b
    const/4 v3, 0x0

    #@15f
    goto :goto_5

    #@160
    .line 9379
    .restart local v9    # "oldStatus":I
    :cond_c
    const/16 v3, 0x60

    #@162
    move/from16 v0, p4

    #@164
    if-ge v0, v3, :cond_2

    #@166
    .line 9380
    move-object/from16 v0, p0

    #@168
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@16a
    if-nez v3, :cond_2

    #@16c
    .line 9381
    const/4 v3, 0x1

    #@16d
    move-object/from16 v0, p0

    #@16f
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@171
    .line 9382
    const/4 v8, 0x1

    #@172
    move-object/from16 v3, p0

    #@174
    invoke-direct/range {v3 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    #@177
    goto/16 :goto_3

    #@179
    .line 9406
    :cond_d
    const/4 v2, 0x0

    #@17a
    .line 9407
    .local v2, "changed":Z
    move-object/from16 v0, p0

    #@17c
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@17e
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@180
    move/from16 v0, p4

    #@182
    if-eq v3, v0, :cond_e

    #@184
    .line 9408
    move-object/from16 v0, p0

    #@186
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@188
    move/from16 v0, p4

    #@18a
    int-to-byte v8, v0

    #@18b
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@18d
    .line 9409
    const/4 v2, 0x1

    #@18e
    .line 9413
    const-string/jumbo v3, "battery-level"

    #@191
    const/16 v8, 0xf

    #@193
    move-object/from16 v0, p0

    #@195
    invoke-direct {v0, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    #@198
    .line 9415
    :cond_e
    move-object/from16 v0, p0

    #@19a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@19c
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@19e
    move/from16 v0, p1

    #@1a0
    if-eq v3, v0, :cond_f

    #@1a2
    .line 9416
    move-object/from16 v0, p0

    #@1a4
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1a6
    move/from16 v0, p1

    #@1a8
    int-to-byte v8, v0

    #@1a9
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    #@1ab
    .line 9417
    const/4 v2, 0x1

    #@1ac
    .line 9419
    :cond_f
    move-object/from16 v0, p0

    #@1ae
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1b0
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    #@1b2
    move/from16 v0, p2

    #@1b4
    if-eq v3, v0, :cond_10

    #@1b6
    .line 9420
    move-object/from16 v0, p0

    #@1b8
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1ba
    move/from16 v0, p2

    #@1bc
    int-to-byte v8, v0

    #@1bd
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    #@1bf
    .line 9421
    const/4 v2, 0x1

    #@1c0
    .line 9423
    :cond_10
    move-object/from16 v0, p0

    #@1c2
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1c4
    iget-byte v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@1c6
    move/from16 v0, p3

    #@1c8
    if-eq v3, v0, :cond_11

    #@1ca
    .line 9424
    move-object/from16 v0, p0

    #@1cc
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1ce
    move/from16 v0, p3

    #@1d0
    int-to-byte v8, v0

    #@1d1
    iput-byte v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    #@1d3
    .line 9425
    const/4 v2, 0x1

    #@1d4
    .line 9427
    :cond_11
    move-object/from16 v0, p0

    #@1d6
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1d8
    iget-short v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    #@1da
    add-int/lit8 v3, v3, 0xa

    #@1dc
    move/from16 v0, p5

    #@1de
    if-ge v0, v3, :cond_12

    #@1e0
    .line 9428
    move-object/from16 v0, p0

    #@1e2
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1e4
    iget-short v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    #@1e6
    add-int/lit8 v3, v3, -0xa

    #@1e8
    move/from16 v0, p5

    #@1ea
    if-gt v0, v3, :cond_13

    #@1ec
    .line 9429
    :cond_12
    move-object/from16 v0, p0

    #@1ee
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1f0
    move/from16 v0, p5

    #@1f2
    int-to-short v8, v0

    #@1f3
    iput-short v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    #@1f5
    .line 9430
    const/4 v2, 0x1

    #@1f6
    .line 9432
    :cond_13
    move-object/from16 v0, p0

    #@1f8
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1fa
    iget-char v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    #@1fc
    add-int/lit8 v3, v3, 0x14

    #@1fe
    move/from16 v0, p6

    #@200
    if-gt v0, v3, :cond_14

    #@202
    .line 9433
    move-object/from16 v0, p0

    #@204
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@206
    iget-char v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    #@208
    add-int/lit8 v3, v3, -0x14

    #@20a
    move/from16 v0, p6

    #@20c
    if-ge v0, v3, :cond_15

    #@20e
    .line 9434
    :cond_14
    move-object/from16 v0, p0

    #@210
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@212
    move/from16 v0, p6

    #@214
    int-to-char v8, v0

    #@215
    iput-char v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    #@217
    .line 9435
    const/4 v2, 0x1

    #@218
    .line 9437
    :cond_15
    move-object/from16 v0, p0

    #@21a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@21c
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@21e
    add-int/lit8 v3, v3, 0xa

    #@220
    move/from16 v0, p7

    #@222
    if-ge v0, v3, :cond_16

    #@224
    .line 9438
    move-object/from16 v0, p0

    #@226
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@228
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@22a
    add-int/lit8 v3, v3, -0xa

    #@22c
    move/from16 v0, p7

    #@22e
    if-gt v0, v3, :cond_18

    #@230
    .line 9439
    :cond_16
    move-object/from16 v0, p0

    #@232
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@234
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@236
    move/from16 v0, p7

    #@238
    if-ge v0, v3, :cond_17

    #@23a
    .line 9441
    move-object/from16 v0, p0

    #@23c
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@23e
    iget v3, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@240
    sub-int v3, v3, p7

    #@242
    int-to-long v0, v3

    #@243
    move-wide/from16 v16, v0

    #@245
    .line 9442
    .restart local v16    # "chargeDiff":J
    move-object/from16 v0, p0

    #@247
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@249
    move-wide/from16 v0, v16

    #@24b
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@24e
    .line 9443
    move-object/from16 v0, p0

    #@250
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@252
    move-wide/from16 v0, v16

    #@254
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@257
    .line 9445
    .end local v16    # "chargeDiff":J
    :cond_17
    move-object/from16 v0, p0

    #@259
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@25b
    move/from16 v0, p7

    #@25d
    iput v0, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@25f
    .line 9446
    const/4 v2, 0x1

    #@260
    .line 9448
    :cond_18
    move-object/from16 v0, p0

    #@262
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    #@264
    int-to-long v10, v3

    #@265
    const/16 v3, 0x30

    #@267
    shl-long/2addr v10, v3

    #@268
    .line 9449
    move-object/from16 v0, p0

    #@26a
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@26c
    int-to-long v14, v3

    #@26d
    const/16 v3, 0x38

    #@26f
    shl-long/2addr v14, v3

    #@270
    .line 9448
    or-long/2addr v10, v14

    #@271
    .line 9450
    move/from16 v0, p4

    #@273
    and-int/lit16 v3, v0, 0xff

    #@275
    int-to-long v14, v3

    #@276
    const/16 v3, 0x28

    #@278
    shl-long/2addr v14, v3

    #@279
    .line 9448
    or-long v12, v10, v14

    #@27b
    .line 9451
    .local v12, "modeBits":J
    if-eqz v18, :cond_1a

    #@27d
    .line 9452
    const/4 v3, 0x0

    #@27e
    move-object/from16 v0, p0

    #@280
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    #@283
    move-result v3

    #@284
    or-int/2addr v2, v3

    #@285
    .line 9453
    .local v2, "changed":Z
    move-object/from16 v0, p0

    #@287
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    #@289
    move/from16 v0, p4

    #@28b
    if-eq v3, v0, :cond_19

    #@28d
    move-object/from16 v0, p0

    #@28f
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    #@291
    move/from16 v0, p4

    #@293
    if-le v3, v0, :cond_19

    #@295
    .line 9454
    move-object/from16 v0, p0

    #@297
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@299
    move-object/from16 v0, p0

    #@29b
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    #@29d
    sub-int v11, v3, p4

    #@29f
    move-wide v14, v4

    #@2a0
    invoke-virtual/range {v10 .. v15}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    #@2a3
    .line 9456
    move-object/from16 v0, p0

    #@2a5
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@2a7
    move-object/from16 v0, p0

    #@2a9
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    #@2ab
    sub-int v11, v3, p4

    #@2ad
    move-wide v14, v4

    #@2ae
    invoke-virtual/range {v10 .. v15}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    #@2b1
    .line 9458
    move/from16 v0, p4

    #@2b3
    move-object/from16 v1, p0

    #@2b5
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    #@2b7
    .line 9459
    move/from16 v0, p4

    #@2b9
    move-object/from16 v1, p0

    #@2bb
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    #@2bd
    .line 9460
    move-object/from16 v0, p0

    #@2bf
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@2c1
    move-object/from16 v0, p0

    #@2c3
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    #@2c5
    .line 9461
    const/4 v3, 0x0

    #@2c6
    move-object/from16 v0, p0

    #@2c8
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@2ca
    .line 9497
    .end local v2    # "changed":Z
    :cond_19
    :goto_6
    if-eqz v2, :cond_5

    #@2cc
    .line 9498
    move-object/from16 v0, p0

    #@2ce
    invoke-virtual {v0, v4, v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@2d1
    goto/16 :goto_4

    #@2d3
    .line 9464
    .local v2, "changed":Z
    :cond_1a
    const/16 v3, 0x5a

    #@2d5
    move/from16 v0, p4

    #@2d7
    if-lt v0, v3, :cond_1b

    #@2d9
    .line 9467
    const/4 v3, 0x1

    #@2da
    move-object/from16 v0, p0

    #@2dc
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    #@2df
    move-result v3

    #@2e0
    or-int/2addr v2, v3

    #@2e1
    .line 9468
    .local v2, "changed":Z
    move/from16 v0, p4

    #@2e3
    move-object/from16 v1, p0

    #@2e5
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@2e7
    .line 9469
    .end local v2    # "changed":Z
    :cond_1b
    move-object/from16 v0, p0

    #@2e9
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    #@2eb
    if-nez v3, :cond_1d

    #@2ed
    .line 9470
    move-object/from16 v0, p0

    #@2ef
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@2f1
    move/from16 v0, p4

    #@2f3
    if-ge v3, v0, :cond_1c

    #@2f5
    .line 9473
    const/4 v3, 0x1

    #@2f6
    move-object/from16 v0, p0

    #@2f8
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    #@2fb
    move-result v3

    #@2fc
    or-int/2addr v2, v3

    #@2fd
    .line 9474
    .restart local v2    # "changed":Z
    move/from16 v0, p4

    #@2ff
    move-object/from16 v1, p0

    #@301
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@303
    .line 9486
    .end local v2    # "changed":Z
    :cond_1c
    :goto_7
    move-object/from16 v0, p0

    #@305
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@307
    move/from16 v0, p4

    #@309
    if-eq v3, v0, :cond_19

    #@30b
    move-object/from16 v0, p0

    #@30d
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    #@30f
    move/from16 v0, p4

    #@311
    if-ge v3, v0, :cond_19

    #@313
    .line 9487
    move-object/from16 v0, p0

    #@315
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@317
    move-object/from16 v0, p0

    #@319
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@31b
    sub-int v11, p4, v3

    #@31d
    move-wide v14, v4

    #@31e
    invoke-virtual/range {v10 .. v15}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    #@321
    .line 9489
    move-object/from16 v0, p0

    #@323
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@325
    move-object/from16 v0, p0

    #@327
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@329
    sub-int v11, p4, v3

    #@32b
    move-wide v14, v4

    #@32c
    invoke-virtual/range {v10 .. v15}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    #@32f
    .line 9491
    move/from16 v0, p4

    #@331
    move-object/from16 v1, p0

    #@333
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@335
    .line 9492
    move/from16 v0, p4

    #@337
    move-object/from16 v1, p0

    #@339
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    #@33b
    .line 9493
    move-object/from16 v0, p0

    #@33d
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@33f
    move-object/from16 v0, p0

    #@341
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    #@343
    .line 9494
    const/4 v3, 0x0

    #@344
    move-object/from16 v0, p0

    #@346
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@348
    goto :goto_6

    #@349
    .line 9477
    :cond_1d
    move-object/from16 v0, p0

    #@34b
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@34d
    move/from16 v0, p4

    #@34f
    if-le v3, v0, :cond_1c

    #@351
    .line 9482
    const/4 v3, 0x0

    #@352
    move-object/from16 v0, p0

    #@354
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    #@357
    move-result v3

    #@358
    or-int/2addr v2, v3

    #@359
    .line 9483
    .restart local v2    # "changed":Z
    move/from16 v0, p4

    #@35b
    move-object/from16 v1, p0

    #@35d
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@35f
    goto :goto_7
.end method

.method public setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V
    .locals 0
    .param p1, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    #@0
    .prologue
    .line 7644
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    #@2
    .line 7643
    return-void
.end method

.method setChargingLocked(Z)Z
    .locals 3
    .param p1, "charging"    # Z

    #@0
    .prologue
    .line 9165
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    #@2
    if-eq v0, p1, :cond_1

    #@4
    .line 9166
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    #@6
    .line 9167
    if-eqz p1, :cond_0

    #@8
    .line 9168
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@a
    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@c
    const/high16 v2, 0x1000000

    #@e
    or-int/2addr v1, v2

    #@f
    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@11
    .line 9172
    :goto_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@13
    const/4 v1, 0x3

    #@14
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->sendEmptyMessage(I)Z

    #@17
    .line 9173
    const/4 v0, 0x1

    #@18
    return v0

    #@19
    .line 9170
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1b
    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@1d
    const v2, -0x1000001

    #@20
    and-int/2addr v1, v2

    #@21
    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@23
    goto :goto_0

    #@24
    .line 9175
    :cond_1
    const/4 v0, 0x0

    #@25
    return v0
.end method

.method public setNoAutoReset(Z)V
    .locals 0
    .param p1, "enabled"    # Z

    #@0
    .prologue
    .line 3154
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNoAutoReset:Z

    #@2
    .line 3153
    return-void
.end method

.method setOnBatteryLocked(JJZIII)V
    .locals 21
    .param p1, "mSecRealtime"    # J
    .param p3, "mSecUptime"    # J
    .param p5, "onBattery"    # Z
    .param p6, "oldStatus"    # I
    .param p7, "level"    # I
    .param p8, "chargeUAh"    # I

    #@0
    .prologue
    .line 9180
    const/4 v4, 0x0

    #@1
    .line 9181
    .local v4, "doWrite":Z
    move-object/from16 v0, p0

    #@3
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@5
    const/4 v6, 0x2

    #@6
    invoke-virtual {v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->obtainMessage(I)Landroid/os/Message;

    #@9
    move-result-object v18

    #@a
    .line 9182
    .local v18, "m":Landroid/os/Message;
    if-eqz p5, :cond_8

    #@c
    const/4 v5, 0x1

    #@d
    :goto_0
    move-object/from16 v0, v18

    #@f
    iput v5, v0, Landroid/os/Message;->arg1:I

    #@11
    .line 9183
    move-object/from16 v0, p0

    #@13
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@15
    move-object/from16 v0, v18

    #@17
    invoke-virtual {v5, v0}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->sendMessage(Landroid/os/Message;)Z

    #@1a
    .line 9185
    const-wide/16 v6, 0x3e8

    #@1c
    mul-long v14, p3, v6

    #@1e
    .line 9186
    .local v14, "uptime":J
    const-wide/16 v6, 0x3e8

    #@20
    mul-long v16, p1, v6

    #@22
    .line 9187
    .local v16, "realtime":J
    move-object/from16 v0, p0

    #@24
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    #@26
    const/4 v6, 0x2

    #@27
    if-ne v5, v6, :cond_9

    #@29
    const/16 v20, 0x1

    #@2b
    .line 9188
    .local v20, "screenOn":Z
    :goto_1
    if-eqz p5, :cond_e

    #@2d
    .line 9193
    const/4 v10, 0x0

    #@2e
    .line 9194
    .local v10, "reset":Z
    move-object/from16 v0, p0

    #@30
    iget-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNoAutoReset:Z

    #@32
    if-nez v5, :cond_3

    #@34
    const/4 v5, 0x5

    #@35
    move/from16 v0, p6

    #@37
    if-eq v0, v5, :cond_0

    #@39
    .line 9195
    const/16 v5, 0x5a

    #@3b
    move/from16 v0, p7

    #@3d
    if-lt v0, v5, :cond_a

    #@3f
    .line 9199
    :cond_0
    :goto_2
    const-string/jumbo v5, "BatteryStatsImpl"

    #@42
    new-instance v6, Ljava/lang/StringBuilder;

    #@44
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    #@47
    const-string/jumbo v7, "Resetting battery stats: level="

    #@4a
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@4d
    move-result-object v6

    #@4e
    move/from16 v0, p7

    #@50
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@53
    move-result-object v6

    #@54
    const-string/jumbo v7, " status="

    #@57
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@5a
    move-result-object v6

    #@5b
    move/from16 v0, p6

    #@5d
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@60
    move-result-object v6

    #@61
    .line 9200
    const-string/jumbo v7, " dischargeLevel="

    #@64
    .line 9199
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@67
    move-result-object v6

    #@68
    .line 9200
    move-object/from16 v0, p0

    #@6a
    iget v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@6c
    .line 9199
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@6f
    move-result-object v6

    #@70
    .line 9201
    const-string/jumbo v7, " lowAmount="

    #@73
    .line 9199
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@76
    move-result-object v6

    #@77
    .line 9201
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    #@7a
    move-result v7

    #@7b
    .line 9199
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@7e
    move-result-object v6

    #@7f
    .line 9202
    const-string/jumbo v7, " highAmount="

    #@82
    .line 9199
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@85
    move-result-object v6

    #@86
    .line 9202
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    #@89
    move-result v7

    #@8a
    .line 9199
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@8d
    move-result-object v6

    #@8e
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@91
    move-result-object v6

    #@92
    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    #@95
    .line 9206
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    #@98
    move-result v5

    #@99
    const/16 v6, 0x14

    #@9b
    if-lt v5, v6, :cond_1

    #@9d
    .line 9207
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@a0
    move-result-object v19

    #@a1
    .line 9208
    .local v19, "parcel":Landroid/os/Parcel;
    const/4 v5, 0x1

    #@a2
    move-object/from16 v0, p0

    #@a4
    move-object/from16 v1, v19

    #@a6
    invoke-virtual {v0, v1, v5}, Lcom/android/internal/os/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    #@a9
    .line 9209
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    #@ac
    move-result-object v5

    #@ad
    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$4;

    #@af
    move-object/from16 v0, p0

    #@b1
    move-object/from16 v1, v19

    #@b3
    invoke-direct {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$4;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Parcel;)V

    #@b6
    invoke-virtual {v5, v6}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    #@b9
    .line 9231
    .end local v19    # "parcel":Landroid/os/Parcel;
    :cond_1
    const/4 v4, 0x1

    #@ba
    .line 9232
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V

    #@bd
    .line 9233
    if-lez p8, :cond_2

    #@bf
    .line 9235
    move/from16 v0, p7

    #@c1
    int-to-double v6, v0

    #@c2
    const-wide/high16 v8, 0x4059000000000000L    # 100.0

    #@c4
    div-double/2addr v6, v8

    #@c5
    move/from16 v0, p8

    #@c7
    div-int/lit16 v5, v0, 0x3e8

    #@c9
    int-to-double v8, v5

    #@ca
    mul-double/2addr v6, v8

    #@cb
    double-to-int v5, v6

    #@cc
    move-object/from16 v0, p0

    #@ce
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@d0
    .line 9237
    :cond_2
    move/from16 v0, p7

    #@d2
    move-object/from16 v1, p0

    #@d4
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStartLevel:I

    #@d6
    .line 9238
    const/4 v10, 0x1

    #@d7
    .line 9239
    move-object/from16 v0, p0

    #@d9
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@db
    invoke-virtual {v5}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    #@de
    .line 9241
    :cond_3
    move-object/from16 v0, p0

    #@e0
    iget-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    #@e2
    if-eqz v5, :cond_4

    #@e4
    .line 9242
    const/4 v5, 0x0

    #@e5
    move-object/from16 v0, p0

    #@e7
    invoke-virtual {v0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    #@ea
    .line 9244
    :cond_4
    move/from16 v0, p7

    #@ec
    move-object/from16 v1, p0

    #@ee
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    #@f0
    .line 9245
    const/4 v5, 0x1

    #@f1
    move-object/from16 v0, p0

    #@f3
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@f5
    const/4 v5, 0x1

    #@f6
    move-object/from16 v0, p0

    #@f8
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@fa
    .line 9246
    move/from16 v0, p7

    #@fc
    move-object/from16 v1, p0

    #@fe
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    #@100
    .line 9247
    move/from16 v0, p7

    #@102
    move-object/from16 v1, p0

    #@104
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    #@106
    .line 9248
    move-object/from16 v0, p0

    #@108
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@10a
    invoke-virtual {v5}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    #@10d
    .line 9249
    move-object/from16 v0, p0

    #@10f
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@111
    invoke-virtual {v5}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    #@114
    .line 9250
    move-object/from16 v0, p0

    #@116
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@118
    move-object/from16 v0, p0

    #@11a
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    #@11c
    .line 9251
    const/4 v5, 0x0

    #@11d
    move-object/from16 v0, p0

    #@11f
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@121
    .line 9252
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    #@124
    .line 9253
    move-object/from16 v0, p0

    #@126
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@128
    move/from16 v0, p7

    #@12a
    int-to-byte v6, v0

    #@12b
    iput-byte v6, v5, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@12d
    .line 9254
    move-object/from16 v0, p0

    #@12f
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@131
    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@133
    const v7, -0x80001

    #@136
    and-int/2addr v6, v7

    #@137
    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@139
    .line 9257
    if-eqz v10, :cond_5

    #@13b
    .line 9258
    const/4 v5, 0x1

    #@13c
    move-object/from16 v0, p0

    #@13e
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    #@140
    move-object/from16 v5, p0

    #@142
    move-wide/from16 v6, p1

    #@144
    move-wide/from16 v8, p3

    #@146
    .line 9259
    invoke-direct/range {v5 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    #@149
    .line 9261
    :cond_5
    invoke-virtual/range {p0 .. p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@14c
    .line 9262
    move/from16 v0, p7

    #@14e
    move-object/from16 v1, p0

    #@150
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@152
    move/from16 v0, p7

    #@154
    move-object/from16 v1, p0

    #@156
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@158
    .line 9263
    if-eqz v20, :cond_c

    #@15a
    .line 9264
    move/from16 v0, p7

    #@15c
    move-object/from16 v1, p0

    #@15e
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@160
    .line 9265
    const/4 v5, 0x0

    #@161
    move-object/from16 v0, p0

    #@163
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@165
    .line 9270
    :goto_3
    const/4 v5, 0x0

    #@166
    move-object/from16 v0, p0

    #@168
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    #@16a
    .line 9271
    const/4 v5, 0x0

    #@16b
    move-object/from16 v0, p0

    #@16d
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    #@16f
    .line 9272
    if-eqz v20, :cond_d

    #@171
    const/4 v13, 0x0

    #@172
    :goto_4
    const/4 v12, 0x1

    #@173
    move-object/from16 v11, p0

    #@175
    invoke-virtual/range {v11 .. v17}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZZJJ)V

    #@178
    .line 9295
    .end local v10    # "reset":Z
    :goto_5
    if-nez v4, :cond_6

    #@17a
    move-object/from16 v0, p0

    #@17c
    iget-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    #@17e
    const-wide/32 v8, 0xea60

    #@181
    add-long/2addr v6, v8

    #@182
    cmp-long v5, v6, p1

    #@184
    if-gez v5, :cond_7

    #@186
    .line 9296
    :cond_6
    move-object/from16 v0, p0

    #@188
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@18a
    if-eqz v5, :cond_7

    #@18c
    .line 9297
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->writeAsyncLocked()V

    #@18f
    .line 9179
    :cond_7
    return-void

    #@190
    .line 9182
    .end local v14    # "uptime":J
    .end local v16    # "realtime":J
    .end local v20    # "screenOn":Z
    :cond_8
    const/4 v5, 0x0

    #@191
    goto/16 :goto_0

    #@193
    .line 9187
    .restart local v14    # "uptime":J
    .restart local v16    # "realtime":J
    :cond_9
    const/16 v20, 0x0

    #@195
    .restart local v20    # "screenOn":Z
    goto/16 :goto_1

    #@197
    .line 9196
    .restart local v10    # "reset":Z
    :cond_a
    move-object/from16 v0, p0

    #@199
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@19b
    const/16 v6, 0x14

    #@19d
    if-ge v5, v6, :cond_b

    #@19f
    const/16 v5, 0x50

    #@1a1
    move/from16 v0, p7

    #@1a3
    if-ge v0, v5, :cond_0

    #@1a5
    .line 9197
    :cond_b
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    #@1a8
    move-result v5

    #@1a9
    const/16 v6, 0xc8

    #@1ab
    if-lt v5, v6, :cond_3

    #@1ad
    .line 9198
    move-object/from16 v0, p0

    #@1af
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@1b1
    invoke-virtual {v5}, Landroid/os/Parcel;->dataSize()I

    #@1b4
    move-result v5

    #@1b5
    const/high16 v6, 0x40000

    #@1b7
    if-lt v5, v6, :cond_3

    #@1b9
    goto/16 :goto_2

    #@1bb
    .line 9267
    :cond_c
    const/4 v5, 0x0

    #@1bc
    move-object/from16 v0, p0

    #@1be
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@1c0
    .line 9268
    move/from16 v0, p7

    #@1c2
    move-object/from16 v1, p0

    #@1c4
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@1c6
    goto :goto_3

    #@1c7
    .line 9272
    :cond_d
    const/4 v13, 0x1

    #@1c8
    goto :goto_4

    #@1c9
    .line 9274
    .end local v10    # "reset":Z
    :cond_e
    move/from16 v0, p7

    #@1cb
    move-object/from16 v1, p0

    #@1cd
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    #@1cf
    .line 9275
    const/4 v5, 0x0

    #@1d0
    move-object/from16 v0, p0

    #@1d2
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@1d4
    const/4 v5, 0x0

    #@1d5
    move-object/from16 v0, p0

    #@1d7
    iput-boolean v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@1d9
    .line 9276
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    #@1dc
    .line 9277
    move-object/from16 v0, p0

    #@1de
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1e0
    move/from16 v0, p7

    #@1e2
    int-to-byte v6, v0

    #@1e3
    iput-byte v6, v5, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@1e5
    .line 9278
    move-object/from16 v0, p0

    #@1e7
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    #@1e9
    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1eb
    const/high16 v7, 0x80000

    #@1ed
    or-int/2addr v6, v7

    #@1ee
    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@1f0
    .line 9281
    invoke-virtual/range {p0 .. p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    #@1f3
    .line 9282
    move/from16 v0, p7

    #@1f5
    move-object/from16 v1, p0

    #@1f7
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@1f9
    move/from16 v0, p7

    #@1fb
    move-object/from16 v1, p0

    #@1fd
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@1ff
    .line 9283
    move-object/from16 v0, p0

    #@201
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@203
    move/from16 v0, p7

    #@205
    if-ge v0, v5, :cond_f

    #@207
    .line 9284
    move-object/from16 v0, p0

    #@209
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    #@20b
    move-object/from16 v0, p0

    #@20d
    iget v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@20f
    sub-int v6, v6, p7

    #@211
    add-int/lit8 v6, v6, -0x1

    #@213
    add-int/2addr v5, v6

    #@214
    move-object/from16 v0, p0

    #@216
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    #@218
    .line 9285
    move-object/from16 v0, p0

    #@21a
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    #@21c
    move-object/from16 v0, p0

    #@21e
    iget v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@220
    sub-int v6, v6, p7

    #@222
    add-int/2addr v5, v6

    #@223
    move-object/from16 v0, p0

    #@225
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    #@227
    .line 9287
    :cond_f
    move-object/from16 v0, p0

    #@229
    move/from16 v1, v20

    #@22b
    move/from16 v2, v20

    #@22d
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(ZZ)V

    #@230
    .line 9288
    if-eqz v20, :cond_10

    #@232
    const/4 v13, 0x0

    #@233
    :goto_6
    const/4 v12, 0x0

    #@234
    move-object/from16 v11, p0

    #@236
    invoke-virtual/range {v11 .. v17}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZZJJ)V

    #@239
    .line 9289
    move-object/from16 v0, p0

    #@23b
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@23d
    invoke-virtual {v5}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    #@240
    .line 9290
    move/from16 v0, p7

    #@242
    move-object/from16 v1, p0

    #@244
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    #@246
    .line 9291
    move/from16 v0, p7

    #@248
    move-object/from16 v1, p0

    #@24a
    iput v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    #@24c
    .line 9292
    move-object/from16 v0, p0

    #@24e
    iget v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    #@250
    move-object/from16 v0, p0

    #@252
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    #@254
    .line 9293
    const/4 v5, 0x0

    #@255
    move-object/from16 v0, p0

    #@257
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    #@259
    goto/16 :goto_5

    #@25b
    .line 9288
    :cond_10
    const/4 v13, 0x1

    #@25c
    goto :goto_6
.end method

.method public setPowerProfile(Lcom/android/internal/os/PowerProfile;)V
    .locals 6
    .param p1, "profile"    # Lcom/android/internal/os/PowerProfile;

    #@0
    .prologue
    .line 7620
    monitor-enter p0

    #@1
    .line 7621
    :try_start_0
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@3
    .line 7626
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@5
    invoke-virtual {v4}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    #@8
    move-result v2

    #@9
    .line 7627
    .local v2, "numClusters":I
    new-array v4, v2, [Lcom/android/internal/os/KernelCpuSpeedReader;

    #@b
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    #@d
    .line 7628
    const/4 v0, 0x0

    #@e
    .line 7629
    .local v0, "firstCpuOfCluster":I
    const/4 v1, 0x0

    #@f
    .local v1, "i":I
    :goto_0
    if-ge v1, v2, :cond_0

    #@11
    .line 7630
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@13
    invoke-virtual {v4, v1}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    #@16
    move-result v3

    #@17
    .line 7631
    .local v3, "numSpeedSteps":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    #@19
    new-instance v5, Lcom/android/internal/os/KernelCpuSpeedReader;

    #@1b
    invoke-direct {v5, v0, v3}, Lcom/android/internal/os/KernelCpuSpeedReader;-><init>(II)V

    #@1e
    aput-object v5, v4, v1

    #@20
    .line 7633
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@22
    invoke-virtual {v4, v1}, Lcom/android/internal/os/PowerProfile;->getNumCoresInCpuCluster(I)I

    #@25
    move-result v4

    #@26
    add-int/2addr v0, v4

    #@27
    .line 7629
    add-int/lit8 v1, v1, 0x1

    #@29
    goto :goto_0

    #@2a
    .line 7636
    .end local v3    # "numSpeedSteps":I
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@2c
    const/4 v5, -0x1

    #@2d
    if-ne v4, v5, :cond_1

    #@2f
    .line 7638
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@31
    invoke-virtual {v4}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    #@34
    move-result-wide v4

    #@35
    double-to-int v4, v4

    #@36
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    #@38
    :cond_1
    monitor-exit p0

    #@39
    .line 7619
    return-void

    #@3a
    .line 7620
    .end local v0    # "firstCpuOfCluster":I
    .end local v1    # "i":I
    .end local v2    # "numClusters":I
    :catchall_0
    move-exception v4

    #@3b
    monitor-exit p0

    #@3c
    throw v4
.end method

.method public setRadioScanningTimeout(J)V
    .locals 1
    .param p1, "timeout"    # J

    #@0
    .prologue
    .line 7648
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2
    if-eqz v0, :cond_0

    #@4
    .line 7649
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6
    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setTimeout(J)V

    #@9
    .line 7647
    :cond_0
    return-void
.end method

.method public setRecordAllHistoryLocked(Z)V
    .locals 13
    .param p1, "enabled"    # Z

    #@0
    .prologue
    const/4 v7, 0x1

    #@1
    .line 3115
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    #@3
    .line 3116
    if-nez p1, :cond_1

    #@5
    .line 3118
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@7
    const/4 v6, 0x5

    #@8
    invoke-virtual {v1, v6}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    #@b
    .line 3119
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@d
    const/16 v6, 0xd

    #@f
    invoke-virtual {v1, v6}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    #@12
    .line 3122
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@14
    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    #@17
    move-result-object v0

    #@18
    .line 3124
    .local v0, "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v0, :cond_3

    #@1a
    .line 3125
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@1c
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@1f
    move-result-wide v2

    #@20
    .line 3126
    .local v2, "mSecRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@22
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@25
    move-result-wide v4

    #@26
    .line 3127
    .local v4, "mSecUptime":J
    invoke-virtual {v0}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@29
    move-result-object v1

    #@2a
    invoke-interface {v1}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@2d
    move-result-object v10

    #@2e
    .local v10, "ent$iterator":Ljava/util/Iterator;
    :cond_0
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    #@31
    move-result v1

    #@32
    if-eqz v1, :cond_3

    #@34
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@37
    move-result-object v9

    #@38
    check-cast v9, Ljava/util/Map$Entry;

    #@3a
    .line 3128
    .local v9, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface {v9}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@3d
    move-result-object v12

    #@3e
    check-cast v12, Landroid/util/SparseIntArray;

    #@40
    .line 3129
    .local v12, "uids":Landroid/util/SparseIntArray;
    const/4 v11, 0x0

    #@41
    .local v11, "j":I
    :goto_0
    invoke-virtual {v12}, Landroid/util/SparseIntArray;->size()I

    #@44
    move-result v1

    #@45
    if-ge v11, v1, :cond_0

    #@47
    .line 3131
    invoke-interface {v9}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@4a
    move-result-object v7

    #@4b
    check-cast v7, Ljava/lang/String;

    #@4d
    invoke-virtual {v12, v11}, Landroid/util/SparseIntArray;->keyAt(I)I

    #@50
    move-result v8

    #@51
    const/16 v6, 0x4001

    #@53
    move-object v1, p0

    #@54
    .line 3130
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@57
    .line 3129
    add-int/lit8 v11, v11, 0x1

    #@59
    goto :goto_0

    #@5a
    .line 3137
    .end local v0    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v2    # "mSecRealtime":J
    .end local v4    # "mSecUptime":J
    .end local v9    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v10    # "ent$iterator":Ljava/util/Iterator;
    .end local v11    # "j":I
    .end local v12    # "uids":Landroid/util/SparseIntArray;
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    #@5c
    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    #@5f
    move-result-object v0

    #@60
    .line 3139
    .restart local v0    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v0, :cond_3

    #@62
    .line 3140
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@64
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@67
    move-result-wide v2

    #@68
    .line 3141
    .restart local v2    # "mSecRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@6a
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@6d
    move-result-wide v4

    #@6e
    .line 3142
    .restart local v4    # "mSecUptime":J
    invoke-virtual {v0}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@71
    move-result-object v1

    #@72
    invoke-interface {v1}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@75
    move-result-object v10

    #@76
    .restart local v10    # "ent$iterator":Ljava/util/Iterator;
    :cond_2
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    #@79
    move-result v1

    #@7a
    if-eqz v1, :cond_3

    #@7c
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@7f
    move-result-object v9

    #@80
    check-cast v9, Ljava/util/Map$Entry;

    #@82
    .line 3143
    .restart local v9    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface {v9}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@85
    move-result-object v12

    #@86
    check-cast v12, Landroid/util/SparseIntArray;

    #@88
    .line 3144
    .restart local v12    # "uids":Landroid/util/SparseIntArray;
    const/4 v11, 0x0

    #@89
    .restart local v11    # "j":I
    :goto_1
    invoke-virtual {v12}, Landroid/util/SparseIntArray;->size()I

    #@8c
    move-result v1

    #@8d
    if-ge v11, v1, :cond_2

    #@8f
    .line 3146
    invoke-interface {v9}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@92
    move-result-object v7

    #@93
    check-cast v7, Ljava/lang/String;

    #@95
    invoke-virtual {v12, v11}, Landroid/util/SparseIntArray;->keyAt(I)I

    #@98
    move-result v8

    #@99
    const v6, 0x8001

    #@9c
    move-object v1, p0

    #@9d
    .line 3145
    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    #@a0
    .line 3144
    add-int/lit8 v11, v11, 0x1

    #@a2
    goto :goto_1

    #@a3
    .line 3114
    .end local v2    # "mSecRealtime":J
    .end local v4    # "mSecUptime":J
    .end local v9    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v10    # "ent$iterator":Ljava/util/Iterator;
    .end local v11    # "j":I
    .end local v12    # "uids":Landroid/util/SparseIntArray;
    :cond_3
    return-void
.end method

.method public shutdownLocked()V
    .locals 4

    #@0
    .prologue
    .line 9840
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v0

    #@6
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@8
    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@b
    move-result-wide v2

    #@c
    invoke-direct {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->recordShutdownLocked(JJ)V

    #@f
    .line 9841
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->writeSyncLocked()V

    #@12
    .line 9842
    const/4 v0, 0x1

    #@13
    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mShuttingDown:Z

    #@15
    .line 9839
    return-void
.end method

.method public startAddingCpuLocked()Z
    .locals 2

    #@0
    .prologue
    .line 3312
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    #@2
    const/4 v1, 0x1

    #@3
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;->removeMessages(I)V

    #@6
    .line 3313
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@8
    return v0
.end method

.method public startIteratingHistoryLocked()Z
    .locals 7

    #@0
    .prologue
    const/4 v6, 0x1

    #@1
    const/4 v5, 0x0

    #@2
    .line 8039
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@4
    invoke-virtual {v4}, Landroid/os/Parcel;->dataSize()I

    #@7
    move-result v4

    #@8
    if-gtz v4, :cond_0

    #@a
    .line 8040
    return v5

    #@b
    .line 8042
    :cond_0
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@d
    invoke-virtual {v4, v5}, Landroid/os/Parcel;->setDataPosition(I)V

    #@10
    .line 8043
    iput-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    #@12
    .line 8044
    iput-boolean v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    #@14
    .line 8045
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@16
    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    #@19
    move-result v4

    #@1a
    new-array v4, v4, [Ljava/lang/String;

    #@1c
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    #@1e
    .line 8046
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@20
    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    #@23
    move-result v4

    #@24
    new-array v4, v4, [I

    #@26
    iput-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    #@28
    .line 8047
    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    #@2a
    .line 8048
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@2c
    invoke-virtual {v4}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@2f
    move-result-object v4

    #@30
    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@33
    move-result-object v1

    #@34
    .local v1, "ent$iterator":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@37
    move-result v4

    #@38
    if-eqz v4, :cond_1

    #@3a
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@3d
    move-result-object v0

    #@3e
    check-cast v0, Ljava/util/Map$Entry;

    #@40
    .line 8049
    .local v0, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@43
    move-result-object v3

    #@44
    check-cast v3, Landroid/os/BatteryStats$HistoryTag;

    #@46
    .line 8050
    .local v3, "tag":Landroid/os/BatteryStats$HistoryTag;
    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@49
    move-result-object v4

    #@4a
    check-cast v4, Ljava/lang/Integer;

    #@4c
    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    #@4f
    move-result v2

    #@50
    .line 8051
    .local v2, "idx":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    #@52
    iget-object v5, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@54
    aput-object v5, v4, v2

    #@56
    .line 8052
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    #@58
    iget v5, v3, Landroid/os/BatteryStats$HistoryTag;->uid:I

    #@5a
    aput v5, v4, v2

    #@5c
    .line 8053
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    #@5e
    iget-object v5, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@60
    invoke-virtual {v5}, Ljava/lang/String;->length()I

    #@63
    move-result v5

    #@64
    add-int/lit8 v5, v5, 0x1

    #@66
    add-int/2addr v4, v5

    #@67
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    #@69
    goto :goto_0

    #@6a
    .line 8055
    .end local v0    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    .end local v2    # "idx":I
    .end local v3    # "tag":Landroid/os/BatteryStats$HistoryTag;
    :cond_1
    return v6
.end method

.method public startIteratingOldHistoryLocked()Z
    .locals 3

    #@0
    .prologue
    const/4 v2, 0x1

    #@1
    const/4 v1, 0x0

    #@2
    .line 7977
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistory:Landroid/os/BatteryStats$HistoryItem;

    #@4
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    #@6
    if-nez v0, :cond_0

    #@8
    .line 7978
    return v1

    #@9
    .line 7980
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@b
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    #@e
    .line 7981
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    #@10
    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    #@13
    .line 7982
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    #@15
    .line 7983
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    #@17
    .line 7984
    return v2
.end method

.method stopAllPhoneSignalStrengthTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    #@0
    .prologue
    .line 3742
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v0

    #@6
    .line 3743
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    #@7
    .local v2, "i":I
    :goto_0
    const/4 v3, 0x5

    #@8
    if-ge v2, v3, :cond_2

    #@a
    .line 3744
    if-ne v2, p1, :cond_1

    #@c
    .line 3743
    :cond_0
    add-int/lit8 v2, v2, 0x1

    #@e
    goto :goto_0

    #@f
    .line 3747
    :cond_1
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@11
    aget-object v3, v3, v2

    #@13
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    #@16
    move-result v3

    #@17
    if-eqz v3, :cond_0

    #@19
    .line 3748
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1b
    aget-object v3, v3, v2

    #@1d
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@20
    goto :goto_1

    #@21
    .line 3741
    :cond_2
    return-void
.end method

.method stopAllWifiSignalStrengthTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    #@0
    .prologue
    .line 4354
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@2
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@5
    move-result-wide v0

    #@6
    .line 4355
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    #@7
    .local v2, "i":I
    :goto_0
    const/4 v3, 0x5

    #@8
    if-ge v2, v3, :cond_2

    #@a
    .line 4356
    if-ne v2, p1, :cond_1

    #@c
    .line 4355
    :cond_0
    add-int/lit8 v2, v2, 0x1

    #@e
    goto :goto_0

    #@f
    .line 4359
    :cond_1
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@11
    aget-object v3, v3, v2

    #@13
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    #@16
    move-result v3

    #@17
    if-eqz v3, :cond_0

    #@19
    .line 4360
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1b
    aget-object v3, v3, v2

    #@1d
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    #@20
    goto :goto_1

    #@21
    .line 4353
    :cond_2
    return-void
.end method

.method public updateBluetoothStateLocked(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V
    .locals 44
    .param p1, "info"    # Landroid/bluetooth/BluetoothActivityEnergyInfo;

    #@0
    .prologue
    .line 8734
    if-eqz p1, :cond_0

    #@2
    move-object/from16 v0, p0

    #@4
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@6
    if-eqz v3, :cond_0

    #@8
    .line 8738
    const/4 v3, 0x1

    #@9
    move-object/from16 v0, p0

    #@b
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@d
    .line 8740
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    #@10
    move-result-wide v10

    #@11
    .line 8741
    .local v10, "elapsedRealtimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerRxTimeMillis()J

    #@14
    move-result-wide v22

    #@15
    .line 8742
    .local v22, "rxTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerTxTimeMillis()J

    #@18
    move-result-wide v40

    #@19
    .line 8751
    .local v40, "txTimeMs":J
    const-wide/16 v36, 0x0

    #@1b
    .line 8753
    .local v36, "totalScanTimeMs":J
    move-object/from16 v0, p0

    #@1d
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@1f
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@22
    move-result v42

    #@23
    .line 8754
    .local v42, "uidCount":I
    const/4 v9, 0x0

    #@24
    .local v9, "i":I
    :goto_0
    move/from16 v0, v42

    #@26
    if-ge v9, v0, :cond_2

    #@28
    .line 8755
    move-object/from16 v0, p0

    #@2a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@2c
    invoke-virtual {v3, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@2f
    move-result-object v2

    #@30
    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@32
    .line 8756
    .local v2, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@34
    if-nez v3, :cond_1

    #@36
    .line 8754
    :goto_1
    add-int/lit8 v9, v9, 0x1

    #@38
    goto :goto_0

    #@39
    .line 8735
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v9    # "i":I
    .end local v10    # "elapsedRealtimeMs":J
    .end local v22    # "rxTimeMs":J
    .end local v36    # "totalScanTimeMs":J
    .end local v40    # "txTimeMs":J
    .end local v42    # "uidCount":I
    :cond_0
    return-void

    #@3a
    .line 8760
    .restart local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v9    # "i":I
    .restart local v10    # "elapsedRealtimeMs":J
    .restart local v22    # "rxTimeMs":J
    .restart local v36    # "totalScanTimeMs":J
    .restart local v40    # "txTimeMs":J
    .restart local v42    # "uidCount":I
    :cond_1
    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3c
    .line 8761
    const-wide/16 v4, 0x3e8

    #@3e
    mul-long/2addr v4, v10

    #@3f
    .line 8760
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    #@42
    move-result-wide v4

    #@43
    .line 8761
    const-wide/16 v6, 0x3e8

    #@45
    .line 8760
    div-long/2addr v4, v6

    #@46
    add-long v36, v36, v4

    #@48
    goto :goto_1

    #@49
    .line 8764
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_2
    cmp-long v3, v36, v22

    #@4b
    if-lez v3, :cond_4

    #@4d
    const/16 v16, 0x1

    #@4f
    .line 8765
    .local v16, "normalizeScanRxTime":Z
    :goto_2
    cmp-long v3, v36, v40

    #@51
    if-lez v3, :cond_5

    #@53
    const/16 v17, 0x1

    #@55
    .line 8772
    .local v17, "normalizeScanTxTime":Z
    :goto_3
    move-wide/from16 v12, v22

    #@57
    .line 8773
    .local v12, "leftOverRxTimeMs":J
    move-wide/from16 v14, v40

    #@59
    .line 8775
    .local v14, "leftOverTxTimeMs":J
    const/4 v9, 0x0

    #@5a
    :goto_4
    move/from16 v0, v42

    #@5c
    if-ge v9, v0, :cond_9

    #@5e
    .line 8776
    move-object/from16 v0, p0

    #@60
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@62
    invoke-virtual {v3, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@65
    move-result-object v2

    #@66
    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@68
    .line 8777
    .restart local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6a
    if-nez v3, :cond_6

    #@6c
    .line 8775
    :cond_3
    :goto_5
    add-int/lit8 v9, v9, 0x1

    #@6e
    goto :goto_4

    #@6f
    .line 8764
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v12    # "leftOverRxTimeMs":J
    .end local v14    # "leftOverTxTimeMs":J
    .end local v16    # "normalizeScanRxTime":Z
    .end local v17    # "normalizeScanTxTime":Z
    :cond_4
    const/16 v16, 0x0

    #@71
    .restart local v16    # "normalizeScanRxTime":Z
    goto :goto_2

    #@72
    .line 8765
    :cond_5
    const/16 v17, 0x0

    #@74
    .restart local v17    # "normalizeScanTxTime":Z
    goto :goto_3

    #@75
    .line 8781
    .restart local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v12    # "leftOverRxTimeMs":J
    .restart local v14    # "leftOverTxTimeMs":J
    :cond_6
    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@77
    .line 8782
    const-wide/16 v4, 0x3e8

    #@79
    mul-long/2addr v4, v10

    #@7a
    .line 8781
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    #@7d
    move-result-wide v4

    #@7e
    .line 8782
    const-wide/16 v6, 0x3e8

    #@80
    .line 8781
    div-long v26, v4, v6

    #@82
    .line 8783
    .local v26, "scanTimeSinceMarkMs":J
    const-wide/16 v4, 0x0

    #@84
    cmp-long v3, v26, v4

    #@86
    if-lez v3, :cond_3

    #@88
    .line 8785
    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@8a
    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    #@8d
    .line 8787
    move-wide/from16 v24, v26

    #@8f
    .line 8788
    .local v24, "scanTimeRxSinceMarkMs":J
    move-wide/from16 v28, v26

    #@91
    .line 8790
    .local v28, "scanTimeTxSinceMarkMs":J
    if-eqz v16, :cond_7

    #@93
    .line 8794
    mul-long v4, v22, v26

    #@95
    div-long v24, v4, v36

    #@97
    .line 8797
    :cond_7
    if-eqz v17, :cond_8

    #@99
    .line 8801
    mul-long v4, v40, v26

    #@9b
    div-long v28, v4, v36

    #@9d
    .line 8805
    :cond_8
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@a0
    move-result-object v8

    #@a1
    .line 8806
    .local v8, "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@a4
    move-result-object v3

    #@a5
    move-wide/from16 v0, v24

    #@a7
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@aa
    .line 8807
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@ad
    move-result-object v3

    #@ae
    const/4 v4, 0x0

    #@af
    aget-object v3, v3, v4

    #@b1
    move-wide/from16 v0, v28

    #@b3
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@b6
    .line 8809
    sub-long v12, v12, v24

    #@b8
    .line 8810
    sub-long v14, v14, v28

    #@ba
    goto :goto_5

    #@bb
    .line 8823
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v8    # "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v24    # "scanTimeRxSinceMarkMs":J
    .end local v26    # "scanTimeSinceMarkMs":J
    .end local v28    # "scanTimeTxSinceMarkMs":J
    :cond_9
    const-wide/16 v38, 0x0

    #@bd
    .line 8824
    .local v38, "totalTxBytes":J
    const-wide/16 v34, 0x0

    #@bf
    .line 8826
    .local v34, "totalRxBytes":J
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getUidTraffic()[Landroid/bluetooth/UidTraffic;

    #@c2
    move-result-object v43

    #@c3
    .line 8827
    .local v43, "uidTraffic":[Landroid/bluetooth/UidTraffic;
    if-eqz v43, :cond_a

    #@c5
    move-object/from16 v0, v43

    #@c7
    array-length v0, v0

    #@c8
    move/from16 v18, v0

    #@ca
    .line 8828
    .local v18, "numUids":I
    :goto_6
    const/4 v9, 0x0

    #@cb
    :goto_7
    move/from16 v0, v18

    #@cd
    if-ge v9, v0, :cond_b

    #@cf
    .line 8829
    aget-object v19, v43, v9

    #@d1
    .line 8832
    .local v19, "traffic":Landroid/bluetooth/UidTraffic;
    move-object/from16 v0, p0

    #@d3
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@d5
    const/4 v4, 0x4

    #@d6
    aget-object v3, v3, v4

    #@d8
    .line 8833
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    #@db
    move-result-wide v4

    #@dc
    .line 8832
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@df
    .line 8834
    move-object/from16 v0, p0

    #@e1
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@e3
    const/4 v4, 0x5

    #@e4
    aget-object v3, v3, v4

    #@e6
    .line 8835
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    #@e9
    move-result-wide v4

    #@ea
    .line 8834
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@ed
    .line 8838
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getUid()I

    #@f0
    move-result v3

    #@f1
    move-object/from16 v0, p0

    #@f3
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@f6
    move-result v3

    #@f7
    move-object/from16 v0, p0

    #@f9
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@fc
    move-result-object v2

    #@fd
    .line 8839
    .restart local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    #@100
    move-result-wide v4

    #@101
    const-wide/16 v6, 0x0

    #@103
    const/4 v3, 0x4

    #@104
    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    #@107
    .line 8840
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    #@10a
    move-result-wide v4

    #@10b
    const-wide/16 v6, 0x0

    #@10d
    const/4 v3, 0x5

    #@10e
    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    #@111
    .line 8843
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    #@114
    move-result-wide v4

    #@115
    add-long v38, v38, v4

    #@117
    .line 8844
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    #@11a
    move-result-wide v4

    #@11b
    add-long v34, v34, v4

    #@11d
    .line 8828
    add-int/lit8 v9, v9, 0x1

    #@11f
    goto :goto_7

    #@120
    .line 8827
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v18    # "numUids":I
    .end local v19    # "traffic":Landroid/bluetooth/UidTraffic;
    :cond_a
    const/16 v18, 0x0

    #@122
    .restart local v18    # "numUids":I
    goto :goto_6

    #@123
    .line 8847
    :cond_b
    const-wide/16 v4, 0x0

    #@125
    cmp-long v3, v38, v4

    #@127
    if-nez v3, :cond_c

    #@129
    const-wide/16 v4, 0x0

    #@12b
    cmp-long v3, v34, v4

    #@12d
    if-eqz v3, :cond_10

    #@12f
    .line 8848
    :cond_c
    const-wide/16 v4, 0x0

    #@131
    cmp-long v3, v12, v4

    #@133
    if-nez v3, :cond_d

    #@135
    const-wide/16 v4, 0x0

    #@137
    cmp-long v3, v14, v4

    #@139
    if-eqz v3, :cond_10

    #@13b
    .line 8849
    :cond_d
    const/4 v9, 0x0

    #@13c
    :goto_8
    move/from16 v0, v18

    #@13e
    if-ge v9, v0, :cond_10

    #@140
    .line 8850
    aget-object v19, v43, v9

    #@142
    .line 8852
    .restart local v19    # "traffic":Landroid/bluetooth/UidTraffic;
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getUid()I

    #@145
    move-result v3

    #@146
    move-object/from16 v0, p0

    #@148
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@14b
    move-result v3

    #@14c
    move-object/from16 v0, p0

    #@14e
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@151
    move-result-object v2

    #@152
    .line 8854
    .restart local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@155
    move-result-object v8

    #@156
    .line 8856
    .restart local v8    # "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    const-wide/16 v4, 0x0

    #@158
    cmp-long v3, v34, v4

    #@15a
    if-lez v3, :cond_e

    #@15c
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    #@15f
    move-result-wide v4

    #@160
    const-wide/16 v6, 0x0

    #@162
    cmp-long v3, v4, v6

    #@164
    if-lez v3, :cond_e

    #@166
    .line 8857
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    #@169
    move-result-wide v4

    #@16a
    mul-long/2addr v4, v12

    #@16b
    div-long v30, v4, v34

    #@16d
    .line 8863
    .local v30, "timeRxMs":J
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@170
    move-result-object v3

    #@171
    move-wide/from16 v0, v30

    #@173
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@176
    .line 8864
    sub-long v12, v12, v30

    #@178
    .line 8867
    .end local v30    # "timeRxMs":J
    :cond_e
    const-wide/16 v4, 0x0

    #@17a
    cmp-long v3, v38, v4

    #@17c
    if-lez v3, :cond_f

    #@17e
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    #@181
    move-result-wide v4

    #@182
    const-wide/16 v6, 0x0

    #@184
    cmp-long v3, v4, v6

    #@186
    if-lez v3, :cond_f

    #@188
    .line 8868
    invoke-virtual/range {v19 .. v19}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    #@18b
    move-result-wide v4

    #@18c
    mul-long/2addr v4, v14

    #@18d
    div-long v32, v4, v38

    #@18f
    .line 8875
    .local v32, "timeTxMs":J
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@192
    move-result-object v3

    #@193
    const/4 v4, 0x0

    #@194
    aget-object v3, v3, v4

    #@196
    move-wide/from16 v0, v32

    #@198
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@19b
    .line 8876
    sub-long v14, v14, v32

    #@19d
    .line 8849
    .end local v32    # "timeTxMs":J
    :cond_f
    add-int/lit8 v9, v9, 0x1

    #@19f
    goto :goto_8

    #@1a0
    .line 8881
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v8    # "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v19    # "traffic":Landroid/bluetooth/UidTraffic;
    :cond_10
    move-object/from16 v0, p0

    #@1a2
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1a4
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1a7
    move-result-object v3

    #@1a8
    .line 8882
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerRxTimeMillis()J

    #@1ab
    move-result-wide v4

    #@1ac
    .line 8881
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1af
    .line 8883
    move-object/from16 v0, p0

    #@1b1
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1b3
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1b6
    move-result-object v3

    #@1b7
    const/4 v4, 0x0

    #@1b8
    aget-object v3, v3, v4

    #@1ba
    .line 8884
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerTxTimeMillis()J

    #@1bd
    move-result-wide v4

    #@1be
    .line 8883
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1c1
    .line 8885
    move-object/from16 v0, p0

    #@1c3
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1c5
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1c8
    move-result-object v3

    #@1c9
    .line 8886
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerIdleTimeMillis()J

    #@1cc
    move-result-wide v4

    #@1cd
    .line 8885
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1d0
    .line 8889
    move-object/from16 v0, p0

    #@1d2
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@1d4
    .line 8890
    const-string/jumbo v4, "bluetooth.controller.voltage"

    #@1d7
    .line 8889
    invoke-virtual {v3, v4}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    #@1da
    move-result-wide v4

    #@1db
    .line 8890
    const-wide v6, 0x408f400000000000L    # 1000.0

    #@1e0
    .line 8889
    div-double v20, v4, v6

    #@1e2
    .line 8891
    .local v20, "opVolt":D
    const-wide/16 v4, 0x0

    #@1e4
    cmpl-double v3, v20, v4

    #@1e6
    if-eqz v3, :cond_11

    #@1e8
    .line 8893
    move-object/from16 v0, p0

    #@1ea
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1ec
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1ef
    move-result-object v3

    #@1f0
    .line 8894
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerEnergyUsed()J

    #@1f3
    move-result-wide v4

    #@1f4
    long-to-double v4, v4

    #@1f5
    div-double v4, v4, v20

    #@1f7
    double-to-long v4, v4

    #@1f8
    .line 8893
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1fb
    .line 8729
    :cond_11
    return-void
.end method

.method public updateCpuTimeLocked()V
    .locals 24

    #@0
    .prologue
    .line 8959
    move-object/from16 v0, p0

    #@2
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@4
    move-object/from16 v19, v0

    #@6
    if-nez v19, :cond_0

    #@8
    .line 8960
    return-void

    #@9
    .line 8971
    :cond_0
    const/16 v18, 0x32

    #@b
    .line 8974
    .local v18, "wakelockWeight":I
    move-object/from16 v0, p0

    #@d
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    #@f
    move-object/from16 v19, v0

    #@11
    move-object/from16 v0, v19

    #@13
    array-length v0, v0

    #@14
    move/from16 v19, v0

    #@16
    move/from16 v0, v19

    #@18
    new-array v5, v0, [[J

    #@1a
    .line 8975
    .local v5, "clusterSpeeds":[[J
    const/4 v4, 0x0

    #@1b
    .local v4, "cluster":I
    :goto_0
    move-object/from16 v0, p0

    #@1d
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    #@1f
    move-object/from16 v19, v0

    #@21
    move-object/from16 v0, v19

    #@23
    array-length v0, v0

    #@24
    move/from16 v19, v0

    #@26
    move/from16 v0, v19

    #@28
    if-ge v4, v0, :cond_1

    #@2a
    .line 8976
    move-object/from16 v0, p0

    #@2c
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    #@2e
    move-object/from16 v19, v0

    #@30
    aget-object v19, v19, v4

    #@32
    invoke-virtual/range {v19 .. v19}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    #@35
    move-result-object v19

    #@36
    aput-object v19, v5, v4

    #@38
    .line 8975
    add-int/lit8 v4, v4, 0x1

    #@3a
    goto :goto_0

    #@3b
    .line 8979
    :cond_1
    const/4 v9, 0x0

    #@3c
    .line 8983
    .local v9, "numWakelocks":I
    move-object/from16 v0, p0

    #@3e
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@40
    move-object/from16 v19, v0

    #@42
    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I

    #@45
    move-result v8

    #@46
    .line 8984
    .local v8, "numPartialTimers":I
    move-object/from16 v0, p0

    #@48
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@4a
    move-object/from16 v19, v0

    #@4c
    invoke-virtual/range {v19 .. v19}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    #@4f
    move-result v19

    #@50
    if-eqz v19, :cond_3

    #@52
    .line 8985
    const/4 v6, 0x0

    #@53
    .local v6, "i":I
    :goto_1
    if-ge v6, v8, :cond_3

    #@55
    .line 8986
    move-object/from16 v0, p0

    #@57
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@59
    move-object/from16 v19, v0

    #@5b
    move-object/from16 v0, v19

    #@5d
    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@60
    move-result-object v15

    #@61
    check-cast v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@63
    .line 8987
    .local v15, "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    iget-boolean v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    #@65
    move/from16 v19, v0

    #@67
    if-eqz v19, :cond_2

    #@69
    iget-object v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@6b
    move-object/from16 v19, v0

    #@6d
    if-eqz v19, :cond_2

    #@6f
    iget-object v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@71
    move-object/from16 v19, v0

    #@73
    move-object/from16 v0, v19

    #@75
    iget v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    #@77
    move/from16 v19, v0

    #@79
    const/16 v20, 0x3e8

    #@7b
    move/from16 v0, v19

    #@7d
    move/from16 v1, v20

    #@7f
    if-eq v0, v1, :cond_2

    #@81
    .line 8993
    add-int/lit8 v9, v9, 0x1

    #@83
    .line 8985
    :cond_2
    add-int/lit8 v6, v6, 0x1

    #@85
    goto :goto_1

    #@86
    .line 8998
    .end local v6    # "i":I
    .end local v15    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    :cond_3
    move v10, v9

    #@87
    .line 8999
    .local v10, "numWakelocksF":I
    const-wide/16 v20, 0x0

    #@89
    move-wide/from16 v0, v20

    #@8b
    move-object/from16 v2, p0

    #@8d
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@8f
    .line 9000
    const-wide/16 v20, 0x0

    #@91
    move-wide/from16 v0, v20

    #@93
    move-object/from16 v2, p0

    #@95
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@97
    .line 9005
    move-object/from16 v0, p0

    #@99
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@9b
    move-object/from16 v19, v0

    #@9d
    invoke-interface/range {v19 .. v19}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@a0
    move-result-wide v12

    #@a1
    .line 9006
    .local v12, "startTimeMs":J
    move-object/from16 v0, p0

    #@a3
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    #@a5
    move-object/from16 v20, v0

    #@a7
    move-object/from16 v0, p0

    #@a9
    iget-boolean v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@ab
    move/from16 v19, v0

    #@ad
    if-nez v19, :cond_5

    #@af
    const/16 v19, 0x0

    #@b1
    :goto_2
    move-object/from16 v0, v20

    #@b3
    move-object/from16 v1, v19

    #@b5
    invoke-virtual {v0, v1}, Lcom/android/internal/os/KernelUidCpuTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReader$Callback;)V

    #@b8
    .line 9081
    move-object/from16 v0, p0

    #@ba
    iget-boolean v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@bc
    move/from16 v19, v0

    #@be
    if-eqz v19, :cond_8

    #@c0
    if-lez v9, :cond_8

    #@c2
    .line 9083
    move-object/from16 v0, p0

    #@c4
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@c6
    move-wide/from16 v20, v0

    #@c8
    const-wide/16 v22, 0x32

    #@ca
    mul-long v20, v20, v22

    #@cc
    const-wide/16 v22, 0x64

    #@ce
    div-long v20, v20, v22

    #@d0
    move-wide/from16 v0, v20

    #@d2
    move-object/from16 v2, p0

    #@d4
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@d6
    .line 9085
    move-object/from16 v0, p0

    #@d8
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@da
    move-wide/from16 v20, v0

    #@dc
    const-wide/16 v22, 0x32

    #@de
    mul-long v20, v20, v22

    #@e0
    const-wide/16 v22, 0x64

    #@e2
    div-long v20, v20, v22

    #@e4
    .line 9084
    move-wide/from16 v0, v20

    #@e6
    move-object/from16 v2, p0

    #@e8
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@ea
    .line 9087
    const/4 v6, 0x0

    #@eb
    .restart local v6    # "i":I
    :goto_3
    if-ge v6, v8, :cond_6

    #@ed
    .line 9088
    move-object/from16 v0, p0

    #@ef
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@f1
    move-object/from16 v19, v0

    #@f3
    move-object/from16 v0, v19

    #@f5
    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@f8
    move-result-object v15

    #@f9
    check-cast v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@fb
    .line 9092
    .restart local v15    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    iget-boolean v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    #@fd
    move/from16 v19, v0

    #@ff
    if-eqz v19, :cond_4

    #@101
    iget-object v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@103
    move-object/from16 v19, v0

    #@105
    if-eqz v19, :cond_4

    #@107
    iget-object v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@109
    move-object/from16 v19, v0

    #@10b
    move-object/from16 v0, v19

    #@10d
    iget v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    #@10f
    move/from16 v19, v0

    #@111
    const/16 v20, 0x3e8

    #@113
    move/from16 v0, v19

    #@115
    move/from16 v1, v20

    #@117
    if-eq v0, v1, :cond_4

    #@119
    .line 9093
    move-object/from16 v0, p0

    #@11b
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@11d
    move-wide/from16 v20, v0

    #@11f
    int-to-long v0, v9

    #@120
    move-wide/from16 v22, v0

    #@122
    div-long v20, v20, v22

    #@124
    move-wide/from16 v0, v20

    #@126
    long-to-int v0, v0

    #@127
    move/from16 v17, v0

    #@129
    .line 9094
    .local v17, "userTimeUs":I
    move-object/from16 v0, p0

    #@12b
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@12d
    move-wide/from16 v20, v0

    #@12f
    int-to-long v0, v9

    #@130
    move-wide/from16 v22, v0

    #@132
    div-long v20, v20, v22

    #@134
    move-wide/from16 v0, v20

    #@136
    long-to-int v14, v0

    #@137
    .line 9106
    .local v14, "systemTimeUs":I
    iget-object v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@139
    move-object/from16 v19, v0

    #@13b
    move-object/from16 v0, v19

    #@13d
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@13f
    move-object/from16 v19, v0

    #@141
    move/from16 v0, v17

    #@143
    int-to-long v0, v0

    #@144
    move-wide/from16 v20, v0

    #@146
    invoke-virtual/range {v19 .. v21}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@149
    .line 9107
    iget-object v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@14b
    move-object/from16 v19, v0

    #@14d
    move-object/from16 v0, v19

    #@14f
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@151
    move-object/from16 v19, v0

    #@153
    int-to-long v0, v14

    #@154
    move-wide/from16 v20, v0

    #@156
    invoke-virtual/range {v19 .. v21}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@159
    .line 9109
    iget-object v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@15b
    move-object/from16 v19, v0

    #@15d
    const-string/jumbo v20, "*wakelock*"

    #@160
    invoke-virtual/range {v19 .. v20}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    #@163
    move-result-object v11

    #@164
    .line 9110
    .local v11, "proc":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    move/from16 v0, v17

    #@166
    div-int/lit16 v0, v0, 0x3e8

    #@168
    move/from16 v19, v0

    #@16a
    div-int/lit16 v0, v14, 0x3e8

    #@16c
    move/from16 v20, v0

    #@16e
    move/from16 v0, v19

    #@170
    move/from16 v1, v20

    #@172
    invoke-virtual {v11, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    #@175
    .line 9112
    move-object/from16 v0, p0

    #@177
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@179
    move-wide/from16 v20, v0

    #@17b
    move/from16 v0, v17

    #@17d
    int-to-long v0, v0

    #@17e
    move-wide/from16 v22, v0

    #@180
    sub-long v20, v20, v22

    #@182
    move-wide/from16 v0, v20

    #@184
    move-object/from16 v2, p0

    #@186
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@188
    .line 9113
    move-object/from16 v0, p0

    #@18a
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@18c
    move-wide/from16 v20, v0

    #@18e
    int-to-long v0, v14

    #@18f
    move-wide/from16 v22, v0

    #@191
    sub-long v20, v20, v22

    #@193
    move-wide/from16 v0, v20

    #@195
    move-object/from16 v2, p0

    #@197
    iput-wide v0, v2, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@199
    .line 9114
    add-int/lit8 v9, v9, -0x1

    #@19b
    .line 9087
    .end local v11    # "proc":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v14    # "systemTimeUs":I
    .end local v17    # "userTimeUs":I
    :cond_4
    add-int/lit8 v6, v6, 0x1

    #@19d
    goto/16 :goto_3

    #@19f
    .line 9007
    .end local v6    # "i":I
    .end local v15    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    :cond_5
    new-instance v19, Lcom/android/internal/os/BatteryStatsImpl$3;

    #@1a1
    move-object/from16 v0, v19

    #@1a3
    move-object/from16 v1, p0

    #@1a5
    invoke-direct {v0, v1, v10, v5}, Lcom/android/internal/os/BatteryStatsImpl$3;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I[[J)V

    #@1a8
    goto/16 :goto_2

    #@1aa
    .line 9118
    .restart local v6    # "i":I
    :cond_6
    move-object/from16 v0, p0

    #@1ac
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@1ae
    move-wide/from16 v20, v0

    #@1b0
    const-wide/16 v22, 0x0

    #@1b2
    cmp-long v19, v20, v22

    #@1b4
    if-gtz v19, :cond_7

    #@1b6
    move-object/from16 v0, p0

    #@1b8
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@1ba
    move-wide/from16 v20, v0

    #@1bc
    const-wide/16 v22, 0x0

    #@1be
    cmp-long v19, v20, v22

    #@1c0
    if-lez v19, :cond_8

    #@1c2
    .line 9129
    :cond_7
    const/16 v19, 0x3e8

    #@1c4
    move-object/from16 v0, p0

    #@1c6
    move/from16 v1, v19

    #@1c8
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@1cb
    move-result-object v16

    #@1cc
    .line 9130
    .local v16, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v0, v16

    #@1ce
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1d0
    move-object/from16 v19, v0

    #@1d2
    move-object/from16 v0, p0

    #@1d4
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@1d6
    move-wide/from16 v20, v0

    #@1d8
    invoke-virtual/range {v19 .. v21}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1db
    .line 9131
    move-object/from16 v0, v16

    #@1dd
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1df
    move-object/from16 v19, v0

    #@1e1
    move-object/from16 v0, p0

    #@1e3
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@1e5
    move-wide/from16 v20, v0

    #@1e7
    invoke-virtual/range {v19 .. v21}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1ea
    .line 9133
    const-string/jumbo v19, "*lost*"

    #@1ed
    move-object/from16 v0, v16

    #@1ef
    move-object/from16 v1, v19

    #@1f1
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    #@1f4
    move-result-object v11

    #@1f5
    .line 9134
    .restart local v11    # "proc":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    move-object/from16 v0, p0

    #@1f7
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    #@1f9
    move-wide/from16 v20, v0

    #@1fb
    move-wide/from16 v0, v20

    #@1fd
    long-to-int v0, v0

    #@1fe
    move/from16 v19, v0

    #@200
    move/from16 v0, v19

    #@202
    div-int/lit16 v0, v0, 0x3e8

    #@204
    move/from16 v19, v0

    #@206
    .line 9135
    move-object/from16 v0, p0

    #@208
    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    #@20a
    move-wide/from16 v20, v0

    #@20c
    move-wide/from16 v0, v20

    #@20e
    long-to-int v0, v0

    #@20f
    move/from16 v20, v0

    #@211
    move/from16 v0, v20

    #@213
    div-int/lit16 v0, v0, 0x3e8

    #@215
    move/from16 v20, v0

    #@217
    .line 9134
    move/from16 v0, v19

    #@219
    move/from16 v1, v20

    #@21b
    invoke-virtual {v11, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    #@21e
    .line 9141
    .end local v6    # "i":I
    .end local v11    # "proc":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v16    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_8
    move-object/from16 v0, p0

    #@220
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@222
    move-object/from16 v19, v0

    #@224
    move-object/from16 v0, p0

    #@226
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    #@228
    move-object/from16 v20, v0

    #@22a
    invoke-static/range {v19 .. v20}, Lcom/android/internal/util/ArrayUtils;->referenceEquals(Ljava/util/ArrayList;Ljava/util/ArrayList;)Z

    #@22d
    move-result v19

    #@22e
    if-eqz v19, :cond_9

    #@230
    .line 9143
    const/4 v6, 0x0

    #@231
    .restart local v6    # "i":I
    :goto_4
    if-ge v6, v8, :cond_b

    #@233
    .line 9144
    move-object/from16 v0, p0

    #@235
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@237
    move-object/from16 v19, v0

    #@239
    move-object/from16 v0, v19

    #@23b
    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@23e
    move-result-object v19

    #@23f
    check-cast v19, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@241
    const/16 v20, 0x1

    #@243
    move/from16 v0, v20

    #@245
    move-object/from16 v1, v19

    #@247
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    #@249
    .line 9143
    add-int/lit8 v6, v6, 0x1

    #@24b
    goto :goto_4

    #@24c
    .line 9149
    .end local v6    # "i":I
    :cond_9
    move-object/from16 v0, p0

    #@24e
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    #@250
    move-object/from16 v19, v0

    #@252
    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I

    #@255
    move-result v7

    #@256
    .line 9150
    .local v7, "numLastPartialTimers":I
    const/4 v6, 0x0

    #@257
    .restart local v6    # "i":I
    :goto_5
    if-ge v6, v7, :cond_a

    #@259
    .line 9151
    move-object/from16 v0, p0

    #@25b
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    #@25d
    move-object/from16 v19, v0

    #@25f
    move-object/from16 v0, v19

    #@261
    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@264
    move-result-object v19

    #@265
    check-cast v19, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@267
    const/16 v20, 0x0

    #@269
    move/from16 v0, v20

    #@26b
    move-object/from16 v1, v19

    #@26d
    iput-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    #@26f
    .line 9150
    add-int/lit8 v6, v6, 0x1

    #@271
    goto :goto_5

    #@272
    .line 9153
    :cond_a
    move-object/from16 v0, p0

    #@274
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    #@276
    move-object/from16 v19, v0

    #@278
    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->clear()V

    #@27b
    .line 9156
    const/4 v6, 0x0

    #@27c
    :goto_6
    if-ge v6, v8, :cond_b

    #@27e
    .line 9157
    move-object/from16 v0, p0

    #@280
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    #@282
    move-object/from16 v19, v0

    #@284
    move-object/from16 v0, v19

    #@286
    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@289
    move-result-object v15

    #@28a
    check-cast v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@28c
    .line 9158
    .restart local v15    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    const/16 v19, 0x1

    #@28e
    move/from16 v0, v19

    #@290
    iput-boolean v0, v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    #@292
    .line 9159
    move-object/from16 v0, p0

    #@294
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    #@296
    move-object/from16 v19, v0

    #@298
    move-object/from16 v0, v19

    #@29a
    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    #@29d
    .line 9156
    add-int/lit8 v6, v6, 0x1

    #@29f
    goto :goto_6

    #@2a0
    .line 8958
    .end local v7    # "numLastPartialTimers":I
    .end local v15    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    :cond_b
    return-void
.end method

.method public updateDailyDeadlineLocked()V
    .locals 7

    #@0
    .prologue
    const/16 v6, 0xb

    #@2
    const/4 v5, 0x6

    #@3
    const/4 v4, 0x0

    #@4
    .line 7655
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    #@7
    move-result-wide v2

    #@8
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@a
    .line 7656
    .local v2, "currentTime":J
    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    #@d
    move-result-object v0

    #@e
    .line 7657
    .local v0, "calDeadline":Ljava/util/Calendar;
    invoke-virtual {v0, v2, v3}, Ljava/util/Calendar;->setTimeInMillis(J)V

    #@11
    .line 7660
    invoke-virtual {v0, v5}, Ljava/util/Calendar;->get(I)I

    #@14
    move-result v1

    #@15
    add-int/lit8 v1, v1, 0x1

    #@17
    invoke-virtual {v0, v5, v1}, Ljava/util/Calendar;->set(II)V

    #@1a
    .line 7661
    const/16 v1, 0xe

    #@1c
    invoke-virtual {v0, v1, v4}, Ljava/util/Calendar;->set(II)V

    #@1f
    .line 7662
    const/16 v1, 0xd

    #@21
    invoke-virtual {v0, v1, v4}, Ljava/util/Calendar;->set(II)V

    #@24
    .line 7663
    const/16 v1, 0xc

    #@26
    invoke-virtual {v0, v1, v4}, Ljava/util/Calendar;->set(II)V

    #@29
    .line 7664
    const/4 v1, 0x1

    #@2a
    invoke-virtual {v0, v6, v1}, Ljava/util/Calendar;->set(II)V

    #@2d
    .line 7665
    invoke-virtual {v0}, Ljava/util/Calendar;->getTimeInMillis()J

    #@30
    move-result-wide v4

    #@31
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    #@33
    .line 7666
    const/4 v1, 0x3

    #@34
    invoke-virtual {v0, v6, v1}, Ljava/util/Calendar;->set(II)V

    #@37
    .line 7667
    invoke-virtual {v0}, Ljava/util/Calendar;->getTimeInMillis()J

    #@3a
    move-result-wide v4

    #@3b
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    #@3d
    .line 7653
    return-void
.end method

.method updateDischargeScreenLevelsLocked(ZZ)V
    .locals 4
    .param p1, "oldScreenOn"    # Z
    .param p2, "newScreenOn"    # Z

    #@0
    .prologue
    const/4 v3, 0x0

    #@1
    .line 8301
    if-eqz p1, :cond_1

    #@3
    .line 8302
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@5
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@7
    sub-int v0, v1, v2

    #@9
    .line 8303
    .local v0, "diff":I
    if-lez v0, :cond_0

    #@b
    .line 8304
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    #@d
    add-int/2addr v1, v0

    #@e
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    #@10
    .line 8305
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    #@12
    add-int/2addr v1, v0

    #@13
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    #@15
    .line 8314
    :cond_0
    :goto_0
    if-eqz p2, :cond_2

    #@17
    .line 8315
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@19
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@1b
    .line 8316
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@1d
    .line 8300
    :goto_1
    return-void

    #@1e
    .line 8308
    .end local v0    # "diff":I
    :cond_1
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@20
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@22
    sub-int v0, v1, v2

    #@24
    .line 8309
    .restart local v0    # "diff":I
    if-lez v0, :cond_0

    #@26
    .line 8310
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    #@28
    add-int/2addr v1, v0

    #@29
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    #@2b
    .line 8311
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    #@2d
    add-int/2addr v1, v0

    #@2e
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    #@30
    goto :goto_0

    #@31
    .line 8318
    :cond_2
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    #@33
    .line 8319
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@35
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    #@37
    goto :goto_1
.end method

.method public updateKernelWakelocksLocked()V
    .locals 12

    #@0
    .prologue
    .line 8902
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    #@2
    .line 8903
    iget-object v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    #@4
    .line 8902
    invoke-virtual {v9, v10}, Lcom/android/internal/os/KernelWakelockReader;->readKernelWakelockStats(Lcom/android/internal/os/KernelWakelockStats;)Lcom/android/internal/os/KernelWakelockStats;

    #@7
    move-result-object v8

    #@8
    .line 8904
    .local v8, "wakelockStats":Lcom/android/internal/os/KernelWakelockStats;
    if-nez v8, :cond_0

    #@a
    .line 8906
    const-string/jumbo v9, "BatteryStatsImpl"

    #@d
    const-string/jumbo v10, "Couldn\'t get kernel wake lock stats"

    #@10
    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@13
    .line 8907
    return-void

    #@14
    .line 8910
    :cond_0
    invoke-virtual {v8}, Lcom/android/internal/os/KernelWakelockStats;->entrySet()Ljava/util/Set;

    #@17
    move-result-object v9

    #@18
    invoke-interface {v9}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@1b
    move-result-object v2

    #@1c
    .local v2, "ent$iterator":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    #@1f
    move-result v9

    #@20
    if-eqz v9, :cond_2

    #@22
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@25
    move-result-object v1

    #@26
    check-cast v1, Ljava/util/Map$Entry;

    #@28
    .line 8911
    .local v1, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/KernelWakelockStats$Entry;>;"
    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@2b
    move-result-object v5

    #@2c
    check-cast v5, Ljava/lang/String;

    #@2e
    .line 8912
    .local v5, "name":Ljava/lang/String;
    invoke-interface {v1}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@31
    move-result-object v4

    #@32
    check-cast v4, Lcom/android/internal/os/KernelWakelockStats$Entry;

    #@34
    .line 8914
    .local v4, "kws":Lcom/android/internal/os/KernelWakelockStats$Entry;
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@36
    invoke-virtual {v9, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    #@39
    move-result-object v3

    #@3a
    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@3c
    .line 8915
    .local v3, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v3, :cond_1

    #@3e
    .line 8916
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@40
    .end local v3    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@42
    iget-object v10, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@44
    invoke-direct {v3, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    #@47
    .line 8917
    .restart local v3    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@49
    invoke-virtual {v9, v5, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    #@4c
    .line 8920
    :cond_1
    iget-wide v10, v4, Lcom/android/internal/os/KernelWakelockStats$Entry;->mTotalTime:J

    #@4e
    iget v9, v4, Lcom/android/internal/os/KernelWakelockStats$Entry;->mCount:I

    #@50
    invoke-virtual {v3, v10, v11, v9}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    #@53
    .line 8921
    iget v9, v4, Lcom/android/internal/os/KernelWakelockStats$Entry;->mVersion:I

    #@55
    invoke-virtual {v3, v9}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->setUpdateVersion(I)V

    #@58
    goto :goto_0

    #@59
    .line 8924
    .end local v1    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/KernelWakelockStats$Entry;>;"
    .end local v3    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .end local v4    # "kws":Lcom/android/internal/os/KernelWakelockStats$Entry;
    .end local v5    # "name":Ljava/lang/String;
    :cond_2
    const/4 v6, 0x0

    #@5a
    .line 8927
    .local v6, "numWakelocksSetStale":I
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@5c
    invoke-virtual {v9}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@5f
    move-result-object v9

    #@60
    invoke-interface {v9}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@63
    move-result-object v2

    #@64
    :cond_3
    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    #@67
    move-result v9

    #@68
    if-eqz v9, :cond_4

    #@6a
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@6d
    move-result-object v0

    #@6e
    check-cast v0, Ljava/util/Map$Entry;

    #@70
    .line 8928
    .local v0, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@73
    move-result-object v7

    #@74
    check-cast v7, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@76
    .line 8929
    .local v7, "st":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->getUpdateVersion()I

    #@79
    move-result v9

    #@7a
    iget v10, v8, Lcom/android/internal/os/KernelWakelockStats;->kernelWakelockVersion:I

    #@7c
    if-eq v9, v10, :cond_3

    #@7e
    .line 8930
    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->endSample()V

    #@81
    .line 8931
    add-int/lit8 v6, v6, 0x1

    #@83
    goto :goto_1

    #@84
    .line 8936
    .end local v0    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v7    # "st":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_4
    invoke-virtual {v8}, Lcom/android/internal/os/KernelWakelockStats;->isEmpty()Z

    #@87
    move-result v9

    #@88
    if-eqz v9, :cond_5

    #@8a
    .line 8937
    const-string/jumbo v9, "BatteryStatsImpl"

    #@8d
    const-string/jumbo v10, "All kernel wakelocks had time of zero"

    #@90
    invoke-static {v9, v10}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    #@93
    .line 8940
    :cond_5
    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@95
    invoke-virtual {v9}, Ljava/util/HashMap;->size()I

    #@98
    move-result v9

    #@99
    if-ne v6, v9, :cond_6

    #@9b
    .line 8941
    const-string/jumbo v9, "BatteryStatsImpl"

    #@9e
    new-instance v10, Ljava/lang/StringBuilder;

    #@a0
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    #@a3
    const-string/jumbo v11, "All kernel wakelocks were set stale. new version="

    #@a6
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    #@a9
    move-result-object v10

    #@aa
    .line 8942
    iget v11, v8, Lcom/android/internal/os/KernelWakelockStats;->kernelWakelockVersion:I

    #@ac
    .line 8941
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    #@af
    move-result-object v10

    #@b0
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    #@b3
    move-result-object v10

    #@b4
    invoke-static {v9, v10}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    #@b7
    .line 8901
    :cond_6
    return-void
.end method

.method public updateMobileRadioStateLocked(JLandroid/telephony/ModemActivityInfo;)V
    .locals 35
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    #@0
    .prologue
    .line 8606
    const/4 v9, 0x0

    #@1
    .line 8608
    .local v9, "delta":Landroid/net/NetworkStats;
    :try_start_0
    move-object/from16 v0, p0

    #@3
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@5
    invoke-static {v3}, Lcom/android/internal/util/ArrayUtils;->isEmpty([Ljava/lang/Object;)Z

    #@8
    move-result v3

    #@9
    if-nez v3, :cond_0

    #@b
    .line 8609
    move-object/from16 v0, p0

    #@d
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileIfaces:[Ljava/lang/String;

    #@f
    move-object/from16 v0, p0

    #@11
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileNetworkStats:[Landroid/net/NetworkStats;

    #@13
    move-object/from16 v0, p0

    #@15
    invoke-direct {v0, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkStatsDeltaLocked([Ljava/lang/String;[Landroid/net/NetworkStats;)Landroid/net/NetworkStats;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    #@18
    move-result-object v9

    #@19
    .line 8616
    .end local v9    # "delta":Landroid/net/NetworkStats;
    :cond_0
    move-object/from16 v0, p0

    #@1b
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@1d
    if-nez v3, :cond_1

    #@1f
    .line 8617
    return-void

    #@20
    .line 8611
    .restart local v9    # "delta":Landroid/net/NetworkStats;
    :catch_0
    move-exception v14

    #@21
    .line 8612
    .local v14, "e":Ljava/io/IOException;
    const-string/jumbo v3, "BatteryStatsImpl"

    #@24
    const-string/jumbo v4, "Failed to get mobile network stats"

    #@27
    invoke-static {v3, v4, v14}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@2a
    .line 8613
    return-void

    #@2b
    .line 8620
    .end local v9    # "delta":Landroid/net/NetworkStats;
    .end local v14    # "e":Ljava/io/IOException;
    :cond_1
    move-object/from16 v0, p0

    #@2d
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2f
    .line 8621
    const-wide/16 v4, 0x3e8

    #@31
    mul-long v4, v4, p1

    #@33
    .line 8620
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    #@36
    move-result-wide v20

    #@37
    .line 8622
    .local v20, "radioTime":J
    move-object/from16 v0, p0

    #@39
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3b
    move-wide/from16 v0, p1

    #@3d
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    #@40
    .line 8624
    const-wide/16 v28, 0x0

    #@42
    .line 8625
    .local v28, "totalRxPackets":J
    const-wide/16 v30, 0x0

    #@44
    .line 8626
    .local v30, "totalTxPackets":J
    if-eqz v9, :cond_8

    #@46
    .line 8627
    invoke-virtual {v9}, Landroid/net/NetworkStats;->size()I

    #@49
    move-result v24

    #@4a
    .line 8628
    .local v24, "size":I
    const/16 v16, 0x0

    #@4c
    .local v16, "i":I
    :goto_0
    move/from16 v0, v16

    #@4e
    move/from16 v1, v24

    #@50
    if-ge v0, v1, :cond_3

    #@52
    .line 8629
    move-object/from16 v0, p0

    #@54
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpNetworkStatsEntry:Landroid/net/NetworkStats$Entry;

    #@56
    move/from16 v0, v16

    #@58
    invoke-virtual {v9, v0, v3}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    #@5b
    move-result-object v15

    #@5c
    .line 8630
    .local v15, "entry":Landroid/net/NetworkStats$Entry;
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@5e
    const-wide/16 v6, 0x0

    #@60
    cmp-long v3, v4, v6

    #@62
    if-nez v3, :cond_2

    #@64
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@66
    const-wide/16 v6, 0x0

    #@68
    cmp-long v3, v4, v6

    #@6a
    if-nez v3, :cond_2

    #@6c
    .line 8628
    :goto_1
    add-int/lit8 v16, v16, 0x1

    #@6e
    goto :goto_0

    #@6f
    .line 8640
    :cond_2
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@71
    add-long v28, v28, v4

    #@73
    .line 8641
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@75
    add-long v30, v30, v4

    #@77
    .line 8643
    iget v3, v15, Landroid/net/NetworkStats$Entry;->uid:I

    #@79
    move-object/from16 v0, p0

    #@7b
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@7e
    move-result v3

    #@7f
    move-object/from16 v0, p0

    #@81
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@84
    move-result-object v2

    #@85
    .line 8644
    .local v2, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxBytes:J

    #@87
    iget-wide v6, v15, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@89
    const/4 v3, 0x0

    #@8a
    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    #@8d
    .line 8645
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->txBytes:J

    #@8f
    iget-wide v6, v15, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@91
    const/4 v3, 0x1

    #@92
    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    #@95
    .line 8647
    move-object/from16 v0, p0

    #@97
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@99
    const/4 v4, 0x0

    #@9a
    aget-object v3, v3, v4

    #@9c
    .line 8648
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxBytes:J

    #@9e
    .line 8647
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@a1
    .line 8649
    move-object/from16 v0, p0

    #@a3
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@a5
    const/4 v4, 0x1

    #@a6
    aget-object v3, v3, v4

    #@a8
    .line 8650
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->txBytes:J

    #@aa
    .line 8649
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@ad
    .line 8651
    move-object/from16 v0, p0

    #@af
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@b1
    const/4 v4, 0x0

    #@b2
    aget-object v3, v3, v4

    #@b4
    .line 8652
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@b6
    .line 8651
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@b9
    .line 8653
    move-object/from16 v0, p0

    #@bb
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@bd
    const/4 v4, 0x1

    #@be
    aget-object v3, v3, v4

    #@c0
    .line 8654
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@c2
    .line 8653
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@c5
    goto :goto_1

    #@c6
    .line 8658
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v15    # "entry":Landroid/net/NetworkStats$Entry;
    :cond_3
    add-long v26, v28, v30

    #@c8
    .line 8659
    .local v26, "totalPackets":J
    const-wide/16 v4, 0x0

    #@ca
    cmp-long v3, v26, v4

    #@cc
    if-lez v3, :cond_7

    #@ce
    .line 8660
    const/16 v16, 0x0

    #@d0
    :goto_2
    move/from16 v0, v16

    #@d2
    move/from16 v1, v24

    #@d4
    if-ge v0, v1, :cond_7

    #@d6
    .line 8661
    move-object/from16 v0, p0

    #@d8
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpNetworkStatsEntry:Landroid/net/NetworkStats$Entry;

    #@da
    move/from16 v0, v16

    #@dc
    invoke-virtual {v9, v0, v3}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    #@df
    move-result-object v15

    #@e0
    .line 8662
    .restart local v15    # "entry":Landroid/net/NetworkStats$Entry;
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@e2
    const-wide/16 v6, 0x0

    #@e4
    cmp-long v3, v4, v6

    #@e6
    if-nez v3, :cond_5

    #@e8
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@ea
    const-wide/16 v6, 0x0

    #@ec
    cmp-long v3, v4, v6

    #@ee
    if-nez v3, :cond_5

    #@f0
    .line 8660
    :cond_4
    add-int/lit8 v16, v16, 0x1

    #@f2
    goto :goto_2

    #@f3
    .line 8666
    :cond_5
    iget v3, v15, Landroid/net/NetworkStats$Entry;->uid:I

    #@f5
    move-object/from16 v0, p0

    #@f7
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@fa
    move-result v3

    #@fb
    move-object/from16 v0, p0

    #@fd
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@100
    move-result-object v2

    #@101
    .line 8669
    .restart local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@103
    iget-wide v6, v15, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@105
    add-long v10, v4, v6

    #@107
    .line 8670
    .local v10, "appPackets":J
    mul-long v4, v20, v10

    #@109
    div-long v12, v4, v26

    #@10b
    .line 8671
    .local v12, "appRadioTime":J
    invoke-virtual {v2, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteMobileRadioActiveTimeLocked(J)V

    #@10e
    .line 8675
    sub-long v20, v20, v12

    #@110
    .line 8676
    sub-long v26, v26, v10

    #@112
    .line 8678
    if-eqz p3, :cond_4

    #@114
    .line 8680
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateModemControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@117
    move-result-object v8

    #@118
    .line 8681
    .local v8, "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    const-wide/16 v4, 0x0

    #@11a
    cmp-long v3, v28, v4

    #@11c
    if-lez v3, :cond_6

    #@11e
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@120
    const-wide/16 v6, 0x0

    #@122
    cmp-long v3, v4, v6

    #@124
    if-lez v3, :cond_6

    #@126
    .line 8682
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@128
    invoke-virtual/range {p3 .. p3}, Landroid/telephony/ModemActivityInfo;->getRxTimeMillis()I

    #@12b
    move-result v3

    #@12c
    int-to-long v6, v3

    #@12d
    mul-long/2addr v4, v6

    #@12e
    div-long v22, v4, v28

    #@130
    .line 8684
    .local v22, "rxMs":J
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@133
    move-result-object v3

    #@134
    move-wide/from16 v0, v22

    #@136
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@139
    .line 8687
    .end local v22    # "rxMs":J
    :cond_6
    const-wide/16 v4, 0x0

    #@13b
    cmp-long v3, v30, v4

    #@13d
    if-lez v3, :cond_4

    #@13f
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@141
    const-wide/16 v6, 0x0

    #@143
    cmp-long v3, v4, v6

    #@145
    if-lez v3, :cond_4

    #@147
    .line 8688
    const/16 v17, 0x0

    #@149
    .local v17, "lvl":I
    :goto_3
    const/4 v3, 0x5

    #@14a
    move/from16 v0, v17

    #@14c
    if-ge v0, v3, :cond_4

    #@14e
    .line 8689
    iget-wide v4, v15, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@150
    invoke-virtual/range {p3 .. p3}, Landroid/telephony/ModemActivityInfo;->getTxTimeMillis()[I

    #@153
    move-result-object v3

    #@154
    aget v3, v3, v17

    #@156
    int-to-long v6, v3

    #@157
    mul-long v32, v4, v6

    #@159
    .line 8690
    .local v32, "txMs":J
    div-long v32, v32, v30

    #@15b
    .line 8691
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@15e
    move-result-object v3

    #@15f
    aget-object v3, v3, v17

    #@161
    move-wide/from16 v0, v32

    #@163
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@166
    .line 8688
    add-int/lit8 v17, v17, 0x1

    #@168
    goto :goto_3

    #@169
    .line 8698
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v8    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v10    # "appPackets":J
    .end local v12    # "appRadioTime":J
    .end local v15    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v17    # "lvl":I
    .end local v32    # "txMs":J
    :cond_7
    const-wide/16 v4, 0x0

    #@16b
    cmp-long v3, v20, v4

    #@16d
    if-lez v3, :cond_8

    #@16f
    .line 8700
    move-object/from16 v0, p0

    #@171
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@173
    move-wide/from16 v0, v20

    #@175
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@178
    .line 8701
    move-object/from16 v0, p0

    #@17a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@17c
    const-wide/16 v4, 0x1

    #@17e
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@181
    .line 8705
    .end local v16    # "i":I
    .end local v24    # "size":I
    .end local v26    # "totalPackets":J
    :cond_8
    if-eqz p3, :cond_a

    #@183
    .line 8706
    const/4 v3, 0x1

    #@184
    move-object/from16 v0, p0

    #@186
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@188
    .line 8707
    move-object/from16 v0, p0

    #@18a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@18c
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@18f
    move-result-object v3

    #@190
    invoke-virtual/range {p3 .. p3}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    #@193
    move-result v4

    #@194
    int-to-long v4, v4

    #@195
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@198
    .line 8708
    move-object/from16 v0, p0

    #@19a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@19c
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@19f
    move-result-object v3

    #@1a0
    invoke-virtual/range {p3 .. p3}, Landroid/telephony/ModemActivityInfo;->getRxTimeMillis()I

    #@1a3
    move-result v4

    #@1a4
    int-to-long v4, v4

    #@1a5
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1a8
    .line 8709
    const/16 v17, 0x0

    #@1aa
    .restart local v17    # "lvl":I
    :goto_4
    const/4 v3, 0x5

    #@1ab
    move/from16 v0, v17

    #@1ad
    if-ge v0, v3, :cond_9

    #@1af
    .line 8710
    move-object/from16 v0, p0

    #@1b1
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1b3
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1b6
    move-result-object v3

    #@1b7
    aget-object v3, v3, v17

    #@1b9
    .line 8711
    invoke-virtual/range {p3 .. p3}, Landroid/telephony/ModemActivityInfo;->getTxTimeMillis()[I

    #@1bc
    move-result-object v4

    #@1bd
    aget v4, v4, v17

    #@1bf
    int-to-long v4, v4

    #@1c0
    .line 8710
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1c3
    .line 8709
    add-int/lit8 v17, v17, 0x1

    #@1c5
    goto :goto_4

    #@1c6
    .line 8715
    :cond_9
    move-object/from16 v0, p0

    #@1c8
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@1ca
    .line 8716
    const-string/jumbo v4, "modem.controller.voltage"

    #@1cd
    .line 8715
    invoke-virtual {v3, v4}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    #@1d0
    move-result-wide v4

    #@1d1
    .line 8716
    const-wide v6, 0x408f400000000000L    # 1000.0

    #@1d6
    .line 8715
    div-double v18, v4, v6

    #@1d8
    .line 8717
    .local v18, "opVolt":D
    const-wide/16 v4, 0x0

    #@1da
    cmpl-double v3, v18, v4

    #@1dc
    if-eqz v3, :cond_a

    #@1de
    .line 8719
    move-object/from16 v0, p0

    #@1e0
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1e2
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1e5
    move-result-object v3

    #@1e6
    .line 8720
    invoke-virtual/range {p3 .. p3}, Landroid/telephony/ModemActivityInfo;->getEnergyUsed()I

    #@1e9
    move-result v4

    #@1ea
    int-to-double v4, v4

    #@1eb
    div-double v4, v4, v18

    #@1ed
    double-to-long v4, v4

    #@1ee
    .line 8719
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1f1
    .line 8601
    .end local v17    # "lvl":I
    .end local v18    # "opVolt":D
    :cond_a
    return-void
.end method

.method public updateTimeBasesLocked(ZZJJ)V
    .locals 7
    .param p1, "unplugged"    # Z
    .param p2, "screenOff"    # Z
    .param p3, "uptime"    # J
    .param p5, "realtime"    # J

    #@0
    .prologue
    .line 2906
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2
    move v1, p1

    #@3
    move-wide v2, p3

    #@4
    move-wide v4, p5

    #@5
    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    #@8
    .line 2908
    if-eqz p1, :cond_1

    #@a
    move v1, p2

    #@b
    .line 2909
    :goto_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@d
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    #@10
    move-result v0

    #@11
    if-eq v1, v0, :cond_0

    #@13
    .line 2910
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateKernelWakelocksLocked()V

    #@16
    .line 2915
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateCpuTimeLocked()V

    #@19
    .line 2916
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@1b
    move-wide v2, p3

    #@1c
    move-wide v4, p5

    #@1d
    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    #@20
    .line 2905
    :cond_0
    return-void

    #@21
    .line 2908
    :cond_1
    const/4 v1, 0x0

    #@22
    .local v1, "unpluggedScreenOff":Z
    goto :goto_0
.end method

.method public updateWifiStateLocked(Landroid/net/wifi/WifiActivityEnergyInfo;)V
    .locals 56
    .param p1, "info"    # Landroid/net/wifi/WifiActivityEnergyInfo;

    #@0
    .prologue
    .line 8373
    move-object/from16 v0, p0

    #@2
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@4
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@7
    move-result-wide v12

    #@8
    .line 8374
    .local v12, "elapsedRealtimeMs":J
    const/4 v9, 0x0

    #@9
    .line 8376
    .local v9, "delta":Landroid/net/NetworkStats;
    :try_start_0
    move-object/from16 v0, p0

    #@b
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@d
    invoke-static {v3}, Lcom/android/internal/util/ArrayUtils;->isEmpty([Ljava/lang/Object;)Z

    #@10
    move-result v3

    #@11
    if-nez v3, :cond_0

    #@13
    .line 8377
    move-object/from16 v0, p0

    #@15
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    #@17
    move-object/from16 v0, p0

    #@19
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkStats:[Landroid/net/NetworkStats;

    #@1b
    move-object/from16 v0, p0

    #@1d
    invoke-direct {v0, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkStatsDeltaLocked([Ljava/lang/String;[Landroid/net/NetworkStats;)Landroid/net/NetworkStats;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    #@20
    move-result-object v9

    #@21
    .line 8384
    .end local v9    # "delta":Landroid/net/NetworkStats;
    :cond_0
    move-object/from16 v0, p0

    #@23
    iget-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    #@25
    if-nez v3, :cond_1

    #@27
    .line 8385
    return-void

    #@28
    .line 8379
    .restart local v9    # "delta":Landroid/net/NetworkStats;
    :catch_0
    move-exception v10

    #@29
    .line 8380
    .local v10, "e":Ljava/io/IOException;
    const-string/jumbo v3, "BatteryStatsImpl"

    #@2c
    const-string/jumbo v4, "Failed to get wifi network stats"

    #@2f
    invoke-static {v3, v4, v10}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    #@32
    .line 8381
    return-void

    #@33
    .line 8388
    .end local v9    # "delta":Landroid/net/NetworkStats;
    .end local v10    # "e":Ljava/io/IOException;
    :cond_1
    new-instance v15, Landroid/util/SparseLongArray;

    #@35
    invoke-direct {v15}, Landroid/util/SparseLongArray;-><init>()V

    #@38
    .line 8389
    .local v15, "rxPackets":Landroid/util/SparseLongArray;
    new-instance v39, Landroid/util/SparseLongArray;

    #@3a
    invoke-direct/range {v39 .. v39}, Landroid/util/SparseLongArray;-><init>()V

    #@3d
    .line 8390
    .local v39, "txPackets":Landroid/util/SparseLongArray;
    const-wide/16 v46, 0x0

    #@3f
    .line 8391
    .local v46, "totalTxPackets":J
    const-wide/16 v40, 0x0

    #@41
    .line 8392
    .local v40, "totalRxPackets":J
    if-eqz v9, :cond_5

    #@43
    .line 8393
    invoke-virtual {v9}, Landroid/net/NetworkStats;->size()I

    #@46
    move-result v38

    #@47
    .line 8394
    .local v38, "size":I
    const/4 v14, 0x0

    #@48
    .local v14, "i":I
    :goto_0
    move/from16 v0, v38

    #@4a
    if-ge v14, v0, :cond_5

    #@4c
    .line 8395
    move-object/from16 v0, p0

    #@4e
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpNetworkStatsEntry:Landroid/net/NetworkStats$Entry;

    #@50
    invoke-virtual {v9, v14, v3}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    #@53
    move-result-object v11

    #@54
    .line 8403
    .local v11, "entry":Landroid/net/NetworkStats$Entry;
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->rxBytes:J

    #@56
    const-wide/16 v6, 0x0

    #@58
    cmp-long v3, v4, v6

    #@5a
    if-nez v3, :cond_3

    #@5c
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->txBytes:J

    #@5e
    const-wide/16 v6, 0x0

    #@60
    cmp-long v3, v4, v6

    #@62
    if-nez v3, :cond_3

    #@64
    .line 8394
    :cond_2
    :goto_1
    add-int/lit8 v14, v14, 0x1

    #@66
    goto :goto_0

    #@67
    .line 8408
    :cond_3
    iget v3, v11, Landroid/net/NetworkStats$Entry;->uid:I

    #@69
    move-object/from16 v0, p0

    #@6b
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    #@6e
    move-result v3

    #@6f
    move-object/from16 v0, p0

    #@71
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@74
    move-result-object v2

    #@75
    .line 8409
    .local v2, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->rxBytes:J

    #@77
    const-wide/16 v6, 0x0

    #@79
    cmp-long v3, v4, v6

    #@7b
    if-eqz v3, :cond_4

    #@7d
    .line 8410
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->rxBytes:J

    #@7f
    .line 8411
    iget-wide v6, v11, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@81
    .line 8410
    const/4 v3, 0x2

    #@82
    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    #@85
    .line 8412
    move-object/from16 v0, p0

    #@87
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@89
    const/4 v4, 0x2

    #@8a
    aget-object v3, v3, v4

    #@8c
    .line 8413
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->rxBytes:J

    #@8e
    .line 8412
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@91
    .line 8414
    move-object/from16 v0, p0

    #@93
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@95
    const/4 v4, 0x2

    #@96
    aget-object v3, v3, v4

    #@98
    .line 8415
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@9a
    .line 8414
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@9d
    .line 8417
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    #@a0
    move-result v3

    #@a1
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@a3
    invoke-virtual {v15, v3, v4, v5}, Landroid/util/SparseLongArray;->put(IJ)V

    #@a6
    .line 8421
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->rxPackets:J

    #@a8
    add-long v40, v40, v4

    #@aa
    .line 8424
    :cond_4
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->txBytes:J

    #@ac
    const-wide/16 v6, 0x0

    #@ae
    cmp-long v3, v4, v6

    #@b0
    if-eqz v3, :cond_2

    #@b2
    .line 8425
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->txBytes:J

    #@b4
    .line 8426
    iget-wide v6, v11, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@b6
    .line 8425
    const/4 v3, 0x3

    #@b7
    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    #@ba
    .line 8427
    move-object/from16 v0, p0

    #@bc
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@be
    const/4 v4, 0x3

    #@bf
    aget-object v3, v3, v4

    #@c1
    .line 8428
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->txBytes:J

    #@c3
    .line 8427
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@c6
    .line 8429
    move-object/from16 v0, p0

    #@c8
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@ca
    const/4 v4, 0x3

    #@cb
    aget-object v3, v3, v4

    #@cd
    .line 8430
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@cf
    .line 8429
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@d2
    .line 8432
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    #@d5
    move-result v3

    #@d6
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@d8
    move-object/from16 v0, v39

    #@da
    invoke-virtual {v0, v3, v4, v5}, Landroid/util/SparseLongArray;->put(IJ)V

    #@dd
    .line 8436
    iget-wide v4, v11, Landroid/net/NetworkStats$Entry;->txPackets:J

    #@df
    add-long v46, v46, v4

    #@e1
    goto :goto_1

    #@e2
    .line 8441
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v11    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v14    # "i":I
    .end local v38    # "size":I
    :cond_5
    if-eqz p1, :cond_e

    #@e4
    .line 8442
    const/4 v3, 0x1

    #@e5
    move-object/from16 v0, p0

    #@e7
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@e9
    .line 8445
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerTxTimeMillis()J

    #@ec
    move-result-wide v50

    #@ed
    .line 8446
    .local v50, "txTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerRxTimeMillis()J

    #@f0
    move-result-wide v30

    #@f1
    .line 8447
    .local v30, "rxTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerIdleTimeMillis()J

    #@f4
    move-result-wide v16

    #@f5
    .line 8448
    .local v16, "idleTimeMs":J
    add-long v4, v50, v30

    #@f7
    add-long v44, v4, v16

    #@f9
    .line 8450
    .local v44, "totalTimeMs":J
    move-wide/from16 v18, v30

    #@fb
    .line 8451
    .local v18, "leftOverRxTimeMs":J
    move-wide/from16 v20, v50

    #@fd
    .line 8461
    .local v20, "leftOverTxTimeMs":J
    const-wide/16 v48, 0x0

    #@ff
    .line 8462
    .local v48, "totalWifiLockTimeMs":J
    const-wide/16 v42, 0x0

    #@101
    .line 8466
    .local v42, "totalScanTimeMs":J
    move-object/from16 v0, p0

    #@103
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@105
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    #@108
    move-result v53

    #@109
    .line 8467
    .local v53, "uidStatsSize":I
    const/4 v14, 0x0

    #@10a
    .restart local v14    # "i":I
    :goto_2
    move/from16 v0, v53

    #@10c
    if-ge v14, v0, :cond_6

    #@10e
    .line 8468
    move-object/from16 v0, p0

    #@110
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@112
    invoke-virtual {v3, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@115
    move-result-object v52

    #@116
    check-cast v52, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@118
    .line 8471
    .local v52, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v0, v52

    #@11a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@11c
    .line 8472
    const-wide/16 v4, 0x3e8

    #@11e
    mul-long/2addr v4, v12

    #@11f
    .line 8471
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    #@122
    move-result-wide v4

    #@123
    .line 8472
    const-wide/16 v6, 0x3e8

    #@125
    .line 8471
    div-long/2addr v4, v6

    #@126
    add-long v42, v42, v4

    #@128
    .line 8475
    move-object/from16 v0, v52

    #@12a
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@12c
    .line 8476
    const-wide/16 v4, 0x3e8

    #@12e
    mul-long/2addr v4, v12

    #@12f
    .line 8475
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    #@132
    move-result-wide v4

    #@133
    .line 8476
    const-wide/16 v6, 0x3e8

    #@135
    .line 8475
    div-long/2addr v4, v6

    #@136
    add-long v48, v48, v4

    #@138
    .line 8467
    add-int/lit8 v14, v14, 0x1

    #@13a
    goto :goto_2

    #@13b
    .line 8489
    .end local v52    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_6
    const/4 v14, 0x0

    #@13c
    :goto_3
    move/from16 v0, v53

    #@13e
    if-ge v14, v0, :cond_b

    #@140
    .line 8490
    move-object/from16 v0, p0

    #@142
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@144
    invoke-virtual {v3, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@147
    move-result-object v52

    #@148
    check-cast v52, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@14a
    .line 8492
    .restart local v52    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v0, v52

    #@14c
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@14e
    .line 8493
    const-wide/16 v4, 0x3e8

    #@150
    mul-long/2addr v4, v12

    #@151
    .line 8492
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    #@154
    move-result-wide v4

    #@155
    .line 8493
    const-wide/16 v6, 0x3e8

    #@157
    .line 8492
    div-long v34, v4, v6

    #@159
    .line 8494
    .local v34, "scanTimeSinceMarkMs":J
    const-wide/16 v4, 0x0

    #@15b
    cmp-long v3, v34, v4

    #@15d
    if-lez v3, :cond_9

    #@15f
    .line 8496
    move-object/from16 v0, v52

    #@161
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@163
    invoke-virtual {v3, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    #@166
    .line 8498
    move-wide/from16 v32, v34

    #@168
    .line 8499
    .local v32, "scanRxTimeSinceMarkMs":J
    move-wide/from16 v36, v34

    #@16a
    .line 8508
    .local v36, "scanTxTimeSinceMarkMs":J
    cmp-long v3, v42, v30

    #@16c
    if-lez v3, :cond_7

    #@16e
    .line 8509
    mul-long v4, v30, v34

    #@170
    div-long v32, v4, v42

    #@172
    .line 8512
    :cond_7
    cmp-long v3, v42, v50

    #@174
    if-lez v3, :cond_8

    #@176
    .line 8513
    mul-long v4, v50, v34

    #@178
    div-long v36, v4, v42

    #@17a
    .line 8524
    :cond_8
    invoke-virtual/range {v52 .. v52}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@17d
    move-result-object v8

    #@17e
    .line 8525
    .local v8, "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@181
    move-result-object v3

    #@182
    move-wide/from16 v0, v32

    #@184
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@187
    .line 8526
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@18a
    move-result-object v3

    #@18b
    const/4 v4, 0x0

    #@18c
    aget-object v3, v3, v4

    #@18e
    move-wide/from16 v0, v36

    #@190
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@193
    .line 8527
    sub-long v18, v18, v32

    #@195
    .line 8528
    sub-long v20, v20, v36

    #@197
    .line 8533
    .end local v8    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v32    # "scanRxTimeSinceMarkMs":J
    .end local v36    # "scanTxTimeSinceMarkMs":J
    :cond_9
    move-object/from16 v0, v52

    #@199
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@19b
    .line 8534
    const-wide/16 v4, 0x3e8

    #@19d
    mul-long/2addr v4, v12

    #@19e
    .line 8533
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    #@1a1
    move-result-wide v4

    #@1a2
    .line 8534
    const-wide/16 v6, 0x3e8

    #@1a4
    .line 8533
    div-long v54, v4, v6

    #@1a6
    .line 8535
    .local v54, "wifiLockTimeSinceMarkMs":J
    const-wide/16 v4, 0x0

    #@1a8
    cmp-long v3, v54, v4

    #@1aa
    if-lez v3, :cond_a

    #@1ac
    .line 8537
    move-object/from16 v0, v52

    #@1ae
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1b0
    invoke-virtual {v3, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    #@1b3
    .line 8539
    mul-long v4, v54, v16

    #@1b5
    div-long v22, v4, v48

    #@1b7
    .line 8545
    .local v22, "myIdleTimeMs":J
    invoke-virtual/range {v52 .. v52}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1ba
    move-result-object v3

    #@1bb
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1be
    move-result-object v3

    #@1bf
    move-wide/from16 v0, v22

    #@1c1
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1c4
    .line 8489
    .end local v22    # "myIdleTimeMs":J
    :cond_a
    add-int/lit8 v14, v14, 0x1

    #@1c6
    goto/16 :goto_3

    #@1c8
    .line 8557
    .end local v34    # "scanTimeSinceMarkMs":J
    .end local v52    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v54    # "wifiLockTimeSinceMarkMs":J
    :cond_b
    const/4 v14, 0x0

    #@1c9
    :goto_4
    invoke-virtual/range {v39 .. v39}, Landroid/util/SparseLongArray;->size()I

    #@1cc
    move-result v3

    #@1cd
    if-ge v14, v3, :cond_c

    #@1cf
    .line 8558
    move-object/from16 v0, v39

    #@1d1
    invoke-virtual {v0, v14}, Landroid/util/SparseLongArray;->keyAt(I)I

    #@1d4
    move-result v3

    #@1d5
    move-object/from16 v0, p0

    #@1d7
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@1da
    move-result-object v52

    #@1db
    .line 8559
    .restart local v52    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v0, v39

    #@1dd
    invoke-virtual {v0, v14}, Landroid/util/SparseLongArray;->valueAt(I)J

    #@1e0
    move-result-wide v4

    #@1e1
    mul-long v4, v4, v20

    #@1e3
    div-long v26, v4, v46

    #@1e5
    .line 8563
    .local v26, "myTxTimeMs":J
    invoke-virtual/range {v52 .. v52}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1e8
    move-result-object v3

    #@1e9
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@1ec
    move-result-object v3

    #@1ed
    const/4 v4, 0x0

    #@1ee
    aget-object v3, v3, v4

    #@1f0
    move-wide/from16 v0, v26

    #@1f2
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@1f5
    .line 8557
    add-int/lit8 v14, v14, 0x1

    #@1f7
    goto :goto_4

    #@1f8
    .line 8569
    .end local v26    # "myTxTimeMs":J
    .end local v52    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_c
    const/4 v14, 0x0

    #@1f9
    :goto_5
    invoke-virtual {v15}, Landroid/util/SparseLongArray;->size()I

    #@1fc
    move-result v3

    #@1fd
    if-ge v14, v3, :cond_d

    #@1ff
    .line 8570
    invoke-virtual {v15, v14}, Landroid/util/SparseLongArray;->keyAt(I)I

    #@202
    move-result v3

    #@203
    move-object/from16 v0, p0

    #@205
    invoke-virtual {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@208
    move-result-object v52

    #@209
    .line 8571
    .restart local v52    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v15, v14}, Landroid/util/SparseLongArray;->valueAt(I)J

    #@20c
    move-result-wide v4

    #@20d
    mul-long v4, v4, v18

    #@20f
    div-long v24, v4, v40

    #@211
    .line 8575
    .local v24, "myRxTimeMs":J
    invoke-virtual/range {v52 .. v52}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@214
    move-result-object v3

    #@215
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@218
    move-result-object v3

    #@219
    move-wide/from16 v0, v24

    #@21b
    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@21e
    .line 8569
    add-int/lit8 v14, v14, 0x1

    #@220
    goto :goto_5

    #@221
    .line 8582
    .end local v24    # "myRxTimeMs":J
    .end local v52    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_d
    move-object/from16 v0, p0

    #@223
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@225
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@228
    move-result-object v3

    #@229
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerRxTimeMillis()J

    #@22c
    move-result-wide v4

    #@22d
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@230
    .line 8583
    move-object/from16 v0, p0

    #@232
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@234
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@237
    move-result-object v3

    #@238
    const/4 v4, 0x0

    #@239
    aget-object v3, v3, v4

    #@23b
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerTxTimeMillis()J

    #@23e
    move-result-wide v4

    #@23f
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@242
    .line 8584
    move-object/from16 v0, p0

    #@244
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@246
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@249
    move-result-object v3

    #@24a
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerIdleTimeMillis()J

    #@24d
    move-result-wide v4

    #@24e
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@251
    .line 8587
    move-object/from16 v0, p0

    #@253
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    #@255
    .line 8588
    const-string/jumbo v4, "wifi.controller.voltage"

    #@258
    .line 8587
    invoke-virtual {v3, v4}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    #@25b
    move-result-wide v4

    #@25c
    .line 8588
    const-wide v6, 0x408f400000000000L    # 1000.0

    #@261
    .line 8587
    div-double v28, v4, v6

    #@263
    .line 8589
    .local v28, "opVolt":D
    const-wide/16 v4, 0x0

    #@265
    cmpl-double v3, v28, v4

    #@267
    if-eqz v3, :cond_e

    #@269
    .line 8591
    move-object/from16 v0, p0

    #@26b
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@26d
    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@270
    move-result-object v3

    #@271
    .line 8592
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerEnergyUsed()J

    #@274
    move-result-wide v4

    #@275
    long-to-double v4, v4

    #@276
    div-double v4, v4, v28

    #@278
    double-to-long v4, v4

    #@279
    .line 8591
    invoke-virtual {v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    #@27c
    .line 8368
    .end local v14    # "i":I
    .end local v16    # "idleTimeMs":J
    .end local v18    # "leftOverRxTimeMs":J
    .end local v20    # "leftOverTxTimeMs":J
    .end local v28    # "opVolt":D
    .end local v30    # "rxTimeMs":J
    .end local v42    # "totalScanTimeMs":J
    .end local v44    # "totalTimeMs":J
    .end local v48    # "totalWifiLockTimeMs":J
    .end local v50    # "txTimeMs":J
    .end local v53    # "uidStatsSize":I
    :cond_e
    return-void
.end method

.method public writeAsyncLocked()V
    .locals 1

    #@0
    .prologue
    .line 9849
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeLocked(Z)V

    #@4
    .line 9848
    return-void
.end method

.method writeHistory(Landroid/os/Parcel;ZZ)V
    .locals 9
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclData"    # Z
    .param p3, "andOldHistory"    # Z

    #@0
    .prologue
    const/4 v8, 0x0

    #@1
    .line 10061
    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    #@3
    iget-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    #@5
    add-long/2addr v4, v6

    #@6
    invoke-virtual {p1, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@9
    .line 10062
    if-nez p2, :cond_0

    #@b
    .line 10063
    invoke-virtual {p1, v8}, Landroid/os/Parcel;->writeInt(I)V

    #@e
    .line 10064
    invoke-virtual {p1, v8}, Landroid/os/Parcel;->writeInt(I)V

    #@11
    .line 10065
    return-void

    #@12
    .line 10067
    :cond_0
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@14
    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    #@17
    move-result v3

    #@18
    invoke-virtual {p1, v3}, Landroid/os/Parcel;->writeInt(I)V

    #@1b
    .line 10068
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    #@1d
    invoke-virtual {v3}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@20
    move-result-object v3

    #@21
    invoke-interface {v3}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@24
    move-result-object v1

    #@25
    .local v1, "ent$iterator":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    #@28
    move-result v3

    #@29
    if-eqz v3, :cond_1

    #@2b
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@2e
    move-result-object v0

    #@2f
    check-cast v0, Ljava/util/Map$Entry;

    #@31
    .line 10069
    .local v0, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@34
    move-result-object v2

    #@35
    check-cast v2, Landroid/os/BatteryStats$HistoryTag;

    #@37
    .line 10070
    .local v2, "tag":Landroid/os/BatteryStats$HistoryTag;
    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@3a
    move-result-object v3

    #@3b
    check-cast v3, Ljava/lang/Integer;

    #@3d
    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    #@40
    move-result v3

    #@41
    invoke-virtual {p1, v3}, Landroid/os/Parcel;->writeInt(I)V

    #@44
    .line 10071
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    #@46
    invoke-virtual {p1, v3}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@49
    .line 10072
    iget v3, v2, Landroid/os/BatteryStats$HistoryTag;->uid:I

    #@4b
    invoke-virtual {p1, v3}, Landroid/os/Parcel;->writeInt(I)V

    #@4e
    goto :goto_0

    #@4f
    .line 10074
    .end local v0    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    .end local v2    # "tag":Landroid/os/BatteryStats$HistoryTag;
    :cond_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@51
    invoke-virtual {v3}, Landroid/os/Parcel;->dataSize()I

    #@54
    move-result v3

    #@55
    invoke-virtual {p1, v3}, Landroid/os/Parcel;->writeInt(I)V

    #@58
    .line 10077
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@5a
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    #@5c
    invoke-virtual {v4}, Landroid/os/Parcel;->dataSize()I

    #@5f
    move-result v4

    #@60
    invoke-virtual {p1, v3, v8, v4}, Landroid/os/Parcel;->appendFrom(Landroid/os/Parcel;II)V

    #@63
    .line 10079
    if-eqz p3, :cond_2

    #@65
    .line 10080
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->writeOldHistory(Landroid/os/Parcel;)V

    #@68
    .line 10052
    :cond_2
    return-void
.end method

.method public writeHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;Landroid/os/BatteryStats$HistoryItem;)V
    .locals 26
    .param p1, "dest"    # Landroid/os/Parcel;
    .param p2, "cur"    # Landroid/os/BatteryStats$HistoryItem;
    .param p3, "last"    # Landroid/os/BatteryStats$HistoryItem;

    #@0
    .prologue
    .line 2225
    if-eqz p3, :cond_0

    #@2
    move-object/from16 v0, p2

    #@4
    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    #@6
    move/from16 v22, v0

    #@8
    if-eqz v22, :cond_1

    #@a
    .line 2226
    :cond_0
    const v22, 0x7fffd

    #@d
    move-object/from16 v0, p1

    #@f
    move/from16 v1, v22

    #@11
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@14
    .line 2227
    const/16 v22, 0x0

    #@16
    move-object/from16 v0, p2

    #@18
    move-object/from16 v1, p1

    #@1a
    move/from16 v2, v22

    #@1c
    invoke-virtual {v0, v1, v2}, Landroid/os/BatteryStats$HistoryItem;->writeToParcel(Landroid/os/Parcel;I)V

    #@1f
    .line 2228
    return-void

    #@20
    .line 2231
    :cond_1
    move-object/from16 v0, p2

    #@22
    iget-wide v0, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@24
    move-wide/from16 v22, v0

    #@26
    move-object/from16 v0, p3

    #@28
    iget-wide v0, v0, Landroid/os/BatteryStats$HistoryItem;->time:J

    #@2a
    move-wide/from16 v24, v0

    #@2c
    sub-long v10, v22, v24

    #@2e
    .line 2232
    .local v10, "deltaTime":J
    move-object/from16 v0, p0

    #@30
    move-object/from16 v1, p3

    #@32
    invoke-direct {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I

    #@35
    move-result v15

    #@36
    .line 2233
    .local v15, "lastBatteryLevelInt":I
    move-object/from16 v0, p0

    #@38
    move-object/from16 v1, p3

    #@3a
    invoke-direct {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I

    #@3d
    move-result v16

    #@3e
    .line 2236
    .local v16, "lastStateInt":I
    const-wide/16 v22, 0x0

    #@40
    cmp-long v22, v10, v22

    #@42
    if-ltz v22, :cond_2

    #@44
    const-wide/32 v22, 0x7fffffff

    #@47
    cmp-long v22, v10, v22

    #@49
    if-lez v22, :cond_15

    #@4b
    .line 2237
    :cond_2
    const v9, 0x7ffff

    #@4e
    .line 2243
    .local v9, "deltaTimeToken":I
    :goto_0
    move-object/from16 v0, p2

    #@50
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    #@52
    move/from16 v22, v0

    #@54
    const/high16 v23, -0x2000000

    #@56
    and-int v22, v22, v23

    #@58
    or-int v12, v9, v22

    #@5a
    .line 2244
    .local v12, "firstToken":I
    move-object/from16 v0, p0

    #@5c
    iget-byte v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    #@5e
    move/from16 v22, v0

    #@60
    move-object/from16 v0, p2

    #@62
    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@64
    move/from16 v23, v0

    #@66
    move/from16 v0, v22

    #@68
    move/from16 v1, v23

    #@6a
    if-le v0, v1, :cond_17

    #@6c
    .line 2245
    const/4 v13, 0x1

    #@6d
    .line 2246
    .local v13, "includeStepDetails":I
    :goto_1
    if-nez v13, :cond_18

    #@6f
    .line 2247
    move-object/from16 v0, p0

    #@71
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@73
    move-object/from16 v22, v0

    #@75
    if-nez v22, :cond_19

    #@77
    const/4 v8, 0x1

    #@78
    .line 2248
    .local v8, "computeStepDetails":Z
    :goto_2
    move-object/from16 v0, p0

    #@7a
    move-object/from16 v1, p2

    #@7c
    invoke-direct {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I

    #@7f
    move-result v22

    #@80
    or-int v5, v22, v13

    #@82
    .line 2249
    .local v5, "batteryLevelInt":I
    if-eq v5, v15, :cond_1a

    #@84
    const/4 v6, 0x1

    #@85
    .line 2250
    .local v6, "batteryLevelIntChanged":Z
    :goto_3
    if-eqz v6, :cond_3

    #@87
    .line 2251
    const/high16 v22, 0x80000

    #@89
    or-int v12, v12, v22

    #@8b
    .line 2253
    :cond_3
    move-object/from16 v0, p0

    #@8d
    move-object/from16 v1, p2

    #@8f
    invoke-direct {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I

    #@92
    move-result v18

    #@93
    .line 2254
    .local v18, "stateInt":I
    move/from16 v0, v18

    #@95
    move/from16 v1, v16

    #@97
    if-eq v0, v1, :cond_1b

    #@99
    const/16 v19, 0x1

    #@9b
    .line 2255
    .local v19, "stateIntChanged":Z
    :goto_4
    if-eqz v19, :cond_4

    #@9d
    .line 2256
    const/high16 v22, 0x100000

    #@9f
    or-int v12, v12, v22

    #@a1
    .line 2258
    :cond_4
    move-object/from16 v0, p2

    #@a3
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@a5
    move/from16 v22, v0

    #@a7
    move-object/from16 v0, p3

    #@a9
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@ab
    move/from16 v23, v0

    #@ad
    move/from16 v0, v22

    #@af
    move/from16 v1, v23

    #@b1
    if-eq v0, v1, :cond_1c

    #@b3
    const/16 v17, 0x1

    #@b5
    .line 2259
    .local v17, "state2IntChanged":Z
    :goto_5
    if-eqz v17, :cond_5

    #@b7
    .line 2260
    const/high16 v22, 0x200000

    #@b9
    or-int v12, v12, v22

    #@bb
    .line 2262
    :cond_5
    move-object/from16 v0, p2

    #@bd
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@bf
    move-object/from16 v22, v0

    #@c1
    if-nez v22, :cond_6

    #@c3
    move-object/from16 v0, p2

    #@c5
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@c7
    move-object/from16 v22, v0

    #@c9
    if-eqz v22, :cond_7

    #@cb
    .line 2263
    :cond_6
    const/high16 v22, 0x400000

    #@cd
    or-int v12, v12, v22

    #@cf
    .line 2265
    :cond_7
    move-object/from16 v0, p2

    #@d1
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@d3
    move/from16 v22, v0

    #@d5
    if-eqz v22, :cond_8

    #@d7
    .line 2266
    const/high16 v22, 0x800000

    #@d9
    or-int v12, v12, v22

    #@db
    .line 2269
    :cond_8
    move-object/from16 v0, p2

    #@dd
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@df
    move/from16 v22, v0

    #@e1
    move-object/from16 v0, p3

    #@e3
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@e5
    move/from16 v23, v0

    #@e7
    move/from16 v0, v22

    #@e9
    move/from16 v1, v23

    #@eb
    if-eq v0, v1, :cond_1d

    #@ed
    const/4 v4, 0x1

    #@ee
    .line 2270
    .local v4, "batteryChargeChanged":Z
    :goto_6
    if-eqz v4, :cond_9

    #@f0
    .line 2271
    const/high16 v22, 0x1000000

    #@f2
    or-int v12, v12, v22

    #@f4
    .line 2273
    :cond_9
    move-object/from16 v0, p1

    #@f6
    invoke-virtual {v0, v12}, Landroid/os/Parcel;->writeInt(I)V

    #@f9
    .line 2277
    const v22, 0x7fffe

    #@fc
    move/from16 v0, v22

    #@fe
    if-lt v9, v0, :cond_a

    #@100
    .line 2278
    const v22, 0x7fffe

    #@103
    move/from16 v0, v22

    #@105
    if-ne v9, v0, :cond_1e

    #@107
    .line 2280
    long-to-int v0, v10

    #@108
    move/from16 v22, v0

    #@10a
    move-object/from16 v0, p1

    #@10c
    move/from16 v1, v22

    #@10e
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@111
    .line 2286
    :cond_a
    :goto_7
    if-eqz v6, :cond_b

    #@113
    .line 2287
    move-object/from16 v0, p1

    #@115
    invoke-virtual {v0, v5}, Landroid/os/Parcel;->writeInt(I)V

    #@118
    .line 2294
    :cond_b
    if-eqz v19, :cond_c

    #@11a
    .line 2295
    move-object/from16 v0, p1

    #@11c
    move/from16 v1, v18

    #@11e
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@121
    .line 2303
    :cond_c
    if-eqz v17, :cond_d

    #@123
    .line 2304
    move-object/from16 v0, p2

    #@125
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    #@127
    move/from16 v22, v0

    #@129
    move-object/from16 v0, p1

    #@12b
    move/from16 v1, v22

    #@12d
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@130
    .line 2308
    :cond_d
    move-object/from16 v0, p2

    #@132
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@134
    move-object/from16 v22, v0

    #@136
    if-nez v22, :cond_e

    #@138
    move-object/from16 v0, p2

    #@13a
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@13c
    move-object/from16 v22, v0

    #@13e
    if-eqz v22, :cond_f

    #@140
    .line 2311
    :cond_e
    move-object/from16 v0, p2

    #@142
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@144
    move-object/from16 v22, v0

    #@146
    if-eqz v22, :cond_1f

    #@148
    .line 2312
    move-object/from16 v0, p2

    #@14a
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    #@14c
    move-object/from16 v22, v0

    #@14e
    move-object/from16 v0, p0

    #@150
    move-object/from16 v1, v22

    #@152
    invoke-direct {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    #@155
    move-result v20

    #@156
    .line 2318
    .local v20, "wakeLockIndex":I
    :goto_8
    move-object/from16 v0, p2

    #@158
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@15a
    move-object/from16 v22, v0

    #@15c
    if-eqz v22, :cond_20

    #@15e
    .line 2319
    move-object/from16 v0, p2

    #@160
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    #@162
    move-object/from16 v22, v0

    #@164
    move-object/from16 v0, p0

    #@166
    move-object/from16 v1, v22

    #@168
    invoke-direct {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    #@16b
    move-result v21

    #@16c
    .line 2325
    .local v21, "wakeReasonIndex":I
    :goto_9
    shl-int/lit8 v22, v21, 0x10

    #@16e
    or-int v22, v22, v20

    #@170
    move-object/from16 v0, p1

    #@172
    move/from16 v1, v22

    #@174
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@177
    .line 2327
    .end local v20    # "wakeLockIndex":I
    .end local v21    # "wakeReasonIndex":I
    :cond_f
    move-object/from16 v0, p2

    #@179
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@17b
    move/from16 v22, v0

    #@17d
    if-eqz v22, :cond_10

    #@17f
    .line 2328
    move-object/from16 v0, p2

    #@181
    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    #@183
    move-object/from16 v22, v0

    #@185
    move-object/from16 v0, p0

    #@187
    move-object/from16 v1, v22

    #@189
    invoke-direct {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    #@18c
    move-result v14

    #@18d
    .line 2329
    .local v14, "index":I
    move-object/from16 v0, p2

    #@18f
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    #@191
    move/from16 v22, v0

    #@193
    const v23, 0xffff

    #@196
    and-int v22, v22, v23

    #@198
    shl-int/lit8 v23, v14, 0x10

    #@19a
    or-int v7, v22, v23

    #@19c
    .line 2330
    .local v7, "codeAndIndex":I
    move-object/from16 v0, p1

    #@19e
    invoke-virtual {v0, v7}, Landroid/os/Parcel;->writeInt(I)V

    #@1a1
    .line 2335
    .end local v7    # "codeAndIndex":I
    .end local v14    # "index":I
    :cond_10
    if-eqz v8, :cond_21

    #@1a3
    .line 2336
    move-object/from16 v0, p0

    #@1a5
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    #@1a7
    move-object/from16 v22, v0

    #@1a9
    if-eqz v22, :cond_11

    #@1ab
    .line 2337
    move-object/from16 v0, p0

    #@1ad
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1af
    move-object/from16 v22, v0

    #@1b1
    .line 2338
    move-object/from16 v0, p0

    #@1b3
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    #@1b5
    move-object/from16 v23, v0

    #@1b7
    invoke-interface/range {v23 .. v23}, Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;->getPlatformLowPowerStats()Ljava/lang/String;

    #@1ba
    move-result-object v23

    #@1bb
    .line 2337
    move-object/from16 v0, v23

    #@1bd
    move-object/from16 v1, v22

    #@1bf
    iput-object v0, v1, Landroid/os/BatteryStats$HistoryStepDetails;->statPlatformIdleState:Ljava/lang/String;

    #@1c1
    .line 2342
    :cond_11
    move-object/from16 v0, p0

    #@1c3
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1c5
    move-object/from16 v22, v0

    #@1c7
    move-object/from16 v0, p0

    #@1c9
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1cb
    move-object/from16 v23, v0

    #@1cd
    move-object/from16 v0, p0

    #@1cf
    move-object/from16 v1, v22

    #@1d1
    move-object/from16 v2, v23

    #@1d3
    invoke-direct {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->computeHistoryStepDetails(Landroid/os/BatteryStats$HistoryStepDetails;Landroid/os/BatteryStats$HistoryStepDetails;)V

    #@1d6
    .line 2343
    if-eqz v13, :cond_12

    #@1d8
    .line 2344
    move-object/from16 v0, p0

    #@1da
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1dc
    move-object/from16 v22, v0

    #@1de
    move-object/from16 v0, v22

    #@1e0
    move-object/from16 v1, p1

    #@1e2
    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$HistoryStepDetails;->writeToParcel(Landroid/os/Parcel;)V

    #@1e5
    .line 2346
    :cond_12
    move-object/from16 v0, p0

    #@1e7
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1e9
    move-object/from16 v22, v0

    #@1eb
    move-object/from16 v0, v22

    #@1ed
    move-object/from16 v1, p2

    #@1ef
    iput-object v0, v1, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1f1
    .line 2347
    move-object/from16 v0, p0

    #@1f3
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1f5
    move-object/from16 v22, v0

    #@1f7
    move-object/from16 v0, v22

    #@1f9
    move-object/from16 v1, p0

    #@1fb
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@1fd
    .line 2351
    :goto_a
    move-object/from16 v0, p0

    #@1ff
    iget-byte v0, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    #@201
    move/from16 v22, v0

    #@203
    move-object/from16 v0, p2

    #@205
    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@207
    move/from16 v23, v0

    #@209
    move/from16 v0, v22

    #@20b
    move/from16 v1, v23

    #@20d
    if-ge v0, v1, :cond_13

    #@20f
    .line 2352
    const/16 v22, 0x0

    #@211
    move-object/from16 v0, v22

    #@213
    move-object/from16 v1, p0

    #@215
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@217
    .line 2354
    :cond_13
    move-object/from16 v0, p2

    #@219
    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    #@21b
    move/from16 v22, v0

    #@21d
    move/from16 v0, v22

    #@21f
    move-object/from16 v1, p0

    #@221
    iput-byte v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    #@223
    .line 2356
    if-eqz v4, :cond_14

    #@225
    .line 2358
    move-object/from16 v0, p2

    #@227
    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    #@229
    move/from16 v22, v0

    #@22b
    move-object/from16 v0, p1

    #@22d
    move/from16 v1, v22

    #@22f
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@232
    .line 2224
    :cond_14
    return-void

    #@233
    .line 2238
    .end local v4    # "batteryChargeChanged":Z
    .end local v5    # "batteryLevelInt":I
    .end local v6    # "batteryLevelIntChanged":Z
    .end local v8    # "computeStepDetails":Z
    .end local v9    # "deltaTimeToken":I
    .end local v12    # "firstToken":I
    .end local v13    # "includeStepDetails":I
    .end local v17    # "state2IntChanged":Z
    .end local v18    # "stateInt":I
    .end local v19    # "stateIntChanged":Z
    :cond_15
    const-wide/32 v22, 0x7fffd

    #@236
    cmp-long v22, v10, v22

    #@238
    if-ltz v22, :cond_16

    #@23a
    .line 2239
    const v9, 0x7fffe

    #@23d
    .restart local v9    # "deltaTimeToken":I
    goto/16 :goto_0

    #@23f
    .line 2241
    .end local v9    # "deltaTimeToken":I
    :cond_16
    long-to-int v9, v10

    #@240
    .restart local v9    # "deltaTimeToken":I
    goto/16 :goto_0

    #@242
    .line 2245
    .restart local v12    # "firstToken":I
    :cond_17
    const/4 v13, 0x0

    #@243
    goto/16 :goto_1

    #@245
    .line 2246
    .restart local v13    # "includeStepDetails":I
    :cond_18
    const/4 v8, 0x1

    #@246
    .restart local v8    # "computeStepDetails":Z
    goto/16 :goto_2

    #@248
    .line 2247
    .end local v8    # "computeStepDetails":Z
    :cond_19
    const/4 v8, 0x0

    #@249
    .restart local v8    # "computeStepDetails":Z
    goto/16 :goto_2

    #@24b
    .line 2249
    .restart local v5    # "batteryLevelInt":I
    :cond_1a
    const/4 v6, 0x0

    #@24c
    goto/16 :goto_3

    #@24e
    .line 2254
    .restart local v6    # "batteryLevelIntChanged":Z
    .restart local v18    # "stateInt":I
    :cond_1b
    const/16 v19, 0x0

    #@250
    goto/16 :goto_4

    #@252
    .line 2258
    .restart local v19    # "stateIntChanged":Z
    :cond_1c
    const/16 v17, 0x0

    #@254
    goto/16 :goto_5

    #@256
    .line 2269
    .restart local v17    # "state2IntChanged":Z
    :cond_1d
    const/4 v4, 0x0

    #@257
    goto/16 :goto_6

    #@259
    .line 2283
    .restart local v4    # "batteryChargeChanged":Z
    :cond_1e
    move-object/from16 v0, p1

    #@25b
    invoke-virtual {v0, v10, v11}, Landroid/os/Parcel;->writeLong(J)V

    #@25e
    goto/16 :goto_7

    #@260
    .line 2316
    :cond_1f
    const v20, 0xffff

    #@263
    .restart local v20    # "wakeLockIndex":I
    goto/16 :goto_8

    #@265
    .line 2323
    :cond_20
    const v21, 0xffff

    #@268
    .restart local v21    # "wakeReasonIndex":I
    goto/16 :goto_9

    #@26a
    .line 2349
    .end local v20    # "wakeLockIndex":I
    .end local v21    # "wakeReasonIndex":I
    :cond_21
    const/16 v22, 0x0

    #@26c
    move-object/from16 v0, v22

    #@26e
    move-object/from16 v1, p2

    #@270
    iput-object v0, v1, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    #@272
    goto :goto_a
.end method

.method writeLocked(Z)V
    .locals 4
    .param p1, "sync"    # Z

    #@0
    .prologue
    .line 9857
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    #@2
    if-nez v1, :cond_0

    #@4
    .line 9858
    const-string/jumbo v1, "BatteryStats"

    #@7
    const-string/jumbo v2, "writeLocked: no file associated with this instance"

    #@a
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    #@d
    .line 9859
    return-void

    #@e
    .line 9862
    :cond_0
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mShuttingDown:Z

    #@10
    if-eqz v1, :cond_1

    #@12
    .line 9863
    return-void

    #@13
    .line 9866
    :cond_1
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    #@16
    move-result-object v0

    #@17
    .line 9867
    .local v0, "out":Landroid/os/Parcel;
    const/4 v1, 0x1

    #@18
    invoke-virtual {p0, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    #@1b
    .line 9868
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@1d
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@20
    move-result-wide v2

    #@21
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    #@23
    .line 9870
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    #@25
    if-eqz v1, :cond_2

    #@27
    .line 9871
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    #@29
    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V

    #@2c
    .line 9873
    :cond_2
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    #@2e
    .line 9875
    if-eqz p1, :cond_3

    #@30
    .line 9876
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->commitPendingDataToDisk()V

    #@33
    .line 9856
    :goto_0
    return-void

    #@34
    .line 9878
    :cond_3
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    #@37
    move-result-object v1

    #@38
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$5;

    #@3a
    invoke-direct {v2, p0}, Lcom/android/internal/os/BatteryStatsImpl$5;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V

    #@3d
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    #@40
    goto :goto_0
.end method

.method writeOldHistory(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "out"    # Landroid/os/Parcel;

    #@0
    .prologue
    .line 10086
    return-void
.end method

.method public writeSummaryToParcel(Landroid/os/Parcel;Z)V
    .locals 51
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclHistory"    # Z

    #@0
    .prologue
    .line 10446
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    #@3
    .line 10450
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    #@6
    move-result-wide v38

    #@7
    .line 10452
    .local v38, "startClockTime":J
    move-object/from16 v0, p0

    #@9
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@e
    move-result-wide v4

    #@f
    const-wide/16 v48, 0x3e8

    #@11
    mul-long v6, v4, v48

    #@13
    .line 10453
    .local v6, "NOW_SYS":J
    move-object/from16 v0, p0

    #@15
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@17
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@1a
    move-result-wide v4

    #@1b
    const-wide/16 v48, 0x3e8

    #@1d
    mul-long v8, v4, v48

    #@1f
    .line 10455
    .local v8, "NOWREAL_SYS":J
    const/16 v4, 0x93

    #@21
    move-object/from16 v0, p1

    #@23
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@26
    .line 10457
    const/4 v4, 0x1

    #@27
    move-object/from16 v0, p0

    #@29
    move-object/from16 v1, p1

    #@2b
    move/from16 v2, p2

    #@2d
    invoke-virtual {v0, v1, v2, v4}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistory(Landroid/os/Parcel;ZZ)V

    #@30
    .line 10459
    move-object/from16 v0, p0

    #@32
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@34
    move-object/from16 v0, p1

    #@36
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@39
    .line 10460
    const/4 v4, 0x0

    #@3a
    move-object/from16 v0, p0

    #@3c
    invoke-virtual {v0, v6, v7, v4}, Lcom/android/internal/os/BatteryStatsImpl;->computeUptime(JI)J

    #@3f
    move-result-wide v4

    #@40
    move-object/from16 v0, p1

    #@42
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@45
    .line 10461
    const/4 v4, 0x0

    #@46
    move-object/from16 v0, p0

    #@48
    invoke-virtual {v0, v8, v9, v4}, Lcom/android/internal/os/BatteryStatsImpl;->computeRealtime(JI)J

    #@4b
    move-result-wide v4

    #@4c
    move-object/from16 v0, p1

    #@4e
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@51
    .line 10462
    move-object/from16 v0, p1

    #@53
    move-wide/from16 v1, v38

    #@55
    invoke-virtual {v0, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    #@58
    .line 10463
    move-object/from16 v0, p0

    #@5a
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    #@5c
    move-object/from16 v0, p1

    #@5e
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@61
    .line 10464
    move-object/from16 v0, p0

    #@63
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    #@65
    move-object/from16 v0, p1

    #@67
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@6a
    .line 10465
    move-object/from16 v0, p0

    #@6c
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@6e
    move-object/from16 v5, p1

    #@70
    invoke-virtual/range {v4 .. v9}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    #@73
    .line 10466
    move-object/from16 v0, p0

    #@75
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@77
    move-object/from16 v5, p1

    #@79
    invoke-virtual/range {v4 .. v9}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    #@7c
    .line 10467
    move-object/from16 v0, p0

    #@7e
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@80
    move-object/from16 v0, p1

    #@82
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@85
    .line 10468
    move-object/from16 v0, p0

    #@87
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@89
    move-object/from16 v0, p1

    #@8b
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@8e
    .line 10469
    move-object/from16 v0, p0

    #@90
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@92
    move-object/from16 v0, p1

    #@94
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@97
    .line 10470
    move-object/from16 v0, p0

    #@99
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@9b
    move-object/from16 v0, p1

    #@9d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@a0
    .line 10471
    move-object/from16 v0, p0

    #@a2
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@a4
    move-object/from16 v0, p1

    #@a6
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@a9
    .line 10472
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    #@ac
    move-result v4

    #@ad
    move-object/from16 v0, p1

    #@af
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@b2
    .line 10473
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    #@b5
    move-result v4

    #@b6
    move-object/from16 v0, p1

    #@b8
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@bb
    .line 10474
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenOnSinceCharge()I

    #@be
    move-result v4

    #@bf
    move-object/from16 v0, p1

    #@c1
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@c4
    .line 10475
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenOffSinceCharge()I

    #@c7
    move-result v4

    #@c8
    move-object/from16 v0, p1

    #@ca
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@cd
    .line 10476
    move-object/from16 v0, p0

    #@cf
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@d1
    move-object/from16 v0, p1

    #@d3
    invoke-virtual {v4, v0}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    #@d6
    .line 10477
    move-object/from16 v0, p0

    #@d8
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@da
    move-object/from16 v0, p1

    #@dc
    invoke-virtual {v4, v0}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    #@df
    .line 10478
    move-object/from16 v0, p0

    #@e1
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@e3
    move-object/from16 v0, p1

    #@e5
    invoke-virtual {v4, v0}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    #@e8
    .line 10479
    move-object/from16 v0, p0

    #@ea
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@ec
    move-object/from16 v0, p1

    #@ee
    invoke-virtual {v4, v0}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    #@f1
    .line 10480
    move-object/from16 v0, p0

    #@f3
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@f5
    move-object/from16 v0, p1

    #@f7
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@fa
    .line 10481
    move-object/from16 v0, p0

    #@fc
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@fe
    move-object/from16 v0, p1

    #@100
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@103
    .line 10482
    move-object/from16 v0, p0

    #@105
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@107
    if-eqz v4, :cond_1

    #@109
    .line 10483
    move-object/from16 v0, p0

    #@10b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@10d
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    #@110
    move-result v12

    #@111
    .line 10484
    .local v12, "NPKG":I
    move-object/from16 v0, p1

    #@113
    invoke-virtual {v0, v12}, Landroid/os/Parcel;->writeInt(I)V

    #@116
    .line 10485
    const/16 v23, 0x0

    #@118
    .local v23, "i":I
    :goto_0
    move/from16 v0, v23

    #@11a
    if-ge v0, v12, :cond_2

    #@11c
    .line 10486
    move-object/from16 v0, p0

    #@11e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    #@120
    move/from16 v0, v23

    #@122
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    #@125
    move-result-object v33

    #@126
    check-cast v33, Landroid/os/BatteryStats$PackageChange;

    #@128
    .line 10487
    .local v33, "pc":Landroid/os/BatteryStats$PackageChange;
    move-object/from16 v0, v33

    #@12a
    iget-object v4, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    #@12c
    move-object/from16 v0, p1

    #@12e
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@131
    .line 10488
    move-object/from16 v0, v33

    #@133
    iget-boolean v4, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    #@135
    if-eqz v4, :cond_0

    #@137
    const/4 v4, 0x1

    #@138
    :goto_1
    move-object/from16 v0, p1

    #@13a
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@13d
    .line 10489
    move-object/from16 v0, v33

    #@13f
    iget v4, v0, Landroid/os/BatteryStats$PackageChange;->mVersionCode:I

    #@141
    move-object/from16 v0, p1

    #@143
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@146
    .line 10485
    add-int/lit8 v23, v23, 0x1

    #@148
    goto :goto_0

    #@149
    .line 10488
    :cond_0
    const/4 v4, 0x0

    #@14a
    goto :goto_1

    #@14b
    .line 10492
    .end local v12    # "NPKG":I
    .end local v23    # "i":I
    .end local v33    # "pc":Landroid/os/BatteryStats$PackageChange;
    :cond_1
    const/4 v4, 0x0

    #@14c
    move-object/from16 v0, p1

    #@14e
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@151
    .line 10494
    :cond_2
    move-object/from16 v0, p0

    #@153
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    #@155
    move-object/from16 v0, p1

    #@157
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@15a
    .line 10495
    move-object/from16 v0, p0

    #@15c
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    #@15e
    move-object/from16 v0, p1

    #@160
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@163
    .line 10496
    move-object/from16 v0, p0

    #@165
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    #@167
    move-object/from16 v0, p1

    #@169
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@16c
    .line 10498
    move-object/from16 v0, p0

    #@16e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@170
    move-object/from16 v0, p1

    #@172
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@175
    .line 10499
    const/16 v23, 0x0

    #@177
    .restart local v23    # "i":I
    :goto_2
    const/4 v4, 0x5

    #@178
    move/from16 v0, v23

    #@17a
    if-ge v0, v4, :cond_3

    #@17c
    .line 10500
    move-object/from16 v0, p0

    #@17e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@180
    aget-object v4, v4, v23

    #@182
    move-object/from16 v0, p1

    #@184
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@187
    .line 10499
    add-int/lit8 v23, v23, 0x1

    #@189
    goto :goto_2

    #@18a
    .line 10502
    :cond_3
    move-object/from16 v0, p0

    #@18c
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@18e
    move-object/from16 v0, p1

    #@190
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@193
    .line 10503
    move-object/from16 v0, p0

    #@195
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@197
    move-object/from16 v0, p1

    #@199
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@19c
    .line 10504
    move-object/from16 v0, p0

    #@19e
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    #@1a0
    move-object/from16 v0, p1

    #@1a2
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@1a5
    .line 10505
    move-object/from16 v0, p0

    #@1a7
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    #@1a9
    move-object/from16 v0, p1

    #@1ab
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@1ae
    .line 10506
    move-object/from16 v0, p0

    #@1b0
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1b2
    move-object/from16 v0, p1

    #@1b4
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@1b7
    .line 10507
    move-object/from16 v0, p0

    #@1b9
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1bb
    move-object/from16 v0, p1

    #@1bd
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@1c0
    .line 10508
    move-object/from16 v0, p0

    #@1c2
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1c4
    move-object/from16 v0, p1

    #@1c6
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@1c9
    .line 10509
    move-object/from16 v0, p0

    #@1cb
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1cd
    move-object/from16 v0, p1

    #@1cf
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@1d2
    .line 10510
    move-object/from16 v0, p0

    #@1d4
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1d6
    move-object/from16 v0, p1

    #@1d8
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@1db
    .line 10511
    const/16 v23, 0x0

    #@1dd
    :goto_3
    const/4 v4, 0x5

    #@1de
    move/from16 v0, v23

    #@1e0
    if-ge v0, v4, :cond_4

    #@1e2
    .line 10512
    move-object/from16 v0, p0

    #@1e4
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1e6
    aget-object v4, v4, v23

    #@1e8
    move-object/from16 v0, p1

    #@1ea
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@1ed
    .line 10511
    add-int/lit8 v23, v23, 0x1

    #@1ef
    goto :goto_3

    #@1f0
    .line 10514
    :cond_4
    move-object/from16 v0, p0

    #@1f2
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1f4
    move-object/from16 v0, p1

    #@1f6
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@1f9
    .line 10515
    const/16 v23, 0x0

    #@1fb
    :goto_4
    const/16 v4, 0x11

    #@1fd
    move/from16 v0, v23

    #@1ff
    if-ge v0, v4, :cond_5

    #@201
    .line 10516
    move-object/from16 v0, p0

    #@203
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@205
    aget-object v4, v4, v23

    #@207
    move-object/from16 v0, p1

    #@209
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@20c
    .line 10515
    add-int/lit8 v23, v23, 0x1

    #@20e
    goto :goto_4

    #@20f
    .line 10518
    :cond_5
    const/16 v23, 0x0

    #@211
    :goto_5
    const/4 v4, 0x6

    #@212
    move/from16 v0, v23

    #@214
    if-ge v0, v4, :cond_6

    #@216
    .line 10519
    move-object/from16 v0, p0

    #@218
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@21a
    aget-object v4, v4, v23

    #@21c
    move-object/from16 v0, p1

    #@21e
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@221
    .line 10520
    move-object/from16 v0, p0

    #@223
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@225
    aget-object v4, v4, v23

    #@227
    move-object/from16 v0, p1

    #@229
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@22c
    .line 10518
    add-int/lit8 v23, v23, 0x1

    #@22e
    goto :goto_5

    #@22f
    .line 10522
    :cond_6
    move-object/from16 v0, p0

    #@231
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@233
    move-object/from16 v0, p1

    #@235
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@238
    .line 10523
    move-object/from16 v0, p0

    #@23a
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@23c
    move-object/from16 v0, p1

    #@23e
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@241
    .line 10524
    move-object/from16 v0, p0

    #@243
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@245
    move-object/from16 v0, p1

    #@247
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@24a
    .line 10525
    move-object/from16 v0, p0

    #@24c
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@24e
    move-object/from16 v0, p1

    #@250
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@253
    .line 10526
    move-object/from16 v0, p0

    #@255
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@257
    move-object/from16 v0, p1

    #@259
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@25c
    .line 10527
    move-object/from16 v0, p0

    #@25e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@260
    move-object/from16 v0, p1

    #@262
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@265
    .line 10528
    move-object/from16 v0, p0

    #@267
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@269
    move-object/from16 v0, p1

    #@26b
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@26e
    .line 10529
    const/16 v23, 0x0

    #@270
    :goto_6
    const/16 v4, 0x8

    #@272
    move/from16 v0, v23

    #@274
    if-ge v0, v4, :cond_7

    #@276
    .line 10530
    move-object/from16 v0, p0

    #@278
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@27a
    aget-object v4, v4, v23

    #@27c
    move-object/from16 v0, p1

    #@27e
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@281
    .line 10529
    add-int/lit8 v23, v23, 0x1

    #@283
    goto :goto_6

    #@284
    .line 10532
    :cond_7
    const/16 v23, 0x0

    #@286
    :goto_7
    const/16 v4, 0xd

    #@288
    move/from16 v0, v23

    #@28a
    if-ge v0, v4, :cond_8

    #@28c
    .line 10533
    move-object/from16 v0, p0

    #@28e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@290
    aget-object v4, v4, v23

    #@292
    move-object/from16 v0, p1

    #@294
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@297
    .line 10532
    add-int/lit8 v23, v23, 0x1

    #@299
    goto :goto_7

    #@29a
    .line 10535
    :cond_8
    const/16 v23, 0x0

    #@29c
    :goto_8
    const/4 v4, 0x5

    #@29d
    move/from16 v0, v23

    #@29f
    if-ge v0, v4, :cond_9

    #@2a1
    .line 10536
    move-object/from16 v0, p0

    #@2a3
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2a5
    aget-object v4, v4, v23

    #@2a7
    move-object/from16 v0, p1

    #@2a9
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@2ac
    .line 10535
    add-int/lit8 v23, v23, 0x1

    #@2ae
    goto :goto_8

    #@2af
    .line 10538
    :cond_9
    move-object/from16 v0, p0

    #@2b1
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@2b3
    move-object/from16 v0, p1

    #@2b5
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    #@2b8
    .line 10539
    move-object/from16 v0, p0

    #@2ba
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@2bc
    move-object/from16 v0, p1

    #@2be
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    #@2c1
    .line 10540
    move-object/from16 v0, p0

    #@2c3
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@2c5
    move-object/from16 v0, p1

    #@2c7
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    #@2ca
    .line 10541
    move-object/from16 v0, p0

    #@2cc
    iget-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@2ce
    if-eqz v4, :cond_a

    #@2d0
    const/4 v4, 0x1

    #@2d1
    :goto_9
    move-object/from16 v0, p1

    #@2d3
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2d6
    .line 10542
    move-object/from16 v0, p0

    #@2d8
    iget-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@2da
    if-eqz v4, :cond_b

    #@2dc
    const/4 v4, 0x1

    #@2dd
    :goto_a
    move-object/from16 v0, p1

    #@2df
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2e2
    .line 10543
    move-object/from16 v0, p0

    #@2e4
    iget-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@2e6
    if-eqz v4, :cond_c

    #@2e8
    const/4 v4, 0x1

    #@2e9
    :goto_b
    move-object/from16 v0, p1

    #@2eb
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2ee
    .line 10545
    move-object/from16 v0, p0

    #@2f0
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    #@2f2
    move-object/from16 v0, p1

    #@2f4
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2f7
    .line 10546
    move-object/from16 v0, p0

    #@2f9
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@2fb
    move-object/from16 v0, p1

    #@2fd
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@300
    .line 10547
    move-object/from16 v0, p0

    #@302
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@304
    move-object/from16 v0, p1

    #@306
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@309
    .line 10548
    move-object/from16 v0, p0

    #@30b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@30d
    move-object/from16 v0, p1

    #@30f
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@312
    .line 10550
    move-object/from16 v0, p0

    #@314
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@316
    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    #@319
    move-result v4

    #@31a
    move-object/from16 v0, p1

    #@31c
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@31f
    .line 10551
    move-object/from16 v0, p0

    #@321
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@323
    invoke-virtual {v4}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@326
    move-result-object v4

    #@327
    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@32a
    move-result-object v22

    #@32b
    .local v22, "ent$iterator":Ljava/util/Iterator;
    :goto_c
    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->hasNext()Z

    #@32e
    move-result v4

    #@32f
    if-eqz v4, :cond_e

    #@331
    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@334
    move-result-object v20

    #@335
    check-cast v20, Ljava/util/Map$Entry;

    #@337
    .line 10552
    .local v20, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface/range {v20 .. v20}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@33a
    move-result-object v32

    #@33b
    check-cast v32, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    #@33d
    .line 10553
    .local v32, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v32, :cond_d

    #@33f
    .line 10554
    const/4 v4, 0x1

    #@340
    move-object/from16 v0, p1

    #@342
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@345
    .line 10555
    invoke-interface/range {v20 .. v20}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@348
    move-result-object v4

    #@349
    check-cast v4, Ljava/lang/String;

    #@34b
    move-object/from16 v0, p1

    #@34d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@350
    .line 10556
    move-object/from16 v0, v32

    #@352
    move-object/from16 v1, p1

    #@354
    invoke-virtual {v0, v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@357
    goto :goto_c

    #@358
    .line 10541
    .end local v20    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v22    # "ent$iterator":Ljava/util/Iterator;
    .end local v32    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :cond_a
    const/4 v4, 0x0

    #@359
    goto/16 :goto_9

    #@35b
    .line 10542
    :cond_b
    const/4 v4, 0x0

    #@35c
    goto :goto_a

    #@35d
    .line 10543
    :cond_c
    const/4 v4, 0x0

    #@35e
    goto :goto_b

    #@35f
    .line 10558
    .restart local v20    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .restart local v22    # "ent$iterator":Ljava/util/Iterator;
    .restart local v32    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :cond_d
    const/4 v4, 0x0

    #@360
    move-object/from16 v0, p1

    #@362
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@365
    goto :goto_c

    #@366
    .line 10562
    .end local v20    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v32    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :cond_e
    move-object/from16 v0, p0

    #@368
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@36a
    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    #@36d
    move-result v4

    #@36e
    move-object/from16 v0, p1

    #@370
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@373
    .line 10563
    move-object/from16 v0, p0

    #@375
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@377
    invoke-virtual {v4}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@37a
    move-result-object v4

    #@37b
    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@37e
    move-result-object v22

    #@37f
    :goto_d
    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->hasNext()Z

    #@382
    move-result v4

    #@383
    if-eqz v4, :cond_10

    #@385
    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@388
    move-result-object v20

    #@389
    check-cast v20, Ljava/util/Map$Entry;

    #@38b
    .line 10564
    .restart local v20    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface/range {v20 .. v20}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@38e
    move-result-object v41

    #@38f
    check-cast v41, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@391
    .line 10565
    .local v41, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v41, :cond_f

    #@393
    .line 10566
    const/4 v4, 0x1

    #@394
    move-object/from16 v0, p1

    #@396
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@399
    .line 10567
    invoke-interface/range {v20 .. v20}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@39c
    move-result-object v4

    #@39d
    check-cast v4, Ljava/lang/String;

    #@39f
    move-object/from16 v0, p1

    #@3a1
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@3a4
    .line 10568
    move-object/from16 v0, v41

    #@3a6
    move-object/from16 v1, p1

    #@3a8
    invoke-virtual {v0, v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@3ab
    goto :goto_d

    #@3ac
    .line 10570
    :cond_f
    const/4 v4, 0x0

    #@3ad
    move-object/from16 v0, p1

    #@3af
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@3b2
    goto :goto_d

    #@3b3
    .line 10574
    .end local v20    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v41    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_10
    move-object/from16 v0, p0

    #@3b5
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@3b7
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@3ba
    move-result v15

    #@3bb
    .line 10575
    .local v15, "NU":I
    move-object/from16 v0, p1

    #@3bd
    invoke-virtual {v0, v15}, Landroid/os/Parcel;->writeInt(I)V

    #@3c0
    .line 10576
    const/16 v28, 0x0

    #@3c2
    .local v28, "iu":I
    :goto_e
    move/from16 v0, v28

    #@3c4
    if-ge v0, v15, :cond_36

    #@3c6
    .line 10577
    move-object/from16 v0, p0

    #@3c8
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@3ca
    move/from16 v0, v28

    #@3cc
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    #@3cf
    move-result v4

    #@3d0
    move-object/from16 v0, p1

    #@3d2
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@3d5
    .line 10578
    move-object/from16 v0, p0

    #@3d7
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@3d9
    move/from16 v0, v28

    #@3db
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@3de
    move-result-object v44

    #@3df
    check-cast v44, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@3e1
    .line 10580
    .local v44, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v0, v44

    #@3e3
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3e5
    if-eqz v4, :cond_11

    #@3e7
    .line 10581
    const/4 v4, 0x1

    #@3e8
    move-object/from16 v0, p1

    #@3ea
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@3ed
    .line 10582
    move-object/from16 v0, v44

    #@3ef
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3f1
    move-object/from16 v0, p1

    #@3f3
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@3f6
    .line 10586
    :goto_f
    move-object/from16 v0, v44

    #@3f8
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@3fa
    if-eqz v4, :cond_12

    #@3fc
    .line 10587
    const/4 v4, 0x1

    #@3fd
    move-object/from16 v0, p1

    #@3ff
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@402
    .line 10588
    move-object/from16 v0, v44

    #@404
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@406
    move-object/from16 v0, p1

    #@408
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@40b
    .line 10592
    :goto_10
    move-object/from16 v0, v44

    #@40d
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@40f
    if-eqz v4, :cond_13

    #@411
    .line 10593
    const/4 v4, 0x1

    #@412
    move-object/from16 v0, p1

    #@414
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@417
    .line 10594
    move-object/from16 v0, v44

    #@419
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@41b
    move-object/from16 v0, p1

    #@41d
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@420
    .line 10598
    :goto_11
    const/16 v23, 0x0

    #@422
    :goto_12
    const/4 v4, 0x5

    #@423
    move/from16 v0, v23

    #@425
    if-ge v0, v4, :cond_15

    #@427
    .line 10599
    move-object/from16 v0, v44

    #@429
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@42b
    aget-object v4, v4, v23

    #@42d
    if-eqz v4, :cond_14

    #@42f
    .line 10600
    const/4 v4, 0x1

    #@430
    move-object/from16 v0, p1

    #@432
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@435
    .line 10601
    move-object/from16 v0, v44

    #@437
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@439
    aget-object v4, v4, v23

    #@43b
    move-object/from16 v0, p1

    #@43d
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@440
    .line 10598
    :goto_13
    add-int/lit8 v23, v23, 0x1

    #@442
    goto :goto_12

    #@443
    .line 10584
    :cond_11
    const/4 v4, 0x0

    #@444
    move-object/from16 v0, p1

    #@446
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@449
    goto :goto_f

    #@44a
    .line 10590
    :cond_12
    const/4 v4, 0x0

    #@44b
    move-object/from16 v0, p1

    #@44d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@450
    goto :goto_10

    #@451
    .line 10596
    :cond_13
    const/4 v4, 0x0

    #@452
    move-object/from16 v0, p1

    #@454
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@457
    goto :goto_11

    #@458
    .line 10603
    :cond_14
    const/4 v4, 0x0

    #@459
    move-object/from16 v0, p1

    #@45b
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@45e
    goto :goto_13

    #@45f
    .line 10606
    :cond_15
    move-object/from16 v0, v44

    #@461
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@463
    if-eqz v4, :cond_16

    #@465
    .line 10607
    const/4 v4, 0x1

    #@466
    move-object/from16 v0, p1

    #@468
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@46b
    .line 10608
    move-object/from16 v0, v44

    #@46d
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@46f
    move-object/from16 v0, p1

    #@471
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@474
    .line 10612
    :goto_14
    move-object/from16 v0, v44

    #@476
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@478
    if-eqz v4, :cond_17

    #@47a
    .line 10613
    const/4 v4, 0x1

    #@47b
    move-object/from16 v0, p1

    #@47d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@480
    .line 10614
    move-object/from16 v0, v44

    #@482
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@484
    move-object/from16 v0, p1

    #@486
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@489
    .line 10618
    :goto_15
    move-object/from16 v0, v44

    #@48b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@48d
    if-eqz v4, :cond_18

    #@48f
    .line 10619
    const/4 v4, 0x1

    #@490
    move-object/from16 v0, p1

    #@492
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@495
    .line 10620
    move-object/from16 v0, v44

    #@497
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@499
    move-object/from16 v0, p1

    #@49b
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@49e
    .line 10624
    :goto_16
    move-object/from16 v0, v44

    #@4a0
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4a2
    if-eqz v4, :cond_19

    #@4a4
    .line 10625
    const/4 v4, 0x1

    #@4a5
    move-object/from16 v0, p1

    #@4a7
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@4aa
    .line 10626
    move-object/from16 v0, v44

    #@4ac
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4ae
    move-object/from16 v0, p1

    #@4b0
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@4b3
    .line 10630
    :goto_17
    move-object/from16 v0, v44

    #@4b5
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4b7
    if-eqz v4, :cond_1a

    #@4b9
    .line 10631
    const/4 v4, 0x1

    #@4ba
    move-object/from16 v0, p1

    #@4bc
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@4bf
    .line 10632
    move-object/from16 v0, v44

    #@4c1
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4c3
    move-object/from16 v0, p1

    #@4c5
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@4c8
    .line 10636
    :goto_18
    move-object/from16 v0, v44

    #@4ca
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4cc
    if-eqz v4, :cond_1b

    #@4ce
    .line 10637
    const/4 v4, 0x1

    #@4cf
    move-object/from16 v0, p1

    #@4d1
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@4d4
    .line 10638
    move-object/from16 v0, v44

    #@4d6
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4d8
    move-object/from16 v0, p1

    #@4da
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@4dd
    .line 10642
    :goto_19
    move-object/from16 v0, v44

    #@4df
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4e1
    if-eqz v4, :cond_1c

    #@4e3
    .line 10643
    const/4 v4, 0x1

    #@4e4
    move-object/from16 v0, p1

    #@4e6
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@4e9
    .line 10644
    move-object/from16 v0, v44

    #@4eb
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4ed
    move-object/from16 v0, p1

    #@4ef
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@4f2
    .line 10648
    :goto_1a
    const/16 v23, 0x0

    #@4f4
    :goto_1b
    const/4 v4, 0x6

    #@4f5
    move/from16 v0, v23

    #@4f7
    if-ge v0, v4, :cond_1e

    #@4f9
    .line 10649
    move-object/from16 v0, v44

    #@4fb
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@4fd
    aget-object v4, v4, v23

    #@4ff
    if-eqz v4, :cond_1d

    #@501
    .line 10650
    const/4 v4, 0x1

    #@502
    move-object/from16 v0, p1

    #@504
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@507
    .line 10651
    move-object/from16 v0, v44

    #@509
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@50b
    aget-object v4, v4, v23

    #@50d
    move-object/from16 v0, p1

    #@50f
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@512
    .line 10648
    :goto_1c
    add-int/lit8 v23, v23, 0x1

    #@514
    goto :goto_1b

    #@515
    .line 10610
    :cond_16
    const/4 v4, 0x0

    #@516
    move-object/from16 v0, p1

    #@518
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@51b
    goto/16 :goto_14

    #@51d
    .line 10616
    :cond_17
    const/4 v4, 0x0

    #@51e
    move-object/from16 v0, p1

    #@520
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@523
    goto/16 :goto_15

    #@525
    .line 10622
    :cond_18
    const/4 v4, 0x0

    #@526
    move-object/from16 v0, p1

    #@528
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@52b
    goto/16 :goto_16

    #@52d
    .line 10628
    :cond_19
    const/4 v4, 0x0

    #@52e
    move-object/from16 v0, p1

    #@530
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@533
    goto :goto_17

    #@534
    .line 10634
    :cond_1a
    const/4 v4, 0x0

    #@535
    move-object/from16 v0, p1

    #@537
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@53a
    goto :goto_18

    #@53b
    .line 10640
    :cond_1b
    const/4 v4, 0x0

    #@53c
    move-object/from16 v0, p1

    #@53e
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@541
    goto :goto_19

    #@542
    .line 10646
    :cond_1c
    const/4 v4, 0x0

    #@543
    move-object/from16 v0, p1

    #@545
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@548
    goto :goto_1a

    #@549
    .line 10653
    :cond_1d
    const/4 v4, 0x0

    #@54a
    move-object/from16 v0, p1

    #@54c
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@54f
    goto :goto_1c

    #@550
    .line 10656
    :cond_1e
    move-object/from16 v0, v44

    #@552
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    #@554
    if-eqz v4, :cond_20

    #@556
    .line 10657
    const/4 v4, 0x1

    #@557
    move-object/from16 v0, p1

    #@559
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@55c
    .line 10658
    move-object/from16 v0, v44

    #@55e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    #@560
    move-object/from16 v0, p1

    #@562
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@565
    .line 10663
    :goto_1d
    move-object/from16 v0, v44

    #@567
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    #@569
    if-nez v4, :cond_21

    #@56b
    .line 10664
    const/4 v4, 0x0

    #@56c
    move-object/from16 v0, p1

    #@56e
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@571
    .line 10672
    :cond_1f
    move-object/from16 v0, v44

    #@573
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@575
    if-nez v4, :cond_22

    #@577
    .line 10673
    const/4 v4, 0x0

    #@578
    move-object/from16 v0, p1

    #@57a
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@57d
    .line 10684
    :goto_1e
    move-object/from16 v0, v44

    #@57f
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@581
    move-object/from16 v0, p1

    #@583
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@586
    .line 10685
    move-object/from16 v0, v44

    #@588
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@58a
    move-object/from16 v0, p1

    #@58c
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@58f
    .line 10686
    move-object/from16 v0, v44

    #@591
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuPower:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@593
    move-object/from16 v0, p1

    #@595
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@598
    .line 10688
    move-object/from16 v0, v44

    #@59a
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@59c
    if-eqz v4, :cond_27

    #@59e
    .line 10689
    const/4 v4, 0x1

    #@59f
    move-object/from16 v0, p1

    #@5a1
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@5a4
    .line 10690
    move-object/from16 v0, v44

    #@5a6
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@5a8
    array-length v4, v4

    #@5a9
    move-object/from16 v0, p1

    #@5ab
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@5ae
    .line 10691
    move-object/from16 v0, v44

    #@5b0
    iget-object v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeed:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@5b2
    move-object/from16 v47, v0

    #@5b4
    const/4 v4, 0x0

    #@5b5
    move-object/from16 v0, v47

    #@5b7
    array-length v0, v0

    #@5b8
    move/from16 v48, v0

    #@5ba
    move v5, v4

    #@5bb
    :goto_1f
    move/from16 v0, v48

    #@5bd
    if-ge v5, v0, :cond_28

    #@5bf
    aget-object v19, v47, v5

    #@5c1
    .line 10692
    .local v19, "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    if-eqz v19, :cond_25

    #@5c3
    .line 10693
    const/4 v4, 0x1

    #@5c4
    move-object/from16 v0, p1

    #@5c6
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@5c9
    .line 10694
    move-object/from16 v0, v19

    #@5cb
    array-length v4, v0

    #@5cc
    move-object/from16 v0, p1

    #@5ce
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@5d1
    .line 10695
    const/4 v4, 0x0

    #@5d2
    move-object/from16 v0, v19

    #@5d4
    array-length v0, v0

    #@5d5
    move/from16 v49, v0

    #@5d7
    :goto_20
    move/from16 v0, v49

    #@5d9
    if-ge v4, v0, :cond_26

    #@5db
    aget-object v18, v19, v4

    #@5dd
    .line 10696
    .local v18, "c":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    if-eqz v18, :cond_24

    #@5df
    .line 10697
    const/16 v50, 0x1

    #@5e1
    move-object/from16 v0, p1

    #@5e3
    move/from16 v1, v50

    #@5e5
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@5e8
    .line 10698
    move-object/from16 v0, v18

    #@5ea
    move-object/from16 v1, p1

    #@5ec
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@5ef
    .line 10695
    :goto_21
    add-int/lit8 v4, v4, 0x1

    #@5f1
    goto :goto_20

    #@5f2
    .line 10660
    .end local v18    # "c":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .end local v19    # "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :cond_20
    const/4 v4, 0x0

    #@5f3
    move-object/from16 v0, p1

    #@5f5
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@5f8
    goto/16 :goto_1d

    #@5fa
    .line 10666
    :cond_21
    const/4 v4, 0x1

    #@5fb
    move-object/from16 v0, p1

    #@5fd
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@600
    .line 10667
    const/16 v23, 0x0

    #@602
    :goto_22
    const/4 v4, 0x4

    #@603
    move/from16 v0, v23

    #@605
    if-ge v0, v4, :cond_1f

    #@607
    .line 10668
    move-object/from16 v0, v44

    #@609
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    #@60b
    aget-object v4, v4, v23

    #@60d
    move-object/from16 v0, p1

    #@60f
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@612
    .line 10667
    add-int/lit8 v23, v23, 0x1

    #@614
    goto :goto_22

    #@615
    .line 10675
    :cond_22
    const/4 v4, 0x1

    #@616
    move-object/from16 v0, p1

    #@618
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@61b
    .line 10676
    const/16 v23, 0x0

    #@61d
    :goto_23
    const/4 v4, 0x6

    #@61e
    move/from16 v0, v23

    #@620
    if-ge v0, v4, :cond_23

    #@622
    .line 10677
    move-object/from16 v0, v44

    #@624
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@626
    aget-object v4, v4, v23

    #@628
    move-object/from16 v0, p1

    #@62a
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@62d
    .line 10678
    move-object/from16 v0, v44

    #@62f
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@631
    aget-object v4, v4, v23

    #@633
    move-object/from16 v0, p1

    #@635
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@638
    .line 10676
    add-int/lit8 v23, v23, 0x1

    #@63a
    goto :goto_23

    #@63b
    .line 10680
    :cond_23
    move-object/from16 v0, v44

    #@63d
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@63f
    move-object/from16 v0, p1

    #@641
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@644
    .line 10681
    move-object/from16 v0, v44

    #@646
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@648
    move-object/from16 v0, p1

    #@64a
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@64d
    goto/16 :goto_1e

    #@64f
    .line 10700
    .restart local v18    # "c":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .restart local v19    # "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :cond_24
    const/16 v50, 0x0

    #@651
    move-object/from16 v0, p1

    #@653
    move/from16 v1, v50

    #@655
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@658
    goto :goto_21

    #@659
    .line 10704
    .end local v18    # "c":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :cond_25
    const/4 v4, 0x0

    #@65a
    move-object/from16 v0, p1

    #@65c
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@65f
    .line 10691
    :cond_26
    add-int/lit8 v4, v5, 0x1

    #@661
    move v5, v4

    #@662
    goto/16 :goto_1f

    #@664
    .line 10708
    .end local v19    # "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :cond_27
    const/4 v4, 0x0

    #@665
    move-object/from16 v0, p1

    #@667
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@66a
    .line 10711
    :cond_28
    move-object/from16 v0, v44

    #@66c
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWakelockStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    #@66e
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    #@671
    move-result-object v45

    #@672
    .line 10712
    .local v45, "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    invoke-virtual/range {v45 .. v45}, Landroid/util/ArrayMap;->size()I

    #@675
    move-result v16

    #@676
    .line 10713
    .local v16, "NW":I
    move-object/from16 v0, p1

    #@678
    move/from16 v1, v16

    #@67a
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@67d
    .line 10714
    const/16 v29, 0x0

    #@67f
    .local v29, "iw":I
    :goto_24
    move/from16 v0, v29

    #@681
    move/from16 v1, v16

    #@683
    if-ge v0, v1, :cond_2d

    #@685
    .line 10715
    move-object/from16 v0, v45

    #@687
    move/from16 v1, v29

    #@689
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    #@68c
    move-result-object v4

    #@68d
    check-cast v4, Ljava/lang/String;

    #@68f
    move-object/from16 v0, p1

    #@691
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@694
    .line 10716
    move-object/from16 v0, v45

    #@696
    move/from16 v1, v29

    #@698
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    #@69b
    move-result-object v46

    #@69c
    check-cast v46, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;

    #@69e
    .line 10717
    .local v46, "wl":Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;
    move-object/from16 v0, v46

    #@6a0
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6a2
    if-eqz v4, :cond_29

    #@6a4
    .line 10718
    const/4 v4, 0x1

    #@6a5
    move-object/from16 v0, p1

    #@6a7
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@6aa
    .line 10719
    move-object/from16 v0, v46

    #@6ac
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6ae
    move-object/from16 v0, p1

    #@6b0
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@6b3
    .line 10723
    :goto_25
    move-object/from16 v0, v46

    #@6b5
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6b7
    if-eqz v4, :cond_2a

    #@6b9
    .line 10724
    const/4 v4, 0x1

    #@6ba
    move-object/from16 v0, p1

    #@6bc
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@6bf
    .line 10725
    move-object/from16 v0, v46

    #@6c1
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6c3
    move-object/from16 v0, p1

    #@6c5
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@6c8
    .line 10729
    :goto_26
    move-object/from16 v0, v46

    #@6ca
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6cc
    if-eqz v4, :cond_2b

    #@6ce
    .line 10730
    const/4 v4, 0x1

    #@6cf
    move-object/from16 v0, p1

    #@6d1
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@6d4
    .line 10731
    move-object/from16 v0, v46

    #@6d6
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6d8
    move-object/from16 v0, p1

    #@6da
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@6dd
    .line 10735
    :goto_27
    move-object/from16 v0, v46

    #@6df
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6e1
    if-eqz v4, :cond_2c

    #@6e3
    .line 10736
    const/4 v4, 0x1

    #@6e4
    move-object/from16 v0, p1

    #@6e6
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@6e9
    .line 10737
    move-object/from16 v0, v46

    #@6eb
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@6ed
    move-object/from16 v0, p1

    #@6ef
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@6f2
    .line 10714
    :goto_28
    add-int/lit8 v29, v29, 0x1

    #@6f4
    goto :goto_24

    #@6f5
    .line 10721
    :cond_29
    const/4 v4, 0x0

    #@6f6
    move-object/from16 v0, p1

    #@6f8
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@6fb
    goto :goto_25

    #@6fc
    .line 10727
    :cond_2a
    const/4 v4, 0x0

    #@6fd
    move-object/from16 v0, p1

    #@6ff
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@702
    goto :goto_26

    #@703
    .line 10733
    :cond_2b
    const/4 v4, 0x0

    #@704
    move-object/from16 v0, p1

    #@706
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@709
    goto :goto_27

    #@70a
    .line 10739
    :cond_2c
    const/4 v4, 0x0

    #@70b
    move-object/from16 v0, p1

    #@70d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@710
    goto :goto_28

    #@711
    .line 10743
    .end local v46    # "wl":Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;
    :cond_2d
    move-object/from16 v0, v44

    #@713
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSyncStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    #@715
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    #@718
    move-result-object v40

    #@719
    .line 10744
    .local v40, "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    invoke-virtual/range {v40 .. v40}, Landroid/util/ArrayMap;->size()I

    #@71c
    move-result v13

    #@71d
    .line 10745
    .local v13, "NS":I
    move-object/from16 v0, p1

    #@71f
    invoke-virtual {v0, v13}, Landroid/os/Parcel;->writeInt(I)V

    #@722
    .line 10746
    const/16 v26, 0x0

    #@724
    .local v26, "is":I
    :goto_29
    move/from16 v0, v26

    #@726
    if-ge v0, v13, :cond_2e

    #@728
    .line 10747
    move-object/from16 v0, v40

    #@72a
    move/from16 v1, v26

    #@72c
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    #@72f
    move-result-object v4

    #@730
    check-cast v4, Ljava/lang/String;

    #@732
    move-object/from16 v0, p1

    #@734
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@737
    .line 10748
    move-object/from16 v0, v40

    #@739
    move/from16 v1, v26

    #@73b
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    #@73e
    move-result-object v4

    #@73f
    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@741
    move-object/from16 v0, p1

    #@743
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@746
    .line 10746
    add-int/lit8 v26, v26, 0x1

    #@748
    goto :goto_29

    #@749
    .line 10751
    :cond_2e
    move-object/from16 v0, v44

    #@74b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    #@74d
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    #@750
    move-result-object v31

    #@751
    .line 10752
    .local v31, "jobStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    invoke-virtual/range {v31 .. v31}, Landroid/util/ArrayMap;->size()I

    #@754
    move-result v10

    #@755
    .line 10753
    .local v10, "NJ":I
    move-object/from16 v0, p1

    #@757
    invoke-virtual {v0, v10}, Landroid/os/Parcel;->writeInt(I)V

    #@75a
    .line 10754
    const/16 v24, 0x0

    #@75c
    .local v24, "ij":I
    :goto_2a
    move/from16 v0, v24

    #@75e
    if-ge v0, v10, :cond_2f

    #@760
    .line 10755
    move-object/from16 v0, v31

    #@762
    move/from16 v1, v24

    #@764
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    #@767
    move-result-object v4

    #@768
    check-cast v4, Ljava/lang/String;

    #@76a
    move-object/from16 v0, p1

    #@76c
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@76f
    .line 10756
    move-object/from16 v0, v31

    #@771
    move/from16 v1, v24

    #@773
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    #@776
    move-result-object v4

    #@777
    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@779
    move-object/from16 v0, p1

    #@77b
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@77e
    .line 10754
    add-int/lit8 v24, v24, 0x1

    #@780
    goto :goto_2a

    #@781
    .line 10759
    :cond_2f
    move-object/from16 v0, v44

    #@783
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    #@785
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@788
    move-result v14

    #@789
    .line 10760
    .local v14, "NSE":I
    move-object/from16 v0, p1

    #@78b
    invoke-virtual {v0, v14}, Landroid/os/Parcel;->writeInt(I)V

    #@78e
    .line 10761
    const/16 v27, 0x0

    #@790
    .local v27, "ise":I
    :goto_2b
    move/from16 v0, v27

    #@792
    if-ge v0, v14, :cond_31

    #@794
    .line 10762
    move-object/from16 v0, v44

    #@796
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    #@798
    move/from16 v0, v27

    #@79a
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    #@79d
    move-result v4

    #@79e
    move-object/from16 v0, p1

    #@7a0
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@7a3
    .line 10763
    move-object/from16 v0, v44

    #@7a5
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    #@7a7
    move/from16 v0, v27

    #@7a9
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@7ac
    move-result-object v36

    #@7ad
    check-cast v36, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;

    #@7af
    .line 10764
    .local v36, "se":Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;
    move-object/from16 v0, v36

    #@7b1
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@7b3
    if-eqz v4, :cond_30

    #@7b5
    .line 10765
    const/4 v4, 0x1

    #@7b6
    move-object/from16 v0, p1

    #@7b8
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@7bb
    .line 10766
    move-object/from16 v0, v36

    #@7bd
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@7bf
    move-object/from16 v0, p1

    #@7c1
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    #@7c4
    .line 10761
    :goto_2c
    add-int/lit8 v27, v27, 0x1

    #@7c6
    goto :goto_2b

    #@7c7
    .line 10768
    :cond_30
    const/4 v4, 0x0

    #@7c8
    move-object/from16 v0, p1

    #@7ca
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@7cd
    goto :goto_2c

    #@7ce
    .line 10772
    .end local v36    # "se":Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;
    :cond_31
    move-object/from16 v0, v44

    #@7d0
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    #@7d2
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    #@7d5
    move-result v11

    #@7d6
    .line 10773
    .local v11, "NP":I
    move-object/from16 v0, p1

    #@7d8
    invoke-virtual {v0, v11}, Landroid/os/Parcel;->writeInt(I)V

    #@7db
    .line 10774
    const/16 v25, 0x0

    #@7dd
    .local v25, "ip":I
    :goto_2d
    move/from16 v0, v25

    #@7df
    if-ge v0, v11, :cond_32

    #@7e1
    .line 10775
    move-object/from16 v0, v44

    #@7e3
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    #@7e5
    move/from16 v0, v25

    #@7e7
    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    #@7ea
    move-result-object v4

    #@7eb
    check-cast v4, Ljava/lang/String;

    #@7ed
    move-object/from16 v0, p1

    #@7ef
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@7f2
    .line 10776
    move-object/from16 v0, v44

    #@7f4
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    #@7f6
    move/from16 v0, v25

    #@7f8
    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    #@7fb
    move-result-object v35

    #@7fc
    check-cast v35, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    #@7fe
    .line 10777
    .local v35, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    move-object/from16 v0, v35

    #@800
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mUserTime:J

    #@802
    move-object/from16 v0, p1

    #@804
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@807
    .line 10778
    move-object/from16 v0, v35

    #@809
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mSystemTime:J

    #@80b
    move-object/from16 v0, p1

    #@80d
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@810
    .line 10779
    move-object/from16 v0, v35

    #@812
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mForegroundTime:J

    #@814
    move-object/from16 v0, p1

    #@816
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@819
    .line 10780
    move-object/from16 v0, v35

    #@81b
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mStarts:I

    #@81d
    move-object/from16 v0, p1

    #@81f
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@822
    .line 10781
    move-object/from16 v0, v35

    #@824
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    #@826
    move-object/from16 v0, p1

    #@828
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@82b
    .line 10782
    move-object/from16 v0, v35

    #@82d
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    #@82f
    move-object/from16 v0, p1

    #@831
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@834
    .line 10783
    move-object/from16 v0, v35

    #@836
    move-object/from16 v1, p1

    #@838
    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->writeExcessivePowerToParcelLocked(Landroid/os/Parcel;)V

    #@83b
    .line 10774
    add-int/lit8 v25, v25, 0x1

    #@83d
    goto :goto_2d

    #@83e
    .line 10786
    .end local v35    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    :cond_32
    move-object/from16 v0, v44

    #@840
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    #@842
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    #@845
    move-result v11

    #@846
    .line 10787
    move-object/from16 v0, p1

    #@848
    invoke-virtual {v0, v11}, Landroid/os/Parcel;->writeInt(I)V

    #@84b
    .line 10788
    if-lez v11, :cond_35

    #@84d
    .line 10790
    move-object/from16 v0, v44

    #@84f
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    #@851
    invoke-virtual {v4}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    #@854
    move-result-object v4

    #@855
    .line 10789
    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@858
    move-result-object v22

    #@859
    :cond_33
    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->hasNext()Z

    #@85c
    move-result v4

    #@85d
    if-eqz v4, :cond_35

    #@85f
    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@862
    move-result-object v21

    #@863
    check-cast v21, Ljava/util/Map$Entry;

    #@865
    .line 10791
    .local v21, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    invoke-interface/range {v21 .. v21}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@868
    move-result-object v4

    #@869
    check-cast v4, Ljava/lang/String;

    #@86b
    move-object/from16 v0, p1

    #@86d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@870
    .line 10792
    invoke-interface/range {v21 .. v21}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@873
    move-result-object v34

    #@874
    check-cast v34, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    #@876
    .line 10793
    .local v34, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    move-object/from16 v0, v34

    #@878
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    #@87a
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    #@87d
    move-result v17

    #@87e
    .line 10794
    .local v17, "NWA":I
    move-object/from16 v0, p1

    #@880
    move/from16 v1, v17

    #@882
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@885
    .line 10795
    const/16 v30, 0x0

    #@887
    .local v30, "iwa":I
    :goto_2e
    move/from16 v0, v30

    #@889
    move/from16 v1, v17

    #@88b
    if-ge v0, v1, :cond_34

    #@88d
    .line 10796
    move-object/from16 v0, v34

    #@88f
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    #@891
    move/from16 v0, v30

    #@893
    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    #@896
    move-result-object v4

    #@897
    check-cast v4, Ljava/lang/String;

    #@899
    move-object/from16 v0, p1

    #@89b
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@89e
    .line 10797
    move-object/from16 v0, v34

    #@8a0
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    #@8a2
    move/from16 v0, v30

    #@8a4
    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    #@8a7
    move-result-object v4

    #@8a8
    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$Counter;

    #@8aa
    move-object/from16 v0, p1

    #@8ac
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    #@8af
    .line 10795
    add-int/lit8 v30, v30, 0x1

    #@8b1
    goto :goto_2e

    #@8b2
    .line 10799
    :cond_34
    move-object/from16 v0, v34

    #@8b4
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    #@8b6
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    #@8b9
    move-result v13

    #@8ba
    .line 10800
    move-object/from16 v0, p1

    #@8bc
    invoke-virtual {v0, v13}, Landroid/os/Parcel;->writeInt(I)V

    #@8bf
    .line 10801
    const/16 v26, 0x0

    #@8c1
    :goto_2f
    move/from16 v0, v26

    #@8c3
    if-ge v0, v13, :cond_33

    #@8c5
    .line 10802
    move-object/from16 v0, v34

    #@8c7
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    #@8c9
    move/from16 v0, v26

    #@8cb
    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    #@8ce
    move-result-object v4

    #@8cf
    check-cast v4, Ljava/lang/String;

    #@8d1
    move-object/from16 v0, p1

    #@8d3
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@8d6
    .line 10803
    move-object/from16 v0, v34

    #@8d8
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    #@8da
    move/from16 v0, v26

    #@8dc
    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    #@8df
    move-result-object v37

    #@8e0
    check-cast v37, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    #@8e2
    .line 10805
    .local v37, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    move-object/from16 v0, p0

    #@8e4
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@8e6
    invoke-virtual {v4, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    #@8e9
    move-result-wide v4

    #@8ea
    .line 10804
    move-object/from16 v0, v37

    #@8ec
    invoke-virtual {v0, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getStartTimeToNowLocked(J)J

    #@8ef
    move-result-wide v42

    #@8f0
    .line 10806
    .local v42, "time":J
    move-object/from16 v0, p1

    #@8f2
    move-wide/from16 v1, v42

    #@8f4
    invoke-virtual {v0, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    #@8f7
    .line 10807
    move-object/from16 v0, v37

    #@8f9
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    #@8fb
    move-object/from16 v0, p1

    #@8fd
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@900
    .line 10808
    move-object/from16 v0, v37

    #@902
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    #@904
    move-object/from16 v0, p1

    #@906
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@909
    .line 10801
    add-int/lit8 v26, v26, 0x1

    #@90b
    goto :goto_2f

    #@90c
    .line 10576
    .end local v17    # "NWA":I
    .end local v21    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    .end local v30    # "iwa":I
    .end local v34    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v37    # "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .end local v42    # "time":J
    :cond_35
    add-int/lit8 v28, v28, 0x1

    #@90e
    goto/16 :goto_e

    #@910
    .line 10445
    .end local v10    # "NJ":I
    .end local v11    # "NP":I
    .end local v13    # "NS":I
    .end local v14    # "NSE":I
    .end local v16    # "NW":I
    .end local v24    # "ij":I
    .end local v25    # "ip":I
    .end local v26    # "is":I
    .end local v27    # "ise":I
    .end local v29    # "iw":I
    .end local v31    # "jobStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    .end local v40    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    .end local v44    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v45    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    :cond_36
    return-void
.end method

.method public writeSyncLocked()V
    .locals 1

    #@0
    .prologue
    .line 9853
    const/4 v0, 0x1

    #@1
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeLocked(Z)V

    #@4
    .line 9852
    return-void
.end method

.method public writeToParcel(Landroid/os/Parcel;I)V
    .locals 1
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "flags"    # I

    #@0
    .prologue
    .line 10986
    const/4 v0, 0x1

    #@1
    invoke-virtual {p0, p1, v0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->writeToParcelLocked(Landroid/os/Parcel;ZI)V

    #@4
    .line 10985
    return-void
.end method

.method writeToParcelLocked(Landroid/os/Parcel;ZI)V
    .locals 26
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclUids"    # Z
    .param p3, "flags"    # I

    #@0
    .prologue
    .line 10996
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    #@3
    .line 11000
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    #@6
    move-result-wide v20

    #@7
    .line 11002
    .local v20, "startClockTime":J
    move-object/from16 v0, p0

    #@9
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@b
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    #@e
    move-result-wide v4

    #@f
    const-wide/16 v24, 0x3e8

    #@11
    mul-long v6, v4, v24

    #@13
    .line 11003
    .local v6, "uSecUptime":J
    move-object/from16 v0, p0

    #@15
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    #@17
    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    #@1a
    move-result-wide v4

    #@1b
    const-wide/16 v24, 0x3e8

    #@1d
    mul-long v8, v4, v24

    #@1f
    .line 11004
    .local v8, "uSecRealtime":J
    move-object/from16 v0, p0

    #@21
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@23
    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    #@26
    move-result-wide v10

    #@27
    .line 11005
    .local v10, "batteryRealtime":J
    move-object/from16 v0, p0

    #@29
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@2b
    invoke-virtual {v4, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    #@2e
    move-result-wide v12

    #@2f
    .line 11007
    .local v12, "batteryScreenOffRealtime":J
    const v4, -0x458a8b8b

    #@32
    move-object/from16 v0, p1

    #@34
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@37
    .line 11009
    const/4 v4, 0x1

    #@38
    const/4 v5, 0x0

    #@39
    move-object/from16 v0, p0

    #@3b
    move-object/from16 v1, p1

    #@3d
    invoke-virtual {v0, v1, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistory(Landroid/os/Parcel;ZZ)V

    #@40
    .line 11011
    move-object/from16 v0, p0

    #@42
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    #@44
    move-object/from16 v0, p1

    #@46
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@49
    .line 11012
    move-object/from16 v0, p1

    #@4b
    move-wide/from16 v1, v20

    #@4d
    invoke-virtual {v0, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    #@50
    .line 11013
    move-object/from16 v0, p0

    #@52
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    #@54
    move-object/from16 v0, p1

    #@56
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@59
    .line 11014
    move-object/from16 v0, p0

    #@5b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    #@5d
    move-object/from16 v0, p1

    #@5f
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@62
    .line 11015
    move-object/from16 v0, p0

    #@64
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    #@66
    move-object/from16 v0, p1

    #@68
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@6b
    .line 11016
    move-object/from16 v0, p0

    #@6d
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    #@6f
    move-object/from16 v0, p1

    #@71
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@74
    .line 11017
    move-object/from16 v0, p0

    #@76
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    #@78
    move-object/from16 v0, p1

    #@7a
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@7d
    .line 11018
    move-object/from16 v0, p0

    #@7f
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    #@81
    move-object/from16 v0, p1

    #@83
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@86
    .line 11019
    move-object/from16 v0, p0

    #@88
    iget-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    #@8a
    if-eqz v4, :cond_0

    #@8c
    const/4 v4, 0x1

    #@8d
    :goto_0
    move-object/from16 v0, p1

    #@8f
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@92
    .line 11020
    move-object/from16 v0, p0

    #@94
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    #@96
    move-object/from16 v0, p1

    #@98
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@9b
    .line 11021
    move-object/from16 v0, p0

    #@9d
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@9f
    move-object/from16 v5, p1

    #@a1
    invoke-virtual/range {v4 .. v9}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeToParcel(Landroid/os/Parcel;JJ)V

    #@a4
    .line 11022
    move-object/from16 v0, p0

    #@a6
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    #@a8
    move-object/from16 v5, p1

    #@aa
    invoke-virtual/range {v4 .. v9}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeToParcel(Landroid/os/Parcel;JJ)V

    #@ad
    .line 11024
    move-object/from16 v0, p0

    #@af
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@b1
    move-object/from16 v0, p1

    #@b3
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@b6
    .line 11025
    const/16 v16, 0x0

    #@b8
    .local v16, "i":I
    :goto_1
    const/4 v4, 0x5

    #@b9
    move/from16 v0, v16

    #@bb
    if-ge v0, v4, :cond_1

    #@bd
    .line 11026
    move-object/from16 v0, p0

    #@bf
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@c1
    aget-object v4, v4, v16

    #@c3
    move-object/from16 v0, p1

    #@c5
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@c8
    .line 11025
    add-int/lit8 v16, v16, 0x1

    #@ca
    goto :goto_1

    #@cb
    .line 11019
    .end local v16    # "i":I
    :cond_0
    const/4 v4, 0x0

    #@cc
    goto :goto_0

    #@cd
    .line 11028
    .restart local v16    # "i":I
    :cond_1
    move-object/from16 v0, p0

    #@cf
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@d1
    move-object/from16 v0, p1

    #@d3
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@d6
    .line 11029
    move-object/from16 v0, p0

    #@d8
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@da
    move-object/from16 v0, p1

    #@dc
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@df
    .line 11030
    move-object/from16 v0, p0

    #@e1
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    #@e3
    move-object/from16 v0, p1

    #@e5
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@e8
    .line 11031
    move-object/from16 v0, p0

    #@ea
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    #@ec
    move-object/from16 v0, p1

    #@ee
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@f1
    .line 11032
    move-object/from16 v0, p0

    #@f3
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@f5
    move-object/from16 v0, p1

    #@f7
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@fa
    .line 11033
    move-object/from16 v0, p0

    #@fc
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@fe
    move-object/from16 v0, p1

    #@100
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@103
    .line 11034
    move-object/from16 v0, p0

    #@105
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@107
    move-object/from16 v0, p1

    #@109
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@10c
    .line 11035
    move-object/from16 v0, p0

    #@10e
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@110
    move-object/from16 v0, p1

    #@112
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@115
    .line 11036
    move-object/from16 v0, p0

    #@117
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@119
    move-object/from16 v0, p1

    #@11b
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@11e
    .line 11037
    const/16 v16, 0x0

    #@120
    :goto_2
    const/4 v4, 0x5

    #@121
    move/from16 v0, v16

    #@123
    if-ge v0, v4, :cond_2

    #@125
    .line 11038
    move-object/from16 v0, p0

    #@127
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@129
    aget-object v4, v4, v16

    #@12b
    move-object/from16 v0, p1

    #@12d
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@130
    .line 11037
    add-int/lit8 v16, v16, 0x1

    #@132
    goto :goto_2

    #@133
    .line 11040
    :cond_2
    move-object/from16 v0, p0

    #@135
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@137
    move-object/from16 v0, p1

    #@139
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@13c
    .line 11041
    const/16 v16, 0x0

    #@13e
    :goto_3
    const/16 v4, 0x11

    #@140
    move/from16 v0, v16

    #@142
    if-ge v0, v4, :cond_3

    #@144
    .line 11042
    move-object/from16 v0, p0

    #@146
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@148
    aget-object v4, v4, v16

    #@14a
    move-object/from16 v0, p1

    #@14c
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@14f
    .line 11041
    add-int/lit8 v16, v16, 0x1

    #@151
    goto :goto_3

    #@152
    .line 11044
    :cond_3
    const/16 v16, 0x0

    #@154
    :goto_4
    const/4 v4, 0x6

    #@155
    move/from16 v0, v16

    #@157
    if-ge v0, v4, :cond_4

    #@159
    .line 11045
    move-object/from16 v0, p0

    #@15b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@15d
    aget-object v4, v4, v16

    #@15f
    move-object/from16 v0, p1

    #@161
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    #@164
    .line 11046
    move-object/from16 v0, p0

    #@166
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@168
    aget-object v4, v4, v16

    #@16a
    move-object/from16 v0, p1

    #@16c
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    #@16f
    .line 11044
    add-int/lit8 v16, v16, 0x1

    #@171
    goto :goto_4

    #@172
    .line 11048
    :cond_4
    move-object/from16 v0, p0

    #@174
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@176
    move-object/from16 v0, p1

    #@178
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@17b
    .line 11049
    move-object/from16 v0, p0

    #@17d
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@17f
    move-object/from16 v0, p1

    #@181
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@184
    .line 11050
    move-object/from16 v0, p0

    #@186
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@188
    move-object/from16 v0, p1

    #@18a
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    #@18d
    .line 11051
    move-object/from16 v0, p0

    #@18f
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@191
    move-object/from16 v0, p1

    #@193
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    #@196
    .line 11052
    move-object/from16 v0, p0

    #@198
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@19a
    move-object/from16 v0, p1

    #@19c
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    #@19f
    .line 11053
    move-object/from16 v0, p0

    #@1a1
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1a3
    move-object/from16 v0, p1

    #@1a5
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@1a8
    .line 11054
    move-object/from16 v0, p0

    #@1aa
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1ac
    move-object/from16 v0, p1

    #@1ae
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@1b1
    .line 11055
    const/16 v16, 0x0

    #@1b3
    :goto_5
    const/16 v4, 0x8

    #@1b5
    move/from16 v0, v16

    #@1b7
    if-ge v0, v4, :cond_5

    #@1b9
    .line 11056
    move-object/from16 v0, p0

    #@1bb
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1bd
    aget-object v4, v4, v16

    #@1bf
    move-object/from16 v0, p1

    #@1c1
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@1c4
    .line 11055
    add-int/lit8 v16, v16, 0x1

    #@1c6
    goto :goto_5

    #@1c7
    .line 11058
    :cond_5
    const/16 v16, 0x0

    #@1c9
    :goto_6
    const/16 v4, 0xd

    #@1cb
    move/from16 v0, v16

    #@1cd
    if-ge v0, v4, :cond_6

    #@1cf
    .line 11059
    move-object/from16 v0, p0

    #@1d1
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1d3
    aget-object v4, v4, v16

    #@1d5
    move-object/from16 v0, p1

    #@1d7
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@1da
    .line 11058
    add-int/lit8 v16, v16, 0x1

    #@1dc
    goto :goto_6

    #@1dd
    .line 11061
    :cond_6
    const/16 v16, 0x0

    #@1df
    :goto_7
    const/4 v4, 0x5

    #@1e0
    move/from16 v0, v16

    #@1e2
    if-ge v0, v4, :cond_7

    #@1e4
    .line 11062
    move-object/from16 v0, p0

    #@1e6
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@1e8
    aget-object v4, v4, v16

    #@1ea
    move-object/from16 v0, p1

    #@1ec
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@1ef
    .line 11061
    add-int/lit8 v16, v16, 0x1

    #@1f1
    goto :goto_7

    #@1f2
    .line 11064
    :cond_7
    move-object/from16 v0, p0

    #@1f4
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@1f6
    const/4 v5, 0x0

    #@1f7
    move-object/from16 v0, p1

    #@1f9
    invoke-virtual {v4, v0, v5}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    #@1fc
    .line 11065
    move-object/from16 v0, p0

    #@1fe
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@200
    const/4 v5, 0x0

    #@201
    move-object/from16 v0, p1

    #@203
    invoke-virtual {v4, v0, v5}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    #@206
    .line 11066
    move-object/from16 v0, p0

    #@208
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    #@20a
    const/4 v5, 0x0

    #@20b
    move-object/from16 v0, p1

    #@20d
    invoke-virtual {v4, v0, v5}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    #@210
    .line 11067
    move-object/from16 v0, p0

    #@212
    iget-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    #@214
    if-eqz v4, :cond_8

    #@216
    const/4 v4, 0x1

    #@217
    :goto_8
    move-object/from16 v0, p1

    #@219
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@21c
    .line 11068
    move-object/from16 v0, p0

    #@21e
    iget-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    #@220
    if-eqz v4, :cond_9

    #@222
    const/4 v4, 0x1

    #@223
    :goto_9
    move-object/from16 v0, p1

    #@225
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@228
    .line 11069
    move-object/from16 v0, p0

    #@22a
    iget-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    #@22c
    if-eqz v4, :cond_a

    #@22e
    const/4 v4, 0x1

    #@22f
    :goto_a
    move-object/from16 v0, p1

    #@231
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@234
    .line 11071
    move-object/from16 v0, p0

    #@236
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    #@238
    move-object/from16 v0, p1

    #@23a
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@23d
    .line 11072
    move-object/from16 v0, p0

    #@23f
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    #@241
    move-object/from16 v0, p1

    #@243
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@246
    .line 11073
    move-object/from16 v0, p0

    #@248
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUnpluggedNumConnectivityChange:I

    #@24a
    move-object/from16 v0, p1

    #@24c
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@24f
    .line 11074
    move-object/from16 v0, p0

    #@251
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@253
    move-object/from16 v0, p1

    #@255
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@258
    .line 11075
    move-object/from16 v0, p0

    #@25a
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@25c
    move-object/from16 v0, p1

    #@25e
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@261
    .line 11076
    move-object/from16 v0, p0

    #@263
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    #@265
    move-object/from16 v0, p1

    #@267
    invoke-virtual {v4, v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@26a
    .line 11077
    move-object/from16 v0, p0

    #@26c
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    #@26e
    move-object/from16 v0, p1

    #@270
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@273
    .line 11078
    move-object/from16 v0, p0

    #@275
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    #@277
    move-object/from16 v0, p1

    #@279
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@27c
    .line 11079
    move-object/from16 v0, p0

    #@27e
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    #@280
    move-object/from16 v0, p1

    #@282
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@285
    .line 11080
    move-object/from16 v0, p0

    #@287
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    #@289
    move-object/from16 v0, p1

    #@28b
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@28e
    .line 11081
    move-object/from16 v0, p0

    #@290
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    #@292
    move-object/from16 v0, p1

    #@294
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@297
    .line 11082
    move-object/from16 v0, p0

    #@299
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    #@29b
    move-object/from16 v0, p1

    #@29d
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2a0
    .line 11083
    move-object/from16 v0, p0

    #@2a2
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    #@2a4
    move-object/from16 v0, p1

    #@2a6
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2a9
    .line 11084
    move-object/from16 v0, p0

    #@2ab
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    #@2ad
    move-object/from16 v0, p1

    #@2af
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2b2
    .line 11085
    move-object/from16 v0, p0

    #@2b4
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    #@2b6
    move-object/from16 v0, p1

    #@2b8
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2bb
    .line 11086
    move-object/from16 v0, p0

    #@2bd
    iget v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    #@2bf
    move-object/from16 v0, p1

    #@2c1
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@2c4
    .line 11087
    move-object/from16 v0, p0

    #@2c6
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@2c8
    move-object/from16 v0, p1

    #@2ca
    invoke-virtual {v4, v0}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    #@2cd
    .line 11088
    move-object/from16 v0, p0

    #@2cf
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    #@2d1
    move-object/from16 v0, p1

    #@2d3
    invoke-virtual {v4, v0}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    #@2d6
    .line 11089
    move-object/from16 v0, p0

    #@2d8
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2da
    move-object/from16 v0, p1

    #@2dc
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    #@2df
    .line 11090
    move-object/from16 v0, p0

    #@2e1
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    #@2e3
    move-object/from16 v0, p1

    #@2e5
    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    #@2e8
    .line 11091
    move-object/from16 v0, p0

    #@2ea
    iget-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    #@2ec
    move-object/from16 v0, p1

    #@2ee
    invoke-virtual {v0, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    #@2f1
    .line 11093
    if-eqz p2, :cond_e

    #@2f3
    .line 11094
    move-object/from16 v0, p0

    #@2f5
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@2f7
    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    #@2fa
    move-result v4

    #@2fb
    move-object/from16 v0, p1

    #@2fd
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@300
    .line 11095
    move-object/from16 v0, p0

    #@302
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    #@304
    invoke-virtual {v4}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@307
    move-result-object v4

    #@308
    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@30b
    move-result-object v15

    #@30c
    .local v15, "ent$iterator":Ljava/util/Iterator;
    :goto_b
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    #@30f
    move-result v4

    #@310
    if-eqz v4, :cond_c

    #@312
    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@315
    move-result-object v14

    #@316
    check-cast v14, Ljava/util/Map$Entry;

    #@318
    .line 11096
    .local v14, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v14}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@31b
    move-result-object v17

    #@31c
    check-cast v17, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@31e
    .line 11097
    .local v17, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v17, :cond_b

    #@320
    .line 11098
    const/4 v4, 0x1

    #@321
    move-object/from16 v0, p1

    #@323
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@326
    .line 11099
    invoke-interface {v14}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@329
    move-result-object v4

    #@32a
    check-cast v4, Ljava/lang/String;

    #@32c
    move-object/from16 v0, p1

    #@32e
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@331
    .line 11100
    move-object/from16 v0, v17

    #@333
    move-object/from16 v1, p1

    #@335
    invoke-virtual {v0, v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@338
    goto :goto_b

    #@339
    .line 11067
    .end local v14    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v15    # "ent$iterator":Ljava/util/Iterator;
    .end local v17    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_8
    const/4 v4, 0x0

    #@33a
    goto/16 :goto_8

    #@33c
    .line 11068
    :cond_9
    const/4 v4, 0x0

    #@33d
    goto/16 :goto_9

    #@33f
    .line 11069
    :cond_a
    const/4 v4, 0x0

    #@340
    goto/16 :goto_a

    #@342
    .line 11102
    .restart local v14    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .restart local v15    # "ent$iterator":Ljava/util/Iterator;
    .restart local v17    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_b
    const/4 v4, 0x0

    #@343
    move-object/from16 v0, p1

    #@345
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@348
    goto :goto_b

    #@349
    .line 11105
    .end local v14    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v17    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_c
    move-object/from16 v0, p0

    #@34b
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@34d
    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    #@350
    move-result v4

    #@351
    move-object/from16 v0, p1

    #@353
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@356
    .line 11106
    move-object/from16 v0, p0

    #@358
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    #@35a
    invoke-virtual {v4}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    #@35d
    move-result-object v4

    #@35e
    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    #@361
    move-result-object v15

    #@362
    :goto_c
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    #@365
    move-result v4

    #@366
    if-eqz v4, :cond_f

    #@368
    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    #@36b
    move-result-object v14

    #@36c
    check-cast v14, Ljava/util/Map$Entry;

    #@36e
    .line 11107
    .restart local v14    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v14}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    #@371
    move-result-object v19

    #@372
    check-cast v19, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    #@374
    .line 11108
    .local v19, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v19, :cond_d

    #@376
    .line 11109
    const/4 v4, 0x1

    #@377
    move-object/from16 v0, p1

    #@379
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@37c
    .line 11110
    invoke-interface {v14}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    #@37f
    move-result-object v4

    #@380
    check-cast v4, Ljava/lang/String;

    #@382
    move-object/from16 v0, p1

    #@384
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    #@387
    .line 11111
    move-object/from16 v0, v19

    #@389
    move-object/from16 v1, p1

    #@38b
    invoke-virtual {v0, v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    #@38e
    goto :goto_c

    #@38f
    .line 11113
    :cond_d
    const/4 v4, 0x0

    #@390
    move-object/from16 v0, p1

    #@392
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@395
    goto :goto_c

    #@396
    .line 11117
    .end local v14    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v15    # "ent$iterator":Ljava/util/Iterator;
    .end local v19    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_e
    const/4 v4, 0x0

    #@397
    move-object/from16 v0, p1

    #@399
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@39c
    .line 11120
    :cond_f
    if-eqz p2, :cond_10

    #@39e
    .line 11121
    move-object/from16 v0, p0

    #@3a0
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@3a2
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    #@3a5
    move-result v18

    #@3a6
    .line 11122
    .local v18, "size":I
    move-object/from16 v0, p1

    #@3a8
    move/from16 v1, v18

    #@3aa
    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    #@3ad
    .line 11123
    const/16 v16, 0x0

    #@3af
    :goto_d
    move/from16 v0, v16

    #@3b1
    move/from16 v1, v18

    #@3b3
    if-ge v0, v1, :cond_11

    #@3b5
    .line 11124
    move-object/from16 v0, p0

    #@3b7
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@3b9
    move/from16 v0, v16

    #@3bb
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    #@3be
    move-result v4

    #@3bf
    move-object/from16 v0, p1

    #@3c1
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@3c4
    .line 11125
    move-object/from16 v0, p0

    #@3c6
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    #@3c8
    move/from16 v0, v16

    #@3ca
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    #@3cd
    move-result-object v22

    #@3ce
    check-cast v22, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    #@3d0
    .line 11127
    .local v22, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v0, v22

    #@3d2
    move-object/from16 v1, p1

    #@3d4
    invoke-virtual {v0, v1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->writeToParcelLocked(Landroid/os/Parcel;J)V

    #@3d7
    .line 11123
    add-int/lit8 v16, v16, 0x1

    #@3d9
    goto :goto_d

    #@3da
    .line 11130
    .end local v18    # "size":I
    .end local v22    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_10
    const/4 v4, 0x0

    #@3db
    move-object/from16 v0, p1

    #@3dd
    invoke-virtual {v0, v4}, Landroid/os/Parcel;->writeInt(I)V

    #@3e0
    .line 10994
    :cond_11
    return-void
.end method

.method public writeToParcelWithoutUids(Landroid/os/Parcel;I)V
    .locals 1
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "flags"    # I

    #@0
    .prologue
    .line 10990
    const/4 v0, 0x0

    #@1
    invoke-virtual {p0, p1, v0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->writeToParcelLocked(Landroid/os/Parcel;ZI)V

    #@4
    .line 10989
    return-void
.end method
